{"modules":[{"ast":{"type":"Program","start":0,"end":4302,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","start":12,"end":4302}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11593,"body":[{"type":"ImportDeclaration","start":0,"end":53,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"collection"},"local":{"type":"Identifier","start":9,"end":19,"name":"collection"}},{"type":"ImportSpecifier","start":21,"end":24,"imported":{"type":"Identifier","start":21,"end":24,"name":"doc"},"local":{"type":"Identifier","start":21,"end":24,"name":"doc"}}],"source":{"type":"Literal","start":32,"end":52,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":156,"end":463,"declaration":{"type":"FunctionDeclaration","start":163,"end":463,"id":{"type":"Identifier","start":172,"end":186,"name":"getRefFromPath"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":187,"end":191,"name":"path"},{"type":"Identifier","start":193,"end":202,"name":"firestore"}],"body":{"type":"BlockStatement","start":204,"end":463,"body":[{"type":"VariableDeclaration","start":211,"end":260,"declarations":[{"type":"VariableDeclarator","start":217,"end":259,"id":{"type":"Identifier","start":217,"end":234,"name":"pathSegmentAmount"},"init":{"type":"MemberExpression","start":237,"end":259,"object":{"type":"CallExpression","start":237,"end":252,"callee":{"type":"MemberExpression","start":237,"end":247,"object":{"type":"Identifier","start":237,"end":241,"name":"path"},"property":{"type":"Identifier","start":242,"end":247,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":248,"end":251,"value":"/","raw":"'/'"}],"optional":false},"property":{"type":"Identifier","start":253,"end":259,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":266,"end":460,"test":{"type":"BinaryExpression","start":270,"end":297,"left":{"type":"BinaryExpression","start":270,"end":291,"left":{"type":"Identifier","start":270,"end":287,"name":"pathSegmentAmount"},"operator":"%","right":{"type":"Literal","start":290,"end":291,"value":2,"raw":"2"}},"operator":"===","right":{"type":"Literal","start":296,"end":297,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":299,"end":370,"body":[{"type":"ReturnStatement","start":335,"end":363,"argument":{"type":"CallExpression","start":342,"end":362,"callee":{"type":"Identifier","start":342,"end":345,"name":"doc"},"arguments":[{"type":"Identifier","start":346,"end":355,"name":"firestore"},{"type":"Identifier","start":357,"end":361,"name":"path"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":381,"end":460,"body":[{"type":"ReturnStatement","start":418,"end":453,"argument":{"type":"CallExpression","start":425,"end":452,"callee":{"type":"Identifier","start":425,"end":435,"name":"collection"},"arguments":[{"type":"Identifier","start":436,"end":445,"name":"firestore"},{"type":"Identifier","start":447,"end":451,"name":"path"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":465,"end":653,"declaration":{"type":"FunctionDeclaration","start":472,"end":653,"id":{"type":"Identifier","start":481,"end":497,"name":"getSubCollection"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":498,"end":504,"name":"docRef"},{"type":"Identifier","start":506,"end":520,"name":"collectionName"}],"body":{"type":"BlockStatement","start":522,"end":653,"body":[{"type":"VariableDeclaration","start":529,"end":592,"declarations":[{"type":"VariableDeclarator","start":535,"end":591,"id":{"type":"Identifier","start":535,"end":549,"name":"collectionPath"},"init":{"type":"CallExpression","start":552,"end":591,"callee":{"type":"MemberExpression","start":552,"end":570,"object":{"type":"MemberExpression","start":552,"end":563,"object":{"type":"Identifier","start":552,"end":558,"name":"docRef"},"property":{"type":"Identifier","start":559,"end":563,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":564,"end":570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":571,"end":574,"value":"/","raw":"'/'"},{"type":"Identifier","start":576,"end":590,"name":"collectionName"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":598,"end":650,"argument":{"type":"CallExpression","start":605,"end":649,"callee":{"type":"Identifier","start":605,"end":615,"name":"collection"},"arguments":[{"type":"MemberExpression","start":616,"end":632,"object":{"type":"Identifier","start":616,"end":622,"name":"docRef"},"property":{"type":"Identifier","start":623,"end":632,"name":"firestore"},"computed":false,"optional":false},{"type":"Identifier","start":634,"end":648,"name":"collectionPath"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":655,"end":776,"declaration":{"type":"FunctionDeclaration","start":662,"end":776,"id":{"type":"Identifier","start":671,"end":686,"name":"getDocRefWithId"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":687,"end":700,"name":"collectionRef"},{"type":"Identifier","start":702,"end":704,"name":"id"}],"body":{"type":"BlockStatement","start":706,"end":776,"body":[{"type":"ReturnStatement","start":713,"end":773,"argument":{"type":"CallExpression","start":720,"end":772,"callee":{"type":"Identifier","start":720,"end":723,"name":"doc"},"arguments":[{"type":"MemberExpression","start":724,"end":747,"object":{"type":"Identifier","start":724,"end":737,"name":"collectionRef"},"property":{"type":"Identifier","start":738,"end":747,"name":"firestore"},"computed":false,"optional":false},{"type":"MemberExpression","start":749,"end":767,"object":{"type":"Identifier","start":749,"end":762,"name":"collectionRef"},"property":{"type":"Identifier","start":763,"end":767,"name":"path"},"computed":false,"optional":false},{"type":"Identifier","start":769,"end":771,"name":"id"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":961,"end":1236,"declaration":{"type":"FunctionDeclaration","start":968,"end":1236,"id":{"type":"Identifier","start":977,"end":990,"name":"addDataToItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":991,"end":995,"name":"item"},{"type":"Identifier","start":997,"end":1006,"name":"dataToAdd"},{"type":"AssignmentPattern","start":1008,"end":1023,"left":{"type":"Identifier","start":1008,"end":1015,"name":"inplace"},"right":{"type":"Literal","start":1018,"end":1023,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":1025,"end":1236,"body":[{"type":"IfStatement","start":1032,"end":1233,"test":{"type":"Identifier","start":1036,"end":1043,"name":"inplace"},"consequent":{"type":"BlockStatement","start":1045,"end":1171,"body":[{"type":"ExpressionStatement","start":1056,"end":1142,"expression":{"type":"CallExpression","start":1056,"end":1141,"callee":{"type":"MemberExpression","start":1056,"end":1089,"object":{"type":"CallExpression","start":1056,"end":1081,"callee":{"type":"MemberExpression","start":1056,"end":1070,"object":{"type":"Identifier","start":1056,"end":1062,"name":"Object"},"property":{"type":"Identifier","start":1063,"end":1070,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1071,"end":1080,"name":"dataToAdd"}],"optional":false},"property":{"type":"Identifier","start":1082,"end":1089,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1090,"end":1140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"ArrayPattern","start":1091,"end":1097,"elements":[{"type":"Identifier","start":1092,"end":1093,"name":"k"},{"type":"Identifier","start":1095,"end":1096,"name":"v"}]}],"body":{"type":"BlockStatement","start":1102,"end":1140,"body":[{"type":"ExpressionStatement","start":1117,"end":1129,"expression":{"type":"AssignmentExpression","start":1117,"end":1128,"operator":"=","left":{"type":"MemberExpression","start":1117,"end":1124,"object":{"type":"Identifier","start":1117,"end":1121,"name":"item"},"property":{"type":"Identifier","start":1122,"end":1123,"name":"k"},"computed":true,"optional":false},"right":{"type":"Identifier","start":1127,"end":1128,"name":"v"}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1152,"end":1164,"argument":{"type":"Identifier","start":1159,"end":1163,"name":"item"}}]},"alternate":{"type":"BlockStatement","start":1182,"end":1233,"body":[{"type":"ReturnStatement","start":1193,"end":1226,"argument":{"type":"ObjectExpression","start":1200,"end":1225,"properties":[{"type":"SpreadElement","start":1202,"end":1209,"argument":{"type":"Identifier","start":1205,"end":1209,"name":"item"}},{"type":"SpreadElement","start":1211,"end":1223,"argument":{"type":"Identifier","start":1214,"end":1223,"name":"dataToAdd"}}]}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1555,"end":1807,"declaration":{"type":"FunctionDeclaration","start":1562,"end":1807,"id":{"type":"Identifier","start":1571,"end":1585,"name":"addCreatedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1586,"end":1590,"name":"item"},{"type":"AssignmentPattern","start":1592,"end":1607,"left":{"type":"Identifier","start":1592,"end":1599,"name":"inplace"},"right":{"type":"Literal","start":1602,"end":1607,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":1609,"end":1633,"left":{"type":"Identifier","start":1609,"end":1620,"name":"createdDate"},"right":{"type":"NewExpression","start":1623,"end":1633,"callee":{"type":"Identifier","start":1627,"end":1631,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":1635,"end":1807,"body":[{"type":"IfStatement","start":1688,"end":1745,"test":{"type":"BinaryExpression","start":1692,"end":1713,"left":{"type":"Literal","start":1692,"end":1705,"value":"createdDate","raw":"'createdDate'"},"operator":"in","right":{"type":"Identifier","start":1709,"end":1713,"name":"item"}},"consequent":{"type":"BlockStatement","start":1715,"end":1745,"body":[{"type":"ReturnStatement","start":1726,"end":1738,"argument":{"type":"Identifier","start":1733,"end":1737,"name":"item"}}]},"alternate":null},{"type":"ReturnStatement","start":1751,"end":1804,"argument":{"type":"CallExpression","start":1758,"end":1803,"callee":{"type":"Identifier","start":1758,"end":1771,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":1772,"end":1776,"name":"item"},{"type":"ObjectExpression","start":1778,"end":1793,"properties":[{"type":"Property","start":1780,"end":1791,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":1780,"end":1791,"name":"createdDate"},"kind":"init","value":{"type":"Identifier","start":1780,"end":1791,"name":"createdDate"}}]},{"type":"Identifier","start":1795,"end":1802,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2062,"end":2208,"declaration":{"type":"FunctionDeclaration","start":2069,"end":2208,"id":{"type":"Identifier","start":2078,"end":2093,"name":"addModifiedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2094,"end":2098,"name":"item"},{"type":"AssignmentPattern","start":2100,"end":2115,"left":{"type":"Identifier","start":2100,"end":2107,"name":"inplace"},"right":{"type":"Literal","start":2110,"end":2115,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":2117,"end":2142,"left":{"type":"Identifier","start":2117,"end":2129,"name":"modifiedDate"},"right":{"type":"NewExpression","start":2132,"end":2142,"callee":{"type":"Identifier","start":2136,"end":2140,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":2144,"end":2208,"body":[{"type":"ReturnStatement","start":2151,"end":2205,"argument":{"type":"CallExpression","start":2158,"end":2204,"callee":{"type":"Identifier","start":2158,"end":2171,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2172,"end":2176,"name":"item"},{"type":"ObjectExpression","start":2178,"end":2194,"properties":[{"type":"Property","start":2180,"end":2192,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2180,"end":2192,"name":"modifiedDate"},"kind":"init","value":{"type":"Identifier","start":2180,"end":2192,"name":"modifiedDate"}}]},{"type":"Identifier","start":2196,"end":2203,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2428,"end":2552,"declaration":{"type":"FunctionDeclaration","start":2435,"end":2552,"id":{"type":"Identifier","start":2444,"end":2456,"name":"addCreatedBy"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2457,"end":2461,"name":"item"},{"type":"Identifier","start":2463,"end":2472,"name":"createdBy"},{"type":"AssignmentPattern","start":2474,"end":2489,"left":{"type":"Identifier","start":2474,"end":2481,"name":"inplace"},"right":{"type":"Literal","start":2484,"end":2489,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":2491,"end":2552,"body":[{"type":"ReturnStatement","start":2498,"end":2549,"argument":{"type":"CallExpression","start":2505,"end":2548,"callee":{"type":"Identifier","start":2505,"end":2518,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2519,"end":2523,"name":"item"},{"type":"ObjectExpression","start":2525,"end":2538,"properties":[{"type":"Property","start":2527,"end":2536,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2527,"end":2536,"name":"createdBy"},"kind":"init","value":{"type":"Identifier","start":2527,"end":2536,"name":"createdBy"}}]},{"type":"Identifier","start":2540,"end":2547,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2823,"end":3205,"declaration":{"type":"FunctionDeclaration","start":2830,"end":3205,"id":{"type":"Identifier","start":2839,"end":2861,"name":"convertTimestampToDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2862,"end":2866,"name":"item"}],"body":{"type":"BlockStatement","start":2868,"end":3205,"body":[{"type":"IfStatement","start":2875,"end":3024,"test":{"type":"CallExpression","start":2879,"end":2913,"callee":{"type":"MemberExpression","start":2879,"end":2898,"object":{"type":"Identifier","start":2879,"end":2883,"name":"item"},"property":{"type":"Identifier","start":2884,"end":2898,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2899,"end":2912,"value":"createdDate","raw":"'createdDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2915,"end":3024,"body":[{"type":"ExpressionStatement","start":2926,"end":2962,"expression":{"type":"AssignmentExpression","start":2926,"end":2961,"operator":"=","left":{"type":"MemberExpression","start":2926,"end":2942,"object":{"type":"Identifier","start":2926,"end":2930,"name":"item"},"property":{"type":"Identifier","start":2931,"end":2942,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2945,"end":2961,"object":{"type":"Identifier","start":2945,"end":2949,"name":"item"},"property":{"type":"Identifier","start":2950,"end":2961,"name":"createdDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2972,"end":3017,"expression":{"type":"AssignmentExpression","start":2972,"end":3016,"operator":"=","left":{"type":"MemberExpression","start":2972,"end":2988,"object":{"type":"Identifier","start":2972,"end":2976,"name":"item"},"property":{"type":"Identifier","start":2977,"end":2988,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":2991,"end":3016,"callee":{"type":"MemberExpression","start":2991,"end":3014,"object":{"type":"MemberExpression","start":2991,"end":3007,"object":{"type":"Identifier","start":2991,"end":2995,"name":"item"},"property":{"type":"Identifier","start":2996,"end":3007,"name":"createdDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3008,"end":3014,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":3030,"end":3184,"test":{"type":"CallExpression","start":3034,"end":3069,"callee":{"type":"MemberExpression","start":3034,"end":3053,"object":{"type":"Identifier","start":3034,"end":3038,"name":"item"},"property":{"type":"Identifier","start":3039,"end":3053,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3054,"end":3068,"value":"modifiedDate","raw":"'modifiedDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3071,"end":3184,"body":[{"type":"ExpressionStatement","start":3082,"end":3120,"expression":{"type":"AssignmentExpression","start":3082,"end":3119,"operator":"=","left":{"type":"MemberExpression","start":3082,"end":3099,"object":{"type":"Identifier","start":3082,"end":3086,"name":"item"},"property":{"type":"Identifier","start":3087,"end":3099,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":3102,"end":3119,"object":{"type":"Identifier","start":3102,"end":3106,"name":"item"},"property":{"type":"Identifier","start":3107,"end":3119,"name":"modifiedDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":3130,"end":3177,"expression":{"type":"AssignmentExpression","start":3130,"end":3176,"operator":"=","left":{"type":"MemberExpression","start":3130,"end":3147,"object":{"type":"Identifier","start":3130,"end":3134,"name":"item"},"property":{"type":"Identifier","start":3135,"end":3147,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3150,"end":3176,"callee":{"type":"MemberExpression","start":3150,"end":3174,"object":{"type":"MemberExpression","start":3150,"end":3167,"object":{"type":"Identifier","start":3150,"end":3154,"name":"item"},"property":{"type":"Identifier","start":3155,"end":3167,"name":"modifiedDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3168,"end":3174,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":3190,"end":3202,"argument":{"type":"Identifier","start":3197,"end":3201,"name":"item"}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2hlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFVBQVUsRUFFVixHQUFHLEVBS0osTUFBTSxvQkFBb0IsQ0FBQztBQUU1QixtR0FBbUc7QUFDbkcsTUFBTSxVQUFVLGNBQWMsQ0FBSSxJQUFZLEVBQUUsU0FBb0I7SUFDbEUsTUFBTSxpQkFBaUIsR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUN6RCxJQUFJLGlCQUFpQixHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSx3QkFBd0I7UUFDekQsT0FBTyxHQUFHLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBeUIsQ0FBQztLQUNyRDtTQUFNLEVBQUUseUJBQXlCO1FBQ2hDLE9BQU8sVUFBVSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQTJCLENBQUM7S0FDOUQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFpRCxNQUE0QixFQUFFLGNBQXNCO0lBQ25JLE1BQU0sY0FBYyxHQUFXLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxjQUFjLENBQUMsQ0FBQztJQUN2RSxPQUFPLFVBQVUsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBMkIsQ0FBQztBQUNoRixDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWUsQ0FBeUIsYUFBcUMsRUFBRSxFQUFVO0lBQ3ZHLE9BQU8sR0FBRyxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDLElBQUksRUFBRSxFQUFFLENBQXlCLENBQUM7QUFDdEYsQ0FBQztBQUVEOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLGFBQWEsQ0FDM0IsSUFBTyxFQUFFLFNBQW1DLEVBQUUsT0FBTyxHQUFHLEtBQUs7SUFFN0QsSUFBSSxPQUFPLEVBQUU7UUFDWCxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDMUMsSUFBaUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUMsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLElBQUksQ0FBQztLQUNiO1NBQU07UUFDTCxPQUFPLEVBQUMsR0FBRyxJQUFJLEVBQUUsR0FBRyxTQUFTLEVBQUMsQ0FBQztLQUNoQztBQUNILENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsY0FBYyxDQUFJLElBQU8sRUFBRSxPQUFPLEdBQUcsS0FBSyxFQUFFLGNBQW9CLElBQUksSUFBSSxFQUFFO0lBQ3hGLHdDQUF3QztJQUN4QyxJQUFJLGFBQWEsSUFBSSxJQUFJLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELE9BQU8sYUFBYSxDQUFDLElBQUksRUFBRSxFQUFDLFdBQVcsRUFBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3JELENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFJLElBQU8sRUFBRSxPQUFPLEdBQUcsS0FBSyxFQUFFLGVBQXFCLElBQUksSUFBSSxFQUFFO0lBQzFGLE9BQU8sYUFBYSxDQUFDLElBQUksRUFBRSxFQUFDLFlBQVksRUFBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3RELENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsWUFBWSxDQUFJLElBQU8sRUFBRSxTQUFtQyxFQUFFLE9BQU8sR0FBRyxLQUFLO0lBRTNGLE9BQU8sYUFBYSxDQUFDLElBQUksRUFBRSxFQUFDLFNBQVMsRUFBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ25ELENBQUM7QUFHRDs7Ozs7Ozs7R0FRRztBQUVILE1BQU0sVUFBVSxzQkFBc0IsQ0FBc0QsSUFBTztJQUNqRyxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLEVBQUU7UUFDdEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBZ0MsQ0FBQztRQUN6RCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDOUM7SUFDRCxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLEVBQUU7UUFDdkMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBaUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDaEQ7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIGNvbGxlY3Rpb24sXHJcbiAgQ29sbGVjdGlvblJlZmVyZW5jZSxcclxuICBkb2MsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIEZpcmVzdG9yZSxcclxuICBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXBcclxufSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqIEhlbHBlciBtZXRob2QgdG8gZ2V0IHJlZmVyZW5jZSBmcm9tIHBhdGgsIHRoZSBwYXRoIGNhbiBiZSBlaXRoZXIgdG8gYSBEb2N1bWVudCBvciBDb2xsZWN0aW9uICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWZGcm9tUGF0aDxBPihwYXRoOiBzdHJpbmcsIGZpcmVzdG9yZTogRmlyZXN0b3JlKTogRG9jdW1lbnRSZWZlcmVuY2U8QT4gfCBDb2xsZWN0aW9uUmVmZXJlbmNlPEE+IHtcclxuICBjb25zdCBwYXRoU2VnbWVudEFtb3VudDogbnVtYmVyID0gcGF0aC5zcGxpdCgnLycpLmxlbmd0aDtcclxuICBpZiAocGF0aFNlZ21lbnRBbW91bnQgJSAyID09PSAwKSB7IC8vIGV2ZW4gbnVtYmVyIG1lYW5zIGRvY1xyXG4gICAgcmV0dXJuIGRvYyhmaXJlc3RvcmUsIHBhdGgpIGFzIERvY3VtZW50UmVmZXJlbmNlPEE+O1xyXG4gIH0gZWxzZSB7IC8vIG9kZCBtZWFuaW5nIGNvbGxlY3Rpb25cclxuICAgIHJldHVybiBjb2xsZWN0aW9uKGZpcmVzdG9yZSwgcGF0aCkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxBPjtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRTdWJDb2xsZWN0aW9uPFQgZXh0ZW5kcyBEb2N1bWVudERhdGEsIEEgZXh0ZW5kcyBEb2N1bWVudERhdGE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGNvbGxlY3Rpb25OYW1lOiBzdHJpbmcpOiBDb2xsZWN0aW9uUmVmZXJlbmNlPEE+IHtcclxuICBjb25zdCBjb2xsZWN0aW9uUGF0aDogc3RyaW5nID0gZG9jUmVmLnBhdGguY29uY2F0KCcvJywgY29sbGVjdGlvbk5hbWUpO1xyXG4gIHJldHVybiBjb2xsZWN0aW9uKGRvY1JlZi5maXJlc3RvcmUsIGNvbGxlY3Rpb25QYXRoKSBhcyBDb2xsZWN0aW9uUmVmZXJlbmNlPEE+O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jUmVmV2l0aElkPFQgZXh0ZW5kcyBEb2N1bWVudERhdGE+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGlkOiBzdHJpbmcpOiBEb2N1bWVudFJlZmVyZW5jZTxUPiB7XHJcbiAgcmV0dXJuIGRvYyhjb2xsZWN0aW9uUmVmLmZpcmVzdG9yZSwgY29sbGVjdGlvblJlZi5wYXRoLCBpZCkgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgZGF0YSB0byBvYmplY3QgaW5wbGFjZVxyXG4gKiBAcGFyYW0gaXRlbSBpdGVtIHRvIGFkZCB0b1xyXG4gKiBAcGFyYW0gZGF0YVRvQWRkIGRhdGEgdG8gYWRkXHJcbiAqIEBwYXJhbSBpbnBsYWNlIGlmIHRydWUgdGhlIGRhdGEgaXMgYWRkZWQgaW5wbGFjZSwgaWYgZmFsc2UgYSBjb3B5IGlzIHVzZWRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGREYXRhVG9JdGVtPEEgZXh0ZW5kcyB7IFtmaWVsZDogc3RyaW5nXTogYW55IH0+KFxyXG4gIGl0ZW06IEEsIGRhdGFUb0FkZDogeyBbZmllbGQ6IHN0cmluZ106IGFueSB9LCBpbnBsYWNlID0gZmFsc2UpOiBBIHtcclxuXHJcbiAgaWYgKGlucGxhY2UpIHtcclxuICAgIE9iamVjdC5lbnRyaWVzKGRhdGFUb0FkZCkuZm9yRWFjaCgoW2ssIHZdKSA9PiB7XHJcbiAgICAgIChpdGVtIGFzIHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfSlba10gPSB2O1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaXRlbTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIHsuLi5pdGVtLCAuLi5kYXRhVG9BZGR9O1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCBjcmVhdGVkRGF0ZSB0byB0aGUgb2JqZWN0IGlucGxhY2UsIGlmIGNyZWF0ZWREYXRlIGFscmVhZHkgZXhpc3RzIHRoZW4gd2UgZG8gbm90IG92ZXJ3cml0ZSBpdFxyXG4gKlxyXG4gKiBAcGFyYW0gaXRlbSBpdGVtIHdoZXJlIHRoZSBjcmVhdGVkRGF0YSB3aWxsIGJlIGFkZGVkXHJcbiAqIEBwYXJhbSBjcmVhdGVkRGF0ZSBvcHRpb25hbCwgd2lsbCB1c2UgbmV3IERhdGUoKSBpZiBub25lIGdpdmVuXHJcbiAqIEBwYXJhbSBpbnBsYWNlIGlmIHRydWUgdGhlIGRhdGEgaXMgYWRkZWQgaW5wbGFjZSwgaWYgZmFsc2UgYSBjb3B5IGlzIHVzZWRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRDcmVhdGVkRGF0ZTxBPihpdGVtOiBBLCBpbnBsYWNlID0gZmFsc2UsIGNyZWF0ZWREYXRlOiBEYXRlID0gbmV3IERhdGUoKSk6IEEge1xyXG4gIC8vIGRvIG5vdCBvdmVyd3JpdGUgcHJldmlvdXMgY3JlYXRlZERhdGVcclxuICBpZiAoJ2NyZWF0ZWREYXRlJyBpbiBpdGVtKSB7XHJcbiAgICByZXR1cm4gaXRlbTtcclxuICB9XHJcblxyXG4gIHJldHVybiBhZGREYXRhVG9JdGVtKGl0ZW0sIHtjcmVhdGVkRGF0ZX0sIGlucGxhY2UpO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIG1vZGlmaWVkRGF0ZSB0byB0aGUgb2JqZWN0XHJcbiAqXHJcbiAqIEBwYXJhbSBpdGVtIGl0ZW0gd2hlcmUgdGhlIG1vZGlmaWVkRGF0ZSB3aWxsIGJlIGFkZGVkXHJcbiAqIEBwYXJhbSBtb2RpZmllZERhdGUgb3B0aW9uYWwsIHdpbGwgdXNlIG5ldyBEYXRlKCkgaWYgbm9uZSBnaXZlblxyXG4gKiBAcGFyYW0gaW5wbGFjZSBpZiB0cnVlIHRoZSBkYXRhIGlzIGFkZGVkIGlucGxhY2UsIGlmIGZhbHNlIGEgY29weSBpcyB1c2VkXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYWRkTW9kaWZpZWREYXRlPEE+KGl0ZW06IEEsIGlucGxhY2UgPSBmYWxzZSwgbW9kaWZpZWREYXRlOiBEYXRlID0gbmV3IERhdGUoKSk6IEEge1xyXG4gIHJldHVybiBhZGREYXRhVG9JdGVtKGl0ZW0sIHttb2RpZmllZERhdGV9LCBpbnBsYWNlKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCBjcmVhdGVkQnkgdG8gdGhlIG9iamVjdCBpbnBsYWNlXHJcbiAqXHJcbiAqIEBwYXJhbSBpdGVtIGl0ZW0gdG8gYWRkIHRvXHJcbiAqIEBwYXJhbSBjcmVhdGVkQnkgcHJvZmlsZSwgdXNlciBvciBhbnkgdHlwZSBvZiBkYXRhXHJcbiAqIEBwYXJhbSBpbnBsYWNlIGlmIHRydWUgdGhlIGRhdGEgaXMgYWRkZWQgaW5wbGFjZSwgaWYgZmFsc2UgYSBjb3B5IGlzIHVzZWRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRDcmVhdGVkQnk8QT4oaXRlbTogQSwgY3JlYXRlZEJ5OiB7IFtmaWVsZDogc3RyaW5nXTogYW55IH0sIGlucGxhY2UgPSBmYWxzZSk6IEEge1xyXG5cclxuICByZXR1cm4gYWRkRGF0YVRvSXRlbShpdGVtLCB7Y3JlYXRlZEJ5fSwgaW5wbGFjZSk7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogRmlyZXN0b3JlIHNhdmVzIHRpbWUgYXMgdGltZXN0YW1wcyBhbmQgamF2YXNjcmlwdCB1c2VzIERhdGUgb2JqZWN0cy5cclxuICogVGhpcyBmdW5jdGlvbnMgaGVscHMgY29udmVydCB0aGUgY3JlYXRlZERhdGUgYW5kIG1vZGlmaWVkRGF0ZSBmcm9tIHRpbWVzdGFtcFxyXG4gKiB0byBEYXRlKClcclxuICpcclxuICogaW5wbGFjZVxyXG4gKlxyXG4gKiBAcGFyYW0gaXRlbSBpdGVtIHRoYXQgY29udGFpbnMgJ2NyZWF0ZWREYXRlJyBhbmQvb3IgJ21vZGlmaWVkRGF0ZSdcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRpbWVzdGFtcFRvRGF0ZTxBIGV4dGVuZHMgeyBjcmVhdGVkRGF0ZT86IGFueSwgbW9kaWZpZWREYXRlPzogYW55IH0+KGl0ZW06IEEpOiBBIHtcclxuICBpZiAoaXRlbS5oYXNPd25Qcm9wZXJ0eSgnY3JlYXRlZERhdGUnKSkge1xyXG4gICAgaXRlbS5jcmVhdGVkRGF0ZSA9IGl0ZW0uY3JlYXRlZERhdGUgYXMgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgICBpdGVtLmNyZWF0ZWREYXRlID0gaXRlbS5jcmVhdGVkRGF0ZS50b0RhdGUoKTtcclxuICB9XHJcbiAgaWYgKGl0ZW0uaGFzT3duUHJvcGVydHkoJ21vZGlmaWVkRGF0ZScpKSB7XHJcbiAgICBpdGVtLm1vZGlmaWVkRGF0ZSA9IGl0ZW0ubW9kaWZpZWREYXRlIGFzIEZpcmViYXNlVGltZXN0YW1wO1xyXG4gICAgaXRlbS5tb2RpZmllZERhdGUgPSBpdGVtLm1vZGlmaWVkRGF0ZS50b0RhdGUoKTtcclxuICB9XHJcblxyXG4gIHJldHVybiBpdGVtO1xyXG59XHJcbiJdfQ==","start":3207,"end":11593}]},"code":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/helpers.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,1,2],[19,0,1,12],[21,0,3,2],[24,0,3,5],[26,0,8,1],[32,0,8,7],[52,0,8,27],[53,0,8,28]],[[0,0,10,0],[99,0,10,99]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[30,0,11,30],[31,0,11,34],[35,0,11,46],[37,0,11,48],[46,0,11,68]],[[4,0,12,2],[10,0,12,8],[27,0,12,25],[30,0,12,36],[34,0,12,40],[35,0,12,41],[40,0,12,46],[41,0,12,47],[44,0,12,50],[45,0,12,51],[46,0,12,52],[52,0,12,58],[53,0,12,59]],[[4,0,13,2],[8,0,13,6],[25,0,13,23],[28,0,13,26],[29,0,13,27],[34,0,13,32],[35,0,13,33],[37,0,13,35],[39,0,13,37],[63,0,13,61]],[[8,0,14,4],[15,0,14,11],[18,0,14,14],[19,0,14,15],[28,0,14,24],[30,0,14,26],[34,0,14,30],[35,0,14,55],[36,0,14,56]],[[5,0,15,3]],[[9,0,15,9],[11,0,15,11],[36,0,15,36]],[[8,0,16,4],[15,0,16,11],[25,0,16,21],[26,0,16,22],[35,0,16,31],[37,0,16,33],[41,0,16,37],[42,0,16,64],[43,0,16,65]],[[5,0,17,3]],[[0,0,18,0],[1,0,18,1]],[[0,0,20,0],[6,0,20,6],[16,0,20,16],[32,0,20,32],[33,0,20,81],[39,0,20,109],[41,0,20,111],[55,0,20,133]],[[4,0,21,2],[10,0,21,8],[24,0,21,22],[27,0,21,33],[33,0,21,39],[34,0,21,40],[38,0,21,44],[39,0,21,45],[45,0,21,51],[46,0,21,52],[49,0,21,55],[51,0,21,57],[65,0,21,71],[66,0,21,72],[67,0,21,73]],[[4,0,22,2],[11,0,22,9],[21,0,22,19],[22,0,22,20],[28,0,22,26],[29,0,22,27],[38,0,22,36],[40,0,22,38],[54,0,22,52],[55,0,22,79],[56,0,22,80]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0],[6,0,25,6],[16,0,25,16],[31,0,25,31],[32,0,25,56],[45,0,25,93],[47,0,25,95],[49,0,25,105]],[[4,0,26,2],[11,0,26,9],[14,0,26,12],[15,0,26,13],[28,0,26,26],[29,0,26,27],[38,0,26,36],[40,0,26,38],[53,0,26,51],[54,0,26,52],[58,0,26,56],[60,0,26,58],[62,0,26,60],[63,0,26,85],[64,0,26,86]],[[0,0,27,0],[1,0,27,1]],[[0,0,29,0]],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[29,0,35,29],[30,0,36,2],[34,0,36,9],[36,0,36,11],[45,0,36,46],[47,0,36,48],[54,0,36,55],[57,0,36,58],[62,0,36,63]],[[4,0,38,2],[8,0,38,6],[15,0,38,13],[17,0,38,15]],[[8,0,39,4],[14,0,39,10],[15,0,39,11],[22,0,39,18],[23,0,39,19],[32,0,39,28],[33,0,39,29],[34,0,39,30],[41,0,39,37],[42,0,39,38],[43,0,39,39],[44,0,39,40],[45,0,39,41],[47,0,39,43],[48,0,39,44],[49,0,39,45],[51,0,39,47],[53,0,39,49]],[[12,0,40,7],[16,0,40,40],[17,0,40,41],[18,0,40,42],[19,0,40,43],[22,0,40,46],[23,0,40,47],[24,0,40,48]],[[8,0,41,4],[9,0,41,5],[10,0,41,6],[11,0,41,7]],[[8,0,42,4],[15,0,42,11],[19,0,42,15],[20,0,42,16]],[[5,0,43,3]],[[9,0,43,9]],[[8,0,44,4],[15,0,44,11],[17,0,44,12],[20,0,44,15],[24,0,44,19],[26,0,44,21],[29,0,44,24],[38,0,44,33],[40,0,44,34],[41,0,44,35]],[[5,0,45,3]],[[0,0,46,0],[1,0,46,1]],[[0,0,48,0]],[],[],[],[],[],[[3,0,54,3]],[[0,0,55,0],[6,0,55,6],[16,0,55,16],[30,0,55,30],[31,0,55,34],[35,0,55,41],[37,0,55,43],[44,0,55,50],[47,0,55,53],[52,0,55,58],[54,0,55,60],[68,0,55,80],[72,0,55,84],[76,0,55,88],[78,0,55,90]],[[4,0,56,2],[44,0,56,42]],[[4,0,57,2],[8,0,57,6],[21,0,57,19],[25,0,57,23],[29,0,57,27],[31,0,57,29]],[[8,0,58,4],[15,0,58,11],[19,0,58,15],[20,0,58,16]],[[5,0,59,3]],[[4,0,61,2],[11,0,61,9],[24,0,61,22],[25,0,61,23],[29,0,61,27],[31,0,61,29],[33,0,61,30],[44,0,61,41],[46,0,61,42],[48,0,61,44],[55,0,61,51],[56,0,61,52],[57,0,61,53]],[[0,0,62,0],[1,0,62,1]],[[0,0,64,0]],[],[],[],[],[],[[3,0,70,3]],[[0,0,71,0],[6,0,71,6],[16,0,71,16],[31,0,71,31],[32,0,71,35],[36,0,71,42],[38,0,71,44],[45,0,71,51],[48,0,71,54],[53,0,71,59],[55,0,71,61],[70,0,71,82],[74,0,71,86],[78,0,71,90],[80,0,71,92]],[[4,0,72,2],[11,0,72,9],[24,0,72,22],[25,0,72,23],[29,0,72,27],[31,0,72,29],[33,0,72,30],[45,0,72,42],[47,0,72,43],[49,0,72,45],[56,0,72,52],[57,0,72,53],[58,0,72,54]],[[0,0,73,0],[1,0,73,1]],[[0,0,75,0]],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[16,0,82,16],[28,0,82,28],[29,0,82,32],[33,0,82,39],[35,0,82,41],[44,0,82,76],[46,0,82,78],[53,0,82,85],[56,0,82,88],[61,0,82,93]],[[4,0,84,2],[11,0,84,9],[24,0,84,22],[25,0,84,23],[29,0,84,27],[31,0,84,29],[33,0,84,30],[42,0,84,39],[44,0,84,40],[46,0,84,42],[53,0,84,49],[54,0,84,50],[55,0,84,51]],[[0,0,85,0],[1,0,85,1]],[[0,0,88,0]],[],[],[],[],[],[],[],[[3,0,96,3]],[[0,0,98,0],[6,0,98,6],[16,0,98,16],[38,0,98,38],[39,0,98,92],[43,0,98,99]],[[4,0,99,2],[8,0,99,6],[12,0,99,10],[13,0,99,11],[27,0,99,25],[28,0,99,26],[41,0,99,39],[42,0,99,40],[44,0,99,42]],[[8,0,100,4],[12,0,100,8],[13,0,100,9],[24,0,100,20],[27,0,100,23],[31,0,100,27],[32,0,100,28],[43,0,100,60],[44,0,100,61]],[[8,0,101,4],[12,0,101,8],[13,0,101,9],[24,0,101,20],[27,0,101,23],[31,0,101,27],[32,0,101,28],[43,0,101,39],[44,0,101,40],[50,0,101,46],[52,0,101,48],[53,0,101,49]],[[5,0,102,3]],[[4,0,103,2],[8,0,103,6],[12,0,103,10],[13,0,103,11],[27,0,103,25],[28,0,103,26],[42,0,103,40],[43,0,103,41],[45,0,103,43]],[[8,0,104,4],[12,0,104,8],[13,0,104,9],[25,0,104,21],[28,0,104,24],[32,0,104,28],[33,0,104,29],[45,0,104,62],[46,0,104,63]],[[8,0,105,4],[12,0,105,8],[13,0,105,9],[25,0,105,21],[28,0,105,24],[32,0,105,28],[33,0,105,29],[45,0,105,41],[46,0,105,42],[52,0,105,48],[54,0,105,50],[55,0,105,51]],[[5,0,106,3]],[[4,0,108,2],[11,0,108,9],[15,0,108,13],[16,0,108,14]],[[0,0,109,0],[1,0,109,1]]],"sourcesContent":["import {\r\n  collection,\r\n  CollectionReference,\r\n  doc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  Firestore,\r\n  Timestamp as FirebaseTimestamp\r\n} from 'firebase/firestore';\r\n\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath<A>(path: string, firestore: Firestore): DocumentReference<A> | CollectionReference<A> {\r\n  const pathSegmentAmount: number = path.split('/').length;\r\n  if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n    return doc(firestore, path) as DocumentReference<A>;\r\n  } else { // odd meaning collection\r\n    return collection(firestore, path) as CollectionReference<A>;\r\n  }\r\n}\r\n\r\nexport function getSubCollection<T extends DocumentData, A extends DocumentData>(docRef: DocumentReference<T>, collectionName: string): CollectionReference<A> {\r\n  const collectionPath: string = docRef.path.concat('/', collectionName);\r\n  return collection(docRef.firestore, collectionPath) as CollectionReference<A>;\r\n}\r\n\r\nexport function getDocRefWithId<T extends DocumentData>(collectionRef: CollectionReference<T>, id: string): DocumentReference<T> {\r\n  return doc(collectionRef.firestore, collectionRef.path, id) as DocumentReference<T>;\r\n}\r\n\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem<A extends { [field: string]: any }>(\r\n  item: A, dataToAdd: { [field: string]: any }, inplace = false): A {\r\n\r\n  if (inplace) {\r\n    Object.entries(dataToAdd).forEach(([k, v]) => {\r\n      (item as { [field: string]: any })[k] = v;\r\n    });\r\n    return item;\r\n  } else {\r\n    return {...item, ...dataToAdd};\r\n  }\r\n}\r\n\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate<A>(item: A, inplace = false, createdDate: Date = new Date()): A {\r\n  // do not overwrite previous createdDate\r\n  if ('createdDate' in item) {\r\n    return item;\r\n  }\r\n\r\n  return addDataToItem(item, {createdDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate<A>(item: A, inplace = false, modifiedDate: Date = new Date()): A {\r\n  return addDataToItem(item, {modifiedDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy<A>(item: A, createdBy: { [field: string]: any }, inplace = false): A {\r\n\r\n  return addDataToItem(item, {createdBy}, inplace);\r\n}\r\n\r\n\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\n\r\nexport function convertTimestampToDate<A extends { createdDate?: any, modifiedDate?: any }>(item: A): A {\r\n  if (item.hasOwnProperty('createdDate')) {\r\n    item.createdDate = item.createdDate as FirebaseTimestamp;\r\n    item.createdDate = item.createdDate.toDate();\r\n  }\r\n  if (item.hasOwnProperty('modifiedDate')) {\r\n    item.modifiedDate = item.modifiedDate as FirebaseTimestamp;\r\n    item.modifiedDate = item.modifiedDate.toDate();\r\n  }\r\n\r\n  return item;\r\n}\r\n"]},"resolvedIds":{"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":7980,"body":[{"type":"ExportNamedDeclaration","start":430,"end":835,"declaration":{"type":"FunctionDeclaration","start":437,"end":835,"id":{"type":"Identifier","start":446,"end":461,"name":"moveItemInArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":462,"end":467,"name":"array"},{"type":"Identifier","start":469,"end":478,"name":"fromIndex"},{"type":"Identifier","start":480,"end":487,"name":"toIndex"}],"body":{"type":"BlockStatement","start":489,"end":835,"body":[{"type":"VariableDeclaration","start":496,"end":544,"declarations":[{"type":"VariableDeclarator","start":502,"end":543,"id":{"type":"Identifier","start":502,"end":506,"name":"from"},"init":{"type":"CallExpression","start":509,"end":543,"callee":{"type":"Identifier","start":509,"end":514,"name":"clamp"},"arguments":[{"type":"Identifier","start":515,"end":524,"name":"fromIndex"},{"type":"BinaryExpression","start":526,"end":542,"left":{"type":"MemberExpression","start":526,"end":538,"object":{"type":"Identifier","start":526,"end":531,"name":"array"},"property":{"type":"Identifier","start":532,"end":538,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":541,"end":542,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":550,"end":594,"declarations":[{"type":"VariableDeclarator","start":556,"end":593,"id":{"type":"Identifier","start":556,"end":558,"name":"to"},"init":{"type":"CallExpression","start":561,"end":593,"callee":{"type":"Identifier","start":561,"end":566,"name":"clamp"},"arguments":[{"type":"Identifier","start":567,"end":574,"name":"toIndex"},{"type":"BinaryExpression","start":576,"end":592,"left":{"type":"MemberExpression","start":576,"end":588,"object":{"type":"Identifier","start":576,"end":581,"name":"array"},"property":{"type":"Identifier","start":582,"end":588,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":591,"end":592,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":600,"end":642,"test":{"type":"BinaryExpression","start":604,"end":615,"left":{"type":"Identifier","start":604,"end":608,"name":"from"},"operator":"===","right":{"type":"Identifier","start":613,"end":615,"name":"to"}},"consequent":{"type":"BlockStatement","start":617,"end":642,"body":[{"type":"ReturnStatement","start":628,"end":635,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":648,"end":675,"declarations":[{"type":"VariableDeclarator","start":654,"end":674,"id":{"type":"Identifier","start":654,"end":660,"name":"target"},"init":{"type":"MemberExpression","start":663,"end":674,"object":{"type":"Identifier","start":663,"end":668,"name":"array"},"property":{"type":"Identifier","start":669,"end":673,"name":"from"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":681,"end":714,"declarations":[{"type":"VariableDeclarator","start":687,"end":713,"id":{"type":"Identifier","start":687,"end":692,"name":"delta"},"init":{"type":"ConditionalExpression","start":695,"end":713,"test":{"type":"BinaryExpression","start":695,"end":704,"left":{"type":"Identifier","start":695,"end":697,"name":"to"},"operator":"<","right":{"type":"Identifier","start":700,"end":704,"name":"from"}},"consequent":{"type":"UnaryExpression","start":707,"end":709,"operator":"-","prefix":true,"argument":{"type":"Literal","start":708,"end":709,"value":1,"raw":"1"}},"alternate":{"type":"Literal","start":712,"end":713,"value":1,"raw":"1"}}}],"kind":"const"},{"type":"ForStatement","start":720,"end":807,"init":{"type":"VariableDeclaration","start":725,"end":737,"declarations":[{"type":"VariableDeclarator","start":729,"end":737,"id":{"type":"Identifier","start":729,"end":730,"name":"i"},"init":{"type":"Identifier","start":733,"end":737,"name":"from"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":739,"end":747,"left":{"type":"Identifier","start":739,"end":740,"name":"i"},"operator":"!==","right":{"type":"Identifier","start":745,"end":747,"name":"to"}},"update":{"type":"AssignmentExpression","start":749,"end":759,"operator":"+=","left":{"type":"Identifier","start":749,"end":750,"name":"i"},"right":{"type":"Identifier","start":754,"end":759,"name":"delta"}},"body":{"type":"BlockStatement","start":761,"end":807,"body":[{"type":"ExpressionStatement","start":772,"end":800,"expression":{"type":"AssignmentExpression","start":772,"end":799,"operator":"=","left":{"type":"MemberExpression","start":772,"end":780,"object":{"type":"Identifier","start":772,"end":777,"name":"array"},"property":{"type":"Identifier","start":778,"end":779,"name":"i"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":783,"end":799,"object":{"type":"Identifier","start":783,"end":788,"name":"array"},"property":{"type":"BinaryExpression","start":789,"end":798,"left":{"type":"Identifier","start":789,"end":790,"name":"i"},"operator":"+","right":{"type":"Identifier","start":793,"end":798,"name":"delta"}},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":813,"end":832,"expression":{"type":"AssignmentExpression","start":813,"end":831,"operator":"=","left":{"type":"MemberExpression","start":813,"end":822,"object":{"type":"Identifier","start":813,"end":818,"name":"array"},"property":{"type":"Identifier","start":819,"end":821,"name":"to"},"computed":true,"optional":false},"right":{"type":"Identifier","start":825,"end":831,"name":"target"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1134,"end":1454,"declaration":{"type":"FunctionDeclaration","start":1141,"end":1454,"id":{"type":"Identifier","start":1150,"end":1167,"name":"transferArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1168,"end":1180,"name":"currentArray"},{"type":"Identifier","start":1182,"end":1193,"name":"targetArray"},{"type":"Identifier","start":1195,"end":1207,"name":"currentIndex"},{"type":"Identifier","start":1209,"end":1220,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1222,"end":1454,"body":[{"type":"VariableDeclaration","start":1229,"end":1287,"declarations":[{"type":"VariableDeclarator","start":1235,"end":1286,"id":{"type":"Identifier","start":1235,"end":1239,"name":"from"},"init":{"type":"CallExpression","start":1242,"end":1286,"callee":{"type":"Identifier","start":1242,"end":1247,"name":"clamp"},"arguments":[{"type":"Identifier","start":1248,"end":1260,"name":"currentIndex"},{"type":"BinaryExpression","start":1262,"end":1285,"left":{"type":"MemberExpression","start":1262,"end":1281,"object":{"type":"Identifier","start":1262,"end":1274,"name":"currentArray"},"property":{"type":"Identifier","start":1275,"end":1281,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":1284,"end":1285,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1293,"end":1343,"declarations":[{"type":"VariableDeclarator","start":1299,"end":1342,"id":{"type":"Identifier","start":1299,"end":1301,"name":"to"},"init":{"type":"CallExpression","start":1304,"end":1342,"callee":{"type":"Identifier","start":1304,"end":1309,"name":"clamp"},"arguments":[{"type":"Identifier","start":1310,"end":1321,"name":"targetIndex"},{"type":"MemberExpression","start":1323,"end":1341,"object":{"type":"Identifier","start":1323,"end":1334,"name":"targetArray"},"property":{"type":"Identifier","start":1335,"end":1341,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1349,"end":1451,"test":{"type":"MemberExpression","start":1353,"end":1372,"object":{"type":"Identifier","start":1353,"end":1365,"name":"currentArray"},"property":{"type":"Identifier","start":1366,"end":1372,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1374,"end":1451,"body":[{"type":"ExpressionStatement","start":1385,"end":1444,"expression":{"type":"CallExpression","start":1385,"end":1443,"callee":{"type":"MemberExpression","start":1385,"end":1403,"object":{"type":"Identifier","start":1385,"end":1396,"name":"targetArray"},"property":{"type":"Identifier","start":1397,"end":1403,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1404,"end":1406,"name":"to"},{"type":"Literal","start":1408,"end":1409,"value":0,"raw":"0"},{"type":"MemberExpression","start":1411,"end":1442,"object":{"type":"CallExpression","start":1411,"end":1439,"callee":{"type":"MemberExpression","start":1411,"end":1430,"object":{"type":"Identifier","start":1411,"end":1423,"name":"currentArray"},"property":{"type":"Identifier","start":1424,"end":1430,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1431,"end":1435,"name":"from"},{"type":"Literal","start":1437,"end":1438,"value":1,"raw":"1"}],"optional":false},"property":{"type":"Literal","start":1440,"end":1441,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1813,"end":2060,"declaration":{"type":"FunctionDeclaration","start":1820,"end":2060,"id":{"type":"Identifier","start":1829,"end":1842,"name":"copyArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1855,"name":"currentArray"},{"type":"Identifier","start":1857,"end":1868,"name":"targetArray"},{"type":"Identifier","start":1870,"end":1882,"name":"currentIndex"},{"type":"Identifier","start":1884,"end":1895,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1897,"end":2060,"body":[{"type":"VariableDeclaration","start":1904,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1910,"end":1953,"id":{"type":"Identifier","start":1910,"end":1912,"name":"to"},"init":{"type":"CallExpression","start":1915,"end":1953,"callee":{"type":"Identifier","start":1915,"end":1920,"name":"clamp"},"arguments":[{"type":"Identifier","start":1921,"end":1932,"name":"targetIndex"},{"type":"MemberExpression","start":1934,"end":1952,"object":{"type":"Identifier","start":1934,"end":1945,"name":"targetArray"},"property":{"type":"Identifier","start":1946,"end":1952,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1960,"end":2057,"test":{"type":"MemberExpression","start":1964,"end":1983,"object":{"type":"Identifier","start":1964,"end":1976,"name":"currentArray"},"property":{"type":"Identifier","start":1977,"end":1983,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1985,"end":2057,"body":[{"type":"ExpressionStatement","start":1996,"end":2050,"expression":{"type":"CallExpression","start":1996,"end":2049,"callee":{"type":"MemberExpression","start":1996,"end":2014,"object":{"type":"Identifier","start":1996,"end":2007,"name":"targetArray"},"property":{"type":"Identifier","start":2008,"end":2014,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2015,"end":2017,"name":"to"},{"type":"Literal","start":2019,"end":2020,"value":0,"raw":"0"},{"type":"MemberExpression","start":2022,"end":2048,"object":{"type":"Identifier","start":2022,"end":2034,"name":"currentArray"},"property":{"type":"Identifier","start":2035,"end":2047,"name":"currentIndex"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"FunctionDeclaration","start":2114,"end":2192,"id":{"type":"Identifier","start":2123,"end":2128,"name":"clamp"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2129,"end":2134,"name":"value"},{"type":"Identifier","start":2136,"end":2139,"name":"max"}],"body":{"type":"BlockStatement","start":2141,"end":2192,"body":[{"type":"ReturnStatement","start":2148,"end":2189,"argument":{"type":"CallExpression","start":2155,"end":2188,"callee":{"type":"MemberExpression","start":2155,"end":2163,"object":{"type":"Identifier","start":2155,"end":2159,"name":"Math"},"property":{"type":"Identifier","start":2160,"end":2163,"name":"max"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2164,"end":2165,"value":0,"raw":"0"},{"type":"CallExpression","start":2167,"end":2187,"callee":{"type":"MemberExpression","start":2167,"end":2175,"object":{"type":"Identifier","start":2167,"end":2171,"name":"Math"},"property":{"type":"Identifier","start":2172,"end":2175,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2176,"end":2179,"name":"max"},{"type":"Identifier","start":2181,"end":2186,"name":"value"}],"optional":false}],"optional":false}}]}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","start":2194,"end":7980}]},"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"drag-utils.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/drag-utils.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,8,0]],[],[],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[31,0,14,31],[32,0,14,41],[37,0,14,51],[39,0,14,53],[48,0,14,70],[50,0,14,72],[57,0,14,87]],[[4,0,15,2],[10,0,15,8],[14,0,15,12],[17,0,15,15],[22,0,15,20],[23,0,15,21],[32,0,15,30],[34,0,15,32],[39,0,15,37],[40,0,15,38],[46,0,15,44],[49,0,15,47],[50,0,15,48],[51,0,15,49],[52,0,15,50]],[[4,0,16,2],[10,0,16,8],[12,0,16,10],[15,0,16,13],[20,0,16,18],[21,0,16,19],[28,0,16,26],[30,0,16,28],[35,0,16,33],[36,0,16,34],[42,0,16,40],[45,0,16,43],[46,0,16,44],[47,0,16,45],[48,0,16,46]],[[4,0,18,2],[8,0,18,6],[12,0,18,10],[17,0,18,15],[19,0,18,17],[21,0,18,19]],[[8,0,19,4],[15,0,19,11]],[[5,0,20,3]],[[4,0,22,2],[10,0,22,8],[16,0,22,14],[19,0,22,17],[24,0,22,22],[25,0,22,23],[29,0,22,27],[30,0,22,28],[31,0,22,29]],[[4,0,23,2],[10,0,23,8],[15,0,23,13],[18,0,23,16],[20,0,23,18],[23,0,23,21],[27,0,23,25],[28,0,23,26],[29,0,23,27],[30,0,23,28],[31,0,23,29],[32,0,23,30],[33,0,23,31],[34,0,23,32],[35,0,23,33],[36,0,23,34],[37,0,23,35]],[[4,0,25,2],[9,0,25,7],[13,0,25,11],[14,0,25,12],[17,0,25,15],[21,0,25,19],[23,0,25,21],[24,0,25,22],[29,0,25,27],[31,0,25,29],[33,0,25,31],[34,0,25,32],[38,0,25,36],[43,0,25,41],[45,0,25,43]],[[8,0,26,4],[13,0,26,9],[14,0,26,10],[15,0,26,11],[16,0,26,12],[19,0,26,15],[24,0,26,20],[25,0,26,21],[26,0,26,22],[29,0,26,25],[34,0,26,30],[35,0,26,31],[36,0,26,32]],[[5,0,27,3]],[[4,0,29,2],[9,0,29,7],[10,0,29,8],[12,0,29,10],[13,0,29,11],[16,0,29,14],[22,0,29,20],[23,0,29,21]],[[0,0,30,0],[1,0,30,1]],[[0,0,33,0]],[],[],[],[],[],[[3,0,39,3]],[[0,0,40,0],[6,0,40,6],[16,0,40,16],[33,0,40,33],[34,0,40,43],[46,0,40,60],[48,0,41,43],[59,0,41,59],[61,0,42,43],[73,0,42,63],[75,0,43,43],[86,0,43,62]],[[4,0,44,2],[10,0,44,8],[14,0,44,12],[17,0,44,15],[22,0,44,20],[23,0,44,21],[35,0,44,33],[37,0,44,35],[49,0,44,47],[50,0,44,48],[56,0,44,54],[59,0,44,57],[60,0,44,58],[61,0,44,59],[62,0,44,60]],[[4,0,45,2],[10,0,45,8],[12,0,45,10],[15,0,45,13],[20,0,45,18],[21,0,45,19],[32,0,45,30],[34,0,45,32],[45,0,45,43],[46,0,45,44],[52,0,45,50],[53,0,45,51],[54,0,45,52]],[[4,0,47,2],[8,0,47,6],[20,0,47,18],[21,0,47,19],[27,0,47,25],[29,0,47,27]],[[8,0,48,4],[19,0,48,15],[20,0,48,16],[26,0,48,22],[27,0,48,23],[29,0,48,25],[31,0,48,27],[32,0,48,28],[34,0,48,30],[46,0,48,42],[47,0,48,43],[53,0,48,49],[54,0,48,50],[58,0,48,54],[60,0,48,56],[61,0,48,57],[62,0,48,58],[63,0,48,59],[64,0,48,60],[65,0,48,61],[66,0,48,62],[67,0,48,63]],[[5,0,49,3]],[[0,0,50,0],[1,0,50,1]],[[0,0,52,0]],[],[],[],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[16,0,61,16],[29,0,61,29],[30,0,61,39],[42,0,61,56],[44,0,62,39],[55,0,62,55],[57,0,63,39],[69,0,63,59],[71,0,64,39],[82,0,64,58]],[[4,0,65,2],[10,0,65,8],[12,0,65,10],[15,0,65,13],[20,0,65,18],[21,0,65,19],[32,0,65,30],[34,0,65,32],[45,0,65,43],[46,0,65,44],[52,0,65,50],[53,0,65,51],[54,0,65,52]],[[4,0,67,2],[8,0,67,6],[20,0,67,18],[21,0,67,19],[27,0,67,25],[29,0,67,27]],[[8,0,68,4],[19,0,68,15],[20,0,68,16],[26,0,68,22],[27,0,68,23],[29,0,68,25],[31,0,68,27],[32,0,68,28],[34,0,68,30],[46,0,68,42],[47,0,68,43],[59,0,68,55],[60,0,68,56],[61,0,68,57],[62,0,68,58]],[[5,0,69,3]],[[0,0,70,0],[1,0,70,1]],[[0,0,72,0],[50,0,72,50]],[[0,0,73,0],[9,0,73,9],[14,0,73,14],[15,0,73,15],[20,0,73,28],[22,0,73,30],[25,0,73,41]],[[4,0,74,2],[11,0,74,9],[15,0,74,13],[16,0,74,14],[19,0,74,17],[20,0,74,18],[21,0,74,19],[23,0,74,21],[27,0,74,25],[28,0,74,26],[31,0,74,29],[32,0,74,30],[35,0,74,33],[37,0,74,35],[42,0,74,40],[43,0,74,41],[44,0,74,42],[45,0,74,43]],[[0,0,75,0],[1,0,75,1]]],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\r\n  const from = clamp(fromIndex, array.length - 1);\r\n  const to = clamp(toIndex, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n}\r\n\r\n\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem<T = any>(currentArray: T[],\r\n                                           targetArray: T[],\r\n                                           currentIndex: number,\r\n                                           targetIndex: number): void {\r\n  const from = clamp(currentIndex, currentArray.length - 1);\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n  }\r\n}\r\n\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem<T = any>(currentArray: T[],\r\n                                       targetArray: T[],\r\n                                       currentIndex: number,\r\n                                       targetIndex: number): void {\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray[currentIndex]);\r\n  }\r\n}\r\n\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value: number, max: number): number {\r\n  return Math.max(0, Math.min(max, value));\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":17709,"body":[{"type":"ImportDeclaration","start":0,"end":28,"specifiers":[{"type":"ImportSpecifier","start":9,"end":13,"imported":{"type":"Identifier","start":9,"end":13,"name":"from"},"local":{"type":"Identifier","start":9,"end":13,"name":"from"}}],"source":{"type":"Literal","start":21,"end":27,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":30,"end":68,"specifiers":[{"type":"ImportSpecifier","start":39,"end":43,"imported":{"type":"Identifier","start":39,"end":43,"name":"take"},"local":{"type":"Identifier","start":39,"end":43,"name":"take"}}],"source":{"type":"Literal","start":51,"end":67,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":70,"end":270,"specifiers":[{"type":"ImportSpecifier","start":79,"end":85,"imported":{"type":"Identifier","start":79,"end":85,"name":"addDoc"},"local":{"type":"Identifier","start":79,"end":85,"name":"addDoc"}},{"type":"ImportSpecifier","start":87,"end":97,"imported":{"type":"Identifier","start":87,"end":97,"name":"collection"},"local":{"type":"Identifier","start":87,"end":97,"name":"collection"}},{"type":"ImportSpecifier","start":99,"end":108,"imported":{"type":"Identifier","start":99,"end":108,"name":"deleteDoc"},"local":{"type":"Identifier","start":99,"end":108,"name":"deleteDoc"}},{"type":"ImportSpecifier","start":110,"end":115,"imported":{"type":"Identifier","start":110,"end":115,"name":"endAt"},"local":{"type":"Identifier","start":110,"end":115,"name":"endAt"}},{"type":"ImportSpecifier","start":117,"end":126,"imported":{"type":"Identifier","start":117,"end":126,"name":"endBefore"},"local":{"type":"Identifier","start":117,"end":126,"name":"endBefore"}},{"type":"ImportSpecifier","start":128,"end":134,"imported":{"type":"Identifier","start":128,"end":134,"name":"getDoc"},"local":{"type":"Identifier","start":128,"end":134,"name":"getDoc"}},{"type":"ImportSpecifier","start":136,"end":143,"imported":{"type":"Identifier","start":136,"end":143,"name":"getDocs"},"local":{"type":"Identifier","start":136,"end":143,"name":"getDocs"}},{"type":"ImportSpecifier","start":145,"end":157,"imported":{"type":"Identifier","start":145,"end":157,"name":"getFirestore"},"local":{"type":"Identifier","start":145,"end":157,"name":"getFirestore"}},{"type":"ImportSpecifier","start":159,"end":164,"imported":{"type":"Identifier","start":159,"end":164,"name":"limit"},"local":{"type":"Identifier","start":159,"end":164,"name":"limit"}},{"type":"ImportSpecifier","start":166,"end":177,"imported":{"type":"Identifier","start":166,"end":177,"name":"limitToLast"},"local":{"type":"Identifier","start":166,"end":177,"name":"limitToLast"}},{"type":"ImportSpecifier","start":179,"end":186,"imported":{"type":"Identifier","start":179,"end":186,"name":"orderBy"},"local":{"type":"Identifier","start":179,"end":186,"name":"orderBy"}},{"type":"ImportSpecifier","start":188,"end":193,"imported":{"type":"Identifier","start":188,"end":193,"name":"query"},"local":{"type":"Identifier","start":188,"end":193,"name":"query"}},{"type":"ImportSpecifier","start":195,"end":201,"imported":{"type":"Identifier","start":195,"end":201,"name":"setDoc"},"local":{"type":"Identifier","start":195,"end":201,"name":"setDoc"}},{"type":"ImportSpecifier","start":203,"end":213,"imported":{"type":"Identifier","start":203,"end":213,"name":"startAfter"},"local":{"type":"Identifier","start":203,"end":213,"name":"startAfter"}},{"type":"ImportSpecifier","start":215,"end":222,"imported":{"type":"Identifier","start":215,"end":222,"name":"startAt"},"local":{"type":"Identifier","start":215,"end":222,"name":"startAt"}},{"type":"ImportSpecifier","start":224,"end":233,"imported":{"type":"Identifier","start":224,"end":233,"name":"updateDoc"},"local":{"type":"Identifier","start":224,"end":233,"name":"updateDoc"}},{"type":"ImportSpecifier","start":235,"end":240,"imported":{"type":"Identifier","start":235,"end":240,"name":"where"},"local":{"type":"Identifier","start":235,"end":240,"name":"where"}}],"source":{"type":"Literal","start":249,"end":269,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":272,"end":1298,"declaration":{"type":"ClassDeclaration","start":279,"end":1298,"id":{"type":"Identifier","start":285,"end":308,"name":"FirestoreWrapper"},"superClass":null,"body":{"type":"ClassBody","start":309,"end":1298,"body":[{"type":"MethodDefinition","start":476,"end":550,"static":false,"computed":false,"key":{"type":"Identifier","start":476,"end":487,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":487,"end":550,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":488,"end":499,"name":"firebaseApp"}],"body":{"type":"BlockStatement","start":501,"end":550,"body":[{"type":"ExpressionStatement","start":512,"end":543,"expression":{"type":"AssignmentExpression","start":512,"end":542,"operator":"=","left":{"type":"MemberExpression","start":512,"end":528,"object":{"type":"ThisExpression","start":512,"end":516},"property":{"type":"Identifier","start":517,"end":528,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":531,"end":542,"name":"firebaseApp"}}}]}}},{"type":"MethodDefinition","start":556,"end":628,"static":false,"computed":false,"key":{"type":"Identifier","start":560,"end":569,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":569,"end":628,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":572,"end":628,"body":[{"type":"ReturnStatement","start":583,"end":621,"argument":{"type":"CallExpression","start":590,"end":620,"callee":{"type":"Identifier","start":590,"end":602,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":603,"end":619,"object":{"type":"ThisExpression","start":603,"end":607},"property":{"type":"Identifier","start":608,"end":619,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":646,"end":704,"static":false,"computed":false,"key":{"type":"Identifier","start":646,"end":649,"name":"doc"},"kind":"method","value":{"type":"FunctionExpression","start":649,"end":704,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":650,"end":656,"name":"docRef"}],"body":{"type":"BlockStatement","start":658,"end":704,"body":[{"type":"ReturnStatement","start":669,"end":697,"argument":{"type":"CallExpression","start":676,"end":696,"callee":{"type":"Identifier","start":676,"end":680,"name":"from"},"arguments":[{"type":"CallExpression","start":681,"end":695,"callee":{"type":"Identifier","start":681,"end":687,"name":"getDoc"},"arguments":[{"type":"Identifier","start":688,"end":694,"name":"docRef"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":710,"end":808,"static":false,"computed":false,"key":{"type":"Identifier","start":710,"end":713,"name":"add"},"kind":"method","value":{"type":"FunctionExpression","start":713,"end":808,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":714,"end":727,"name":"collectionRef"},{"type":"Identifier","start":729,"end":733,"name":"data"}],"body":{"type":"BlockStatement","start":735,"end":808,"body":[{"type":"ReturnStatement","start":746,"end":801,"argument":{"type":"CallExpression","start":753,"end":800,"callee":{"type":"MemberExpression","start":753,"end":791,"object":{"type":"CallExpression","start":753,"end":786,"callee":{"type":"Identifier","start":753,"end":757,"name":"from"},"arguments":[{"type":"CallExpression","start":758,"end":785,"callee":{"type":"Identifier","start":758,"end":764,"name":"addDoc"},"arguments":[{"type":"Identifier","start":765,"end":778,"name":"collectionRef"},{"type":"Identifier","start":780,"end":784,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":787,"end":791,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":792,"end":799,"callee":{"type":"Identifier","start":792,"end":796,"name":"take"},"arguments":[{"type":"Literal","start":797,"end":798,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":814,"end":1044,"static":false,"computed":false,"key":{"type":"Identifier","start":814,"end":817,"name":"set"},"kind":"method","value":{"type":"FunctionExpression","start":817,"end":1044,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":818,"end":824,"name":"docRef"},{"type":"Identifier","start":826,"end":830,"name":"data"},{"type":"Identifier","start":832,"end":839,"name":"options"}],"body":{"type":"BlockStatement","start":841,"end":1044,"body":[{"type":"IfStatement","start":852,"end":1037,"test":{"type":"Identifier","start":856,"end":863,"name":"options"},"consequent":{"type":"BlockStatement","start":865,"end":948,"body":[{"type":"ReturnStatement","start":880,"end":937,"argument":{"type":"CallExpression","start":887,"end":936,"callee":{"type":"MemberExpression","start":887,"end":927,"object":{"type":"CallExpression","start":887,"end":922,"callee":{"type":"Identifier","start":887,"end":891,"name":"from"},"arguments":[{"type":"CallExpression","start":892,"end":921,"callee":{"type":"Identifier","start":892,"end":898,"name":"setDoc"},"arguments":[{"type":"Identifier","start":899,"end":905,"name":"docRef"},{"type":"Identifier","start":907,"end":911,"name":"data"},{"type":"Identifier","start":913,"end":920,"name":"options"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":923,"end":927,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":928,"end":935,"callee":{"type":"Identifier","start":928,"end":932,"name":"take"},"arguments":[{"type":"Literal","start":933,"end":934,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":963,"end":1037,"body":[{"type":"ReturnStatement","start":978,"end":1026,"argument":{"type":"CallExpression","start":985,"end":1025,"callee":{"type":"MemberExpression","start":985,"end":1016,"object":{"type":"CallExpression","start":985,"end":1011,"callee":{"type":"Identifier","start":985,"end":989,"name":"from"},"arguments":[{"type":"CallExpression","start":990,"end":1010,"callee":{"type":"Identifier","start":990,"end":996,"name":"setDoc"},"arguments":[{"type":"Identifier","start":997,"end":1003,"name":"docRef"},{"type":"Identifier","start":1005,"end":1009,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1012,"end":1016,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1017,"end":1024,"callee":{"type":"Identifier","start":1017,"end":1021,"name":"take"},"arguments":[{"type":"Literal","start":1022,"end":1023,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":1050,"end":1128,"static":false,"computed":false,"key":{"type":"Identifier","start":1050,"end":1056,"name":"delete"},"kind":"method","value":{"type":"FunctionExpression","start":1056,"end":1128,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1057,"end":1063,"name":"docRef"}],"body":{"type":"BlockStatement","start":1065,"end":1128,"body":[{"type":"ReturnStatement","start":1076,"end":1121,"argument":{"type":"CallExpression","start":1083,"end":1120,"callee":{"type":"MemberExpression","start":1083,"end":1111,"object":{"type":"CallExpression","start":1083,"end":1106,"callee":{"type":"Identifier","start":1083,"end":1087,"name":"from"},"arguments":[{"type":"CallExpression","start":1088,"end":1105,"callee":{"type":"Identifier","start":1088,"end":1097,"name":"deleteDoc"},"arguments":[{"type":"Identifier","start":1098,"end":1104,"name":"docRef"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1107,"end":1111,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1112,"end":1119,"callee":{"type":"Identifier","start":1112,"end":1116,"name":"take"},"arguments":[{"type":"Literal","start":1117,"end":1118,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1134,"end":1233,"static":false,"computed":false,"key":{"type":"Identifier","start":1134,"end":1140,"name":"update"},"kind":"method","value":{"type":"FunctionExpression","start":1140,"end":1233,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1141,"end":1147,"name":"docRef"},{"type":"Identifier","start":1149,"end":1153,"name":"data"},{"type":"Identifier","start":1155,"end":1162,"name":"options"}],"body":{"type":"BlockStatement","start":1164,"end":1233,"body":[{"type":"ReturnStatement","start":1175,"end":1226,"argument":{"type":"CallExpression","start":1182,"end":1225,"callee":{"type":"MemberExpression","start":1182,"end":1216,"object":{"type":"CallExpression","start":1182,"end":1211,"callee":{"type":"Identifier","start":1182,"end":1186,"name":"from"},"arguments":[{"type":"CallExpression","start":1187,"end":1210,"callee":{"type":"Identifier","start":1187,"end":1196,"name":"updateDoc"},"arguments":[{"type":"Identifier","start":1197,"end":1203,"name":"docRef"},{"type":"Identifier","start":1205,"end":1209,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1212,"end":1216,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1217,"end":1224,"callee":{"type":"Identifier","start":1217,"end":1221,"name":"take"},"arguments":[{"type":"Literal","start":1222,"end":1223,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1239,"end":1295,"static":false,"computed":false,"key":{"type":"Identifier","start":1239,"end":1249,"name":"collection"},"kind":"method","value":{"type":"FunctionExpression","start":1249,"end":1295,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1250,"end":1251,"name":"q"}],"body":{"type":"BlockStatement","start":1253,"end":1295,"body":[{"type":"ReturnStatement","start":1264,"end":1288,"argument":{"type":"CallExpression","start":1271,"end":1287,"callee":{"type":"Identifier","start":1271,"end":1275,"name":"from"},"arguments":[{"type":"CallExpression","start":1276,"end":1286,"callee":{"type":"Identifier","start":1276,"end":1283,"name":"getDocs"},"arguments":[{"type":"Identifier","start":1284,"end":1285,"name":"q"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1980,"end":4201,"declaration":{"type":"ClassDeclaration","start":1987,"end":4201,"id":{"type":"Identifier","start":1993,"end":2007,"name":"QueryContainer"},"superClass":null,"body":{"type":"ClassBody","start":2008,"end":4201,"body":[{"type":"MethodDefinition","start":2015,"end":2102,"static":false,"computed":false,"key":{"type":"Identifier","start":2015,"end":2026,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":2026,"end":2102,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2027,"end":2030,"name":"ref"}],"body":{"type":"BlockStatement","start":2032,"end":2102,"body":[{"type":"ExpressionStatement","start":2043,"end":2058,"expression":{"type":"AssignmentExpression","start":2043,"end":2057,"operator":"=","left":{"type":"MemberExpression","start":2043,"end":2051,"object":{"type":"ThisExpression","start":2043,"end":2047},"property":{"type":"Identifier","start":2048,"end":2051,"name":"ref"},"computed":false,"optional":false},"right":{"type":"Identifier","start":2054,"end":2057,"name":"ref"}}},{"type":"ExpressionStatement","start":2068,"end":2095,"expression":{"type":"AssignmentExpression","start":2068,"end":2094,"operator":"=","left":{"type":"MemberExpression","start":2068,"end":2089,"object":{"type":"ThisExpression","start":2068,"end":2072},"property":{"type":"Identifier","start":2073,"end":2089,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2092,"end":2094,"elements":[]}}}]}}},{"type":"MethodDefinition","start":2165,"end":2287,"static":true,"computed":false,"key":{"type":"Identifier","start":2172,"end":2180,"name":"fromPath"},"kind":"method","value":{"type":"FunctionExpression","start":2180,"end":2287,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2181,"end":2190,"name":"firestore"},{"type":"Identifier","start":2192,"end":2196,"name":"path"}],"body":{"type":"BlockStatement","start":2198,"end":2287,"body":[{"type":"VariableDeclaration","start":2209,"end":2249,"declarations":[{"type":"VariableDeclarator","start":2215,"end":2248,"id":{"type":"Identifier","start":2215,"end":2218,"name":"ref"},"init":{"type":"CallExpression","start":2221,"end":2248,"callee":{"type":"Identifier","start":2221,"end":2231,"name":"collection"},"arguments":[{"type":"Identifier","start":2232,"end":2241,"name":"firestore"},{"type":"Identifier","start":2243,"end":2247,"name":"path"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2259,"end":2280,"argument":{"type":"NewExpression","start":2266,"end":2279,"callee":{"type":"ThisExpression","start":2270,"end":2274},"arguments":[{"type":"Identifier","start":2275,"end":2278,"name":"ref"}]}}]}}},{"type":"MethodDefinition","start":2354,"end":2433,"static":false,"computed":false,"key":{"type":"Identifier","start":2358,"end":2363,"name":"query"},"kind":"get","value":{"type":"FunctionExpression","start":2363,"end":2433,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2366,"end":2433,"body":[{"type":"ReturnStatement","start":2377,"end":2426,"argument":{"type":"CallExpression","start":2384,"end":2425,"callee":{"type":"Identifier","start":2384,"end":2389,"name":"query"},"arguments":[{"type":"MemberExpression","start":2390,"end":2398,"object":{"type":"ThisExpression","start":2390,"end":2394},"property":{"type":"Identifier","start":2395,"end":2398,"name":"ref"},"computed":false,"optional":false},{"type":"SpreadElement","start":2400,"end":2424,"argument":{"type":"MemberExpression","start":2403,"end":2424,"object":{"type":"ThisExpression","start":2403,"end":2407},"property":{"type":"Identifier","start":2408,"end":2424,"name":"queryConstraints"},"computed":false,"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":2531,"end":2593,"static":false,"computed":false,"key":{"type":"Identifier","start":2531,"end":2539,"name":"getDocs$"},"kind":"method","value":{"type":"FunctionExpression","start":2539,"end":2593,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2542,"end":2593,"body":[{"type":"ReturnStatement","start":2553,"end":2586,"argument":{"type":"CallExpression","start":2560,"end":2585,"callee":{"type":"Identifier","start":2560,"end":2564,"name":"from"},"arguments":[{"type":"CallExpression","start":2565,"end":2584,"callee":{"type":"Identifier","start":2565,"end":2572,"name":"getDocs"},"arguments":[{"type":"MemberExpression","start":2573,"end":2583,"object":{"type":"ThisExpression","start":2573,"end":2577},"property":{"type":"Identifier","start":2578,"end":2583,"name":"query"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2599,"end":2729,"static":false,"computed":false,"key":{"type":"Identifier","start":2599,"end":2604,"name":"where"},"kind":"method","value":{"type":"FunctionExpression","start":2604,"end":2729,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2605,"end":2614,"name":"fieldPath"},{"type":"Identifier","start":2616,"end":2621,"name":"opStr"},{"type":"Identifier","start":2623,"end":2628,"name":"value"}],"body":{"type":"BlockStatement","start":2630,"end":2729,"body":[{"type":"ExpressionStatement","start":2641,"end":2700,"expression":{"type":"CallExpression","start":2641,"end":2699,"callee":{"type":"MemberExpression","start":2641,"end":2667,"object":{"type":"MemberExpression","start":2641,"end":2662,"object":{"type":"ThisExpression","start":2641,"end":2645},"property":{"type":"Identifier","start":2646,"end":2662,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2663,"end":2667,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2668,"end":2698,"callee":{"type":"Identifier","start":2668,"end":2673,"name":"where"},"arguments":[{"type":"Identifier","start":2674,"end":2683,"name":"fieldPath"},{"type":"Identifier","start":2685,"end":2690,"name":"opStr"},{"type":"Identifier","start":2692,"end":2697,"name":"value"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2710,"end":2722,"argument":{"type":"ThisExpression","start":2717,"end":2721}}]}}},{"type":"MethodDefinition","start":2735,"end":2869,"static":false,"computed":false,"key":{"type":"Identifier","start":2735,"end":2742,"name":"orderBy"},"kind":"method","value":{"type":"FunctionExpression","start":2742,"end":2869,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2743,"end":2752,"name":"fieldPath"},{"type":"Identifier","start":2754,"end":2766,"name":"directionStr"}],"body":{"type":"BlockStatement","start":2768,"end":2869,"body":[{"type":"ExpressionStatement","start":2779,"end":2840,"expression":{"type":"CallExpression","start":2779,"end":2839,"callee":{"type":"MemberExpression","start":2779,"end":2805,"object":{"type":"MemberExpression","start":2779,"end":2800,"object":{"type":"ThisExpression","start":2779,"end":2783},"property":{"type":"Identifier","start":2784,"end":2800,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2801,"end":2805,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2806,"end":2838,"callee":{"type":"Identifier","start":2806,"end":2813,"name":"orderBy"},"arguments":[{"type":"Identifier","start":2814,"end":2823,"name":"fieldPath"},{"type":"Identifier","start":2825,"end":2837,"name":"directionStr"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2850,"end":2862,"argument":{"type":"ThisExpression","start":2857,"end":2861}}]}}},{"type":"MethodDefinition","start":2875,"end":2971,"static":false,"computed":false,"key":{"type":"Identifier","start":2875,"end":2880,"name":"limit"},"kind":"method","value":{"type":"FunctionExpression","start":2880,"end":2971,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2881,"end":2887,"name":"_limit"}],"body":{"type":"BlockStatement","start":2889,"end":2971,"body":[{"type":"ExpressionStatement","start":2900,"end":2942,"expression":{"type":"CallExpression","start":2900,"end":2941,"callee":{"type":"MemberExpression","start":2900,"end":2926,"object":{"type":"MemberExpression","start":2900,"end":2921,"object":{"type":"ThisExpression","start":2900,"end":2904},"property":{"type":"Identifier","start":2905,"end":2921,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2922,"end":2926,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2927,"end":2940,"callee":{"type":"Identifier","start":2927,"end":2932,"name":"limit"},"arguments":[{"type":"Identifier","start":2933,"end":2939,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2952,"end":2964,"argument":{"type":"ThisExpression","start":2959,"end":2963}}]}}},{"type":"MethodDefinition","start":2977,"end":3085,"static":false,"computed":false,"key":{"type":"Identifier","start":2977,"end":2988,"name":"limitToLast"},"kind":"method","value":{"type":"FunctionExpression","start":2988,"end":3085,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2989,"end":2995,"name":"_limit"}],"body":{"type":"BlockStatement","start":2997,"end":3085,"body":[{"type":"ExpressionStatement","start":3008,"end":3056,"expression":{"type":"CallExpression","start":3008,"end":3055,"callee":{"type":"MemberExpression","start":3008,"end":3034,"object":{"type":"MemberExpression","start":3008,"end":3029,"object":{"type":"ThisExpression","start":3008,"end":3012},"property":{"type":"Identifier","start":3013,"end":3029,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3030,"end":3034,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3035,"end":3054,"callee":{"type":"Identifier","start":3035,"end":3046,"name":"limitToLast"},"arguments":[{"type":"Identifier","start":3047,"end":3053,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":3066,"end":3078,"argument":{"type":"ThisExpression","start":3073,"end":3077}}]}}},{"type":"MethodDefinition","start":3091,"end":3361,"static":false,"computed":false,"key":{"type":"Identifier","start":3091,"end":3098,"name":"startAt"},"kind":"method","value":{"type":"FunctionExpression","start":3098,"end":3361,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3099,"end":3107,"name":"snapshot"},{"type":"RestElement","start":3109,"end":3123,"argument":{"type":"Identifier","start":3112,"end":3123,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3125,"end":3361,"body":[{"type":"IfStatement","start":3136,"end":3332,"test":{"type":"Identifier","start":3140,"end":3148,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3150,"end":3222,"body":[{"type":"ExpressionStatement","start":3165,"end":3211,"expression":{"type":"CallExpression","start":3165,"end":3210,"callee":{"type":"MemberExpression","start":3165,"end":3191,"object":{"type":"MemberExpression","start":3165,"end":3186,"object":{"type":"ThisExpression","start":3165,"end":3169},"property":{"type":"Identifier","start":3170,"end":3186,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3187,"end":3191,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3192,"end":3209,"callee":{"type":"Identifier","start":3192,"end":3199,"name":"startAt"},"arguments":[{"type":"Identifier","start":3200,"end":3208,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3237,"end":3332,"test":{"type":"Identifier","start":3241,"end":3252,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":3254,"end":3332,"body":[{"type":"ExpressionStatement","start":3269,"end":3321,"expression":{"type":"CallExpression","start":3269,"end":3320,"callee":{"type":"MemberExpression","start":3269,"end":3295,"object":{"type":"MemberExpression","start":3269,"end":3290,"object":{"type":"ThisExpression","start":3269,"end":3273},"property":{"type":"Identifier","start":3274,"end":3290,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3291,"end":3295,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3296,"end":3319,"callee":{"type":"Identifier","start":3296,"end":3303,"name":"startAt"},"arguments":[{"type":"SpreadElement","start":3304,"end":3318,"argument":{"type":"Identifier","start":3307,"end":3318,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":3342,"end":3354,"argument":{"type":"ThisExpression","start":3349,"end":3353}}]}}},{"type":"MethodDefinition","start":3367,"end":3646,"static":false,"computed":false,"key":{"type":"Identifier","start":3367,"end":3377,"name":"startAfter"},"kind":"method","value":{"type":"FunctionExpression","start":3377,"end":3646,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3378,"end":3386,"name":"snapshot"},{"type":"RestElement","start":3388,"end":3402,"argument":{"type":"Identifier","start":3391,"end":3402,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3404,"end":3646,"body":[{"type":"IfStatement","start":3415,"end":3617,"test":{"type":"Identifier","start":3419,"end":3427,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3429,"end":3504,"body":[{"type":"ExpressionStatement","start":3444,"end":3493,"expression":{"type":"CallExpression","start":3444,"end":3492,"callee":{"type":"MemberExpression","start":3444,"end":3470,"object":{"type":"MemberExpression","start":3444,"end":3465,"object":{"type":"ThisExpression","start":3444,"end":3448},"property":{"type":"Identifier","start":3449,"end":3465,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3466,"end":3470,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3471,"end":3491,"callee":{"type":"Identifier","start":3471,"end":3481,"name":"startAfter"},"arguments":[{"type":"Identifier","start":3482,"end":3490,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3519,"end":3617,"test":{"type":"Identifier","start":3523,"end":3534,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":3536,"end":3617,"body":[{"type":"ExpressionStatement","start":3551,"end":3606,"expression":{"type":"CallExpression","start":3551,"end":3605,"callee":{"type":"MemberExpression","start":3551,"end":3577,"object":{"type":"MemberExpression","start":3551,"end":3572,"object":{"type":"ThisExpression","start":3551,"end":3555},"property":{"type":"Identifier","start":3556,"end":3572,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3573,"end":3577,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3578,"end":3604,"callee":{"type":"Identifier","start":3578,"end":3588,"name":"startAfter"},"arguments":[{"type":"SpreadElement","start":3589,"end":3603,"argument":{"type":"Identifier","start":3592,"end":3603,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":3627,"end":3639,"argument":{"type":"ThisExpression","start":3634,"end":3638}}]}}},{"type":"MethodDefinition","start":3652,"end":3916,"static":false,"computed":false,"key":{"type":"Identifier","start":3652,"end":3657,"name":"endAt"},"kind":"method","value":{"type":"FunctionExpression","start":3657,"end":3916,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3658,"end":3666,"name":"snapshot"},{"type":"RestElement","start":3668,"end":3682,"argument":{"type":"Identifier","start":3671,"end":3682,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3684,"end":3916,"body":[{"type":"IfStatement","start":3695,"end":3887,"test":{"type":"Identifier","start":3699,"end":3707,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3709,"end":3779,"body":[{"type":"ExpressionStatement","start":3724,"end":3768,"expression":{"type":"CallExpression","start":3724,"end":3767,"callee":{"type":"MemberExpression","start":3724,"end":3750,"object":{"type":"MemberExpression","start":3724,"end":3745,"object":{"type":"ThisExpression","start":3724,"end":3728},"property":{"type":"Identifier","start":3729,"end":3745,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3746,"end":3750,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3751,"end":3766,"callee":{"type":"Identifier","start":3751,"end":3756,"name":"endAt"},"arguments":[{"type":"Identifier","start":3757,"end":3765,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3794,"end":3887,"test":{"type":"Identifier","start":3798,"end":3809,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":3811,"end":3887,"body":[{"type":"ExpressionStatement","start":3826,"end":3876,"expression":{"type":"CallExpression","start":3826,"end":3875,"callee":{"type":"MemberExpression","start":3826,"end":3852,"object":{"type":"MemberExpression","start":3826,"end":3847,"object":{"type":"ThisExpression","start":3826,"end":3830},"property":{"type":"Identifier","start":3831,"end":3847,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3848,"end":3852,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3853,"end":3874,"callee":{"type":"Identifier","start":3853,"end":3858,"name":"endAt"},"arguments":[{"type":"SpreadElement","start":3859,"end":3873,"argument":{"type":"Identifier","start":3862,"end":3873,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":3897,"end":3909,"argument":{"type":"ThisExpression","start":3904,"end":3908}}]}}},{"type":"MethodDefinition","start":3922,"end":4198,"static":false,"computed":false,"key":{"type":"Identifier","start":3922,"end":3931,"name":"endBefore"},"kind":"method","value":{"type":"FunctionExpression","start":3931,"end":4198,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3932,"end":3940,"name":"snapshot"},{"type":"RestElement","start":3942,"end":3956,"argument":{"type":"Identifier","start":3945,"end":3956,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3958,"end":4198,"body":[{"type":"IfStatement","start":3969,"end":4169,"test":{"type":"Identifier","start":3973,"end":3981,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3983,"end":4057,"body":[{"type":"ExpressionStatement","start":3998,"end":4046,"expression":{"type":"CallExpression","start":3998,"end":4045,"callee":{"type":"MemberExpression","start":3998,"end":4024,"object":{"type":"MemberExpression","start":3998,"end":4019,"object":{"type":"ThisExpression","start":3998,"end":4002},"property":{"type":"Identifier","start":4003,"end":4019,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4020,"end":4024,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4025,"end":4044,"callee":{"type":"Identifier","start":4025,"end":4034,"name":"endBefore"},"arguments":[{"type":"Identifier","start":4035,"end":4043,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":4072,"end":4169,"test":{"type":"Identifier","start":4076,"end":4087,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":4089,"end":4169,"body":[{"type":"ExpressionStatement","start":4104,"end":4158,"expression":{"type":"CallExpression","start":4104,"end":4157,"callee":{"type":"MemberExpression","start":4104,"end":4130,"object":{"type":"MemberExpression","start":4104,"end":4125,"object":{"type":"ThisExpression","start":4104,"end":4108},"property":{"type":"Identifier","start":4109,"end":4125,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4126,"end":4130,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4131,"end":4156,"callee":{"type":"Identifier","start":4131,"end":4140,"name":"endBefore"},"arguments":[{"type":"SpreadElement","start":4141,"end":4155,"argument":{"type":"Identifier","start":4144,"end":4155,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":4179,"end":4191,"argument":{"type":"ThisExpression","start":4186,"end":4190}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":4203,"end":17709}]},"code":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, collection, deleteDoc, endAt, endBefore, getDoc, getDocs, getFirestore, limit, limitToLast, orderBy, query, setDoc, startAfter, startAt, updateDoc, where, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Stop gap until I figure this out..it seems I do not need rxfire anymore but can instead use firebase directly...one less library..woo\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, collection, deleteDoc, endAt, endBefore, getDoc, getDocs, getFirestore, limit, limitToLast, orderBy, query, setDoc, startAfter, startAt, updateDoc, where, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Stop gap until I figure this out..it seems I do not need rxfire anymore but can instead use firebase directly...one less library..woo\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firebase-extended-wrapper.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-wrapper.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[13,0,0,12],[15,0,0,25],[21,0,0,31],[27,0,0,37],[28,0,0,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[13,0,2,12],[15,0,2,13],[21,0,2,19],[37,0,2,35],[38,0,2,36]],[[0,0,4,0],[7,0,4,7],[9,0,5,2],[15,0,5,8],[17,0,6,2],[27,0,6,12],[29,0,8,2],[38,0,8,11],[40,0,12,2],[45,0,12,7],[47,0,13,2],[56,0,13,11],[58,0,15,2],[64,0,15,8],[66,0,16,2],[73,0,16,9],[75,0,17,2],[87,0,17,14],[89,0,18,2],[94,0,18,7],[96,0,19,2],[107,0,19,13],[109,0,20,2],[116,0,20,9],[118,0,21,2],[123,0,21,7],[125,0,24,2],[131,0,24,8],[133,0,26,2],[143,0,26,12],[145,0,27,2],[152,0,27,9],[154,0,29,2],[163,0,29,11],[165,0,30,2],[170,0,30,7],[173,0,31,1],[179,0,31,7],[199,0,31,27],[200,0,31,28]],[[0,0,35,0],[6,0,35,6],[13,0,35,13],[36,0,35,36]],[[4,0,36,2]],[],[[7,0,38,5]],[[4,0,40,2],[16,0,40,21],[27,0,40,45]],[[8,0,40,21],[24,0,40,32],[27,0,40,21],[38,0,40,32],[39,0,40,45]],[[4,0,41,2],[5,0,41,3]],[[4,0,43,2],[8,0,43,6],[17,0,43,15]],[[8,0,44,4],[15,0,44,11],[27,0,44,23],[28,0,44,24],[32,0,44,28],[33,0,44,29],[44,0,44,40],[45,0,44,41],[46,0,44,42]],[[4,0,45,2],[5,0,45,3]],[[4,0,47,2],[10,0,47,8]],[[4,0,48,9],[7,0,48,12],[8,0,48,31],[14,0,48,59]],[[8,0,49,4],[15,0,49,11],[19,0,49,15],[20,0,49,16],[26,0,49,22],[27,0,49,23],[33,0,49,29],[34,0,49,30],[35,0,49,31],[36,0,49,32]],[[4,0,50,2],[5,0,50,3]],[[4,0,52,9],[7,0,52,12],[8,0,52,16],[21,0,52,53],[23,0,52,55],[27,0,52,62]],[[8,0,53,4],[15,0,53,11],[19,0,53,15],[20,0,53,16],[26,0,53,22],[27,0,53,23],[40,0,53,36],[42,0,53,38],[46,0,53,42],[47,0,53,43],[48,0,53,44],[49,0,53,45],[53,0,53,49],[54,0,54,6],[58,0,54,10],[59,0,54,11],[60,0,54,12],[61,0,54,13],[62,0,55,5],[63,0,55,6]],[[4,0,56,2],[5,0,56,3]],[[4,0,58,9],[7,0,58,12],[8,0,58,16],[14,0,58,44],[16,0,58,46],[20,0,58,53],[22,0,58,55],[29,0,58,75]],[[8,0,60,4],[12,0,60,8],[19,0,60,15],[21,0,60,17]],[[12,0,61,6],[19,0,61,13],[23,0,61,17],[24,0,61,18],[30,0,61,24],[31,0,61,25],[37,0,61,31],[39,0,61,33],[43,0,61,37],[45,0,61,39],[52,0,61,46],[53,0,61,47],[54,0,61,48],[55,0,61,49],[59,0,61,53],[60,0,62,8],[64,0,62,12],[65,0,62,13],[66,0,62,14],[67,0,62,15],[68,0,63,7],[69,0,63,8]],[[9,0,64,5]],[[13,0,64,11]],[[12,0,65,6],[19,0,65,13],[23,0,65,17],[24,0,65,18],[30,0,65,24],[31,0,65,25],[37,0,65,31],[39,0,65,33],[43,0,65,37],[44,0,65,38],[45,0,65,39],[46,0,65,40],[50,0,65,44],[51,0,66,8],[55,0,66,12],[56,0,66,13],[57,0,66,14],[58,0,66,15],[59,0,67,7],[60,0,67,8]],[[9,0,68,5]],[[4,0,69,2],[5,0,69,3]],[[4,0,72,2],[10,0,72,8],[11,0,72,12],[17,0,72,40]],[[8,0,73,4],[15,0,73,11],[19,0,73,15],[20,0,73,16],[29,0,73,25],[30,0,73,26],[36,0,73,32],[37,0,73,33],[38,0,73,34],[39,0,73,35],[43,0,73,39],[44,0,74,6],[48,0,74,10],[49,0,74,11],[50,0,74,12],[51,0,74,13],[52,0,75,5],[53,0,75,6]],[[4,0,76,2],[5,0,76,3]],[[4,0,78,2],[10,0,78,8],[11,0,78,12],[17,0,78,40],[19,0,78,42],[23,0,78,70],[25,0,78,72],[32,0,78,92]],[[8,0,79,4],[15,0,79,11],[19,0,79,15],[20,0,79,16],[29,0,79,25],[30,0,79,38],[36,0,79,44],[38,0,79,46],[42,0,79,50],[43,0,79,51],[44,0,79,52],[45,0,79,53],[49,0,79,57],[50,0,80,6],[54,0,80,10],[55,0,80,11],[56,0,80,12],[57,0,80,13],[58,0,81,5],[59,0,81,6]],[[4,0,82,2],[5,0,82,3]],[[4,0,84,9],[14,0,84,19],[15,0,84,23],[16,0,84,34]],[[8,0,85,4],[15,0,85,11],[19,0,85,15],[20,0,85,16],[27,0,85,23],[28,0,85,24],[29,0,85,25],[30,0,85,26],[31,0,85,27],[32,0,85,28]],[[4,0,86,2],[5,0,86,3]],[[1,0,89,1]],[[0,0,91,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,104,3]],[[0,0,105,0],[6,0,105,6],[13,0,105,13],[27,0,105,27]],[[4,0,109,2],[16,0,109,21],[19,0,109,48]],[[8,0,109,21],[16,0,109,24],[19,0,109,21],[22,0,109,24],[23,0,109,48]],[[8,0,107,9],[29,0,107,25],[32,0,107,47],[34,0,107,49],[35,0,107,50]],[[4,0,110,2],[5,0,110,3]],[[4,0,112,2],[55,0,112,53]],[[4,0,113,2],[10,0,113,8],[11,0,113,9],[19,0,113,17],[20,0,113,21],[29,0,113,41],[31,0,113,43],[35,0,113,55]],[[8,0,114,4],[14,0,114,10],[17,0,114,13],[20,0,114,16],[30,0,114,26],[31,0,114,27],[40,0,114,36],[42,0,114,38],[46,0,114,42],[47,0,114,69],[48,0,114,70]],[[8,0,115,4],[15,0,115,11],[19,0,115,15],[23,0,115,19],[24,0,115,20],[27,0,115,23],[28,0,115,24],[29,0,115,25]],[[4,0,116,2],[5,0,116,3]],[[4,0,118,2],[59,0,118,57]],[[4,0,119,2],[8,0,119,6],[13,0,119,11]],[[8,0,120,4],[15,0,120,11],[20,0,120,16],[21,0,120,17],[25,0,120,21],[26,0,120,22],[29,0,120,25],[31,0,120,27],[34,0,120,30],[38,0,120,34],[39,0,120,35],[55,0,120,51],[56,0,120,52],[57,0,120,53]],[[4,0,121,2],[5,0,121,3]],[[4,0,123,2],[90,0,123,88]],[[4,0,124,2],[12,0,124,10]],[[8,0,125,4],[15,0,125,11],[19,0,125,15],[20,0,125,16],[27,0,125,23],[28,0,125,27],[32,0,125,31],[33,0,125,32],[38,0,125,37],[39,0,125,38],[40,0,125,39],[41,0,125,40]],[[4,0,126,2],[5,0,126,3]],[[4,0,128,2],[9,0,128,7],[10,0,128,8],[19,0,128,37],[21,0,128,39],[26,0,128,59],[28,0,128,61],[33,0,128,75]],[[8,0,129,4],[12,0,129,8],[13,0,129,9],[29,0,129,25],[30,0,129,26],[34,0,129,30],[35,0,129,31],[40,0,129,36],[41,0,129,37],[50,0,129,46],[52,0,129,48],[57,0,129,53],[59,0,129,55],[64,0,129,60],[65,0,129,61],[66,0,129,62],[67,0,129,63]],[[8,0,130,4],[15,0,130,11],[19,0,130,15],[20,0,130,16]],[[4,0,131,2],[5,0,131,3]],[[4,0,133,2],[11,0,133,9],[12,0,133,10],[21,0,133,39],[23,0,133,41],[35,0,133,72]],[[8,0,134,4],[12,0,134,8],[13,0,134,9],[29,0,134,25],[30,0,134,26],[34,0,134,30],[35,0,134,31],[42,0,134,38],[43,0,134,39],[52,0,134,48],[54,0,134,50],[66,0,134,62],[67,0,134,63],[68,0,134,64],[69,0,134,65]],[[8,0,135,4],[15,0,135,11],[19,0,135,15],[20,0,135,16]],[[4,0,136,2],[5,0,136,3]],[[4,0,138,2],[9,0,138,7],[10,0,138,8],[16,0,138,22]],[[8,0,139,4],[12,0,139,8],[13,0,139,9],[29,0,139,25],[30,0,139,26],[34,0,139,30],[35,0,139,31],[40,0,139,36],[41,0,139,37],[47,0,139,43],[48,0,139,44],[49,0,139,45],[50,0,139,46]],[[8,0,140,4],[15,0,140,11],[19,0,140,15],[20,0,140,16]],[[4,0,141,2],[5,0,141,3]],[[4,0,143,2],[15,0,143,13],[16,0,143,14],[22,0,143,28]],[[8,0,144,4],[12,0,144,8],[13,0,144,9],[29,0,144,25],[30,0,144,26],[34,0,144,30],[35,0,144,31],[46,0,144,42],[47,0,144,43],[53,0,144,49],[54,0,144,50],[55,0,144,51],[56,0,144,52]],[[8,0,145,4],[15,0,145,11],[19,0,145,15],[20,0,145,16]],[[4,0,146,2],[5,0,146,3]],[[4,0,151,2],[11,0,151,9],[12,0,151,10],[20,0,151,46],[22,0,151,48],[25,0,151,51],[36,0,151,73]],[[8,0,152,4],[12,0,152,8],[20,0,152,16],[22,0,152,18]],[[12,0,153,6],[16,0,153,10],[17,0,153,11],[33,0,153,27],[34,0,153,28],[38,0,153,32],[39,0,153,33],[46,0,153,40],[47,0,153,41],[55,0,153,49],[56,0,153,50],[57,0,153,51],[58,0,153,52]],[[9,0,154,5]],[[13,0,154,11],[17,0,154,15],[28,0,154,26],[30,0,154,28]],[[12,0,155,6],[16,0,155,10],[17,0,155,11],[33,0,155,27],[34,0,155,28],[38,0,155,32],[39,0,155,33],[46,0,155,40],[47,0,155,41],[50,0,155,44],[61,0,155,55],[62,0,155,56],[63,0,155,57],[64,0,155,58]],[[9,0,156,5]],[[8,0,157,4],[15,0,157,11],[19,0,157,15],[20,0,157,16]],[[4,0,158,2],[5,0,158,3]],[[4,0,163,2],[14,0,163,12],[15,0,163,13],[23,0,163,49],[25,0,163,51],[28,0,163,54],[39,0,163,76]],[[8,0,164,4],[12,0,164,8],[20,0,164,16],[22,0,164,18]],[[12,0,165,6],[16,0,165,10],[17,0,165,11],[33,0,165,27],[34,0,165,28],[38,0,165,32],[39,0,165,33],[49,0,165,43],[50,0,165,44],[58,0,165,52],[59,0,165,53],[60,0,165,54],[61,0,165,55]],[[9,0,166,5]],[[13,0,166,11],[17,0,166,15],[28,0,166,26],[30,0,166,28]],[[12,0,167,6],[16,0,167,10],[17,0,167,11],[33,0,167,27],[34,0,167,28],[38,0,167,32],[39,0,167,33],[49,0,167,43],[50,0,167,44],[53,0,167,47],[64,0,167,58],[65,0,167,59],[66,0,167,60],[67,0,167,61]],[[9,0,168,5]],[[8,0,169,4],[15,0,169,11],[19,0,169,15],[20,0,169,16]],[[4,0,170,2],[5,0,170,3]],[[4,0,175,2],[9,0,175,7],[10,0,175,8],[18,0,175,44],[20,0,175,46],[23,0,175,49],[34,0,175,71]],[[8,0,176,4],[12,0,176,8],[20,0,176,16],[22,0,176,18]],[[12,0,177,6],[16,0,177,10],[17,0,177,11],[33,0,177,27],[34,0,177,28],[38,0,177,32],[39,0,177,33],[44,0,177,38],[45,0,177,39],[53,0,177,47],[54,0,177,48],[55,0,177,49],[56,0,177,50]],[[9,0,178,5]],[[13,0,178,11],[17,0,178,15],[28,0,178,26],[30,0,178,28]],[[12,0,179,6],[16,0,179,10],[17,0,179,11],[33,0,179,27],[34,0,179,28],[38,0,179,32],[39,0,179,33],[44,0,179,38],[45,0,179,39],[48,0,179,42],[59,0,179,53],[60,0,179,54],[61,0,179,55],[62,0,179,56]],[[9,0,180,5]],[[8,0,181,4],[15,0,181,11],[19,0,181,15],[20,0,181,16]],[[4,0,182,2],[5,0,182,3]],[[4,0,187,2],[13,0,187,11],[14,0,187,12],[22,0,187,48],[24,0,187,50],[27,0,187,53],[38,0,187,75]],[[8,0,188,4],[12,0,188,8],[20,0,188,16],[22,0,188,18]],[[12,0,189,6],[16,0,189,10],[17,0,189,11],[33,0,189,27],[34,0,189,28],[38,0,189,32],[39,0,189,33],[48,0,189,42],[49,0,189,43],[57,0,189,51],[58,0,189,52],[59,0,189,53],[60,0,189,54]],[[9,0,190,5]],[[13,0,190,11],[17,0,190,15],[28,0,190,26],[30,0,190,28]],[[12,0,191,6],[16,0,191,10],[17,0,191,11],[33,0,191,27],[34,0,191,28],[38,0,191,32],[39,0,191,33],[48,0,191,42],[49,0,191,43],[52,0,191,46],[63,0,191,57],[64,0,191,58],[65,0,191,59],[66,0,191,60]],[[9,0,192,5]],[[8,0,193,4],[15,0,193,11],[19,0,193,15],[20,0,193,16]],[[4,0,194,2],[5,0,194,3]],[[1,0,196,1]]],"sourcesContent":["import {from, Observable} from 'rxjs';\r\nimport {FirestoreWrapper} from './interfaces';\r\nimport {take} from 'rxjs/operators';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  endAt,\r\n  endBefore,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  limit,\r\n  limitToLast,\r\n  orderBy,\r\n  query,\r\n  Query,\r\n  QuerySnapshot,\r\n  setDoc,\r\n  SetOptions,\r\n  startAfter,\r\n  startAt,\r\n  UpdateData,\r\n  updateDoc,\r\n  where,\r\n} from 'firebase/firestore';\r\nimport {FieldPath, OrderByDirection, QueryConstraint, WhereFilterOp} from '@firebase/firestore';\r\n\r\n\r\nexport class FirestoreWrapper implements FirestoreWrapper {\r\n  /**\r\n   * Stop gap until I figure this out..it seems I do not need rxfire anymore but can instead use firebase directly...one less library..woo\r\n   */\r\n\r\n  constructor(public firebaseApp: FirebaseApp) {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return getFirestore(this.firebaseApp);\r\n  }\r\n\r\n  // doc\r\n  public doc<T = DocumentData>(docRef: DocumentReference<T>): Observable<DocumentSnapshot<T>> {\r\n    return from(getDoc(docRef));\r\n  }\r\n\r\n  public add<T>(collectionRef: CollectionReference<T>, data: T): Observable<DocumentReference<T>> {\r\n    return from(addDoc(collectionRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public set<A>(docRef: DocumentReference<A>, data: A, options?: SetOptions): Observable<void> {\r\n\r\n    if (options) {\r\n      return from(setDoc(docRef, data, options)).pipe(\r\n        take(1)\r\n      );\r\n    } else {\r\n      return from(setDoc(docRef, data)).pipe(\r\n        take(1)\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  delete<T>(docRef: DocumentReference<T>): Observable<void> {\r\n    return from(deleteDoc(docRef)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  update<T>(docRef: DocumentReference<T>, data: UpdateData<Partial<T>>, options?: SetOptions): Observable<void> {\r\n    return from(updateDoc<Partial<T>>(docRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public collection<T>(q: Query<T>): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs(q));\r\n  }\r\n\r\n\r\n}\r\n\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer<T> {\r\n\r\n  public queryConstraints: QueryConstraint[] = [];\r\n\r\n  constructor(public ref: CollectionReference<T>) {\r\n  }\r\n\r\n  /** factory method to create container from path */\r\n  static fromPath<T>(firestore: Firestore, path: string): QueryContainer<T> {\r\n    const ref = collection(firestore, path) as CollectionReference<T>;\r\n    return new this(ref);\r\n  }\r\n\r\n  /** Returns the query with all the query constraints */\r\n  get query(): Query<T> {\r\n    return query(this.ref, ...this.queryConstraints);\r\n  }\r\n\r\n  /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n  getDocs$(): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs<T>(this.query));\r\n  }\r\n\r\n  where(fieldPath: string | FieldPath, opStr: WhereFilterOp, value: unknown): QueryContainer<T> {\r\n    this.queryConstraints.push(where(fieldPath, opStr, value));\r\n    return this;\r\n  }\r\n\r\n  orderBy(fieldPath: string | FieldPath, directionStr?: OrderByDirection): QueryContainer<T> {\r\n    this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n    return this;\r\n  }\r\n\r\n  limit(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limit(_limit));\r\n    return this;\r\n  }\r\n\r\n  limitToLast(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limitToLast(_limit));\r\n    return this;\r\n  }\r\n\r\n  startAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  startAfter(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAfter(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAfter(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endBefore(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endBefore(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endBefore(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":179619,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":32,"imported":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"},"local":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"}},{"type":"ImportSpecifier","start":34,"end":38,"imported":{"type":"Identifier","start":34,"end":38,"name":"from"},"local":{"type":"Identifier","start":34,"end":38,"name":"from"}},{"type":"ImportSpecifier","start":40,"end":42,"imported":{"type":"Identifier","start":40,"end":42,"name":"of"},"local":{"type":"Identifier","start":40,"end":42,"name":"of"}}],"source":{"type":"Literal","start":50,"end":56,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":59,"end":148,"specifiers":[{"type":"ImportSpecifier","start":68,"end":78,"imported":{"type":"Identifier","start":68,"end":78,"name":"catchError"},"local":{"type":"Identifier","start":68,"end":78,"name":"catchError"}},{"type":"ImportSpecifier","start":80,"end":86,"imported":{"type":"Identifier","start":80,"end":86,"name":"filter"},"local":{"type":"Identifier","start":80,"end":86,"name":"filter"}},{"type":"ImportSpecifier","start":88,"end":91,"imported":{"type":"Identifier","start":88,"end":91,"name":"map"},"local":{"type":"Identifier","start":88,"end":91,"name":"map"}},{"type":"ImportSpecifier","start":93,"end":101,"imported":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"},"local":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"}},{"type":"ImportSpecifier","start":103,"end":112,"imported":{"type":"Identifier","start":103,"end":112,"name":"switchMap"},"local":{"type":"Identifier","start":103,"end":112,"name":"switchMap"}},{"type":"ImportSpecifier","start":114,"end":118,"imported":{"type":"Identifier","start":114,"end":118,"name":"take"},"local":{"type":"Identifier","start":114,"end":118,"name":"take"}},{"type":"ImportSpecifier","start":120,"end":123,"imported":{"type":"Identifier","start":120,"end":123,"name":"tap"},"local":{"type":"Identifier","start":120,"end":123,"name":"tap"}}],"source":{"type":"Literal","start":131,"end":147,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":150,"end":217,"specifiers":[{"type":"ImportSpecifier","start":159,"end":176,"imported":{"type":"Identifier","start":159,"end":176,"name":"DocumentReference"},"local":{"type":"Identifier","start":159,"end":176,"name":"DocumentReference"}},{"type":"ImportSpecifier","start":178,"end":188,"imported":{"type":"Identifier","start":178,"end":188,"name":"writeBatch"},"local":{"type":"Identifier","start":178,"end":188,"name":"writeBatch"}}],"source":{"type":"Literal","start":196,"end":216,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":219,"end":369,"specifiers":[{"type":"ImportSpecifier","start":228,"end":242,"imported":{"type":"Identifier","start":228,"end":242,"name":"addCreatedDate"},"local":{"type":"Identifier","start":228,"end":242,"name":"addCreatedDate"}},{"type":"ImportSpecifier","start":244,"end":257,"imported":{"type":"Identifier","start":244,"end":257,"name":"addDataToItem"},"local":{"type":"Identifier","start":244,"end":257,"name":"addDataToItem"}},{"type":"ImportSpecifier","start":259,"end":274,"imported":{"type":"Identifier","start":259,"end":274,"name":"addModifiedDate"},"local":{"type":"Identifier","start":259,"end":274,"name":"addModifiedDate"}},{"type":"ImportSpecifier","start":276,"end":298,"imported":{"type":"Identifier","start":276,"end":298,"name":"convertTimestampToDate"},"local":{"type":"Identifier","start":276,"end":298,"name":"convertTimestampToDate"}},{"type":"ImportSpecifier","start":300,"end":315,"imported":{"type":"Identifier","start":300,"end":315,"name":"getDocRefWithId"},"local":{"type":"Identifier","start":300,"end":315,"name":"getDocRefWithId"}},{"type":"ImportSpecifier","start":317,"end":331,"imported":{"type":"Identifier","start":317,"end":331,"name":"getRefFromPath"},"local":{"type":"Identifier","start":317,"end":331,"name":"getRefFromPath"}},{"type":"ImportSpecifier","start":333,"end":349,"imported":{"type":"Identifier","start":333,"end":349,"name":"getSubCollection"},"local":{"type":"Identifier","start":333,"end":349,"name":"getSubCollection"}}],"source":{"type":"Literal","start":357,"end":368,"value":"./helpers","raw":"'./helpers'"}},{"type":"ImportDeclaration","start":371,"end":437,"specifiers":[{"type":"ImportSpecifier","start":380,"end":395,"imported":{"type":"Identifier","start":380,"end":395,"name":"moveItemInArray"},"local":{"type":"Identifier","start":380,"end":395,"name":"moveItemInArray"}},{"type":"ImportSpecifier","start":397,"end":414,"imported":{"type":"Identifier","start":397,"end":414,"name":"transferArrayItem"},"local":{"type":"Identifier","start":397,"end":414,"name":"transferArrayItem"}}],"source":{"type":"Literal","start":422,"end":436,"value":"./drag-utils","raw":"'./drag-utils'"}},{"type":"ImportDeclaration","start":439,"end":500,"specifiers":[{"type":"ImportSpecifier","start":448,"end":462,"imported":{"type":"Identifier","start":448,"end":462,"name":"QueryContainer"},"local":{"type":"Identifier","start":448,"end":462,"name":"QueryContainer"}}],"source":{"type":"Literal","start":470,"end":499,"value":"./firebase-extended-wrapper","raw":"'./firebase-extended-wrapper'"}},{"type":"ExportNamedDeclaration","start":579,"end":608,"declaration":{"type":"VariableDeclaration","start":586,"end":608,"declarations":[{"type":"VariableDeclarator","start":590,"end":607,"id":{"type":"Identifier","start":590,"end":607,"name":"DocNotExistAction"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":610,"end":1288,"expression":{"type":"CallExpression","start":610,"end":1287,"callee":{"type":"FunctionExpression","start":611,"end":1239,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":621,"end":638,"name":"DocNotExistAction"}],"body":{"type":"BlockStatement","start":640,"end":1239,"body":[{"type":"ExpressionStatement","start":681,"end":753,"expression":{"type":"AssignmentExpression","start":681,"end":752,"operator":"=","left":{"type":"MemberExpression","start":681,"end":736,"object":{"type":"Identifier","start":681,"end":698,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":699,"end":735,"operator":"=","left":{"type":"MemberExpression","start":699,"end":731,"object":{"type":"Identifier","start":699,"end":716,"name":"DocNotExistAction"},"property":{"type":"Literal","start":717,"end":730,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""},"computed":true,"optional":false},"right":{"type":"Literal","start":734,"end":735,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":739,"end":752,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""}}},{"type":"ExpressionStatement","start":878,"end":966,"expression":{"type":"AssignmentExpression","start":878,"end":965,"operator":"=","left":{"type":"MemberExpression","start":878,"end":941,"object":{"type":"Identifier","start":878,"end":895,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":896,"end":940,"operator":"=","left":{"type":"MemberExpression","start":896,"end":936,"object":{"type":"Identifier","start":896,"end":913,"name":"DocNotExistAction"},"property":{"type":"Literal","start":914,"end":935,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""},"computed":true,"optional":false},"right":{"type":"Literal","start":939,"end":940,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":944,"end":965,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""}}},{"type":"ExpressionStatement","start":1025,"end":1087,"expression":{"type":"AssignmentExpression","start":1025,"end":1086,"operator":"=","left":{"type":"MemberExpression","start":1025,"end":1075,"object":{"type":"Identifier","start":1025,"end":1042,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1043,"end":1074,"operator":"=","left":{"type":"MemberExpression","start":1043,"end":1070,"object":{"type":"Identifier","start":1043,"end":1060,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1061,"end":1069,"value":"FILTER","raw":"\"FILTER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1073,"end":1074,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1078,"end":1086,"value":"FILTER","raw":"\"FILTER\""}}},{"type":"ExpressionStatement","start":1148,"end":1236,"expression":{"type":"AssignmentExpression","start":1148,"end":1235,"operator":"=","left":{"type":"MemberExpression","start":1148,"end":1211,"object":{"type":"Identifier","start":1148,"end":1165,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1166,"end":1210,"operator":"=","left":{"type":"MemberExpression","start":1166,"end":1206,"object":{"type":"Identifier","start":1166,"end":1183,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1184,"end":1205,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1209,"end":1210,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1214,"end":1235,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""}}}]}},"arguments":[{"type":"LogicalExpression","start":1241,"end":1286,"left":{"type":"Identifier","start":1241,"end":1258,"name":"DocNotExistAction"},"operator":"||","right":{"type":"AssignmentExpression","start":1263,"end":1285,"operator":"=","left":{"type":"Identifier","start":1263,"end":1280,"name":"DocNotExistAction"},"right":{"type":"ObjectExpression","start":1283,"end":1285,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":1328,"end":54427,"declaration":{"type":"ClassDeclaration","start":1335,"end":54427,"id":{"type":"Identifier","start":1341,"end":1358,"name":"FirestoreExtended"},"superClass":null,"body":{"type":"ClassBody","start":1359,"end":54427,"body":[{"type":"MethodDefinition","start":1642,"end":1755,"static":false,"computed":false,"key":{"type":"Identifier","start":1642,"end":1653,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1653,"end":1755,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1654,"end":1656,"name":"fs"},{"type":"AssignmentPattern","start":1658,"end":1679,"left":{"type":"Identifier","start":1658,"end":1670,"name":"defaultDocId"},"right":{"type":"Literal","start":1673,"end":1679,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":1681,"end":1755,"body":[{"type":"ExpressionStatement","start":1692,"end":1705,"expression":{"type":"AssignmentExpression","start":1692,"end":1704,"operator":"=","left":{"type":"MemberExpression","start":1692,"end":1699,"object":{"type":"ThisExpression","start":1692,"end":1696},"property":{"type":"Identifier","start":1697,"end":1699,"name":"fs"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1702,"end":1704,"name":"fs"}}},{"type":"ExpressionStatement","start":1715,"end":1748,"expression":{"type":"AssignmentExpression","start":1715,"end":1747,"operator":"=","left":{"type":"MemberExpression","start":1715,"end":1732,"object":{"type":"ThisExpression","start":1715,"end":1719},"property":{"type":"Identifier","start":1720,"end":1732,"name":"defaultDocId"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1735,"end":1747,"name":"defaultDocId"}}}]}}},{"type":"MethodDefinition","start":2881,"end":3123,"static":false,"computed":false,"key":{"type":"Identifier","start":2881,"end":2894,"name":"listenForDoc$"},"kind":"method","value":{"type":"FunctionExpression","start":2894,"end":3123,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2895,"end":2901,"name":"docRef"},{"type":"AssignmentPattern","start":2903,"end":2928,"left":{"type":"Identifier","start":2903,"end":2923,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":2926,"end":2928,"elements":[]}},{"type":"AssignmentPattern","start":2930,"end":2986,"left":{"type":"Identifier","start":2930,"end":2946,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":2949,"end":2986,"object":{"type":"Identifier","start":2949,"end":2966,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":2967,"end":2986,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":2988,"end":3123,"body":[{"type":"ReturnStatement","start":2999,"end":3116,"argument":{"type":"CallExpression","start":3006,"end":3115,"callee":{"type":"MemberExpression","start":3006,"end":3096,"object":{"type":"CallExpression","start":3006,"end":3091,"callee":{"type":"MemberExpression","start":3006,"end":3043,"object":{"type":"ThisExpression","start":3006,"end":3010},"property":{"type":"Identifier","start":3011,"end":3043,"name":"listenForDocDeepRecursiveHelper$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3044,"end":3050,"name":"docRef"},{"type":"Identifier","start":3052,"end":3072,"name":"subCollectionQueries"},{"type":"Identifier","start":3074,"end":3090,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":3092,"end":3096,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3097,"end":3114,"callee":{"type":"Identifier","start":3097,"end":3100,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3101,"end":3113,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3101,"end":3105,"name":"data"}],"body":{"type":"Identifier","start":3109,"end":3113,"name":"data"}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4768,"end":5702,"static":false,"computed":false,"key":{"type":"Identifier","start":4768,"end":4788,"name":"listenForCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":4788,"end":5702,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4789,"end":4802,"name":"collectionRef"},{"type":"AssignmentPattern","start":4804,"end":4829,"left":{"type":"Identifier","start":4804,"end":4824,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":4827,"end":4829,"elements":[]}}],"body":{"type":"BlockStatement","start":4831,"end":5702,"body":[{"type":"ReturnStatement","start":5006,"end":5695,"argument":{"type":"CallExpression","start":5013,"end":5694,"callee":{"type":"MemberExpression","start":5013,"end":5064,"object":{"type":"CallExpression","start":5013,"end":5059,"callee":{"type":"MemberExpression","start":5013,"end":5044,"object":{"type":"ThisExpression","start":5013,"end":5017},"property":{"type":"Identifier","start":5018,"end":5044,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5045,"end":5058,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":5060,"end":5064,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5065,"end":5693,"callee":{"type":"Identifier","start":5065,"end":5073,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":5074,"end":5692,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5075,"end":5080,"name":"items"}],"body":{"type":"BlockStatement","start":5085,"end":5692,"body":[{"type":"IfStatement","start":5100,"end":5189,"test":{"type":"LogicalExpression","start":5104,"end":5139,"left":{"type":"BinaryExpression","start":5104,"end":5117,"left":{"type":"Identifier","start":5104,"end":5109,"name":"items"},"operator":"==","right":{"type":"Literal","start":5113,"end":5117,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":5121,"end":5139,"left":{"type":"MemberExpression","start":5121,"end":5133,"object":{"type":"Identifier","start":5121,"end":5126,"name":"items"},"property":{"type":"Identifier","start":5127,"end":5133,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5138,"end":5139,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":5141,"end":5189,"body":[{"type":"ReturnStatement","start":5160,"end":5174,"argument":{"type":"CallExpression","start":5167,"end":5173,"callee":{"type":"Identifier","start":5167,"end":5169,"name":"of"},"arguments":[{"type":"ArrayExpression","start":5170,"end":5172,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5203,"end":5292,"test":{"type":"BinaryExpression","start":5207,"end":5239,"left":{"type":"MemberExpression","start":5207,"end":5234,"object":{"type":"Identifier","start":5207,"end":5227,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":5228,"end":5234,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":5238,"end":5239,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5241,"end":5292,"body":[{"type":"ReturnStatement","start":5260,"end":5277,"argument":{"type":"CallExpression","start":5267,"end":5276,"callee":{"type":"Identifier","start":5267,"end":5269,"name":"of"},"arguments":[{"type":"Identifier","start":5270,"end":5275,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":5306,"end":5337,"declarations":[{"type":"VariableDeclarator","start":5312,"end":5336,"id":{"type":"Identifier","start":5312,"end":5331,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":5334,"end":5336,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":5351,"end":5557,"expression":{"type":"CallExpression","start":5351,"end":5556,"callee":{"type":"MemberExpression","start":5351,"end":5364,"object":{"type":"Identifier","start":5351,"end":5356,"name":"items"},"property":{"type":"Identifier","start":5357,"end":5364,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5365,"end":5555,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5365,"end":5369,"name":"item"}],"body":{"type":"BlockStatement","start":5373,"end":5555,"body":[{"type":"VariableDeclaration","start":5392,"end":5477,"declarations":[{"type":"VariableDeclarator","start":5398,"end":5476,"id":{"type":"Identifier","start":5398,"end":5416,"name":"collectionListener"},"init":{"type":"CallExpression","start":5419,"end":5476,"callee":{"type":"MemberExpression","start":5419,"end":5448,"object":{"type":"ThisExpression","start":5419,"end":5423},"property":{"type":"Identifier","start":5424,"end":5448,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5449,"end":5453,"name":"item"},{"type":"Identifier","start":5455,"end":5475,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5495,"end":5540,"expression":{"type":"CallExpression","start":5495,"end":5539,"callee":{"type":"MemberExpression","start":5495,"end":5519,"object":{"type":"Identifier","start":5495,"end":5514,"name":"collectionListeners"},"property":{"type":"Identifier","start":5515,"end":5519,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5520,"end":5538,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":5639,"end":5681,"argument":{"type":"CallExpression","start":5646,"end":5680,"callee":{"type":"Identifier","start":5646,"end":5659,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":5660,"end":5679,"name":"collectionListeners"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5853,"end":7422,"static":false,"computed":false,"key":{"type":"Identifier","start":5853,"end":5884,"name":"listenForCollectionRecursively$"},"kind":"method","value":{"type":"FunctionExpression","start":5884,"end":7422,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5885,"end":5899,"name":"collectionPath"},{"type":"Identifier","start":5901,"end":5914,"name":"collectionKey"},{"type":"Identifier","start":5916,"end":5924,"name":"orderKey"}],"body":{"type":"BlockStatement","start":5926,"end":7422,"body":[{"type":"VariableDeclaration","start":5937,"end":6009,"declarations":[{"type":"VariableDeclarator","start":5943,"end":6008,"id":{"type":"Identifier","start":5943,"end":5956,"name":"collectionRef"},"init":{"type":"CallExpression","start":5959,"end":6008,"callee":{"type":"Identifier","start":5959,"end":5973,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":5974,"end":5988,"name":"collectionPath"},{"type":"MemberExpression","start":5990,"end":6007,"object":{"type":"MemberExpression","start":5990,"end":5997,"object":{"type":"ThisExpression","start":5990,"end":5994},"property":{"type":"Identifier","start":5995,"end":5997,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5998,"end":6007,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6019,"end":6077,"declarations":[{"type":"VariableDeclarator","start":6025,"end":6076,"id":{"type":"Identifier","start":6025,"end":6040,"name":"collectionQuery"},"init":{"type":"NewExpression","start":6043,"end":6076,"callee":{"type":"Identifier","start":6047,"end":6061,"name":"QueryContainer"},"arguments":[{"type":"Identifier","start":6062,"end":6075,"name":"collectionRef"}]}}],"kind":"const"},{"type":"IfStatement","start":6087,"end":6169,"test":{"type":"BinaryExpression","start":6091,"end":6107,"left":{"type":"Identifier","start":6091,"end":6099,"name":"orderKey"},"operator":"!=","right":{"type":"Literal","start":6103,"end":6107,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6109,"end":6169,"body":[{"type":"ExpressionStatement","start":6124,"end":6158,"expression":{"type":"CallExpression","start":6124,"end":6157,"callee":{"type":"MemberExpression","start":6124,"end":6147,"object":{"type":"Identifier","start":6124,"end":6139,"name":"collectionQuery"},"property":{"type":"Identifier","start":6140,"end":6147,"name":"orderBy"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6148,"end":6156,"name":"orderKey"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6179,"end":7415,"argument":{"type":"CallExpression","start":6186,"end":7414,"callee":{"type":"MemberExpression","start":6186,"end":6237,"object":{"type":"CallExpression","start":6186,"end":6232,"callee":{"type":"MemberExpression","start":6186,"end":6217,"object":{"type":"ThisExpression","start":6186,"end":6190},"property":{"type":"Identifier","start":6191,"end":6217,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6218,"end":6231,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":6233,"end":6237,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6238,"end":7413,"callee":{"type":"Identifier","start":6238,"end":6246,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":6247,"end":7412,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6248,"end":6253,"name":"items"}],"body":{"type":"BlockStatement","start":6258,"end":7412,"body":[{"type":"IfStatement","start":6273,"end":6344,"test":{"type":"BinaryExpression","start":6277,"end":6294,"left":{"type":"MemberExpression","start":6277,"end":6289,"object":{"type":"Identifier","start":6277,"end":6282,"name":"items"},"property":{"type":"Identifier","start":6283,"end":6289,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6293,"end":6294,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6296,"end":6344,"body":[{"type":"ReturnStatement","start":6315,"end":6329,"argument":{"type":"CallExpression","start":6322,"end":6328,"callee":{"type":"Identifier","start":6322,"end":6324,"name":"of"},"arguments":[{"type":"ArrayExpression","start":6325,"end":6327,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":6490,"end":6514,"declarations":[{"type":"VariableDeclarator","start":6496,"end":6513,"id":{"type":"Identifier","start":6496,"end":6508,"name":"nextLevelObs"},"init":{"type":"ArrayExpression","start":6511,"end":6513,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":6528,"end":7317,"await":false,"left":{"type":"VariableDeclaration","start":6533,"end":6543,"declarations":[{"type":"VariableDeclarator","start":6539,"end":6543,"id":{"type":"Identifier","start":6539,"end":6543,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":6547,"end":6552,"name":"items"},"body":{"type":"BlockStatement","start":6554,"end":7317,"body":[{"type":"VariableDeclaration","start":6695,"end":6776,"declarations":[{"type":"VariableDeclarator","start":6701,"end":6775,"id":{"type":"Identifier","start":6701,"end":6714,"name":"nextLevelPath"},"init":{"type":"CallExpression","start":6717,"end":6775,"callee":{"type":"MemberExpression","start":6717,"end":6755,"object":{"type":"MemberExpression","start":6717,"end":6748,"object":{"type":"MemberExpression","start":6717,"end":6743,"object":{"type":"MemberExpression","start":6717,"end":6739,"object":{"type":"Identifier","start":6717,"end":6721,"name":"item"},"property":{"type":"Identifier","start":6722,"end":6739,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6740,"end":6743,"name":"ref"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6744,"end":6748,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6749,"end":6755,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6756,"end":6759,"value":"/","raw":"'/'"},{"type":"Identifier","start":6761,"end":6774,"name":"collectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6814,"end":7249,"declarations":[{"type":"VariableDeclarator","start":6820,"end":7248,"id":{"type":"Identifier","start":6820,"end":6835,"name":"nextLevelItems$"},"init":{"type":"CallExpression","start":6838,"end":7248,"callee":{"type":"MemberExpression","start":6838,"end":6919,"object":{"type":"CallExpression","start":6838,"end":6914,"callee":{"type":"MemberExpression","start":6838,"end":6874,"object":{"type":"ThisExpression","start":6838,"end":6842},"property":{"type":"Identifier","start":6843,"end":6874,"name":"listenForCollectionRecursively$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6875,"end":6888,"name":"nextLevelPath"},{"type":"Identifier","start":6890,"end":6903,"name":"collectionKey"},{"type":"Identifier","start":6905,"end":6913,"name":"orderKey"}],"optional":false},"property":{"type":"Identifier","start":6915,"end":6919,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6920,"end":7247,"callee":{"type":"Identifier","start":6920,"end":6923,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":6924,"end":7246,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6925,"end":6939,"name":"nextLevelItems"}],"body":{"type":"BlockStatement","start":6944,"end":7246,"body":[{"type":"IfStatement","start":6967,"end":7196,"test":{"type":"BinaryExpression","start":6971,"end":6996,"left":{"type":"MemberExpression","start":6971,"end":6992,"object":{"type":"Identifier","start":6971,"end":6985,"name":"nextLevelItems"},"property":{"type":"Identifier","start":6986,"end":6992,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":6995,"end":6996,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6998,"end":7100,"body":[{"type":"ReturnStatement","start":7025,"end":7077,"argument":{"type":"ObjectExpression","start":7032,"end":7076,"properties":[{"type":"SpreadElement","start":7034,"end":7041,"argument":{"type":"Identifier","start":7037,"end":7041,"name":"item"}},{"type":"Property","start":7043,"end":7074,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":7044,"end":7057,"name":"collectionKey"},"value":{"type":"Identifier","start":7060,"end":7074,"name":"nextLevelItems"},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":7127,"end":7196,"body":[{"type":"ReturnStatement","start":7154,"end":7173,"argument":{"type":"ObjectExpression","start":7161,"end":7172,"properties":[{"type":"SpreadElement","start":7163,"end":7170,"argument":{"type":"Identifier","start":7166,"end":7170,"name":"item"}}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7267,"end":7302,"expression":{"type":"CallExpression","start":7267,"end":7301,"callee":{"type":"MemberExpression","start":7267,"end":7284,"object":{"type":"Identifier","start":7267,"end":7279,"name":"nextLevelObs"},"property":{"type":"Identifier","start":7280,"end":7284,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7285,"end":7300,"name":"nextLevelItems$"}],"optional":false}}]}},{"type":"ReturnStatement","start":7331,"end":7401,"argument":{"type":"CallExpression","start":7338,"end":7400,"callee":{"type":"MemberExpression","start":7338,"end":7370,"object":{"type":"CallExpression","start":7338,"end":7365,"callee":{"type":"Identifier","start":7338,"end":7351,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":7352,"end":7364,"name":"nextLevelObs"}],"optional":false},"property":{"type":"Identifier","start":7366,"end":7370,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7371,"end":7399,"callee":{"type":"Identifier","start":7371,"end":7374,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":7375,"end":7398,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":7375,"end":7378,"name":"val"}],"body":{"type":"CallExpression","start":7382,"end":7398,"callee":{"type":"MemberExpression","start":7382,"end":7393,"object":{"type":"Identifier","start":7382,"end":7389,"name":"console"},"property":{"type":"Identifier","start":7390,"end":7393,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7394,"end":7397,"name":"val"}],"optional":false}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":8056,"end":14837,"static":false,"computed":false,"key":{"type":"Identifier","start":8056,"end":8060,"name":"add$"},"kind":"method","value":{"type":"FunctionExpression","start":8060,"end":14837,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8061,"end":8065,"name":"data"},{"type":"Identifier","start":8067,"end":8080,"name":"collectionRef"},{"type":"AssignmentPattern","start":8082,"end":8107,"left":{"type":"Identifier","start":8082,"end":8102,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":8105,"end":8107,"elements":[]}},{"type":"AssignmentPattern","start":8109,"end":8126,"left":{"type":"Identifier","start":8109,"end":8119,"name":"isAddDates"},"right":{"type":"Literal","start":8122,"end":8126,"value":true,"raw":"true"}},{"type":"Identifier","start":8128,"end":8133,"name":"docId"}],"body":{"type":"BlockStatement","start":8135,"end":14837,"body":[{"type":"IfStatement","start":8146,"end":8604,"test":{"type":"LogicalExpression","start":8150,"end":8213,"left":{"type":"LogicalExpression","start":8150,"end":8178,"left":{"type":"CallExpression","start":8150,"end":8169,"callee":{"type":"MemberExpression","start":8150,"end":8163,"object":{"type":"Identifier","start":8150,"end":8155,"name":"Array"},"property":{"type":"Identifier","start":8156,"end":8163,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8164,"end":8168,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":8173,"end":8178,"name":"docId"}},"operator":"&&","right":{"type":"BinaryExpression","start":8182,"end":8213,"left":{"type":"MemberExpression","start":8182,"end":8209,"object":{"type":"Identifier","start":8182,"end":8202,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":8203,"end":8209,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":8212,"end":8213,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":8215,"end":8604,"body":[{"type":"VariableDeclaration","start":8230,"end":8567,"declarations":[{"type":"VariableDeclarator","start":8236,"end":8566,"id":{"type":"Identifier","start":8236,"end":8241,"name":"error"},"init":{"type":"ObjectExpression","start":8244,"end":8566,"properties":[{"type":"Property","start":8263,"end":8287,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8263,"end":8267,"name":"name"},"value":{"type":"Literal","start":8269,"end":8287,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":8306,"end":8321,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8306,"end":8310,"name":"code"},"value":{"type":"Literal","start":8312,"end":8321,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":8340,"end":8437,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8340,"end":8347,"name":"message"},"value":{"type":"Literal","start":8349,"end":8437,"value":"Cannot have both docId and subCollectionWriters at the same time when data is an array","raw":"'Cannot have both docId and subCollectionWriters at the same time when data is an array'"},"kind":"init"},{"type":"Property","start":8456,"end":8465,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8456,"end":8461,"name":"stack"},"value":{"type":"Literal","start":8463,"end":8465,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":8484,"end":8488,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8484,"end":8488,"name":"data"},"kind":"init","value":{"type":"Identifier","start":8484,"end":8488,"name":"data"}},{"type":"Property","start":8507,"end":8527,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8507,"end":8527,"name":"subCollectionWriters"},"kind":"init","value":{"type":"Identifier","start":8507,"end":8527,"name":"subCollectionWriters"}},{"type":"Property","start":8546,"end":8551,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8546,"end":8551,"name":"docId"},"kind":"init","value":{"type":"Identifier","start":8546,"end":8551,"name":"docId"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":8581,"end":8593,"argument":{"type":"Identifier","start":8587,"end":8592,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":8614,"end":8629,"declarations":[{"type":"VariableDeclarator","start":8618,"end":8628,"id":{"type":"Identifier","start":8618,"end":8628,"name":"currentDoc"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8639,"end":8663,"declarations":[{"type":"VariableDeclarator","start":8643,"end":8662,"id":{"type":"Identifier","start":8643,"end":8657,"name":"subCollections"},"init":{"type":"ObjectExpression","start":8660,"end":8662,"properties":[]}}],"kind":"let"},{"type":"IfStatement","start":8993,"end":9296,"test":{"type":"LogicalExpression","start":8997,"end":9025,"left":{"type":"CallExpression","start":8997,"end":9016,"callee":{"type":"MemberExpression","start":8997,"end":9010,"object":{"type":"Identifier","start":8997,"end":9002,"name":"Array"},"property":{"type":"Identifier","start":9003,"end":9010,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9011,"end":9015,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":9020,"end":9025,"name":"docId"}},"consequent":{"type":"BlockStatement","start":9027,"end":9071,"body":[{"type":"ExpressionStatement","start":9042,"end":9060,"expression":{"type":"AssignmentExpression","start":9042,"end":9059,"operator":"=","left":{"type":"Identifier","start":9042,"end":9052,"name":"currentDoc"},"right":{"type":"Identifier","start":9055,"end":9059,"name":"data"}}}]},"alternate":{"type":"BlockStatement","start":9086,"end":9296,"body":[{"type":"VariableDeclaration","start":9101,"end":9189,"declarations":[{"type":"VariableDeclarator","start":9107,"end":9188,"id":{"type":"Identifier","start":9107,"end":9112,"name":"split"},"init":{"type":"CallExpression","start":9115,"end":9188,"callee":{"type":"MemberExpression","start":9115,"end":9160,"object":{"type":"ThisExpression","start":9115,"end":9119},"property":{"type":"Identifier","start":9120,"end":9160,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9161,"end":9165,"name":"data"},{"type":"Identifier","start":9167,"end":9187,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9203,"end":9233,"expression":{"type":"AssignmentExpression","start":9203,"end":9232,"operator":"=","left":{"type":"Identifier","start":9203,"end":9213,"name":"currentDoc"},"right":{"type":"MemberExpression","start":9216,"end":9232,"object":{"type":"Identifier","start":9216,"end":9221,"name":"split"},"property":{"type":"Identifier","start":9222,"end":9232,"name":"currentDoc"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":9247,"end":9285,"expression":{"type":"AssignmentExpression","start":9247,"end":9284,"operator":"=","left":{"type":"Identifier","start":9247,"end":9261,"name":"subCollections"},"right":{"type":"MemberExpression","start":9264,"end":9284,"object":{"type":"Identifier","start":9264,"end":9269,"name":"split"},"property":{"type":"Identifier","start":9270,"end":9284,"name":"subCollections"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":9306,"end":14830,"argument":{"type":"CallExpression","start":9313,"end":14829,"callee":{"type":"MemberExpression","start":9313,"end":14787,"object":{"type":"CallExpression","start":9313,"end":14782,"callee":{"type":"MemberExpression","start":9313,"end":9379,"object":{"type":"CallExpression","start":9313,"end":9374,"callee":{"type":"MemberExpression","start":9313,"end":9328,"object":{"type":"ThisExpression","start":9313,"end":9317},"property":{"type":"Identifier","start":9318,"end":9328,"name":"addSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9329,"end":9339,"name":"currentDoc"},{"type":"Identifier","start":9341,"end":9354,"name":"collectionRef"},{"type":"Identifier","start":9356,"end":9366,"name":"isAddDates"},{"type":"Identifier","start":9368,"end":9373,"name":"docId"}],"optional":false},"property":{"type":"Identifier","start":9375,"end":9379,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9428,"end":14781,"callee":{"type":"Identifier","start":9428,"end":9436,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":9437,"end":14780,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9438,"end":9449,"name":"currentData"}],"body":{"type":"BlockStatement","start":9454,"end":14780,"body":[{"type":"VariableDeclaration","start":9469,"end":9491,"declarations":[{"type":"VariableDeclarator","start":9475,"end":9490,"id":{"type":"Identifier","start":9475,"end":9485,"name":"subWriters"},"init":{"type":"ArrayExpression","start":9488,"end":9490,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":9505,"end":12836,"await":false,"left":{"type":"VariableDeclaration","start":9510,"end":9554,"declarations":[{"type":"VariableDeclarator","start":9516,"end":9554,"id":{"type":"ArrayPattern","start":9516,"end":9554,"elements":[{"type":"Identifier","start":9517,"end":9533,"name":"subCollectionKey"},{"type":"Identifier","start":9535,"end":9553,"name":"subCollectionValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":9558,"end":9588,"callee":{"type":"MemberExpression","start":9558,"end":9572,"object":{"type":"Identifier","start":9558,"end":9564,"name":"Object"},"property":{"type":"Identifier","start":9565,"end":9572,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9573,"end":9587,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":9590,"end":12836,"body":[{"type":"VariableDeclaration","start":9609,"end":9637,"declarations":[{"type":"VariableDeclarator","start":9613,"end":9636,"id":{"type":"Identifier","start":9613,"end":9636,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":9695,"end":9708,"declarations":[{"type":"VariableDeclarator","start":9699,"end":9707,"id":{"type":"Identifier","start":9699,"end":9707,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9726,"end":10020,"test":{"type":"Identifier","start":9730,"end":9750,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":9752,"end":10020,"body":[{"type":"ExpressionStatement","start":9775,"end":9889,"expression":{"type":"AssignmentExpression","start":9775,"end":9888,"operator":"=","left":{"type":"Identifier","start":9775,"end":9798,"name":"subSubCollectionWriters"},"right":{"type":"ChainExpression","start":9801,"end":9888,"expression":{"type":"MemberExpression","start":9801,"end":9888,"object":{"type":"CallExpression","start":9801,"end":9872,"callee":{"type":"MemberExpression","start":9801,"end":9826,"object":{"type":"Identifier","start":9801,"end":9821,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":9822,"end":9826,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9827,"end":9871,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":9827,"end":9834,"name":"subColl"}],"body":{"type":"BinaryExpression","start":9838,"end":9871,"left":{"type":"MemberExpression","start":9838,"end":9850,"object":{"type":"Identifier","start":9838,"end":9845,"name":"subColl"},"property":{"type":"Identifier","start":9846,"end":9850,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":9855,"end":9871,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":9874,"end":9888,"name":"subCollections"},"computed":false,"optional":true}}}},{"type":"ExpressionStatement","start":9911,"end":10001,"expression":{"type":"AssignmentExpression","start":9911,"end":10000,"operator":"=","left":{"type":"Identifier","start":9911,"end":9919,"name":"subDocId"},"right":{"type":"ChainExpression","start":9922,"end":10000,"expression":{"type":"MemberExpression","start":9922,"end":10000,"object":{"type":"CallExpression","start":9922,"end":9993,"callee":{"type":"MemberExpression","start":9922,"end":9947,"object":{"type":"Identifier","start":9922,"end":9942,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":9943,"end":9947,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9948,"end":9992,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":9948,"end":9955,"name":"subColl"}],"body":{"type":"BinaryExpression","start":9959,"end":9992,"left":{"type":"MemberExpression","start":9959,"end":9971,"object":{"type":"Identifier","start":9959,"end":9966,"name":"subColl"},"property":{"type":"Identifier","start":9967,"end":9971,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":9976,"end":9992,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":9995,"end":10000,"name":"docId"},"computed":false,"optional":true}}}}]},"alternate":null},{"type":"VariableDeclaration","start":10038,"end":10133,"declarations":[{"type":"VariableDeclarator","start":10044,"end":10132,"id":{"type":"Identifier","start":10044,"end":10060,"name":"subCollectionRef"},"init":{"type":"CallExpression","start":10063,"end":10132,"callee":{"type":"Identifier","start":10063,"end":10079,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":10080,"end":10113,"object":{"type":"MemberExpression","start":10080,"end":10109,"object":{"type":"Identifier","start":10080,"end":10091,"name":"currentData"},"property":{"type":"Identifier","start":10092,"end":10109,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10110,"end":10113,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":10115,"end":10131,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10558,"end":12821,"test":{"type":"CallExpression","start":10562,"end":10595,"callee":{"type":"MemberExpression","start":10562,"end":10575,"object":{"type":"Identifier","start":10562,"end":10567,"name":"Array"},"property":{"type":"Identifier","start":10568,"end":10575,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10576,"end":10594,"name":"subCollectionValue"}],"optional":false},"consequent":{"type":"BlockStatement","start":10597,"end":12136,"body":[{"type":"IfStatement","start":10620,"end":12117,"test":{"type":"BinaryExpression","start":10624,"end":10646,"left":{"type":"Identifier","start":10624,"end":10632,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":10637,"end":10646,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":10648,"end":11278,"body":[{"type":"VariableDeclaration","start":10851,"end":11202,"declarations":[{"type":"VariableDeclarator","start":10857,"end":11201,"id":{"type":"Identifier","start":10857,"end":10866,"name":"subWriter"},"init":{"type":"CallExpression","start":10869,"end":11201,"callee":{"type":"MemberExpression","start":10869,"end":10968,"object":{"type":"CallExpression","start":10869,"end":10963,"callee":{"type":"MemberExpression","start":10869,"end":10878,"object":{"type":"ThisExpression","start":10869,"end":10873},"property":{"type":"Identifier","start":10874,"end":10878,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10879,"end":10897,"name":"subCollectionValue"},{"type":"Identifier","start":10899,"end":10915,"name":"subCollectionRef"},{"type":"Identifier","start":10917,"end":10940,"name":"subSubCollectionWriters"},{"type":"Identifier","start":10942,"end":10952,"name":"isAddDates"},{"type":"Identifier","start":10954,"end":10962,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":10964,"end":10968,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":10969,"end":11200,"callee":{"type":"Identifier","start":10969,"end":10972,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":10973,"end":11199,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10973,"end":10977,"name":"item"}],"body":{"type":"BlockStatement","start":10981,"end":11199,"body":[{"type":"ReturnStatement","start":11066,"end":11112,"argument":{"type":"ObjectExpression","start":11073,"end":11111,"properties":[{"type":"Property","start":11075,"end":11096,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11075,"end":11078,"name":"key"},"value":{"type":"Identifier","start":11080,"end":11096,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11098,"end":11109,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11098,"end":11103,"name":"value"},"value":{"type":"Identifier","start":11105,"end":11109,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11228,"end":11255,"expression":{"type":"CallExpression","start":11228,"end":11254,"callee":{"type":"MemberExpression","start":11228,"end":11243,"object":{"type":"Identifier","start":11228,"end":11238,"name":"subWriters"},"property":{"type":"Identifier","start":11239,"end":11243,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11244,"end":11253,"name":"subWriter"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11305,"end":12117,"body":[{"type":"ExpressionStatement","start":11402,"end":12094,"expression":{"type":"CallExpression","start":11402,"end":12093,"callee":{"type":"MemberExpression","start":11402,"end":11428,"object":{"type":"Identifier","start":11402,"end":11420,"name":"subCollectionValue"},"property":{"type":"Identifier","start":11421,"end":11428,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11429,"end":12092,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11430,"end":11440,"name":"arrayValue"}],"body":{"type":"BlockStatement","start":11445,"end":12092,"body":[{"type":"VariableDeclaration","start":11592,"end":12008,"declarations":[{"type":"VariableDeclarator","start":11598,"end":12007,"id":{"type":"Identifier","start":11598,"end":11607,"name":"subWriter"},"init":{"type":"CallExpression","start":11610,"end":12007,"callee":{"type":"MemberExpression","start":11610,"end":11691,"object":{"type":"CallExpression","start":11610,"end":11686,"callee":{"type":"MemberExpression","start":11610,"end":11619,"object":{"type":"ThisExpression","start":11610,"end":11614},"property":{"type":"Identifier","start":11615,"end":11619,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11620,"end":11630,"name":"arrayValue"},{"type":"Identifier","start":11632,"end":11648,"name":"subCollectionRef"},{"type":"Identifier","start":11650,"end":11673,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11675,"end":11685,"name":"isAddDates"}],"optional":false},"property":{"type":"Identifier","start":11687,"end":11691,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11692,"end":12006,"callee":{"type":"Identifier","start":11692,"end":11695,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11696,"end":12005,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11696,"end":11700,"name":"item"}],"body":{"type":"BlockStatement","start":11704,"end":12005,"body":[{"type":"ReturnStatement","start":11926,"end":11974,"argument":{"type":"ObjectExpression","start":11933,"end":11973,"properties":[{"type":"Property","start":11935,"end":11956,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11935,"end":11938,"name":"key"},"value":{"type":"Identifier","start":11940,"end":11956,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11958,"end":11971,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11958,"end":11963,"name":"value"},"value":{"type":"ArrayExpression","start":11965,"end":11971,"elements":[{"type":"Identifier","start":11966,"end":11970,"name":"item"}]},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12038,"end":12065,"expression":{"type":"CallExpression","start":12038,"end":12064,"callee":{"type":"MemberExpression","start":12038,"end":12053,"object":{"type":"Identifier","start":12038,"end":12048,"name":"subWriters"},"property":{"type":"Identifier","start":12049,"end":12053,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12054,"end":12063,"name":"subWriter"}],"optional":false}}]}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":12159,"end":12821,"body":[{"type":"ExpressionStatement","start":12219,"end":12284,"expression":{"type":"AssignmentExpression","start":12219,"end":12283,"operator":"=","left":{"type":"Identifier","start":12219,"end":12227,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":12230,"end":12283,"test":{"type":"BinaryExpression","start":12230,"end":12252,"left":{"type":"Identifier","start":12230,"end":12238,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":12243,"end":12252,"name":"undefined"}},"consequent":{"type":"Identifier","start":12255,"end":12263,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":12266,"end":12283,"object":{"type":"ThisExpression","start":12266,"end":12270},"property":{"type":"Identifier","start":12271,"end":12283,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":12414,"end":12753,"declarations":[{"type":"VariableDeclarator","start":12420,"end":12752,"id":{"type":"Identifier","start":12420,"end":12429,"name":"subWriter"},"init":{"type":"CallExpression","start":12432,"end":12752,"callee":{"type":"MemberExpression","start":12432,"end":12531,"object":{"type":"CallExpression","start":12432,"end":12526,"callee":{"type":"MemberExpression","start":12432,"end":12441,"object":{"type":"ThisExpression","start":12432,"end":12436},"property":{"type":"Identifier","start":12437,"end":12441,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12442,"end":12460,"name":"subCollectionValue"},{"type":"Identifier","start":12462,"end":12478,"name":"subCollectionRef"},{"type":"Identifier","start":12480,"end":12503,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12505,"end":12515,"name":"isAddDates"},{"type":"Identifier","start":12517,"end":12525,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":12527,"end":12531,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12532,"end":12751,"callee":{"type":"Identifier","start":12532,"end":12535,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12536,"end":12750,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12536,"end":12540,"name":"item"}],"body":{"type":"BlockStatement","start":12544,"end":12750,"body":[{"type":"ReturnStatement","start":12621,"end":12667,"argument":{"type":"ObjectExpression","start":12628,"end":12666,"properties":[{"type":"Property","start":12630,"end":12651,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12630,"end":12633,"name":"key"},"value":{"type":"Identifier","start":12635,"end":12651,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12653,"end":12664,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12653,"end":12658,"name":"value"},"value":{"type":"Identifier","start":12660,"end":12664,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12775,"end":12802,"expression":{"type":"CallExpression","start":12775,"end":12801,"callee":{"type":"MemberExpression","start":12775,"end":12790,"object":{"type":"Identifier","start":12775,"end":12785,"name":"subWriters"},"property":{"type":"Identifier","start":12786,"end":12790,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12791,"end":12800,"name":"subWriter"}],"optional":false}}]}}]}},{"type":"IfStatement","start":12873,"end":14769,"test":{"type":"BinaryExpression","start":12877,"end":12898,"left":{"type":"MemberExpression","start":12877,"end":12894,"object":{"type":"Identifier","start":12877,"end":12887,"name":"subWriters"},"property":{"type":"Identifier","start":12888,"end":12894,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":12897,"end":12898,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":12900,"end":14693,"body":[{"type":"ReturnStatement","start":13083,"end":14678,"argument":{"type":"CallExpression","start":13090,"end":14677,"callee":{"type":"MemberExpression","start":13090,"end":13120,"object":{"type":"CallExpression","start":13090,"end":13115,"callee":{"type":"Identifier","start":13090,"end":13103,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":13104,"end":13114,"name":"subWriters"}],"optional":false},"property":{"type":"Identifier","start":13116,"end":13120,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13509,"end":14484,"callee":{"type":"Identifier","start":13509,"end":13512,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":13513,"end":14483,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13514,"end":13522,"name":"docDatas"}],"body":{"type":"BlockStatement","start":13527,"end":14483,"body":[{"type":"VariableDeclaration","start":13550,"end":13573,"declarations":[{"type":"VariableDeclarator","start":13556,"end":13572,"id":{"type":"Identifier","start":13556,"end":13567,"name":"groupedData"},"init":{"type":"ObjectExpression","start":13570,"end":13572,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13595,"end":14423,"expression":{"type":"CallExpression","start":13595,"end":14422,"callee":{"type":"MemberExpression","start":13595,"end":13611,"object":{"type":"Identifier","start":13595,"end":13603,"name":"docDatas"},"property":{"type":"Identifier","start":13604,"end":13611,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13612,"end":14421,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13613,"end":13616,"name":"doc"}],"body":{"type":"BlockStatement","start":13621,"end":14421,"body":[{"type":"VariableDeclaration","start":13648,"end":13668,"declarations":[{"type":"VariableDeclarator","start":13654,"end":13667,"id":{"type":"Identifier","start":13654,"end":13657,"name":"key"},"init":{"type":"MemberExpression","start":13660,"end":13667,"object":{"type":"Identifier","start":13660,"end":13663,"name":"doc"},"property":{"type":"Identifier","start":13664,"end":13667,"name":"key"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":13694,"end":13718,"declarations":[{"type":"VariableDeclarator","start":13700,"end":13717,"id":{"type":"Identifier","start":13700,"end":13705,"name":"value"},"init":{"type":"MemberExpression","start":13708,"end":13717,"object":{"type":"Identifier","start":13708,"end":13711,"name":"doc"},"property":{"type":"Identifier","start":13712,"end":13717,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":13911,"end":14398,"test":{"type":"LogicalExpression","start":13915,"end":13981,"left":{"type":"CallExpression","start":13915,"end":13946,"callee":{"type":"MemberExpression","start":13915,"end":13941,"object":{"type":"Identifier","start":13915,"end":13926,"name":"groupedData"},"property":{"type":"Identifier","start":13927,"end":13941,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13942,"end":13945,"name":"key"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":13950,"end":13981,"callee":{"type":"MemberExpression","start":13950,"end":13963,"object":{"type":"Identifier","start":13950,"end":13955,"name":"Array"},"property":{"type":"Identifier","start":13956,"end":13963,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":13964,"end":13980,"object":{"type":"Identifier","start":13964,"end":13975,"name":"groupedData"},"property":{"type":"Identifier","start":13976,"end":13979,"name":"key"},"computed":true,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":13983,"end":14241,"body":[{"type":"ExpressionStatement","start":14182,"end":14214,"expression":{"type":"CallExpression","start":14182,"end":14213,"callee":{"type":"MemberExpression","start":14182,"end":14203,"object":{"type":"MemberExpression","start":14182,"end":14198,"object":{"type":"Identifier","start":14182,"end":14193,"name":"groupedData"},"property":{"type":"Identifier","start":14194,"end":14197,"name":"key"},"computed":true,"optional":false},"property":{"type":"Identifier","start":14199,"end":14203,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14204,"end":14212,"object":{"type":"Identifier","start":14204,"end":14209,"name":"value"},"property":{"type":"Literal","start":14210,"end":14211,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14272,"end":14398,"body":[{"type":"ExpressionStatement","start":14346,"end":14371,"expression":{"type":"AssignmentExpression","start":14346,"end":14370,"operator":"=","left":{"type":"MemberExpression","start":14346,"end":14362,"object":{"type":"Identifier","start":14346,"end":14357,"name":"groupedData"},"property":{"type":"Identifier","start":14358,"end":14361,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":14365,"end":14370,"name":"value"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":14445,"end":14464,"argument":{"type":"Identifier","start":14452,"end":14463,"name":"groupedData"}}]}}],"optional":false},{"type":"CallExpression","start":14570,"end":14676,"callee":{"type":"Identifier","start":14570,"end":14573,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":14574,"end":14675,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14575,"end":14586,"name":"groupedData"}],"body":{"type":"BlockStatement","start":14591,"end":14675,"body":[{"type":"ReturnStatement","start":14614,"end":14656,"argument":{"type":"ObjectExpression","start":14621,"end":14655,"properties":[{"type":"SpreadElement","start":14623,"end":14637,"argument":{"type":"Identifier","start":14626,"end":14637,"name":"currentData"}},{"type":"SpreadElement","start":14639,"end":14653,"argument":{"type":"Identifier","start":14642,"end":14653,"name":"groupedData"}}]}}]}}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14712,"end":14769,"body":[{"type":"ReturnStatement","start":14731,"end":14754,"argument":{"type":"CallExpression","start":14738,"end":14753,"callee":{"type":"Identifier","start":14738,"end":14740,"name":"of"},"arguments":[{"type":"Identifier","start":14741,"end":14752,"name":"currentData"}],"optional":false}}]}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":14783,"end":14787,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":14821,"end":14828,"callee":{"type":"Identifier","start":14821,"end":14825,"name":"take"},"arguments":[{"type":"Literal","start":14826,"end":14827,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":15572,"end":16025,"static":false,"computed":false,"key":{"type":"Identifier","start":15572,"end":15579,"name":"update$"},"kind":"method","value":{"type":"FunctionExpression","start":15579,"end":16025,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15580,"end":15584,"name":"data"},{"type":"Identifier","start":15586,"end":15592,"name":"docRef"},{"type":"AssignmentPattern","start":15594,"end":15619,"left":{"type":"Identifier","start":15594,"end":15614,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":15617,"end":15619,"elements":[]}},{"type":"AssignmentPattern","start":15621,"end":15645,"left":{"type":"Identifier","start":15621,"end":15638,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":15641,"end":15645,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":15647,"end":16025,"body":[{"type":"IfStatement","start":15658,"end":15868,"test":{"type":"LogicalExpression","start":15662,"end":15727,"left":{"type":"BinaryExpression","start":15662,"end":15690,"left":{"type":"Identifier","start":15662,"end":15682,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":15686,"end":15690,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":15694,"end":15727,"left":{"type":"MemberExpression","start":15694,"end":15721,"object":{"type":"Identifier","start":15694,"end":15714,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":15715,"end":15721,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":15726,"end":15727,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":15729,"end":15868,"body":[{"type":"ReturnStatement","start":15744,"end":15803,"argument":{"type":"CallExpression","start":15751,"end":15802,"callee":{"type":"MemberExpression","start":15751,"end":15769,"object":{"type":"ThisExpression","start":15751,"end":15755},"property":{"type":"Identifier","start":15756,"end":15769,"name":"updateSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15770,"end":15774,"name":"data"},{"type":"Identifier","start":15776,"end":15782,"name":"docRef"},{"type":"Identifier","start":15784,"end":15801,"name":"isAddModifiedDate"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":15878,"end":15976,"declarations":[{"type":"VariableDeclarator","start":15884,"end":15975,"id":{"type":"Identifier","start":15884,"end":15889,"name":"batch"},"init":{"type":"CallExpression","start":15892,"end":15975,"callee":{"type":"MemberExpression","start":15892,"end":15920,"object":{"type":"ThisExpression","start":15892,"end":15896},"property":{"type":"Identifier","start":15897,"end":15920,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15921,"end":15925,"name":"data"},{"type":"Identifier","start":15927,"end":15933,"name":"docRef"},{"type":"Identifier","start":15935,"end":15955,"name":"subCollectionWriters"},{"type":"Identifier","start":15957,"end":15974,"name":"isAddModifiedDate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":15986,"end":16018,"argument":{"type":"CallExpression","start":15993,"end":16017,"callee":{"type":"MemberExpression","start":15993,"end":16010,"object":{"type":"ThisExpression","start":15993,"end":15997},"property":{"type":"Identifier","start":15998,"end":16010,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16011,"end":16016,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16302,"end":16718,"static":false,"computed":false,"key":{"type":"Identifier","start":16302,"end":16317,"name":"updateMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":16317,"end":16718,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16318,"end":16325,"name":"docRefs"},{"type":"Identifier","start":16327,"end":16331,"name":"data"},{"type":"AssignmentPattern","start":16333,"end":16357,"left":{"type":"Identifier","start":16333,"end":16350,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16353,"end":16357,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16359,"end":16718,"body":[{"type":"VariableDeclaration","start":16437,"end":16481,"declarations":[{"type":"VariableDeclarator","start":16443,"end":16480,"id":{"type":"Identifier","start":16443,"end":16448,"name":"batch"},"init":{"type":"CallExpression","start":16451,"end":16480,"callee":{"type":"Identifier","start":16451,"end":16461,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":16462,"end":16479,"object":{"type":"MemberExpression","start":16462,"end":16469,"object":{"type":"ThisExpression","start":16462,"end":16466},"property":{"type":"Identifier","start":16467,"end":16469,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16470,"end":16479,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":16491,"end":16576,"test":{"type":"Identifier","start":16495,"end":16512,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":16514,"end":16576,"body":[{"type":"ExpressionStatement","start":16529,"end":16565,"expression":{"type":"AssignmentExpression","start":16529,"end":16564,"operator":"=","left":{"type":"Identifier","start":16529,"end":16533,"name":"data"},"right":{"type":"CallExpression","start":16536,"end":16564,"callee":{"type":"Identifier","start":16536,"end":16551,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":16552,"end":16556,"name":"data"},{"type":"Literal","start":16558,"end":16563,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":16586,"end":16669,"expression":{"type":"CallExpression","start":16586,"end":16668,"callee":{"type":"MemberExpression","start":16586,"end":16601,"object":{"type":"Identifier","start":16586,"end":16593,"name":"docRefs"},"property":{"type":"Identifier","start":16594,"end":16601,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16602,"end":16667,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16603,"end":16609,"name":"docRef"}],"body":{"type":"BlockStatement","start":16614,"end":16667,"body":[{"type":"ExpressionStatement","start":16629,"end":16656,"expression":{"type":"CallExpression","start":16629,"end":16655,"callee":{"type":"MemberExpression","start":16629,"end":16641,"object":{"type":"Identifier","start":16629,"end":16634,"name":"batch"},"property":{"type":"Identifier","start":16635,"end":16641,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16642,"end":16648,"name":"docRef"},{"type":"Identifier","start":16650,"end":16654,"name":"data"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":16679,"end":16711,"argument":{"type":"CallExpression","start":16686,"end":16710,"callee":{"type":"MemberExpression","start":16686,"end":16703,"object":{"type":"ThisExpression","start":16686,"end":16690},"property":{"type":"Identifier","start":16691,"end":16703,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16704,"end":16709,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":17317,"end":18194,"static":false,"computed":false,"key":{"type":"Identifier","start":17317,"end":17329,"name":"changeDocId$"},"kind":"method","value":{"type":"FunctionExpression","start":17329,"end":18194,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17330,"end":17336,"name":"docRef"},{"type":"Identifier","start":17338,"end":17343,"name":"newId"},{"type":"AssignmentPattern","start":17345,"end":17370,"left":{"type":"Identifier","start":17345,"end":17365,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":17368,"end":17370,"elements":[]}},{"type":"Identifier","start":17372,"end":17392,"name":"subCollectionWriters"}],"body":{"type":"BlockStatement","start":17394,"end":18194,"body":[{"type":"IfStatement","start":17405,"end":17509,"test":{"type":"BinaryExpression","start":17409,"end":17437,"left":{"type":"Identifier","start":17409,"end":17429,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":17433,"end":17437,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":17439,"end":17509,"body":[{"type":"ExpressionStatement","start":17454,"end":17498,"expression":{"type":"AssignmentExpression","start":17454,"end":17497,"operator":"=","left":{"type":"Identifier","start":17454,"end":17474,"name":"subCollectionWriters"},"right":{"type":"Identifier","start":17477,"end":17497,"name":"subCollectionQueries"}}}]},"alternate":null},{"type":"VariableDeclaration","start":17519,"end":17555,"declarations":[{"type":"VariableDeclarator","start":17525,"end":17554,"id":{"type":"Identifier","start":17525,"end":17538,"name":"collectionRef"},"init":{"type":"MemberExpression","start":17541,"end":17554,"object":{"type":"Identifier","start":17541,"end":17547,"name":"docRef"},"property":{"type":"Identifier","start":17548,"end":17554,"name":"parent"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":17565,"end":18187,"argument":{"type":"CallExpression","start":17572,"end":18186,"callee":{"type":"MemberExpression","start":17572,"end":17625,"object":{"type":"CallExpression","start":17572,"end":17620,"callee":{"type":"MemberExpression","start":17572,"end":17590,"object":{"type":"ThisExpression","start":17572,"end":17576},"property":{"type":"Identifier","start":17577,"end":17590,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17591,"end":17597,"name":"docRef"},{"type":"Identifier","start":17599,"end":17619,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17621,"end":17625,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17659,"end":17666,"callee":{"type":"Identifier","start":17659,"end":17663,"name":"take"},"arguments":[{"type":"Literal","start":17664,"end":17665,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":17668,"end":17741,"callee":{"type":"Identifier","start":17668,"end":17671,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":17672,"end":17740,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":17673,"end":17680,"name":"oldData"}],"body":{"type":"CallExpression","start":17685,"end":17740,"callee":{"type":"MemberExpression","start":17685,"end":17709,"object":{"type":"ThisExpression","start":17685,"end":17689},"property":{"type":"Identifier","start":17690,"end":17709,"name":"cleanExtrasFromData"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17710,"end":17717,"name":"oldData"},{"type":"Identifier","start":17719,"end":17739,"name":"subCollectionWriters"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":17743,"end":18058,"callee":{"type":"Identifier","start":17743,"end":17752,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":17753,"end":18057,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17754,"end":17761,"name":"oldData"}],"body":{"type":"BlockStatement","start":17766,"end":18057,"body":[{"type":"ReturnStatement","start":17781,"end":18046,"argument":{"type":"CallExpression","start":17788,"end":18045,"callee":{"type":"MemberExpression","start":17788,"end":17862,"object":{"type":"CallExpression","start":17788,"end":17857,"callee":{"type":"MemberExpression","start":17788,"end":17797,"object":{"type":"ThisExpression","start":17788,"end":17792},"property":{"type":"Identifier","start":17793,"end":17797,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17798,"end":17805,"name":"oldData"},{"type":"Identifier","start":17807,"end":17820,"name":"collectionRef"},{"type":"Identifier","start":17822,"end":17842,"name":"subCollectionWriters"},{"type":"Literal","start":17844,"end":17849,"value":false,"raw":"false"},{"type":"Identifier","start":17851,"end":17856,"name":"newId"}],"optional":false},"property":{"type":"Identifier","start":17858,"end":17862,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17890,"end":18044,"callee":{"type":"Identifier","start":17890,"end":17898,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":17899,"end":18043,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17899,"end":17906,"name":"newData"}],"body":{"type":"BlockStatement","start":17910,"end":18043,"body":[{"type":"ReturnStatement","start":17929,"end":18028,"argument":{"type":"CallExpression","start":17936,"end":18027,"callee":{"type":"MemberExpression","start":17936,"end":17983,"object":{"type":"CallExpression","start":17936,"end":17978,"callee":{"type":"MemberExpression","start":17936,"end":17948,"object":{"type":"ThisExpression","start":17936,"end":17940},"property":{"type":"Identifier","start":17941,"end":17948,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17949,"end":17955,"name":"docRef"},{"type":"Identifier","start":17957,"end":17977,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17979,"end":17983,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17984,"end":18002,"callee":{"type":"Identifier","start":17984,"end":17987,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":17988,"end":18001,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"Identifier","start":17994,"end":18001,"name":"newData"}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":18060,"end":18176,"callee":{"type":"Identifier","start":18060,"end":18070,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":18071,"end":18175,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18071,"end":18074,"name":"err"}],"body":{"type":"BlockStatement","start":18078,"end":18175,"body":[{"type":"ExpressionStatement","start":18093,"end":18140,"expression":{"type":"CallExpression","start":18093,"end":18139,"callee":{"type":"MemberExpression","start":18093,"end":18104,"object":{"type":"Identifier","start":18093,"end":18100,"name":"console"},"property":{"type":"Identifier","start":18101,"end":18104,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":18105,"end":18138,"left":{"type":"Literal","start":18105,"end":18132,"value":"Failed to Change Doc Id: ","raw":"'Failed to Change Doc Id: '"},"operator":"+","right":{"type":"Identifier","start":18135,"end":18138,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":18154,"end":18164,"argument":{"type":"Identifier","start":18160,"end":18163,"name":"err"}}]}}],"optional":false},{"type":"CallExpression","start":18178,"end":18185,"callee":{"type":"Identifier","start":18178,"end":18182,"name":"take"},"arguments":[{"type":"Literal","start":18183,"end":18184,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":18819,"end":19536,"static":false,"computed":false,"key":{"type":"Identifier","start":18819,"end":18835,"name":"moveItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":18835,"end":19536,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18836,"end":18841,"name":"items"},{"type":"Identifier","start":18843,"end":18852,"name":"fromIndex"},{"type":"Identifier","start":18854,"end":18861,"name":"toIndex"},{"type":"AssignmentPattern","start":18863,"end":18878,"left":{"type":"Identifier","start":18863,"end":18870,"name":"useCopy"},"right":{"type":"Literal","start":18873,"end":18878,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":18880,"end":19536,"body":[{"type":"IfStatement","start":18891,"end":19050,"test":{"type":"LogicalExpression","start":18895,"end":18977,"left":{"type":"LogicalExpression","start":18895,"end":18956,"left":{"type":"LogicalExpression","start":18895,"end":18931,"left":{"type":"BinaryExpression","start":18895,"end":18912,"left":{"type":"Identifier","start":18895,"end":18904,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":18908,"end":18912,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":18916,"end":18931,"left":{"type":"Identifier","start":18916,"end":18923,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":18927,"end":18931,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":18935,"end":18956,"left":{"type":"Identifier","start":18935,"end":18944,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":18949,"end":18956,"name":"toIndex"}}},"operator":"||","right":{"type":"BinaryExpression","start":18960,"end":18977,"left":{"type":"MemberExpression","start":18960,"end":18972,"object":{"type":"Identifier","start":18960,"end":18965,"name":"items"},"property":{"type":"Identifier","start":18966,"end":18972,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":18976,"end":18977,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":18979,"end":19050,"body":[{"type":"ReturnStatement","start":19027,"end":19039,"argument":{"type":"CallExpression","start":19034,"end":19038,"callee":{"type":"Identifier","start":19034,"end":19036,"name":"of"},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":19060,"end":19388,"test":{"type":"BinaryExpression","start":19064,"end":19099,"left":{"type":"ChainExpression","start":19064,"end":19091,"expression":{"type":"MemberExpression","start":19064,"end":19091,"object":{"type":"MemberExpression","start":19064,"end":19072,"object":{"type":"Identifier","start":19064,"end":19069,"name":"items"},"property":{"type":"Literal","start":19070,"end":19071,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":19074,"end":19091,"name":"firestoreMetadata"},"computed":false,"optional":true}},"operator":"==","right":{"type":"Literal","start":19095,"end":19099,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":19101,"end":19388,"body":[{"type":"VariableDeclaration","start":19116,"end":19351,"declarations":[{"type":"VariableDeclarator","start":19122,"end":19350,"id":{"type":"Identifier","start":19122,"end":19127,"name":"error"},"init":{"type":"ObjectExpression","start":19130,"end":19350,"properties":[{"type":"Property","start":19149,"end":19173,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19149,"end":19153,"name":"name"},"value":{"type":"Literal","start":19155,"end":19173,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":19192,"end":19207,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19192,"end":19196,"name":"code"},"value":{"type":"Literal","start":19198,"end":19207,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":19226,"end":19334,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19226,"end":19233,"name":"message"},"value":{"type":"Literal","start":19235,"end":19334,"value":"The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata","raw":"'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata'"},"kind":"init"}]}}],"kind":"const"},{"type":"ThrowStatement","start":19365,"end":19377,"argument":{"type":"Identifier","start":19371,"end":19376,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":19398,"end":19487,"declarations":[{"type":"VariableDeclarator","start":19404,"end":19486,"id":{"type":"Identifier","start":19404,"end":19409,"name":"batch"},"init":{"type":"CallExpression","start":19412,"end":19486,"callee":{"type":"MemberExpression","start":19412,"end":19450,"object":{"type":"ThisExpression","start":19412,"end":19416},"property":{"type":"Identifier","start":19417,"end":19450,"name":"getBatchFromMoveItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19451,"end":19456,"name":"items"},{"type":"Identifier","start":19458,"end":19467,"name":"fromIndex"},{"type":"Identifier","start":19469,"end":19476,"name":"toIndex"},{"type":"Identifier","start":19478,"end":19485,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":19497,"end":19529,"argument":{"type":"CallExpression","start":19504,"end":19528,"callee":{"type":"MemberExpression","start":19504,"end":19521,"object":{"type":"ThisExpression","start":19504,"end":19508},"property":{"type":"Identifier","start":19509,"end":19521,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19522,"end":19527,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":19907,"end":20965,"static":false,"computed":false,"key":{"type":"Identifier","start":19907,"end":19940,"name":"getBatchFromMoveItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":19940,"end":20965,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":19941,"end":19946,"name":"items"},{"type":"Identifier","start":19948,"end":19957,"name":"fromIndex"},{"type":"Identifier","start":19959,"end":19966,"name":"toIndex"},{"type":"AssignmentPattern","start":19968,"end":19983,"left":{"type":"Identifier","start":19968,"end":19975,"name":"useCopy"},"right":{"type":"Literal","start":19978,"end":19983,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":19985,"end":20965,"body":[{"type":"VariableDeclaration","start":19996,"end":20045,"declarations":[{"type":"VariableDeclarator","start":20002,"end":20044,"id":{"type":"Identifier","start":20002,"end":20013,"name":"lowestIndex"},"init":{"type":"CallExpression","start":20016,"end":20044,"callee":{"type":"MemberExpression","start":20016,"end":20024,"object":{"type":"Identifier","start":20016,"end":20020,"name":"Math"},"property":{"type":"Identifier","start":20021,"end":20024,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20025,"end":20034,"name":"fromIndex"},{"type":"Identifier","start":20036,"end":20043,"name":"toIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20055,"end":20099,"declarations":[{"type":"VariableDeclarator","start":20061,"end":20098,"id":{"type":"Identifier","start":20061,"end":20066,"name":"batch"},"init":{"type":"CallExpression","start":20069,"end":20098,"callee":{"type":"Identifier","start":20069,"end":20079,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":20080,"end":20097,"object":{"type":"MemberExpression","start":20080,"end":20087,"object":{"type":"ThisExpression","start":20080,"end":20084},"property":{"type":"Identifier","start":20085,"end":20087,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20088,"end":20097,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20109,"end":20248,"test":{"type":"LogicalExpression","start":20113,"end":20174,"left":{"type":"LogicalExpression","start":20113,"end":20149,"left":{"type":"BinaryExpression","start":20113,"end":20130,"left":{"type":"Identifier","start":20113,"end":20122,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":20126,"end":20130,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":20134,"end":20149,"left":{"type":"Identifier","start":20134,"end":20141,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":20145,"end":20149,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":20153,"end":20174,"left":{"type":"Identifier","start":20153,"end":20162,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":20167,"end":20174,"name":"toIndex"}}},"consequent":{"type":"BlockStatement","start":20176,"end":20248,"body":[{"type":"ReturnStatement","start":20224,"end":20237,"argument":{"type":"Identifier","start":20231,"end":20236,"name":"batch"}}]},"alternate":null},{"type":"VariableDeclaration","start":20258,"end":20272,"declarations":[{"type":"VariableDeclarator","start":20262,"end":20271,"id":{"type":"Identifier","start":20262,"end":20271,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":20282,"end":20417,"test":{"type":"Identifier","start":20286,"end":20293,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":20295,"end":20358,"body":[{"type":"ExpressionStatement","start":20310,"end":20347,"expression":{"type":"AssignmentExpression","start":20310,"end":20346,"operator":"=","left":{"type":"Identifier","start":20310,"end":20319,"name":"usedItems"},"right":{"type":"CallExpression","start":20322,"end":20346,"callee":{"type":"MemberExpression","start":20322,"end":20335,"object":{"type":"Identifier","start":20322,"end":20328,"name":"Object"},"property":{"type":"Identifier","start":20329,"end":20335,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":20336,"end":20338,"elements":[]},{"type":"Identifier","start":20340,"end":20345,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":20373,"end":20417,"body":[{"type":"ExpressionStatement","start":20388,"end":20406,"expression":{"type":"AssignmentExpression","start":20388,"end":20405,"operator":"=","left":{"type":"Identifier","start":20388,"end":20397,"name":"usedItems"},"right":{"type":"Identifier","start":20400,"end":20405,"name":"items"}}}]}},{"type":"ExpressionStatement","start":20427,"end":20474,"expression":{"type":"CallExpression","start":20427,"end":20473,"callee":{"type":"Identifier","start":20427,"end":20442,"name":"moveItemInArray"},"arguments":[{"type":"Identifier","start":20443,"end":20452,"name":"usedItems"},{"type":"Identifier","start":20454,"end":20463,"name":"fromIndex"},{"type":"Identifier","start":20465,"end":20472,"name":"toIndex"}],"optional":false}},{"type":"VariableDeclaration","start":20484,"end":20539,"declarations":[{"type":"VariableDeclarator","start":20490,"end":20538,"id":{"type":"Identifier","start":20490,"end":20507,"name":"listSliceToUpdate"},"init":{"type":"CallExpression","start":20510,"end":20538,"callee":{"type":"MemberExpression","start":20510,"end":20525,"object":{"type":"Identifier","start":20510,"end":20519,"name":"usedItems"},"property":{"type":"Identifier","start":20520,"end":20525,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20526,"end":20537,"name":"lowestIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20549,"end":20569,"declarations":[{"type":"VariableDeclarator","start":20553,"end":20568,"id":{"type":"Identifier","start":20553,"end":20554,"name":"i"},"init":{"type":"Identifier","start":20557,"end":20568,"name":"lowestIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":20579,"end":20935,"await":false,"left":{"type":"VariableDeclaration","start":20584,"end":20594,"declarations":[{"type":"VariableDeclarator","start":20590,"end":20594,"id":{"type":"Identifier","start":20590,"end":20594,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":20598,"end":20615,"name":"listSliceToUpdate"},"body":{"type":"BlockStatement","start":20617,"end":20935,"body":[{"type":"IfStatement","start":20632,"end":20771,"test":{"type":"UnaryExpression","start":20636,"end":20644,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":20637,"end":20644,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":20646,"end":20771,"body":[{"type":"ExpressionStatement","start":20741,"end":20756,"expression":{"type":"AssignmentExpression","start":20741,"end":20755,"operator":"=","left":{"type":"MemberExpression","start":20741,"end":20751,"object":{"type":"Identifier","start":20741,"end":20745,"name":"item"},"property":{"type":"Identifier","start":20746,"end":20751,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":20754,"end":20755,"name":"i"}}}]},"alternate":null},{"type":"VariableDeclaration","start":20785,"end":20860,"declarations":[{"type":"VariableDeclarator","start":20791,"end":20859,"id":{"type":"Identifier","start":20791,"end":20794,"name":"ref"},"init":{"type":"CallExpression","start":20797,"end":20859,"callee":{"type":"Identifier","start":20797,"end":20811,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":20812,"end":20839,"object":{"type":"MemberExpression","start":20812,"end":20834,"object":{"type":"Identifier","start":20812,"end":20816,"name":"item"},"property":{"type":"Identifier","start":20817,"end":20834,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20835,"end":20839,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":20841,"end":20858,"object":{"type":"MemberExpression","start":20841,"end":20848,"object":{"type":"ThisExpression","start":20841,"end":20845},"property":{"type":"Identifier","start":20846,"end":20848,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20849,"end":20858,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":20874,"end":20906,"expression":{"type":"CallExpression","start":20874,"end":20905,"callee":{"type":"MemberExpression","start":20874,"end":20886,"object":{"type":"Identifier","start":20874,"end":20879,"name":"batch"},"property":{"type":"Identifier","start":20880,"end":20886,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20887,"end":20890,"name":"ref"},{"type":"ObjectExpression","start":20892,"end":20904,"properties":[{"type":"Property","start":20894,"end":20902,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":20894,"end":20899,"name":"index"},"value":{"type":"Identifier","start":20901,"end":20902,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":20920,"end":20924,"expression":{"type":"UpdateExpression","start":20920,"end":20923,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":20920,"end":20921,"name":"i"}}}]}},{"type":"ReturnStatement","start":20945,"end":20958,"argument":{"type":"Identifier","start":20952,"end":20957,"name":"batch"}}]}}},{"type":"MethodDefinition","start":21300,"end":22229,"static":false,"computed":false,"key":{"type":"Identifier","start":21300,"end":21325,"name":"deleteIndexedItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":21325,"end":22229,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21326,"end":21331,"name":"items"},{"type":"Identifier","start":21333,"end":21346,"name":"indexToDelete"},{"type":"AssignmentPattern","start":21348,"end":21373,"left":{"type":"Identifier","start":21348,"end":21368,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":21371,"end":21373,"elements":[]}},{"type":"AssignmentPattern","start":21375,"end":21390,"left":{"type":"Identifier","start":21375,"end":21382,"name":"useCopy"},"right":{"type":"Literal","start":21385,"end":21390,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":21392,"end":22229,"body":[{"type":"VariableDeclaration","start":21403,"end":21417,"declarations":[{"type":"VariableDeclarator","start":21407,"end":21416,"id":{"type":"Identifier","start":21407,"end":21416,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":21427,"end":21562,"test":{"type":"Identifier","start":21431,"end":21438,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":21440,"end":21503,"body":[{"type":"ExpressionStatement","start":21455,"end":21492,"expression":{"type":"AssignmentExpression","start":21455,"end":21491,"operator":"=","left":{"type":"Identifier","start":21455,"end":21464,"name":"usedItems"},"right":{"type":"CallExpression","start":21467,"end":21491,"callee":{"type":"MemberExpression","start":21467,"end":21480,"object":{"type":"Identifier","start":21467,"end":21473,"name":"Object"},"property":{"type":"Identifier","start":21474,"end":21480,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":21481,"end":21483,"elements":[]},{"type":"Identifier","start":21485,"end":21490,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":21518,"end":21562,"body":[{"type":"ExpressionStatement","start":21533,"end":21551,"expression":{"type":"AssignmentExpression","start":21533,"end":21550,"operator":"=","left":{"type":"Identifier","start":21533,"end":21542,"name":"usedItems"},"right":{"type":"Identifier","start":21545,"end":21550,"name":"items"}}}]}},{"type":"VariableDeclaration","start":21572,"end":21618,"declarations":[{"type":"VariableDeclarator","start":21578,"end":21617,"id":{"type":"Identifier","start":21578,"end":21590,"name":"itemToDelete"},"init":{"type":"MemberExpression","start":21593,"end":21617,"object":{"type":"Identifier","start":21593,"end":21602,"name":"usedItems"},"property":{"type":"Identifier","start":21603,"end":21616,"name":"indexToDelete"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":21712,"end":22222,"argument":{"type":"CallExpression","start":21719,"end":22221,"callee":{"type":"MemberExpression","start":21719,"end":21802,"object":{"type":"CallExpression","start":21719,"end":21797,"callee":{"type":"MemberExpression","start":21719,"end":21739,"object":{"type":"ThisExpression","start":21719,"end":21723},"property":{"type":"Identifier","start":21724,"end":21739,"name":"getDeleteBatch$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":21740,"end":21774,"object":{"type":"MemberExpression","start":21740,"end":21770,"object":{"type":"Identifier","start":21740,"end":21752,"name":"itemToDelete"},"property":{"type":"Identifier","start":21753,"end":21770,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21771,"end":21774,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":21776,"end":21796,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":21798,"end":21802,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":21803,"end":22172,"callee":{"type":"Identifier","start":21803,"end":21806,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":21807,"end":22171,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21808,"end":21813,"name":"batch"}],"body":{"type":"BlockStatement","start":21818,"end":22171,"body":[{"type":"ExpressionStatement","start":21936,"end":21971,"expression":{"type":"CallExpression","start":21936,"end":21970,"callee":{"type":"MemberExpression","start":21936,"end":21950,"object":{"type":"Identifier","start":21936,"end":21945,"name":"usedItems"},"property":{"type":"Identifier","start":21946,"end":21950,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":21951,"end":21969,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":21951,"end":21955,"name":"item"}],"body":{"type":"MemberExpression","start":21959,"end":21969,"object":{"type":"Identifier","start":21959,"end":21963,"name":"item"},"property":{"type":"Identifier","start":21964,"end":21969,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"ExpressionStatement","start":22023,"end":22058,"expression":{"type":"CallExpression","start":22023,"end":22057,"callee":{"type":"MemberExpression","start":22023,"end":22039,"object":{"type":"Identifier","start":22023,"end":22032,"name":"usedItems"},"property":{"type":"Identifier","start":22033,"end":22039,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22040,"end":22053,"name":"indexToDelete"},{"type":"Literal","start":22055,"end":22056,"value":1,"raw":"1"}],"optional":false}},{"type":"ExpressionStatement","start":22072,"end":22133,"expression":{"type":"CallExpression","start":22072,"end":22132,"callee":{"type":"MemberExpression","start":22072,"end":22114,"object":{"type":"ThisExpression","start":22072,"end":22076},"property":{"type":"Identifier","start":22077,"end":22114,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22115,"end":22124,"name":"usedItems"},{"type":"Identifier","start":22126,"end":22131,"name":"batch"}],"optional":false}},{"type":"ReturnStatement","start":22147,"end":22160,"argument":{"type":"Identifier","start":22154,"end":22159,"name":"batch"}}]}}],"optional":false},{"type":"CallExpression","start":22174,"end":22220,"callee":{"type":"Identifier","start":22174,"end":22183,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":22184,"end":22219,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22185,"end":22190,"name":"batch"}],"body":{"type":"CallExpression","start":22195,"end":22219,"callee":{"type":"MemberExpression","start":22195,"end":22212,"object":{"type":"ThisExpression","start":22195,"end":22199},"property":{"type":"Identifier","start":22200,"end":22212,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22213,"end":22218,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":22572,"end":24240,"static":false,"computed":false,"key":{"type":"Identifier","start":22572,"end":22598,"name":"deleteIndexedItemsInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":22598,"end":24240,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22599,"end":22604,"name":"items"},{"type":"Identifier","start":22606,"end":22621,"name":"indicesToDelete"},{"type":"AssignmentPattern","start":22623,"end":22648,"left":{"type":"Identifier","start":22623,"end":22643,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":22646,"end":22648,"elements":[]}},{"type":"AssignmentPattern","start":22650,"end":22665,"left":{"type":"Identifier","start":22650,"end":22657,"name":"useCopy"},"right":{"type":"Literal","start":22660,"end":22665,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":22667,"end":24240,"body":[{"type":"VariableDeclaration","start":22678,"end":22692,"declarations":[{"type":"VariableDeclarator","start":22682,"end":22691,"id":{"type":"Identifier","start":22682,"end":22691,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":22702,"end":22837,"test":{"type":"Identifier","start":22706,"end":22713,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":22715,"end":22778,"body":[{"type":"ExpressionStatement","start":22730,"end":22767,"expression":{"type":"AssignmentExpression","start":22730,"end":22766,"operator":"=","left":{"type":"Identifier","start":22730,"end":22739,"name":"usedItems"},"right":{"type":"CallExpression","start":22742,"end":22766,"callee":{"type":"MemberExpression","start":22742,"end":22755,"object":{"type":"Identifier","start":22742,"end":22748,"name":"Object"},"property":{"type":"Identifier","start":22749,"end":22755,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":22756,"end":22758,"elements":[]},{"type":"Identifier","start":22760,"end":22765,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":22793,"end":22837,"body":[{"type":"ExpressionStatement","start":22808,"end":22826,"expression":{"type":"AssignmentExpression","start":22808,"end":22825,"operator":"=","left":{"type":"Identifier","start":22808,"end":22817,"name":"usedItems"},"right":{"type":"Identifier","start":22820,"end":22825,"name":"items"}}}]}},{"type":"ExpressionStatement","start":22847,"end":22882,"expression":{"type":"CallExpression","start":22847,"end":22881,"callee":{"type":"MemberExpression","start":22847,"end":22861,"object":{"type":"Identifier","start":22847,"end":22856,"name":"usedItems"},"property":{"type":"Identifier","start":22857,"end":22861,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22862,"end":22880,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22862,"end":22866,"name":"item"}],"body":{"type":"MemberExpression","start":22870,"end":22880,"object":{"type":"Identifier","start":22870,"end":22874,"name":"item"},"property":{"type":"Identifier","start":22875,"end":22880,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"VariableDeclaration","start":22930,"end":23066,"declarations":[{"type":"VariableDeclarator","start":22936,"end":23065,"id":{"type":"Identifier","start":22936,"end":22949,"name":"itemsToDelete"},"init":{"type":"CallExpression","start":22952,"end":23065,"callee":{"type":"MemberExpression","start":22952,"end":22968,"object":{"type":"Identifier","start":22952,"end":22961,"name":"usedItems"},"property":{"type":"Identifier","start":22962,"end":22968,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22969,"end":23064,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22970,"end":22974,"name":"item"},{"type":"Identifier","start":22976,"end":22977,"name":"i"}],"body":{"type":"BlockStatement","start":22982,"end":23064,"body":[{"type":"ReturnStatement","start":22997,"end":23053,"argument":{"type":"BinaryExpression","start":23004,"end":23052,"left":{"type":"CallExpression","start":23004,"end":23045,"callee":{"type":"MemberExpression","start":23004,"end":23029,"object":{"type":"Identifier","start":23004,"end":23019,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23020,"end":23029,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23030,"end":23044,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23030,"end":23032,"name":"_i"}],"body":{"type":"BinaryExpression","start":23036,"end":23044,"left":{"type":"Identifier","start":23036,"end":23038,"name":"_i"},"operator":"===","right":{"type":"Identifier","start":23043,"end":23044,"name":"i"}}}],"optional":false},"operator":"!==","right":{"type":"UnaryExpression","start":23050,"end":23052,"operator":"-","prefix":true,"argument":{"type":"Literal","start":23051,"end":23052,"value":1,"raw":"1"}}}}]}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23194,"end":23217,"expression":{"type":"CallExpression","start":23194,"end":23216,"callee":{"type":"MemberExpression","start":23194,"end":23214,"object":{"type":"Identifier","start":23194,"end":23209,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23210,"end":23214,"name":"sort"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ForStatement","start":23227,"end":23347,"init":{"type":"VariableDeclaration","start":23232,"end":23266,"declarations":[{"type":"VariableDeclarator","start":23236,"end":23266,"id":{"type":"Identifier","start":23236,"end":23237,"name":"i"},"init":{"type":"BinaryExpression","start":23240,"end":23266,"left":{"type":"MemberExpression","start":23240,"end":23262,"object":{"type":"Identifier","start":23240,"end":23255,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23256,"end":23262,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":23265,"end":23266,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":23268,"end":23274,"left":{"type":"Identifier","start":23268,"end":23269,"name":"i"},"operator":">=","right":{"type":"Literal","start":23273,"end":23274,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":23276,"end":23279,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":23276,"end":23277,"name":"i"}},"body":{"type":"BlockStatement","start":23281,"end":23347,"body":[{"type":"ExpressionStatement","start":23296,"end":23336,"expression":{"type":"CallExpression","start":23296,"end":23335,"callee":{"type":"MemberExpression","start":23296,"end":23312,"object":{"type":"Identifier","start":23296,"end":23305,"name":"usedItems"},"property":{"type":"Identifier","start":23306,"end":23312,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23313,"end":23331,"object":{"type":"Identifier","start":23313,"end":23328,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23329,"end":23330,"name":"i"},"computed":true,"optional":false},{"type":"Literal","start":23333,"end":23334,"value":1,"raw":"1"}],"optional":false}}]}},{"type":"VariableDeclaration","start":23357,"end":23380,"declarations":[{"type":"VariableDeclarator","start":23363,"end":23379,"id":{"type":"Identifier","start":23363,"end":23374,"name":"docRefsObs$"},"init":{"type":"ArrayExpression","start":23377,"end":23379,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":23483,"end":23703,"expression":{"type":"CallExpression","start":23483,"end":23702,"callee":{"type":"MemberExpression","start":23483,"end":23504,"object":{"type":"Identifier","start":23483,"end":23496,"name":"itemsToDelete"},"property":{"type":"Identifier","start":23497,"end":23504,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23505,"end":23701,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23505,"end":23517,"name":"itemToDelete"}],"body":{"type":"BlockStatement","start":23521,"end":23701,"body":[{"type":"VariableDeclaration","start":23536,"end":23653,"declarations":[{"type":"VariableDeclarator","start":23542,"end":23652,"id":{"type":"Identifier","start":23542,"end":23546,"name":"obs$"},"init":{"type":"CallExpression","start":23549,"end":23652,"callee":{"type":"MemberExpression","start":23549,"end":23643,"object":{"type":"CallExpression","start":23549,"end":23638,"callee":{"type":"MemberExpression","start":23549,"end":23580,"object":{"type":"ThisExpression","start":23549,"end":23553},"property":{"type":"Identifier","start":23554,"end":23580,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23581,"end":23615,"object":{"type":"MemberExpression","start":23581,"end":23611,"object":{"type":"Identifier","start":23581,"end":23593,"name":"itemToDelete"},"property":{"type":"Identifier","start":23594,"end":23611,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":23612,"end":23615,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":23617,"end":23637,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":23639,"end":23643,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23644,"end":23651,"callee":{"type":"Identifier","start":23644,"end":23648,"name":"take"},"arguments":[{"type":"Literal","start":23649,"end":23650,"value":1,"raw":"1"}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23667,"end":23690,"expression":{"type":"CallExpression","start":23667,"end":23689,"callee":{"type":"MemberExpression","start":23667,"end":23683,"object":{"type":"Identifier","start":23667,"end":23678,"name":"docRefsObs$"},"property":{"type":"Identifier","start":23679,"end":23683,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23684,"end":23688,"name":"obs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":23713,"end":24233,"argument":{"type":"CallExpression","start":23720,"end":24232,"callee":{"type":"MemberExpression","start":23720,"end":23746,"object":{"type":"CallExpression","start":23720,"end":23741,"callee":{"type":"Identifier","start":23720,"end":23728,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":23729,"end":23740,"name":"docRefsObs$"}],"optional":false},"property":{"type":"Identifier","start":23742,"end":23746,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23747,"end":23754,"callee":{"type":"Identifier","start":23747,"end":23751,"name":"take"},"arguments":[{"type":"Literal","start":23752,"end":23753,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":23756,"end":24043,"callee":{"type":"Identifier","start":23756,"end":23759,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":23760,"end":24042,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23761,"end":23774,"name":"listOfDocRefs"}],"body":{"type":"BlockStatement","start":23779,"end":24042,"body":[{"type":"VariableDeclaration","start":23874,"end":23891,"declarations":[{"type":"VariableDeclarator","start":23878,"end":23890,"id":{"type":"Identifier","start":23878,"end":23885,"name":"docRefs"},"init":{"type":"ArrayExpression","start":23888,"end":23890,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":23905,"end":24002,"expression":{"type":"CallExpression","start":23905,"end":24001,"callee":{"type":"MemberExpression","start":23905,"end":23926,"object":{"type":"Identifier","start":23905,"end":23918,"name":"listOfDocRefs"},"property":{"type":"Identifier","start":23919,"end":23926,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23927,"end":24000,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23927,"end":23931,"name":"refs"}],"body":{"type":"BlockStatement","start":23935,"end":24000,"body":[{"type":"ExpressionStatement","start":23954,"end":23985,"expression":{"type":"AssignmentExpression","start":23954,"end":23984,"operator":"=","left":{"type":"Identifier","start":23954,"end":23961,"name":"docRefs"},"right":{"type":"CallExpression","start":23964,"end":23984,"callee":{"type":"MemberExpression","start":23964,"end":23978,"object":{"type":"Identifier","start":23964,"end":23971,"name":"docRefs"},"property":{"type":"Identifier","start":23972,"end":23978,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23979,"end":23983,"name":"refs"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":24016,"end":24031,"argument":{"type":"Identifier","start":24023,"end":24030,"name":"docRefs"}}]}}],"optional":false},{"type":"CallExpression","start":24045,"end":24105,"callee":{"type":"Identifier","start":24045,"end":24048,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24049,"end":24104,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24050,"end":24057,"name":"docRefs"}],"body":{"type":"CallExpression","start":24062,"end":24104,"callee":{"type":"MemberExpression","start":24062,"end":24095,"object":{"type":"ThisExpression","start":24062,"end":24066},"property":{"type":"Identifier","start":24067,"end":24095,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24096,"end":24103,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24107,"end":24183,"callee":{"type":"Identifier","start":24107,"end":24110,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24111,"end":24182,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24112,"end":24117,"name":"batch"}],"body":{"type":"CallExpression","start":24122,"end":24182,"callee":{"type":"MemberExpression","start":24122,"end":24164,"object":{"type":"ThisExpression","start":24122,"end":24126},"property":{"type":"Identifier","start":24127,"end":24164,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24165,"end":24174,"name":"usedItems"},{"type":"Identifier","start":24176,"end":24181,"name":"batch"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24185,"end":24231,"callee":{"type":"Identifier","start":24185,"end":24194,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":24195,"end":24230,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24196,"end":24201,"name":"batch"}],"body":{"type":"CallExpression","start":24206,"end":24230,"callee":{"type":"MemberExpression","start":24206,"end":24223,"object":{"type":"ThisExpression","start":24206,"end":24210},"property":{"type":"Identifier","start":24211,"end":24223,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24224,"end":24229,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":24580,"end":25059,"static":false,"computed":false,"key":{"type":"Identifier","start":24580,"end":24617,"name":"getBatchFromUpdateIndexFromListOfDocs"},"kind":"method","value":{"type":"FunctionExpression","start":24617,"end":25059,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24618,"end":24623,"name":"items"},{"type":"AssignmentPattern","start":24625,"end":24662,"left":{"type":"Identifier","start":24625,"end":24630,"name":"batch"},"right":{"type":"CallExpression","start":24633,"end":24662,"callee":{"type":"Identifier","start":24633,"end":24643,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":24644,"end":24661,"object":{"type":"MemberExpression","start":24644,"end":24651,"object":{"type":"ThisExpression","start":24644,"end":24648},"property":{"type":"Identifier","start":24649,"end":24651,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24652,"end":24661,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":24664,"end":25059,"body":[{"type":"ExpressionStatement","start":24675,"end":25029,"expression":{"type":"CallExpression","start":24675,"end":25028,"callee":{"type":"MemberExpression","start":24675,"end":24688,"object":{"type":"Identifier","start":24675,"end":24680,"name":"items"},"property":{"type":"Identifier","start":24681,"end":24688,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24689,"end":25027,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24690,"end":24694,"name":"item"},{"type":"Identifier","start":24696,"end":24701,"name":"index"}],"body":{"type":"BlockStatement","start":24706,"end":25027,"body":[{"type":"IfStatement","start":24721,"end":25016,"test":{"type":"BinaryExpression","start":24725,"end":24745,"left":{"type":"MemberExpression","start":24725,"end":24735,"object":{"type":"Identifier","start":24725,"end":24729,"name":"item"},"property":{"type":"Identifier","start":24730,"end":24735,"name":"index"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":24740,"end":24745,"name":"index"}},"consequent":{"type":"BlockStatement","start":24747,"end":25016,"body":[{"type":"ExpressionStatement","start":24766,"end":24785,"expression":{"type":"AssignmentExpression","start":24766,"end":24784,"operator":"=","left":{"type":"MemberExpression","start":24766,"end":24776,"object":{"type":"Identifier","start":24766,"end":24770,"name":"item"},"property":{"type":"Identifier","start":24771,"end":24776,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":24779,"end":24784,"name":"index"}}},{"type":"VariableDeclaration","start":24879,"end":24954,"declarations":[{"type":"VariableDeclarator","start":24885,"end":24953,"id":{"type":"Identifier","start":24885,"end":24888,"name":"ref"},"init":{"type":"CallExpression","start":24891,"end":24953,"callee":{"type":"Identifier","start":24891,"end":24905,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":24906,"end":24933,"object":{"type":"MemberExpression","start":24906,"end":24928,"object":{"type":"Identifier","start":24906,"end":24910,"name":"item"},"property":{"type":"Identifier","start":24911,"end":24928,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24929,"end":24933,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":24935,"end":24952,"object":{"type":"MemberExpression","start":24935,"end":24942,"object":{"type":"ThisExpression","start":24935,"end":24939},"property":{"type":"Identifier","start":24940,"end":24942,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24943,"end":24952,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":24972,"end":25001,"expression":{"type":"CallExpression","start":24972,"end":25000,"callee":{"type":"MemberExpression","start":24972,"end":24984,"object":{"type":"Identifier","start":24972,"end":24977,"name":"batch"},"property":{"type":"Identifier","start":24978,"end":24984,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24985,"end":24988,"name":"ref"},{"type":"ObjectExpression","start":24990,"end":24999,"properties":[{"type":"Property","start":24992,"end":24997,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":24992,"end":24997,"name":"index"},"kind":"init","value":{"type":"Identifier","start":24992,"end":24997,"name":"index"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":25039,"end":25052,"argument":{"type":"Identifier","start":25046,"end":25051,"name":"batch"}}]}}},{"type":"MethodDefinition","start":25065,"end":25525,"static":false,"computed":false,"key":{"type":"Identifier","start":25065,"end":25090,"name":"transferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25090,"end":25525,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25091,"end":25104,"name":"previousArray"},{"type":"Identifier","start":25106,"end":25118,"name":"currentArray"},{"type":"Identifier","start":25120,"end":25133,"name":"previousIndex"},{"type":"Identifier","start":25135,"end":25147,"name":"currentIndex"},{"type":"Identifier","start":25149,"end":25165,"name":"currentArrayName"},{"type":"Identifier","start":25167,"end":25198,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":25200,"end":25238,"left":{"type":"Identifier","start":25200,"end":25231,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":25234,"end":25238,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":25240,"end":25255,"left":{"type":"Identifier","start":25240,"end":25247,"name":"useCopy"},"right":{"type":"Literal","start":25250,"end":25255,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":25257,"end":25525,"body":[{"type":"VariableDeclaration","start":25268,"end":25476,"declarations":[{"type":"VariableDeclarator","start":25274,"end":25475,"id":{"type":"Identifier","start":25274,"end":25279,"name":"batch"},"init":{"type":"CallExpression","start":25282,"end":25475,"callee":{"type":"MemberExpression","start":25282,"end":25324,"object":{"type":"ThisExpression","start":25282,"end":25286},"property":{"type":"Identifier","start":25287,"end":25324,"name":"getBatchFromTransferItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25325,"end":25338,"name":"previousArray"},{"type":"Identifier","start":25340,"end":25352,"name":"currentArray"},{"type":"Identifier","start":25354,"end":25367,"name":"previousIndex"},{"type":"Identifier","start":25369,"end":25381,"name":"currentIndex"},{"type":"Identifier","start":25383,"end":25399,"name":"currentArrayName"},{"type":"Identifier","start":25401,"end":25432,"name":"additionalDataUpdateOnMovedItem"},{"type":"Identifier","start":25434,"end":25465,"name":"isUpdateModifiedDateOnMovedItem"},{"type":"Identifier","start":25467,"end":25474,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":25486,"end":25518,"argument":{"type":"CallExpression","start":25493,"end":25517,"callee":{"type":"MemberExpression","start":25493,"end":25510,"object":{"type":"ThisExpression","start":25493,"end":25497},"property":{"type":"Identifier","start":25498,"end":25510,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25511,"end":25516,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":25831,"end":26226,"static":false,"computed":false,"key":{"type":"Identifier","start":25831,"end":25838,"name":"delete$"},"kind":"method","value":{"type":"FunctionExpression","start":25838,"end":26226,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25839,"end":25845,"name":"docRef"},{"type":"AssignmentPattern","start":25847,"end":25872,"left":{"type":"Identifier","start":25847,"end":25867,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":25870,"end":25872,"elements":[]}}],"body":{"type":"BlockStatement","start":25874,"end":26226,"body":[{"type":"IfStatement","start":25885,"end":26068,"test":{"type":"LogicalExpression","start":25889,"end":25954,"left":{"type":"BinaryExpression","start":25889,"end":25917,"left":{"type":"Identifier","start":25889,"end":25909,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":25913,"end":25917,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":25921,"end":25954,"left":{"type":"MemberExpression","start":25921,"end":25948,"object":{"type":"Identifier","start":25921,"end":25941,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":25942,"end":25948,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":25953,"end":25954,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":25956,"end":26068,"body":[{"type":"ReturnStatement","start":26027,"end":26057,"argument":{"type":"CallExpression","start":26034,"end":26056,"callee":{"type":"MemberExpression","start":26034,"end":26048,"object":{"type":"MemberExpression","start":26034,"end":26041,"object":{"type":"ThisExpression","start":26034,"end":26038},"property":{"type":"Identifier","start":26039,"end":26041,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26042,"end":26048,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26049,"end":26055,"name":"docRef"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26078,"end":26219,"argument":{"type":"CallExpression","start":26085,"end":26218,"callee":{"type":"MemberExpression","start":26085,"end":26151,"object":{"type":"CallExpression","start":26085,"end":26146,"callee":{"type":"MemberExpression","start":26085,"end":26116,"object":{"type":"ThisExpression","start":26085,"end":26089},"property":{"type":"Identifier","start":26090,"end":26116,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26117,"end":26123,"name":"docRef"},{"type":"Identifier","start":26125,"end":26145,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26147,"end":26151,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26152,"end":26217,"callee":{"type":"Identifier","start":26152,"end":26161,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":26162,"end":26216,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26163,"end":26173,"name":"docRefList"}],"body":{"type":"CallExpression","start":26178,"end":26216,"callee":{"type":"MemberExpression","start":26178,"end":26204,"object":{"type":"ThisExpression","start":26178,"end":26182},"property":{"type":"Identifier","start":26183,"end":26204,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26205,"end":26215,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":26558,"end":27026,"static":false,"computed":false,"key":{"type":"Identifier","start":26558,"end":26573,"name":"getDeleteBatch$"},"kind":"method","value":{"type":"FunctionExpression","start":26573,"end":27026,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26574,"end":26580,"name":"docRef"},{"type":"AssignmentPattern","start":26582,"end":26607,"left":{"type":"Identifier","start":26582,"end":26602,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26605,"end":26607,"elements":[]}},{"type":"AssignmentPattern","start":26609,"end":26646,"left":{"type":"Identifier","start":26609,"end":26614,"name":"batch"},"right":{"type":"CallExpression","start":26617,"end":26646,"callee":{"type":"Identifier","start":26617,"end":26627,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":26628,"end":26645,"object":{"type":"MemberExpression","start":26628,"end":26635,"object":{"type":"ThisExpression","start":26628,"end":26632},"property":{"type":"Identifier","start":26633,"end":26635,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26636,"end":26645,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":26648,"end":27026,"body":[{"type":"IfStatement","start":26659,"end":26864,"test":{"type":"LogicalExpression","start":26663,"end":26728,"left":{"type":"BinaryExpression","start":26663,"end":26691,"left":{"type":"Identifier","start":26663,"end":26683,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26687,"end":26691,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26695,"end":26728,"left":{"type":"MemberExpression","start":26695,"end":26722,"object":{"type":"Identifier","start":26695,"end":26715,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26716,"end":26722,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26727,"end":26728,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26730,"end":26864,"body":[{"type":"ExpressionStatement","start":26801,"end":26822,"expression":{"type":"CallExpression","start":26801,"end":26821,"callee":{"type":"MemberExpression","start":26801,"end":26813,"object":{"type":"Identifier","start":26801,"end":26806,"name":"batch"},"property":{"type":"Identifier","start":26807,"end":26813,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26814,"end":26820,"name":"docRef"}],"optional":false}},{"type":"ReturnStatement","start":26836,"end":26853,"argument":{"type":"CallExpression","start":26843,"end":26852,"callee":{"type":"Identifier","start":26843,"end":26845,"name":"of"},"arguments":[{"type":"Identifier","start":26846,"end":26851,"name":"batch"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26874,"end":27019,"argument":{"type":"CallExpression","start":26881,"end":27018,"callee":{"type":"MemberExpression","start":26881,"end":26947,"object":{"type":"CallExpression","start":26881,"end":26942,"callee":{"type":"MemberExpression","start":26881,"end":26912,"object":{"type":"ThisExpression","start":26881,"end":26885},"property":{"type":"Identifier","start":26886,"end":26912,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26913,"end":26919,"name":"docRef"},{"type":"Identifier","start":26921,"end":26941,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26943,"end":26947,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26948,"end":27008,"callee":{"type":"Identifier","start":26948,"end":26951,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":26952,"end":27007,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26953,"end":26960,"name":"docRefs"}],"body":{"type":"CallExpression","start":26965,"end":27007,"callee":{"type":"MemberExpression","start":26965,"end":26998,"object":{"type":"ThisExpression","start":26965,"end":26969},"property":{"type":"Identifier","start":26970,"end":26998,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26999,"end":27006,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":27010,"end":27017,"callee":{"type":"Identifier","start":27010,"end":27014,"name":"take"},"arguments":[{"type":"Literal","start":27015,"end":27016,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27032,"end":27214,"static":false,"computed":false,"key":{"type":"Identifier","start":27032,"end":27054,"name":"deleteMultipleByPaths$"},"kind":"method","value":{"type":"FunctionExpression","start":27054,"end":27214,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27055,"end":27063,"name":"docPaths"}],"body":{"type":"BlockStatement","start":27065,"end":27214,"body":[{"type":"VariableDeclaration","start":27076,"end":27154,"declarations":[{"type":"VariableDeclarator","start":27082,"end":27153,"id":{"type":"Identifier","start":27082,"end":27089,"name":"docRefs"},"init":{"type":"CallExpression","start":27092,"end":27153,"callee":{"type":"MemberExpression","start":27092,"end":27104,"object":{"type":"Identifier","start":27092,"end":27100,"name":"docPaths"},"property":{"type":"Identifier","start":27101,"end":27104,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27105,"end":27152,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27105,"end":27109,"name":"path"}],"body":{"type":"CallExpression","start":27113,"end":27152,"callee":{"type":"Identifier","start":27113,"end":27127,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":27128,"end":27132,"name":"path"},{"type":"MemberExpression","start":27134,"end":27151,"object":{"type":"MemberExpression","start":27134,"end":27141,"object":{"type":"ThisExpression","start":27134,"end":27138},"property":{"type":"Identifier","start":27139,"end":27141,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27142,"end":27151,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":27164,"end":27207,"argument":{"type":"CallExpression","start":27171,"end":27206,"callee":{"type":"MemberExpression","start":27171,"end":27197,"object":{"type":"ThisExpression","start":27171,"end":27175},"property":{"type":"Identifier","start":27176,"end":27197,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27198,"end":27205,"name":"docRefs"}],"optional":false}}]}}},{"type":"MethodDefinition","start":27490,"end":28369,"static":false,"computed":false,"key":{"type":"Identifier","start":27490,"end":27505,"name":"deleteMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":27505,"end":28369,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27506,"end":27513,"name":"docRefs"},{"type":"AssignmentPattern","start":27515,"end":27540,"left":{"type":"Identifier","start":27515,"end":27535,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27538,"end":27540,"elements":[]}}],"body":{"type":"BlockStatement","start":27542,"end":28369,"body":[{"type":"IfStatement","start":27553,"end":27693,"test":{"type":"LogicalExpression","start":27557,"end":27622,"left":{"type":"BinaryExpression","start":27557,"end":27585,"left":{"type":"Identifier","start":27557,"end":27577,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27581,"end":27585,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27589,"end":27622,"left":{"type":"MemberExpression","start":27589,"end":27616,"object":{"type":"Identifier","start":27589,"end":27609,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":27610,"end":27616,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":27621,"end":27622,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":27624,"end":27693,"body":[{"type":"ReturnStatement","start":27639,"end":27682,"argument":{"type":"CallExpression","start":27646,"end":27681,"callee":{"type":"MemberExpression","start":27646,"end":27672,"object":{"type":"ThisExpression","start":27646,"end":27650},"property":{"type":"Identifier","start":27651,"end":27672,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27673,"end":27680,"name":"docRefs"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":27703,"end":27727,"declarations":[{"type":"VariableDeclarator","start":27709,"end":27726,"id":{"type":"Identifier","start":27709,"end":27721,"name":"deepDocRefs$"},"init":{"type":"ArrayExpression","start":27724,"end":27726,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":27737,"end":27912,"expression":{"type":"CallExpression","start":27737,"end":27911,"callee":{"type":"MemberExpression","start":27737,"end":27752,"object":{"type":"Identifier","start":27737,"end":27744,"name":"docRefs"},"property":{"type":"Identifier","start":27745,"end":27752,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27753,"end":27910,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27753,"end":27759,"name":"docRef"}],"body":{"type":"BlockStatement","start":27763,"end":27910,"body":[{"type":"VariableDeclaration","start":27778,"end":27857,"declarations":[{"type":"VariableDeclarator","start":27784,"end":27856,"id":{"type":"Identifier","start":27784,"end":27792,"name":"docRefs$"},"init":{"type":"CallExpression","start":27795,"end":27856,"callee":{"type":"MemberExpression","start":27795,"end":27826,"object":{"type":"ThisExpression","start":27795,"end":27799},"property":{"type":"Identifier","start":27800,"end":27826,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27827,"end":27833,"name":"docRef"},{"type":"Identifier","start":27835,"end":27855,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":27871,"end":27899,"expression":{"type":"CallExpression","start":27871,"end":27898,"callee":{"type":"MemberExpression","start":27871,"end":27888,"object":{"type":"Identifier","start":27871,"end":27883,"name":"deepDocRefs$"},"property":{"type":"Identifier","start":27884,"end":27888,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27889,"end":27897,"name":"docRefs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":27922,"end":28362,"argument":{"type":"CallExpression","start":27929,"end":28361,"callee":{"type":"MemberExpression","start":27929,"end":27961,"object":{"type":"CallExpression","start":27929,"end":27956,"callee":{"type":"Identifier","start":27929,"end":27942,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":27943,"end":27955,"name":"deepDocRefs$"}],"optional":false},"property":{"type":"Identifier","start":27957,"end":27961,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28018,"end":28237,"callee":{"type":"Identifier","start":28018,"end":28021,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":28022,"end":28236,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28023,"end":28028,"name":"lists"}],"body":{"type":"BlockStatement","start":28033,"end":28236,"body":[{"type":"VariableDeclaration","start":28048,"end":28072,"declarations":[{"type":"VariableDeclarator","start":28052,"end":28071,"id":{"type":"Identifier","start":28052,"end":28066,"name":"mainDocRefList"},"init":{"type":"ArrayExpression","start":28069,"end":28071,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":28086,"end":28189,"expression":{"type":"CallExpression","start":28086,"end":28188,"callee":{"type":"MemberExpression","start":28086,"end":28099,"object":{"type":"Identifier","start":28086,"end":28091,"name":"lists"},"property":{"type":"Identifier","start":28092,"end":28099,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28100,"end":28187,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28100,"end":28104,"name":"list"}],"body":{"type":"BlockStatement","start":28108,"end":28187,"body":[{"type":"ExpressionStatement","start":28127,"end":28172,"expression":{"type":"AssignmentExpression","start":28127,"end":28171,"operator":"=","left":{"type":"Identifier","start":28127,"end":28141,"name":"mainDocRefList"},"right":{"type":"CallExpression","start":28144,"end":28171,"callee":{"type":"MemberExpression","start":28144,"end":28165,"object":{"type":"Identifier","start":28144,"end":28158,"name":"mainDocRefList"},"property":{"type":"Identifier","start":28159,"end":28165,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28166,"end":28170,"name":"list"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":28203,"end":28225,"argument":{"type":"Identifier","start":28210,"end":28224,"name":"mainDocRefList"}}]}}],"optional":false},{"type":"CallExpression","start":28295,"end":28360,"callee":{"type":"Identifier","start":28295,"end":28304,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28305,"end":28359,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28306,"end":28316,"name":"docRefList"}],"body":{"type":"CallExpression","start":28321,"end":28359,"callee":{"type":"MemberExpression","start":28321,"end":28347,"object":{"type":"ThisExpression","start":28321,"end":28325},"property":{"type":"Identifier","start":28326,"end":28347,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28348,"end":28358,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":28707,"end":28946,"static":false,"computed":false,"key":{"type":"Identifier","start":28707,"end":28724,"name":"deleteCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":28724,"end":28946,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28725,"end":28738,"name":"collectionRef"},{"type":"AssignmentPattern","start":28740,"end":28765,"left":{"type":"Identifier","start":28740,"end":28760,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":28763,"end":28765,"elements":[]}}],"body":{"type":"BlockStatement","start":28767,"end":28946,"body":[{"type":"ReturnStatement","start":28778,"end":28939,"argument":{"type":"CallExpression","start":28785,"end":28938,"callee":{"type":"MemberExpression","start":28785,"end":28929,"object":{"type":"CallExpression","start":28785,"end":28924,"callee":{"type":"MemberExpression","start":28785,"end":28871,"object":{"type":"CallExpression","start":28785,"end":28866,"callee":{"type":"MemberExpression","start":28785,"end":28829,"object":{"type":"ThisExpression","start":28785,"end":28789},"property":{"type":"Identifier","start":28790,"end":28829,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28830,"end":28843,"name":"collectionRef"},{"type":"Identifier","start":28845,"end":28865,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":28867,"end":28871,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28872,"end":28923,"callee":{"type":"Identifier","start":28872,"end":28881,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28882,"end":28922,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28882,"end":28889,"name":"docRefs"}],"body":{"type":"CallExpression","start":28893,"end":28922,"callee":{"type":"MemberExpression","start":28893,"end":28913,"object":{"type":"ThisExpression","start":28893,"end":28897},"property":{"type":"Identifier","start":28898,"end":28913,"name":"deleteMultiple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28914,"end":28921,"name":"docRefs"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":28925,"end":28929,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28930,"end":28937,"callee":{"type":"Identifier","start":28930,"end":28934,"name":"take"},"arguments":[{"type":"Literal","start":28935,"end":28936,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29370,"end":29559,"static":false,"computed":false,"key":{"type":"Identifier","start":29370,"end":29386,"name":"deleteDocByPath$"},"kind":"method","value":{"type":"FunctionExpression","start":29386,"end":29559,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29387,"end":29394,"name":"docPath"},{"type":"AssignmentPattern","start":29396,"end":29421,"left":{"type":"Identifier","start":29396,"end":29416,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29419,"end":29421,"elements":[]}}],"body":{"type":"BlockStatement","start":29423,"end":29559,"body":[{"type":"VariableDeclaration","start":29434,"end":29492,"declarations":[{"type":"VariableDeclarator","start":29440,"end":29491,"id":{"type":"Identifier","start":29440,"end":29446,"name":"docRef"},"init":{"type":"CallExpression","start":29449,"end":29491,"callee":{"type":"Identifier","start":29449,"end":29463,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":29464,"end":29471,"name":"docPath"},{"type":"MemberExpression","start":29473,"end":29490,"object":{"type":"MemberExpression","start":29473,"end":29480,"object":{"type":"ThisExpression","start":29473,"end":29477},"property":{"type":"Identifier","start":29478,"end":29480,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":29481,"end":29490,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":29502,"end":29552,"argument":{"type":"CallExpression","start":29509,"end":29551,"callee":{"type":"MemberExpression","start":29509,"end":29521,"object":{"type":"ThisExpression","start":29509,"end":29513},"property":{"type":"Identifier","start":29514,"end":29521,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29522,"end":29528,"name":"docRef"},{"type":"Identifier","start":29530,"end":29550,"name":"subCollectionQueries"}],"optional":false}}]}}},{"type":"MethodDefinition","start":29913,"end":30364,"static":false,"computed":false,"key":{"type":"Identifier","start":29913,"end":29924,"name":"deleteItem$"},"kind":"method","value":{"type":"FunctionExpression","start":29924,"end":30364,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29925,"end":29929,"name":"item"},{"type":"AssignmentPattern","start":29931,"end":29956,"left":{"type":"Identifier","start":29931,"end":29951,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29954,"end":29956,"elements":[]}}],"body":{"type":"BlockStatement","start":29958,"end":30364,"body":[{"type":"VariableDeclaration","start":29969,"end":30048,"declarations":[{"type":"VariableDeclarator","start":29975,"end":30047,"id":{"type":"Identifier","start":29975,"end":29982,"name":"docRefs"},"init":{"type":"CallExpression","start":29985,"end":30047,"callee":{"type":"MemberExpression","start":29985,"end":30019,"object":{"type":"ThisExpression","start":29985,"end":29989},"property":{"type":"Identifier","start":29990,"end":30019,"name":"getDocumentReferencesFromItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30020,"end":30024,"name":"item"},{"type":"Identifier","start":30026,"end":30046,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":30058,"end":30357,"argument":{"type":"CallExpression","start":30065,"end":30356,"callee":{"type":"MemberExpression","start":30065,"end":30105,"object":{"type":"CallExpression","start":30065,"end":30100,"callee":{"type":"MemberExpression","start":30065,"end":30091,"object":{"type":"ThisExpression","start":30065,"end":30069},"property":{"type":"Identifier","start":30070,"end":30091,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30092,"end":30099,"name":"docRefs"}],"optional":false},"property":{"type":"Identifier","start":30101,"end":30105,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30348,"end":30355,"callee":{"type":"Identifier","start":30348,"end":30352,"name":"take"},"arguments":[{"type":"Literal","start":30353,"end":30354,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":30370,"end":31032,"static":false,"computed":false,"key":{"type":"Identifier","start":30370,"end":30389,"name":"cleanExtrasFromData"},"kind":"method","value":{"type":"FunctionExpression","start":30389,"end":31032,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30390,"end":30394,"name":"data"},{"type":"AssignmentPattern","start":30396,"end":30421,"left":{"type":"Identifier","start":30396,"end":30416,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":30419,"end":30421,"elements":[]}},{"type":"AssignmentPattern","start":30423,"end":30452,"left":{"type":"Identifier","start":30423,"end":30447,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":30450,"end":30452,"elements":[]}}],"body":{"type":"BlockStatement","start":30454,"end":31032,"body":[{"type":"IfStatement","start":30608,"end":31025,"test":{"type":"CallExpression","start":30612,"end":30631,"callee":{"type":"MemberExpression","start":30612,"end":30625,"object":{"type":"Identifier","start":30612,"end":30617,"name":"Array"},"property":{"type":"Identifier","start":30618,"end":30625,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30626,"end":30630,"name":"data"}],"optional":false},"consequent":{"type":"BlockStatement","start":30633,"end":30886,"body":[{"type":"VariableDeclaration","start":30648,"end":30670,"declarations":[{"type":"VariableDeclarator","start":30654,"end":30669,"id":{"type":"Identifier","start":30654,"end":30664,"name":"cleanDatas"},"init":{"type":"ArrayExpression","start":30667,"end":30669,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":30684,"end":30843,"expression":{"type":"CallExpression","start":30684,"end":30842,"callee":{"type":"MemberExpression","start":30684,"end":30696,"object":{"type":"Identifier","start":30684,"end":30688,"name":"data"},"property":{"type":"Identifier","start":30689,"end":30696,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":30697,"end":30841,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30697,"end":30698,"name":"d"}],"body":{"type":"BlockStatement","start":30702,"end":30841,"body":[{"type":"ExpressionStatement","start":30721,"end":30826,"expression":{"type":"CallExpression","start":30721,"end":30825,"callee":{"type":"MemberExpression","start":30721,"end":30736,"object":{"type":"Identifier","start":30721,"end":30731,"name":"cleanDatas"},"property":{"type":"Identifier","start":30732,"end":30736,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30737,"end":30824,"callee":{"type":"MemberExpression","start":30737,"end":30773,"object":{"type":"ThisExpression","start":30737,"end":30741},"property":{"type":"Identifier","start":30742,"end":30773,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30774,"end":30775,"name":"d"},{"type":"Identifier","start":30777,"end":30797,"name":"subCollectionWriters"},{"type":"Identifier","start":30799,"end":30823,"name":"additionalFieldsToRemove"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":30857,"end":30875,"argument":{"type":"Identifier","start":30864,"end":30874,"name":"cleanDatas"}}]},"alternate":{"type":"BlockStatement","start":30901,"end":31025,"body":[{"type":"ReturnStatement","start":30916,"end":31014,"argument":{"type":"CallExpression","start":30923,"end":31013,"callee":{"type":"MemberExpression","start":30923,"end":30959,"object":{"type":"ThisExpression","start":30923,"end":30927},"property":{"type":"Identifier","start":30928,"end":30959,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30960,"end":30964,"name":"data"},{"type":"Identifier","start":30966,"end":30986,"name":"subCollectionWriters"},{"type":"Identifier","start":30988,"end":31012,"name":"additionalFieldsToRemove"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":31565,"end":33182,"static":false,"computed":false,"key":{"type":"Identifier","start":31565,"end":31584,"name":"listenForDocSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":31584,"end":33182,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31585,"end":31591,"name":"docRef"},{"type":"AssignmentPattern","start":31593,"end":31649,"left":{"type":"Identifier","start":31593,"end":31609,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":31612,"end":31649,"object":{"type":"Identifier","start":31612,"end":31629,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":31630,"end":31649,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":31651,"end":33182,"body":[{"type":"ReturnStatement","start":31662,"end":33175,"argument":{"type":"CallExpression","start":31669,"end":33174,"callee":{"type":"MemberExpression","start":31669,"end":31693,"object":{"type":"CallExpression","start":31669,"end":31688,"callee":{"type":"MemberExpression","start":31669,"end":31680,"object":{"type":"MemberExpression","start":31669,"end":31676,"object":{"type":"ThisExpression","start":31669,"end":31673},"property":{"type":"Identifier","start":31674,"end":31676,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":31677,"end":31680,"name":"doc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31681,"end":31687,"name":"docRef"}],"optional":false},"property":{"type":"Identifier","start":31689,"end":31693,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":31694,"end":32140,"callee":{"type":"Identifier","start":31694,"end":31697,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":31698,"end":32139,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31699,"end":31707,"name":"snapshot"}],"body":{"type":"BlockStatement","start":31712,"end":32139,"body":[{"type":"IfStatement","start":31727,"end":32128,"test":{"type":"LogicalExpression","start":31731,"end":31809,"left":{"type":"UnaryExpression","start":31731,"end":31747,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":31732,"end":31747,"object":{"type":"Identifier","start":31732,"end":31740,"name":"snapshot"},"property":{"type":"Identifier","start":31741,"end":31747,"name":"exists"},"computed":false,"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":31751,"end":31809,"left":{"type":"Identifier","start":31751,"end":31767,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":31772,"end":31809,"object":{"type":"Identifier","start":31772,"end":31789,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":31790,"end":31809,"name":"THROW_DOC_NOT_FOUND"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":31811,"end":32128,"body":[{"type":"VariableDeclaration","start":31830,"end":32083,"declarations":[{"type":"VariableDeclarator","start":31836,"end":32082,"id":{"type":"Identifier","start":31836,"end":31841,"name":"error"},"init":{"type":"ObjectExpression","start":31844,"end":32082,"properties":[{"type":"Property","start":31867,"end":31891,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":31867,"end":31871,"name":"name"},"value":{"type":"Literal","start":31873,"end":31891,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":31914,"end":31931,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":31914,"end":31918,"name":"code"},"value":{"type":"Literal","start":31920,"end":31931,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":31954,"end":32034,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":31954,"end":31961,"name":"message"},"value":{"type":"Literal","start":31963,"end":32034,"value":"Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND","raw":"'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND'"},"kind":"init"},{"type":"Property","start":32057,"end":32063,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32057,"end":32063,"name":"docRef"},"kind":"init","value":{"type":"Identifier","start":32057,"end":32063,"name":"docRef"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":32101,"end":32113,"argument":{"type":"Identifier","start":32107,"end":32112,"name":"error"}}]},"alternate":null}]}}],"optional":false},{"type":"CallExpression","start":32142,"end":32267,"callee":{"type":"Identifier","start":32142,"end":32148,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":32149,"end":32266,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32150,"end":32158,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32163,"end":32266,"body":[{"type":"ReturnStatement","start":32178,"end":32255,"argument":{"type":"UnaryExpression","start":32185,"end":32254,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":32187,"end":32253,"left":{"type":"CallExpression","start":32187,"end":32204,"callee":{"type":"MemberExpression","start":32187,"end":32202,"object":{"type":"Identifier","start":32187,"end":32195,"name":"snapshot"},"property":{"type":"Identifier","start":32196,"end":32202,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":32208,"end":32253,"left":{"type":"Identifier","start":32208,"end":32224,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32229,"end":32253,"object":{"type":"Identifier","start":32229,"end":32246,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32247,"end":32253,"name":"FILTER"},"computed":false,"optional":false}}}}}]}}],"optional":false},{"type":"CallExpression","start":32269,"end":32977,"callee":{"type":"Identifier","start":32269,"end":32272,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32273,"end":32976,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32274,"end":32282,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32287,"end":32976,"body":[{"type":"IfStatement","start":32302,"end":32939,"test":{"type":"LogicalExpression","start":32306,"end":32383,"left":{"type":"MemberExpression","start":32306,"end":32321,"object":{"type":"Identifier","start":32306,"end":32314,"name":"snapshot"},"property":{"type":"Identifier","start":32315,"end":32321,"name":"exists"},"computed":false,"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":32325,"end":32383,"left":{"type":"Identifier","start":32325,"end":32341,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32346,"end":32383,"object":{"type":"Identifier","start":32346,"end":32363,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32364,"end":32383,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32385,"end":32794,"body":[{"type":"VariableDeclaration","start":32404,"end":32433,"declarations":[{"type":"VariableDeclarator","start":32410,"end":32432,"id":{"type":"Identifier","start":32410,"end":32414,"name":"data"},"init":{"type":"CallExpression","start":32417,"end":32432,"callee":{"type":"MemberExpression","start":32417,"end":32430,"object":{"type":"Identifier","start":32417,"end":32425,"name":"snapshot"},"property":{"type":"Identifier","start":32426,"end":32430,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":32451,"end":32723,"declarations":[{"type":"VariableDeclarator","start":32457,"end":32722,"id":{"type":"Identifier","start":32457,"end":32474,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":32477,"end":32722,"properties":[{"type":"Property","start":32500,"end":32515,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32500,"end":32502,"name":"id"},"value":{"type":"MemberExpression","start":32504,"end":32515,"object":{"type":"Identifier","start":32504,"end":32512,"name":"snapshot"},"property":{"type":"Identifier","start":32513,"end":32515,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32538,"end":32555,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32538,"end":32541,"name":"ref"},"value":{"type":"MemberExpression","start":32543,"end":32555,"object":{"type":"Identifier","start":32543,"end":32551,"name":"snapshot"},"property":{"type":"Identifier","start":32552,"end":32555,"name":"ref"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32578,"end":32595,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32578,"end":32582,"name":"path"},"value":{"type":"MemberExpression","start":32584,"end":32595,"object":{"type":"Identifier","start":32584,"end":32590,"name":"docRef"},"property":{"type":"Identifier","start":32591,"end":32595,"name":"path"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32618,"end":32645,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32618,"end":32626,"name":"isExists"},"value":{"type":"CallExpression","start":32628,"end":32645,"callee":{"type":"MemberExpression","start":32628,"end":32643,"object":{"type":"Identifier","start":32628,"end":32636,"name":"snapshot"},"property":{"type":"Identifier","start":32637,"end":32643,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":32668,"end":32703,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32668,"end":32684,"name":"snapshotMetadata"},"value":{"type":"MemberExpression","start":32686,"end":32703,"object":{"type":"Identifier","start":32686,"end":32694,"name":"snapshot"},"property":{"type":"Identifier","start":32695,"end":32703,"name":"metadata"},"computed":false,"optional":false},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":32741,"end":32779,"argument":{"type":"ObjectExpression","start":32748,"end":32778,"properties":[{"type":"SpreadElement","start":32750,"end":32757,"argument":{"type":"Identifier","start":32753,"end":32757,"name":"data"}},{"type":"Property","start":32759,"end":32776,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32759,"end":32776,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":32759,"end":32776,"name":"firestoreMetadata"}}]}}]},"alternate":{"type":"IfStatement","start":32813,"end":32939,"test":{"type":"BinaryExpression","start":32817,"end":32867,"left":{"type":"Identifier","start":32817,"end":32833,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32838,"end":32867,"object":{"type":"Identifier","start":32838,"end":32855,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32856,"end":32867,"name":"RETURN_NULL"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":32869,"end":32939,"body":[{"type":"ReturnStatement","start":32912,"end":32924,"argument":{"type":"Literal","start":32919,"end":32923,"value":null,"raw":"null"}}]},"alternate":null}},{"type":"ReturnStatement","start":32953,"end":32965,"argument":{"type":"Literal","start":32960,"end":32964,"value":null,"raw":"null"}}]}}],"optional":false},{"type":"CallExpression","start":32979,"end":33173,"callee":{"type":"Identifier","start":32979,"end":32982,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32983,"end":33172,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32984,"end":32988,"name":"data"}],"body":{"type":"BlockStatement","start":32993,"end":33172,"body":[{"type":"IfStatement","start":33008,"end":33161,"test":{"type":"BinaryExpression","start":33012,"end":33024,"left":{"type":"Identifier","start":33012,"end":33016,"name":"data"},"operator":"!=","right":{"type":"Literal","start":33020,"end":33024,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":33026,"end":33096,"body":[{"type":"ReturnStatement","start":33045,"end":33081,"argument":{"type":"CallExpression","start":33052,"end":33080,"callee":{"type":"Identifier","start":33052,"end":33074,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":33075,"end":33079,"name":"data"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":33115,"end":33161,"body":[{"type":"ReturnStatement","start":33134,"end":33146,"argument":{"type":"Identifier","start":33141,"end":33145,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":33573,"end":34561,"static":false,"computed":false,"key":{"type":"Identifier","start":33573,"end":33599,"name":"listenForCollectionSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":33599,"end":34561,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33600,"end":33613,"name":"collectionRef"}],"body":{"type":"BlockStatement","start":33615,"end":34561,"body":[{"type":"ReturnStatement","start":33790,"end":34554,"argument":{"type":"CallExpression","start":33797,"end":34553,"callee":{"type":"MemberExpression","start":33797,"end":33835,"object":{"type":"CallExpression","start":33797,"end":33830,"callee":{"type":"MemberExpression","start":33797,"end":33815,"object":{"type":"MemberExpression","start":33797,"end":33804,"object":{"type":"ThisExpression","start":33797,"end":33801},"property":{"type":"Identifier","start":33802,"end":33804,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":33805,"end":33815,"name":"collection"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":33816,"end":33829,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":33831,"end":33835,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":33836,"end":34434,"callee":{"type":"Identifier","start":33836,"end":33839,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33840,"end":34433,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33841,"end":33845,"name":"snap"}],"body":{"type":"BlockStatement","start":33850,"end":34433,"body":[{"type":"ReturnStatement","start":33865,"end":34422,"argument":{"type":"CallExpression","start":33872,"end":34421,"callee":{"type":"MemberExpression","start":33872,"end":33885,"object":{"type":"MemberExpression","start":33872,"end":33881,"object":{"type":"Identifier","start":33872,"end":33876,"name":"snap"},"property":{"type":"Identifier","start":33877,"end":33881,"name":"docs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":33882,"end":33885,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":33886,"end":34420,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33886,"end":33894,"name":"snapshot"}],"body":{"type":"BlockStatement","start":33898,"end":34420,"body":[{"type":"VariableDeclaration","start":33917,"end":33946,"declarations":[{"type":"VariableDeclarator","start":33923,"end":33945,"id":{"type":"Identifier","start":33923,"end":33927,"name":"data"},"init":{"type":"CallExpression","start":33930,"end":33945,"callee":{"type":"MemberExpression","start":33930,"end":33943,"object":{"type":"Identifier","start":33930,"end":33938,"name":"snapshot"},"property":{"type":"Identifier","start":33939,"end":33943,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":33964,"end":33987,"declarations":[{"type":"VariableDeclarator","start":33970,"end":33986,"id":{"type":"Identifier","start":33970,"end":33972,"name":"id"},"init":{"type":"MemberExpression","start":33975,"end":33986,"object":{"type":"Identifier","start":33975,"end":33983,"name":"snapshot"},"property":{"type":"Identifier","start":33984,"end":33986,"name":"id"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34005,"end":34030,"declarations":[{"type":"VariableDeclarator","start":34011,"end":34029,"id":{"type":"Identifier","start":34011,"end":34014,"name":"ref"},"init":{"type":"MemberExpression","start":34017,"end":34029,"object":{"type":"Identifier","start":34017,"end":34025,"name":"snapshot"},"property":{"type":"Identifier","start":34026,"end":34029,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34048,"end":34070,"declarations":[{"type":"VariableDeclarator","start":34054,"end":34069,"id":{"type":"Identifier","start":34054,"end":34058,"name":"path"},"init":{"type":"MemberExpression","start":34061,"end":34069,"object":{"type":"Identifier","start":34061,"end":34064,"name":"ref"},"property":{"type":"Identifier","start":34065,"end":34069,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34088,"end":34131,"declarations":[{"type":"VariableDeclarator","start":34094,"end":34130,"id":{"type":"Identifier","start":34094,"end":34110,"name":"snapshotMetadata"},"init":{"type":"MemberExpression","start":34113,"end":34130,"object":{"type":"Identifier","start":34113,"end":34121,"name":"snapshot"},"property":{"type":"Identifier","start":34122,"end":34130,"name":"metadata"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34149,"end":34349,"declarations":[{"type":"VariableDeclarator","start":34155,"end":34348,"id":{"type":"Identifier","start":34155,"end":34172,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":34175,"end":34348,"properties":[{"type":"Property","start":34198,"end":34200,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34198,"end":34200,"name":"id"},"kind":"init","value":{"type":"Identifier","start":34198,"end":34200,"name":"id"}},{"type":"Property","start":34223,"end":34227,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34223,"end":34227,"name":"path"},"kind":"init","value":{"type":"Identifier","start":34223,"end":34227,"name":"path"}},{"type":"Property","start":34250,"end":34253,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34250,"end":34253,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":34250,"end":34253,"name":"ref"}},{"type":"Property","start":34276,"end":34292,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34276,"end":34292,"name":"snapshotMetadata"},"kind":"init","value":{"type":"Identifier","start":34276,"end":34292,"name":"snapshotMetadata"}},{"type":"Property","start":34315,"end":34329,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":34315,"end":34323,"name":"isExists"},"value":{"type":"Literal","start":34325,"end":34329,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":34367,"end":34405,"argument":{"type":"ObjectExpression","start":34374,"end":34404,"properties":[{"type":"SpreadElement","start":34376,"end":34383,"argument":{"type":"Identifier","start":34379,"end":34383,"name":"data"}},{"type":"Property","start":34385,"end":34402,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34385,"end":34402,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":34385,"end":34402,"name":"firestoreMetadata"}}]}}]}}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":34436,"end":34552,"callee":{"type":"Identifier","start":34436,"end":34439,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34440,"end":34551,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":34441,"end":34446,"name":"datas"}],"body":{"type":"CallExpression","start":34451,"end":34551,"callee":{"type":"MemberExpression","start":34451,"end":34460,"object":{"type":"Identifier","start":34451,"end":34456,"name":"datas"},"property":{"type":"Identifier","start":34457,"end":34460,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34461,"end":34550,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34461,"end":34465,"name":"data"}],"body":{"type":"BlockStatement","start":34469,"end":34550,"body":[{"type":"ExpressionStatement","start":34484,"end":34513,"expression":{"type":"CallExpression","start":34484,"end":34512,"callee":{"type":"Identifier","start":34484,"end":34506,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":34507,"end":34511,"name":"data"}],"optional":false}},{"type":"ReturnStatement","start":34527,"end":34539,"argument":{"type":"Identifier","start":34534,"end":34538,"name":"data"}}]}}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":34843,"end":38288,"static":false,"computed":false,"key":{"type":"Identifier","start":34843,"end":34867,"name":"listenForCollectionsDeep"},"kind":"method","value":{"type":"FunctionExpression","start":34867,"end":38288,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34868,"end":34872,"name":"item"},{"type":"AssignmentPattern","start":34874,"end":34899,"left":{"type":"Identifier","start":34874,"end":34894,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":34897,"end":34899,"elements":[]}}],"body":{"type":"BlockStatement","start":34901,"end":38288,"body":[{"type":"IfStatement","start":34912,"end":34974,"test":{"type":"BinaryExpression","start":34916,"end":34928,"left":{"type":"Identifier","start":34916,"end":34920,"name":"item"},"operator":"==","right":{"type":"Literal","start":34924,"end":34928,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":34930,"end":34974,"body":[{"type":"ReturnStatement","start":34945,"end":34963,"argument":{"type":"CallExpression","start":34952,"end":34962,"callee":{"type":"Identifier","start":34952,"end":34954,"name":"of"},"arguments":[{"type":"ArrayExpression","start":34955,"end":34961,"elements":[{"type":"Identifier","start":34956,"end":34960,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":34984,"end":35066,"test":{"type":"BinaryExpression","start":34988,"end":35020,"left":{"type":"MemberExpression","start":34988,"end":35015,"object":{"type":"Identifier","start":34988,"end":35008,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35009,"end":35015,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":35019,"end":35020,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":35022,"end":35066,"body":[{"type":"ReturnStatement","start":35037,"end":35055,"argument":{"type":"CallExpression","start":35044,"end":35054,"callee":{"type":"Identifier","start":35044,"end":35046,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35047,"end":35053,"elements":[{"type":"Identifier","start":35048,"end":35052,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":35076,"end":35107,"declarations":[{"type":"VariableDeclarator","start":35082,"end":35106,"id":{"type":"Identifier","start":35082,"end":35101,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":35104,"end":35106,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":35210,"end":37689,"expression":{"type":"CallExpression","start":35210,"end":37688,"callee":{"type":"MemberExpression","start":35210,"end":35238,"object":{"type":"Identifier","start":35210,"end":35230,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35231,"end":35238,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":35239,"end":37687,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35239,"end":35257,"name":"subCollectionQuery"}],"body":{"type":"BlockStatement","start":35261,"end":37687,"body":[{"type":"VariableDeclaration","start":35276,"end":35366,"declarations":[{"type":"VariableDeclarator","start":35280,"end":35365,"id":{"type":"Identifier","start":35280,"end":35293,"name":"collectionRef"},"init":{"type":"CallExpression","start":35296,"end":35365,"callee":{"type":"Identifier","start":35296,"end":35312,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":35313,"end":35339,"object":{"type":"MemberExpression","start":35313,"end":35335,"object":{"type":"Identifier","start":35313,"end":35317,"name":"item"},"property":{"type":"Identifier","start":35318,"end":35335,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":35336,"end":35339,"name":"ref"},"computed":false,"optional":false},{"type":"MemberExpression","start":35341,"end":35364,"object":{"type":"Identifier","start":35341,"end":35359,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35360,"end":35364,"name":"name"},"computed":false,"optional":false}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":35380,"end":35504,"test":{"type":"MemberExpression","start":35384,"end":35410,"object":{"type":"Identifier","start":35384,"end":35402,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35403,"end":35410,"name":"queryFn"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":35412,"end":35504,"body":[{"type":"ExpressionStatement","start":35431,"end":35489,"expression":{"type":"AssignmentExpression","start":35431,"end":35488,"operator":"=","left":{"type":"Identifier","start":35431,"end":35444,"name":"collectionRef"},"right":{"type":"CallExpression","start":35447,"end":35488,"callee":{"type":"MemberExpression","start":35447,"end":35473,"object":{"type":"Identifier","start":35447,"end":35465,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35466,"end":35473,"name":"queryFn"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":35474,"end":35487,"name":"collectionRef"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":35518,"end":37617,"declarations":[{"type":"VariableDeclarator","start":35524,"end":37616,"id":{"type":"Identifier","start":35524,"end":35542,"name":"collectionListener"},"init":{"type":"CallExpression","start":35545,"end":37616,"callee":{"type":"MemberExpression","start":35545,"end":35596,"object":{"type":"CallExpression","start":35545,"end":35591,"callee":{"type":"MemberExpression","start":35545,"end":35576,"object":{"type":"ThisExpression","start":35545,"end":35549},"property":{"type":"Identifier","start":35550,"end":35576,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":35577,"end":35590,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":35592,"end":35596,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":36011,"end":36829,"callee":{"type":"Identifier","start":36011,"end":36019,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":36020,"end":36828,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36021,"end":36026,"name":"items"}],"body":{"type":"BlockStatement","start":36031,"end":36828,"body":[{"type":"IfStatement","start":36050,"end":36149,"test":{"type":"UnaryExpression","start":36054,"end":36088,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":36055,"end":36088,"object":{"type":"Identifier","start":36055,"end":36073,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36074,"end":36088,"name":"subCollections"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":36090,"end":36149,"body":[{"type":"ReturnStatement","start":36113,"end":36130,"argument":{"type":"CallExpression","start":36120,"end":36129,"callee":{"type":"Identifier","start":36120,"end":36122,"name":"of"},"arguments":[{"type":"Identifier","start":36123,"end":36128,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":36167,"end":36191,"declarations":[{"type":"VariableDeclarator","start":36173,"end":36190,"id":{"type":"Identifier","start":36173,"end":36185,"name":"docListeners"},"init":{"type":"ArrayExpression","start":36188,"end":36190,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":36209,"end":36246,"expression":{"type":"AssignmentExpression","start":36209,"end":36245,"operator":"=","left":{"type":"Identifier","start":36209,"end":36214,"name":"items"},"right":{"type":"CallExpression","start":36217,"end":36245,"callee":{"type":"MemberExpression","start":36217,"end":36229,"object":{"type":"Identifier","start":36217,"end":36222,"name":"items"},"property":{"type":"Identifier","start":36223,"end":36229,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36230,"end":36244,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":36230,"end":36231,"name":"d"}],"body":{"type":"BinaryExpression","start":36235,"end":36244,"left":{"type":"Identifier","start":36235,"end":36236,"name":"d"},"operator":"!=","right":{"type":"Literal","start":36240,"end":36244,"value":null,"raw":"null"}}}],"optional":false}}},{"type":"ExpressionStatement","start":36294,"end":36532,"expression":{"type":"CallExpression","start":36294,"end":36531,"callee":{"type":"MemberExpression","start":36294,"end":36307,"object":{"type":"Identifier","start":36294,"end":36299,"name":"items"},"property":{"type":"Identifier","start":36300,"end":36307,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36308,"end":36530,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36309,"end":36316,"name":"subItem"}],"body":{"type":"BlockStatement","start":36321,"end":36530,"body":[{"type":"VariableDeclaration","start":36344,"end":36448,"declarations":[{"type":"VariableDeclarator","start":36350,"end":36447,"id":{"type":"Identifier","start":36350,"end":36371,"name":"subDocAndCollections$"},"init":{"type":"CallExpression","start":36374,"end":36447,"callee":{"type":"MemberExpression","start":36374,"end":36403,"object":{"type":"ThisExpression","start":36374,"end":36378},"property":{"type":"Identifier","start":36379,"end":36403,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36404,"end":36411,"name":"subItem"},{"type":"MemberExpression","start":36413,"end":36446,"object":{"type":"Identifier","start":36413,"end":36431,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36432,"end":36446,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":36470,"end":36511,"expression":{"type":"CallExpression","start":36470,"end":36510,"callee":{"type":"MemberExpression","start":36470,"end":36487,"object":{"type":"Identifier","start":36470,"end":36482,"name":"docListeners"},"property":{"type":"Identifier","start":36483,"end":36487,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36488,"end":36509,"name":"subDocAndCollections$"}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":36550,"end":36636,"test":{"type":"BinaryExpression","start":36554,"end":36578,"left":{"type":"MemberExpression","start":36554,"end":36573,"object":{"type":"Identifier","start":36554,"end":36566,"name":"docListeners"},"property":{"type":"Identifier","start":36567,"end":36573,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":36577,"end":36578,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":36580,"end":36636,"body":[{"type":"ReturnStatement","start":36603,"end":36617,"argument":{"type":"CallExpression","start":36610,"end":36616,"callee":{"type":"Identifier","start":36610,"end":36612,"name":"of"},"arguments":[{"type":"ArrayExpression","start":36613,"end":36615,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":36704,"end":36813,"argument":{"type":"CallExpression","start":36711,"end":36812,"callee":{"type":"MemberExpression","start":36711,"end":36743,"object":{"type":"CallExpression","start":36711,"end":36738,"callee":{"type":"Identifier","start":36711,"end":36724,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":36725,"end":36737,"name":"docListeners"}],"optional":false},"property":{"type":"Identifier","start":36739,"end":36743,"name":"pipe"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":37182,"end":37615,"callee":{"type":"Identifier","start":37182,"end":37185,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37186,"end":37614,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37187,"end":37192,"name":"items"}],"body":{"type":"BlockStatement","start":37197,"end":37614,"body":[{"type":"VariableDeclaration","start":37216,"end":37316,"declarations":[{"type":"VariableDeclarator","start":37222,"end":37315,"id":{"type":"Identifier","start":37222,"end":37227,"name":"docId"},"init":{"type":"ConditionalExpression","start":37230,"end":37315,"test":{"type":"BinaryExpression","start":37230,"end":37268,"left":{"type":"MemberExpression","start":37230,"end":37254,"object":{"type":"Identifier","start":37230,"end":37248,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37249,"end":37254,"name":"docId"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":37259,"end":37268,"name":"undefined"}},"consequent":{"type":"MemberExpression","start":37271,"end":37295,"object":{"type":"Identifier","start":37271,"end":37289,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37290,"end":37295,"name":"docId"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":37298,"end":37315,"object":{"type":"ThisExpression","start":37298,"end":37302},"property":{"type":"Identifier","start":37303,"end":37315,"name":"defaultDocId"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":37334,"end":37599,"test":{"type":"LogicalExpression","start":37338,"end":37399,"left":{"type":"BinaryExpression","start":37338,"end":37356,"left":{"type":"MemberExpression","start":37338,"end":37350,"object":{"type":"Identifier","start":37338,"end":37343,"name":"items"},"property":{"type":"Identifier","start":37344,"end":37350,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":37355,"end":37356,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":37360,"end":37399,"left":{"type":"MemberExpression","start":37360,"end":37389,"object":{"type":"MemberExpression","start":37360,"end":37386,"object":{"type":"MemberExpression","start":37360,"end":37368,"object":{"type":"Identifier","start":37360,"end":37365,"name":"items"},"property":{"type":"Literal","start":37366,"end":37367,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":37369,"end":37386,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":37387,"end":37389,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":37394,"end":37399,"name":"docId"}}},"consequent":{"type":"BlockStatement","start":37401,"end":37490,"body":[{"type":"ReturnStatement","start":37424,"end":37471,"argument":{"type":"ObjectExpression","start":37431,"end":37470,"properties":[{"type":"Property","start":37433,"end":37468,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37434,"end":37457,"object":{"type":"Identifier","start":37434,"end":37452,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37453,"end":37457,"name":"name"},"computed":false,"optional":false},"value":{"type":"MemberExpression","start":37460,"end":37468,"object":{"type":"Identifier","start":37460,"end":37465,"name":"items"},"property":{"type":"Literal","start":37466,"end":37467,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":37513,"end":37599,"body":[{"type":"ReturnStatement","start":37536,"end":37580,"argument":{"type":"ObjectExpression","start":37543,"end":37579,"properties":[{"type":"Property","start":37545,"end":37577,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37546,"end":37569,"object":{"type":"Identifier","start":37546,"end":37564,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37565,"end":37569,"name":"name"},"computed":false,"optional":false},"value":{"type":"Identifier","start":37572,"end":37577,"name":"items"},"kind":"init"}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":37631,"end":37676,"expression":{"type":"CallExpression","start":37631,"end":37675,"callee":{"type":"MemberExpression","start":37631,"end":37655,"object":{"type":"Identifier","start":37631,"end":37650,"name":"collectionListeners"},"property":{"type":"Identifier","start":37651,"end":37655,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":37656,"end":37674,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":37785,"end":38281,"argument":{"type":"CallExpression","start":37792,"end":38280,"callee":{"type":"MemberExpression","start":37792,"end":37831,"object":{"type":"CallExpression","start":37792,"end":37826,"callee":{"type":"Identifier","start":37792,"end":37805,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":37806,"end":37825,"name":"collectionListeners"}],"optional":false},"property":{"type":"Identifier","start":37827,"end":37831,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":37832,"end":38208,"callee":{"type":"Identifier","start":37832,"end":37835,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37836,"end":38207,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37837,"end":37852,"name":"collectionDatas"}],"body":{"type":"BlockStatement","start":37857,"end":38207,"body":[{"type":"VariableDeclaration","start":37915,"end":37935,"declarations":[{"type":"VariableDeclarator","start":37921,"end":37934,"id":{"type":"Identifier","start":37921,"end":37929,"name":"datasMap"},"init":{"type":"ObjectExpression","start":37932,"end":37934,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":37949,"end":38166,"expression":{"type":"CallExpression","start":37949,"end":38165,"callee":{"type":"MemberExpression","start":37949,"end":37972,"object":{"type":"Identifier","start":37949,"end":37964,"name":"collectionDatas"},"property":{"type":"Identifier","start":37965,"end":37972,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":37973,"end":38164,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37974,"end":37984,"name":"collection"}],"body":{"type":"BlockStatement","start":37989,"end":38164,"body":[{"type":"ForOfStatement","start":38008,"end":38149,"await":false,"left":{"type":"VariableDeclaration","start":38013,"end":38042,"declarations":[{"type":"VariableDeclarator","start":38019,"end":38042,"id":{"type":"ArrayPattern","start":38019,"end":38042,"elements":[{"type":"Identifier","start":38020,"end":38034,"name":"collectionName"},{"type":"Identifier","start":38036,"end":38041,"name":"items"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":38046,"end":38072,"callee":{"type":"MemberExpression","start":38046,"end":38060,"object":{"type":"Identifier","start":38046,"end":38052,"name":"Object"},"property":{"type":"Identifier","start":38053,"end":38060,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38061,"end":38071,"name":"collection"}],"optional":false},"body":{"type":"BlockStatement","start":38074,"end":38149,"body":[{"type":"ExpressionStatement","start":38097,"end":38130,"expression":{"type":"AssignmentExpression","start":38097,"end":38129,"operator":"=","left":{"type":"MemberExpression","start":38097,"end":38121,"object":{"type":"Identifier","start":38097,"end":38105,"name":"datasMap"},"property":{"type":"Identifier","start":38106,"end":38120,"name":"collectionName"},"computed":true,"optional":false},"right":{"type":"Identifier","start":38124,"end":38129,"name":"items"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":38180,"end":38196,"argument":{"type":"Identifier","start":38187,"end":38195,"name":"datasMap"}}]}}],"optional":false},{"type":"CallExpression","start":38210,"end":38279,"callee":{"type":"Identifier","start":38210,"end":38213,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38214,"end":38278,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38215,"end":38219,"name":"data"}],"body":{"type":"BlockStatement","start":38224,"end":38278,"body":[{"type":"ReturnStatement","start":38239,"end":38267,"argument":{"type":"ObjectExpression","start":38246,"end":38266,"properties":[{"type":"SpreadElement","start":38248,"end":38255,"argument":{"type":"Identifier","start":38251,"end":38255,"name":"item"}},{"type":"SpreadElement","start":38257,"end":38264,"argument":{"type":"Identifier","start":38260,"end":38264,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":38403,"end":38935,"static":false,"computed":false,"key":{"type":"Identifier","start":38403,"end":38435,"name":"listenForDocDeepRecursiveHelper$"},"kind":"method","value":{"type":"FunctionExpression","start":38435,"end":38935,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38436,"end":38442,"name":"docRef"},{"type":"AssignmentPattern","start":38444,"end":38469,"left":{"type":"Identifier","start":38444,"end":38464,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":38467,"end":38469,"elements":[]}},{"type":"AssignmentPattern","start":38471,"end":38519,"left":{"type":"Identifier","start":38471,"end":38487,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":38490,"end":38519,"object":{"type":"Identifier","start":38490,"end":38507,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":38508,"end":38519,"name":"RETURN_NULL"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":38521,"end":38935,"body":[{"type":"ReturnStatement","start":38567,"end":38928,"argument":{"type":"CallExpression","start":38574,"end":38927,"callee":{"type":"MemberExpression","start":38574,"end":38629,"object":{"type":"CallExpression","start":38574,"end":38624,"callee":{"type":"MemberExpression","start":38574,"end":38598,"object":{"type":"ThisExpression","start":38574,"end":38578},"property":{"type":"Identifier","start":38579,"end":38598,"name":"listenForDocSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38599,"end":38605,"name":"docRef"},{"type":"Identifier","start":38607,"end":38623,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":38625,"end":38629,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38630,"end":38926,"callee":{"type":"Identifier","start":38630,"end":38638,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":38639,"end":38925,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38640,"end":38644,"name":"item"}],"body":{"type":"BlockStatement","start":38649,"end":38925,"body":[{"type":"IfStatement","start":38664,"end":38733,"test":{"type":"BinaryExpression","start":38668,"end":38681,"left":{"type":"Identifier","start":38668,"end":38672,"name":"item"},"operator":"===","right":{"type":"Literal","start":38677,"end":38681,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":38683,"end":38733,"body":[{"type":"ReturnStatement","start":38702,"end":38718,"argument":{"type":"CallExpression","start":38709,"end":38717,"callee":{"type":"Identifier","start":38709,"end":38711,"name":"of"},"arguments":[{"type":"Identifier","start":38712,"end":38716,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":38747,"end":38835,"test":{"type":"BinaryExpression","start":38751,"end":38783,"left":{"type":"MemberExpression","start":38751,"end":38778,"object":{"type":"Identifier","start":38751,"end":38771,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":38772,"end":38778,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":38782,"end":38783,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":38785,"end":38835,"body":[{"type":"ReturnStatement","start":38804,"end":38820,"argument":{"type":"CallExpression","start":38811,"end":38819,"callee":{"type":"Identifier","start":38811,"end":38813,"name":"of"},"arguments":[{"type":"Identifier","start":38814,"end":38818,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":38849,"end":38914,"argument":{"type":"CallExpression","start":38856,"end":38913,"callee":{"type":"MemberExpression","start":38856,"end":38885,"object":{"type":"ThisExpression","start":38856,"end":38860},"property":{"type":"Identifier","start":38861,"end":38885,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38886,"end":38890,"name":"item"},{"type":"Identifier","start":38892,"end":38912,"name":"subCollectionQueries"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":39626,"end":41507,"static":false,"computed":false,"key":{"type":"Identifier","start":39626,"end":39636,"name":"addSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":39636,"end":41507,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39637,"end":39641,"name":"data"},{"type":"Identifier","start":39643,"end":39656,"name":"collectionRef"},{"type":"AssignmentPattern","start":39658,"end":39675,"left":{"type":"Identifier","start":39658,"end":39668,"name":"isAddDates"},"right":{"type":"Literal","start":39671,"end":39675,"value":true,"raw":"true"}},{"type":"Identifier","start":39677,"end":39679,"name":"id"}],"body":{"type":"BlockStatement","start":39681,"end":41507,"body":[{"type":"VariableDeclaration","start":39752,"end":39761,"declarations":[{"type":"VariableDeclarator","start":39756,"end":39760,"id":{"type":"Identifier","start":39756,"end":39760,"name":"res$"},"init":null}],"kind":"let"},{"type":"IfStatement","start":39771,"end":39948,"test":{"type":"Identifier","start":39775,"end":39785,"name":"isAddDates"},"consequent":{"type":"BlockStatement","start":39787,"end":39948,"body":[{"type":"VariableDeclaration","start":39802,"end":39826,"declarations":[{"type":"VariableDeclarator","start":39808,"end":39825,"id":{"type":"Identifier","start":39808,"end":39812,"name":"date"},"init":{"type":"NewExpression","start":39815,"end":39825,"callee":{"type":"Identifier","start":39819,"end":39823,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":39840,"end":39881,"expression":{"type":"AssignmentExpression","start":39840,"end":39880,"operator":"=","left":{"type":"Identifier","start":39840,"end":39844,"name":"data"},"right":{"type":"CallExpression","start":39847,"end":39880,"callee":{"type":"Identifier","start":39847,"end":39861,"name":"addCreatedDate"},"arguments":[{"type":"Identifier","start":39862,"end":39866,"name":"data"},{"type":"Literal","start":39868,"end":39873,"value":false,"raw":"false"},{"type":"Identifier","start":39875,"end":39879,"name":"date"}],"optional":false}}},{"type":"ExpressionStatement","start":39895,"end":39937,"expression":{"type":"AssignmentExpression","start":39895,"end":39936,"operator":"=","left":{"type":"Identifier","start":39895,"end":39899,"name":"data"},"right":{"type":"CallExpression","start":39902,"end":39936,"callee":{"type":"Identifier","start":39902,"end":39917,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":39918,"end":39922,"name":"data"},{"type":"Literal","start":39924,"end":39929,"value":false,"raw":"false"},{"type":"Identifier","start":39931,"end":39935,"name":"date"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":39958,"end":40184,"test":{"type":"BinaryExpression","start":39962,"end":39978,"left":{"type":"Identifier","start":39962,"end":39964,"name":"id"},"operator":"!==","right":{"type":"Identifier","start":39969,"end":39978,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":39980,"end":40103,"body":[{"type":"VariableDeclaration","start":39995,"end":40045,"declarations":[{"type":"VariableDeclarator","start":40001,"end":40044,"id":{"type":"Identifier","start":40001,"end":40007,"name":"docRef"},"init":{"type":"CallExpression","start":40010,"end":40044,"callee":{"type":"Identifier","start":40010,"end":40025,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":40026,"end":40039,"name":"collectionRef"},{"type":"Identifier","start":40041,"end":40043,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":40059,"end":40092,"expression":{"type":"AssignmentExpression","start":40059,"end":40091,"operator":"=","left":{"type":"Identifier","start":40059,"end":40063,"name":"res$"},"right":{"type":"CallExpression","start":40066,"end":40091,"callee":{"type":"MemberExpression","start":40066,"end":40077,"object":{"type":"MemberExpression","start":40066,"end":40073,"object":{"type":"ThisExpression","start":40066,"end":40070},"property":{"type":"Identifier","start":40071,"end":40073,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40074,"end":40077,"name":"set"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40078,"end":40084,"name":"docRef"},{"type":"Identifier","start":40086,"end":40090,"name":"data"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":40118,"end":40184,"body":[{"type":"ExpressionStatement","start":40133,"end":40173,"expression":{"type":"AssignmentExpression","start":40133,"end":40172,"operator":"=","left":{"type":"Identifier","start":40133,"end":40137,"name":"res$"},"right":{"type":"CallExpression","start":40140,"end":40172,"callee":{"type":"MemberExpression","start":40140,"end":40151,"object":{"type":"MemberExpression","start":40140,"end":40147,"object":{"type":"ThisExpression","start":40140,"end":40144},"property":{"type":"Identifier","start":40145,"end":40147,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40148,"end":40151,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40152,"end":40165,"name":"collectionRef"},{"type":"Identifier","start":40167,"end":40171,"name":"data"}],"optional":false}}}]}},{"type":"ExpressionStatement","start":40434,"end":41464,"expression":{"type":"AssignmentExpression","start":40434,"end":41463,"operator":"=","left":{"type":"Identifier","start":40434,"end":40438,"name":"res$"},"right":{"type":"CallExpression","start":40441,"end":41463,"callee":{"type":"MemberExpression","start":40441,"end":40450,"object":{"type":"Identifier","start":40441,"end":40445,"name":"res$"},"property":{"type":"Identifier","start":40446,"end":40450,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":40626,"end":41462,"callee":{"type":"Identifier","start":40626,"end":40629,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":40630,"end":41461,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":40631,"end":40634,"name":"ref"}],"body":{"type":"BlockStatement","start":40639,"end":41461,"body":[{"type":"IfStatement","start":40654,"end":41450,"test":{"type":"LogicalExpression","start":40658,"end":40681,"left":{"type":"BinaryExpression","start":40658,"end":40674,"left":{"type":"Identifier","start":40658,"end":40660,"name":"id"},"operator":"===","right":{"type":"Identifier","start":40665,"end":40674,"name":"undefined"}},"operator":"&&","right":{"type":"Identifier","start":40678,"end":40681,"name":"ref"}},"consequent":{"type":"BlockStatement","start":40683,"end":40982,"body":[{"type":"VariableDeclaration","start":40702,"end":40724,"declarations":[{"type":"VariableDeclarator","start":40708,"end":40723,"id":{"type":"Identifier","start":40708,"end":40712,"name":"path"},"init":{"type":"MemberExpression","start":40715,"end":40723,"object":{"type":"Identifier","start":40715,"end":40718,"name":"ref"},"property":{"type":"Identifier","start":40719,"end":40723,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":40742,"end":40911,"declarations":[{"type":"VariableDeclarator","start":40748,"end":40910,"id":{"type":"Identifier","start":40748,"end":40765,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":40768,"end":40910,"properties":[{"type":"Property","start":40791,"end":40801,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":40791,"end":40793,"name":"id"},"value":{"type":"MemberExpression","start":40795,"end":40801,"object":{"type":"Identifier","start":40795,"end":40798,"name":"ref"},"property":{"type":"Identifier","start":40799,"end":40801,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":40824,"end":40828,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":40824,"end":40828,"name":"path"},"kind":"init","value":{"type":"Identifier","start":40824,"end":40828,"name":"path"}},{"type":"Property","start":40851,"end":40854,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":40851,"end":40854,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":40851,"end":40854,"name":"ref"}},{"type":"Property","start":40877,"end":40891,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":40877,"end":40885,"name":"isExists"},"value":{"type":"Literal","start":40887,"end":40891,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":40929,"end":40967,"argument":{"type":"ObjectExpression","start":40936,"end":40966,"properties":[{"type":"SpreadElement","start":40938,"end":40945,"argument":{"type":"Identifier","start":40941,"end":40945,"name":"data"}},{"type":"Property","start":40947,"end":40964,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":40947,"end":40964,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":40947,"end":40964,"name":"firestoreMetadata"}}]}}]},"alternate":{"type":"BlockStatement","start":41001,"end":41450,"body":[{"type":"VariableDeclaration","start":41089,"end":41132,"declarations":[{"type":"VariableDeclarator","start":41095,"end":41131,"id":{"type":"Identifier","start":41095,"end":41099,"name":"path"},"init":{"type":"BinaryExpression","start":41102,"end":41131,"left":{"type":"BinaryExpression","start":41102,"end":41126,"left":{"type":"MemberExpression","start":41102,"end":41120,"object":{"type":"Identifier","start":41102,"end":41115,"name":"collectionRef"},"property":{"type":"Identifier","start":41116,"end":41120,"name":"path"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":41123,"end":41126,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":41129,"end":41131,"name":"id"}}}],"kind":"const"},{"type":"ExpressionStatement","start":41150,"end":41196,"expression":{"type":"AssignmentExpression","start":41150,"end":41195,"operator":"=","left":{"type":"Identifier","start":41150,"end":41153,"name":"ref"},"right":{"type":"CallExpression","start":41156,"end":41195,"callee":{"type":"Identifier","start":41156,"end":41170,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":41171,"end":41175,"name":"path"},{"type":"MemberExpression","start":41177,"end":41194,"object":{"type":"MemberExpression","start":41177,"end":41184,"object":{"type":"ThisExpression","start":41177,"end":41181},"property":{"type":"Identifier","start":41182,"end":41184,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":41185,"end":41194,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":41214,"end":41379,"declarations":[{"type":"VariableDeclarator","start":41220,"end":41378,"id":{"type":"Identifier","start":41220,"end":41237,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41240,"end":41378,"properties":[{"type":"Property","start":41263,"end":41269,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41263,"end":41265,"name":"id"},"value":{"type":"Identifier","start":41267,"end":41269,"name":"id"},"kind":"init"},{"type":"Property","start":41292,"end":41295,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41292,"end":41295,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41292,"end":41295,"name":"ref"}},{"type":"Property","start":41318,"end":41322,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41318,"end":41322,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41318,"end":41322,"name":"path"}},{"type":"Property","start":41345,"end":41359,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41345,"end":41353,"name":"isExists"},"value":{"type":"Literal","start":41355,"end":41359,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41397,"end":41435,"argument":{"type":"ObjectExpression","start":41404,"end":41434,"properties":[{"type":"SpreadElement","start":41406,"end":41413,"argument":{"type":"Identifier","start":41409,"end":41413,"name":"data"}},{"type":"Property","start":41415,"end":41432,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41415,"end":41432,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41415,"end":41432,"name":"firestoreMetadata"}}]}}]}}]}}],"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":41474,"end":41500,"argument":{"type":"CallExpression","start":41481,"end":41499,"callee":{"type":"MemberExpression","start":41481,"end":41490,"object":{"type":"Identifier","start":41481,"end":41485,"name":"res$"},"property":{"type":"Identifier","start":41486,"end":41490,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41491,"end":41498,"callee":{"type":"Identifier","start":41491,"end":41495,"name":"take"},"arguments":[{"type":"Literal","start":41496,"end":41497,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":41589,"end":41792,"static":false,"computed":false,"key":{"type":"Identifier","start":41589,"end":41602,"name":"updateSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":41602,"end":41792,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41603,"end":41607,"name":"data"},{"type":"Identifier","start":41609,"end":41615,"name":"docRef"},{"type":"AssignmentPattern","start":41617,"end":41641,"left":{"type":"Identifier","start":41617,"end":41634,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":41637,"end":41641,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":41643,"end":41792,"body":[{"type":"IfStatement","start":41654,"end":41739,"test":{"type":"Identifier","start":41658,"end":41675,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":41677,"end":41739,"body":[{"type":"ExpressionStatement","start":41692,"end":41728,"expression":{"type":"AssignmentExpression","start":41692,"end":41727,"operator":"=","left":{"type":"Identifier","start":41692,"end":41696,"name":"data"},"right":{"type":"CallExpression","start":41699,"end":41727,"callee":{"type":"Identifier","start":41699,"end":41714,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":41715,"end":41719,"name":"data"},{"type":"Literal","start":41721,"end":41726,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":41749,"end":41785,"argument":{"type":"CallExpression","start":41756,"end":41784,"callee":{"type":"MemberExpression","start":41756,"end":41770,"object":{"type":"MemberExpression","start":41756,"end":41763,"object":{"type":"ThisExpression","start":41756,"end":41760},"property":{"type":"Identifier","start":41761,"end":41763,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":41764,"end":41770,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":41771,"end":41777,"name":"docRef"},{"type":"Identifier","start":41779,"end":41783,"name":"data"}],"optional":false}}]}}},{"type":"MethodDefinition","start":41869,"end":43474,"static":false,"computed":false,"key":{"type":"Identifier","start":41869,"end":41892,"name":"updateDeepToBatchHelper"},"kind":"method","value":{"type":"FunctionExpression","start":41892,"end":43474,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41893,"end":41897,"name":"data"},{"type":"Identifier","start":41899,"end":41905,"name":"docRef"},{"type":"AssignmentPattern","start":41907,"end":41932,"left":{"type":"Identifier","start":41907,"end":41927,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":41930,"end":41932,"elements":[]}},{"type":"AssignmentPattern","start":41934,"end":41958,"left":{"type":"Identifier","start":41934,"end":41951,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":41954,"end":41958,"value":true,"raw":"true"}},{"type":"Identifier","start":41960,"end":41965,"name":"batch"}],"body":{"type":"BlockStatement","start":41967,"end":43474,"body":[{"type":"IfStatement","start":41978,"end":42067,"test":{"type":"BinaryExpression","start":41982,"end":42001,"left":{"type":"Identifier","start":41982,"end":41987,"name":"batch"},"operator":"===","right":{"type":"Identifier","start":41992,"end":42001,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":42003,"end":42067,"body":[{"type":"ExpressionStatement","start":42018,"end":42056,"expression":{"type":"AssignmentExpression","start":42018,"end":42055,"operator":"=","left":{"type":"Identifier","start":42018,"end":42023,"name":"batch"},"right":{"type":"CallExpression","start":42026,"end":42055,"callee":{"type":"Identifier","start":42026,"end":42036,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":42037,"end":42054,"object":{"type":"MemberExpression","start":42037,"end":42044,"object":{"type":"ThisExpression","start":42037,"end":42041},"property":{"type":"Identifier","start":42042,"end":42044,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42045,"end":42054,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":42077,"end":42162,"test":{"type":"Identifier","start":42081,"end":42098,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42100,"end":42162,"body":[{"type":"ExpressionStatement","start":42115,"end":42151,"expression":{"type":"AssignmentExpression","start":42115,"end":42150,"operator":"=","left":{"type":"Identifier","start":42115,"end":42119,"name":"data"},"right":{"type":"CallExpression","start":42122,"end":42150,"callee":{"type":"Identifier","start":42122,"end":42137,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42138,"end":42142,"name":"data"},{"type":"Literal","start":42144,"end":42149,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":42172,"end":42260,"declarations":[{"type":"VariableDeclarator","start":42178,"end":42259,"id":{"type":"Identifier","start":42178,"end":42183,"name":"split"},"init":{"type":"CallExpression","start":42186,"end":42259,"callee":{"type":"MemberExpression","start":42186,"end":42231,"object":{"type":"ThisExpression","start":42186,"end":42190},"property":{"type":"Identifier","start":42191,"end":42231,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42232,"end":42236,"name":"data"},{"type":"Identifier","start":42238,"end":42258,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42270,"end":42306,"declarations":[{"type":"VariableDeclarator","start":42276,"end":42305,"id":{"type":"Identifier","start":42276,"end":42286,"name":"currentDoc"},"init":{"type":"MemberExpression","start":42289,"end":42305,"object":{"type":"Identifier","start":42289,"end":42294,"name":"split"},"property":{"type":"Identifier","start":42295,"end":42305,"name":"currentDoc"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42316,"end":42360,"declarations":[{"type":"VariableDeclarator","start":42322,"end":42359,"id":{"type":"Identifier","start":42322,"end":42336,"name":"subCollections"},"init":{"type":"MemberExpression","start":42339,"end":42359,"object":{"type":"Identifier","start":42339,"end":42344,"name":"split"},"property":{"type":"Identifier","start":42345,"end":42359,"name":"subCollections"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":42423,"end":42456,"expression":{"type":"CallExpression","start":42423,"end":42455,"callee":{"type":"MemberExpression","start":42423,"end":42435,"object":{"type":"Identifier","start":42423,"end":42428,"name":"batch"},"property":{"type":"Identifier","start":42429,"end":42435,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42436,"end":42442,"name":"docRef"},{"type":"Identifier","start":42444,"end":42454,"name":"currentDoc"}],"optional":false}},{"type":"ForOfStatement","start":42466,"end":43444,"await":false,"left":{"type":"VariableDeclaration","start":42471,"end":42514,"declarations":[{"type":"VariableDeclarator","start":42477,"end":42514,"id":{"type":"ArrayPattern","start":42477,"end":42514,"elements":[{"type":"Identifier","start":42478,"end":42494,"name":"subCollectionKey"},{"type":"Identifier","start":42496,"end":42513,"name":"subDocUpdateValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":42518,"end":42548,"callee":{"type":"MemberExpression","start":42518,"end":42532,"object":{"type":"Identifier","start":42518,"end":42524,"name":"Object"},"property":{"type":"Identifier","start":42525,"end":42532,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42533,"end":42547,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":42550,"end":43444,"body":[{"type":"VariableDeclaration","start":42565,"end":42593,"declarations":[{"type":"VariableDeclarator","start":42569,"end":42592,"id":{"type":"Identifier","start":42569,"end":42592,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":42647,"end":42660,"declarations":[{"type":"VariableDeclarator","start":42651,"end":42659,"id":{"type":"Identifier","start":42651,"end":42659,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":42674,"end":42956,"test":{"type":"Identifier","start":42678,"end":42698,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":42700,"end":42956,"body":[{"type":"ExpressionStatement","start":42719,"end":42833,"expression":{"type":"AssignmentExpression","start":42719,"end":42832,"operator":"=","left":{"type":"Identifier","start":42719,"end":42742,"name":"subSubCollectionWriters"},"right":{"type":"ChainExpression","start":42745,"end":42832,"expression":{"type":"MemberExpression","start":42745,"end":42832,"object":{"type":"CallExpression","start":42745,"end":42816,"callee":{"type":"MemberExpression","start":42745,"end":42770,"object":{"type":"Identifier","start":42745,"end":42765,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":42766,"end":42770,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":42771,"end":42815,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":42771,"end":42778,"name":"subColl"}],"body":{"type":"BinaryExpression","start":42782,"end":42815,"left":{"type":"MemberExpression","start":42782,"end":42794,"object":{"type":"Identifier","start":42782,"end":42789,"name":"subColl"},"property":{"type":"Identifier","start":42790,"end":42794,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":42799,"end":42815,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":42818,"end":42832,"name":"subCollections"},"computed":false,"optional":true}}}},{"type":"ExpressionStatement","start":42851,"end":42941,"expression":{"type":"AssignmentExpression","start":42851,"end":42940,"operator":"=","left":{"type":"Identifier","start":42851,"end":42859,"name":"subDocId"},"right":{"type":"ChainExpression","start":42862,"end":42940,"expression":{"type":"MemberExpression","start":42862,"end":42940,"object":{"type":"CallExpression","start":42862,"end":42933,"callee":{"type":"MemberExpression","start":42862,"end":42887,"object":{"type":"Identifier","start":42862,"end":42882,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":42883,"end":42887,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":42888,"end":42932,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":42888,"end":42895,"name":"subColl"}],"body":{"type":"BinaryExpression","start":42899,"end":42932,"left":{"type":"MemberExpression","start":42899,"end":42911,"object":{"type":"Identifier","start":42899,"end":42906,"name":"subColl"},"property":{"type":"Identifier","start":42907,"end":42911,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":42916,"end":42932,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":42935,"end":42940,"name":"docId"},"computed":false,"optional":true}}}}]},"alternate":null},{"type":"ExpressionStatement","start":42970,"end":43035,"expression":{"type":"AssignmentExpression","start":42970,"end":43034,"operator":"=","left":{"type":"Identifier","start":42970,"end":42978,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":42981,"end":43034,"test":{"type":"BinaryExpression","start":42981,"end":43003,"left":{"type":"Identifier","start":42981,"end":42989,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":42994,"end":43003,"name":"undefined"}},"consequent":{"type":"Identifier","start":43006,"end":43014,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":43017,"end":43034,"object":{"type":"ThisExpression","start":43017,"end":43021},"property":{"type":"Identifier","start":43022,"end":43034,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":43165,"end":43230,"declarations":[{"type":"VariableDeclarator","start":43171,"end":43229,"id":{"type":"Identifier","start":43171,"end":43184,"name":"subCollection"},"init":{"type":"CallExpression","start":43187,"end":43229,"callee":{"type":"Identifier","start":43187,"end":43203,"name":"getSubCollection"},"arguments":[{"type":"Identifier","start":43204,"end":43210,"name":"docRef"},{"type":"Identifier","start":43212,"end":43228,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43244,"end":43302,"declarations":[{"type":"VariableDeclarator","start":43250,"end":43301,"id":{"type":"Identifier","start":43250,"end":43258,"name":"subDocFs"},"init":{"type":"CallExpression","start":43261,"end":43301,"callee":{"type":"Identifier","start":43261,"end":43276,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":43277,"end":43290,"name":"subCollection"},{"type":"Identifier","start":43292,"end":43300,"name":"subDocId"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":43316,"end":43433,"expression":{"type":"AssignmentExpression","start":43316,"end":43432,"operator":"=","left":{"type":"Identifier","start":43316,"end":43321,"name":"batch"},"right":{"type":"CallExpression","start":43324,"end":43432,"callee":{"type":"MemberExpression","start":43324,"end":43352,"object":{"type":"ThisExpression","start":43324,"end":43328},"property":{"type":"Identifier","start":43329,"end":43352,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43353,"end":43370,"name":"subDocUpdateValue"},{"type":"Identifier","start":43372,"end":43380,"name":"subDocFs"},{"type":"Identifier","start":43382,"end":43405,"name":"subSubCollectionWriters"},{"type":"Identifier","start":43407,"end":43424,"name":"isAddModifiedDate"},{"type":"Identifier","start":43426,"end":43431,"name":"batch"}],"optional":false}}}]}},{"type":"ReturnStatement","start":43454,"end":43467,"argument":{"type":"Identifier","start":43461,"end":43466,"name":"batch"}}]}}},{"type":"MethodDefinition","start":43945,"end":46132,"static":false,"computed":false,"key":{"type":"Identifier","start":43945,"end":43982,"name":"getBatchFromTransferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":43982,"end":46132,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":43983,"end":43996,"name":"previousArray"},{"type":"Identifier","start":43998,"end":44010,"name":"currentArray"},{"type":"Identifier","start":44012,"end":44025,"name":"previousIndex"},{"type":"Identifier","start":44027,"end":44039,"name":"currentIndex"},{"type":"Identifier","start":44041,"end":44057,"name":"currentArrayName"},{"type":"Identifier","start":44059,"end":44090,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":44092,"end":44130,"left":{"type":"Identifier","start":44092,"end":44123,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":44126,"end":44130,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":44132,"end":44147,"left":{"type":"Identifier","start":44132,"end":44139,"name":"useCopy"},"right":{"type":"Literal","start":44142,"end":44147,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":44149,"end":46132,"body":[{"type":"VariableDeclaration","start":44160,"end":44182,"declarations":[{"type":"VariableDeclarator","start":44164,"end":44181,"id":{"type":"Identifier","start":44164,"end":44181,"name":"usedPreviousArray"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":44192,"end":44213,"declarations":[{"type":"VariableDeclarator","start":44196,"end":44212,"id":{"type":"Identifier","start":44196,"end":44212,"name":"usedCurrentArray"},"init":null}],"kind":"let"},{"type":"IfStatement","start":44223,"end":44501,"test":{"type":"Identifier","start":44227,"end":44234,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":44236,"end":44380,"body":[{"type":"ExpressionStatement","start":44251,"end":44304,"expression":{"type":"AssignmentExpression","start":44251,"end":44303,"operator":"=","left":{"type":"Identifier","start":44251,"end":44268,"name":"usedPreviousArray"},"right":{"type":"CallExpression","start":44271,"end":44303,"callee":{"type":"MemberExpression","start":44271,"end":44284,"object":{"type":"Identifier","start":44271,"end":44277,"name":"Object"},"property":{"type":"Identifier","start":44278,"end":44284,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44285,"end":44287,"elements":[]},{"type":"Identifier","start":44289,"end":44302,"name":"previousArray"}],"optional":false}}},{"type":"ExpressionStatement","start":44318,"end":44369,"expression":{"type":"AssignmentExpression","start":44318,"end":44368,"operator":"=","left":{"type":"Identifier","start":44318,"end":44334,"name":"usedCurrentArray"},"right":{"type":"CallExpression","start":44337,"end":44368,"callee":{"type":"MemberExpression","start":44337,"end":44350,"object":{"type":"Identifier","start":44337,"end":44343,"name":"Object"},"property":{"type":"Identifier","start":44344,"end":44350,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44351,"end":44353,"elements":[]},{"type":"Identifier","start":44355,"end":44367,"name":"currentArray"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":44395,"end":44501,"body":[{"type":"ExpressionStatement","start":44410,"end":44444,"expression":{"type":"AssignmentExpression","start":44410,"end":44443,"operator":"=","left":{"type":"Identifier","start":44410,"end":44427,"name":"usedPreviousArray"},"right":{"type":"Identifier","start":44430,"end":44443,"name":"previousArray"}}},{"type":"ExpressionStatement","start":44458,"end":44490,"expression":{"type":"AssignmentExpression","start":44458,"end":44489,"operator":"=","left":{"type":"Identifier","start":44458,"end":44474,"name":"usedCurrentArray"},"right":{"type":"Identifier","start":44477,"end":44489,"name":"currentArray"}}}]}},{"type":"ExpressionStatement","start":44511,"end":44595,"expression":{"type":"CallExpression","start":44511,"end":44594,"callee":{"type":"Identifier","start":44511,"end":44528,"name":"transferArrayItem"},"arguments":[{"type":"Identifier","start":44529,"end":44546,"name":"usedPreviousArray"},{"type":"Identifier","start":44548,"end":44564,"name":"usedCurrentArray"},{"type":"Identifier","start":44566,"end":44579,"name":"previousIndex"},{"type":"Identifier","start":44581,"end":44593,"name":"currentIndex"}],"optional":false}},{"type":"VariableDeclaration","start":44605,"end":44649,"declarations":[{"type":"VariableDeclarator","start":44611,"end":44648,"id":{"type":"Identifier","start":44611,"end":44616,"name":"batch"},"init":{"type":"CallExpression","start":44619,"end":44648,"callee":{"type":"Identifier","start":44619,"end":44629,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":44630,"end":44647,"object":{"type":"MemberExpression","start":44630,"end":44637,"object":{"type":"ThisExpression","start":44630,"end":44634},"property":{"type":"Identifier","start":44635,"end":44637,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":44638,"end":44647,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":44659,"end":45367,"test":{"type":"BinaryExpression","start":44663,"end":44708,"left":{"type":"Identifier","start":44663,"end":44694,"name":"additionalDataUpdateOnMovedItem"},"operator":"!==","right":{"type":"Identifier","start":44699,"end":44708,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":44710,"end":45367,"body":[{"type":"VariableDeclaration","start":44725,"end":44774,"declarations":[{"type":"VariableDeclarator","start":44731,"end":44773,"id":{"type":"Identifier","start":44731,"end":44740,"name":"movedItem"},"init":{"type":"MemberExpression","start":44743,"end":44773,"object":{"type":"Identifier","start":44743,"end":44759,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":44760,"end":44772,"name":"currentIndex"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":44788,"end":44841,"declarations":[{"type":"VariableDeclarator","start":44794,"end":44840,"id":{"type":"Identifier","start":44794,"end":44806,"name":"movedItemRef"},"init":{"type":"MemberExpression","start":44809,"end":44840,"object":{"type":"MemberExpression","start":44809,"end":44836,"object":{"type":"Identifier","start":44809,"end":44818,"name":"movedItem"},"property":{"type":"Identifier","start":44819,"end":44836,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":44837,"end":44840,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":44855,"end":44936,"declarations":[{"type":"VariableDeclarator","start":44861,"end":44935,"id":{"type":"Identifier","start":44861,"end":44865,"name":"data"},"init":{"type":"ObjectExpression","start":44868,"end":44935,"properties":[{"type":"SpreadElement","start":44870,"end":44904,"argument":{"type":"Identifier","start":44873,"end":44904,"name":"additionalDataUpdateOnMovedItem"}},{"type":"Property","start":44906,"end":44933,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":44906,"end":44915,"name":"groupName"},"value":{"type":"Identifier","start":44917,"end":44933,"name":"currentArrayName"},"kind":"init"}]}}],"kind":"const"},{"type":"IfStatement","start":44950,"end":45035,"test":{"type":"UnaryExpression","start":44954,"end":44962,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":44955,"end":44962,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":44964,"end":45035,"body":[{"type":"ExpressionStatement","start":44983,"end":45020,"expression":{"type":"CallExpression","start":44983,"end":45019,"callee":{"type":"Identifier","start":44983,"end":44996,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":44997,"end":45006,"name":"movedItem"},{"type":"Identifier","start":45008,"end":45012,"name":"data"},{"type":"Literal","start":45014,"end":45018,"value":true,"raw":"true"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":45049,"end":45309,"test":{"type":"Identifier","start":45053,"end":45084,"name":"isUpdateModifiedDateOnMovedItem"},"consequent":{"type":"BlockStatement","start":45086,"end":45309,"body":[{"type":"VariableDeclaration","start":45105,"end":45129,"declarations":[{"type":"VariableDeclarator","start":45111,"end":45128,"id":{"type":"Identifier","start":45111,"end":45115,"name":"date"},"init":{"type":"NewExpression","start":45118,"end":45128,"callee":{"type":"Identifier","start":45122,"end":45126,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":45147,"end":45181,"expression":{"type":"CallExpression","start":45147,"end":45180,"callee":{"type":"Identifier","start":45147,"end":45162,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45163,"end":45167,"name":"data"},{"type":"Literal","start":45169,"end":45173,"value":true,"raw":"true"},{"type":"Identifier","start":45175,"end":45179,"name":"date"}],"optional":false}},{"type":"IfStatement","start":45199,"end":45294,"test":{"type":"UnaryExpression","start":45203,"end":45211,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45204,"end":45211,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45213,"end":45294,"body":[{"type":"ExpressionStatement","start":45236,"end":45275,"expression":{"type":"CallExpression","start":45236,"end":45274,"callee":{"type":"Identifier","start":45236,"end":45251,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45252,"end":45261,"name":"movedItem"},{"type":"Literal","start":45263,"end":45267,"value":true,"raw":"true"},{"type":"Identifier","start":45269,"end":45273,"name":"date"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":45323,"end":45356,"expression":{"type":"CallExpression","start":45323,"end":45355,"callee":{"type":"MemberExpression","start":45323,"end":45335,"object":{"type":"Identifier","start":45323,"end":45328,"name":"batch"},"property":{"type":"Identifier","start":45329,"end":45335,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45336,"end":45348,"name":"movedItemRef"},{"type":"Identifier","start":45350,"end":45354,"name":"data"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":45377,"end":45448,"declarations":[{"type":"VariableDeclarator","start":45383,"end":45447,"id":{"type":"Identifier","start":45383,"end":45408,"name":"currentArraySliceToUpdate"},"init":{"type":"CallExpression","start":45411,"end":45447,"callee":{"type":"MemberExpression","start":45411,"end":45433,"object":{"type":"Identifier","start":45411,"end":45427,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45428,"end":45433,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45434,"end":45446,"name":"currentIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45458,"end":45479,"declarations":[{"type":"VariableDeclarator","start":45462,"end":45478,"id":{"type":"Identifier","start":45462,"end":45463,"name":"i"},"init":{"type":"Identifier","start":45466,"end":45478,"name":"currentIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":45489,"end":45738,"await":false,"left":{"type":"VariableDeclaration","start":45494,"end":45504,"declarations":[{"type":"VariableDeclarator","start":45500,"end":45504,"id":{"type":"Identifier","start":45500,"end":45504,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":45508,"end":45533,"name":"currentArraySliceToUpdate"},"body":{"type":"BlockStatement","start":45535,"end":45738,"body":[{"type":"ExpressionStatement","start":45577,"end":45632,"expression":{"type":"CallExpression","start":45577,"end":45631,"callee":{"type":"MemberExpression","start":45577,"end":45589,"object":{"type":"Identifier","start":45577,"end":45582,"name":"batch"},"property":{"type":"Identifier","start":45583,"end":45589,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":45590,"end":45616,"object":{"type":"MemberExpression","start":45590,"end":45612,"object":{"type":"Identifier","start":45590,"end":45594,"name":"item"},"property":{"type":"Identifier","start":45595,"end":45612,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45613,"end":45616,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":45618,"end":45630,"properties":[{"type":"Property","start":45620,"end":45628,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45620,"end":45625,"name":"index"},"value":{"type":"Identifier","start":45627,"end":45628,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":45646,"end":45709,"test":{"type":"UnaryExpression","start":45650,"end":45658,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45651,"end":45658,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45660,"end":45709,"body":[{"type":"ExpressionStatement","start":45679,"end":45694,"expression":{"type":"AssignmentExpression","start":45679,"end":45693,"operator":"=","left":{"type":"MemberExpression","start":45679,"end":45689,"object":{"type":"Identifier","start":45679,"end":45683,"name":"item"},"property":{"type":"Identifier","start":45684,"end":45689,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":45692,"end":45693,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":45723,"end":45727,"expression":{"type":"UpdateExpression","start":45723,"end":45726,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":45723,"end":45724,"name":"i"}}}]}},{"type":"VariableDeclaration","start":45748,"end":45818,"declarations":[{"type":"VariableDeclarator","start":45754,"end":45817,"id":{"type":"Identifier","start":45754,"end":45776,"name":"prevArraySliceToUpdate"},"init":{"type":"CallExpression","start":45779,"end":45817,"callee":{"type":"MemberExpression","start":45779,"end":45802,"object":{"type":"Identifier","start":45779,"end":45796,"name":"usedPreviousArray"},"property":{"type":"Identifier","start":45797,"end":45802,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45803,"end":45816,"name":"previousIndex"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":45828,"end":45846,"expression":{"type":"AssignmentExpression","start":45828,"end":45845,"operator":"=","left":{"type":"Identifier","start":45828,"end":45829,"name":"i"},"right":{"type":"Identifier","start":45832,"end":45845,"name":"previousIndex"}}},{"type":"ForOfStatement","start":45856,"end":46102,"await":false,"left":{"type":"VariableDeclaration","start":45861,"end":45871,"declarations":[{"type":"VariableDeclarator","start":45867,"end":45871,"id":{"type":"Identifier","start":45867,"end":45871,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":45875,"end":45897,"name":"prevArraySliceToUpdate"},"body":{"type":"BlockStatement","start":45899,"end":46102,"body":[{"type":"ExpressionStatement","start":45941,"end":45996,"expression":{"type":"CallExpression","start":45941,"end":45995,"callee":{"type":"MemberExpression","start":45941,"end":45953,"object":{"type":"Identifier","start":45941,"end":45946,"name":"batch"},"property":{"type":"Identifier","start":45947,"end":45953,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":45954,"end":45980,"object":{"type":"MemberExpression","start":45954,"end":45976,"object":{"type":"Identifier","start":45954,"end":45958,"name":"item"},"property":{"type":"Identifier","start":45959,"end":45976,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45977,"end":45980,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":45982,"end":45994,"properties":[{"type":"Property","start":45984,"end":45992,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45984,"end":45989,"name":"index"},"value":{"type":"Identifier","start":45991,"end":45992,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46010,"end":46073,"test":{"type":"UnaryExpression","start":46014,"end":46022,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46015,"end":46022,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46024,"end":46073,"body":[{"type":"ExpressionStatement","start":46043,"end":46058,"expression":{"type":"AssignmentExpression","start":46043,"end":46057,"operator":"=","left":{"type":"MemberExpression","start":46043,"end":46053,"object":{"type":"Identifier","start":46043,"end":46047,"name":"item"},"property":{"type":"Identifier","start":46048,"end":46053,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46056,"end":46057,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46087,"end":46091,"expression":{"type":"UpdateExpression","start":46087,"end":46090,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46087,"end":46088,"name":"i"}}}]}},{"type":"ReturnStatement","start":46112,"end":46125,"argument":{"type":"Identifier","start":46119,"end":46124,"name":"batch"}}]}}},{"type":"MethodDefinition","start":46265,"end":46413,"static":false,"computed":false,"key":{"type":"Identifier","start":46265,"end":46286,"name":"deleteMultipleSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":46286,"end":46413,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46287,"end":46294,"name":"docRefs"}],"body":{"type":"BlockStatement","start":46296,"end":46413,"body":[{"type":"VariableDeclaration","start":46307,"end":46364,"declarations":[{"type":"VariableDeclarator","start":46313,"end":46363,"id":{"type":"Identifier","start":46313,"end":46318,"name":"batch"},"init":{"type":"CallExpression","start":46321,"end":46363,"callee":{"type":"MemberExpression","start":46321,"end":46354,"object":{"type":"ThisExpression","start":46321,"end":46325},"property":{"type":"Identifier","start":46326,"end":46354,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46355,"end":46362,"name":"docRefs"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":46374,"end":46406,"argument":{"type":"CallExpression","start":46381,"end":46405,"callee":{"type":"MemberExpression","start":46381,"end":46398,"object":{"type":"ThisExpression","start":46381,"end":46385},"property":{"type":"Identifier","start":46386,"end":46398,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46399,"end":46404,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":46419,"end":46614,"static":false,"computed":false,"key":{"type":"Identifier","start":46419,"end":46447,"name":"getDeleteMultipleSimpleBatch"},"kind":"method","value":{"type":"FunctionExpression","start":46447,"end":46614,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46448,"end":46455,"name":"docRefs"},{"type":"AssignmentPattern","start":46457,"end":46494,"left":{"type":"Identifier","start":46457,"end":46462,"name":"batch"},"right":{"type":"CallExpression","start":46465,"end":46494,"callee":{"type":"Identifier","start":46465,"end":46475,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":46476,"end":46493,"object":{"type":"MemberExpression","start":46476,"end":46483,"object":{"type":"ThisExpression","start":46476,"end":46480},"property":{"type":"Identifier","start":46481,"end":46483,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46484,"end":46493,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":46496,"end":46614,"body":[{"type":"ExpressionStatement","start":46507,"end":46584,"expression":{"type":"CallExpression","start":46507,"end":46583,"callee":{"type":"MemberExpression","start":46507,"end":46522,"object":{"type":"Identifier","start":46507,"end":46514,"name":"docRefs"},"property":{"type":"Identifier","start":46515,"end":46522,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":46523,"end":46582,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46524,"end":46530,"name":"docRef"}],"body":{"type":"BlockStatement","start":46535,"end":46582,"body":[{"type":"ExpressionStatement","start":46550,"end":46571,"expression":{"type":"CallExpression","start":46550,"end":46570,"callee":{"type":"MemberExpression","start":46550,"end":46562,"object":{"type":"Identifier","start":46550,"end":46555,"name":"batch"},"property":{"type":"Identifier","start":46556,"end":46562,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46563,"end":46569,"name":"docRef"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":46594,"end":46607,"argument":{"type":"Identifier","start":46601,"end":46606,"name":"batch"}}]}}},{"type":"MethodDefinition","start":46901,"end":48580,"static":false,"computed":false,"key":{"type":"Identifier","start":46901,"end":46932,"name":"removeDataExtrasRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":46932,"end":48580,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46933,"end":46939,"name":"dbItem"},{"type":"AssignmentPattern","start":46941,"end":46966,"left":{"type":"Identifier","start":46941,"end":46961,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":46964,"end":46966,"elements":[]}},{"type":"AssignmentPattern","start":46968,"end":46997,"left":{"type":"Identifier","start":46968,"end":46992,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":46995,"end":46997,"elements":[]}}],"body":{"type":"BlockStatement","start":46999,"end":48580,"body":[{"type":"VariableDeclaration","start":47107,"end":47189,"declarations":[{"type":"VariableDeclarator","start":47113,"end":47188,"id":{"type":"Identifier","start":47113,"end":47131,"name":"extraPropertyNames"},"init":{"type":"CallExpression","start":47134,"end":47188,"callee":{"type":"MemberExpression","start":47134,"end":47162,"object":{"type":"ArrayExpression","start":47134,"end":47155,"elements":[{"type":"Literal","start":47135,"end":47154,"value":"firestoreMetadata","raw":"'firestoreMetadata'"}]},"property":{"type":"Identifier","start":47156,"end":47162,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47163,"end":47187,"name":"additionalFieldsToRemove"}],"optional":false}}],"kind":"const"},{"type":"ForOfStatement","start":47235,"end":47346,"await":false,"left":{"type":"VariableDeclaration","start":47240,"end":47263,"declarations":[{"type":"VariableDeclarator","start":47246,"end":47263,"id":{"type":"Identifier","start":47246,"end":47263,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":47267,"end":47285,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":47287,"end":47346,"body":[{"type":"ExpressionStatement","start":47302,"end":47335,"expression":{"type":"UnaryExpression","start":47302,"end":47334,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":47309,"end":47334,"object":{"type":"Identifier","start":47309,"end":47315,"name":"dbItem"},"property":{"type":"Identifier","start":47316,"end":47333,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":47356,"end":48549,"expression":{"type":"CallExpression","start":47356,"end":48548,"callee":{"type":"MemberExpression","start":47356,"end":47384,"object":{"type":"Identifier","start":47356,"end":47376,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":47377,"end":47384,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47385,"end":48547,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47385,"end":47388,"name":"col"}],"body":{"type":"BlockStatement","start":47392,"end":48547,"body":[{"type":"IfStatement","start":47407,"end":48536,"test":{"type":"CallExpression","start":47411,"end":47442,"callee":{"type":"MemberExpression","start":47411,"end":47424,"object":{"type":"Identifier","start":47411,"end":47416,"name":"Array"},"property":{"type":"Identifier","start":47417,"end":47424,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":47425,"end":47441,"object":{"type":"Identifier","start":47425,"end":47431,"name":"dbItem"},"property":{"type":"MemberExpression","start":47432,"end":47440,"object":{"type":"Identifier","start":47432,"end":47435,"name":"col"},"property":{"type":"Identifier","start":47436,"end":47440,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":47444,"end":48072,"body":[{"type":"VariableDeclaration","start":47517,"end":47547,"declarations":[{"type":"VariableDeclarator","start":47523,"end":47546,"id":{"type":"Identifier","start":47523,"end":47527,"name":"docs"},"init":{"type":"MemberExpression","start":47530,"end":47546,"object":{"type":"Identifier","start":47530,"end":47536,"name":"dbItem"},"property":{"type":"MemberExpression","start":47537,"end":47545,"object":{"type":"Identifier","start":47537,"end":47540,"name":"col"},"property":{"type":"Identifier","start":47541,"end":47545,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":47565,"end":48057,"expression":{"type":"CallExpression","start":47565,"end":48056,"callee":{"type":"MemberExpression","start":47565,"end":47577,"object":{"type":"Identifier","start":47565,"end":47569,"name":"docs"},"property":{"type":"Identifier","start":47570,"end":47577,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47578,"end":48055,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47579,"end":47580,"name":"d"},{"type":"Identifier","start":47582,"end":47583,"name":"i"}],"body":{"type":"BlockStatement","start":47588,"end":48055,"body":[{"type":"IfStatement","start":47611,"end":48036,"test":{"type":"MemberExpression","start":47615,"end":47633,"object":{"type":"Identifier","start":47615,"end":47618,"name":"col"},"property":{"type":"Identifier","start":47619,"end":47633,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":47635,"end":47771,"body":[{"type":"ExpressionStatement","start":47662,"end":47748,"expression":{"type":"CallExpression","start":47662,"end":47747,"callee":{"type":"MemberExpression","start":47662,"end":47698,"object":{"type":"ThisExpression","start":47662,"end":47666},"property":{"type":"Identifier","start":47667,"end":47698,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47699,"end":47700,"name":"d"},{"type":"MemberExpression","start":47702,"end":47720,"object":{"type":"Identifier","start":47702,"end":47705,"name":"col"},"property":{"type":"Identifier","start":47706,"end":47720,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":47722,"end":47746,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":47798,"end":48036,"body":[{"type":"ForOfStatement","start":47857,"end":48013,"await":false,"left":{"type":"VariableDeclaration","start":47862,"end":47885,"declarations":[{"type":"VariableDeclarator","start":47868,"end":47885,"id":{"type":"Identifier","start":47868,"end":47885,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":47889,"end":47907,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":47909,"end":48013,"body":[{"type":"ExpressionStatement","start":47940,"end":47986,"expression":{"type":"UnaryExpression","start":47940,"end":47985,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":47947,"end":47985,"object":{"type":"MemberExpression","start":47947,"end":47966,"object":{"type":"MemberExpression","start":47947,"end":47963,"object":{"type":"Identifier","start":47947,"end":47953,"name":"dbItem"},"property":{"type":"MemberExpression","start":47954,"end":47962,"object":{"type":"Identifier","start":47954,"end":47957,"name":"col"},"property":{"type":"Identifier","start":47958,"end":47962,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":47964,"end":47965,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":47967,"end":47984,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48091,"end":48536,"body":[{"type":"IfStatement","start":48144,"end":48521,"test":{"type":"MemberExpression","start":48148,"end":48166,"object":{"type":"Identifier","start":48148,"end":48151,"name":"col"},"property":{"type":"Identifier","start":48152,"end":48166,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48168,"end":48311,"body":[{"type":"ExpressionStatement","start":48191,"end":48292,"expression":{"type":"CallExpression","start":48191,"end":48291,"callee":{"type":"MemberExpression","start":48191,"end":48227,"object":{"type":"ThisExpression","start":48191,"end":48195},"property":{"type":"Identifier","start":48196,"end":48227,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":48228,"end":48244,"object":{"type":"Identifier","start":48228,"end":48234,"name":"dbItem"},"property":{"type":"MemberExpression","start":48235,"end":48243,"object":{"type":"Identifier","start":48235,"end":48238,"name":"col"},"property":{"type":"Identifier","start":48239,"end":48243,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},{"type":"MemberExpression","start":48246,"end":48264,"object":{"type":"Identifier","start":48246,"end":48249,"name":"col"},"property":{"type":"Identifier","start":48250,"end":48264,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48266,"end":48290,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48334,"end":48521,"body":[{"type":"ForOfStatement","start":48357,"end":48502,"await":false,"left":{"type":"VariableDeclaration","start":48362,"end":48385,"declarations":[{"type":"VariableDeclarator","start":48368,"end":48385,"id":{"type":"Identifier","start":48368,"end":48385,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48389,"end":48407,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48409,"end":48502,"body":[{"type":"ExpressionStatement","start":48436,"end":48479,"expression":{"type":"UnaryExpression","start":48436,"end":48478,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48443,"end":48478,"object":{"type":"MemberExpression","start":48443,"end":48459,"object":{"type":"Identifier","start":48443,"end":48449,"name":"dbItem"},"property":{"type":"MemberExpression","start":48450,"end":48458,"object":{"type":"Identifier","start":48450,"end":48453,"name":"col"},"property":{"type":"Identifier","start":48454,"end":48458,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48460,"end":48477,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":48559,"end":48573,"argument":{"type":"Identifier","start":48566,"end":48572,"name":"dbItem"}}]}}},{"type":"MethodDefinition","start":48906,"end":49262,"static":false,"computed":false,"key":{"type":"Identifier","start":48906,"end":48932,"name":"getDocumentReferencesDeep$"},"kind":"method","value":{"type":"FunctionExpression","start":48932,"end":49262,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48933,"end":48936,"name":"ref"},{"type":"AssignmentPattern","start":48938,"end":48963,"left":{"type":"Identifier","start":48938,"end":48958,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":48961,"end":48963,"elements":[]}}],"body":{"type":"BlockStatement","start":48965,"end":49262,"body":[{"type":"IfStatement","start":48976,"end":49255,"test":{"type":"BinaryExpression","start":48980,"end":49012,"left":{"type":"Identifier","start":48980,"end":48983,"name":"ref"},"operator":"instanceof","right":{"type":"Identifier","start":48995,"end":49012,"name":"DocumentReference"}},"consequent":{"type":"BlockStatement","start":49014,"end":49112,"body":[{"type":"ReturnStatement","start":49029,"end":49101,"argument":{"type":"CallExpression","start":49036,"end":49100,"callee":{"type":"MemberExpression","start":49036,"end":49073,"object":{"type":"ThisExpression","start":49036,"end":49040},"property":{"type":"Identifier","start":49041,"end":49073,"name":"getDocumentReferencesFromDocRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49074,"end":49077,"name":"ref"},{"type":"Identifier","start":49079,"end":49099,"name":"subCollectionQueries"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49127,"end":49255,"body":[{"type":"ReturnStatement","start":49165,"end":49244,"argument":{"type":"CallExpression","start":49172,"end":49243,"callee":{"type":"MemberExpression","start":49172,"end":49216,"object":{"type":"ThisExpression","start":49172,"end":49176},"property":{"type":"Identifier","start":49177,"end":49216,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49217,"end":49220,"name":"ref"},{"type":"Identifier","start":49222,"end":49242,"name":"subCollectionQueries"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":49268,"end":49703,"static":false,"computed":false,"key":{"type":"Identifier","start":49268,"end":49300,"name":"getDocumentReferencesFromDocRef$"},"kind":"method","value":{"type":"FunctionExpression","start":49300,"end":49703,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49301,"end":49307,"name":"docRef"},{"type":"AssignmentPattern","start":49309,"end":49334,"left":{"type":"Identifier","start":49309,"end":49329,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49332,"end":49334,"elements":[]}}],"body":{"type":"BlockStatement","start":49336,"end":49703,"body":[{"type":"ReturnStatement","start":49347,"end":49696,"argument":{"type":"CallExpression","start":49354,"end":49695,"callee":{"type":"MemberExpression","start":49354,"end":49407,"object":{"type":"CallExpression","start":49354,"end":49402,"callee":{"type":"MemberExpression","start":49354,"end":49372,"object":{"type":"ThisExpression","start":49354,"end":49358},"property":{"type":"Identifier","start":49359,"end":49372,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49373,"end":49379,"name":"docRef"},{"type":"Identifier","start":49381,"end":49401,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":49403,"end":49407,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":49408,"end":49415,"callee":{"type":"Identifier","start":49408,"end":49412,"name":"take"},"arguments":[{"type":"Literal","start":49413,"end":49414,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":49417,"end":49498,"callee":{"type":"Identifier","start":49417,"end":49420,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":49421,"end":49497,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":49421,"end":49425,"name":"item"}],"body":{"type":"CallExpression","start":49429,"end":49497,"callee":{"type":"MemberExpression","start":49429,"end":49469,"object":{"type":"ThisExpression","start":49429,"end":49433},"property":{"type":"Identifier","start":49434,"end":49469,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49470,"end":49474,"name":"item"},{"type":"Identifier","start":49476,"end":49496,"name":"subCollectionQueries"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":49562,"end":49694,"callee":{"type":"Identifier","start":49562,"end":49565,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":49566,"end":49693,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49567,"end":49575,"name":"pathList"}],"body":{"type":"BlockStatement","start":49580,"end":49693,"body":[{"type":"ReturnStatement","start":49595,"end":49682,"argument":{"type":"CallExpression","start":49602,"end":49681,"callee":{"type":"MemberExpression","start":49602,"end":49632,"object":{"type":"Identifier","start":49602,"end":49610,"name":"pathList"},"property":{"type":"Identifier","start":49629,"end":49632,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":49633,"end":49680,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":49633,"end":49637,"name":"path"}],"body":{"type":"CallExpression","start":49641,"end":49680,"callee":{"type":"Identifier","start":49641,"end":49655,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":49656,"end":49660,"name":"path"},{"type":"MemberExpression","start":49662,"end":49679,"object":{"type":"MemberExpression","start":49662,"end":49669,"object":{"type":"ThisExpression","start":49662,"end":49666},"property":{"type":"Identifier","start":49667,"end":49669,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":49670,"end":49679,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":49709,"end":50525,"static":false,"computed":false,"key":{"type":"Identifier","start":49709,"end":49748,"name":"getDocumentReferencesFromCollectionRef$"},"kind":"method","value":{"type":"FunctionExpression","start":49748,"end":50525,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49749,"end":49762,"name":"collectionRef"},{"type":"AssignmentPattern","start":49764,"end":49789,"left":{"type":"Identifier","start":49764,"end":49784,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49787,"end":49789,"elements":[]}}],"body":{"type":"BlockStatement","start":49791,"end":50525,"body":[{"type":"ReturnStatement","start":49802,"end":50518,"argument":{"type":"CallExpression","start":49809,"end":50517,"callee":{"type":"MemberExpression","start":49809,"end":49860,"object":{"type":"CallExpression","start":49809,"end":49855,"callee":{"type":"MemberExpression","start":49809,"end":49840,"object":{"type":"ThisExpression","start":49809,"end":49813},"property":{"type":"Identifier","start":49814,"end":49840,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49841,"end":49854,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":49856,"end":49860,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":49894,"end":49901,"callee":{"type":"Identifier","start":49894,"end":49898,"name":"take"},"arguments":[{"type":"Literal","start":49899,"end":49900,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":49903,"end":50133,"callee":{"type":"Identifier","start":49903,"end":49911,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":49912,"end":50132,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49913,"end":49918,"name":"items"}],"body":{"type":"BlockStatement","start":49923,"end":50132,"body":[{"type":"VariableDeclaration","start":49938,"end":49955,"declarations":[{"type":"VariableDeclarator","start":49942,"end":49954,"id":{"type":"Identifier","start":49942,"end":49954,"name":"docListeners"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":49969,"end":50072,"expression":{"type":"AssignmentExpression","start":49969,"end":50071,"operator":"=","left":{"type":"Identifier","start":49969,"end":49981,"name":"docListeners"},"right":{"type":"CallExpression","start":49984,"end":50071,"callee":{"type":"MemberExpression","start":49984,"end":49993,"object":{"type":"Identifier","start":49984,"end":49989,"name":"items"},"property":{"type":"Identifier","start":49990,"end":49993,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":49994,"end":50070,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":49994,"end":49998,"name":"item"}],"body":{"type":"CallExpression","start":50002,"end":50070,"callee":{"type":"MemberExpression","start":50002,"end":50020,"object":{"type":"ThisExpression","start":50002,"end":50006},"property":{"type":"Identifier","start":50007,"end":50020,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":50021,"end":50047,"object":{"type":"MemberExpression","start":50021,"end":50043,"object":{"type":"Identifier","start":50021,"end":50025,"name":"item"},"property":{"type":"Identifier","start":50026,"end":50043,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50044,"end":50047,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":50049,"end":50069,"name":"subCollectionQueries"}],"optional":false}}],"optional":false}}},{"type":"ReturnStatement","start":50086,"end":50121,"argument":{"type":"CallExpression","start":50093,"end":50120,"callee":{"type":"Identifier","start":50093,"end":50106,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":50107,"end":50119,"name":"docListeners"}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":50135,"end":50382,"callee":{"type":"Identifier","start":50135,"end":50138,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50139,"end":50381,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50140,"end":50145,"name":"items"}],"body":{"type":"BlockStatement","start":50150,"end":50381,"body":[{"type":"VariableDeclaration","start":50165,"end":50180,"declarations":[{"type":"VariableDeclarator","start":50169,"end":50179,"id":{"type":"Identifier","start":50169,"end":50174,"name":"paths"},"init":{"type":"ArrayExpression","start":50177,"end":50179,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":50194,"end":50343,"expression":{"type":"CallExpression","start":50194,"end":50342,"callee":{"type":"MemberExpression","start":50194,"end":50207,"object":{"type":"Identifier","start":50194,"end":50199,"name":"items"},"property":{"type":"Identifier","start":50200,"end":50207,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50208,"end":50341,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50208,"end":50212,"name":"item"}],"body":{"type":"BlockStatement","start":50216,"end":50341,"body":[{"type":"ExpressionStatement","start":50235,"end":50326,"expression":{"type":"AssignmentExpression","start":50235,"end":50325,"operator":"=","left":{"type":"Identifier","start":50235,"end":50240,"name":"paths"},"right":{"type":"CallExpression","start":50243,"end":50325,"callee":{"type":"MemberExpression","start":50243,"end":50255,"object":{"type":"Identifier","start":50243,"end":50248,"name":"paths"},"property":{"type":"Identifier","start":50249,"end":50255,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50256,"end":50324,"callee":{"type":"MemberExpression","start":50256,"end":50296,"object":{"type":"ThisExpression","start":50256,"end":50260},"property":{"type":"Identifier","start":50261,"end":50296,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50297,"end":50301,"name":"item"},{"type":"Identifier","start":50303,"end":50323,"name":"subCollectionQueries"}],"optional":false}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":50357,"end":50370,"argument":{"type":"Identifier","start":50364,"end":50369,"name":"paths"}}]}}],"optional":false},{"type":"CallExpression","start":50384,"end":50516,"callee":{"type":"Identifier","start":50384,"end":50387,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50388,"end":50515,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50389,"end":50397,"name":"pathList"}],"body":{"type":"BlockStatement","start":50402,"end":50515,"body":[{"type":"ReturnStatement","start":50417,"end":50504,"argument":{"type":"CallExpression","start":50424,"end":50503,"callee":{"type":"MemberExpression","start":50424,"end":50454,"object":{"type":"Identifier","start":50424,"end":50432,"name":"pathList"},"property":{"type":"Identifier","start":50451,"end":50454,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50455,"end":50502,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50455,"end":50459,"name":"path"}],"body":{"type":"CallExpression","start":50463,"end":50502,"callee":{"type":"Identifier","start":50463,"end":50477,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50478,"end":50482,"name":"path"},{"type":"MemberExpression","start":50484,"end":50501,"object":{"type":"MemberExpression","start":50484,"end":50491,"object":{"type":"ThisExpression","start":50484,"end":50488},"property":{"type":"Identifier","start":50489,"end":50491,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50492,"end":50501,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":50931,"end":51171,"static":false,"computed":false,"key":{"type":"Identifier","start":50931,"end":50960,"name":"getDocumentReferencesFromItem"},"kind":"method","value":{"type":"FunctionExpression","start":50960,"end":51171,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50961,"end":50965,"name":"item"},{"type":"AssignmentPattern","start":50967,"end":50992,"left":{"type":"Identifier","start":50967,"end":50987,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50990,"end":50992,"elements":[]}}],"body":{"type":"BlockStatement","start":50994,"end":51171,"body":[{"type":"VariableDeclaration","start":51005,"end":51088,"declarations":[{"type":"VariableDeclarator","start":51011,"end":51087,"id":{"type":"Identifier","start":51011,"end":51016,"name":"paths"},"init":{"type":"CallExpression","start":51019,"end":51087,"callee":{"type":"MemberExpression","start":51019,"end":51059,"object":{"type":"ThisExpression","start":51019,"end":51023},"property":{"type":"Identifier","start":51024,"end":51059,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51060,"end":51064,"name":"item"},{"type":"Identifier","start":51066,"end":51086,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":51098,"end":51164,"argument":{"type":"CallExpression","start":51105,"end":51163,"callee":{"type":"MemberExpression","start":51105,"end":51114,"object":{"type":"Identifier","start":51105,"end":51110,"name":"paths"},"property":{"type":"Identifier","start":51111,"end":51114,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51115,"end":51162,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":51115,"end":51119,"name":"path"}],"body":{"type":"CallExpression","start":51123,"end":51162,"callee":{"type":"Identifier","start":51123,"end":51137,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51138,"end":51142,"name":"path"},{"type":"MemberExpression","start":51144,"end":51161,"object":{"type":"MemberExpression","start":51144,"end":51151,"object":{"type":"ThisExpression","start":51144,"end":51148},"property":{"type":"Identifier","start":51149,"end":51151,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51152,"end":51161,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":51271,"end":52859,"static":false,"computed":false,"key":{"type":"Identifier","start":51271,"end":51306,"name":"getPathsFromItemDeepRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":51306,"end":52859,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51307,"end":51311,"name":"item"},{"type":"AssignmentPattern","start":51313,"end":51338,"left":{"type":"Identifier","start":51313,"end":51333,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51336,"end":51338,"elements":[]}}],"body":{"type":"BlockStatement","start":51340,"end":52859,"body":[{"type":"IfStatement","start":51351,"end":51485,"test":{"type":"LogicalExpression","start":51355,"end":51420,"left":{"type":"BinaryExpression","start":51355,"end":51383,"left":{"type":"Identifier","start":51355,"end":51375,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":51379,"end":51383,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":51387,"end":51420,"left":{"type":"MemberExpression","start":51387,"end":51414,"object":{"type":"Identifier","start":51387,"end":51407,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":51408,"end":51414,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":51419,"end":51420,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":51422,"end":51485,"body":[{"type":"ReturnStatement","start":51437,"end":51474,"argument":{"type":"ArrayExpression","start":51444,"end":51473,"elements":[{"type":"MemberExpression","start":51445,"end":51472,"object":{"type":"MemberExpression","start":51445,"end":51467,"object":{"type":"Identifier","start":51445,"end":51449,"name":"item"},"property":{"type":"Identifier","start":51450,"end":51467,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51468,"end":51472,"name":"path"},"computed":false,"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":51495,"end":51513,"declarations":[{"type":"VariableDeclarator","start":51499,"end":51512,"id":{"type":"Identifier","start":51499,"end":51507,"name":"pathList"},"init":{"type":"ArrayExpression","start":51510,"end":51512,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":51523,"end":51566,"expression":{"type":"CallExpression","start":51523,"end":51565,"callee":{"type":"MemberExpression","start":51523,"end":51536,"object":{"type":"Identifier","start":51523,"end":51531,"name":"pathList"},"property":{"type":"Identifier","start":51532,"end":51536,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":51537,"end":51564,"object":{"type":"MemberExpression","start":51537,"end":51559,"object":{"type":"Identifier","start":51537,"end":51541,"name":"item"},"property":{"type":"Identifier","start":51542,"end":51559,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51560,"end":51564,"name":"path"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":51576,"end":52826,"expression":{"type":"CallExpression","start":51576,"end":52825,"callee":{"type":"MemberExpression","start":51576,"end":51604,"object":{"type":"Identifier","start":51576,"end":51596,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":51597,"end":51604,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51605,"end":52824,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51605,"end":51608,"name":"col"}],"body":{"type":"BlockStatement","start":51612,"end":52824,"body":[{"type":"IfStatement","start":51627,"end":52813,"test":{"type":"LogicalExpression","start":51631,"end":51674,"left":{"type":"CallExpression","start":51631,"end":51660,"callee":{"type":"MemberExpression","start":51631,"end":51644,"object":{"type":"Identifier","start":51631,"end":51636,"name":"Array"},"property":{"type":"Identifier","start":51637,"end":51644,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":51645,"end":51659,"object":{"type":"Identifier","start":51645,"end":51649,"name":"item"},"property":{"type":"MemberExpression","start":51650,"end":51658,"object":{"type":"Identifier","start":51650,"end":51653,"name":"col"},"property":{"type":"Identifier","start":51654,"end":51658,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":51664,"end":51674,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":51665,"end":51674,"object":{"type":"Identifier","start":51665,"end":51668,"name":"col"},"property":{"type":"Identifier","start":51669,"end":51674,"name":"docId"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":51676,"end":52212,"body":[{"type":"VariableDeclaration","start":51786,"end":51815,"declarations":[{"type":"VariableDeclarator","start":51792,"end":51814,"id":{"type":"Identifier","start":51792,"end":51797,"name":"items"},"init":{"type":"MemberExpression","start":51800,"end":51814,"object":{"type":"Identifier","start":51800,"end":51804,"name":"item"},"property":{"type":"MemberExpression","start":51805,"end":51813,"object":{"type":"Identifier","start":51805,"end":51808,"name":"col"},"property":{"type":"Identifier","start":51809,"end":51813,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":51833,"end":52197,"expression":{"type":"CallExpression","start":51833,"end":52196,"callee":{"type":"MemberExpression","start":51833,"end":51846,"object":{"type":"Identifier","start":51833,"end":51838,"name":"items"},"property":{"type":"Identifier","start":51839,"end":51846,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51847,"end":52195,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51847,"end":51854,"name":"subItem"}],"body":{"type":"BlockStatement","start":51858,"end":52195,"body":[{"type":"IfStatement","start":51881,"end":52176,"test":{"type":"MemberExpression","start":51885,"end":51903,"object":{"type":"Identifier","start":51885,"end":51888,"name":"col"},"property":{"type":"Identifier","start":51889,"end":51903,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":51905,"end":52053,"body":[{"type":"ExpressionStatement","start":51932,"end":52030,"expression":{"type":"AssignmentExpression","start":51932,"end":52029,"operator":"=","left":{"type":"Identifier","start":51932,"end":51940,"name":"pathList"},"right":{"type":"CallExpression","start":51943,"end":52029,"callee":{"type":"MemberExpression","start":51943,"end":51958,"object":{"type":"Identifier","start":51943,"end":51951,"name":"pathList"},"property":{"type":"Identifier","start":51952,"end":51958,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":51959,"end":52028,"callee":{"type":"MemberExpression","start":51959,"end":51999,"object":{"type":"ThisExpression","start":51959,"end":51963},"property":{"type":"Identifier","start":51964,"end":51999,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52000,"end":52007,"name":"subItem"},{"type":"MemberExpression","start":52009,"end":52027,"object":{"type":"Identifier","start":52009,"end":52012,"name":"col"},"property":{"type":"Identifier","start":52013,"end":52027,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52080,"end":52176,"body":[{"type":"ExpressionStatement","start":52107,"end":52153,"expression":{"type":"CallExpression","start":52107,"end":52152,"callee":{"type":"MemberExpression","start":52107,"end":52120,"object":{"type":"Identifier","start":52107,"end":52115,"name":"pathList"},"property":{"type":"Identifier","start":52116,"end":52120,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52121,"end":52151,"object":{"type":"MemberExpression","start":52121,"end":52146,"object":{"type":"Identifier","start":52121,"end":52128,"name":"subItem"},"property":{"type":"Identifier","start":52129,"end":52146,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52147,"end":52151,"name":"path"},"computed":false,"optional":false}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":52231,"end":52813,"body":[{"type":"IfStatement","start":52284,"end":52798,"test":{"type":"MemberExpression","start":52288,"end":52306,"object":{"type":"Identifier","start":52288,"end":52291,"name":"col"},"property":{"type":"Identifier","start":52292,"end":52306,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52308,"end":52445,"body":[{"type":"ExpressionStatement","start":52331,"end":52426,"expression":{"type":"AssignmentExpression","start":52331,"end":52425,"operator":"=","left":{"type":"Identifier","start":52331,"end":52339,"name":"pathList"},"right":{"type":"CallExpression","start":52342,"end":52425,"callee":{"type":"MemberExpression","start":52342,"end":52357,"object":{"type":"Identifier","start":52342,"end":52350,"name":"pathList"},"property":{"type":"Identifier","start":52351,"end":52357,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52358,"end":52424,"callee":{"type":"MemberExpression","start":52358,"end":52398,"object":{"type":"ThisExpression","start":52358,"end":52362},"property":{"type":"Identifier","start":52363,"end":52398,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52399,"end":52403,"name":"item"},{"type":"MemberExpression","start":52405,"end":52423,"object":{"type":"Identifier","start":52405,"end":52408,"name":"col"},"property":{"type":"Identifier","start":52409,"end":52423,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52468,"end":52798,"body":[{"type":"VariableDeclaration","start":52491,"end":52522,"declarations":[{"type":"VariableDeclarator","start":52497,"end":52521,"id":{"type":"Identifier","start":52497,"end":52504,"name":"subItem"},"init":{"type":"MemberExpression","start":52507,"end":52521,"object":{"type":"Identifier","start":52507,"end":52511,"name":"item"},"property":{"type":"MemberExpression","start":52512,"end":52520,"object":{"type":"Identifier","start":52512,"end":52515,"name":"col"},"property":{"type":"Identifier","start":52516,"end":52520,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":52544,"end":52700,"test":{"type":"LogicalExpression","start":52548,"end":52602,"left":{"type":"BinaryExpression","start":52548,"end":52563,"left":{"type":"Identifier","start":52548,"end":52555,"name":"subItem"},"operator":"!=","right":{"type":"Literal","start":52559,"end":52563,"value":null,"raw":"null"}},"operator":"&&","right":{"type":"BinaryExpression","start":52567,"end":52602,"left":{"type":"Literal","start":52567,"end":52573,"value":"path","raw":"'path'"},"operator":"in","right":{"type":"MemberExpression","start":52577,"end":52602,"object":{"type":"Identifier","start":52577,"end":52584,"name":"subItem"},"property":{"type":"Identifier","start":52585,"end":52602,"name":"firestoreMetadata"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52604,"end":52700,"body":[{"type":"ExpressionStatement","start":52631,"end":52677,"expression":{"type":"CallExpression","start":52631,"end":52676,"callee":{"type":"MemberExpression","start":52631,"end":52644,"object":{"type":"Identifier","start":52631,"end":52639,"name":"pathList"},"property":{"type":"Identifier","start":52640,"end":52644,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52645,"end":52675,"object":{"type":"MemberExpression","start":52645,"end":52670,"object":{"type":"Identifier","start":52645,"end":52652,"name":"subItem"},"property":{"type":"Identifier","start":52653,"end":52670,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52671,"end":52675,"name":"path"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":52836,"end":52852,"argument":{"type":"Identifier","start":52843,"end":52851,"name":"pathList"}}]}}},{"type":"MethodDefinition","start":53040,"end":54065,"static":false,"computed":false,"key":{"type":"Identifier","start":53040,"end":53080,"name":"splitDataIntoCurrentDocAndSubCollections"},"kind":"method","value":{"type":"FunctionExpression","start":53080,"end":54065,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":53081,"end":53085,"name":"data"},{"type":"AssignmentPattern","start":53087,"end":53112,"left":{"type":"Identifier","start":53087,"end":53107,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":53110,"end":53112,"elements":[]}}],"body":{"type":"BlockStatement","start":53114,"end":54065,"body":[{"type":"VariableDeclaration","start":53188,"end":53208,"declarations":[{"type":"VariableDeclarator","start":53192,"end":53207,"id":{"type":"Identifier","start":53192,"end":53202,"name":"currentDoc"},"init":{"type":"ObjectExpression","start":53205,"end":53207,"properties":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":53218,"end":53244,"declarations":[{"type":"VariableDeclarator","start":53224,"end":53243,"id":{"type":"Identifier","start":53224,"end":53238,"name":"subCollections"},"init":{"type":"ObjectExpression","start":53241,"end":53243,"properties":[]}}],"kind":"const"},{"type":"ForOfStatement","start":53404,"end":53975,"await":false,"left":{"type":"VariableDeclaration","start":53409,"end":53427,"declarations":[{"type":"VariableDeclarator","start":53415,"end":53427,"id":{"type":"ArrayPattern","start":53415,"end":53427,"elements":[{"type":"Identifier","start":53416,"end":53419,"name":"key"},{"type":"Identifier","start":53421,"end":53426,"name":"value"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":53431,"end":53451,"callee":{"type":"MemberExpression","start":53431,"end":53445,"object":{"type":"Identifier","start":53431,"end":53437,"name":"Object"},"property":{"type":"Identifier","start":53438,"end":53445,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53446,"end":53450,"name":"data"}],"optional":false},"body":{"type":"BlockStatement","start":53453,"end":53975,"body":[{"type":"IfStatement","start":53509,"end":53964,"test":{"type":"LogicalExpression","start":53513,"end":53568,"left":{"type":"Identifier","start":53513,"end":53533,"name":"subCollectionWriters"},"operator":"&&","right":{"type":"BinaryExpression","start":53537,"end":53568,"left":{"type":"MemberExpression","start":53537,"end":53564,"object":{"type":"Identifier","start":53537,"end":53557,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":53558,"end":53564,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":53567,"end":53568,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":53570,"end":53893,"body":[{"type":"VariableDeclaration","start":53589,"end":53676,"declarations":[{"type":"VariableDeclarator","start":53595,"end":53675,"id":{"type":"Identifier","start":53595,"end":53614,"name":"subCollectionWriter"},"init":{"type":"CallExpression","start":53617,"end":53675,"callee":{"type":"MemberExpression","start":53617,"end":53642,"object":{"type":"Identifier","start":53617,"end":53637,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":53638,"end":53642,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":53643,"end":53674,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":53643,"end":53650,"name":"subColl"}],"body":{"type":"BinaryExpression","start":53654,"end":53674,"left":{"type":"MemberExpression","start":53654,"end":53666,"object":{"type":"Identifier","start":53654,"end":53661,"name":"subColl"},"property":{"type":"Identifier","start":53662,"end":53666,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":53671,"end":53674,"name":"key"}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":53694,"end":53878,"test":{"type":"Identifier","start":53698,"end":53717,"name":"subCollectionWriter"},"consequent":{"type":"BlockStatement","start":53719,"end":53789,"body":[{"type":"ExpressionStatement","start":53742,"end":53770,"expression":{"type":"AssignmentExpression","start":53742,"end":53769,"operator":"=","left":{"type":"MemberExpression","start":53742,"end":53761,"object":{"type":"Identifier","start":53742,"end":53756,"name":"subCollections"},"property":{"type":"Identifier","start":53757,"end":53760,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":53764,"end":53769,"name":"value"}}}]},"alternate":{"type":"BlockStatement","start":53812,"end":53878,"body":[{"type":"ExpressionStatement","start":53835,"end":53859,"expression":{"type":"AssignmentExpression","start":53835,"end":53858,"operator":"=","left":{"type":"MemberExpression","start":53835,"end":53850,"object":{"type":"Identifier","start":53835,"end":53845,"name":"currentDoc"},"property":{"type":"Identifier","start":53846,"end":53849,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":53853,"end":53858,"name":"value"}}}]}}]},"alternate":{"type":"BlockStatement","start":53912,"end":53964,"body":[{"type":"ExpressionStatement","start":53931,"end":53949,"expression":{"type":"AssignmentExpression","start":53931,"end":53948,"operator":"=","left":{"type":"Identifier","start":53931,"end":53941,"name":"currentDoc"},"right":{"type":"Identifier","start":53944,"end":53948,"name":"data"}}}]}}]}},{"type":"ReturnStatement","start":53985,"end":54058,"argument":{"type":"ObjectExpression","start":53992,"end":54057,"properties":[{"type":"Property","start":54007,"end":54017,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54007,"end":54017,"name":"currentDoc"},"kind":"init","value":{"type":"Identifier","start":54007,"end":54017,"name":"currentDoc"}},{"type":"Property","start":54032,"end":54046,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54032,"end":54046,"name":"subCollections"},"kind":"init","value":{"type":"Identifier","start":54032,"end":54046,"name":"subCollections"}}]}}]}}},{"type":"MethodDefinition","start":54344,"end":54424,"static":false,"computed":false,"key":{"type":"Identifier","start":54344,"end":54356,"name":"batchCommit$"},"kind":"method","value":{"type":"FunctionExpression","start":54356,"end":54424,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":54357,"end":54362,"name":"batch"}],"body":{"type":"BlockStatement","start":54364,"end":54424,"body":[{"type":"ReturnStatement","start":54375,"end":54417,"argument":{"type":"CallExpression","start":54382,"end":54416,"callee":{"type":"MemberExpression","start":54382,"end":54407,"object":{"type":"CallExpression","start":54382,"end":54402,"callee":{"type":"Identifier","start":54382,"end":54386,"name":"from"},"arguments":[{"type":"CallExpression","start":54387,"end":54401,"callee":{"type":"MemberExpression","start":54387,"end":54399,"object":{"type":"Identifier","start":54387,"end":54392,"name":"batch"},"property":{"type":"Identifier","start":54393,"end":54399,"name":"commit"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"property":{"type":"Identifier","start":54403,"end":54407,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":54408,"end":54415,"callee":{"type":"Identifier","start":54408,"end":54412,"name":"take"},"arguments":[{"type":"Literal","start":54413,"end":54414,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":54429,"end":179619}]},"code":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { DocumentReference, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\nimport { QueryContainer } from './firebase-extended-wrapper';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(collectionRef, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        const collectionRef = getRefFromPath(collectionPath, this.fs.firestore);\r\n        const collectionQuery = new QueryContainer(collectionRef);\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in revese so as to not change the indices,\r\n        // the indicies to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subcollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns Writebatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            if (snapshot.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(collectionRef) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(collectionRef).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            let collectionRef = getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name);\r\n            if (subCollectionQuery.queryFn) {\r\n                collectionRef = subCollectionQuery.queryFn(collectionRef);\r\n            }\r\n            const collectionListener = this.listenForCollectionSimple$(collectionRef).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collection) => {\r\n                for (const [collectionName, items] of Object.entries(collection)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { DocumentReference, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\nimport { QueryContainer } from './firebase-extended-wrapper';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(collectionRef, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        const collectionRef = getRefFromPath(collectionPath, this.fs.firestore);\r\n        const collectionQuery = new QueryContainer(collectionRef);\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in revese so as to not change the indices,\r\n        // the indicies to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subcollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns Writebatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            if (snapshot.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(collectionRef) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(collectionRef).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            let collectionRef = getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name);\r\n            if (subCollectionQuery.queryFn) {\r\n                collectionRef = subCollectionQuery.queryFn(collectionRef);\r\n            }\r\n            const collectionListener = this.listenForCollectionSimple$(collectionRef).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collection) => {\r\n                for (const [collectionName, items] of Object.entries(collection)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,23],[32,0,0,31],[34,0,0,33],[38,0,0,37],[40,0,0,51],[42,0,0,53],[44,0,0,54],[50,0,0,60],[56,0,0,66],[57,0,0,67]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,20],[27,0,2,26],[29,0,2,28],[32,0,2,31],[34,0,2,33],[42,0,2,41],[44,0,2,43],[53,0,2,52],[55,0,2,54],[59,0,2,58],[61,0,2,60],[64,0,2,63],[66,0,2,64],[72,0,2,70],[88,0,2,86],[89,0,2,87]],[[0,0,3,0],[7,0,3,7],[9,0,6,2],[26,0,6,19],[28,0,9,2],[38,0,9,12],[40,0,11,1],[46,0,11,7],[66,0,11,27],[67,0,11,28]],[[0,0,13,0],[7,0,13,7],[9,0,14,2],[23,0,14,16],[25,0,15,2],[38,0,15,15],[40,0,16,2],[55,0,16,17],[57,0,17,2],[79,0,17,24],[81,0,18,2],[96,0,18,17],[98,0,19,2],[112,0,19,16],[114,0,20,2],[130,0,20,18],[132,0,21,1],[138,0,21,7],[149,0,21,18],[150,0,21,19]],[[0,0,26,0],[7,0,26,7],[9,0,26,8],[24,0,26,23],[26,0,26,25],[43,0,26,42],[45,0,26,43],[51,0,26,49],[65,0,26,63],[66,0,26,64]],[[0,0,27,0],[7,0,27,7],[9,0,27,8],[23,0,27,22],[25,0,27,23],[31,0,27,29],[60,0,27,58],[61,0,27,59]],[[0,0,29,0]],[],[[3,0,31,3]],[[0,0,32,0],[6,0,32,6],[7,0,32,0],[11,0,32,12],[28,0,44,1]],[[0,0,32,0],[11,0,32,12],[28,0,32,29]],[[4,0,33,2],[32,0,33,30]],[[4,0,34,2],[75,0,34,13],[76,0,34,13]],[[4,0,36,2],[117,0,36,115]],[[4,0,37,2],[91,0,37,21],[92,0,37,21]],[[4,0,39,2],[51,0,39,49]],[[4,0,40,2],[65,0,40,8],[66,0,40,8]],[[4,0,42,2],[53,0,42,51]],[[4,0,43,2],[91,0,43,21],[92,0,43,21]],[[0,0,44,0],[1,0,44,1],[3,0,32,12],[20,0,32,29],[25,0,32,12],[42,0,32,29],[50,0,44,1]],[[0,0,55,0]],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[13,0,61,13],[30,0,61,30]],[[4,0,63,2]],[],[],[],[],[[7,0,68,5]],[[4,0,69,2],[16,0,69,22],[18,0,69,42],[20,0,69,51],[35,0,69,74],[41,0,69,80]],[[8,0,69,22],[15,0,69,24],[18,0,69,22],[20,0,69,24],[21,0,69,42]],[[8,0,69,51],[25,0,69,63],[28,0,69,51],[40,0,69,63],[41,0,69,80]],[[4,0,70,2],[5,0,70,3]],[[4,0,72,2],[43,0,72,41]],[[4,0,74,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,102,5]],[[4,0,103,9],[17,0,103,22],[18,0,104,4],[24,0,104,29],[26,0,105,4],[49,0,105,49],[51,0,105,51],[53,0,106,4],[72,0,106,42],[89,0,106,59],[90,0,106,60],[109,0,106,79]],[[8,0,108,4],[15,0,108,11],[19,0,108,15],[20,0,108,16],[52,0,108,48],[53,0,108,49],[59,0,108,55],[61,0,108,57],[81,0,108,77],[83,0,108,79],[99,0,108,95],[100,0,108,96],[101,0,108,97],[105,0,108,101],[106,0,109,6],[109,0,109,9],[110,0,109,10],[114,0,109,14],[115,0,109,15],[117,0,109,17],[118,0,109,18],[122,0,109,37],[123,0,109,38],[124,0,110,5],[125,0,110,6]],[[4,0,111,2],[5,0,111,3]],[[4,0,113,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,144,5]],[[4,0,145,9],[24,0,145,29],[25,0,146,4],[38,0,146,41],[40,0,147,4],[63,0,147,49],[65,0,147,51]],[[8,0,148,4]],[],[],[[11,0,151,7]],[[8,0,152,4],[15,0,152,11],[19,0,152,15],[20,0,152,16],[46,0,152,42],[47,0,152,46],[60,0,152,59],[61,0,152,60],[62,0,152,61],[66,0,152,65],[67,0,153,6],[75,0,153,14],[76,0,153,15],[77,0,153,16],[82,0,153,37],[84,0,153,39],[86,0,153,41]],[[12,0,155,8],[16,0,155,12],[21,0,155,17],[25,0,155,21],[29,0,155,25],[33,0,155,29],[38,0,155,34],[39,0,155,35],[45,0,155,41],[50,0,155,46],[51,0,155,47],[53,0,155,49]],[[16,0,156,10],[23,0,156,17],[25,0,156,19],[26,0,156,20],[28,0,156,22],[29,0,156,23],[30,0,156,24]],[[13,0,157,9]],[[12,0,158,8],[16,0,158,12],[36,0,158,32],[37,0,158,33],[43,0,158,39],[47,0,158,43],[48,0,158,44],[50,0,158,46]],[[16,0,159,10],[23,0,159,17],[25,0,159,19],[26,0,159,20],[31,0,159,25],[32,0,159,26],[33,0,159,27]],[[13,0,160,9]],[[12,0,162,8],[18,0,162,14],[37,0,162,33],[40,0,162,60],[42,0,162,62],[43,0,162,63]],[[12,0,164,8],[17,0,164,13],[18,0,164,14],[25,0,164,21],[26,0,164,22],[30,0,164,26],[31,0,164,27],[33,0,164,29]],[[16,0,166,10],[22,0,166,16],[40,0,166,34],[43,0,166,37],[47,0,166,41],[48,0,166,42],[72,0,166,66],[73,0,166,67],[77,0,166,71],[79,0,166,73],[99,0,166,93],[100,0,166,94],[101,0,166,95]],[[16,0,168,10],[35,0,168,29],[36,0,168,30],[40,0,168,34],[41,0,168,35],[59,0,168,53],[60,0,168,54],[61,0,168,55]],[[12,0,169,8],[13,0,169,9],[14,0,169,10],[15,0,169,11]],[[12,0,171,8],[66,0,171,62]],[[12,0,172,8],[19,0,172,15],[32,0,172,28],[33,0,172,29],[52,0,172,48],[53,0,172,49],[54,0,172,50]],[[8,0,173,6],[9,0,173,7],[10,0,173,8],[11,0,174,5],[12,0,174,6]],[[4,0,175,2],[5,0,175,3]],[[4,0,177,2]],[],[[7,0,179,5]],[[4,0,180,9],[35,0,180,40],[36,0,181,4],[50,0,181,26],[52,0,182,4],[65,0,182,25],[67,0,183,4],[75,0,183,21]],[[8,0,185,4],[14,0,185,10],[27,0,185,23],[30,0,185,26],[44,0,185,40],[45,0,185,41],[59,0,185,55],[61,0,185,57],[65,0,185,61],[66,0,185,62],[68,0,185,64],[69,0,185,65],[78,0,185,74],[79,0,185,101],[80,0,185,102]],[[8,0,186,4],[14,0,186,10],[29,0,186,25],[32,0,186,28],[36,0,186,32],[50,0,186,46],[51,0,186,50],[64,0,186,63],[65,0,186,64],[66,0,186,65]],[[8,0,187,4],[12,0,187,8],[20,0,187,16],[24,0,187,20],[28,0,187,24],[30,0,187,26]],[[12,0,188,6],[27,0,188,21],[28,0,188,22],[35,0,188,29],[36,0,188,30],[44,0,188,38],[45,0,188,39],[46,0,188,40]],[[9,0,189,5]],[[8,0,191,4],[15,0,191,11],[19,0,191,15],[20,0,191,16],[46,0,191,42],[47,0,191,46],[60,0,191,59],[61,0,191,60],[62,0,191,61],[66,0,191,65],[67,0,192,6],[75,0,192,14],[76,0,192,15],[77,0,192,16],[82,0,192,36],[84,0,192,38],[86,0,192,40]],[[12,0,194,8],[16,0,194,12],[21,0,194,17],[22,0,194,18],[28,0,194,24],[32,0,194,28],[33,0,194,29],[35,0,194,31]],[[16,0,195,10],[23,0,195,17],[25,0,195,19],[26,0,195,20],[28,0,195,22],[29,0,195,23],[30,0,195,24]],[[13,0,196,9],[14,0,196,10],[78,0,196,74]],[[12,0,198,8],[65,0,198,61]],[[12,0,200,8],[18,0,200,14],[30,0,200,26],[33,0,200,61],[35,0,200,63],[36,0,200,64]],[[12,0,202,8],[17,0,202,13],[23,0,202,19],[27,0,202,23],[31,0,202,27],[36,0,202,32],[38,0,202,34]],[[16,0,204,10],[120,0,204,114]],[[16,0,205,10],[22,0,205,16],[35,0,205,29],[38,0,205,32],[42,0,205,36],[43,0,205,37],[60,0,205,54],[61,0,205,55],[64,0,205,58],[65,0,205,59],[69,0,205,63],[70,0,205,64],[76,0,205,70],[77,0,205,71],[80,0,205,74],[82,0,205,76],[95,0,205,89],[96,0,205,90],[97,0,205,91],[98,0,205,93],[117,0,205,112]],[[16,0,207,10],[22,0,207,16],[37,0,207,31],[40,0,207,34],[44,0,207,38],[45,0,207,39],[76,0,207,70],[77,0,207,71],[90,0,207,84],[92,0,207,86],[105,0,207,99],[107,0,207,101],[115,0,207,109],[116,0,207,110],[117,0,207,111],[121,0,207,115],[122,0,208,12],[125,0,208,15],[126,0,208,16],[127,0,208,17],[141,0,208,51],[143,0,208,53],[145,0,208,55]],[[20,0,209,14],[24,0,209,18],[38,0,209,32],[39,0,209,33],[45,0,209,39],[48,0,209,42],[49,0,209,43],[51,0,209,45]],[[24,0,210,16],[31,0,210,23],[33,0,210,24],[36,0,210,27],[40,0,210,31],[42,0,210,33],[43,0,210,34],[56,0,210,47],[57,0,210,48],[59,0,210,50],[73,0,210,64],[75,0,210,80],[76,0,210,81]],[[21,0,211,15]],[[25,0,211,21]],[[24,0,212,16],[31,0,212,23],[33,0,212,24],[36,0,212,27],[40,0,212,31],[42,0,212,47],[43,0,212,48]],[[21,0,213,15],[22,0,213,17],[52,0,213,47]],[[16,0,214,12],[17,0,214,13],[18,0,214,14],[19,0,215,11],[20,0,215,12]],[[16,0,216,10],[28,0,216,22],[29,0,216,23],[33,0,216,27],[34,0,216,28],[49,0,216,43],[50,0,216,44],[51,0,216,45]],[[13,0,217,9]],[[12,0,219,8],[19,0,219,15],[32,0,219,28],[33,0,219,29],[45,0,219,41],[46,0,219,42],[47,0,219,43],[51,0,219,47],[52,0,220,10],[55,0,220,13],[56,0,220,14],[59,0,220,17],[60,0,220,18],[62,0,220,20],[63,0,220,21],[70,0,220,28],[71,0,220,29],[74,0,220,32],[75,0,220,33],[78,0,220,36],[79,0,220,37],[80,0,220,38],[81,0,221,9],[82,0,221,10]],[[8,0,222,6],[9,0,222,7],[10,0,222,8],[11,0,223,5],[12,0,223,6]],[[4,0,224,2],[5,0,224,3]],[[4,0,226,2],[39,0,226,37]],[[4,0,228,2]],[],[],[],[],[],[],[],[[7,0,236,5]],[[4,0,237,9],[8,0,237,13],[9,0,238,4],[13,0,238,11],[15,0,239,4],[28,0,239,41],[30,0,240,4],[53,0,240,50],[55,0,240,52],[57,0,241,4],[70,0,241,26],[74,0,241,30],[76,0,242,4],[81,0,242,18]],[[8,0,244,4],[12,0,244,8],[17,0,244,13],[18,0,244,14],[25,0,244,21],[26,0,244,22],[30,0,244,26],[31,0,244,27],[35,0,244,31],[40,0,244,36],[44,0,244,40],[64,0,244,60],[65,0,244,61],[71,0,244,67],[74,0,244,70],[75,0,244,71],[77,0,244,73]],[[12,0,245,6],[18,0,245,12],[23,0,245,17],[26,0,245,39]],[[16,0,246,8],[20,0,246,12],[22,0,246,14],[40,0,246,32]],[[16,0,247,8],[20,0,247,12],[22,0,247,14],[31,0,247,23]],[[16,0,248,8],[23,0,248,15],[25,0,248,17],[113,0,248,105]],[[16,0,249,8],[21,0,249,13],[23,0,249,15],[25,0,249,17]],[[16,0,250,8],[20,0,250,12]],[[16,0,251,8],[36,0,251,28]],[[16,0,252,8],[21,0,252,13]],[[13,0,253,7],[14,0,253,8]],[[12,0,255,6],[18,0,255,12],[23,0,255,17],[24,0,255,18]],[[9,0,256,5]],[[8,0,258,4],[12,0,258,8],[22,0,258,18],[23,0,258,19]],[[8,0,259,4],[12,0,259,8],[26,0,259,22],[29,0,259,52],[31,0,259,54],[32,0,259,55]],[[8,0,261,4]],[],[],[[10,0,264,6]],[[8,0,265,4],[12,0,265,8],[17,0,265,13],[18,0,265,14],[25,0,265,21],[26,0,265,22],[30,0,265,26],[31,0,265,27],[35,0,265,31],[40,0,265,36],[42,0,265,38]],[[12,0,266,6],[22,0,266,16],[25,0,266,19],[29,0,266,23],[30,0,266,24]],[[9,0,267,5]],[[13,0,267,11]],[[12,0,268,6],[18,0,268,12],[23,0,268,17],[26,0,268,20],[30,0,268,24],[31,0,268,25],[71,0,268,65],[72,0,268,66],[76,0,268,70],[78,0,268,72],[98,0,268,92],[99,0,268,93],[100,0,268,94]],[[12,0,269,6],[22,0,269,16],[25,0,269,19],[30,0,269,24],[31,0,269,25],[41,0,269,35],[42,0,269,36]],[[12,0,270,6],[26,0,270,20],[29,0,270,23],[34,0,270,28],[35,0,270,29],[49,0,270,43],[50,0,270,44]],[[9,0,271,5]],[[8,0,273,4],[15,0,273,11],[19,0,273,15],[20,0,273,16],[30,0,273,26],[31,0,273,30],[41,0,273,45],[43,0,273,47],[56,0,273,60],[58,0,273,62],[68,0,273,72],[70,0,273,74],[75,0,273,79],[76,0,273,80],[77,0,273,81],[81,0,273,85]],[[8,0,274,6],[36,0,274,34]],[[8,0,275,6],[16,0,275,14],[17,0,275,15],[18,0,275,16],[29,0,275,40],[31,0,275,42],[33,0,275,44]],[[12,0,277,8],[18,0,277,14],[28,0,277,24],[31,0,277,51],[33,0,277,53],[34,0,277,54]],[[12,0,279,8],[17,0,279,13],[23,0,279,19],[24,0,279,20],[40,0,279,36],[42,0,279,38],[60,0,279,56],[61,0,279,57],[65,0,279,61],[71,0,279,67],[72,0,279,68],[79,0,279,75],[80,0,279,76],[94,0,279,90],[95,0,279,91],[97,0,279,93]],[[16,0,280,10],[20,0,280,14],[43,0,280,72],[44,0,280,73],[45,0,280,74],[84,0,280,113]],[[16,0,281,10],[20,0,281,14],[28,0,281,42],[29,0,281,43]],[[16,0,283,10],[20,0,283,14],[40,0,283,34],[42,0,283,36]],[[20,0,284,12],[43,0,284,35],[46,0,284,38],[66,0,284,58],[67,0,284,59],[71,0,284,63],[72,0,284,64],[79,0,284,71],[80,0,284,72],[82,0,284,74],[83,0,284,75],[90,0,284,82],[91,0,284,83],[95,0,284,87],[100,0,284,92],[116,0,284,108],[117,0,284,109],[119,0,284,111],[133,0,284,125],[134,0,284,126]],[[20,0,285,12],[28,0,285,20],[31,0,285,23],[51,0,285,43],[52,0,285,44],[56,0,285,48],[57,0,285,49],[64,0,285,56],[65,0,285,57],[67,0,285,59],[68,0,285,60],[75,0,285,67],[76,0,285,68],[80,0,285,72],[85,0,285,77],[101,0,285,93],[102,0,285,94],[104,0,285,96],[109,0,285,101],[110,0,285,102]],[[17,0,286,11]],[[16,0,288,10],[22,0,288,16],[38,0,288,32],[41,0,288,56],[57,0,288,72],[58,0,288,73],[69,0,288,84],[70,0,288,85],[87,0,288,102],[88,0,288,103],[91,0,288,106],[93,0,288,108],[109,0,288,124],[110,0,288,125],[111,0,288,126]],[[16,0,290,10]],[],[],[[139,0,293,133]],[[16,0,294,10],[20,0,294,14],[25,0,294,19],[26,0,294,20],[33,0,294,27],[34,0,294,28],[52,0,294,46],[53,0,294,47],[55,0,294,49]],[[20,0,295,12],[24,0,295,16],[32,0,295,24],[37,0,295,29],[46,0,295,38],[48,0,295,40],[50,0,295,42],[113,0,295,105]],[[24,0,297,14],[110,0,297,100]],[[24,0,298,14],[30,0,298,20],[39,0,298,29],[42,0,298,32],[46,0,298,36],[47,0,298,37],[51,0,298,41],[52,0,298,42],[70,0,298,60],[72,0,298,62],[88,0,298,78],[90,0,298,80],[113,0,298,103],[115,0,298,105],[125,0,298,115],[127,0,298,117],[135,0,298,125],[136,0,298,126],[137,0,298,127],[141,0,298,131],[142,0,299,16],[145,0,299,19],[146,0,299,20],[150,0,299,24],[151,0,299,25],[153,0,299,27]],[[28,0,300,18],[52,0,300,42]],[[28,0,301,18],[35,0,301,25],[37,0,301,26],[40,0,301,29],[42,0,301,31],[58,0,301,47],[60,0,301,49],[65,0,301,54],[67,0,301,56],[71,0,301,60],[73,0,301,61],[74,0,301,62],[75,0,301,63],[134,0,301,122]],[[24,0,302,16],[25,0,302,17],[26,0,302,18],[27,0,303,15],[28,0,303,16]],[[24,0,304,14],[34,0,304,24],[35,0,304,25],[39,0,304,29],[40,0,304,30],[49,0,304,39],[50,0,304,40],[51,0,304,41]],[[21,0,306,13]],[[25,0,306,19],[27,0,306,21],[96,0,306,90]],[[24,0,307,14],[42,0,307,32],[43,0,307,33],[50,0,307,40],[51,0,307,41],[52,0,307,42],[62,0,307,66],[64,0,307,68],[66,0,307,70]],[[28,0,309,16],[114,0,309,102]],[[28,0,310,16],[34,0,310,22],[43,0,310,31],[46,0,310,34],[50,0,310,38],[51,0,310,39],[55,0,310,43],[56,0,310,44],[66,0,310,54],[68,0,310,56],[84,0,310,72],[86,0,310,74],[109,0,310,97],[111,0,310,99],[121,0,310,109],[122,0,310,110],[123,0,310,111],[127,0,310,115],[128,0,311,18],[131,0,311,21],[132,0,311,22],[136,0,311,26],[137,0,311,27],[139,0,311,29]],[[32,0,312,20],[58,0,312,46]],[[32,0,313,20],[125,0,313,113]],[[32,0,314,20],[39,0,314,27],[41,0,314,28],[44,0,314,31],[46,0,314,33],[62,0,314,49],[64,0,314,51],[69,0,314,56],[71,0,314,58],[72,0,314,59],[76,0,314,63],[77,0,314,64],[79,0,314,65],[80,0,314,66]],[[28,0,315,18],[29,0,315,19],[30,0,315,20],[31,0,316,17],[32,0,316,18]],[[28,0,318,16],[38,0,318,26],[39,0,318,27],[43,0,318,31],[44,0,318,32],[53,0,318,41],[54,0,318,42],[55,0,318,43]],[[24,0,319,14],[25,0,319,15],[26,0,319,16],[27,0,319,17]],[[21,0,320,13]],[[17,0,321,11]],[[21,0,321,17],[23,0,321,19],[59,0,321,55]],[[20,0,322,12],[28,0,322,20],[31,0,322,23],[39,0,322,31],[44,0,322,36],[53,0,322,45],[54,0,322,46],[55,0,322,47],[56,0,322,48],[64,0,322,56],[65,0,322,57],[66,0,322,58],[67,0,322,59],[71,0,322,63],[72,0,322,64],[84,0,322,76],[85,0,322,77]],[[20,0,324,12],[106,0,324,98]],[[20,0,325,12],[26,0,325,18],[35,0,325,27],[38,0,325,30],[42,0,325,34],[43,0,325,35],[47,0,325,39],[48,0,325,40],[66,0,325,58],[68,0,325,60],[84,0,325,76],[86,0,325,78],[109,0,325,101],[111,0,325,103],[121,0,325,113],[123,0,325,115],[131,0,325,123],[132,0,325,124],[133,0,325,125],[137,0,325,129],[138,0,326,14],[141,0,326,17],[142,0,326,18],[146,0,326,22],[147,0,326,23],[149,0,326,25]],[[24,0,327,16],[48,0,327,40]],[[24,0,328,16],[31,0,328,23],[33,0,328,24],[36,0,328,27],[38,0,328,29],[54,0,328,45],[56,0,328,47],[61,0,328,52],[63,0,328,54],[67,0,328,58],[69,0,328,59],[70,0,328,60],[71,0,328,61],[130,0,328,120]],[[20,0,329,14],[21,0,329,15],[22,0,329,16],[23,0,330,13],[24,0,330,14]],[[20,0,332,12],[30,0,332,22],[31,0,332,23],[35,0,332,27],[36,0,332,28],[45,0,332,37],[46,0,332,38],[47,0,332,39]],[[17,0,333,11]],[[13,0,334,9],[14,0,334,10],[36,0,334,32]],[[12,0,336,8],[16,0,336,12],[26,0,336,22],[27,0,336,23],[33,0,336,29],[36,0,336,32],[37,0,336,33],[39,0,336,35],[41,0,336,37],[113,0,336,109]],[[16,0,338,10],[89,0,338,83]],[[16,0,339,10],[23,0,339,17],[36,0,339,30],[37,0,339,31],[47,0,339,41],[48,0,339,42],[49,0,339,43],[53,0,339,47]],[[16,0,340,12],[48,0,340,44]],[[16,0,342,12],[139,0,342,135]],[[16,0,343,12],[141,0,343,137]],[[16,0,344,12],[34,0,344,30]],[[16,0,346,12],[19,0,346,15],[20,0,346,16],[21,0,346,17],[29,0,346,49],[31,0,346,51],[33,0,346,53]],[[20,0,347,14],[26,0,347,20],[37,0,347,31],[40,0,347,34],[42,0,347,36],[43,0,347,37]],[[20,0,349,14],[28,0,349,22],[29,0,349,23],[36,0,349,30],[37,0,349,31],[38,0,349,32],[41,0,349,61],[43,0,349,63],[45,0,349,65]],[[24,0,351,16],[30,0,351,22],[33,0,351,25],[36,0,351,28],[39,0,351,31],[40,0,351,32],[43,0,351,35],[44,0,351,36]],[[24,0,352,16],[30,0,352,22],[35,0,352,27],[38,0,352,30],[41,0,352,33],[42,0,352,34],[47,0,352,39],[48,0,352,40]],[[24,0,354,16],[126,0,354,118]],[[24,0,355,16],[37,0,355,29]],[[24,0,356,16],[28,0,356,20],[39,0,356,31],[40,0,356,32],[54,0,356,46],[55,0,356,47],[58,0,356,50],[59,0,356,51],[63,0,356,55],[68,0,356,60],[69,0,356,61],[76,0,356,68],[77,0,356,69],[88,0,356,80],[89,0,356,81],[92,0,356,84],[93,0,356,85],[94,0,356,86],[96,0,356,88]],[[28,0,357,18],[123,0,357,113]],[[28,0,358,18],[41,0,358,31]],[[28,0,359,19],[39,0,359,30],[40,0,359,31],[43,0,359,34],[44,0,359,50],[45,0,359,51],[49,0,359,55],[50,0,359,56],[55,0,359,61],[56,0,359,62],[57,0,359,63],[58,0,359,64],[59,0,359,65],[60,0,359,66]],[[25,0,360,17]],[[29,0,360,23]],[[28,0,361,18],[41,0,361,31]],[[28,0,362,18],[39,0,362,29],[40,0,362,30],[43,0,362,33],[44,0,362,34],[47,0,362,37],[52,0,362,42],[53,0,362,43]],[[25,0,363,17]],[[20,0,364,14],[21,0,364,15],[22,0,364,16],[23,0,364,17]],[[20,0,366,14],[27,0,366,21],[38,0,366,37],[39,0,366,38]],[[16,0,367,12],[17,0,367,13],[18,0,367,14]],[[16,0,369,12],[64,0,369,60]],[[16,0,371,12],[19,0,371,15],[20,0,371,16],[21,0,371,17],[32,0,371,31],[34,0,371,33],[36,0,371,35]],[[20,0,372,14],[27,0,372,21],[29,0,372,22],[32,0,372,25],[43,0,372,36],[45,0,372,38],[48,0,372,41],[59,0,372,52],[61,0,372,58],[62,0,372,59]],[[16,0,373,12],[17,0,373,13],[18,0,373,14],[19,0,375,11],[20,0,375,12]],[[13,0,376,9]],[[17,0,376,15]],[[16,0,377,10],[23,0,377,17],[25,0,377,19],[26,0,377,20],[37,0,377,31],[38,0,377,32],[39,0,377,33]],[[13,0,378,9]],[[8,0,379,6],[9,0,379,7],[10,0,379,8],[11,0,380,5],[12,0,380,6],[16,0,380,10]],[[8,0,381,6],[21,0,381,19]],[[8,0,382,6],[12,0,382,10],[13,0,382,11],[14,0,382,12],[15,0,382,13],[16,0,383,5],[17,0,383,6]],[[4,0,384,2],[5,0,384,3]],[[4,0,386,2],[41,0,386,39]],[[4,0,388,2]],[],[],[],[],[],[],[],[],[],[[7,0,398,5]],[[4,0,399,9],[11,0,399,16],[12,0,399,53],[16,0,399,69],[18,0,400,53],[24,0,400,78],[26,0,401,53],[49,0,401,99],[51,0,401,101],[53,0,402,53],[73,0,402,82],[77,0,402,86]],[[8,0,404,4],[12,0,404,8],[32,0,404,28],[36,0,404,32],[40,0,404,36],[44,0,404,40],[64,0,404,60],[65,0,404,61],[71,0,404,67],[76,0,404,72],[77,0,404,73],[79,0,404,75]],[[12,0,405,6],[19,0,405,13],[23,0,405,17],[24,0,405,18],[37,0,405,31],[38,0,405,32],[42,0,405,36],[44,0,405,38],[50,0,405,44],[52,0,405,46],[69,0,405,63],[70,0,405,64],[71,0,405,65],[72,0,405,66],[125,0,405,119]],[[9,0,406,5]],[[8,0,408,4],[14,0,408,10],[19,0,408,15],[22,0,408,18],[26,0,408,22],[27,0,408,23],[50,0,408,46],[51,0,408,47],[55,0,408,51],[57,0,408,53],[63,0,408,59],[65,0,408,61],[85,0,408,81],[87,0,408,83],[104,0,408,100],[105,0,408,101],[106,0,408,102]],[[8,0,409,4],[15,0,409,11],[19,0,409,15],[20,0,409,16],[32,0,409,28],[33,0,409,29],[38,0,409,34],[39,0,409,35],[40,0,409,36]],[[4,0,410,2],[5,0,410,3]],[[4,0,412,2]],[],[],[],[],[],[[7,0,418,5]],[[4,0,419,9],[19,0,419,24],[20,0,419,28],[27,0,419,56],[29,0,419,58],[33,0,419,65],[35,0,419,67],[55,0,419,96],[59,0,419,100]],[[8,0,420,4],[65,0,420,61]],[[8,0,421,4],[14,0,421,10],[19,0,421,15],[22,0,421,30],[32,0,421,40],[33,0,421,41],[37,0,421,45],[38,0,421,46],[40,0,421,48],[41,0,421,49],[50,0,421,58],[51,0,421,59],[52,0,421,60]],[[8,0,423,4],[12,0,423,8],[29,0,423,25],[31,0,423,27]],[[12,0,424,6],[16,0,424,10],[19,0,424,13],[34,0,424,28],[35,0,424,29],[39,0,424,33],[41,0,424,35],[46,0,424,40],[47,0,424,41],[48,0,424,42]],[[9,0,425,5]],[[8,0,427,4],[15,0,427,11],[16,0,427,12],[23,0,427,19],[24,0,427,20],[25,0,427,21],[31,0,427,27],[33,0,427,29],[35,0,427,31]],[[12,0,428,6],[17,0,428,11],[18,0,428,12],[24,0,428,18],[25,0,428,19],[31,0,428,25],[33,0,428,27],[37,0,428,31],[38,0,428,32],[39,0,428,33]],[[8,0,429,4],[9,0,429,5],[10,0,429,6],[11,0,429,7]],[[8,0,431,4],[15,0,431,11],[19,0,431,15],[20,0,431,16],[32,0,431,28],[33,0,431,29],[38,0,431,34],[39,0,431,35],[40,0,431,36]],[[4,0,432,2],[5,0,432,3]],[[4,0,435,2]],[],[],[],[],[],[],[],[],[[7,0,444,5]],[[4,0,445,9],[16,0,445,21],[17,0,445,25],[23,0,445,50],[25,0,446,25],[30,0,446,38],[32,0,447,25],[55,0,447,70],[57,0,447,72],[59,0,448,25],[79,0,448,69]],[[8,0,450,4],[12,0,450,8],[32,0,450,28],[36,0,450,32],[40,0,450,36],[42,0,450,38]],[[12,0,451,6],[32,0,451,26],[35,0,451,29],[55,0,451,74],[56,0,451,75]],[[9,0,452,5]],[[8,0,454,4],[14,0,454,10],[27,0,454,23],[30,0,454,47],[36,0,454,53],[37,0,454,54],[43,0,454,60],[44,0,454,61]],[[8,0,456,4],[15,0,456,11],[19,0,456,15],[20,0,456,16],[33,0,456,29],[34,0,456,30],[40,0,456,36],[42,0,456,38],[62,0,456,58],[63,0,456,59],[64,0,456,60],[68,0,456,64]],[[8,0,457,6],[21,0,457,19]],[[8,0,458,6],[12,0,458,10],[13,0,458,11],[14,0,458,12],[15,0,458,13],[17,0,459,6],[20,0,459,9],[21,0,459,10],[22,0,459,11],[29,0,459,21],[31,0,459,23],[33,0,459,25],[34,0,459,26],[38,0,459,30],[39,0,459,31],[58,0,459,50],[59,0,459,51],[66,0,459,58],[68,0,459,60],[88,0,459,80],[89,0,459,81],[90,0,459,82],[92,0,460,6],[101,0,460,15],[102,0,460,16],[103,0,460,17],[110,0,460,27],[112,0,460,29],[114,0,460,31]],[[12,0,461,8],[19,0,461,15],[23,0,461,19],[24,0,461,20],[28,0,461,24],[29,0,461,25],[36,0,461,32],[38,0,461,34],[51,0,461,47],[53,0,461,49],[73,0,461,69],[75,0,461,71],[80,0,461,76],[82,0,461,78],[87,0,461,83],[88,0,461,84],[89,0,461,85],[93,0,461,89],[94,0,461,91],[120,0,461,117],[121,0,462,10],[129,0,462,18],[130,0,462,19],[137,0,462,26],[138,0,462,27],[140,0,462,29]],[[16,0,463,12],[23,0,463,19],[27,0,463,23],[28,0,463,24],[35,0,463,31],[36,0,463,32],[42,0,463,38],[44,0,463,40],[64,0,463,60],[65,0,463,61],[66,0,463,62],[70,0,463,66],[71,0,464,14],[74,0,464,17],[75,0,464,18],[78,0,464,21],[80,0,464,23],[81,0,464,24],[88,0,464,31],[89,0,464,32],[90,0,464,33],[113,0,464,56],[114,0,465,13],[115,0,465,14]],[[12,0,466,10],[13,0,466,11],[14,0,466,12],[15,0,467,9],[16,0,467,10]],[[8,0,468,6],[9,0,468,7],[10,0,468,8],[12,0,469,6],[22,0,469,16],[23,0,469,17],[26,0,469,20],[27,0,469,21],[29,0,469,23]],[[12,0,470,8],[19,0,470,15],[20,0,470,16],[23,0,470,19],[24,0,470,20],[51,0,470,47],[54,0,470,50],[57,0,470,53],[58,0,470,54],[59,0,470,55]],[[12,0,471,8],[18,0,471,14],[21,0,471,17],[22,0,471,18]],[[8,0,472,6],[9,0,472,7],[10,0,472,8],[12,0,473,6],[16,0,473,10],[17,0,473,11],[18,0,473,12],[19,0,473,13],[20,0,474,5],[21,0,474,6]],[[4,0,476,2],[5,0,476,3]],[[4,0,478,2],[28,0,478,26]],[[4,0,481,2]],[],[],[],[],[],[],[],[],[[7,0,490,5]],[[4,0,491,9],[20,0,491,25],[21,0,491,55],[26,0,491,80],[28,0,492,55],[37,0,492,72],[39,0,493,55],[46,0,493,70],[48,0,494,55],[55,0,494,62],[58,0,494,65],[63,0,494,70]],[[8,0,496,4],[12,0,496,8],[21,0,496,17],[25,0,496,21],[29,0,496,25],[33,0,496,29],[40,0,496,36],[44,0,496,40],[48,0,496,44],[52,0,496,48],[61,0,496,57],[66,0,496,62],[73,0,496,69],[77,0,496,73],[82,0,496,78],[83,0,496,79],[89,0,496,85],[93,0,496,89],[94,0,496,90],[96,0,496,92],[98,0,496,94],[130,0,496,126]],[[12,0,497,6],[19,0,497,13],[21,0,497,15],[23,0,497,17],[24,0,497,18]],[[9,0,498,5]],[[8,0,500,4],[12,0,500,8],[17,0,500,13],[18,0,500,14],[19,0,500,15],[20,0,500,16],[22,0,500,18],[39,0,500,35],[43,0,500,39],[47,0,500,43],[49,0,500,45]],[[12,0,501,6],[18,0,501,12],[23,0,501,17],[26,0,501,39]],[[16,0,502,8],[20,0,502,12],[22,0,502,14],[40,0,502,32]],[[16,0,503,8],[20,0,503,12],[22,0,503,14],[31,0,503,23]],[[16,0,504,8],[23,0,504,15],[25,0,504,17],[124,0,504,116]],[[13,0,505,7],[14,0,505,8]],[[12,0,506,6],[18,0,506,12],[23,0,506,17],[24,0,506,18]],[[9,0,507,5]],[[8,0,509,4],[14,0,509,10],[19,0,509,15],[22,0,509,18],[26,0,509,22],[27,0,509,23],[60,0,509,56],[61,0,509,57],[66,0,509,62],[68,0,509,64],[77,0,509,73],[79,0,509,75],[86,0,509,82],[88,0,509,84],[95,0,509,91],[96,0,509,92],[97,0,509,93]],[[8,0,511,4],[15,0,511,11],[19,0,511,15],[20,0,511,16],[32,0,511,28],[33,0,511,29],[38,0,511,34],[39,0,511,35],[40,0,511,36]],[[4,0,512,2],[5,0,512,3]],[[4,0,514,2]],[],[],[],[],[],[],[],[],[[7,0,523,5]],[[4,0,524,12],[37,0,524,45],[38,0,524,75],[43,0,524,100],[45,0,525,75],[54,0,525,92],[56,0,526,75],[63,0,526,90],[65,0,527,75],[72,0,527,82],[75,0,527,85],[80,0,527,90]],[[8,0,529,4],[14,0,529,10],[25,0,529,21],[28,0,529,24],[32,0,529,28],[33,0,529,29],[36,0,529,32],[37,0,529,33],[46,0,529,42],[48,0,529,44],[55,0,529,51],[56,0,529,52],[57,0,529,53]],[[8,0,530,4],[14,0,530,10],[19,0,530,15],[22,0,530,30],[32,0,530,40],[33,0,530,41],[37,0,530,45],[38,0,530,46],[40,0,530,48],[41,0,530,49],[50,0,530,58],[51,0,530,59],[52,0,530,60]],[[8,0,532,4],[12,0,532,8],[21,0,532,17],[25,0,532,21],[29,0,532,25],[33,0,532,29],[40,0,532,36],[44,0,532,40],[48,0,532,44],[52,0,532,48],[61,0,532,57],[66,0,532,62],[73,0,532,69],[75,0,532,71],[77,0,532,73],[109,0,532,105]],[[12,0,533,6],[19,0,533,13],[24,0,533,18],[25,0,533,19]],[[9,0,534,5]],[[8,0,536,4],[12,0,536,8],[21,0,536,37],[22,0,536,38]],[[8,0,538,4],[12,0,538,8],[19,0,538,15],[21,0,538,17]],[[12,0,539,6],[21,0,539,15],[24,0,539,18],[30,0,539,24],[31,0,539,25],[37,0,539,31],[38,0,539,32],[40,0,539,34],[42,0,539,36],[47,0,539,41],[48,0,539,42],[49,0,539,43]],[[9,0,540,5]],[[13,0,540,11]],[[12,0,541,6],[21,0,541,15],[24,0,541,18],[29,0,541,23],[30,0,541,24]],[[9,0,542,5]],[[8,0,544,4],[23,0,544,19],[24,0,544,23],[33,0,544,32],[35,0,544,34],[44,0,544,43],[46,0,544,45],[53,0,544,52],[54,0,544,53],[55,0,544,54]],[[8,0,546,4],[14,0,546,10],[31,0,546,27],[34,0,546,50],[43,0,546,59],[44,0,546,60],[49,0,546,65],[50,0,546,66],[61,0,546,77],[62,0,546,78],[63,0,546,79]],[[8,0,548,4],[12,0,548,8],[13,0,548,9],[16,0,548,12],[27,0,548,23],[28,0,548,24]],[[8,0,549,4],[13,0,549,9],[19,0,549,15],[23,0,549,19],[27,0,549,23],[44,0,549,40],[46,0,549,42]],[[12,0,550,6],[16,0,550,10],[17,0,550,11],[24,0,550,18],[26,0,550,20],[28,0,550,22],[103,0,550,97]],[[16,0,551,8],[20,0,551,12],[21,0,551,13],[26,0,551,18],[29,0,551,21],[30,0,551,22],[31,0,551,23]],[[13,0,552,7]],[[12,0,553,6],[18,0,553,12],[21,0,553,15],[24,0,553,18],[38,0,553,32],[39,0,553,33],[43,0,553,37],[44,0,553,38],[61,0,553,55],[62,0,553,56],[66,0,553,60],[68,0,553,62],[72,0,553,66],[73,0,553,67],[75,0,553,69],[76,0,553,70],[85,0,553,79],[86,0,553,101],[87,0,553,102]],[[12,0,554,6],[17,0,554,11],[18,0,554,12],[24,0,554,18],[25,0,554,19],[28,0,554,22],[30,0,554,24],[32,0,554,25],[37,0,554,30],[39,0,554,32],[40,0,554,33],[42,0,554,34],[43,0,554,35],[44,0,554,36]],[[12,0,555,6],[13,0,555,7],[15,0,555,9],[16,0,555,10]],[[9,0,556,5]],[[8,0,558,4],[15,0,558,11],[20,0,558,16],[21,0,558,17]],[[4,0,559,2],[5,0,559,3]],[[4,0,561,2]],[],[],[],[],[],[],[[7,0,568,5]],[[4,0,569,9],[29,0,569,34],[30,0,569,64],[35,0,569,89],[37,0,570,64],[50,0,570,85],[52,0,571,64],[75,0,571,109],[77,0,571,111],[79,0,572,64],[89,0,572,83],[94,0,572,88]],[[8,0,574,4],[12,0,574,8],[21,0,574,37],[22,0,574,38]],[[8,0,576,4],[12,0,576,8],[19,0,576,15],[21,0,576,17]],[[12,0,577,6],[21,0,577,15],[24,0,577,18],[30,0,577,24],[31,0,577,25],[37,0,577,31],[38,0,577,32],[40,0,577,34],[42,0,577,36],[47,0,577,41],[48,0,577,42],[49,0,577,43]],[[9,0,578,5]],[[13,0,578,11]],[[12,0,579,6],[21,0,579,15],[24,0,579,18],[29,0,579,23],[30,0,579,24]],[[9,0,580,5]],[[8,0,582,4],[14,0,582,10],[26,0,582,22],[29,0,582,25],[38,0,582,34],[39,0,582,35],[52,0,582,48],[53,0,582,49],[54,0,582,50]],[[8,0,584,4],[82,0,584,78]],[[8,0,585,4],[15,0,585,11],[19,0,585,15],[20,0,585,16],[35,0,585,31],[36,0,585,32],[48,0,585,44],[49,0,585,45],[66,0,585,62],[67,0,585,63],[70,0,585,66],[72,0,585,68],[92,0,585,88],[93,0,585,89],[94,0,585,90],[98,0,585,94],[99,0,586,6],[102,0,586,9],[103,0,586,10],[104,0,586,11],[109,0,586,16],[111,0,586,18],[113,0,586,20]],[[12,0,587,8],[101,0,587,97]],[[12,0,588,8],[21,0,588,17],[22,0,588,18],[26,0,588,22],[27,0,588,23],[31,0,588,27],[32,0,588,28],[34,0,588,30],[35,0,588,31],[39,0,588,35],[40,0,588,36],[45,0,588,41],[46,0,588,42],[47,0,588,43],[48,0,588,44],[85,0,588,81]],[[12,0,589,8],[21,0,589,17],[22,0,589,18],[28,0,589,24],[29,0,589,25],[42,0,589,38],[44,0,589,40],[45,0,589,41],[46,0,589,42],[47,0,589,43]],[[12,0,591,8],[16,0,591,12],[17,0,591,13],[54,0,591,50],[55,0,591,54],[64,0,591,63],[66,0,591,65],[71,0,591,70],[72,0,591,71],[73,0,591,72]],[[12,0,593,8],[19,0,593,15],[24,0,593,20],[25,0,593,21]],[[8,0,594,6],[9,0,594,7],[10,0,594,8],[12,0,596,6],[21,0,596,15],[22,0,596,16],[23,0,596,17],[28,0,596,22],[30,0,596,24],[32,0,596,26],[33,0,596,27],[37,0,596,31],[38,0,596,32],[50,0,596,44],[51,0,596,45],[56,0,596,50],[57,0,596,51],[58,0,596,52],[59,0,597,5],[60,0,597,6]],[[4,0,598,2],[5,0,598,3]],[[4,0,600,2]],[],[],[],[],[],[],[[7,0,607,5]],[[4,0,608,9],[30,0,608,35],[31,0,608,65],[36,0,608,90],[38,0,609,65],[53,0,609,90],[55,0,610,65],[78,0,610,110],[80,0,610,112],[82,0,611,65],[92,0,611,84],[97,0,611,89]],[[8,0,613,4],[12,0,613,8],[21,0,613,37],[22,0,613,38]],[[8,0,615,4],[12,0,615,8],[19,0,615,15],[21,0,615,17]],[[12,0,616,6],[21,0,616,15],[24,0,616,18],[30,0,616,24],[31,0,616,25],[37,0,616,31],[38,0,616,32],[40,0,616,34],[42,0,616,36],[47,0,616,41],[48,0,616,42],[49,0,616,43]],[[9,0,617,5]],[[13,0,617,11]],[[12,0,618,6],[21,0,618,15],[24,0,618,18],[29,0,618,23],[30,0,618,24]],[[9,0,619,5]],[[8,0,621,4],[17,0,621,13],[18,0,621,14],[22,0,621,18],[23,0,621,19],[27,0,621,23],[28,0,621,24],[30,0,621,26],[31,0,621,27],[35,0,621,31],[36,0,621,32],[41,0,621,37],[42,0,621,38],[43,0,621,39],[44,0,621,40],[81,0,621,77]],[[8,0,623,4],[14,0,623,10],[27,0,623,23],[30,0,623,26],[39,0,623,35],[40,0,623,36],[46,0,623,42],[47,0,623,43],[48,0,623,44],[52,0,623,48],[54,0,623,50],[55,0,623,51],[57,0,623,53],[59,0,623,55]],[[12,0,624,6],[19,0,624,13],[34,0,624,28],[35,0,624,29],[44,0,624,38],[45,0,624,39],[47,0,624,41],[48,0,624,42],[50,0,624,44],[51,0,624,45],[53,0,624,47],[58,0,624,52],[59,0,624,53],[60,0,624,54],[65,0,624,59],[66,0,624,60],[67,0,624,61],[68,0,624,62]],[[8,0,625,4],[9,0,625,5],[10,0,625,6],[11,0,625,7]],[[8,0,627,4],[61,0,627,57]],[[8,0,628,4],[53,0,628,49]],[[8,0,629,4],[23,0,629,19],[24,0,629,20],[28,0,629,24],[30,0,629,26],[31,0,629,27]],[[8,0,630,4],[13,0,630,9],[17,0,630,13],[18,0,630,14],[21,0,630,17],[36,0,630,32],[37,0,630,33],[43,0,630,39],[46,0,630,42],[47,0,630,43],[49,0,630,45],[50,0,630,46],[54,0,630,50],[55,0,630,51],[57,0,630,53],[58,0,630,54],[60,0,630,56],[62,0,630,58]],[[12,0,631,6],[21,0,631,15],[22,0,631,16],[28,0,631,22],[29,0,631,23],[44,0,631,38],[45,0,631,39],[46,0,631,40],[47,0,631,41],[49,0,631,43],[50,0,631,44],[51,0,631,45],[52,0,631,46]],[[9,0,632,5]],[[8,0,634,4],[14,0,634,10],[25,0,634,21],[28,0,634,59],[30,0,634,61],[31,0,634,62]],[[8,0,636,4],[91,0,636,87]],[[8,0,637,4],[21,0,637,17],[22,0,637,18],[29,0,637,25],[30,0,637,26],[42,0,637,38],[43,0,637,39],[45,0,637,41]],[[12,0,639,6],[18,0,639,12],[22,0,639,16],[25,0,639,19],[29,0,639,23],[30,0,639,24],[56,0,639,50],[57,0,639,51],[69,0,639,63],[70,0,639,64],[87,0,639,81],[88,0,639,82],[91,0,639,85],[93,0,639,87],[113,0,639,107],[114,0,639,108],[115,0,639,109],[119,0,639,113],[120,0,640,8],[124,0,640,12],[125,0,640,13],[126,0,640,14],[127,0,640,15],[128,0,641,7],[129,0,641,8]],[[12,0,642,6],[23,0,642,17],[24,0,642,18],[28,0,642,22],[29,0,642,23],[33,0,642,27],[34,0,642,28],[35,0,642,29]],[[8,0,643,4],[9,0,643,5],[10,0,643,6],[11,0,643,7]],[[8,0,646,4],[15,0,646,11],[23,0,646,19],[24,0,646,20],[35,0,646,31],[36,0,646,32],[37,0,646,33],[41,0,646,37],[42,0,647,6],[46,0,647,10],[47,0,647,11],[48,0,647,12],[49,0,647,13],[51,0,648,6],[54,0,648,9],[55,0,648,10],[56,0,648,11],[69,0,648,24],[71,0,648,26],[73,0,648,28]],[[12,0,649,8],[78,0,649,74]],[[12,0,650,8],[16,0,650,12],[23,0,650,19],[26,0,650,43],[28,0,650,45],[29,0,650,46]],[[12,0,652,8],[25,0,652,21],[26,0,652,22],[33,0,652,29],[34,0,652,30],[38,0,652,34],[39,0,652,35],[41,0,652,37]],[[16,0,653,10],[23,0,653,17],[26,0,653,20],[33,0,653,27],[34,0,653,28],[40,0,653,34],[41,0,653,35],[45,0,653,39],[46,0,653,40],[47,0,653,41]],[[12,0,654,8],[13,0,654,9],[14,0,654,10],[15,0,654,11]],[[12,0,656,8],[19,0,656,15],[26,0,656,22],[27,0,656,23]],[[8,0,657,6],[9,0,657,7],[10,0,657,8],[12,0,658,6],[15,0,658,9],[16,0,658,10],[17,0,658,11],[24,0,658,53],[26,0,658,55],[28,0,658,57],[29,0,658,58],[33,0,658,62],[34,0,658,63],[62,0,658,91],[63,0,658,92],[70,0,658,99],[71,0,658,100],[72,0,658,101],[74,0,659,6],[77,0,659,9],[78,0,659,10],[79,0,659,11],[84,0,659,28],[86,0,659,30],[88,0,659,32],[89,0,659,33],[93,0,659,37],[94,0,659,38],[131,0,659,75],[132,0,659,79],[141,0,659,88],[143,0,659,90],[148,0,659,95],[149,0,659,96],[150,0,659,97],[152,0,660,6],[161,0,660,15],[162,0,660,16],[163,0,660,17],[168,0,660,22],[170,0,660,24],[172,0,660,26],[173,0,660,27],[177,0,660,31],[178,0,660,32],[190,0,660,44],[191,0,660,45],[196,0,660,50],[197,0,660,51],[198,0,660,52],[199,0,661,5],[200,0,661,6]],[[4,0,662,2],[5,0,662,3]],[[4,0,664,2]],[],[],[],[],[],[],[],[[7,0,672,5]],[[4,0,673,12],[41,0,673,49],[42,0,674,4],[47,0,674,29],[49,0,675,4],[57,0,675,24],[67,0,675,34],[68,0,675,35],[72,0,675,39],[73,0,675,40],[75,0,675,42],[76,0,675,43],[85,0,675,52],[86,0,675,53]],[[8,0,678,4],[13,0,678,9],[14,0,678,10],[21,0,678,17],[22,0,678,18],[23,0,678,19],[27,0,678,23],[29,0,678,25],[34,0,678,30],[36,0,678,32],[38,0,678,34]],[[12,0,679,6],[16,0,679,10],[20,0,679,14],[21,0,679,15],[26,0,679,20],[31,0,679,25],[36,0,679,30],[38,0,679,32]],[[16,0,680,8],[20,0,680,12],[21,0,680,13],[26,0,680,18],[29,0,680,21],[34,0,680,26],[35,0,680,27],[36,0,680,28],[111,0,680,103]],[[16,0,681,8],[22,0,681,14],[25,0,681,17],[28,0,681,20],[42,0,681,34],[43,0,681,35],[47,0,681,39],[48,0,681,40],[65,0,681,57],[66,0,681,58],[70,0,681,62],[72,0,681,64],[76,0,681,68],[77,0,681,69],[79,0,681,71],[80,0,681,72],[89,0,681,81],[90,0,681,103],[91,0,681,104]],[[16,0,682,8],[21,0,682,13],[22,0,682,14],[28,0,682,20],[29,0,682,21],[32,0,682,24],[34,0,682,26],[36,0,682,27],[41,0,682,32],[43,0,682,33],[44,0,682,34],[45,0,682,35]],[[13,0,683,7]],[[8,0,684,4],[9,0,684,5],[10,0,684,6],[11,0,684,7]],[[8,0,686,4],[15,0,686,11],[20,0,686,16],[21,0,686,17]],[[4,0,687,2],[5,0,687,3]],[[4,0,689,9],[29,0,689,34],[30,0,690,4],[43,0,690,37],[45,0,691,4],[57,0,691,36],[59,0,692,4],[72,0,692,25],[74,0,693,4],[86,0,693,24],[88,0,694,4],[104,0,694,28],[106,0,695,4],[137,0,695,60],[139,0,696,4],[170,0,696,35],[173,0,696,38],[177,0,696,42],[179,0,697,4],[186,0,697,11],[189,0,697,14],[194,0,697,19]],[[8,0,699,4],[14,0,699,10],[19,0,699,15],[22,0,699,30],[26,0,699,34],[27,0,699,35],[64,0,699,72],[65,0,699,73],[78,0,699,86],[80,0,700,6],[92,0,700,18],[94,0,701,6],[107,0,701,19],[109,0,702,6],[121,0,702,18],[123,0,703,6],[139,0,703,22],[141,0,704,6],[172,0,704,37],[174,0,705,6],[205,0,705,37],[207,0,706,6],[214,0,706,13],[215,0,706,14],[216,0,706,15]],[[8,0,708,4],[15,0,708,11],[19,0,708,15],[20,0,708,16],[32,0,708,28],[33,0,708,29],[38,0,708,34],[39,0,708,35],[40,0,708,36]],[[4,0,709,2],[5,0,709,3]],[[4,0,712,2],[43,0,712,41]],[[4,0,714,2]],[],[],[],[],[[7,0,719,5]],[[4,0,720,9],[11,0,720,16],[12,0,720,17],[18,0,720,42],[20,0,720,44],[43,0,720,89],[45,0,720,91]],[[8,0,722,4],[12,0,722,8],[32,0,722,28],[36,0,722,32],[40,0,722,36],[44,0,722,40],[64,0,722,60],[65,0,722,61],[71,0,722,67],[76,0,722,72],[77,0,722,73],[79,0,722,75]],[[12,0,723,6],[54,0,723,48]],[[12,0,724,6],[19,0,724,13],[23,0,724,17],[24,0,724,18],[26,0,724,20],[27,0,724,21],[33,0,724,27],[34,0,724,28],[40,0,724,34],[41,0,724,35],[42,0,724,36]],[[9,0,725,5]],[[8,0,727,4],[15,0,727,11],[19,0,727,15],[20,0,727,16],[46,0,727,42],[47,0,727,43],[53,0,727,49],[55,0,727,51],[75,0,727,71],[76,0,727,72],[77,0,727,73],[81,0,727,77],[82,0,728,6],[91,0,728,15],[92,0,728,16],[93,0,728,17],[103,0,728,62],[105,0,728,64],[107,0,728,66],[108,0,728,67],[112,0,728,71],[113,0,728,72],[134,0,728,93],[135,0,728,94],[145,0,728,104],[146,0,728,105],[147,0,728,106],[148,0,733,5],[149,0,733,6]],[[4,0,734,2],[5,0,734,3]],[[4,0,736,2]],[],[],[],[],[],[[7,0,742,5]],[[4,0,743,9],[19,0,743,24],[20,0,743,25],[26,0,743,50],[28,0,744,25],[51,0,744,70],[53,0,744,72],[55,0,745,25],[63,0,745,45],[73,0,745,55],[74,0,745,56],[78,0,745,60],[79,0,745,61],[81,0,745,63],[82,0,745,64],[91,0,745,73],[92,0,745,74]],[[8,0,747,4],[12,0,747,8],[32,0,747,28],[36,0,747,32],[40,0,747,36],[44,0,747,40],[64,0,747,60],[65,0,747,61],[71,0,747,67],[76,0,747,72],[77,0,747,73],[79,0,747,75]],[[12,0,748,6],[54,0,748,48]],[[12,0,749,6],[17,0,749,11],[18,0,749,12],[24,0,749,18],[25,0,749,19],[31,0,749,25],[32,0,749,26],[33,0,749,27]],[[12,0,750,6],[19,0,750,13],[21,0,750,15],[22,0,750,16],[27,0,750,21],[28,0,750,22],[29,0,750,23]],[[9,0,751,5]],[[8,0,753,4],[15,0,753,11],[19,0,753,15],[20,0,753,16],[46,0,753,42],[47,0,753,43],[53,0,753,49],[55,0,753,51],[75,0,753,71],[76,0,753,72],[77,0,753,73],[81,0,753,77],[82,0,754,6],[85,0,754,9],[86,0,754,10],[87,0,754,11],[94,0,754,53],[96,0,754,55],[98,0,754,57],[99,0,754,58],[103,0,754,62],[104,0,754,63],[132,0,754,91],[133,0,754,92],[140,0,754,99],[141,0,754,100],[142,0,754,101],[144,0,755,6],[148,0,755,10],[149,0,755,11],[150,0,755,12],[151,0,755,13],[152,0,756,5],[153,0,756,6]],[[4,0,757,2],[5,0,757,3]],[[4,0,759,9],[26,0,759,31],[27,0,759,32],[35,0,759,50]],[[8,0,760,4],[14,0,760,10],[21,0,760,17],[24,0,761,6],[32,0,761,14],[33,0,761,15],[36,0,761,18],[37,0,761,19],[41,0,761,23],[42,0,761,24],[44,0,761,26],[45,0,761,27],[59,0,761,41],[60,0,761,42],[64,0,761,46],[66,0,761,48],[70,0,761,52],[71,0,761,53],[73,0,761,55],[74,0,761,56],[83,0,761,65],[84,0,761,87],[85,0,761,88],[86,0,761,89]],[[8,0,763,4],[15,0,763,11],[19,0,763,15],[20,0,763,16],[41,0,763,37],[42,0,763,38],[49,0,763,45],[50,0,763,46],[51,0,763,47]],[[4,0,764,2],[5,0,764,3]],[[4,0,766,2]],[],[],[],[],[[7,0,771,5]],[[4,0,772,9],[19,0,772,24],[20,0,772,25],[27,0,772,53],[29,0,772,55],[52,0,772,100],[54,0,772,102]],[[8,0,774,4],[12,0,774,8],[32,0,774,28],[36,0,774,32],[40,0,774,36],[44,0,774,40],[64,0,774,60],[65,0,774,61],[71,0,774,67],[76,0,774,72],[77,0,774,73],[79,0,774,75]],[[12,0,775,6],[19,0,775,13],[23,0,775,17],[24,0,775,18],[45,0,775,39],[46,0,775,40],[53,0,775,47],[54,0,775,48],[55,0,775,49]],[[9,0,776,5]],[[8,0,778,4],[14,0,778,10],[26,0,778,22],[29,0,778,49],[31,0,778,51],[32,0,778,52]],[[8,0,780,4],[15,0,780,11],[16,0,780,12],[23,0,780,19],[24,0,780,20],[30,0,780,26],[31,0,780,27],[33,0,780,29]],[[12,0,781,6],[18,0,781,12],[26,0,781,20],[29,0,781,23],[33,0,781,27],[34,0,781,28],[60,0,781,54],[61,0,781,55],[67,0,781,61],[69,0,781,63],[89,0,781,83],[90,0,781,84],[91,0,781,85]],[[12,0,782,6],[24,0,782,18],[25,0,782,19],[29,0,782,23],[30,0,782,24],[38,0,782,32],[39,0,782,33],[40,0,782,34]],[[8,0,783,4],[9,0,783,5],[10,0,783,6],[11,0,783,7]],[[8,0,785,4],[15,0,785,11],[28,0,785,24],[29,0,785,25],[41,0,785,37],[42,0,785,38],[43,0,785,39],[47,0,785,43]],[[8,0,786,6],[44,0,786,42]],[[8,0,787,6],[11,0,787,9],[12,0,787,10],[13,0,787,11],[18,0,787,23],[20,0,787,25],[22,0,787,27]],[[12,0,788,8],[16,0,788,12],[30,0,788,26],[33,0,788,50],[35,0,788,52],[36,0,788,53]],[[12,0,789,8],[17,0,789,13],[18,0,789,14],[25,0,789,21],[26,0,789,22],[30,0,789,26],[31,0,789,27],[33,0,789,29]],[[16,0,790,10],[30,0,790,24],[33,0,790,27],[47,0,790,41],[48,0,790,42],[54,0,790,48],[55,0,790,49],[59,0,790,53],[60,0,790,54],[61,0,790,55]],[[12,0,791,8],[13,0,791,9],[14,0,791,10],[15,0,791,11]],[[12,0,792,8],[19,0,792,15],[33,0,792,29],[34,0,792,30]],[[8,0,793,6],[9,0,793,7],[10,0,793,8]],[[8,0,794,6],[44,0,794,42]],[[8,0,795,6],[17,0,795,15],[18,0,795,16],[19,0,795,17],[29,0,795,48],[31,0,795,50],[33,0,795,52],[34,0,795,53],[38,0,795,57],[39,0,795,58],[60,0,795,79],[61,0,795,80],[71,0,795,90],[72,0,795,91],[73,0,795,92],[74,0,800,5],[75,0,800,6]],[[4,0,801,2],[5,0,801,3]],[[4,0,803,2]],[],[],[],[],[],[],[[7,0,810,5]],[[4,0,811,9],[21,0,811,26],[22,0,811,27],[35,0,811,61],[37,0,811,63],[60,0,811,108],[62,0,811,110]],[[8,0,812,4],[15,0,812,11],[19,0,812,15],[20,0,812,16],[59,0,812,55],[60,0,812,56],[73,0,812,69],[75,0,812,71],[95,0,812,91],[96,0,812,92],[97,0,812,93],[101,0,812,97],[102,0,813,6],[111,0,813,15],[112,0,813,16],[119,0,813,23],[120,0,813,24],[122,0,813,26],[123,0,813,27],[127,0,813,31],[128,0,813,32],[143,0,813,47],[144,0,813,48],[151,0,813,55],[152,0,813,56],[153,0,813,57],[154,0,814,5],[155,0,814,6],[159,0,814,10],[160,0,815,6],[164,0,815,10],[165,0,815,11],[166,0,815,12],[167,0,815,13],[168,0,816,5],[169,0,816,6]],[[4,0,817,2],[5,0,817,3]],[[4,0,820,2]],[],[],[],[],[],[[7,0,826,5]],[[4,0,827,9],[20,0,827,25],[21,0,827,26],[28,0,827,41],[30,0,827,43],[53,0,827,88],[55,0,827,90]],[[8,0,828,4],[14,0,828,10],[20,0,828,16],[23,0,828,19],[37,0,828,33],[38,0,828,34],[45,0,828,41],[47,0,828,43],[51,0,828,47],[52,0,828,48],[54,0,828,50],[55,0,828,51],[64,0,828,60],[65,0,828,82],[66,0,828,83]],[[8,0,829,4],[15,0,829,11],[19,0,829,15],[20,0,829,16],[27,0,829,23],[28,0,829,24],[34,0,829,30],[36,0,829,32],[56,0,829,52],[57,0,829,53],[58,0,829,54]],[[4,0,830,2],[5,0,830,3]],[[4,0,832,2]],[],[],[],[],[],[],[[7,0,839,5]],[[4,0,840,9],[15,0,840,20],[16,0,840,24],[20,0,840,41],[22,0,840,43],[45,0,840,88],[47,0,840,90]],[[8,0,842,4],[14,0,842,10],[21,0,842,17],[24,0,842,20],[28,0,842,24],[29,0,842,25],[58,0,842,54],[59,0,842,55],[63,0,842,59],[65,0,842,61],[85,0,842,81],[86,0,842,82],[87,0,842,83]],[[8,0,844,4],[15,0,844,11],[19,0,844,15],[20,0,844,16],[41,0,844,37],[42,0,844,38],[49,0,844,45],[50,0,844,46],[51,0,844,47],[55,0,844,51]],[[8,0,845,6],[105,0,845,103]],[[8,0,846,6],[73,0,846,71]],[[8,0,847,6],[32,0,847,30]],[[8,0,848,6],[14,0,848,12]],[[8,0,849,6],[12,0,849,10],[13,0,849,11],[14,0,849,12],[15,0,849,13],[16,0,850,5],[17,0,850,6]],[[4,0,851,2],[5,0,851,3]],[[4,0,876,9],[23,0,876,28],[24,0,876,32],[28,0,876,80],[30,0,877,32],[53,0,877,78],[55,0,877,80],[57,0,878,32],[84,0,878,69],[86,0,878,71]],[[8,0,880,4],[99,0,880,95]],[[8,0,881,4],[40,0,881,36]],[[8,0,883,4],[12,0,883,8],[17,0,883,13],[18,0,883,14],[25,0,883,21],[26,0,883,22],[30,0,883,26],[31,0,883,27],[33,0,883,29]],[[12,0,885,6],[18,0,885,12],[28,0,885,22],[31,0,885,35],[33,0,885,37],[34,0,885,38]],[[12,0,887,6],[16,0,887,10],[17,0,887,11],[24,0,887,18],[25,0,887,19],[26,0,887,20],[27,0,887,21],[29,0,887,23]],[[16,0,888,8],[26,0,888,18],[27,0,888,19],[31,0,888,23],[32,0,889,10],[36,0,889,14],[37,0,889,15],[68,0,889,46],[69,0,889,47],[70,0,889,48],[72,0,889,50],[92,0,889,70],[94,0,889,72],[118,0,889,96],[119,0,889,102],[120,0,890,9],[121,0,890,10]],[[12,0,891,6],[13,0,891,7],[14,0,891,8],[15,0,891,9]],[[12,0,893,6],[19,0,893,13],[29,0,893,23],[30,0,893,24]],[[9,0,895,5]],[[13,0,895,11]],[[12,0,896,6],[19,0,896,13],[23,0,896,17],[24,0,896,18],[55,0,896,49],[56,0,896,50],[60,0,896,54],[62,0,896,56],[82,0,896,76],[84,0,896,78],[108,0,896,102],[109,0,896,108],[110,0,896,109]],[[9,0,897,5]],[[4,0,898,2],[5,0,898,3]],[[4,0,901,2],[54,0,901,52]],[[4,0,903,2]],[],[],[],[],[],[],[],[[7,0,911,5]],[[4,0,912,12],[23,0,912,31],[24,0,912,35],[30,0,912,65],[32,0,913,35],[51,0,913,73],[68,0,913,90],[69,0,913,91],[88,0,913,110]],[[8,0,916,4],[15,0,916,11],[19,0,916,15],[20,0,916,16],[22,0,916,18],[23,0,916,19],[26,0,916,22],[27,0,916,23],[33,0,916,29],[34,0,916,30],[35,0,916,31],[39,0,916,35],[40,0,917,6],[43,0,917,9],[44,0,917,10],[45,0,917,11],[53,0,917,37],[55,0,917,39],[57,0,917,41]],[[12,0,918,8],[16,0,918,12],[17,0,918,13],[25,0,918,21],[26,0,918,22],[32,0,918,28],[36,0,918,32],[52,0,918,48],[57,0,918,53],[74,0,918,70],[75,0,918,71],[94,0,918,90],[96,0,918,92]],[[16,0,919,10],[22,0,919,16],[27,0,919,21],[30,0,919,43]],[[20,0,920,12],[24,0,920,16],[26,0,920,18],[44,0,920,36]],[[20,0,921,12],[24,0,921,16],[26,0,921,18],[37,0,921,29]],[[20,0,922,12],[27,0,922,19],[29,0,922,21],[100,0,922,92]],[[20,0,923,12],[26,0,923,18]],[[17,0,924,11],[18,0,924,12]],[[16,0,925,10],[22,0,925,16],[27,0,925,21],[28,0,925,22]],[[13,0,926,9]],[[8,0,927,6],[9,0,927,7],[10,0,927,8],[12,0,929,6],[18,0,929,12],[19,0,929,13],[20,0,929,14],[28,0,929,40],[30,0,929,42],[32,0,929,44]],[[12,0,930,8],[19,0,930,15],[20,0,930,16],[21,0,930,17],[29,0,930,25],[30,0,930,26],[36,0,930,32],[38,0,930,34],[42,0,930,38],[58,0,930,54],[63,0,930,59],[80,0,930,76],[81,0,930,77],[87,0,930,83],[88,0,930,84],[89,0,930,85]],[[8,0,931,6],[9,0,931,7],[10,0,931,8],[12,0,933,6],[15,0,933,9],[16,0,933,10],[17,0,933,11],[25,0,933,37],[27,0,933,39],[29,0,933,41]],[[12,0,935,8],[16,0,935,12],[24,0,935,20],[25,0,935,21],[31,0,935,27],[35,0,935,31],[51,0,935,47],[56,0,935,52],[73,0,935,69],[74,0,935,70],[93,0,935,89],[95,0,935,91]],[[16,0,936,10],[22,0,936,16],[26,0,936,20],[29,0,936,23],[37,0,936,31],[38,0,936,32],[42,0,936,36],[44,0,936,43],[45,0,936,44]],[[16,0,938,10],[22,0,938,16],[39,0,938,33],[42,0,938,58]],[[20,0,939,12],[22,0,939,14],[24,0,939,16],[32,0,939,24],[33,0,939,25],[35,0,939,27]],[[20,0,940,12],[23,0,940,15],[25,0,940,17],[33,0,940,25],[34,0,940,26],[37,0,940,53]],[[20,0,941,12],[24,0,941,16],[26,0,941,18],[32,0,941,24],[33,0,941,25],[37,0,941,29]],[[20,0,942,12],[28,0,942,20],[30,0,942,22],[38,0,942,30],[39,0,942,31],[45,0,942,37],[47,0,942,39]],[[20,0,943,12],[36,0,943,28],[38,0,943,30],[46,0,943,38],[47,0,943,39],[55,0,943,47]],[[17,0,944,11],[18,0,944,12]],[[16,0,946,10],[23,0,946,17],[25,0,946,18],[28,0,946,21],[32,0,946,25],[34,0,946,27],[51,0,946,44],[53,0,946,60],[54,0,946,61]],[[13,0,948,9]],[[17,0,948,15],[21,0,948,19],[37,0,948,35],[42,0,948,40],[59,0,948,57],[60,0,948,58],[71,0,948,69],[73,0,948,71],[75,0,948,73],[98,0,948,96]],[[16,0,949,10],[23,0,949,17],[27,0,949,21],[28,0,949,22]],[[13,0,950,9]],[[12,0,951,8],[19,0,951,15],[23,0,951,19],[24,0,951,20]],[[8,0,952,6],[9,0,952,7],[10,0,952,8],[12,0,953,6],[15,0,953,9],[16,0,953,10],[17,0,953,11],[21,0,953,15],[23,0,953,17],[25,0,953,19]],[[12,0,954,8],[16,0,954,12],[20,0,954,16],[24,0,954,20],[28,0,954,24],[30,0,954,26]],[[16,0,955,10],[23,0,955,17],[45,0,955,39],[46,0,955,40],[50,0,955,60],[51,0,955,61],[52,0,955,62]],[[13,0,956,9]],[[17,0,956,15]],[[16,0,957,10],[23,0,957,17],[27,0,957,21],[28,0,957,22]],[[13,0,958,9]],[[8,0,959,6],[9,0,959,7],[10,0,959,8],[11,0,960,32],[12,0,960,33]],[[4,0,961,2],[5,0,961,3]],[[4,0,963,2]],[],[],[],[],[],[],[[7,0,970,5]],[[4,0,971,12],[30,0,971,38],[31,0,971,42],[44,0,971,81]],[[8,0,972,4]],[],[],[[11,0,975,7]],[[8,0,976,4],[15,0,976,11],[19,0,976,15],[20,0,976,16],[22,0,976,18],[23,0,976,19],[33,0,976,29],[34,0,976,30],[47,0,976,43],[48,0,976,44],[49,0,976,45],[53,0,976,49],[54,0,977,6],[57,0,977,9],[58,0,977,10],[59,0,977,11],[63,0,977,33],[65,0,977,35],[67,0,977,37]],[[12,0,978,8],[19,0,978,15],[23,0,978,19],[24,0,978,20],[28,0,978,24],[29,0,978,25],[32,0,978,28],[33,0,978,29],[41,0,978,37],[42,0,978,38],[44,0,978,40]],[[16,0,979,10],[22,0,979,16],[26,0,979,20],[29,0,979,23],[37,0,979,31],[38,0,979,32],[42,0,979,36],[44,0,979,43],[45,0,979,44]],[[16,0,981,10],[22,0,981,16],[24,0,981,18],[27,0,981,21],[35,0,981,29],[36,0,981,30],[38,0,981,32],[39,0,981,33]],[[16,0,982,10],[22,0,982,16],[25,0,982,19],[28,0,982,22],[36,0,982,30],[37,0,982,31],[40,0,982,58],[41,0,982,59]],[[16,0,983,10],[22,0,983,16],[26,0,983,20],[29,0,983,23],[32,0,983,26],[33,0,983,27],[37,0,983,31],[38,0,983,32]],[[16,0,984,10],[22,0,984,16],[38,0,984,32],[41,0,984,35],[49,0,984,43],[50,0,984,44],[58,0,984,52],[59,0,984,53]],[[16,0,986,10],[22,0,986,16],[39,0,986,33],[42,0,986,58]],[[20,0,987,12],[22,0,987,14]],[[20,0,988,12],[24,0,988,16]],[[20,0,989,12],[23,0,989,15]],[[20,0,990,12],[36,0,990,28]],[[20,0,991,12],[28,0,991,20],[30,0,991,22],[34,0,991,26]],[[17,0,992,11],[18,0,992,12]],[[16,0,994,10],[23,0,994,17],[25,0,994,18],[28,0,994,21],[32,0,994,25],[34,0,994,27],[51,0,994,44],[53,0,994,60],[54,0,994,61]],[[12,0,995,8],[13,0,995,9],[14,0,995,10],[15,0,995,11]],[[8,0,996,6],[9,0,996,7],[10,0,996,8],[12,0,997,6],[15,0,997,9],[16,0,997,10],[17,0,997,11],[22,0,997,36],[24,0,997,38],[26,0,997,40],[27,0,997,41],[32,0,997,46],[33,0,997,47],[36,0,997,50],[37,0,997,51],[41,0,997,55],[42,0,997,56],[44,0,997,58]],[[12,0,998,8],[34,0,998,30],[35,0,998,31],[39,0,998,35],[40,0,998,36],[41,0,998,37]],[[12,0,999,8],[19,0,999,15],[23,0,999,19],[24,0,999,20]],[[8,0,1000,6],[9,0,1000,7],[10,0,1000,8],[11,0,1000,9],[12,0,1001,39],[13,0,1001,40]],[[4,0,1002,2],[5,0,1002,3]],[[4,0,1004,2]],[],[],[],[],[],[],[],[[7,0,1012,5]],[[4,0,1013,12],[28,0,1013,36],[29,0,1014,4],[33,0,1014,21],[35,0,1015,4],[58,0,1015,49],[60,0,1015,51]],[[8,0,1017,4],[12,0,1017,8],[16,0,1017,12],[20,0,1017,16],[24,0,1017,20],[26,0,1017,22]],[[12,0,1018,6],[19,0,1018,13],[21,0,1018,15],[22,0,1018,16],[23,0,1018,17],[27,0,1018,21],[28,0,1018,22],[29,0,1018,23],[30,0,1018,24]],[[9,0,1019,5]],[[8,0,1020,4],[12,0,1020,8],[32,0,1020,28],[33,0,1020,29],[39,0,1020,35],[43,0,1020,39],[44,0,1020,40],[46,0,1020,42]],[[12,0,1021,6],[19,0,1021,13],[21,0,1021,15],[22,0,1021,16],[23,0,1021,17],[27,0,1021,21],[28,0,1021,22],[29,0,1021,23],[30,0,1021,24]],[[9,0,1022,5]],[[8,0,1024,4],[14,0,1024,10],[33,0,1024,29],[36,0,1024,56],[38,0,1024,58],[39,0,1024,59]],[[8,0,1026,4],[91,0,1026,87]],[[8,0,1027,4],[28,0,1027,24],[29,0,1027,25],[36,0,1027,32],[37,0,1027,33],[55,0,1027,51],[56,0,1027,52],[58,0,1027,54]],[[12,0,1029,6],[16,0,1029,10],[29,0,1029,23],[32,0,1029,26],[48,0,1029,42],[49,0,1029,43],[53,0,1029,47],[54,0,1029,48],[71,0,1029,65],[72,0,1029,66],[75,0,1029,69],[77,0,1029,71],[95,0,1029,89],[96,0,1029,90],[100,0,1029,94],[101,0,1029,95],[102,0,1029,96]],[[12,0,1030,6],[16,0,1030,10],[34,0,1030,28],[35,0,1030,29],[42,0,1030,36],[44,0,1030,38]],[[16,0,1031,8],[29,0,1031,21],[32,0,1031,24],[50,0,1031,42],[51,0,1031,43],[58,0,1031,50],[59,0,1031,51],[72,0,1031,64],[73,0,1031,88],[74,0,1031,89]],[[13,0,1032,7]],[[12,0,1034,6],[18,0,1034,12],[36,0,1034,30],[39,0,1034,33],[43,0,1034,37],[44,0,1034,38],[70,0,1034,64],[71,0,1034,65],[84,0,1034,78],[85,0,1034,79],[86,0,1034,80],[90,0,1034,84]],[[12,0,1035,8],[115,0,1035,111]],[[12,0,1036,8],[54,0,1036,50]],[[12,0,1037,8],[40,0,1037,36]],[[12,0,1038,8],[44,0,1038,40]],[[12,0,1039,8],[58,0,1039,54]],[[12,0,1040,8],[77,0,1040,73]],[[12,0,1041,8],[20,0,1041,16],[21,0,1041,17],[22,0,1041,18],[27,0,1041,39],[29,0,1041,41],[31,0,1041,43]],[[16,0,1043,10],[20,0,1043,14],[21,0,1043,15],[39,0,1043,33],[40,0,1043,34],[54,0,1043,48],[56,0,1043,50]],[[20,0,1044,12],[27,0,1044,19],[29,0,1044,21],[30,0,1044,22],[35,0,1044,27],[36,0,1044,28],[37,0,1044,29]],[[17,0,1045,11]],[[16,0,1047,10],[22,0,1047,16],[34,0,1047,28],[37,0,1047,55],[39,0,1047,57],[40,0,1047,58]],[[16,0,1049,10],[21,0,1049,15],[24,0,1049,18],[29,0,1049,23],[30,0,1049,24],[36,0,1049,30],[37,0,1049,31],[38,0,1049,32],[39,0,1049,33],[41,0,1049,35],[42,0,1049,36],[43,0,1049,37],[47,0,1049,41],[51,0,1049,45],[52,0,1049,46],[53,0,1049,47],[54,0,1049,48],[83,0,1049,77]],[[16,0,1051,10],[21,0,1051,15],[22,0,1051,16],[29,0,1051,23],[30,0,1051,24],[31,0,1051,25],[38,0,1051,46],[40,0,1051,48],[42,0,1051,50]],[[20,0,1052,12],[26,0,1052,18],[47,0,1052,39],[50,0,1052,42],[54,0,1052,46],[55,0,1052,47],[79,0,1052,71],[80,0,1052,72],[87,0,1052,79],[89,0,1052,81],[107,0,1052,99],[108,0,1052,100],[122,0,1052,114],[123,0,1052,115],[124,0,1052,116]],[[20,0,1053,12],[32,0,1053,24],[33,0,1053,25],[37,0,1053,29],[38,0,1053,30],[59,0,1053,51],[60,0,1053,52],[61,0,1053,53]],[[16,0,1054,10],[17,0,1054,11],[18,0,1054,12],[19,0,1054,13]],[[16,0,1056,10],[20,0,1056,14],[32,0,1056,26],[33,0,1056,27],[39,0,1056,33],[43,0,1056,37],[44,0,1056,38],[46,0,1056,40]],[[20,0,1057,12],[27,0,1057,19],[29,0,1057,21],[30,0,1057,22],[32,0,1057,24],[33,0,1057,25],[34,0,1057,26]],[[17,0,1058,11],[18,0,1058,12],[67,0,1058,61]],[[16,0,1060,10],[23,0,1060,17],[36,0,1060,30],[37,0,1060,31],[49,0,1060,43],[50,0,1060,44],[51,0,1060,45],[55,0,1060,49]],[[16,0,1061,12],[47,0,1061,43]],[[17,0,1062,11],[18,0,1062,12]],[[12,0,1063,8],[13,0,1063,9],[14,0,1063,10],[16,0,1063,12],[51,0,1063,47]],[[12,0,1064,8]],[],[[66,0,1066,62]],[[12,0,1067,8],[15,0,1067,11],[16,0,1067,12],[17,0,1067,13],[22,0,1067,34],[24,0,1067,36],[26,0,1067,38]],[[16,0,1068,10],[22,0,1068,16],[27,0,1068,21],[30,0,1068,24],[48,0,1068,42],[49,0,1068,43],[54,0,1068,48],[59,0,1068,53],[68,0,1068,62],[69,0,1068,63],[70,0,1068,64],[71,0,1068,65],[89,0,1068,83],[90,0,1068,84],[95,0,1068,89],[96,0,1068,90],[97,0,1068,91],[98,0,1068,92],[102,0,1068,96],[103,0,1068,97],[115,0,1068,109],[116,0,1068,110]],[[16,0,1070,10],[20,0,1070,14],[25,0,1070,19],[26,0,1070,20],[32,0,1070,26],[37,0,1070,31],[38,0,1070,32],[42,0,1070,36],[47,0,1070,41],[48,0,1070,42],[49,0,1070,43],[50,0,1070,44],[51,0,1070,45],[68,0,1070,62],[69,0,1070,63],[71,0,1070,65],[76,0,1070,70],[81,0,1070,75],[83,0,1070,77]],[[20,0,1071,12],[27,0,1071,19],[29,0,1071,20],[30,0,1071,21],[48,0,1071,39],[49,0,1071,40],[53,0,1071,44],[54,0,1071,45],[56,0,1071,47],[61,0,1071,52],[62,0,1071,53],[63,0,1071,54],[64,0,1071,55],[66,0,1071,56],[67,0,1071,57]],[[17,0,1072,11]],[[21,0,1072,17]],[[20,0,1073,12],[27,0,1073,19],[29,0,1073,20],[30,0,1073,21],[48,0,1073,39],[49,0,1073,40],[53,0,1073,44],[54,0,1073,45],[56,0,1073,47],[61,0,1073,52],[63,0,1073,53],[64,0,1073,54]],[[17,0,1074,11]],[[12,0,1075,8],[13,0,1075,9],[14,0,1075,10],[15,0,1077,7],[16,0,1077,8]],[[12,0,1079,6],[31,0,1079,25],[32,0,1079,26],[36,0,1079,30],[37,0,1079,31],[55,0,1079,49],[56,0,1079,50],[57,0,1079,51]],[[8,0,1080,4],[9,0,1080,5],[10,0,1080,6],[11,0,1080,7]],[[8,0,1082,4],[61,0,1082,57]],[[8,0,1083,4],[21,0,1083,17]],[[8,0,1084,4],[15,0,1084,11],[28,0,1084,24],[29,0,1084,25],[48,0,1084,44],[49,0,1084,45],[50,0,1084,46],[54,0,1084,50],[55,0,1085,6],[58,0,1085,9],[59,0,1085,10],[60,0,1085,11],[75,0,1085,85],[77,0,1085,87],[79,0,1085,89]],[[12,0,1086,8],[41,0,1086,37]],[[12,0,1087,8],[18,0,1087,14],[26,0,1087,22],[29,0,1087,51],[31,0,1087,53],[32,0,1087,54]],[[12,0,1089,8],[27,0,1089,23],[28,0,1089,24],[35,0,1089,31],[36,0,1089,32],[37,0,1089,33],[47,0,1089,43],[49,0,1089,45],[51,0,1089,47]],[[16,0,1091,10],[21,0,1091,15],[27,0,1091,21],[28,0,1091,22],[42,0,1091,36],[44,0,1091,38],[49,0,1091,43],[50,0,1091,44],[54,0,1091,48],[60,0,1091,54],[61,0,1091,55],[68,0,1091,62],[69,0,1091,63],[79,0,1091,73],[80,0,1091,74],[82,0,1091,76]],[[20,0,1092,12],[28,0,1092,20],[29,0,1092,21],[43,0,1092,35],[44,0,1092,36],[47,0,1092,39],[52,0,1092,44],[53,0,1092,45]],[[17,0,1093,11]],[[12,0,1094,8],[13,0,1094,9],[14,0,1094,10],[15,0,1094,11]],[[12,0,1095,8],[19,0,1095,15],[27,0,1095,23],[28,0,1095,24]],[[8,0,1096,6],[9,0,1096,7],[10,0,1096,8],[12,0,1098,6],[15,0,1098,9],[16,0,1098,10],[17,0,1098,11],[21,0,1098,29],[23,0,1098,31],[25,0,1098,33]],[[12,0,1099,8],[19,0,1099,15],[21,0,1099,16],[24,0,1099,19],[28,0,1099,23],[30,0,1099,25],[33,0,1099,28],[37,0,1099,32],[39,0,1099,48],[40,0,1099,49]],[[8,0,1100,6],[9,0,1100,7],[10,0,1100,8],[11,0,1101,5],[12,0,1101,6]],[[4,0,1102,2],[5,0,1102,3]],[[4,0,1104,2]],[],[[7,0,1106,5]],[[4,0,1107,12],[36,0,1107,44],[37,0,1108,4],[43,0,1108,29],[45,0,1109,4],[68,0,1109,49],[70,0,1109,51],[72,0,1110,4],[91,0,1110,42],[108,0,1110,59],[109,0,1110,60],[120,0,1110,71]],[[8,0,1112,4],[33,0,1112,29]],[[8,0,1113,4],[15,0,1113,11],[19,0,1113,15],[20,0,1113,16],[39,0,1113,35],[40,0,1113,39],[46,0,1113,45],[48,0,1113,47],[64,0,1113,63],[65,0,1113,64],[66,0,1113,65],[70,0,1113,69],[71,0,1114,6],[79,0,1114,14],[80,0,1114,15],[81,0,1114,16],[85,0,1114,34],[87,0,1114,36],[89,0,1114,38]],[[12,0,1116,8],[16,0,1116,12],[20,0,1116,16],[25,0,1116,21],[29,0,1116,25],[31,0,1116,27]],[[16,0,1117,10],[23,0,1117,17],[25,0,1117,19],[26,0,1117,20],[30,0,1117,24],[31,0,1117,25],[32,0,1117,26]],[[13,0,1118,9]],[[12,0,1119,8],[16,0,1119,12],[36,0,1119,32],[37,0,1119,33],[43,0,1119,39],[47,0,1119,43],[48,0,1119,44],[50,0,1119,46]],[[16,0,1120,10],[23,0,1120,17],[25,0,1120,19],[26,0,1120,20],[30,0,1120,24],[31,0,1120,25],[32,0,1120,26]],[[13,0,1121,9]],[[12,0,1123,8],[19,0,1123,15],[23,0,1123,19],[24,0,1123,20],[48,0,1123,44],[49,0,1123,45],[53,0,1123,49],[55,0,1123,51],[75,0,1123,71],[76,0,1123,72],[77,0,1123,73]],[[8,0,1124,6],[9,0,1124,7],[10,0,1124,8],[11,0,1125,5],[12,0,1125,6]],[[4,0,1126,2],[5,0,1126,3]],[[4,0,1128,2]],[],[],[],[],[],[],[],[],[],[],[[7,0,1139,5]],[[4,0,1140,12],[14,0,1140,22],[15,0,1140,26],[19,0,1140,33],[21,0,1140,35],[34,0,1140,72],[36,0,1140,74],[49,0,1140,96],[53,0,1140,100],[55,0,1140,102],[57,0,1140,113]],[[8,0,1143,4],[58,0,1143,54]],[[8,0,1145,4],[12,0,1145,8],[16,0,1145,29],[17,0,1145,30]],[[8,0,1147,4],[12,0,1147,8],[22,0,1147,18],[24,0,1147,20]],[[12,0,1148,6],[18,0,1148,12],[22,0,1148,16],[25,0,1148,19],[29,0,1148,23],[33,0,1148,27],[35,0,1148,29],[36,0,1148,30]],[[12,0,1149,6],[16,0,1149,10],[19,0,1149,13],[33,0,1149,27],[34,0,1149,28],[38,0,1149,32],[40,0,1149,34],[45,0,1149,39],[47,0,1149,41],[51,0,1149,45],[52,0,1149,46],[53,0,1149,47]],[[12,0,1150,6],[16,0,1150,10],[19,0,1150,13],[34,0,1150,28],[35,0,1150,29],[39,0,1150,33],[41,0,1150,35],[46,0,1150,40],[48,0,1150,42],[52,0,1150,46],[53,0,1150,47],[54,0,1150,48]],[[9,0,1151,5]],[[8,0,1153,4],[12,0,1153,8],[14,0,1153,10],[19,0,1153,15],[28,0,1153,24],[30,0,1153,26]],[[12,0,1154,6],[18,0,1154,12],[24,0,1154,18],[27,0,1154,40],[42,0,1154,55],[43,0,1154,56],[56,0,1154,69],[58,0,1154,71],[60,0,1154,73],[61,0,1154,74],[62,0,1154,75]],[[12,0,1155,6],[16,0,1155,10],[19,0,1155,13],[23,0,1155,17],[24,0,1155,18],[26,0,1155,20],[27,0,1155,21],[30,0,1155,24],[31,0,1155,25],[37,0,1155,31],[39,0,1155,33],[43,0,1155,37],[44,0,1155,38],[45,0,1155,39]],[[9,0,1156,5]],[[13,0,1156,11]],[[12,0,1157,6],[16,0,1157,10],[19,0,1157,13],[23,0,1157,17],[24,0,1157,18],[26,0,1157,20],[27,0,1157,21],[30,0,1157,24],[31,0,1157,28],[44,0,1157,41],[46,0,1157,43],[50,0,1157,47],[51,0,1157,48],[52,0,1157,49]],[[9,0,1158,5]],[[8,0,1160,4],[51,0,1160,47]],[[8,0,1161,4],[38,0,1161,34]],[[8,0,1162,4],[114,0,1162,110]],[[8,0,1163,4],[15,0,1163,11]],[[8,0,1164,4],[12,0,1164,8]],[[8,0,1166,4],[12,0,1166,8],[15,0,1166,11],[19,0,1166,15],[20,0,1166,16],[24,0,1166,20]],[[8,0,1167,6],[79,0,1167,77]],[[8,0,1168,6],[40,0,1168,38]],[[8,0,1169,6],[40,0,1169,38]],[[8,0,1170,6],[11,0,1170,9],[12,0,1170,10],[13,0,1170,11],[16,0,1170,48],[18,0,1170,50],[20,0,1170,52]],[[12,0,1171,8],[16,0,1171,12],[18,0,1171,14],[23,0,1171,19],[32,0,1171,28],[36,0,1171,32],[39,0,1171,35],[41,0,1171,37]],[[16,0,1173,10],[22,0,1173,16],[26,0,1173,20],[29,0,1173,23],[32,0,1173,26],[33,0,1173,27],[37,0,1173,31],[38,0,1173,32]],[[16,0,1175,10],[22,0,1175,16],[39,0,1175,33],[42,0,1175,58]],[[20,0,1176,12],[22,0,1176,14],[24,0,1176,16],[27,0,1176,19],[28,0,1176,20],[30,0,1176,22]],[[20,0,1177,12],[24,0,1177,16]],[[20,0,1178,12],[23,0,1178,15]],[[20,0,1179,12],[28,0,1179,20],[30,0,1179,22],[34,0,1179,26]],[[17,0,1180,11],[18,0,1180,12]],[[16,0,1182,10],[23,0,1182,17],[25,0,1182,18],[28,0,1182,21],[32,0,1182,25],[34,0,1182,27],[51,0,1182,44],[53,0,1182,60],[54,0,1182,61]],[[13,0,1184,9]],[[17,0,1184,15],[19,0,1184,17],[87,0,1184,85]],[[16,0,1185,10],[22,0,1185,16],[26,0,1185,20],[29,0,1185,23],[42,0,1185,36],[43,0,1185,37],[47,0,1185,41],[50,0,1185,44],[53,0,1185,47],[56,0,1185,50],[58,0,1185,52],[59,0,1185,53]],[[16,0,1186,10],[19,0,1186,13],[22,0,1186,16],[36,0,1186,30],[37,0,1186,31],[41,0,1186,35],[43,0,1186,37],[47,0,1186,41],[48,0,1186,42],[50,0,1186,44],[51,0,1186,45],[60,0,1186,54],[61,0,1186,79],[62,0,1186,80]],[[16,0,1188,10],[22,0,1188,16],[39,0,1188,33],[42,0,1188,58]],[[20,0,1189,12],[22,0,1189,14],[24,0,1189,16],[26,0,1189,28]],[[20,0,1190,12],[23,0,1190,15]],[[20,0,1191,12],[24,0,1191,16]],[[20,0,1192,12],[28,0,1192,20],[30,0,1192,22],[34,0,1192,26]],[[17,0,1193,11],[18,0,1193,12]],[[16,0,1195,10],[23,0,1195,17],[25,0,1195,18],[28,0,1195,21],[32,0,1195,25],[34,0,1195,27],[51,0,1195,44],[53,0,1195,60],[54,0,1195,61]],[[13,0,1196,9]],[[8,0,1197,6],[9,0,1197,7],[10,0,1197,8],[11,0,1198,5],[12,0,1198,6]],[[8,0,1200,4],[15,0,1200,11],[19,0,1200,15],[20,0,1200,16],[24,0,1200,20],[25,0,1201,6],[29,0,1201,10],[30,0,1201,11],[31,0,1201,12],[32,0,1201,13],[33,0,1202,5],[34,0,1202,6]],[[4,0,1203,2],[5,0,1203,3]],[[4,0,1205,2],[74,0,1205,72]],[[4,0,1206,12],[17,0,1206,25],[18,0,1206,29],[22,0,1206,36],[24,0,1206,38],[30,0,1206,63],[32,0,1206,65],[52,0,1206,94],[56,0,1206,98]],[[8,0,1208,4],[12,0,1208,8],[29,0,1208,25],[31,0,1208,27]],[[12,0,1209,6],[16,0,1209,10],[19,0,1209,13],[34,0,1209,28],[35,0,1209,29],[39,0,1209,33],[41,0,1209,35],[46,0,1209,40],[47,0,1209,41],[48,0,1209,42]],[[9,0,1210,5]],[[8,0,1211,4],[15,0,1211,11],[19,0,1211,15],[20,0,1211,16],[22,0,1211,18],[23,0,1211,19],[29,0,1211,25],[30,0,1211,26],[36,0,1211,32],[38,0,1211,34],[42,0,1211,38],[43,0,1211,39],[44,0,1211,40]],[[4,0,1212,2],[5,0,1212,3]],[[4,0,1214,2]],[],[[7,0,1216,5]],[[4,0,1217,12],[27,0,1217,35],[28,0,1217,39],[32,0,1217,46],[34,0,1218,39],[40,0,1218,64],[42,0,1219,39],[65,0,1219,85],[67,0,1219,87],[69,0,1220,39],[89,0,1220,68],[93,0,1220,72],[95,0,1221,39],[100,0,1221,57]],[[8,0,1223,4],[12,0,1223,8],[17,0,1223,13],[22,0,1223,18],[31,0,1223,27],[33,0,1223,29]],[[12,0,1224,6],[17,0,1224,11],[20,0,1224,14],[30,0,1224,24],[31,0,1224,25],[35,0,1224,29],[36,0,1224,30],[38,0,1224,32],[39,0,1224,33],[48,0,1224,42],[49,0,1224,43],[50,0,1224,44]],[[9,0,1225,5]],[[8,0,1227,4],[12,0,1227,8],[29,0,1227,25],[31,0,1227,27]],[[12,0,1228,6],[16,0,1228,10],[19,0,1228,13],[34,0,1228,28],[35,0,1228,29],[39,0,1228,33],[41,0,1228,35],[46,0,1228,40],[47,0,1228,41],[48,0,1228,42]],[[9,0,1229,5]],[[8,0,1231,4],[14,0,1231,10],[19,0,1231,15],[22,0,1231,18],[26,0,1231,22],[27,0,1231,23],[67,0,1231,63],[68,0,1231,64],[72,0,1231,68],[74,0,1231,70],[94,0,1231,90],[95,0,1231,91],[96,0,1231,92]],[[8,0,1232,4],[14,0,1232,10],[24,0,1232,20],[27,0,1232,23],[32,0,1232,28],[33,0,1232,29],[43,0,1232,39],[44,0,1232,40]],[[8,0,1233,4],[14,0,1233,10],[28,0,1233,24],[31,0,1233,27],[36,0,1233,32],[37,0,1233,33],[51,0,1233,47],[52,0,1233,48]],[[8,0,1235,4],[51,0,1235,47]],[[8,0,1236,4],[13,0,1236,9],[14,0,1236,10],[20,0,1236,16],[21,0,1236,17],[27,0,1236,23],[29,0,1236,25],[39,0,1236,35],[40,0,1236,36],[41,0,1236,37]],[[8,0,1238,4],[13,0,1238,9],[19,0,1238,15],[20,0,1238,16],[36,0,1238,32],[38,0,1238,34],[55,0,1238,51],[56,0,1238,52],[60,0,1238,56],[66,0,1238,62],[67,0,1238,63],[74,0,1238,70],[75,0,1238,71],[89,0,1238,85],[90,0,1238,86],[92,0,1238,88]],[[12,0,1240,6],[16,0,1240,10],[39,0,1240,68],[40,0,1240,69],[41,0,1240,70],[80,0,1240,109]],[[12,0,1241,6],[16,0,1241,10],[24,0,1241,38],[25,0,1241,39]],[[12,0,1243,6],[16,0,1243,10],[36,0,1243,30],[38,0,1243,32]],[[16,0,1244,8],[39,0,1244,31],[42,0,1244,34],[62,0,1244,54],[63,0,1244,55],[67,0,1244,59],[68,0,1244,60],[75,0,1244,67],[76,0,1244,68],[78,0,1244,70],[79,0,1244,71],[86,0,1244,78],[87,0,1244,79],[91,0,1244,83],[96,0,1244,88],[112,0,1244,104],[113,0,1244,105],[115,0,1244,107],[129,0,1244,121],[130,0,1244,122]],[[16,0,1245,8],[24,0,1245,16],[27,0,1245,19],[47,0,1245,39],[48,0,1245,40],[52,0,1245,44],[53,0,1245,45],[60,0,1245,52],[61,0,1245,53],[63,0,1245,55],[64,0,1245,56],[71,0,1245,63],[72,0,1245,64],[76,0,1245,68],[81,0,1245,73],[97,0,1245,89],[98,0,1245,90],[100,0,1245,92],[105,0,1245,97],[106,0,1245,98]],[[13,0,1246,7]],[[12,0,1248,6],[20,0,1248,14],[23,0,1248,17],[31,0,1248,25],[36,0,1248,30],[45,0,1248,39],[46,0,1248,40],[47,0,1248,41],[48,0,1248,42],[56,0,1248,50],[57,0,1248,51],[58,0,1248,52],[59,0,1248,53],[63,0,1248,57],[64,0,1248,58],[76,0,1248,70],[77,0,1248,71],[78,0,1248,72],[109,0,1248,103]],[[12,0,1250,6],[82,0,1250,76]],[[12,0,1251,6],[18,0,1251,12],[31,0,1251,25],[34,0,1251,28],[50,0,1251,44],[51,0,1251,45],[57,0,1251,51],[59,0,1251,53],[75,0,1251,69],[76,0,1251,70],[77,0,1251,71]],[[12,0,1252,6],[18,0,1252,12],[26,0,1252,20],[29,0,1252,23],[44,0,1252,38],[45,0,1252,39],[58,0,1252,52],[60,0,1252,54],[68,0,1252,62],[69,0,1252,63],[70,0,1252,64]],[[12,0,1254,6],[17,0,1254,11],[20,0,1254,14],[24,0,1254,18],[25,0,1254,19],[48,0,1254,42],[49,0,1254,43],[66,0,1254,60],[68,0,1254,62],[76,0,1254,70],[78,0,1254,72],[101,0,1254,95],[103,0,1254,97],[120,0,1254,114],[122,0,1254,116],[127,0,1254,121],[128,0,1254,122],[129,0,1254,123]],[[9,0,1255,5]],[[8,0,1257,4],[15,0,1257,11],[20,0,1257,16],[21,0,1257,17]],[[4,0,1258,2],[5,0,1258,3]],[[4,0,1260,2]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,1273,5]],[[4,0,1274,12],[41,0,1274,49],[42,0,1275,4],[55,0,1275,37],[57,0,1276,4],[69,0,1276,36],[71,0,1277,4],[84,0,1277,25],[86,0,1278,4],[98,0,1278,24],[100,0,1279,4],[116,0,1279,28],[118,0,1280,4],[149,0,1280,60],[151,0,1281,4],[182,0,1281,35],[185,0,1281,38],[189,0,1281,42],[191,0,1282,4],[198,0,1282,11],[201,0,1282,14],[206,0,1282,19]],[[8,0,1284,4],[12,0,1284,8],[29,0,1284,45],[30,0,1284,46]],[[8,0,1285,4],[12,0,1285,8],[28,0,1285,44],[29,0,1285,45]],[[8,0,1286,4],[12,0,1286,8],[19,0,1286,15],[21,0,1286,17]],[[12,0,1287,6],[29,0,1287,23],[32,0,1287,26],[38,0,1287,32],[39,0,1287,33],[45,0,1287,39],[46,0,1287,40],[48,0,1287,42],[50,0,1287,44],[63,0,1287,57],[64,0,1287,58],[65,0,1287,59]],[[12,0,1288,6],[28,0,1288,22],[31,0,1288,25],[37,0,1288,31],[38,0,1288,32],[44,0,1288,38],[45,0,1288,39],[47,0,1288,41],[49,0,1288,43],[61,0,1288,55],[62,0,1288,56],[63,0,1288,57]],[[9,0,1289,5]],[[13,0,1289,11]],[[12,0,1290,6],[29,0,1290,23],[32,0,1290,26],[45,0,1290,39],[46,0,1290,40]],[[12,0,1291,6],[28,0,1291,22],[31,0,1291,25],[43,0,1291,37],[44,0,1291,38]],[[9,0,1292,5]],[[8,0,1294,4],[25,0,1294,21],[26,0,1294,22],[43,0,1294,39],[45,0,1294,41],[61,0,1294,57],[63,0,1294,59],[76,0,1294,72],[78,0,1294,74],[90,0,1294,86],[91,0,1294,87],[92,0,1294,88]],[[8,0,1296,4],[14,0,1296,10],[19,0,1296,15],[22,0,1296,30],[32,0,1296,40],[33,0,1296,41],[37,0,1296,45],[38,0,1296,46],[40,0,1296,48],[41,0,1296,49],[50,0,1296,58],[51,0,1296,59],[52,0,1296,60]],[[8,0,1298,4],[12,0,1298,8],[43,0,1298,39],[48,0,1298,44],[57,0,1298,53],[59,0,1298,55]],[[12,0,1299,6],[18,0,1299,12],[27,0,1299,21],[30,0,1299,24],[46,0,1299,40],[47,0,1299,41],[59,0,1299,53],[60,0,1299,54],[61,0,1299,55]],[[12,0,1300,6],[18,0,1300,12],[30,0,1300,24],[33,0,1300,27],[42,0,1300,36],[43,0,1300,37],[60,0,1300,54],[61,0,1300,55],[64,0,1300,58],[65,0,1300,59]],[[12,0,1302,6],[18,0,1302,12],[22,0,1302,16],[25,0,1302,19],[27,0,1302,20],[30,0,1302,23],[61,0,1302,54],[63,0,1302,56],[72,0,1302,65],[74,0,1302,67],[90,0,1302,83],[92,0,1302,84],[93,0,1302,85]],[[12,0,1304,6],[16,0,1304,10],[17,0,1304,11],[24,0,1304,18],[26,0,1304,20]],[[16,0,1305,8],[29,0,1305,21],[30,0,1305,22],[39,0,1305,31],[41,0,1305,33],[45,0,1305,37],[47,0,1305,39],[51,0,1305,43],[52,0,1305,44],[53,0,1305,45]],[[13,0,1306,7]],[[12,0,1308,6],[16,0,1308,10],[47,0,1308,41],[49,0,1308,43]],[[16,0,1309,8],[22,0,1309,14],[26,0,1309,18],[29,0,1309,21],[33,0,1309,25],[37,0,1309,29],[39,0,1309,31],[40,0,1309,32]],[[16,0,1310,8],[31,0,1310,23],[32,0,1310,24],[36,0,1310,28],[38,0,1310,30],[42,0,1310,34],[44,0,1310,36],[48,0,1310,40],[49,0,1310,41],[50,0,1310,42]],[[16,0,1312,8],[20,0,1312,12],[21,0,1312,13],[28,0,1312,20],[30,0,1312,22]],[[20,0,1313,10],[35,0,1313,25],[36,0,1313,26],[45,0,1313,35],[47,0,1313,37],[51,0,1313,41],[53,0,1313,43],[57,0,1313,47],[58,0,1313,48],[59,0,1313,49]],[[17,0,1314,9]],[[13,0,1315,7]],[[12,0,1316,6],[17,0,1316,11],[18,0,1316,12],[24,0,1316,18],[25,0,1316,19],[37,0,1316,31],[39,0,1316,33],[43,0,1316,37],[44,0,1316,38],[45,0,1316,39]],[[9,0,1317,5]],[[8,0,1319,4],[14,0,1319,10],[39,0,1319,35],[42,0,1319,58],[58,0,1319,74],[59,0,1319,75],[64,0,1319,80],[65,0,1319,81],[77,0,1319,93],[78,0,1319,94],[79,0,1319,95]],[[8,0,1320,4],[12,0,1320,8],[13,0,1320,9],[16,0,1320,12],[28,0,1320,24],[29,0,1320,25]],[[8,0,1321,4],[13,0,1321,9],[19,0,1321,15],[23,0,1321,19],[27,0,1321,23],[52,0,1321,48],[54,0,1321,50]],[[12,0,1322,6],[25,0,1322,19]],[[12,0,1323,6],[17,0,1323,11],[18,0,1323,12],[24,0,1323,18],[25,0,1323,19],[29,0,1323,23],[30,0,1323,24],[47,0,1323,41],[48,0,1323,42],[51,0,1323,45],[53,0,1323,47],[55,0,1323,48],[60,0,1323,53],[62,0,1323,55],[63,0,1323,56],[65,0,1323,57],[66,0,1323,58],[67,0,1323,59]],[[12,0,1325,6],[16,0,1325,10],[17,0,1325,11],[24,0,1325,18],[26,0,1325,20]],[[16,0,1326,8],[20,0,1326,12],[21,0,1326,13],[26,0,1326,18],[29,0,1326,21],[30,0,1326,22],[31,0,1326,23]],[[13,0,1327,7]],[[12,0,1329,6],[13,0,1329,7],[15,0,1329,9],[16,0,1329,10]],[[9,0,1330,5]],[[8,0,1332,4],[14,0,1332,10],[36,0,1332,32],[39,0,1332,55],[56,0,1332,72],[57,0,1332,73],[62,0,1332,78],[63,0,1332,79],[76,0,1332,92],[77,0,1332,93],[78,0,1332,94]],[[8,0,1333,4],[9,0,1333,5],[12,0,1333,8],[25,0,1333,21],[26,0,1333,22]],[[8,0,1334,4],[13,0,1334,9],[19,0,1334,15],[23,0,1334,19],[27,0,1334,23],[49,0,1334,45],[51,0,1334,47]],[[12,0,1335,6],[25,0,1335,19]],[[12,0,1336,6],[17,0,1336,11],[18,0,1336,12],[24,0,1336,18],[25,0,1336,19],[29,0,1336,23],[30,0,1336,24],[47,0,1336,41],[48,0,1336,42],[51,0,1336,45],[53,0,1336,47],[55,0,1336,48],[60,0,1336,53],[62,0,1336,55],[63,0,1336,56],[65,0,1336,57],[66,0,1336,58],[67,0,1336,59]],[[12,0,1338,6],[16,0,1338,10],[17,0,1338,11],[24,0,1338,18],[26,0,1338,20]],[[16,0,1339,8],[20,0,1339,12],[21,0,1339,13],[26,0,1339,18],[29,0,1339,21],[30,0,1339,22],[31,0,1339,23]],[[13,0,1340,7]],[[12,0,1342,6],[13,0,1342,7],[15,0,1342,9],[16,0,1342,10]],[[9,0,1343,5]],[[8,0,1345,4],[15,0,1345,11],[20,0,1345,16],[21,0,1345,17]],[[4,0,1346,2],[5,0,1346,3]],[[4,0,1349,2]],[],[],[],[[7,0,1353,5]],[[4,0,1354,12],[25,0,1354,33],[26,0,1354,34],[33,0,1354,62]],[[8,0,1356,4],[14,0,1356,10],[19,0,1356,15],[22,0,1356,18],[26,0,1356,22],[27,0,1356,23],[55,0,1356,51],[56,0,1356,52],[63,0,1356,59],[64,0,1356,60],[65,0,1356,61]],[[8,0,1358,4],[15,0,1358,11],[19,0,1358,15],[20,0,1358,16],[32,0,1358,28],[33,0,1358,29],[38,0,1358,34],[39,0,1358,35],[40,0,1358,36]],[[4,0,1359,2],[5,0,1359,3]],[[4,0,1361,12],[32,0,1361,40],[33,0,1361,41],[40,0,1361,69],[42,0,1361,71],[50,0,1361,91],[60,0,1361,101],[61,0,1361,102],[65,0,1361,106],[66,0,1361,107],[68,0,1361,109],[69,0,1361,110],[78,0,1361,119],[79,0,1361,120]],[[8,0,1363,4],[15,0,1363,11],[16,0,1363,12],[23,0,1363,19],[24,0,1363,20],[25,0,1363,21],[31,0,1363,27],[33,0,1363,29],[35,0,1363,31]],[[12,0,1364,6],[17,0,1364,11],[18,0,1364,12],[24,0,1364,18],[25,0,1364,19],[31,0,1364,25],[32,0,1364,26],[33,0,1364,27]],[[8,0,1365,4],[9,0,1365,5],[10,0,1365,6],[11,0,1365,7]],[[8,0,1367,4],[15,0,1367,11],[20,0,1367,16],[21,0,1367,17]],[[4,0,1368,2],[5,0,1368,3]],[[4,0,1370,2]],[],[],[],[],[],[[7,0,1376,5]],[[4,0,1377,12],[35,0,1377,43],[36,0,1377,47],[42,0,1377,71],[44,0,1378,47],[67,0,1378,93],[69,0,1378,95],[71,0,1379,47],[98,0,1379,84],[100,0,1379,86]],[[8,0,1381,4],[95,0,1381,91]],[[8,0,1382,4],[14,0,1382,10],[32,0,1382,28],[35,0,1382,41],[36,0,1382,42],[55,0,1382,61],[56,0,1382,62],[57,0,1382,63],[63,0,1382,69],[64,0,1382,70],[88,0,1382,94],[89,0,1382,95],[90,0,1382,96]],[[8,0,1384,4],[34,0,1384,30]],[[8,0,1385,4],[13,0,1385,9],[19,0,1385,15],[36,0,1385,32],[40,0,1385,36],[58,0,1385,54],[60,0,1385,56]],[[12,0,1386,6],[19,0,1386,13],[25,0,1386,19],[26,0,1386,20],[43,0,1386,37],[44,0,1386,38],[45,0,1386,39]],[[9,0,1387,5]],[[8,0,1389,4],[28,0,1389,24],[29,0,1389,25],[36,0,1389,32],[37,0,1389,33],[40,0,1389,36],[41,0,1389,37],[43,0,1389,39]],[[12,0,1390,6],[16,0,1390,10],[21,0,1390,15],[22,0,1390,16],[29,0,1390,23],[30,0,1390,24],[36,0,1390,30],[37,0,1390,31],[40,0,1390,34],[41,0,1390,35],[45,0,1390,39],[46,0,1390,40],[47,0,1390,41],[49,0,1390,43],[51,0,1390,45],[104,0,1390,98]],[[16,0,1392,8],[22,0,1392,14],[26,0,1392,18],[29,0,1392,36],[35,0,1392,42],[36,0,1392,43],[39,0,1392,46],[40,0,1392,47],[44,0,1392,51],[45,0,1392,52],[46,0,1392,53]],[[16,0,1393,8],[20,0,1393,12],[21,0,1393,13],[28,0,1393,20],[29,0,1393,21],[30,0,1393,22],[31,0,1393,23],[33,0,1393,25],[34,0,1393,26],[36,0,1393,28],[38,0,1393,30]],[[20,0,1395,10],[24,0,1395,14],[27,0,1395,17],[28,0,1395,18],[42,0,1395,32],[44,0,1395,34]],[[24,0,1396,12],[28,0,1396,16],[29,0,1396,17],[60,0,1396,48],[61,0,1396,49],[62,0,1396,50],[64,0,1396,52],[67,0,1396,55],[68,0,1396,56],[82,0,1396,70],[84,0,1396,72],[108,0,1396,96],[109,0,1396,97],[110,0,1396,98]],[[21,0,1397,11]],[[25,0,1397,17]],[[24,0,1398,12],[30,0,1398,18]],[[24,0,1399,12],[29,0,1399,17],[35,0,1399,23],[52,0,1399,40],[56,0,1399,44],[74,0,1399,62],[76,0,1399,64]],[[28,0,1400,14],[35,0,1400,21],[41,0,1400,27],[42,0,1400,28],[45,0,1400,31],[46,0,1400,32],[50,0,1400,36],[51,0,1400,37],[52,0,1400,38],[53,0,1400,39],[54,0,1400,40],[55,0,1400,41],[72,0,1400,58],[73,0,1400,59],[74,0,1400,60]],[[25,0,1401,13]],[[21,0,1402,11]],[[16,0,1403,8],[17,0,1403,9],[18,0,1403,10],[19,0,1403,11]],[[13,0,1405,7]],[[17,0,1405,13],[19,0,1405,15],[52,0,1405,48]],[[16,0,1407,8],[20,0,1407,12],[23,0,1407,15],[24,0,1407,16],[38,0,1407,30],[40,0,1407,32]],[[20,0,1408,10],[24,0,1408,14],[25,0,1408,15],[56,0,1408,46],[57,0,1408,47],[63,0,1408,53],[64,0,1408,54],[67,0,1408,57],[68,0,1408,58],[72,0,1408,62],[73,0,1408,63],[75,0,1408,65],[78,0,1408,68],[79,0,1408,69],[93,0,1408,83],[95,0,1408,85],[119,0,1408,109],[120,0,1408,110],[121,0,1408,111]],[[17,0,1409,9]],[[21,0,1409,15]],[[20,0,1410,10],[25,0,1410,15],[31,0,1410,21],[48,0,1410,38],[52,0,1410,42],[70,0,1410,60],[72,0,1410,62]],[[24,0,1411,12],[31,0,1411,19],[37,0,1411,25],[38,0,1411,26],[41,0,1411,29],[42,0,1411,30],[46,0,1411,34],[47,0,1411,35],[48,0,1411,36],[65,0,1411,53],[66,0,1411,54],[67,0,1411,55]],[[21,0,1412,11]],[[17,0,1413,9]],[[13,0,1415,7]],[[8,0,1416,4],[9,0,1416,5],[10,0,1416,6],[11,0,1416,7]],[[8,0,1418,4],[15,0,1418,11],[21,0,1418,17],[22,0,1418,18]],[[4,0,1420,2],[5,0,1420,3]],[[4,0,1422,2]],[],[],[],[],[[7,0,1427,5]],[[4,0,1428,12],[30,0,1428,38],[31,0,1428,39],[34,0,1428,83],[36,0,1429,39],[59,0,1429,84],[61,0,1429,86]],[[8,0,1432,4],[12,0,1432,8],[15,0,1432,11],[27,0,1432,23],[44,0,1432,40],[46,0,1432,42]],[[12,0,1433,6],[19,0,1433,13],[23,0,1433,17],[24,0,1433,18],[56,0,1433,50],[57,0,1433,51],[60,0,1433,54],[62,0,1433,56],[82,0,1433,76],[83,0,1433,77],[84,0,1433,78]],[[9,0,1434,5]],[[13,0,1434,11],[15,0,1434,13],[37,0,1434,35]],[[12,0,1435,6],[19,0,1435,13],[23,0,1435,17],[24,0,1435,18],[63,0,1435,57],[64,0,1435,58],[67,0,1435,61],[69,0,1435,63],[89,0,1435,83],[90,0,1435,84],[91,0,1435,85]],[[9,0,1436,5]],[[4,0,1437,2],[5,0,1437,3]],[[4,0,1439,12],[36,0,1439,44],[37,0,1439,45],[43,0,1439,70],[45,0,1440,45],[68,0,1440,90],[70,0,1440,92]],[[8,0,1443,4],[15,0,1443,11],[19,0,1443,15],[20,0,1443,16],[33,0,1443,29],[34,0,1443,30],[40,0,1443,36],[42,0,1443,38],[62,0,1443,58],[63,0,1443,59],[64,0,1443,60],[68,0,1443,64],[69,0,1444,6],[73,0,1444,10],[74,0,1444,11],[75,0,1444,12],[76,0,1444,13],[78,0,1445,6],[81,0,1445,9],[82,0,1445,10],[86,0,1445,14],[87,0,1445,15],[89,0,1445,17],[90,0,1445,18],[94,0,1445,22],[95,0,1445,23],[130,0,1445,58],[131,0,1445,59],[135,0,1445,63],[137,0,1445,65],[157,0,1445,85],[158,0,1445,86],[159,0,1445,87]],[[8,0,1446,6],[50,0,1446,48]],[[8,0,1447,6],[11,0,1447,9],[12,0,1447,10],[13,0,1447,11],[21,0,1447,29],[23,0,1447,31],[25,0,1447,33]],[[12,0,1448,8],[19,0,1448,15],[27,0,1448,23]],[[17,0,1449,11],[20,0,1449,14],[21,0,1449,15],[25,0,1449,19],[26,0,1449,20],[28,0,1449,22],[29,0,1449,23],[43,0,1449,37],[44,0,1449,38],[48,0,1449,42],[50,0,1449,44],[54,0,1449,48],[55,0,1449,49],[57,0,1449,51],[58,0,1449,52],[67,0,1449,61],[68,0,1449,83],[69,0,1449,84],[70,0,1449,85]],[[8,0,1450,6],[9,0,1450,7],[10,0,1450,8],[11,0,1452,5],[12,0,1452,6]],[[4,0,1453,2],[5,0,1453,3]],[[4,0,1455,12],[43,0,1455,51],[44,0,1455,52],[57,0,1455,86],[59,0,1456,52],[82,0,1456,97],[84,0,1456,99]],[[8,0,1459,4],[15,0,1459,11],[19,0,1459,15],[20,0,1459,16],[46,0,1459,42],[47,0,1459,43],[60,0,1459,56],[61,0,1459,57],[62,0,1459,58],[66,0,1459,62]],[[8,0,1460,6],[21,0,1460,19]],[[8,0,1461,6],[12,0,1461,10],[13,0,1461,11],[14,0,1461,12],[15,0,1461,13],[17,0,1462,6],[25,0,1462,14],[26,0,1462,15],[27,0,1462,16],[32,0,1462,37],[34,0,1462,39],[36,0,1462,41]],[[12,0,1463,8],[16,0,1463,12],[28,0,1463,48],[29,0,1463,49]],[[12,0,1464,8],[24,0,1464,20],[27,0,1464,23],[32,0,1464,28],[33,0,1464,29],[36,0,1464,32],[37,0,1464,33],[41,0,1464,37],[42,0,1464,38],[44,0,1464,40],[45,0,1464,41],[49,0,1464,45],[50,0,1464,46],[63,0,1464,59],[64,0,1464,60],[68,0,1464,64],[69,0,1464,65],[86,0,1464,82],[87,0,1464,83],[90,0,1464,86],[92,0,1464,88],[112,0,1464,108],[113,0,1464,109],[114,0,1464,110],[115,0,1464,111]],[[12,0,1465,8],[19,0,1465,15],[32,0,1465,28],[33,0,1465,29],[45,0,1465,41],[46,0,1465,42],[47,0,1465,43]],[[8,0,1466,6],[9,0,1466,7],[10,0,1466,8],[12,0,1467,6],[15,0,1467,9],[16,0,1467,10],[17,0,1467,11],[22,0,1467,32],[24,0,1467,34],[26,0,1467,36]],[[12,0,1469,8],[16,0,1469,12],[21,0,1469,17],[24,0,1469,30],[26,0,1469,32],[27,0,1469,33]],[[12,0,1471,8],[17,0,1471,13],[18,0,1471,14],[25,0,1471,21],[26,0,1471,22],[30,0,1471,26],[31,0,1471,27],[33,0,1471,29]],[[16,0,1472,10],[21,0,1472,15],[24,0,1472,18],[29,0,1472,23],[30,0,1472,24],[36,0,1472,30],[37,0,1472,31],[41,0,1472,35],[42,0,1472,36],[77,0,1472,71],[78,0,1472,72],[82,0,1472,76],[84,0,1472,78],[104,0,1472,98],[105,0,1472,99],[106,0,1472,100],[107,0,1472,101]],[[12,0,1473,8],[13,0,1473,9],[14,0,1473,10],[15,0,1473,11]],[[12,0,1474,8],[19,0,1474,15],[24,0,1474,20],[25,0,1474,21]],[[8,0,1475,6],[9,0,1475,7],[10,0,1475,8],[12,0,1476,6],[15,0,1476,9],[16,0,1476,10],[17,0,1476,11],[25,0,1476,29],[27,0,1476,31],[29,0,1476,33]],[[12,0,1477,8],[19,0,1477,15],[27,0,1477,23]],[[17,0,1478,11],[20,0,1478,14],[21,0,1478,15],[25,0,1478,19],[26,0,1478,20],[28,0,1478,22],[29,0,1478,23],[43,0,1478,37],[44,0,1478,38],[48,0,1478,42],[50,0,1478,44],[54,0,1478,48],[55,0,1478,49],[57,0,1478,51],[58,0,1478,52],[67,0,1478,61],[68,0,1478,83],[69,0,1478,84],[70,0,1478,85]],[[8,0,1479,6],[9,0,1479,7],[10,0,1479,8],[11,0,1480,5],[12,0,1480,6]],[[4,0,1481,2],[5,0,1481,3]],[[4,0,1483,2]],[],[],[],[],[],[],[[7,0,1490,5]],[[4,0,1491,12],[33,0,1491,41],[34,0,1492,4],[38,0,1492,21],[40,0,1493,4],[63,0,1493,49],[65,0,1493,51]],[[8,0,1495,4],[14,0,1495,10],[19,0,1495,15],[22,0,1495,18],[26,0,1495,22],[27,0,1495,23],[62,0,1495,58],[63,0,1495,59],[67,0,1495,63],[69,0,1495,65],[89,0,1495,85],[90,0,1495,86],[91,0,1495,87]],[[8,0,1496,4],[15,0,1496,11],[20,0,1496,16],[21,0,1496,17],[24,0,1496,20],[25,0,1496,21],[29,0,1496,25],[30,0,1496,26],[32,0,1496,28],[33,0,1496,29],[47,0,1496,43],[48,0,1496,44],[52,0,1496,48],[54,0,1496,50],[58,0,1496,54],[59,0,1496,55],[61,0,1496,57],[62,0,1496,58],[71,0,1496,67],[72,0,1496,89],[73,0,1496,90],[74,0,1496,91]],[[4,0,1497,2],[5,0,1497,3]],[[4,0,1499,2]],[],[[7,0,1501,5]],[[4,0,1502,12],[39,0,1502,47],[40,0,1502,51],[44,0,1502,68],[46,0,1503,51],[69,0,1503,96],[71,0,1503,98]],[[8,0,1505,4],[12,0,1505,8],[32,0,1505,28],[36,0,1505,32],[40,0,1505,36],[44,0,1505,40],[64,0,1505,60],[65,0,1505,61],[71,0,1505,67],[76,0,1505,72],[77,0,1505,73],[79,0,1505,75]],[[12,0,1506,6],[19,0,1506,13],[20,0,1506,14],[24,0,1506,18],[25,0,1506,19],[42,0,1506,36],[43,0,1506,37],[47,0,1506,41],[48,0,1506,42],[49,0,1506,43]],[[9,0,1507,5]],[[8,0,1508,4],[12,0,1508,8],[20,0,1508,16],[23,0,1508,29],[25,0,1508,31],[26,0,1508,32]],[[8,0,1509,4],[16,0,1509,12],[17,0,1509,13],[21,0,1509,17],[22,0,1509,18],[26,0,1509,22],[27,0,1509,23],[44,0,1509,40],[45,0,1509,41],[49,0,1509,45],[50,0,1509,46],[51,0,1509,47]],[[8,0,1511,4],[28,0,1511,24],[29,0,1511,25],[36,0,1511,32],[37,0,1511,33],[40,0,1511,36],[41,0,1511,37],[43,0,1511,39]],[[12,0,1512,6],[16,0,1512,10],[21,0,1512,15],[22,0,1512,16],[29,0,1512,23],[30,0,1512,25],[34,0,1512,46],[35,0,1512,47],[38,0,1512,50],[39,0,1512,51],[43,0,1512,55],[44,0,1512,56],[45,0,1512,57],[49,0,1512,61],[50,0,1512,62],[53,0,1512,65],[54,0,1512,66],[59,0,1512,71],[61,0,1512,73]],[[16,0,1513,8],[89,0,1513,81]],[[16,0,1515,8],[22,0,1515,14],[27,0,1515,19],[30,0,1515,39],[34,0,1515,60],[35,0,1515,61],[38,0,1515,64],[39,0,1515,65],[43,0,1515,69],[44,0,1515,70],[45,0,1515,71]],[[16,0,1516,8],[21,0,1516,13],[22,0,1516,14],[29,0,1516,21],[30,0,1516,22],[37,0,1516,29],[38,0,1516,30],[40,0,1516,32]],[[20,0,1518,10],[24,0,1518,14],[27,0,1518,17],[28,0,1518,18],[42,0,1518,32],[44,0,1518,34]],[[24,0,1519,12],[32,0,1519,20],[35,0,1519,23],[43,0,1519,31],[44,0,1519,32],[50,0,1519,38],[51,0,1519,39],[55,0,1519,43],[56,0,1519,44],[91,0,1519,79],[92,0,1519,80],[99,0,1519,87],[101,0,1519,89],[104,0,1519,92],[105,0,1519,93],[119,0,1519,107],[120,0,1519,108],[121,0,1519,109],[122,0,1519,110]],[[21,0,1520,11]],[[25,0,1520,17]],[[24,0,1521,12],[32,0,1521,20],[33,0,1521,21],[37,0,1521,25],[38,0,1521,26],[45,0,1521,33],[46,0,1521,34],[63,0,1521,51],[64,0,1521,52],[68,0,1521,56],[69,0,1521,57],[70,0,1521,58]],[[21,0,1522,11]],[[16,0,1523,8],[17,0,1523,9],[18,0,1523,10],[19,0,1523,11]],[[13,0,1525,7]],[[17,0,1525,13],[19,0,1525,15],[52,0,1525,48]],[[16,0,1527,8],[20,0,1527,12],[23,0,1527,15],[24,0,1527,16],[38,0,1527,30],[40,0,1527,32]],[[20,0,1528,10],[28,0,1528,18],[31,0,1528,21],[39,0,1528,29],[40,0,1528,30],[46,0,1528,36],[47,0,1528,37],[51,0,1528,41],[52,0,1528,42],[87,0,1528,77],[88,0,1528,78],[92,0,1528,82],[94,0,1528,84],[97,0,1528,87],[98,0,1528,88],[112,0,1528,102],[113,0,1528,103],[114,0,1528,104],[115,0,1528,105]],[[17,0,1529,9]],[[21,0,1529,15]],[[20,0,1530,10],[26,0,1530,16],[33,0,1530,23],[36,0,1530,28],[40,0,1530,49],[41,0,1530,50],[44,0,1530,53],[45,0,1530,54],[49,0,1530,58],[50,0,1530,76],[51,0,1530,77]],[[20,0,1531,10],[24,0,1531,14],[31,0,1531,21],[35,0,1531,25],[39,0,1531,29],[43,0,1531,33],[49,0,1531,39],[53,0,1531,43],[60,0,1531,50],[61,0,1531,51],[78,0,1531,68],[80,0,1531,70]],[[24,0,1532,12],[32,0,1532,20],[33,0,1532,21],[37,0,1532,25],[38,0,1532,26],[45,0,1532,33],[46,0,1532,34],[63,0,1532,51],[64,0,1532,52],[68,0,1532,56],[69,0,1532,57],[70,0,1532,58]],[[21,0,1533,11]],[[20,0,1534,10],[77,0,1534,67]],[[17,0,1535,9]],[[13,0,1537,7]],[[8,0,1538,4],[9,0,1538,5],[10,0,1538,6],[11,0,1538,7]],[[8,0,1540,4],[15,0,1540,11],[23,0,1540,19],[24,0,1540,20]],[[4,0,1541,2],[5,0,1541,3]],[[4,0,1543,2]],[],[],[[7,0,1546,5]],[[4,0,1547,12],[44,0,1547,52],[45,0,1548,4],[49,0,1548,11],[51,0,1549,4],[74,0,1549,50],[76,0,1549,52]],[[8,0,1551,4],[61,0,1551,57]],[[8,0,1552,4],[12,0,1552,8],[22,0,1552,18],[25,0,1552,48],[27,0,1552,50],[28,0,1552,51]],[[8,0,1553,4],[14,0,1553,10],[28,0,1553,24],[31,0,1553,54],[33,0,1553,56],[34,0,1553,57]],[[8,0,1555,4],[116,0,1555,112]],[[8,0,1557,4],[30,0,1557,26]],[[8,0,1558,4],[13,0,1558,9],[19,0,1558,15],[20,0,1558,16],[23,0,1558,19],[25,0,1558,21],[30,0,1558,26],[31,0,1558,27],[35,0,1558,31],[41,0,1558,37],[42,0,1558,38],[49,0,1558,45],[50,0,1558,46],[54,0,1558,50],[55,0,1558,51],[57,0,1558,53]],[[12,0,1559,6],[39,0,1559,33]],[[12,0,1560,6],[16,0,1560,10],[36,0,1560,30],[40,0,1560,34],[60,0,1560,54],[61,0,1560,55],[67,0,1560,61],[70,0,1560,64],[71,0,1560,65],[73,0,1560,67]],[[16,0,1561,8],[22,0,1561,14],[41,0,1561,33],[44,0,1561,69],[64,0,1561,89],[65,0,1561,90],[69,0,1561,94],[70,0,1561,95],[77,0,1561,102],[78,0,1561,103],[80,0,1561,105],[81,0,1561,106],[88,0,1561,113],[89,0,1561,114],[93,0,1561,118],[98,0,1561,123],[101,0,1561,126],[102,0,1561,127],[103,0,1561,128]],[[16,0,1563,8],[20,0,1563,12],[39,0,1563,31],[41,0,1563,33]],[[20,0,1564,10],[34,0,1564,24],[35,0,1564,25],[38,0,1564,28],[39,0,1564,29],[42,0,1564,32],[47,0,1564,37],[48,0,1564,38]],[[17,0,1565,9]],[[21,0,1565,15]],[[20,0,1566,10],[30,0,1566,20],[31,0,1566,21],[34,0,1566,24],[35,0,1566,25],[38,0,1566,28],[43,0,1566,33],[44,0,1566,34]],[[17,0,1567,9]],[[13,0,1568,7]],[[17,0,1568,13]],[[16,0,1569,8],[26,0,1569,18],[29,0,1569,21],[33,0,1569,25],[34,0,1569,26]],[[13,0,1570,7]],[[9,0,1571,5]],[[8,0,1574,4],[15,0,1574,11]],[[12,0,1575,6],[22,0,1575,16]],[[12,0,1576,6],[26,0,1576,20]],[[9,0,1577,37],[10,0,1577,38]],[[4,0,1578,2],[5,0,1578,3]],[[4,0,1580,2]],[],[],[],[],[],[],[[7,0,1587,5]],[[4,0,1588,12],[16,0,1588,24],[17,0,1588,25],[22,0,1588,42]],[[8,0,1589,4],[15,0,1589,11],[19,0,1589,15],[20,0,1589,16],[25,0,1589,21],[26,0,1589,22],[32,0,1589,28],[34,0,1589,30],[35,0,1589,31],[36,0,1589,32],[40,0,1589,36],[41,0,1590,6],[45,0,1590,10],[46,0,1590,11],[47,0,1590,12],[48,0,1590,13],[49,0,1591,5],[50,0,1591,6]],[[4,0,1592,2],[5,0,1592,3]],[[1,0,1593,1]]],"sourcesContent":["import {combineLatest, forkJoin, from, Observable, of} from 'rxjs';\r\n\r\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\r\nimport {\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  QuerySnapshot,\r\n  writeBatch,\r\n  WriteBatch\r\n} from 'firebase/firestore';\r\n\r\nimport {\r\n  addCreatedDate,\r\n  addDataToItem,\r\n  addModifiedDate,\r\n  convertTimestampToDate,\r\n  getDocRefWithId,\r\n  getRefFromPath,\r\n  getSubCollection\r\n} from './helpers';\r\nimport {SubCollectionQuery} from './sub-collection-query';\r\nimport {FirestoreErrorExt, FirestoreWrapper} from './interfaces';\r\nimport {FireItem, FirestoreItem, FirestoreMetadata} from './models/firestoreItem';\r\nimport {SubCollectionWriter} from './sub-collection-writer';\r\nimport {moveItemInArray, transferArrayItem} from './drag-utils';\r\nimport {QueryContainer} from './firebase-extended-wrapper';\r\n\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport enum DocNotExistAction {\r\n  /** returns a null object */\r\n  RETURN_NULL,\r\n\r\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n  RETURN_ALL_BUT_DATA,\r\n\r\n  /** do not return at all until it does exist */\r\n  FILTER,\r\n\r\n  /** return doc not found error 'doc_not_found' */\r\n  THROW_DOC_NOT_FOUND,\r\n}\r\n\r\n/** Used internally */\r\ninterface CurrentDocSubCollectionSplit {\r\n  /** contains the document that is considered the current */\r\n  currentDoc: FireItem<{}>;\r\n  /** sub collections of current document */\r\n  subCollections: { [index: string]: any };\r\n}\r\n\r\n\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n\r\n  /**\r\n   * Constructor for AngularFirestoreWrapper\r\n   *\r\n   * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n   * @param defaultDocId The default name given to a subCollection document when no name is given\r\n   */\r\n  constructor(private fs: FirestoreWrapper, public defaultDocId: string = 'data') {\r\n  }\r\n\r\n  /* ----------  LISTEN -------------- */\r\n\r\n  /**\r\n   *\r\n   * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n   *\r\n   * Triggers for any change in any document that is listened to.\r\n   *\r\n   *\r\n   * E.x:\r\n   *      const subCollectionQueries: SubCollectionQuery[] = [\r\n   *         { name: 'data' },\r\n   *         { name: 'secure' },\r\n   *         { name: 'variants' },\r\n   *         { name: 'images',\r\n   *           queryFn: ref => ref.orderBy('index'),\r\n   *           collectionWithNames: [\r\n   *             { name: 'secure'}\r\n   *           ]\r\n   *         },\r\n   *     ];\r\n   *\r\n   *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n   *\r\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n   * All logic is in listenForDocDeepRecursiveHelper$.\r\n   *\r\n   * @param docRef - a docRef with potential queryFn\r\n   * @param subCollectionQueries - see example\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  public listenForDoc$<T = FirestoreItem | DocumentData>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA): Observable<FireItem<T>> {\r\n\r\n    return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(\r\n      map(data => data as FireItem<T>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n   *\r\n   * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n   * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n   *\r\n   *\r\n   *    Example usage.\r\n   *\r\n   *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n   *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n   *\r\n   *    constructor(private ngFireStore: AngularFirestore) {\r\n   *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n   *    }\r\n   *\r\n   *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n   *    }\r\n   *\r\n   *    If you do not wish to listen for changes and only care about getting the values once\r\n   *\r\n   *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n   *          take(1)\r\n   *        );\r\n   *    }\r\n   *\r\n   * @param collectionRef the collectionRef which will be listened to\r\n   * @param subCollectionQueries\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   */\r\n  public listenForCollection$<T = FirestoreItem | DocumentData>(\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.listenForCollectionSimple$<T>(collectionRef).pipe(\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n\r\n        if (items == null || items.length === 0) {\r\n          return of([]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(items);\r\n        }\r\n\r\n        const collectionListeners: Array<Observable<any>> = [];\r\n\r\n        items.forEach(item => {\r\n\r\n          const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n\r\n          collectionListeners.push(collectionListener);\r\n        });\r\n\r\n        /* Finally return the combined collection listeners */\r\n        return combineLatest(collectionListeners);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n   */\r\n  public listenForCollectionRecursively$<T = FirestoreItem | DocumentData>(\r\n    collectionPath: string,\r\n    collectionKey: string,\r\n    orderKey?: string): Observable<any> {\r\n\r\n    const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n    const collectionQuery = new QueryContainer<T>(collectionRef);\r\n    if (orderKey != null) {\r\n      collectionQuery.orderBy(orderKey);\r\n    }\r\n\r\n    return this.listenForCollectionSimple$<T>(collectionRef).pipe(\r\n      mergeMap((items: FireItem<T>[]) => {\r\n\r\n        if (items.length <= 0) {\r\n          return of([]);\r\n        } // TODO  perhaps make this throw an error so that we can skip it\r\n\r\n        // if (items.length <= 0) { throwError('No more '); }\r\n\r\n        const nextLevelObs: Array<Observable<FireItem<T>>> = [];\r\n\r\n        for (const item of items) {\r\n\r\n          // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n          const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey);  // one level deeper\r\n\r\n          const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(\r\n            map((nextLevelItems: Array<FireItem<T>>) => {\r\n              if (nextLevelItems.length > 0) {\r\n                return {...item, [collectionKey]: nextLevelItems} as FireItem<T>;\r\n              } else {\r\n                return {...item} as FireItem<T>;\r\n              }  // dont include an empty array\r\n            }),\r\n          );\r\n          nextLevelObs.push(nextLevelItems$);\r\n        }\r\n\r\n        return combineLatest(nextLevelObs).pipe(\r\n          tap(val => console.log(val))\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /* ---------- ADD -------------- */\r\n\r\n  /**\r\n   * Add document to firestore and split it up into sub collection.\r\n   *\r\n   * @param data the data to be saved\r\n   * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n   * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n   * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n   * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n   */\r\n  public add$<T = FirestoreItem>(\r\n    data: T,\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionWriters: SubCollectionWriter[] = [],\r\n    isAddDates: boolean = true,\r\n    docId?: string): Observable<FireItem<T>> {\r\n\r\n    if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'FirebaseErrorExt',\r\n        code: 'unknown',\r\n        message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n        stack: '',\r\n        data,\r\n        subCollectionWriters,\r\n        docId\r\n      };\r\n\r\n      throw error;\r\n    }\r\n\r\n    let currentDoc;\r\n    let subCollections: { [index: string]: any; } = {};\r\n\r\n    /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n    * Each item in the array will be saved as a map with the key being the array index\r\n    * We still want the return value of this function to be as an array non as a map\r\n    */\r\n    if (Array.isArray(data) && docId) {\r\n      currentDoc = data;\r\n    } else {\r\n      const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n      currentDoc = split.currentDoc;\r\n      subCollections = split.subCollections;\r\n    }\r\n\r\n    return this.addSimple$<T>(currentDoc as T, collectionRef, isAddDates, docId).pipe(\r\n      /* Add Sub/sub collections*/\r\n      mergeMap((currentData: FireItem<T>) => {\r\n\r\n        const subWriters: Array<Observable<any>> = [];\r\n\r\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n          let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n          let subDocId: string | undefined;\r\n\r\n          if (subCollectionWriters) {\r\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n          }\r\n\r\n          const subCollectionRef: CollectionReference = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n\r\n          /* Handle array and object differently\r\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n          * If a docId is given we should save it using that docId under a single doc.\r\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n          if (Array.isArray(subCollectionValue)) {\r\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n\r\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n              const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n                map(item => {\r\n                  // return {[key]: item};\r\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n                })\r\n              );\r\n              subWriters.push(subWriter);\r\n\r\n            } else { /* docId is undefined so we save each object in the array separate */\r\n              subCollectionValue.forEach((arrayValue: FireItem<{}>) => {\r\n\r\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(\r\n                  map(item => {\r\n                    // return {[key]: [item]};\r\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                    return {key: subCollectionKey, value: [item]};\r\n                  })\r\n                );\r\n\r\n                subWriters.push(subWriter);\r\n              });\r\n            }\r\n          } else { /* Not an array so a single Object*/\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n\r\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n            const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n              map(item => {\r\n                // return {[key]: item};\r\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n              })\r\n            );\r\n\r\n            subWriters.push(subWriter);\r\n          }\r\n        } /* end of iteration */\r\n\r\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n\r\n          /* the pipe only matters for the return value not for writing the data */\r\n          return combineLatest(subWriters).pipe(\r\n            // tap(sub => console.log(sub)),\r\n\r\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n            // TODO firestore.\r\n\r\n            map((docDatas: Array<Map<string, []>>) => { /* List of sub docs*/\r\n              const groupedData = {};\r\n\r\n              docDatas.forEach((doc: { [index: string]: any }) => { /* iterate over each doc */\r\n\r\n                const key = doc.key;\r\n                const value = doc.value;\r\n\r\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                // @ts-ignore\r\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                  // @ts-ignore\r\n                  (groupedData[key] as Array<any>).push(value[0]);\r\n                } else {\r\n                  // @ts-ignore\r\n                  groupedData[key] = value;\r\n                }\r\n              });\r\n\r\n              return groupedData as T;\r\n            }),\r\n\r\n            // tap(groupedData => console.log(groupedData)),\r\n\r\n            map((groupedData: T) => {\r\n              return {...currentData, ...groupedData} as T;\r\n            }),\r\n            // tap(d => console.log(d)),\r\n          );\r\n        } else {\r\n          return of(currentData);\r\n        }\r\n      })\r\n    ).pipe(\r\n      // @ts-ignore\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /* ----------  EDIT -------------- */\r\n\r\n  /**\r\n   * Update document and child documents\r\n   *\r\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n   * so its possible to introduce spelling mistakes on attributes and so forth\r\n   *\r\n   * @param data the data that is to be added or updated { [field: string]: any }\r\n   * @param docRef DocumentReference to be updated\r\n   * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n   * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n   */\r\n  public update$<A extends { [field: string]: any }>(data: Partial<A>,\r\n                                                     docRef: DocumentReference,\r\n                                                     subCollectionWriters: SubCollectionWriter[] = [],\r\n                                                     isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n      return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n    }\r\n\r\n    const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Update/ add data to the firestore documents\r\n   *\r\n   * @param docRefs list of DocumentReference to be have their data updated\r\n   * @param data data to add/update\r\n   * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n   */\r\n  public updateMultiple$<A>(docRefs: DocumentReference[], data: A, isAddModifiedDate: boolean = true): Observable<void> {\r\n    // const batch = this.fs.firebaseApp.firestore().batch();\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.update(docRef, data);\r\n    });\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /**\r\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n   * and then delete the old doc.\r\n   * returns the new doc once the delete is done.\r\n   *\r\n   * @param docRef DocumentReference to have its id changed\r\n   * @param newId the new id\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n   */\r\n  public changeDocId$<T>(docRef: DocumentReference,\r\n                         newId: string,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         subCollectionWriters?: SubCollectionWriter[]): Observable<FireItem<T>> {\r\n\r\n    if (subCollectionWriters == null) {\r\n      subCollectionWriters = subCollectionQueries as SubCollectionWriter[];\r\n    }\r\n\r\n    const collectionRef: CollectionReference = docRef.parent;\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      map((oldData: T) => this.cleanExtrasFromData(oldData, subCollectionWriters)),\r\n      switchMap((oldData: T) => {\r\n        return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe( /* add the data under id*/\r\n          mergeMap(newData => { /* delete the old doc */\r\n            return this.delete$(docRef, subCollectionQueries).pipe(\r\n              map(() => newData) /* keep the new data */\r\n            );\r\n          }),\r\n        );\r\n      }),\r\n      catchError(err => {\r\n        console.log('Failed to Change Doc Id: ' + err);\r\n        throw err;\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n  /* Move Item in Array */\r\n\r\n\r\n  /**\r\n   * Moved item within the same list so we need to update the index of all items in the list;\r\n   * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n   * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   */\r\n  public moveItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                       fromIndex: number,\r\n                                                       toIndex: number,\r\n                                                       useCopy = false): Observable<void> {\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n      return of();\r\n    }\r\n\r\n    if (items[0]?.firestoreMetadata == null) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'FirebaseErrorExt',\r\n        code: 'unknown',\r\n        message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n      };\r\n      throw error;\r\n    }\r\n\r\n    const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n   * Not called directly.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   * @protected\r\n   */\r\n  protected getBatchFromMoveItemInIndexedDocs<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                           fromIndex: number,\r\n                                                                           toIndex: number,\r\n                                                                           useCopy = false): WriteBatch {\r\n\r\n    const lowestIndex = Math.min(fromIndex, toIndex);\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n      return batch;\r\n    }\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    moveItemInArray<A>(usedItems, fromIndex, toIndex);\r\n\r\n    const listSliceToUpdate: Array<FireItem<A>> = usedItems.slice(lowestIndex);\r\n\r\n    let i = lowestIndex;\r\n    for (const item of listSliceToUpdate) {\r\n      if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n        item.index = i;\r\n      }\r\n      const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n      batch.update(ref, {index: i});\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indexToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                indexToDelete: number,\r\n                                                                subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    const itemToDelete = usedItems[indexToDelete];\r\n\r\n    // get the delete batch that also contains any sub collections of the item\r\n    return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n      map((batch) => {\r\n        // sort and remove the item from the usedItems and then add the update index to the batch\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        usedItems.splice(indexToDelete, 1);\r\n\r\n        this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch);\r\n\r\n        return batch;\r\n      }),\r\n\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indicesToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemsInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                 indicesToDelete: number[],\r\n                                                                 subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                 useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    usedItems.sort(item => item.index); // make sure array is sorted by index\r\n\r\n    const itemsToDelete = usedItems.filter((item, i) => {\r\n      return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n    });\r\n\r\n    // iterate in revese so as to not change the indices,\r\n    // the indicies to delete must also be sorted\r\n    indicesToDelete.sort();\r\n    for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n      usedItems.splice(indicesToDelete[i], 1);\r\n    }\r\n\r\n    const docRefsObs$: Observable<DocumentReference[]>[] = [];\r\n\r\n    // get the docRefs for items to be deleted including the ones in the subcollections\r\n    itemsToDelete.forEach(itemToDelete => {\r\n\r\n      const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n        take(1)\r\n      );\r\n      docRefsObs$.push(obs$);\r\n    });\r\n\r\n\r\n    return forkJoin(docRefsObs$).pipe(\r\n      take(1),\r\n      map((listOfDocRefs) => {\r\n        // concat all the separate docRefs lists into one array of docRefs\r\n        let docRefs: DocumentReference[] = [];\r\n\r\n        listOfDocRefs.forEach(refs => {\r\n          docRefs = docRefs.concat(refs);\r\n        });\r\n\r\n        return docRefs;\r\n      }),\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      map((batch: WriteBatch) => this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch)),\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Run this on collections with a fixed order using an index: number attribute;\r\n   * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n   * Basically needs to be run after a delete\r\n   *\r\n   * @param items\r\n   * @param batch\r\n   * @protected\r\n   */\r\n  protected getBatchFromUpdateIndexFromListOfDocs<A extends { index: number }>(\r\n    items: Array<FireItem<A>>,\r\n    batch: WriteBatch = writeBatch(this.fs.firestore)\r\n  ): WriteBatch {\r\n\r\n    items.forEach((item, index) => {\r\n      if (item.index !== index) {\r\n        item.index = index; // this is just so that the given array's index is also updated immediately\r\n        const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n        batch.update(ref, {index});\r\n      }\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  public transferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): Observable<void> {\r\n\r\n    const batch: WriteBatch = this.getBatchFromTransferItemInIndexedDocs(previousArray,\r\n      currentArray,\r\n      previousIndex,\r\n      currentIndex,\r\n      currentArrayName,\r\n      additionalDataUpdateOnMovedItem,\r\n      isUpdateModifiedDateOnMovedItem,\r\n      useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /* ----------  DELETE -------------- */\r\n\r\n  /**\r\n   * Delete Document and child documents\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public delete$(docRef: DocumentReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<void> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      return this.fs.delete(docRef);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      switchMap((docRefList: DocumentReference<DocumentData>[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(); }\r\n      //   else { throw err; }\r\n      // }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns Writebatch that is set to delete Document and child documents of given docRef\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param batch\r\n   */\r\n  public getDeleteBatch$(docRef: DocumentReference,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         batch: WriteBatch = writeBatch(this.fs.firestore)): Observable<WriteBatch> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      batch.delete(docRef);\r\n      return of(batch);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public deleteMultipleByPaths$(docPaths: string[]): Observable<any> {\r\n    const docRefs: DocumentReference[] =\r\n      docPaths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n\r\n    return this.deleteMultipleSimple$(docRefs);\r\n  }\r\n\r\n  /**\r\n   * Delete Documents and child documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteMultiple$(docRefs: DocumentReference[], subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n\r\n    const deepDocRefs$: Array<Observable<any>> = [];\r\n\r\n    docRefs.forEach(docRef => {\r\n      const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n      deepDocRefs$.push(docRefs$);\r\n    });\r\n\r\n    return combineLatest(deepDocRefs$).pipe(\r\n      // tap(lists => console.log(lists)),\r\n      map((lists: any[]) => {\r\n        let mainDocRefList: DocumentReference[] = [];\r\n        lists.forEach(list => {\r\n          mainDocRefList = mainDocRefList.concat(list);\r\n        });\r\n        return mainDocRefList;\r\n      }),\r\n      // tap(lists => console.log(lists)),\r\n      switchMap((docRefList: DocumentReference[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete all documents and sub collections as specified in subCollectionQueries.\r\n   * Not very efficient and causes a lot of db reads.\r\n   * If possible use the firebase CLI or the console instead when deleting large collections.\r\n   *\r\n   * @param collectionRef\r\n   * @param subCollectionQueries\r\n   */\r\n  public deleteCollection$(collectionRef: CollectionReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(\r\n      switchMap(docRefs => this.deleteMultiple$(docRefs))\r\n    ).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete firestore document by path\r\n   * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n   *\r\n   * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteDocByPath$(docPath: string, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    const docRef = getRefFromPath(docPath, this.fs.firestore) as DocumentReference;\r\n    return this.delete$(docRef, subCollectionQueries);\r\n  }\r\n\r\n  /**\r\n   * Delete document by FirestoreItem\r\n   *\r\n   * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n   *\r\n   * @param item FirestoreItem to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteItem$<T>(item: FireItem<T>, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n\r\n    return this.deleteMultipleSimple$(docRefs).pipe(\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /* ---- OTHER ---- */\r\n\r\n  /**\r\n   * clean FirestoreBaseItem properties from the data.\r\n   * Usually done if you wish to save the data to firestore, since some FirestoreBaseItem properties are of non allowed types.\r\n   *\r\n   * Goes through each level and removes DbItemExtras\r\n   * In case you wish to save the data\r\n   *\r\n   * @param data data to be cleaned, either single item or an array of items\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to locate them\r\n   * @param additionalFieldsToRemove\r\n   */\r\n\r\n  cleanExtrasFromData<T>(data: T & DocumentData,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): T;\r\n\r\n  cleanExtrasFromData<T>(datas: Array<T & DocumentData>,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): Array<T>;\r\n\r\n  public cleanExtrasFromData<T>(data: T & DocumentData | Array<T & DocumentData>,\r\n                                subCollectionWriters: SubCollectionWriter[] = [],\r\n                                additionalFieldsToRemove: string[] = []): T | Array<T> {\r\n\r\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n    // const dataToBeCleaned = data;\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n      const cleanDatas: Array<T> = [];\r\n\r\n      data.forEach(d => {\r\n        cleanDatas.push(\r\n          this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove) as T\r\n        );\r\n      });\r\n\r\n      return cleanDatas;\r\n\r\n    } else {\r\n      return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove) as T;\r\n    }\r\n  }\r\n\r\n\r\n  /* ----------  PROTECTED METHODS -------------- */\r\n\r\n  /**\r\n   * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n   * and also allows for to choose action to take when document does not exist\r\n   *\r\n   * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n   *\r\n   * @param docRef DocumentReference that will be listened to\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  protected listenForDocSimple$<T>(docRef: DocumentReference<any>,\r\n                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA\r\n  ): Observable<FireItem<T>> {\r\n\r\n    return this.fs.doc(docRef).pipe(\r\n      tap((snapshot: DocumentSnapshot) => {\r\n        if (!snapshot.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n          const error: FirestoreErrorExt = {\r\n            name: 'FirebaseErrorExt',\r\n            code: 'not-found',\r\n            message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n            docRef\r\n          };\r\n          throw error;\r\n        }\r\n      }),\r\n\r\n      filter((snapshot: DocumentSnapshot) => {\r\n        return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n      }),\r\n\r\n      map((snapshot: DocumentSnapshot) => {\r\n\r\n        if (snapshot.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n          const data = snapshot.data() as T;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: snapshot.id,\r\n            ref: snapshot.ref as DocumentReference<T>,\r\n            path: docRef.path,\r\n            isExists: snapshot.exists(),\r\n            snapshotMetadata: snapshot.metadata\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n          return null;\r\n        }\r\n        return null;\r\n      }),\r\n      map((data) => {\r\n        if (data != null) {\r\n          return convertTimestampToDate(data as FireItem<{}>);\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    ) as Observable<FireItem<T>>;\r\n  }\r\n\r\n  /**\r\n   * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n   * Used internally, please use listenForCollection$() instead.\r\n   *\r\n   * @param collectionRef the collectionRef which will be listened to\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   * @protected\r\n   */\r\n  protected listenForCollectionSimple$<T>(collectionRef: CollectionReference<any>): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.fs.collection(collectionRef).pipe(\r\n      map((snap: QuerySnapshot<T>) => {\r\n        return snap.docs.map(snapshot => {\r\n          const data = snapshot.data() as T;\r\n\r\n          const id = snapshot.id;\r\n          const ref = snapshot.ref as DocumentReference<T>;\r\n          const path = ref.path;\r\n          const snapshotMetadata = snapshot.metadata;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id,\r\n            path,\r\n            ref,\r\n            snapshotMetadata,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        });\r\n      }),\r\n      map((datas: Array<FireItem<T>>) => datas.map(data => {\r\n        convertTimestampToDate(data);\r\n        return data;\r\n      }))\r\n    ) as Observable<Array<FireItem<T>>>;\r\n  }\r\n\r\n  /**\r\n   * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n   *\r\n   * Please use listenForDoc or listenForCollection.\r\n   *\r\n   * @param item\r\n   * @param subCollectionQueries\r\n   * @protected\r\n   */\r\n  protected listenForCollectionsDeep<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<FireItem<T>[]> {\r\n\r\n    if (item == null) {\r\n      return of([item]);\r\n    }\r\n    if (subCollectionQueries.length <= 0) {\r\n      return of([item]);\r\n    }\r\n\r\n    const collectionListeners: Array<Observable<any>> = [];\r\n\r\n    /* Iterate over each sub collection we have given and create collection listeners*/\r\n    subCollectionQueries.forEach(subCollectionQuery => {\r\n\r\n      let collectionRef = getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name);\r\n      if (subCollectionQuery.queryFn) {\r\n        collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      }\r\n\r\n      const collectionListener = this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n        /* Uncomment to see data on each update */\r\n        // tap(d => console.log(d)),\r\n        // filter(docs => docs != null),\r\n        /* Listen For and Add any Potential Sub Docs*/\r\n        // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n        mergeMap((items: FireItem<{}>[]) => {\r\n\r\n          if (!subCollectionQuery.subCollections) {\r\n            return of(items);\r\n          }\r\n\r\n          const docListeners: Array<Observable<any>> = [];\r\n\r\n          items = items.filter(d => d != null); // filter out potential nulls\r\n\r\n          items.forEach((subItem: FireItem<{}>) => {\r\n            const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n            docListeners.push(subDocAndCollections$);\r\n          });\r\n\r\n          if (docListeners.length <= 0) {\r\n            return of([]);\r\n          } /* subCollectionQuery is empty or doesnt exist */\r\n\r\n          return combineLatest(docListeners).pipe(\r\n            // tap(val => console.log(val))\r\n          );\r\n        }), /* End of Listening for sub docs */\r\n        /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n        and we only care about the data. So we remove the array and just make it one object with the\r\n        subCollectionQuery name as key and docs[0] as value */\r\n        map((items: FireItem<{}>[]) => {\r\n          const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n\r\n          if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n            return {[subCollectionQuery.name]: items[0]};\r\n          } else {\r\n            return {[subCollectionQuery.name]: items};\r\n          }\r\n        }),\r\n        // tap(d => console.log(d)),\r\n      );\r\n\r\n      collectionListeners.push(collectionListener);\r\n    });\r\n\r\n    /* Finally return the combined collection listeners*/\r\n    // @ts-ignore\r\n    return combineLatest(collectionListeners).pipe(\r\n      map((collectionDatas: { [collectionkName: string]: FireItem<FireItem<{}>>[] }[]) => {\r\n        // map((collectionDatas) => {\r\n        const datasMap: { [field: string]: any } = {};\r\n\r\n        collectionDatas.forEach((collection) => {\r\n\r\n          for (const [collectionName, items] of Object.entries(collection)) {\r\n            datasMap[collectionName] = items;\r\n          }\r\n        });\r\n        return datasMap;\r\n      }),\r\n\r\n      map((data: DocumentData) => {\r\n        return {...item, ...data} as FireItem<T>;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n   */\r\n  protected listenForDocDeepRecursiveHelper$<T>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable<any> {\r\n\r\n    /* Listen for the docFs*/\r\n    return this.listenForDocSimple$<T>(docRef, actionIfNotExist).pipe(\r\n      mergeMap((item: FireItem<{}>) => {\r\n\r\n        if (item === null) {\r\n          return of(item);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(item);\r\n        }\r\n\r\n        return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A replacement/extension to the AngularFirestoreCollection.add.\r\n   * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n   * the data with the added properties in FirebaseDbItem\r\n   *\r\n   * Used internally\r\n   *\r\n   * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n   * @param collectionRef the CollectionReference where the document should be added\r\n   * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n   * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n   */\r\n  protected addSimple$<T>(data: T, collectionRef: CollectionReference<T>, isAddDates: boolean = true, id?: string):\r\n    Observable<FireItem<T>> {\r\n\r\n    // let dataToBeSaved: A = Object.assign({}, data);\r\n\r\n    let res$: Observable<any>;\r\n\r\n    if (isAddDates) {\r\n      const date = new Date();\r\n      data = addCreatedDate(data, false, date);\r\n      data = addModifiedDate(data, false, date);\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      const docRef: DocumentReference = getDocRefWithId(collectionRef, id);\r\n      res$ = this.fs.set(docRef, data);\r\n    } else {\r\n      res$ = this.fs.add<T>(collectionRef, data);\r\n    }\r\n\r\n    // if (Array.isArray(data) && isAddDates) {\r\n    //   data = data.map(item => {\r\n    //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n    //   })\r\n    // }\r\n\r\n    res$ = res$.pipe(\r\n      // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n      // tap(ref => console.log(ref)),\r\n      // tap(() => console.log(data)),\r\n      map((ref: DocumentReference<T> | undefined) => {\r\n        if (id === undefined && ref) {\r\n\r\n          const path = ref.path;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: ref.id,\r\n            path,\r\n            ref,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else { // if id is defined it means we used docRef.set and ref is undefined\r\n          const path = collectionRef.path + '/' + id;\r\n          ref = getRefFromPath(path, this.fs.firestore) as DocumentReference<T>;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: id as string,\r\n            ref,\r\n            path,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return res$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /** Used internally for updates that doesn't affect child documents */\r\n  protected updateSimple$<A>(data: A, docRef: DocumentReference, isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n    return this.fs.update(docRef, data);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, used by update deep\r\n   */\r\n  protected updateDeepToBatchHelper<A>(data: A,\r\n                                       docRef: DocumentReference,\r\n                                       subCollectionWriters: SubCollectionWriter[] = [],\r\n                                       isAddModifiedDate: boolean = true,\r\n                                       batch?: WriteBatch): WriteBatch {\r\n\r\n    if (batch === undefined) {\r\n      batch = writeBatch(this.fs.firestore);\r\n    }\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n    const currentDoc = split.currentDoc;\r\n    const subCollections = split.subCollections;\r\n\r\n    // console.log(currentDoc, subCollections);\r\n    batch.update(docRef, currentDoc);\r\n\r\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n\r\n      let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n      let subDocId: string | undefined;\r\n\r\n      if (subCollectionWriters) {\r\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n      }\r\n\r\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n\r\n      // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n      const subCollection = getSubCollection(docRef, subCollectionKey);\r\n      const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n\r\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n   * have an index value and a groupName.\r\n   *\r\n   * @param previousArray\r\n   * @param currentArray\r\n   * @param previousIndex\r\n   * @param currentIndex\r\n   * @param currentArrayName\r\n   * @param additionalDataUpdateOnMovedItem\r\n   * @param isUpdateModifiedDateOnMovedItem\r\n   * @param useCopy\r\n   * @protected\r\n   */\r\n  protected getBatchFromTransferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): WriteBatch {\r\n\r\n    let usedPreviousArray: Array<FireItem<A>>;\r\n    let usedCurrentArray: Array<FireItem<A>>;\r\n    if (useCopy) {\r\n      usedPreviousArray = Object.assign([], previousArray);\r\n      usedCurrentArray = Object.assign([], currentArray);\r\n    } else {\r\n      usedPreviousArray = previousArray;\r\n      usedCurrentArray = currentArray;\r\n    }\r\n\r\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (additionalDataUpdateOnMovedItem !== undefined) {\r\n      const movedItem = usedCurrentArray[currentIndex];\r\n      const movedItemRef = movedItem.firestoreMetadata.ref;\r\n\r\n      const data = {...additionalDataUpdateOnMovedItem, groupName: currentArrayName};\r\n\r\n      if (!useCopy) {\r\n        addDataToItem(movedItem, data, true);\r\n      }\r\n\r\n      if (isUpdateModifiedDateOnMovedItem) {\r\n        const date = new Date();\r\n        addModifiedDate(data, true, date);\r\n\r\n        if (!useCopy) {\r\n          addModifiedDate(movedItem, true, date);\r\n        }\r\n      }\r\n      batch.update(movedItemRef, data);\r\n    }\r\n\r\n    const currentArraySliceToUpdate: Array<FireItem<A>> = usedCurrentArray.slice(currentIndex);\r\n    let i = currentIndex;\r\n    for (const item of currentArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    const prevArraySliceToUpdate: Array<FireItem<A>> = usedPreviousArray.slice(previousIndex);\r\n    i = previousIndex;\r\n    for (const item of prevArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete Documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   */\r\n  protected deleteMultipleSimple$(docRefs: DocumentReference[]): Observable<void> {\r\n\r\n    const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  protected getDeleteMultipleSimpleBatch(docRefs: DocumentReference[], batch: WriteBatch = writeBatch(this.fs.firestore)): WriteBatch {\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.delete(docRef);\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n   *\r\n   * @param dbItem the data to be cleaned\r\n   * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n   * @param additionalFieldsToRemove\r\n   */\r\n  protected removeDataExtrasRecursiveHelper<T>(dbItem: T & DocumentData,\r\n                                               subCollectionWriters: SubCollectionWriter[] = [],\r\n                                               additionalFieldsToRemove: string[] = []): T {\r\n\r\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n    const extraPropertyNames: string[] = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n\r\n    /* Current level delete */\r\n    for (const extraPropertyName of extraPropertyNames) {\r\n      delete dbItem[extraPropertyName];\r\n    }\r\n\r\n    subCollectionWriters.forEach(col => {\r\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n\r\n        const docs: FireItem<T>[] = dbItem[col.name];\r\n        docs.forEach((d, i) => {\r\n\r\n          if (col.subCollections) {\r\n            this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n          } else {\r\n            /*  */\r\n            for (const extraPropertyName of extraPropertyNames) {\r\n              delete dbItem[col.name][i][extraPropertyName];\r\n            }\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n        } else {\r\n          for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[col.name][extraPropertyName];\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return dbItem;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n   * Mainly used to delete a docFs and its sub docs\r\n   * @param ref: DocumentReference | CollectionReference\r\n   * @param subCollectionQueries: SubCollectionQuery[]\r\n   */\r\n  protected getDocumentReferencesDeep$(ref: DocumentReference | CollectionReference,\r\n                                       subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    if (ref instanceof DocumentReference) {\r\n      return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n    } else { // CollectionReference\r\n      return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n    }\r\n  }\r\n\r\n  protected getDocumentReferencesFromDocRef$(docRef: DocumentReference,\r\n                                             subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      take(1),\r\n      map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)),\r\n      // tap(pathList => console.log(pathList)),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n      // tap(item => console.log(item)),\r\n    );\r\n  }\r\n\r\n  protected getDocumentReferencesFromCollectionRef$(collectionRef: CollectionReference,\r\n                                                    subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForCollectionSimple$(collectionRef).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n        let docListeners: Array<Observable<any>>;\r\n        docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n        return combineLatest(docListeners);\r\n      }),\r\n      map((items: FireItem<{}>[]) => {\r\n\r\n        let paths: string[] = [];\r\n\r\n        items.forEach(item => {\r\n          paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n        });\r\n        return paths;\r\n      }),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n   * including child documents using SubCollectionQueries\r\n   *\r\n   * Internal use\r\n   * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n   * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  protected getDocumentReferencesFromItem<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): DocumentReference[] {\r\n\r\n    const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n    return paths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n   */\r\n  protected getPathsFromItemDeepRecursiveHelper<T>(item: FireItem<T>,\r\n                                                   subCollectionQueries: SubCollectionQuery[] = []): string[] {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return [item.firestoreMetadata.path];\r\n    }\r\n    let pathList: string[] = [];\r\n    pathList.push(item.firestoreMetadata.path);\r\n\r\n    subCollectionQueries.forEach(col => {\r\n      if (Array.isArray((item as DocumentData)[col.name]) && !col.docId) {\r\n        /* property is array and not using docId so will contain multiple docs */\r\n\r\n        const items: FireItem<{}>[] = (item as DocumentData)[col.name];\r\n        items.forEach(subItem => {\r\n\r\n          if (col.subCollections) {\r\n            pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n          } else {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n        } else {\r\n          const subItem = ((item as DocumentData)[col.name] as FireItem<{}>);\r\n          if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n          // const path = (dbItem[col.name] as FirestoreItem).path;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return pathList;\r\n  }\r\n\r\n  /**\r\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n   * Only goes one sub level deep;\r\n   */\r\n  protected splitDataIntoCurrentDocAndSubCollections<T>(\r\n    data: T,\r\n    subCollectionWriters: SubCollectionWriter[] = []): CurrentDocSubCollectionSplit {\r\n\r\n    /* Split data into current doc and sub collections */\r\n    let currentDoc: { [index: string]: any; } = {};\r\n    const subCollections: { [index: string]: any; } = {};\r\n\r\n    /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n\r\n    // not array so object\r\n    for (const [key, value] of Object.entries(data)) {\r\n      // console.log(key, value);\r\n      if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n        const subCollectionWriter: SubCollectionWriter | undefined = subCollectionWriters.find(subColl => subColl.name === key);\r\n\r\n        if (subCollectionWriter) {\r\n          subCollections[key] = value;\r\n        } else {\r\n          currentDoc[key] = value;\r\n        }\r\n      } else {\r\n        currentDoc = data;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      currentDoc,\r\n      subCollections\r\n    } as CurrentDocSubCollectionSplit;\r\n  }\r\n\r\n  /**\r\n   * Turn a batch into an Observable instead of Promise.\r\n   *\r\n   * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n   * everything else.\r\n   *\r\n   * This method turns it into an observable\r\n   */\r\n  protected batchCommit$(batch: WriteBatch): Observable<void> {\r\n    return from(batch.commit()).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firebase-extended-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./drag-utils":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1697,"body":[{"type":"ExportNamedDeclaration","start":71,"end":81,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlGbn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jdW1lbnQgYW5kIG11bHRpcGxlIHN1YiBDb2xsZWN0aW9ucyBpbiB0aGF0IERvY3VtZW50XHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdWJDb2xsZWN0aW9uUXVlcnkge1xyXG5cclxuICAvKiogdGhlIG5hbWUgb2YgdGhlIHN1YkNvbGxlY3Rpb24gdG8gYmUgcmVhZC4gKi9cclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTcGVjaWZpZWQgRG9jdW1lbnQgbmFtZSBpZiBtdWx0aXBsZSBkb2N1bWVudHMgaW4gY29sbGVjdGlvbiBpcyBub3QgdXNlZCAqL1xyXG4gIGRvY0lkPzogc3RyaW5nO1xyXG5cclxuICAvKiogQW55IFN1YkNvbGxlY3Rpb25zIHRvIGJlIHJlYWQgaW4gdGhlIENvbGxlY3Rpb24gKi9cclxuICBzdWJDb2xsZWN0aW9ucz86IFN1YkNvbGxlY3Rpb25RdWVyeVtdO1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIFRoZSBDb2xsZWN0aW9uIFF1ZXJ5Rm4uXHJcbiAgICpcclxuICAgKiBFeGFtcGxlOlxyXG4gICAqIGNvbnN0IHF1ZXJ5ID0gcmVmLndoZXJlKCd0eXBlJywgJz09JywgJ0Jvb2snKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc+JyAxOC4wMClcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHJpY2UnLCAnPCcgMTAwLjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdjYXRlZ29yeScsICc9PScsICdGaWN0aW9uJylcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHVibGlzaGVyJywgJz09JywgJ0JpZ1B1Ymxpc2hlcicpXHJcbiAgICpcclxuICAgKi9cclxuICBxdWVyeUZuPzogUXVlcnlGbjtcclxufVxyXG4iXX0=","start":83,"end":1697}]},"code":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlGbn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jdW1lbnQgYW5kIG11bHRpcGxlIHN1YiBDb2xsZWN0aW9ucyBpbiB0aGF0IERvY3VtZW50XHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdWJDb2xsZWN0aW9uUXVlcnkge1xyXG5cclxuICAvKiogdGhlIG5hbWUgb2YgdGhlIHN1YkNvbGxlY3Rpb24gdG8gYmUgcmVhZC4gKi9cclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTcGVjaWZpZWQgRG9jdW1lbnQgbmFtZSBpZiBtdWx0aXBsZSBkb2N1bWVudHMgaW4gY29sbGVjdGlvbiBpcyBub3QgdXNlZCAqL1xyXG4gIGRvY0lkPzogc3RyaW5nO1xyXG5cclxuICAvKiogQW55IFN1YkNvbGxlY3Rpb25zIHRvIGJlIHJlYWQgaW4gdGhlIENvbGxlY3Rpb24gKi9cclxuICBzdWJDb2xsZWN0aW9ucz86IFN1YkNvbGxlY3Rpb25RdWVyeVtdO1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIFRoZSBDb2xsZWN0aW9uIFF1ZXJ5Rm4uXHJcbiAgICpcclxuICAgKiBFeGFtcGxlOlxyXG4gICAqIGNvbnN0IHF1ZXJ5ID0gcmVmLndoZXJlKCd0eXBlJywgJz09JywgJ0Jvb2snKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc+JyAxOC4wMClcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHJpY2UnLCAnPCcgMTAwLjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdjYXRlZ29yeScsICc9PScsICdGaWN0aW9uJylcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHVibGlzaGVyJywgJz09JywgJ0JpZ1B1Ymxpc2hlcicpXHJcbiAgICpcclxuICAgKi9cclxuICBxdWVyeUZuPzogUXVlcnlGbjtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlGbn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jdW1lbnQgYW5kIG11bHRpcGxlIHN1YiBDb2xsZWN0aW9ucyBpbiB0aGF0IERvY3VtZW50XHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdWJDb2xsZWN0aW9uUXVlcnkge1xyXG5cclxuICAvKiogdGhlIG5hbWUgb2YgdGhlIHN1YkNvbGxlY3Rpb24gdG8gYmUgcmVhZC4gKi9cclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTcGVjaWZpZWQgRG9jdW1lbnQgbmFtZSBpZiBtdWx0aXBsZSBkb2N1bWVudHMgaW4gY29sbGVjdGlvbiBpcyBub3QgdXNlZCAqL1xyXG4gIGRvY0lkPzogc3RyaW5nO1xyXG5cclxuICAvKiogQW55IFN1YkNvbGxlY3Rpb25zIHRvIGJlIHJlYWQgaW4gdGhlIENvbGxlY3Rpb24gKi9cclxuICBzdWJDb2xsZWN0aW9ucz86IFN1YkNvbGxlY3Rpb25RdWVyeVtdO1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIFRoZSBDb2xsZWN0aW9uIFF1ZXJ5Rm4uXHJcbiAgICpcclxuICAgKiBFeGFtcGxlOlxyXG4gICAqIGNvbnN0IHF1ZXJ5ID0gcmVmLndoZXJlKCd0eXBlJywgJz09JywgJ0Jvb2snKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc+JyAxOC4wMClcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHJpY2UnLCAnPCcgMTAwLjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdjYXRlZ29yeScsICc9PScsICdGaWN0aW9uJylcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHVibGlzaGVyJywgJz09JywgJ0JpZ1B1Ymxpc2hlcicpXHJcbiAgICpcclxuICAgKi9cclxuICBxdWVyeUZuPzogUXVlcnlGbjtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"sub-collection-query.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/sub-collection-query.ts"],"names":[],"mappings":[[[0,0,0,0],[69,0,0,69]]],"sourcesContent":["/* For Listening to a Doc and multiple sub collections in that doc */\r\n\r\nimport {QueryFn} from './interfaces';\r\n\r\n/**\r\n * For Listening to a Document and multiple sub Collections in that Document\r\n */\r\n\r\nexport interface SubCollectionQuery {\r\n\r\n  /** the name of the subCollection to be read. */\r\n  name: string;\r\n\r\n  /** Specified Document name if multiple documents in collection is not used */\r\n  docId?: string;\r\n\r\n  /** Any SubCollections to be read in the Collection */\r\n  subCollections?: SubCollectionQuery[];\r\n\r\n  /**\r\n   *\r\n   * The Collection QueryFn.\r\n   *\r\n   * Example:\r\n   * const query = ref.where('type', '==', 'Book')\r\n   *                  .where('price', '>' 18.00)\r\n   *                  .where('price', '<' 100.00)\r\n   *                  .where('category', '==', 'Fiction')\r\n   *                  .where('publisher', '==', 'BigPublisher')\r\n   *\r\n   */\r\n  queryFn?: QueryFn;\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":7998,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","start":12,"end":7998}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2946,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5leHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVXcmFwcGVyIHtcclxuICBmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHA7XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlO1xyXG5cclxuICAvLyBkb2NcclxuICBkb2M8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj47XHJcblxyXG4gIHNldDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBULCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj47XHJcblxyXG4gIHVwZGF0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBVcGRhdGVEYXRhPFBhcnRpYWw8VD4+LCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGRlbGV0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTx2b2lkPjtcclxuXHJcbiAgLy8gY29sbGVjdGlvblxyXG4gIC8vIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeURvY3VtZW50U25hcHNob3Q8VD5bXT47XHJcbiAgY29sbGVjdGlvbjxUPihxdWVyeTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+O1xyXG5cclxufVxyXG4iXX0=","start":12,"end":2946}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5leHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVXcmFwcGVyIHtcclxuICBmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHA7XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlO1xyXG5cclxuICAvLyBkb2NcclxuICBkb2M8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj47XHJcblxyXG4gIHNldDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBULCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj47XHJcblxyXG4gIHVwZGF0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBVcGRhdGVEYXRhPFBhcnRpYWw8VD4+LCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGRlbGV0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTx2b2lkPjtcclxuXHJcbiAgLy8gY29sbGVjdGlvblxyXG4gIC8vIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeURvY3VtZW50U25hcHNob3Q8VD5bXT47XHJcbiAgY29sbGVjdGlvbjxUPihxdWVyeTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+O1xyXG5cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5leHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVXcmFwcGVyIHtcclxuICBmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHA7XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlO1xyXG5cclxuICAvLyBkb2NcclxuICBkb2M8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj47XHJcblxyXG4gIHNldDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBULCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj47XHJcblxyXG4gIHVwZGF0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBVcGRhdGVEYXRhPFBhcnRpYWw8VD4+LCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGRlbGV0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTx2b2lkPjtcclxuXHJcbiAgLy8gY29sbGVjdGlvblxyXG4gIC8vIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeURvY3VtZW50U25hcHNob3Q8VD5bXT47XHJcbiAgY29sbGVjdGlvbjxUPihxdWVyeTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+O1xyXG5cclxufVxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4401,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":28,"imported":{"type":"Identifier","start":24,"end":28,"name":"noop"},"local":{"type":"Identifier","start":24,"end":28,"name":"noop"}}],"source":{"type":"Literal","start":36,"end":42,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":45,"end":98,"specifiers":[{"type":"ImportSpecifier","start":54,"end":57,"imported":{"type":"Identifier","start":54,"end":57,"name":"map"},"local":{"type":"Identifier","start":54,"end":57,"name":"map"}},{"type":"ImportSpecifier","start":59,"end":68,"imported":{"type":"Identifier","start":59,"end":68,"name":"startWith"},"local":{"type":"Identifier","start":59,"end":68,"name":"startWith"}},{"type":"ImportSpecifier","start":70,"end":73,"imported":{"type":"Identifier","start":70,"end":73,"name":"tap"},"local":{"type":"Identifier","start":70,"end":73,"name":"tap"}}],"source":{"type":"Literal","start":81,"end":97,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":100,"end":128,"declarations":[{"type":"VariableDeclarator","start":106,"end":127,"id":{"type":"Identifier","start":106,"end":109,"name":"nop"},"init":{"type":"ArrowFunctionExpression","start":112,"end":127,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":118,"end":127,"callee":{"type":"Identifier","start":118,"end":121,"name":"tap"},"arguments":[{"type":"Identifier","start":122,"end":126,"name":"noop"}],"optional":false}}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":512,"end":893,"declaration":{"type":"VariableDeclaration","start":519,"end":893,"declarations":[{"type":"VariableDeclarator","start":525,"end":892,"id":{"type":"Identifier","start":525,"end":546,"name":"combineLatestToObject"},"init":{"type":"ArrowFunctionExpression","start":549,"end":892,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":550,"end":561,"name":"observables"}],"body":{"type":"BlockStatement","start":566,"end":892,"body":[{"type":"VariableDeclaration","start":573,"end":611,"declarations":[{"type":"VariableDeclarator","start":579,"end":610,"id":{"type":"Identifier","start":579,"end":583,"name":"keys"},"init":{"type":"CallExpression","start":586,"end":610,"callee":{"type":"MemberExpression","start":586,"end":597,"object":{"type":"Identifier","start":586,"end":592,"name":"Object"},"property":{"type":"Identifier","start":593,"end":597,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":598,"end":609,"name":"observables"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":617,"end":889,"argument":{"type":"CallExpression","start":624,"end":888,"callee":{"type":"MemberExpression","start":624,"end":817,"object":{"type":"CallExpression","start":624,"end":812,"callee":{"type":"Identifier","start":624,"end":637,"name":"combineLatest"},"arguments":[{"type":"CallExpression","start":638,"end":811,"callee":{"type":"MemberExpression","start":638,"end":646,"object":{"type":"Identifier","start":638,"end":642,"name":"keys"},"property":{"type":"Identifier","start":643,"end":646,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":647,"end":810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":647,"end":648,"name":"k"}],"body":{"type":"BlockStatement","start":652,"end":810,"body":[{"type":"VariableDeclaration","start":663,"end":690,"declarations":[{"type":"VariableDeclarator","start":669,"end":689,"id":{"type":"Identifier","start":669,"end":672,"name":"obs"},"init":{"type":"MemberExpression","start":675,"end":689,"object":{"type":"Identifier","start":675,"end":686,"name":"observables"},"property":{"type":"Identifier","start":687,"end":688,"name":"k"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":700,"end":803,"argument":{"type":"ConditionalExpression","start":707,"end":802,"test":{"type":"CallExpression","start":707,"end":725,"callee":{"type":"MemberExpression","start":707,"end":720,"object":{"type":"Identifier","start":707,"end":712,"name":"Array"},"property":{"type":"Identifier","start":713,"end":720,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":721,"end":724,"name":"obs"}],"optional":false},"consequent":{"type":"CallExpression","start":741,"end":771,"callee":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"MemberExpression","start":741,"end":747,"object":{"type":"Identifier","start":741,"end":744,"name":"obs"},"property":{"type":"Literal","start":745,"end":746,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":748,"end":752,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":753,"end":770,"callee":{"type":"Identifier","start":753,"end":762,"name":"startWith"},"arguments":[{"type":"MemberExpression","start":763,"end":769,"object":{"type":"Identifier","start":763,"end":766,"name":"obs"},"property":{"type":"Literal","start":767,"end":768,"value":1,"raw":"1"},"computed":true,"optional":false}],"optional":false}],"optional":false},"alternate":{"type":"CallExpression","start":787,"end":802,"callee":{"type":"MemberExpression","start":787,"end":795,"object":{"type":"Identifier","start":787,"end":790,"name":"obs"},"property":{"type":"Identifier","start":791,"end":795,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":796,"end":801,"callee":{"type":"Identifier","start":796,"end":799,"name":"nop"},"arguments":[],"optional":false}],"optional":false}}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":813,"end":817,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":818,"end":887,"callee":{"type":"Identifier","start":818,"end":821,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":822,"end":886,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":822,"end":823,"name":"b"}],"body":{"type":"CallExpression","start":827,"end":886,"callee":{"type":"MemberExpression","start":827,"end":835,"object":{"type":"Identifier","start":827,"end":828,"name":"b"},"property":{"type":"Identifier","start":829,"end":835,"name":"reduce"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":836,"end":881,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":837,"end":840,"name":"acc"},{"type":"Identifier","start":842,"end":845,"name":"val"},{"type":"Identifier","start":847,"end":848,"name":"i"}],"body":{"type":"ObjectExpression","start":854,"end":880,"properties":[{"type":"SpreadElement","start":856,"end":862,"argument":{"type":"Identifier","start":859,"end":862,"name":"acc"}},{"type":"Property","start":864,"end":878,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":865,"end":872,"object":{"type":"Identifier","start":865,"end":869,"name":"keys"},"property":{"type":"Identifier","start":870,"end":871,"name":"i"},"computed":true,"optional":false},"value":{"type":"Identifier","start":875,"end":878,"name":"val"},"kind":"init"}]}},{"type":"ObjectExpression","start":883,"end":885,"properties":[]}],"optional":false}}],"optional":false}],"optional":false}}]}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","start":895,"end":4401}]},"code":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","customTransformCache":false,"dependencies":["rxjs","rxjs/operators"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","originalSourcemap":{"version":3,"file":"combine-latest-to-object.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/rxjs-ops/combine-latest-to-object.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,42],[36,0,0,48],[42,0,0,54],[43,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[12,0,1,11],[14,0,1,13],[23,0,1,22],[25,0,1,24],[28,0,1,27],[30,0,1,29],[36,0,1,35],[52,0,1,51],[53,0,1,52]],[[0,0,13,0],[6,0,13,6],[9,0,13,9],[12,0,13,12],[15,0,13,18],[17,0,13,20],[18,0,13,21],[21,0,13,24],[22,0,13,28],[26,0,13,32],[27,0,13,33],[28,0,13,34]],[[0,0,15,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[7,0,35,7],[13,0,35,13],[34,0,35,34],[37,0,35,37],[38,0,39,4],[49,0,39,20],[51,0,39,40],[53,0,39,42]],[[4,0,40,2],[10,0,40,8],[14,0,40,12],[17,0,40,15],[23,0,40,21],[24,0,40,22],[28,0,40,26],[29,0,40,27],[40,0,40,38],[41,0,40,39],[42,0,40,40]],[[4,0,42,2],[11,0,42,9],[24,0,42,22],[25,0,43,4],[29,0,43,8],[30,0,43,9],[33,0,43,12],[34,0,43,13],[35,0,43,14],[36,0,43,15],[38,0,43,17]],[[8,0,44,6],[14,0,44,12],[17,0,44,15],[20,0,44,18],[31,0,44,29],[32,0,44,30],[33,0,44,31],[34,0,44,32],[35,0,44,33]],[[8,0,46,6],[15,0,46,13],[20,0,46,18],[21,0,46,19],[28,0,46,26],[29,0,46,27],[32,0,46,30],[33,0,46,31]],[[12,0,47,8],[13,0,47,9],[14,0,47,10],[17,0,47,13],[18,0,47,14],[19,0,47,15],[20,0,47,16],[21,0,47,17],[25,0,47,21],[26,0,47,22],[35,0,47,31],[36,0,47,32],[39,0,47,35],[40,0,47,36],[41,0,47,37],[42,0,47,38],[43,0,47,39],[44,0,47,40]],[[12,0,48,8],[13,0,48,9],[14,0,48,10],[17,0,48,13],[18,0,48,14],[22,0,48,18],[23,0,48,20],[26,0,48,23],[28,0,48,25],[29,0,48,26],[30,0,48,27]],[[4,0,49,4],[5,0,49,5],[6,0,49,6],[7,0,50,3],[8,0,50,4],[12,0,50,8],[13,0,51,4],[16,0,51,7],[17,0,51,8],[18,0,51,9],[19,0,51,10],[21,0,51,12],[22,0,51,13],[23,0,51,14],[24,0,51,15],[30,0,51,21],[31,0,51,22],[32,0,51,23],[35,0,51,26],[37,0,51,28],[40,0,51,31],[42,0,51,33],[43,0,51,34],[45,0,51,36],[47,0,51,38],[48,0,51,39],[49,0,51,40],[51,0,51,42],[54,0,51,45],[57,0,51,48],[59,0,51,50],[60,0,51,51],[64,0,51,55],[65,0,51,56],[66,0,51,57],[67,0,51,58],[68,0,51,59],[70,0,51,61],[73,0,51,64],[75,0,51,66],[76,0,51,67],[78,0,51,69],[80,0,51,71],[81,0,51,72],[82,0,51,73],[83,0,52,3],[84,0,52,4]],[[0,0,53,0],[1,0,53,1],[2,0,53,2]]],"sourcesContent":["import { combineLatest, noop, Observable } from 'rxjs';\r\nimport {map, startWith, tap } from 'rxjs/operators';\r\n\r\nexport interface OperatorDict<X> {\r\n  [key: string]: Observable<X> | [Observable<X>, X];\r\n}\r\n\r\n/**\r\n * Extracts the type `T` of an `Observable<T>`\r\n */\r\nexport type ExtractObservableType<A> = A extends Observable<infer B> ? B : never;\r\n\r\n\r\nconst nop = <T>() => tap<T>(noop);\r\n\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = <\r\n  TIn extends OperatorDict<any>, TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K]> }\r\n  // TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K] extends Array<any> ? TIn[K][0] : TIn[K]> }\r\n\r\n  >(observables: TIn): Observable<TOut> => {\r\n  const keys = Object.keys(observables);\r\n\r\n  return combineLatest(\r\n    keys.map(k => {\r\n      const obs = observables[k];\r\n\r\n      return Array.isArray(obs)\r\n        ? obs[0].pipe(startWith(obs[1]))\r\n        : obs.pipe( nop());\r\n    }),\r\n  ).pipe(\r\n    map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {}))\r\n  );\r\n};\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1954,"body":[{"type":"ExportNamedDeclaration","start":96,"end":128,"declaration":{"type":"ClassDeclaration","start":103,"end":128,"id":{"type":"Identifier","start":109,"end":123,"name":"FirebaseConfig"},"superClass":null,"body":{"type":"ClassBody","start":124,"end":128,"body":[]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":218,"end":330,"declaration":{"type":"VariableDeclaration","start":225,"end":330,"declarations":[{"type":"VariableDeclarator","start":231,"end":329,"id":{"type":"Identifier","start":231,"end":253,"name":"FIRESTORE_USE_EMULATOR"},"init":{"type":"ObjectExpression","start":256,"end":329,"properties":[{"type":"Property","start":291,"end":308,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":291,"end":295,"name":"host"},"value":{"type":"Literal","start":297,"end":308,"value":"localhost","raw":"'localhost'"},"kind":"init"},{"type":"Property","start":315,"end":325,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":315,"end":319,"name":"port"},"value":{"type":"Literal","start":321,"end":325,"value":8080,"raw":"8080"},"kind":"init"}]}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","start":464,"end":1954}]},"code":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"originalCode":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/config.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[27,0,3,27]],[[1,0,5,1]],[[0,0,13,0],[86,0,13,86]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[35,0,15,35],[38,0,15,63]],[[4,0,16,2],[26,0,16,24]],[[4,0,17,2],[8,0,17,6],[10,0,17,8],[21,0,17,19]],[[4,0,18,2],[8,0,18,6],[10,0,18,8],[14,0,18,12]],[[1,0,19,1],[2,0,19,2]],[[0,0,22,0],[43,0,22,43]],[[0,0,23,0],[26,0,23,26]],[[0,0,24,0],[26,0,24,26]],[[0,0,25,0],[23,0,25,23]],[[0,0,26,0],[4,0,26,4]]],"sourcesContent":["// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\n\r\nexport class FirebaseConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FirestoreEmulatorConfig {\r\n  // useEmulator: boolean;\r\n  host: string;\r\n  port: number;\r\n}\r\n\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\n\r\nexport const FIRESTORE_USE_EMULATOR: FirestoreEmulatorConfig = {\r\n  // useEmulator: false,\r\n  host: 'localhost',\r\n  port: 8080,\r\n};\r\n\r\n\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5093,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}},{"type":"ImportSpecifier","start":19,"end":27,"imported":{"type":"Identifier","start":19,"end":27,"name":"Optional"},"local":{"type":"Identifier","start":19,"end":27,"name":"Optional"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"},"local":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":110,"specifiers":[{"type":"ImportSpecifier","start":72,"end":84,"imported":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"},"local":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"}}],"source":{"type":"Literal","start":92,"end":109,"value":"@angular/common","raw":"'@angular/common'"}},{"type":"ImportDeclaration","start":112,"end":154,"specifiers":[{"type":"ImportSpecifier","start":121,"end":135,"imported":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"},"local":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"}}],"source":{"type":"Literal","start":143,"end":153,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":156,"end":192,"specifiers":[{"type":"ImportNamespaceSpecifier","start":163,"end":170,"local":{"type":"Identifier","start":168,"end":170,"name":"i0"}}],"source":{"type":"Literal","start":176,"end":191,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":194,"end":1127,"declaration":{"type":"ClassDeclaration","start":201,"end":1127,"id":{"type":"Identifier","start":207,"end":224,"name":"NgxFirebaseModule"},"superClass":null,"body":{"type":"ClassBody","start":225,"end":1127,"body":[{"type":"MethodDefinition","start":726,"end":911,"static":false,"computed":false,"key":{"type":"Identifier","start":726,"end":737,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":737,"end":911,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":738,"end":750,"name":"parentModule"}],"body":{"type":"BlockStatement","start":752,"end":911,"body":[{"type":"IfStatement","start":763,"end":904,"test":{"type":"Identifier","start":767,"end":779,"name":"parentModule"},"consequent":{"type":"BlockStatement","start":781,"end":904,"body":[{"type":"ThrowStatement","start":796,"end":893,"argument":{"type":"NewExpression","start":802,"end":892,"callee":{"type":"Identifier","start":806,"end":811,"name":"Error"},"arguments":[{"type":"Literal","start":812,"end":891,"value":"NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only","raw":"'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":917,"end":1124,"static":true,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"forRoot"},"kind":"method","value":{"type":"FunctionExpression","start":931,"end":1124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":932,"end":938,"name":"config"}],"body":{"type":"BlockStatement","start":940,"end":1124,"body":[{"type":"ReturnStatement","start":951,"end":1117,"argument":{"type":"ObjectExpression","start":958,"end":1116,"properties":[{"type":"Property","start":973,"end":1000,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":973,"end":981,"name":"ngModule"},"value":{"type":"Identifier","start":983,"end":1000,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1015,"end":1105,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1024,"name":"providers"},"value":{"type":"ArrayExpression","start":1026,"end":1105,"elements":[{"type":"ObjectExpression","start":1045,"end":1090,"properties":[{"type":"Property","start":1047,"end":1070,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"provide"},"value":{"type":"Identifier","start":1056,"end":1070,"name":"FirebaseConfig"},"kind":"init"},{"type":"Property","start":1072,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1072,"end":1080,"name":"useValue"},"value":{"type":"Identifier","start":1082,"end":1088,"name":"config"},"kind":"init"}]}]},"kind":"init"}]}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1129,"end":1367,"expression":{"type":"AssignmentExpression","start":1129,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1129,"end":1151,"object":{"type":"Identifier","start":1129,"end":1146,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1147,"end":1151,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1154,"end":1366,"callee":{"type":"MemberExpression","start":1154,"end":1175,"object":{"type":"Identifier","start":1154,"end":1156,"name":"i0"},"property":{"type":"Identifier","start":1157,"end":1175,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1176,"end":1365,"properties":[{"type":"Property","start":1178,"end":1198,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1178,"end":1188,"name":"minVersion"},"value":{"type":"Literal","start":1190,"end":1198,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1200,"end":1217,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1200,"end":1207,"name":"version"},"value":{"type":"Literal","start":1209,"end":1217,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1219,"end":1231,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1219,"end":1227,"name":"ngImport"},"value":{"type":"Identifier","start":1229,"end":1231,"name":"i0"},"kind":"init"},{"type":"Property","start":1233,"end":1256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1233,"end":1237,"name":"type"},"value":{"type":"Identifier","start":1239,"end":1256,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1258,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1258,"end":1262,"name":"deps"},"value":{"type":"ArrayExpression","start":1264,"end":1326,"elements":[{"type":"ObjectExpression","start":1265,"end":1325,"properties":[{"type":"Property","start":1267,"end":1291,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1267,"end":1272,"name":"token"},"value":{"type":"Identifier","start":1274,"end":1291,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1293,"end":1307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1301,"name":"optional"},"value":{"type":"Literal","start":1303,"end":1307,"value":true,"raw":"true"},"kind":"init"},{"type":"Property","start":1309,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1309,"end":1317,"name":"skipSelf"},"value":{"type":"Literal","start":1319,"end":1323,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1328,"end":1363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1328,"end":1334,"name":"target"},"value":{"type":"MemberExpression","start":1336,"end":1363,"object":{"type":"MemberExpression","start":1336,"end":1354,"object":{"type":"Identifier","start":1336,"end":1338,"name":"i0"},"property":{"type":"Identifier","start":1339,"end":1354,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1355,"end":1363,"name":"NgModule"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1369,"end":1526,"expression":{"type":"AssignmentExpression","start":1369,"end":1525,"operator":"=","left":{"type":"MemberExpression","start":1369,"end":1391,"object":{"type":"Identifier","start":1369,"end":1386,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1387,"end":1391,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1416,"object":{"type":"Identifier","start":1394,"end":1396,"name":"i0"},"property":{"type":"Identifier","start":1397,"end":1416,"name":"ɵɵngDeclareNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1417,"end":1524,"properties":[{"type":"Property","start":1419,"end":1439,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1419,"end":1429,"name":"minVersion"},"value":{"type":"Literal","start":1431,"end":1439,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1441,"end":1458,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1441,"end":1448,"name":"version"},"value":{"type":"Literal","start":1450,"end":1458,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1460,"end":1472,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1460,"end":1468,"name":"ngImport"},"value":{"type":"Identifier","start":1470,"end":1472,"name":"i0"},"kind":"init"},{"type":"Property","start":1474,"end":1497,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1474,"end":1478,"name":"type"},"value":{"type":"Identifier","start":1480,"end":1497,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1499,"end":1522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1499,"end":1506,"name":"imports"},"value":{"type":"ArrayExpression","start":1508,"end":1522,"elements":[{"type":"Identifier","start":1509,"end":1521,"name":"CommonModule"}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1711,"expression":{"type":"AssignmentExpression","start":1528,"end":1710,"operator":"=","left":{"type":"MemberExpression","start":1528,"end":1550,"object":{"type":"Identifier","start":1528,"end":1545,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1546,"end":1550,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1553,"end":1710,"callee":{"type":"MemberExpression","start":1553,"end":1575,"object":{"type":"Identifier","start":1553,"end":1555,"name":"i0"},"property":{"type":"Identifier","start":1556,"end":1575,"name":"ɵɵngDeclareInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1576,"end":1709,"properties":[{"type":"Property","start":1578,"end":1598,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1578,"end":1588,"name":"minVersion"},"value":{"type":"Literal","start":1590,"end":1598,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1600,"end":1617,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1600,"end":1607,"name":"version"},"value":{"type":"Literal","start":1609,"end":1617,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1619,"end":1631,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1619,"end":1627,"name":"ngImport"},"value":{"type":"Identifier","start":1629,"end":1631,"name":"i0"},"kind":"init"},{"type":"Property","start":1633,"end":1656,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1633,"end":1637,"name":"type"},"value":{"type":"Identifier","start":1639,"end":1656,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1658,"end":1707,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1658,"end":1665,"name":"imports"},"value":{"type":"ArrayExpression","start":1667,"end":1707,"elements":[{"type":"ArrayExpression","start":1668,"end":1706,"elements":[{"type":"Identifier","start":1683,"end":1695,"name":"CommonModule"}]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1713,"end":2257,"expression":{"type":"CallExpression","start":1713,"end":2256,"callee":{"type":"MemberExpression","start":1713,"end":1740,"object":{"type":"Identifier","start":1713,"end":1715,"name":"i0"},"property":{"type":"Identifier","start":1716,"end":1740,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1741,"end":2255,"properties":[{"type":"Property","start":1743,"end":1763,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1743,"end":1753,"name":"minVersion"},"value":{"type":"Literal","start":1755,"end":1763,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1765,"end":1782,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1765,"end":1772,"name":"version"},"value":{"type":"Literal","start":1774,"end":1782,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1784,"end":1796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1792,"name":"ngImport"},"value":{"type":"Identifier","start":1794,"end":1796,"name":"i0"},"kind":"init"},{"type":"Property","start":1798,"end":1821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1798,"end":1802,"name":"type"},"value":{"type":"Identifier","start":1804,"end":1821,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1823,"end":2052,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1833,"name":"decorators"},"value":{"type":"ArrayExpression","start":1835,"end":2052,"elements":[{"type":"ObjectExpression","start":1836,"end":2051,"properties":[{"type":"Property","start":1851,"end":1865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1851,"end":1855,"name":"type"},"value":{"type":"Identifier","start":1857,"end":1865,"name":"NgModule"},"kind":"init"},{"type":"Property","start":1880,"end":2040,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1880,"end":1884,"name":"args"},"value":{"type":"ArrayExpression","start":1886,"end":2040,"elements":[{"type":"ObjectExpression","start":1887,"end":2039,"properties":[{"type":"Property","start":1910,"end":1926,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1922,"name":"declarations"},"value":{"type":"ArrayExpression","start":1924,"end":1926,"elements":[]},"kind":"init"},{"type":"Property","start":1949,"end":2020,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1949,"end":1956,"name":"imports"},"value":{"type":"ArrayExpression","start":1958,"end":2020,"elements":[{"type":"Identifier","start":1985,"end":1997,"name":"CommonModule"}]},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":2054,"end":2253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2054,"end":2068,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":2070,"end":2253,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2082,"end":2253,"body":[{"type":"ReturnStatement","start":2084,"end":2251,"argument":{"type":"ArrayExpression","start":2091,"end":2250,"elements":[{"type":"ObjectExpression","start":2092,"end":2249,"properties":[{"type":"Property","start":2094,"end":2117,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2094,"end":2098,"name":"type"},"value":{"type":"Identifier","start":2100,"end":2117,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":2119,"end":2247,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2119,"end":2129,"name":"decorators"},"value":{"type":"ArrayExpression","start":2131,"end":2247,"elements":[{"type":"ObjectExpression","start":2132,"end":2188,"properties":[{"type":"Property","start":2155,"end":2169,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2155,"end":2159,"name":"type"},"value":{"type":"Identifier","start":2161,"end":2169,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2190,"end":2246,"properties":[{"type":"Property","start":2213,"end":2227,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2213,"end":2217,"name":"type"},"value":{"type":"Identifier","start":2219,"end":2227,"name":"SkipSelf"},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","start":2259,"end":5093}]},"code":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","customTransformCache":false,"dependencies":["@angular/core","@angular/common","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","originalSourcemap":{"version":3,"file":"ngx-firebase.module.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,29],[17,0,0,37],[19,0,0,39],[27,0,0,47],[29,0,0,49],[37,0,0,57],[39,0,0,58],[45,0,0,64],[60,0,0,79],[61,0,0,80]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[21,0,1,20],[23,0,1,21],[29,0,1,27],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[23,0,2,22],[25,0,2,23],[31,0,2,29],[41,0,2,39],[42,0,2,40]],[],[[0,0,13,0],[6,0,13,6],[13,0,13,13],[30,0,13,30]],[[4,0,14,2]],[],[],[],[],[],[[7,0,20,5]],[[4,0,21,2],[16,0,21,38],[28,0,21,70]],[[8,0,22,4],[12,0,22,8],[24,0,22,20],[26,0,22,22]],[[12,0,23,6],[18,0,23,12],[22,0,23,16],[27,0,23,21],[28,0,24,8],[107,0,24,87],[108,0,24,88],[109,0,24,89]],[[9,0,25,5]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2],[10,0,28,8],[11,0,28,9],[18,0,28,16],[19,0,28,17],[25,0,28,40]],[[8,0,29,4],[15,0,29,11]],[[12,0,30,6],[20,0,30,14],[22,0,30,16],[39,0,30,33]],[[12,0,31,6],[21,0,31,15],[23,0,31,17]],[[16,0,32,8],[18,0,32,9],[25,0,32,16],[27,0,32,18],[41,0,32,32],[43,0,32,34],[51,0,32,42],[53,0,32,44],[59,0,32,50],[61,0,32,51]],[[13,0,33,7]],[[9,0,34,5],[10,0,34,6]],[[4,0,35,2],[5,0,35,3]],[],[[110,0,13,13],[127,0,13,30],[145,0,21,53],[162,0,21,70]],[[111,0,13,13],[128,0,13,30],[140,0,8,4],[152,0,8,16]],[[111,0,13,13],[128,0,13,30],[140,0,7,11]],[[12,0,8,4],[24,0,8,16]],[[9,0,9,3]],[[91,0,13,13],[108,0,13,30]],[[18,0,5,1],[26,0,5,9]],[[19,0,5,10]],[[20,0,6,2],[32,0,6,14],[34,0,6,16],[36,0,6,18]],[[20,0,7,2],[27,0,7,9],[29,0,7,11]],[[24,0,8,4],[36,0,8,16]],[[21,0,9,3]],[[17,0,10,1]],[[58,0,21,53],[75,0,21,70]],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[34,0,21,35]]],"sourcesContent":["import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseConfig} from './config';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\n\nexport class NgxFirebaseModule {\n  /**\n   * To be used as an Angular Module to inject the FirebaseConfig\n   * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\n   * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\n   * additional connections.\n   * The purpose is simply to make sure that we only create a single Firebase App and a single connection\n   */\n  constructor(@Optional() @SkipSelf() parentModule?: NgxFirebaseModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config?: FirebaseConfig): ModuleWithProviders<NgxFirebaseModule> {\n    return {\n      ngModule: NgxFirebaseModule,\n      providers: [\n        {provide: FirebaseConfig, useValue: config}\n      ]\n    };\n  }\n\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@angular/common":{"external":true,"id":"@angular/common","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5555,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"Inject"},"local":{"type":"Identifier","start":9,"end":15,"name":"Inject"}},{"type":"ImportSpecifier","start":17,"end":27,"imported":{"type":"Identifier","start":17,"end":27,"name":"Injectable"},"local":{"type":"Identifier","start":17,"end":27,"name":"Injectable"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"Optional"},"local":{"type":"Identifier","start":29,"end":37,"name":"Optional"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":113,"specifiers":[{"type":"ImportSpecifier","start":72,"end":94,"imported":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"},"local":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"}}],"source":{"type":"Literal","start":102,"end":112,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":115,"end":170,"specifiers":[{"type":"ImportDefaultSpecifier","start":122,"end":130,"local":{"type":"Identifier","start":122,"end":130,"name":"firebase"}},{"type":"ImportSpecifier","start":134,"end":147,"imported":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"},"local":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"}}],"source":{"type":"Literal","start":155,"end":169,"value":"firebase/app","raw":"'firebase/app'"}},{"type":"ImportDeclaration","start":172,"end":248,"specifiers":[{"type":"ImportSpecifier","start":181,"end":205,"imported":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"},"local":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"}},{"type":"ImportSpecifier","start":207,"end":219,"imported":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"},"local":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"}}],"source":{"type":"Literal","start":227,"end":247,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":250,"end":286,"specifiers":[{"type":"ImportNamespaceSpecifier","start":257,"end":264,"local":{"type":"Identifier","start":262,"end":264,"name":"i0"}}],"source":{"type":"Literal","start":270,"end":285,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":288,"end":319,"specifiers":[{"type":"ImportNamespaceSpecifier","start":295,"end":302,"local":{"type":"Identifier","start":300,"end":302,"name":"i1"}}],"source":{"type":"Literal","start":308,"end":318,"value":"./config","raw":"\"./config\""}},{"type":"ExportNamedDeclaration","start":321,"end":1144,"declaration":{"type":"ClassDeclaration","start":328,"end":1144,"id":{"type":"Identifier","start":334,"end":352,"name":"NgxFirebaseService"},"superClass":null,"body":{"type":"ClassBody","start":353,"end":1144,"body":[{"type":"MethodDefinition","start":360,"end":1141,"static":false,"computed":false,"key":{"type":"Identifier","start":360,"end":371,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":371,"end":1141,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":372,"end":378,"name":"config"},{"type":"Identifier","start":380,"end":394,"name":"emulatorConfig"}],"body":{"type":"BlockStatement","start":396,"end":1141,"body":[{"type":"ExpressionStatement","start":407,"end":444,"expression":{"type":"AssignmentExpression","start":407,"end":443,"operator":"=","left":{"type":"MemberExpression","start":407,"end":426,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":426,"name":"emulatorConfig"},"computed":false,"optional":false},"right":{"type":"Identifier","start":429,"end":443,"name":"emulatorConfig"}}},{"type":"IfStatement","start":454,"end":865,"test":{"type":"UnaryExpression","start":458,"end":484,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":459,"end":484,"object":{"type":"CallExpression","start":459,"end":477,"callee":{"type":"MemberExpression","start":459,"end":475,"object":{"type":"Identifier","start":459,"end":467,"name":"firebase"},"property":{"type":"Identifier","start":468,"end":475,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":478,"end":484,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":486,"end":743,"body":[{"type":"IfStatement","start":501,"end":732,"test":{"type":"Identifier","start":505,"end":511,"name":"config"},"consequent":{"type":"BlockStatement","start":513,"end":588,"body":[{"type":"ExpressionStatement","start":532,"end":573,"expression":{"type":"AssignmentExpression","start":532,"end":572,"operator":"=","left":{"type":"MemberExpression","start":532,"end":548,"object":{"type":"ThisExpression","start":532,"end":536},"property":{"type":"Identifier","start":537,"end":548,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":551,"end":572,"callee":{"type":"Identifier","start":551,"end":564,"name":"initializeApp"},"arguments":[{"type":"Identifier","start":565,"end":571,"name":"config"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":607,"end":732,"body":[{"type":"ThrowStatement","start":626,"end":717,"argument":{"type":"NewExpression","start":632,"end":716,"callee":{"type":"Identifier","start":636,"end":641,"name":"Error"},"arguments":[{"type":"Literal","start":642,"end":715,"value":"No previous Firebase App initialized so please provide a FirebaseConfig","raw":"'No previous Firebase App initialized so please provide a FirebaseConfig'"}]}}]}}]},"alternate":{"type":"BlockStatement","start":758,"end":865,"body":[{"type":"ExpressionStatement","start":773,"end":814,"expression":{"type":"AssignmentExpression","start":773,"end":813,"operator":"=","left":{"type":"MemberExpression","start":773,"end":789,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":789,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":792,"end":813,"object":{"type":"CallExpression","start":792,"end":810,"callee":{"type":"MemberExpression","start":792,"end":808,"object":{"type":"Identifier","start":792,"end":800,"name":"firebase"},"property":{"type":"Identifier","start":801,"end":808,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Literal","start":811,"end":812,"value":0,"raw":"0"},"computed":true,"optional":false}}}]}},{"type":"IfStatement","start":875,"end":1134,"test":{"type":"Identifier","start":879,"end":893,"name":"emulatorConfig"},"consequent":{"type":"BlockStatement","start":895,"end":1134,"body":[{"type":"ExpressionStatement","start":910,"end":1009,"expression":{"type":"CallExpression","start":910,"end":1008,"callee":{"type":"Identifier","start":910,"end":934,"name":"connectFirestoreEmulator"},"arguments":[{"type":"CallExpression","start":935,"end":965,"callee":{"type":"Identifier","start":935,"end":947,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":948,"end":964,"object":{"type":"ThisExpression","start":948,"end":952},"property":{"type":"Identifier","start":953,"end":964,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false},{"type":"MemberExpression","start":967,"end":986,"object":{"type":"Identifier","start":967,"end":981,"name":"emulatorConfig"},"property":{"type":"Identifier","start":982,"end":986,"name":"host"},"computed":false,"optional":false},{"type":"MemberExpression","start":988,"end":1007,"object":{"type":"Identifier","start":988,"end":1002,"name":"emulatorConfig"},"property":{"type":"Identifier","start":1003,"end":1007,"name":"port"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1146,"end":1423,"expression":{"type":"AssignmentExpression","start":1146,"end":1422,"operator":"=","left":{"type":"MemberExpression","start":1146,"end":1169,"object":{"type":"Identifier","start":1146,"end":1164,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1165,"end":1169,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1172,"end":1422,"callee":{"type":"MemberExpression","start":1172,"end":1193,"object":{"type":"Identifier","start":1172,"end":1174,"name":"i0"},"property":{"type":"Identifier","start":1175,"end":1193,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1194,"end":1421,"properties":[{"type":"Property","start":1196,"end":1216,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1196,"end":1206,"name":"minVersion"},"value":{"type":"Literal","start":1208,"end":1216,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1218,"end":1235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1218,"end":1225,"name":"version"},"value":{"type":"Literal","start":1227,"end":1235,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1237,"end":1249,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1237,"end":1245,"name":"ngImport"},"value":{"type":"Identifier","start":1247,"end":1249,"name":"i0"},"kind":"init"},{"type":"Property","start":1251,"end":1275,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1251,"end":1255,"name":"type"},"value":{"type":"Identifier","start":1257,"end":1275,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1277,"end":1380,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1277,"end":1281,"name":"deps"},"value":{"type":"ArrayExpression","start":1283,"end":1380,"elements":[{"type":"ObjectExpression","start":1284,"end":1328,"properties":[{"type":"Property","start":1286,"end":1310,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1286,"end":1291,"name":"token"},"value":{"type":"MemberExpression","start":1293,"end":1310,"object":{"type":"Identifier","start":1293,"end":1295,"name":"i1"},"property":{"type":"Identifier","start":1296,"end":1310,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1312,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1312,"end":1320,"name":"optional"},"value":{"type":"Literal","start":1322,"end":1326,"value":true,"raw":"true"},"kind":"init"}]},{"type":"ObjectExpression","start":1330,"end":1379,"properties":[{"type":"Property","start":1332,"end":1361,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1332,"end":1337,"name":"token"},"value":{"type":"Identifier","start":1339,"end":1361,"name":"FIRESTORE_USE_EMULATOR"},"kind":"init"},{"type":"Property","start":1363,"end":1377,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1363,"end":1371,"name":"optional"},"value":{"type":"Literal","start":1373,"end":1377,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1382,"end":1419,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1382,"end":1388,"name":"target"},"value":{"type":"MemberExpression","start":1390,"end":1419,"object":{"type":"MemberExpression","start":1390,"end":1408,"object":{"type":"Identifier","start":1390,"end":1392,"name":"i0"},"property":{"type":"Identifier","start":1393,"end":1408,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1409,"end":1419,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1425,"end":1582,"expression":{"type":"AssignmentExpression","start":1425,"end":1581,"operator":"=","left":{"type":"MemberExpression","start":1425,"end":1449,"object":{"type":"Identifier","start":1425,"end":1443,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1444,"end":1449,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1452,"end":1581,"callee":{"type":"MemberExpression","start":1452,"end":1476,"object":{"type":"Identifier","start":1452,"end":1454,"name":"i0"},"property":{"type":"Identifier","start":1455,"end":1476,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1477,"end":1580,"properties":[{"type":"Property","start":1479,"end":1499,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1479,"end":1489,"name":"minVersion"},"value":{"type":"Literal","start":1491,"end":1499,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1501,"end":1518,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1501,"end":1508,"name":"version"},"value":{"type":"Literal","start":1510,"end":1518,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1520,"end":1532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1520,"end":1528,"name":"ngImport"},"value":{"type":"Identifier","start":1530,"end":1532,"name":"i0"},"kind":"init"},{"type":"Property","start":1534,"end":1558,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1534,"end":1538,"name":"type"},"value":{"type":"Identifier","start":1540,"end":1558,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1560,"end":1578,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1560,"end":1570,"name":"providedIn"},"value":{"type":"Literal","start":1572,"end":1578,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1584,"end":2183,"expression":{"type":"CallExpression","start":1584,"end":2182,"callee":{"type":"MemberExpression","start":1584,"end":1611,"object":{"type":"Identifier","start":1584,"end":1586,"name":"i0"},"property":{"type":"Identifier","start":1587,"end":1611,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1612,"end":2181,"properties":[{"type":"Property","start":1614,"end":1634,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1614,"end":1624,"name":"minVersion"},"value":{"type":"Literal","start":1626,"end":1634,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1636,"end":1653,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1636,"end":1643,"name":"version"},"value":{"type":"Literal","start":1645,"end":1653,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1655,"end":1667,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1655,"end":1663,"name":"ngImport"},"value":{"type":"Identifier","start":1665,"end":1667,"name":"i0"},"kind":"init"},{"type":"Property","start":1669,"end":1693,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1669,"end":1673,"name":"type"},"value":{"type":"Identifier","start":1675,"end":1693,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1695,"end":1834,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1695,"end":1705,"name":"decorators"},"value":{"type":"ArrayExpression","start":1707,"end":1834,"elements":[{"type":"ObjectExpression","start":1708,"end":1833,"properties":[{"type":"Property","start":1723,"end":1739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1723,"end":1727,"name":"type"},"value":{"type":"Identifier","start":1729,"end":1739,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1754,"end":1822,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1754,"end":1758,"name":"args"},"value":{"type":"ArrayExpression","start":1760,"end":1822,"elements":[{"type":"ObjectExpression","start":1761,"end":1821,"properties":[{"type":"Property","start":1784,"end":1802,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1794,"name":"providedIn"},"value":{"type":"Literal","start":1796,"end":1802,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1836,"end":2179,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1836,"end":1850,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1852,"end":2179,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2179,"body":[{"type":"ReturnStatement","start":1866,"end":2177,"argument":{"type":"ArrayExpression","start":1873,"end":2176,"elements":[{"type":"ObjectExpression","start":1874,"end":1973,"properties":[{"type":"Property","start":1876,"end":1899,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1876,"end":1880,"name":"type"},"value":{"type":"MemberExpression","start":1882,"end":1899,"object":{"type":"Identifier","start":1882,"end":1884,"name":"i1"},"property":{"type":"Identifier","start":1885,"end":1899,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1901,"end":1971,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1901,"end":1911,"name":"decorators"},"value":{"type":"ArrayExpression","start":1913,"end":1971,"elements":[{"type":"ObjectExpression","start":1914,"end":1970,"properties":[{"type":"Property","start":1937,"end":1951,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1937,"end":1941,"name":"type"},"value":{"type":"Identifier","start":1943,"end":1951,"name":"Optional"},"kind":"init"}]}]},"kind":"init"}]},{"type":"ObjectExpression","start":1975,"end":2175,"properties":[{"type":"Property","start":1977,"end":1992,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1977,"end":1981,"name":"type"},"value":{"type":"Identifier","start":1983,"end":1992,"name":"undefined"},"kind":"init"},{"type":"Property","start":1994,"end":2173,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1994,"end":2004,"name":"decorators"},"value":{"type":"ArrayExpression","start":2006,"end":2173,"elements":[{"type":"ObjectExpression","start":2007,"end":2063,"properties":[{"type":"Property","start":2030,"end":2044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2030,"end":2034,"name":"type"},"value":{"type":"Identifier","start":2036,"end":2044,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2065,"end":2172,"properties":[{"type":"Property","start":2088,"end":2100,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2088,"end":2092,"name":"type"},"value":{"type":"Identifier","start":2094,"end":2100,"name":"Inject"},"kind":"init"},{"type":"Property","start":2123,"end":2153,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2123,"end":2127,"name":"args"},"value":{"type":"ArrayExpression","start":2129,"end":2153,"elements":[{"type":"Identifier","start":2130,"end":2152,"name":"FIRESTORE_USE_EMULATOR"}]},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","start":2185,"end":5555}]},"code":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","firebase/app","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firebase.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,16],[27,0,0,26],[29,0,0,28],[37,0,0,36],[39,0,0,37],[45,0,0,43],[60,0,0,58],[61,0,0,59]],[[0,0,2,0],[7,0,2,7],[9,0,2,24],[31,0,2,46],[33,0,2,72],[39,0,2,78],[49,0,2,88],[50,0,2,89]],[[0,0,3,0],[7,0,3,7],[15,0,3,15],[17,0,3,17],[19,0,3,31],[32,0,3,44],[34,0,3,45],[40,0,3,51],[54,0,3,65],[55,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[33,0,4,32],[35,0,4,34],[47,0,4,46],[49,0,4,48],[55,0,4,54],[75,0,4,74],[76,0,4,75]],[],[],[[0,0,11,0],[6,0,11,6],[13,0,11,13],[31,0,11,31]],[[4,0,20,2],[16,0,20,26],[22,0,20,49],[24,0,21,65],[38,0,21,105]],[[8,0,21,65],[27,0,21,79],[30,0,21,65],[44,0,21,79],[45,0,21,105]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[22,0,23,18],[29,0,23,25],[31,0,23,27],[32,0,23,28],[38,0,23,34],[40,0,23,36]],[[12,0,24,6],[16,0,24,10],[22,0,24,16],[24,0,24,18]],[[16,0,25,8],[20,0,25,12],[21,0,25,13],[32,0,25,24],[35,0,25,27],[48,0,25,40],[49,0,25,41],[55,0,25,47],[56,0,25,48],[57,0,25,49]],[[13,0,26,7]],[[17,0,26,13]],[[16,0,27,8],[22,0,27,14],[26,0,27,18],[31,0,27,23],[32,0,27,24],[105,0,27,97],[106,0,27,98],[107,0,27,98]],[[13,0,28,7]],[[9,0,30,5]],[[13,0,30,11]],[[12,0,31,6],[16,0,31,10],[17,0,31,11],[28,0,31,22],[31,0,31,25],[39,0,31,33],[40,0,31,34],[47,0,31,41],[49,0,31,43],[50,0,31,44],[51,0,31,45],[52,0,31,46],[53,0,31,47],[54,0,31,48],[93,0,31,87]],[[9,0,32,5]],[[8,0,34,4],[12,0,34,8],[26,0,34,22],[28,0,34,24]],[[12,0,35,6],[36,0,35,30],[37,0,35,31],[49,0,35,43],[50,0,35,44],[54,0,35,48],[55,0,35,49],[66,0,35,60],[67,0,35,61],[69,0,35,63],[83,0,35,77],[84,0,35,78],[88,0,35,82],[90,0,35,84],[104,0,35,98],[105,0,35,99],[109,0,35,103],[110,0,35,104],[111,0,35,105],[112,0,35,106],[117,0,35,111]],[[12,0,36,6],[106,0,36,100]],[[9,0,37,5]],[[4,0,38,2],[5,0,38,3]],[],[[111,0,11,13],[129,0,11,31],[193,0,21,34],[215,0,21,56]],[[115,0,11,13],[133,0,11,31],[147,0,8,14],[153,0,8,20]],[[91,0,11,13],[109,0,11,31]],[[18,0,7,1],[28,0,7,11]],[[19,0,7,12]],[[20,0,8,2],[30,0,8,12],[32,0,8,14],[38,0,8,20]],[[17,0,9,1]],[],[[26,0,20,15],[34,0,20,23]],[],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[32,0,21,33]],[[27,0,21,34],[49,0,21,56]]],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\n\nimport {FirebaseConfig, FIRESTORE_USE_EMULATOR, FirestoreEmulatorConfig} from './config';\nimport firebase, {FirebaseApp, initializeApp} from 'firebase/app';\nimport {connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxFirebaseService {\n  /**\n   * Service that holds the Firebase App\n   * Inject this service into any other service that requires the Firebase App\n   *\n   * For example NgxFireStoreExtendedService injects this service\n   */\n  public firebaseApp: FirebaseApp;\n\n  constructor(@Optional() config?: FirebaseConfig,\n              @Optional() @Inject(FIRESTORE_USE_EMULATOR) public emulatorConfig?: FirestoreEmulatorConfig) {\n\n    if (!firebase.getApps().length) {\n      if (config) {\n        this.firebaseApp = initializeApp(config);\n      } else {\n        throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig')\n      }\n\n    } else {\n      this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\n    }\n\n    if (emulatorConfig) {\n      connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\n      // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\n    }\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/app":{"external":true,"id":"firebase/app","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1481,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"FirestoreExtended"},"local":{"type":"Identifier","start":9,"end":26,"name":"FirestoreExtended"}}],"source":{"type":"Literal","start":34,"end":56,"value":"./firestore-extended","raw":"'./firestore-extended'"}},{"type":"ImportDeclaration","start":59,"end":129,"specifiers":[{"type":"ImportSpecifier","start":68,"end":91,"imported":{"type":"Identifier","start":68,"end":91,"name":"FirestoreWrapper"},"local":{"type":"Identifier","start":68,"end":91,"name":"FirestoreWrapper"}}],"source":{"type":"Literal","start":99,"end":128,"value":"./firebase-extended-wrapper","raw":"'./firebase-extended-wrapper'"}},{"type":"ExportNamedDeclaration","start":131,"end":325,"declaration":{"type":"ClassDeclaration","start":138,"end":325,"id":{"type":"Identifier","start":144,"end":160,"name":"FirebaseExtended"},"superClass":{"type":"Identifier","start":169,"end":186,"name":"FirestoreExtended"},"body":{"type":"ClassBody","start":187,"end":325,"body":[{"type":"MethodDefinition","start":194,"end":322,"static":false,"computed":false,"key":{"type":"Identifier","start":194,"end":205,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":205,"end":322,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":206,"end":217,"name":"firebaseApp"},{"type":"AssignmentPattern","start":219,"end":240,"left":{"type":"Identifier","start":219,"end":231,"name":"defaultDocId"},"right":{"type":"Literal","start":234,"end":240,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":242,"end":322,"body":[{"type":"ExpressionStatement","start":253,"end":315,"expression":{"type":"CallExpression","start":253,"end":314,"callee":{"type":"Super","start":253,"end":258},"arguments":[{"type":"NewExpression","start":259,"end":299,"callee":{"type":"Identifier","start":263,"end":286,"name":"FirestoreWrapper"},"arguments":[{"type":"Identifier","start":287,"end":298,"name":"firebaseApp"}]},{"type":"Identifier","start":301,"end":313,"name":"defaultDocId"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlYmFzZS1leHRlbmRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBRXJELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtGaXJlYmFzZUV4dGVuZGVkV3JhcHBlcn0gZnJvbSAnLi9maXJlYmFzZS1leHRlbmRlZC13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkIGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHAsIGRlZmF1bHREb2NJZDogc3RyaW5nID0gJ2RhdGEnKSB7XHJcbiAgICBzdXBlcihuZXcgRmlyZWJhc2VFeHRlbmRlZFdyYXBwZXIoZmlyZWJhc2VBcHApLCBkZWZhdWx0RG9jSWQpO1xyXG4gIH1cclxufVxyXG4iXX0=","start":327,"end":1481}]},"code":"import { FirestoreExtended } from './firestore-extended';\r\nimport { FirestoreWrapper } from './firebase-extended-wrapper';\r\nexport class FirebaseExtended extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlYmFzZS1leHRlbmRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBRXJELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtGaXJlYmFzZUV4dGVuZGVkV3JhcHBlcn0gZnJvbSAnLi9maXJlYmFzZS1leHRlbmRlZC13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkIGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHAsIGRlZmF1bHREb2NJZDogc3RyaW5nID0gJ2RhdGEnKSB7XHJcbiAgICBzdXBlcihuZXcgRmlyZWJhc2VFeHRlbmRlZFdyYXBwZXIoZmlyZWJhc2VBcHApLCBkZWZhdWx0RG9jSWQpO1xyXG4gIH1cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FirestoreExtended } from './firestore-extended';\r\nimport { FirestoreWrapper } from './firebase-extended-wrapper';\r\nexport class FirebaseExtended extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlYmFzZS1leHRlbmRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBRXJELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtGaXJlYmFzZUV4dGVuZGVkV3JhcHBlcn0gZnJvbSAnLi9maXJlYmFzZS1leHRlbmRlZC13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkIGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHAsIGRlZmF1bHREb2NJZDogc3RyaW5nID0gJ2RhdGEnKSB7XHJcbiAgICBzdXBlcihuZXcgRmlyZWJhc2VFeHRlbmRlZFdyYXBwZXIoZmlyZWJhc2VBcHApLCBkZWZhdWx0RG9jSWQpO1xyXG4gIH1cclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"firebase-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.class.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,26],[34,0,0,32],[56,0,0,54],[57,0,0,55]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[32,0,2,31],[34,0,2,32],[40,0,2,38],[69,0,2,67],[70,0,2,68]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[29,0,4,30],[38,0,4,38],[55,0,4,55]],[[4,0,6,2],[16,0,6,14],[27,0,6,38],[29,0,6,40],[44,0,6,63],[50,0,6,69]],[[8,0,7,4],[13,0,7,9],[14,0,7,10],[18,0,7,14],[41,0,7,37],[42,0,7,38],[53,0,7,49],[54,0,7,50],[56,0,7,52],[68,0,7,64],[69,0,7,65],[70,0,7,66]],[[4,0,8,2],[5,0,8,3]],[[1,0,9,1]]],"sourcesContent":["import {FirestoreExtended} from './firestore-extended';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {FirestoreWrapper} from './firebase-extended-wrapper';\r\n\r\nexport class FirebaseExtended extends FirestoreExtended {\r\n\r\n  constructor(firebaseApp: FirebaseApp, defaultDocId: string = 'data') {\r\n    super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n  }\r\n}\r\n"]},"resolvedIds":{"./firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firebase-extended-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3129,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"Injectable"},"local":{"type":"Identifier","start":9,"end":19,"name":"Injectable"}}],"source":{"type":"Literal","start":27,"end":42,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":45,"end":101,"specifiers":[{"type":"ImportSpecifier","start":54,"end":70,"imported":{"type":"Identifier","start":54,"end":70,"name":"FirebaseExtended"},"local":{"type":"Identifier","start":54,"end":70,"name":"FirebaseExtended"}}],"source":{"type":"Literal","start":78,"end":100,"value":"../firebase-extended","raw":"'../firebase-extended'"}},{"type":"ImportDeclaration","start":103,"end":139,"specifiers":[{"type":"ImportNamespaceSpecifier","start":110,"end":117,"local":{"type":"Identifier","start":115,"end":117,"name":"i0"}}],"source":{"type":"Literal","start":123,"end":138,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":141,"end":186,"specifiers":[{"type":"ImportNamespaceSpecifier","start":148,"end":155,"local":{"type":"Identifier","start":153,"end":155,"name":"i1"}}],"source":{"type":"Literal","start":161,"end":185,"value":"./ngx-firebase.service","raw":"\"./ngx-firebase.service\""}},{"type":"ExportNamedDeclaration","start":188,"end":582,"declaration":{"type":"ClassDeclaration","start":195,"end":582,"id":{"type":"Identifier","start":201,"end":228,"name":"NgxFirestoreExtendedService"},"superClass":null,"body":{"type":"ClassBody","start":229,"end":582,"body":[{"type":"MethodDefinition","start":236,"end":459,"static":false,"computed":false,"key":{"type":"Identifier","start":236,"end":247,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":247,"end":459,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":248,"end":266,"name":"ngxFirebaseService"}],"body":{"type":"BlockStatement","start":268,"end":459,"body":[{"type":"ExpressionStatement","start":279,"end":324,"expression":{"type":"AssignmentExpression","start":279,"end":323,"operator":"=","left":{"type":"MemberExpression","start":279,"end":302,"object":{"type":"ThisExpression","start":279,"end":283},"property":{"type":"Identifier","start":284,"end":302,"name":"ngxFirebaseService"},"computed":false,"optional":false},"right":{"type":"Identifier","start":305,"end":323,"name":"ngxFirebaseService"}}},{"type":"ExpressionStatement","start":334,"end":402,"expression":{"type":"AssignmentExpression","start":334,"end":401,"operator":"=","left":{"type":"MemberExpression","start":334,"end":346,"object":{"type":"ThisExpression","start":334,"end":338},"property":{"type":"Identifier","start":339,"end":346,"name":"fireExt"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":349,"end":401,"callee":{"type":"Identifier","start":353,"end":369,"name":"FirebaseExtended"},"arguments":[{"type":"MemberExpression","start":370,"end":400,"object":{"type":"Identifier","start":370,"end":388,"name":"ngxFirebaseService"},"property":{"type":"Identifier","start":389,"end":400,"name":"firebaseApp"},"computed":false,"optional":false}]}}}]}}},{"type":"MethodDefinition","start":465,"end":579,"static":false,"computed":false,"key":{"type":"Identifier","start":469,"end":480,"name":"firebaseApp"},"kind":"get","value":{"type":"FunctionExpression","start":480,"end":579,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":483,"end":579,"body":[{"type":"ReturnStatement","start":529,"end":572,"argument":{"type":"MemberExpression","start":536,"end":571,"object":{"type":"MemberExpression","start":536,"end":559,"object":{"type":"ThisExpression","start":536,"end":540},"property":{"type":"Identifier","start":541,"end":559,"name":"ngxFirebaseService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":560,"end":571,"name":"firebaseApp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":584,"end":816,"expression":{"type":"AssignmentExpression","start":584,"end":815,"operator":"=","left":{"type":"MemberExpression","start":584,"end":616,"object":{"type":"Identifier","start":584,"end":611,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":612,"end":616,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":619,"end":815,"callee":{"type":"MemberExpression","start":619,"end":640,"object":{"type":"Identifier","start":619,"end":621,"name":"i0"},"property":{"type":"Identifier","start":622,"end":640,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":641,"end":814,"properties":[{"type":"Property","start":643,"end":663,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":643,"end":653,"name":"minVersion"},"value":{"type":"Literal","start":655,"end":663,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":665,"end":682,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":665,"end":672,"name":"version"},"value":{"type":"Literal","start":674,"end":682,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":684,"end":696,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":684,"end":692,"name":"ngImport"},"value":{"type":"Identifier","start":694,"end":696,"name":"i0"},"kind":"init"},{"type":"Property","start":698,"end":731,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":698,"end":702,"name":"type"},"value":{"type":"Identifier","start":704,"end":731,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":733,"end":773,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":733,"end":737,"name":"deps"},"value":{"type":"ArrayExpression","start":739,"end":773,"elements":[{"type":"ObjectExpression","start":740,"end":772,"properties":[{"type":"Property","start":742,"end":770,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":742,"end":747,"name":"token"},"value":{"type":"MemberExpression","start":749,"end":770,"object":{"type":"Identifier","start":749,"end":751,"name":"i1"},"property":{"type":"Identifier","start":752,"end":770,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":775,"end":812,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":775,"end":781,"name":"target"},"value":{"type":"MemberExpression","start":783,"end":812,"object":{"type":"MemberExpression","start":783,"end":801,"object":{"type":"Identifier","start":783,"end":785,"name":"i0"},"property":{"type":"Identifier","start":786,"end":801,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":802,"end":812,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":818,"end":993,"expression":{"type":"AssignmentExpression","start":818,"end":992,"operator":"=","left":{"type":"MemberExpression","start":818,"end":851,"object":{"type":"Identifier","start":818,"end":845,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":846,"end":851,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":854,"end":992,"callee":{"type":"MemberExpression","start":854,"end":878,"object":{"type":"Identifier","start":854,"end":856,"name":"i0"},"property":{"type":"Identifier","start":857,"end":878,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":879,"end":991,"properties":[{"type":"Property","start":881,"end":901,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":881,"end":891,"name":"minVersion"},"value":{"type":"Literal","start":893,"end":901,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":903,"end":920,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":903,"end":910,"name":"version"},"value":{"type":"Literal","start":912,"end":920,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":922,"end":934,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":922,"end":930,"name":"ngImport"},"value":{"type":"Identifier","start":932,"end":934,"name":"i0"},"kind":"init"},{"type":"Property","start":936,"end":969,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":936,"end":940,"name":"type"},"value":{"type":"Identifier","start":942,"end":969,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":971,"end":989,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":971,"end":981,"name":"providedIn"},"value":{"type":"Literal","start":983,"end":989,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":995,"end":1333,"expression":{"type":"CallExpression","start":995,"end":1332,"callee":{"type":"MemberExpression","start":995,"end":1022,"object":{"type":"Identifier","start":995,"end":997,"name":"i0"},"property":{"type":"Identifier","start":998,"end":1022,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1023,"end":1331,"properties":[{"type":"Property","start":1025,"end":1045,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1025,"end":1035,"name":"minVersion"},"value":{"type":"Literal","start":1037,"end":1045,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1047,"end":1064,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"version"},"value":{"type":"Literal","start":1056,"end":1064,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1066,"end":1078,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1066,"end":1074,"name":"ngImport"},"value":{"type":"Identifier","start":1076,"end":1078,"name":"i0"},"kind":"init"},{"type":"Property","start":1080,"end":1113,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1080,"end":1084,"name":"type"},"value":{"type":"Identifier","start":1086,"end":1113,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":1115,"end":1254,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1115,"end":1125,"name":"decorators"},"value":{"type":"ArrayExpression","start":1127,"end":1254,"elements":[{"type":"ObjectExpression","start":1128,"end":1253,"properties":[{"type":"Property","start":1143,"end":1159,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1143,"end":1147,"name":"type"},"value":{"type":"Identifier","start":1149,"end":1159,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1174,"end":1242,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1174,"end":1178,"name":"args"},"value":{"type":"ArrayExpression","start":1180,"end":1242,"elements":[{"type":"ObjectExpression","start":1181,"end":1241,"properties":[{"type":"Property","start":1204,"end":1222,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1204,"end":1214,"name":"providedIn"},"value":{"type":"Literal","start":1216,"end":1222,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1256,"end":1329,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1256,"end":1270,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1272,"end":1329,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1284,"end":1329,"body":[{"type":"ReturnStatement","start":1286,"end":1327,"argument":{"type":"ArrayExpression","start":1293,"end":1326,"elements":[{"type":"ObjectExpression","start":1294,"end":1325,"properties":[{"type":"Property","start":1296,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1296,"end":1300,"name":"type"},"value":{"type":"MemberExpression","start":1302,"end":1323,"object":{"type":"Identifier","start":1302,"end":1304,"name":"i1"},"property":{"type":"Identifier","start":1305,"end":1323,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUl0QyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxpREFBaUQ7SUFDekgsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FGMUIsTUFBTTsyRkFFUCwyQkFBMkI7a0JBSHZDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtOZ3hGaXJlYmFzZVNlcnZpY2V9IGZyb20gJy4vbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7RmlyZWJhc2VFeHRlbmRlZH0gZnJvbSAnLi4vZmlyZWJhc2UtZXh0ZW5kZWQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlc3RvcmVFeHRlbmRlZFNlcnZpY2Uge1xuXG4gIHB1YmxpYyBmaXJlRXh0OiBGaXJlYmFzZUV4dGVuZGVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd4RmlyZWJhc2VTZXJ2aWNlOiBOZ3hGaXJlYmFzZVNlcnZpY2UpIHtcbiAgICB0aGlzLmZpcmVFeHQgPSBuZXcgRmlyZWJhc2VFeHRlbmRlZChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","start":1335,"end":3129}]},"code":"import { Injectable } from '@angular/core';\r\nimport { FirebaseExtended } from '../firebase-extended';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirebaseExtended(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUl0QyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxpREFBaUQ7SUFDekgsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FGMUIsTUFBTTsyRkFFUCwyQkFBMkI7a0JBSHZDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtOZ3hGaXJlYmFzZVNlcnZpY2V9IGZyb20gJy4vbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7RmlyZWJhc2VFeHRlbmRlZH0gZnJvbSAnLi4vZmlyZWJhc2UtZXh0ZW5kZWQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlc3RvcmVFeHRlbmRlZFNlcnZpY2Uge1xuXG4gIHB1YmxpYyBmaXJlRXh0OiBGaXJlYmFzZUV4dGVuZGVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd4RmlyZWJhc2VTZXJ2aWNlOiBOZ3hGaXJlYmFzZVNlcnZpY2UpIHtcbiAgICB0aGlzLmZpcmVFeHQgPSBuZXcgRmlyZWJhc2VFeHRlbmRlZChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Injectable } from '@angular/core';\r\nimport { FirebaseExtended } from '../firebase-extended';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirebaseExtended(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUl0QyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxpREFBaUQ7SUFDekgsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FGMUIsTUFBTTsyRkFFUCwyQkFBMkI7a0JBSHZDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtOZ3hGaXJlYmFzZVNlcnZpY2V9IGZyb20gJy4vbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7RmlyZWJhc2VFeHRlbmRlZH0gZnJvbSAnLi4vZmlyZWJhc2UtZXh0ZW5kZWQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlc3RvcmVFeHRlbmRlZFNlcnZpY2Uge1xuXG4gIHB1YmxpYyBmaXJlRXh0OiBGaXJlYmFzZUV4dGVuZGVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd4RmlyZWJhc2VTZXJ2aWNlOiBOZ3hGaXJlYmFzZVNlcnZpY2UpIHtcbiAgICB0aGlzLmZpcmVFeHQgPSBuZXcgRmlyZWJhc2VFeHRlbmRlZChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firestore-extended.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firestore-extended.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[19,0,0,18],[21,0,0,19],[27,0,0,25],[42,0,0,40],[43,0,0,41]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[25,0,4,24],[27,0,4,25],[33,0,4,31],[55,0,4,53],[56,0,4,54]],[],[],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[40,0,9,40]],[[4,0,13,2],[16,0,13,22],[34,0,13,60]],[[8,0,13,22],[31,0,13,40],[34,0,13,22],[52,0,13,40],[53,0,13,60]],[[8,0,14,4],[12,0,14,8],[13,0,14,9],[20,0,14,16],[23,0,14,19],[27,0,14,23],[43,0,14,39],[44,0,14,40],[62,0,14,58],[63,0,14,59],[74,0,14,70],[75,0,14,71],[76,0,14,72],[77,0,14,74],[126,0,14,123]],[[4,0,15,2],[5,0,15,3]],[[4,0,17,2],[8,0,17,6],[19,0,17,17]],[[8,0,18,4],[33,0,18,29]],[[8,0,19,4],[15,0,19,11],[19,0,19,15],[20,0,19,16],[38,0,19,34],[39,0,19,35],[50,0,19,46],[51,0,19,47]],[[4,0,20,2],[5,0,20,3]],[],[[120,0,9,13],[147,0,9,40]],[[124,0,9,13],[151,0,9,40],[165,0,7,14],[171,0,7,20]],[[91,0,9,13],[118,0,9,40]],[[18,0,6,1],[28,0,6,11]],[[19,0,6,12]],[[20,0,7,2],[30,0,7,12],[32,0,7,14],[38,0,7,20]],[[17,0,8,1]]],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {NgxFirebaseService} from './ngx-firebase.service';\nimport {FirebaseApp} from 'firebase/app';\nimport {FirebaseExtended} from '../firebase-extended';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFirestoreExtendedService {\n\n  public fireExt: FirebaseExtended;\n\n  constructor(private ngxFirebaseService: NgxFirebaseService) {\n    this.fireExt = new FirebaseExtended(ngxFirebaseService.firebaseApp);  /* inject Firebase App from NgxFirebaseService */\n  }\n\n  get firebaseApp(): FirebaseApp {\n    /** Convenience getter */\n    return this.ngxFirebaseService.firebaseApp;\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../firebase-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2344,"body":[{"type":"ExportAllDeclaration","start":57,"end":100,"exported":null,"source":{"type":"Literal","start":71,"end":99,"value":"./lib/models/firestoreItem","raw":"'./lib/models/firestoreItem'"}},{"type":"ExportAllDeclaration","start":102,"end":143,"exported":null,"source":{"type":"Literal","start":116,"end":142,"value":"./lib/firestore-extended","raw":"'./lib/firestore-extended'"}},{"type":"ExportAllDeclaration","start":145,"end":188,"exported":null,"source":{"type":"Literal","start":159,"end":187,"value":"./lib/sub-collection-query","raw":"'./lib/sub-collection-query'"}},{"type":"ExportAllDeclaration","start":190,"end":234,"exported":null,"source":{"type":"Literal","start":204,"end":233,"value":"./lib/sub-collection-writer","raw":"'./lib/sub-collection-writer'"}},{"type":"ExportAllDeclaration","start":236,"end":266,"exported":null,"source":{"type":"Literal","start":250,"end":265,"value":"./lib/helpers","raw":"'./lib/helpers'"}},{"type":"ExportAllDeclaration","start":268,"end":301,"exported":null,"source":{"type":"Literal","start":282,"end":300,"value":"./lib/interfaces","raw":"'./lib/interfaces'"}},{"type":"ExportAllDeclaration","start":407,"end":455,"exported":null,"source":{"type":"Literal","start":421,"end":454,"value":"./lib/firebase-extended-wrapper","raw":"'./lib/firebase-extended-wrapper'"}},{"type":"ExportAllDeclaration","start":457,"end":513,"exported":null,"source":{"type":"Literal","start":471,"end":512,"value":"./lib/rxjs-ops/combine-latest-to-object","raw":"'./lib/rxjs-ops/combine-latest-to-object'"}},{"type":"ExportAllDeclaration","start":515,"end":548,"exported":null,"source":{"type":"Literal","start":529,"end":547,"value":"./lib/ngx/config","raw":"'./lib/ngx/config'"}},{"type":"ExportAllDeclaration","start":550,"end":596,"exported":null,"source":{"type":"Literal","start":564,"end":595,"value":"./lib/ngx/ngx-firebase.module","raw":"'./lib/ngx/ngx-firebase.module'"}},{"type":"ExportAllDeclaration","start":598,"end":645,"exported":null,"source":{"type":"Literal","start":612,"end":644,"value":"./lib/ngx/ngx-firebase.service","raw":"'./lib/ngx/ngx-firebase.service'"}},{"type":"ExportAllDeclaration","start":647,"end":704,"exported":null,"source":{"type":"Literal","start":661,"end":703,"value":"./lib/ngx/ngx-firestore-extended.service","raw":"'./lib/ngx/ngx-firestore-extended.service'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyw4Q0FBOEM7QUFDOUMsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUV4RCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBmaXJlc3RvcmUtZXh0ZW5kZWQudHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZmlyZXN0b3JlSXRlbSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtZXh0ZW5kZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24tcXVlcnknO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2hlbHBlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaW50ZXJmYWNlcyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZCc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZC13cmFwcGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","start":706,"end":2344}]},"code":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n// export * from './lib/rxfirestore-extended';\r\n// export * from './lib/rxfirestore-extended-wrapper';\r\nexport * from './lib/firebase-extended-wrapper';\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyw4Q0FBOEM7QUFDOUMsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUV4RCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBmaXJlc3RvcmUtZXh0ZW5kZWQudHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZmlyZXN0b3JlSXRlbSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtZXh0ZW5kZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24tcXVlcnknO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2hlbHBlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaW50ZXJmYWNlcyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZCc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZC13cmFwcGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n// export * from './lib/rxfirestore-extended';\r\n// export * from './lib/rxfirestore-extended-wrapper';\r\nexport * from './lib/firebase-extended-wrapper';\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyw4Q0FBOEM7QUFDOUMsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUV4RCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBmaXJlc3RvcmUtZXh0ZW5kZWQudHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZmlyZXN0b3JlSXRlbSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtZXh0ZW5kZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24tcXVlcnknO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2hlbHBlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaW50ZXJmYWNlcyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZCc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZC13cmFwcGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,10,0],[46,0,10,46]],[[0,0,11,0],[54,0,11,54]],[[0,0,12,0],[14,0,12,14],[47,0,12,47],[48,0,12,48]],[[0,0,13,0],[14,0,13,14],[55,0,13,55],[56,0,13,56]],[[0,0,15,0],[14,0,15,14],[32,0,15,32],[33,0,15,33]],[[0,0,16,0],[14,0,16,14],[45,0,16,45],[46,0,16,46]],[[0,0,17,0],[14,0,17,14],[46,0,17,46],[47,0,17,47]],[[0,0,18,0],[14,0,18,14],[56,0,18,56],[57,0,18,57]]],"sourcesContent":["/*\n * Public API Surface of firestore-extended.ts\n */\n\nexport * from './lib/models/firestoreItem';\nexport * from './lib/firestore-extended';\nexport * from './lib/sub-collection-query';\nexport * from './lib/sub-collection-writer';\nexport * from './lib/helpers';\nexport * from './lib/interfaces';\n// export * from './lib/rxfirestore-extended';\n// export * from './lib/rxfirestore-extended-wrapper';\nexport * from './lib/firebase-extended-wrapper';\nexport * from './lib/rxjs-ops/combine-latest-to-object';\n\nexport * from './lib/ngx/config';\nexport * from './lib/ngx/ngx-firebase.module';\nexport * from './lib/ngx/ngx-firebase.service';\nexport * from './lib/ngx/ngx-firestore-extended.service';\n\n"]},"resolvedIds":{"./lib/firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-writer":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-query":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/interfaces":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firebase-extended-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/models/firestoreItem":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/rxjs-ops/combine-latest-to-object":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.module":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firestore-extended.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":532,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","start":82,"end":532}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{}}}
