{"modules":[{"ast":{"type":"Program","start":0,"end":4302,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","start":12,"end":4302}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11593,"body":[{"type":"ImportDeclaration","start":0,"end":53,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"collection"},"local":{"type":"Identifier","start":9,"end":19,"name":"collection"}},{"type":"ImportSpecifier","start":21,"end":24,"imported":{"type":"Identifier","start":21,"end":24,"name":"doc"},"local":{"type":"Identifier","start":21,"end":24,"name":"doc"}}],"source":{"type":"Literal","start":32,"end":52,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":156,"end":463,"declaration":{"type":"FunctionDeclaration","start":163,"end":463,"id":{"type":"Identifier","start":172,"end":186,"name":"getRefFromPath"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":187,"end":191,"name":"path"},{"type":"Identifier","start":193,"end":202,"name":"firestore"}],"body":{"type":"BlockStatement","start":204,"end":463,"body":[{"type":"VariableDeclaration","start":211,"end":260,"declarations":[{"type":"VariableDeclarator","start":217,"end":259,"id":{"type":"Identifier","start":217,"end":234,"name":"pathSegmentAmount"},"init":{"type":"MemberExpression","start":237,"end":259,"object":{"type":"CallExpression","start":237,"end":252,"callee":{"type":"MemberExpression","start":237,"end":247,"object":{"type":"Identifier","start":237,"end":241,"name":"path"},"property":{"type":"Identifier","start":242,"end":247,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":248,"end":251,"value":"/","raw":"'/'"}],"optional":false},"property":{"type":"Identifier","start":253,"end":259,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":266,"end":460,"test":{"type":"BinaryExpression","start":270,"end":297,"left":{"type":"BinaryExpression","start":270,"end":291,"left":{"type":"Identifier","start":270,"end":287,"name":"pathSegmentAmount"},"operator":"%","right":{"type":"Literal","start":290,"end":291,"value":2,"raw":"2"}},"operator":"===","right":{"type":"Literal","start":296,"end":297,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":299,"end":370,"body":[{"type":"ReturnStatement","start":335,"end":363,"argument":{"type":"CallExpression","start":342,"end":362,"callee":{"type":"Identifier","start":342,"end":345,"name":"doc"},"arguments":[{"type":"Identifier","start":346,"end":355,"name":"firestore"},{"type":"Identifier","start":357,"end":361,"name":"path"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":381,"end":460,"body":[{"type":"ReturnStatement","start":418,"end":453,"argument":{"type":"CallExpression","start":425,"end":452,"callee":{"type":"Identifier","start":425,"end":435,"name":"collection"},"arguments":[{"type":"Identifier","start":436,"end":445,"name":"firestore"},{"type":"Identifier","start":447,"end":451,"name":"path"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":465,"end":653,"declaration":{"type":"FunctionDeclaration","start":472,"end":653,"id":{"type":"Identifier","start":481,"end":497,"name":"getSubCollection"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":498,"end":504,"name":"docRef"},{"type":"Identifier","start":506,"end":520,"name":"collectionName"}],"body":{"type":"BlockStatement","start":522,"end":653,"body":[{"type":"VariableDeclaration","start":529,"end":592,"declarations":[{"type":"VariableDeclarator","start":535,"end":591,"id":{"type":"Identifier","start":535,"end":549,"name":"collectionPath"},"init":{"type":"CallExpression","start":552,"end":591,"callee":{"type":"MemberExpression","start":552,"end":570,"object":{"type":"MemberExpression","start":552,"end":563,"object":{"type":"Identifier","start":552,"end":558,"name":"docRef"},"property":{"type":"Identifier","start":559,"end":563,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":564,"end":570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":571,"end":574,"value":"/","raw":"'/'"},{"type":"Identifier","start":576,"end":590,"name":"collectionName"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":598,"end":650,"argument":{"type":"CallExpression","start":605,"end":649,"callee":{"type":"Identifier","start":605,"end":615,"name":"collection"},"arguments":[{"type":"MemberExpression","start":616,"end":632,"object":{"type":"Identifier","start":616,"end":622,"name":"docRef"},"property":{"type":"Identifier","start":623,"end":632,"name":"firestore"},"computed":false,"optional":false},{"type":"Identifier","start":634,"end":648,"name":"collectionPath"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":655,"end":776,"declaration":{"type":"FunctionDeclaration","start":662,"end":776,"id":{"type":"Identifier","start":671,"end":686,"name":"getDocRefWithId"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":687,"end":700,"name":"collectionRef"},{"type":"Identifier","start":702,"end":704,"name":"id"}],"body":{"type":"BlockStatement","start":706,"end":776,"body":[{"type":"ReturnStatement","start":713,"end":773,"argument":{"type":"CallExpression","start":720,"end":772,"callee":{"type":"Identifier","start":720,"end":723,"name":"doc"},"arguments":[{"type":"MemberExpression","start":724,"end":747,"object":{"type":"Identifier","start":724,"end":737,"name":"collectionRef"},"property":{"type":"Identifier","start":738,"end":747,"name":"firestore"},"computed":false,"optional":false},{"type":"MemberExpression","start":749,"end":767,"object":{"type":"Identifier","start":749,"end":762,"name":"collectionRef"},"property":{"type":"Identifier","start":763,"end":767,"name":"path"},"computed":false,"optional":false},{"type":"Identifier","start":769,"end":771,"name":"id"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":961,"end":1236,"declaration":{"type":"FunctionDeclaration","start":968,"end":1236,"id":{"type":"Identifier","start":977,"end":990,"name":"addDataToItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":991,"end":995,"name":"item"},{"type":"Identifier","start":997,"end":1006,"name":"dataToAdd"},{"type":"AssignmentPattern","start":1008,"end":1023,"left":{"type":"Identifier","start":1008,"end":1015,"name":"inplace"},"right":{"type":"Literal","start":1018,"end":1023,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":1025,"end":1236,"body":[{"type":"IfStatement","start":1032,"end":1233,"test":{"type":"Identifier","start":1036,"end":1043,"name":"inplace"},"consequent":{"type":"BlockStatement","start":1045,"end":1171,"body":[{"type":"ExpressionStatement","start":1056,"end":1142,"expression":{"type":"CallExpression","start":1056,"end":1141,"callee":{"type":"MemberExpression","start":1056,"end":1089,"object":{"type":"CallExpression","start":1056,"end":1081,"callee":{"type":"MemberExpression","start":1056,"end":1070,"object":{"type":"Identifier","start":1056,"end":1062,"name":"Object"},"property":{"type":"Identifier","start":1063,"end":1070,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1071,"end":1080,"name":"dataToAdd"}],"optional":false},"property":{"type":"Identifier","start":1082,"end":1089,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1090,"end":1140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"ArrayPattern","start":1091,"end":1097,"elements":[{"type":"Identifier","start":1092,"end":1093,"name":"k"},{"type":"Identifier","start":1095,"end":1096,"name":"v"}]}],"body":{"type":"BlockStatement","start":1102,"end":1140,"body":[{"type":"ExpressionStatement","start":1117,"end":1129,"expression":{"type":"AssignmentExpression","start":1117,"end":1128,"operator":"=","left":{"type":"MemberExpression","start":1117,"end":1124,"object":{"type":"Identifier","start":1117,"end":1121,"name":"item"},"property":{"type":"Identifier","start":1122,"end":1123,"name":"k"},"computed":true,"optional":false},"right":{"type":"Identifier","start":1127,"end":1128,"name":"v"}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1152,"end":1164,"argument":{"type":"Identifier","start":1159,"end":1163,"name":"item"}}]},"alternate":{"type":"BlockStatement","start":1182,"end":1233,"body":[{"type":"ReturnStatement","start":1193,"end":1226,"argument":{"type":"ObjectExpression","start":1200,"end":1225,"properties":[{"type":"SpreadElement","start":1202,"end":1209,"argument":{"type":"Identifier","start":1205,"end":1209,"name":"item"}},{"type":"SpreadElement","start":1211,"end":1223,"argument":{"type":"Identifier","start":1214,"end":1223,"name":"dataToAdd"}}]}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1555,"end":1807,"declaration":{"type":"FunctionDeclaration","start":1562,"end":1807,"id":{"type":"Identifier","start":1571,"end":1585,"name":"addCreatedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1586,"end":1590,"name":"item"},{"type":"AssignmentPattern","start":1592,"end":1607,"left":{"type":"Identifier","start":1592,"end":1599,"name":"inplace"},"right":{"type":"Literal","start":1602,"end":1607,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":1609,"end":1633,"left":{"type":"Identifier","start":1609,"end":1620,"name":"createdDate"},"right":{"type":"NewExpression","start":1623,"end":1633,"callee":{"type":"Identifier","start":1627,"end":1631,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":1635,"end":1807,"body":[{"type":"IfStatement","start":1688,"end":1745,"test":{"type":"BinaryExpression","start":1692,"end":1713,"left":{"type":"Literal","start":1692,"end":1705,"value":"createdDate","raw":"'createdDate'"},"operator":"in","right":{"type":"Identifier","start":1709,"end":1713,"name":"item"}},"consequent":{"type":"BlockStatement","start":1715,"end":1745,"body":[{"type":"ReturnStatement","start":1726,"end":1738,"argument":{"type":"Identifier","start":1733,"end":1737,"name":"item"}}]},"alternate":null},{"type":"ReturnStatement","start":1751,"end":1804,"argument":{"type":"CallExpression","start":1758,"end":1803,"callee":{"type":"Identifier","start":1758,"end":1771,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":1772,"end":1776,"name":"item"},{"type":"ObjectExpression","start":1778,"end":1793,"properties":[{"type":"Property","start":1780,"end":1791,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":1780,"end":1791,"name":"createdDate"},"kind":"init","value":{"type":"Identifier","start":1780,"end":1791,"name":"createdDate"}}]},{"type":"Identifier","start":1795,"end":1802,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2062,"end":2208,"declaration":{"type":"FunctionDeclaration","start":2069,"end":2208,"id":{"type":"Identifier","start":2078,"end":2093,"name":"addModifiedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2094,"end":2098,"name":"item"},{"type":"AssignmentPattern","start":2100,"end":2115,"left":{"type":"Identifier","start":2100,"end":2107,"name":"inplace"},"right":{"type":"Literal","start":2110,"end":2115,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":2117,"end":2142,"left":{"type":"Identifier","start":2117,"end":2129,"name":"modifiedDate"},"right":{"type":"NewExpression","start":2132,"end":2142,"callee":{"type":"Identifier","start":2136,"end":2140,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":2144,"end":2208,"body":[{"type":"ReturnStatement","start":2151,"end":2205,"argument":{"type":"CallExpression","start":2158,"end":2204,"callee":{"type":"Identifier","start":2158,"end":2171,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2172,"end":2176,"name":"item"},{"type":"ObjectExpression","start":2178,"end":2194,"properties":[{"type":"Property","start":2180,"end":2192,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2180,"end":2192,"name":"modifiedDate"},"kind":"init","value":{"type":"Identifier","start":2180,"end":2192,"name":"modifiedDate"}}]},{"type":"Identifier","start":2196,"end":2203,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2428,"end":2552,"declaration":{"type":"FunctionDeclaration","start":2435,"end":2552,"id":{"type":"Identifier","start":2444,"end":2456,"name":"addCreatedBy"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2457,"end":2461,"name":"item"},{"type":"Identifier","start":2463,"end":2472,"name":"createdBy"},{"type":"AssignmentPattern","start":2474,"end":2489,"left":{"type":"Identifier","start":2474,"end":2481,"name":"inplace"},"right":{"type":"Literal","start":2484,"end":2489,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":2491,"end":2552,"body":[{"type":"ReturnStatement","start":2498,"end":2549,"argument":{"type":"CallExpression","start":2505,"end":2548,"callee":{"type":"Identifier","start":2505,"end":2518,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2519,"end":2523,"name":"item"},{"type":"ObjectExpression","start":2525,"end":2538,"properties":[{"type":"Property","start":2527,"end":2536,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2527,"end":2536,"name":"createdBy"},"kind":"init","value":{"type":"Identifier","start":2527,"end":2536,"name":"createdBy"}}]},{"type":"Identifier","start":2540,"end":2547,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2823,"end":3205,"declaration":{"type":"FunctionDeclaration","start":2830,"end":3205,"id":{"type":"Identifier","start":2839,"end":2861,"name":"convertTimestampToDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2862,"end":2866,"name":"item"}],"body":{"type":"BlockStatement","start":2868,"end":3205,"body":[{"type":"IfStatement","start":2875,"end":3024,"test":{"type":"CallExpression","start":2879,"end":2913,"callee":{"type":"MemberExpression","start":2879,"end":2898,"object":{"type":"Identifier","start":2879,"end":2883,"name":"item"},"property":{"type":"Identifier","start":2884,"end":2898,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2899,"end":2912,"value":"createdDate","raw":"'createdDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2915,"end":3024,"body":[{"type":"ExpressionStatement","start":2926,"end":2962,"expression":{"type":"AssignmentExpression","start":2926,"end":2961,"operator":"=","left":{"type":"MemberExpression","start":2926,"end":2942,"object":{"type":"Identifier","start":2926,"end":2930,"name":"item"},"property":{"type":"Identifier","start":2931,"end":2942,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2945,"end":2961,"object":{"type":"Identifier","start":2945,"end":2949,"name":"item"},"property":{"type":"Identifier","start":2950,"end":2961,"name":"createdDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2972,"end":3017,"expression":{"type":"AssignmentExpression","start":2972,"end":3016,"operator":"=","left":{"type":"MemberExpression","start":2972,"end":2988,"object":{"type":"Identifier","start":2972,"end":2976,"name":"item"},"property":{"type":"Identifier","start":2977,"end":2988,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":2991,"end":3016,"callee":{"type":"MemberExpression","start":2991,"end":3014,"object":{"type":"MemberExpression","start":2991,"end":3007,"object":{"type":"Identifier","start":2991,"end":2995,"name":"item"},"property":{"type":"Identifier","start":2996,"end":3007,"name":"createdDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3008,"end":3014,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":3030,"end":3184,"test":{"type":"CallExpression","start":3034,"end":3069,"callee":{"type":"MemberExpression","start":3034,"end":3053,"object":{"type":"Identifier","start":3034,"end":3038,"name":"item"},"property":{"type":"Identifier","start":3039,"end":3053,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3054,"end":3068,"value":"modifiedDate","raw":"'modifiedDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3071,"end":3184,"body":[{"type":"ExpressionStatement","start":3082,"end":3120,"expression":{"type":"AssignmentExpression","start":3082,"end":3119,"operator":"=","left":{"type":"MemberExpression","start":3082,"end":3099,"object":{"type":"Identifier","start":3082,"end":3086,"name":"item"},"property":{"type":"Identifier","start":3087,"end":3099,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":3102,"end":3119,"object":{"type":"Identifier","start":3102,"end":3106,"name":"item"},"property":{"type":"Identifier","start":3107,"end":3119,"name":"modifiedDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":3130,"end":3177,"expression":{"type":"AssignmentExpression","start":3130,"end":3176,"operator":"=","left":{"type":"MemberExpression","start":3130,"end":3147,"object":{"type":"Identifier","start":3130,"end":3134,"name":"item"},"property":{"type":"Identifier","start":3135,"end":3147,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3150,"end":3176,"callee":{"type":"MemberExpression","start":3150,"end":3174,"object":{"type":"MemberExpression","start":3150,"end":3167,"object":{"type":"Identifier","start":3150,"end":3154,"name":"item"},"property":{"type":"Identifier","start":3155,"end":3167,"name":"modifiedDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3168,"end":3174,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":3190,"end":3202,"argument":{"type":"Identifier","start":3197,"end":3201,"name":"item"}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":3207,"end":11593}]},"code":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/helpers.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,1,2],[19,0,1,12],[21,0,3,2],[24,0,3,5],[26,0,8,1],[32,0,8,7],[52,0,8,27],[53,0,8,28]],[[0,0,10,0],[99,0,10,99]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[30,0,11,30],[31,0,11,34],[35,0,11,46],[37,0,11,48],[46,0,11,68]],[[4,0,12,2],[10,0,12,8],[27,0,12,25],[30,0,12,36],[34,0,12,40],[35,0,12,41],[40,0,12,46],[41,0,12,47],[44,0,12,50],[45,0,12,51],[46,0,12,52],[52,0,12,58],[53,0,12,59]],[[4,0,13,2],[8,0,13,6],[25,0,13,23],[28,0,13,26],[29,0,13,27],[34,0,13,32],[35,0,13,33],[37,0,13,35],[39,0,13,37],[63,0,13,61]],[[8,0,14,4],[15,0,14,11],[18,0,14,14],[19,0,14,15],[28,0,14,24],[30,0,14,26],[34,0,14,30],[35,0,14,55],[36,0,14,56]],[[5,0,15,3]],[[9,0,15,9],[11,0,15,11],[36,0,15,36]],[[8,0,16,4],[15,0,16,11],[25,0,16,21],[26,0,16,22],[35,0,16,31],[37,0,16,33],[41,0,16,37],[42,0,16,64],[43,0,16,65]],[[5,0,17,3]],[[0,0,18,0],[1,0,18,1]],[[0,0,20,0],[6,0,20,6],[16,0,20,16],[32,0,20,32],[33,0,20,81],[39,0,20,109],[41,0,20,111],[55,0,20,133]],[[4,0,21,2],[10,0,21,8],[24,0,21,22],[27,0,21,33],[33,0,21,39],[34,0,21,40],[38,0,21,44],[39,0,21,45],[45,0,21,51],[46,0,21,52],[49,0,21,55],[51,0,21,57],[65,0,21,71],[66,0,21,72],[67,0,21,73]],[[4,0,22,2],[11,0,22,9],[21,0,22,19],[22,0,22,20],[28,0,22,26],[29,0,22,27],[38,0,22,36],[40,0,22,38],[54,0,22,52],[55,0,22,79],[56,0,22,80]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0],[6,0,25,6],[16,0,25,16],[31,0,25,31],[32,0,25,56],[45,0,25,93],[47,0,25,95],[49,0,25,105]],[[4,0,26,2],[11,0,26,9],[14,0,26,12],[15,0,26,13],[28,0,26,26],[29,0,26,27],[38,0,26,36],[40,0,26,38],[53,0,26,51],[54,0,26,52],[58,0,26,56],[60,0,26,58],[62,0,26,60],[63,0,26,85],[64,0,26,86]],[[0,0,27,0],[1,0,27,1]],[[0,0,29,0]],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[29,0,35,29],[30,0,36,2],[34,0,36,9],[36,0,36,11],[45,0,36,46],[47,0,36,48],[54,0,36,55],[57,0,36,58],[62,0,36,63]],[[4,0,38,2],[8,0,38,6],[15,0,38,13],[17,0,38,15]],[[8,0,39,4],[14,0,39,10],[15,0,39,11],[22,0,39,18],[23,0,39,19],[32,0,39,28],[33,0,39,29],[34,0,39,30],[41,0,39,37],[42,0,39,38],[43,0,39,39],[44,0,39,40],[45,0,39,41],[47,0,39,43],[48,0,39,44],[49,0,39,45],[51,0,39,47],[53,0,39,49]],[[12,0,40,7],[16,0,40,40],[17,0,40,41],[18,0,40,42],[19,0,40,43],[22,0,40,46],[23,0,40,47],[24,0,40,48]],[[8,0,41,4],[9,0,41,5],[10,0,41,6],[11,0,41,7]],[[8,0,42,4],[15,0,42,11],[19,0,42,15],[20,0,42,16]],[[5,0,43,3]],[[9,0,43,9]],[[8,0,44,4],[15,0,44,11],[17,0,44,12],[20,0,44,15],[24,0,44,19],[26,0,44,21],[29,0,44,24],[38,0,44,33],[40,0,44,34],[41,0,44,35]],[[5,0,45,3]],[[0,0,46,0],[1,0,46,1]],[[0,0,48,0]],[],[],[],[],[],[[3,0,54,3]],[[0,0,55,0],[6,0,55,6],[16,0,55,16],[30,0,55,30],[31,0,55,34],[35,0,55,41],[37,0,55,43],[44,0,55,50],[47,0,55,53],[52,0,55,58],[54,0,55,60],[68,0,55,80],[72,0,55,84],[76,0,55,88],[78,0,55,90]],[[4,0,56,2],[44,0,56,42]],[[4,0,57,2],[8,0,57,6],[21,0,57,19],[25,0,57,23],[29,0,57,27],[31,0,57,29]],[[8,0,58,4],[15,0,58,11],[19,0,58,15],[20,0,58,16]],[[5,0,59,3]],[[4,0,61,2],[11,0,61,9],[24,0,61,22],[25,0,61,23],[29,0,61,27],[31,0,61,29],[33,0,61,30],[44,0,61,41],[46,0,61,42],[48,0,61,44],[55,0,61,51],[56,0,61,52],[57,0,61,53]],[[0,0,62,0],[1,0,62,1]],[[0,0,64,0]],[],[],[],[],[],[[3,0,70,3]],[[0,0,71,0],[6,0,71,6],[16,0,71,16],[31,0,71,31],[32,0,71,35],[36,0,71,42],[38,0,71,44],[45,0,71,51],[48,0,71,54],[53,0,71,59],[55,0,71,61],[70,0,71,82],[74,0,71,86],[78,0,71,90],[80,0,71,92]],[[4,0,72,2],[11,0,72,9],[24,0,72,22],[25,0,72,23],[29,0,72,27],[31,0,72,29],[33,0,72,30],[45,0,72,42],[47,0,72,43],[49,0,72,45],[56,0,72,52],[57,0,72,53],[58,0,72,54]],[[0,0,73,0],[1,0,73,1]],[[0,0,75,0]],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[16,0,82,16],[28,0,82,28],[29,0,82,32],[33,0,82,39],[35,0,82,41],[44,0,82,76],[46,0,82,78],[53,0,82,85],[56,0,82,88],[61,0,82,93]],[[4,0,84,2],[11,0,84,9],[24,0,84,22],[25,0,84,23],[29,0,84,27],[31,0,84,29],[33,0,84,30],[42,0,84,39],[44,0,84,40],[46,0,84,42],[53,0,84,49],[54,0,84,50],[55,0,84,51]],[[0,0,85,0],[1,0,85,1]],[[0,0,88,0]],[],[],[],[],[],[],[],[[3,0,96,3]],[[0,0,98,0],[6,0,98,6],[16,0,98,16],[38,0,98,38],[39,0,98,92],[43,0,98,99]],[[4,0,99,2],[8,0,99,6],[12,0,99,10],[13,0,99,11],[27,0,99,25],[28,0,99,26],[41,0,99,39],[42,0,99,40],[44,0,99,42]],[[8,0,100,4],[12,0,100,8],[13,0,100,9],[24,0,100,20],[27,0,100,23],[31,0,100,27],[32,0,100,28],[43,0,100,60],[44,0,100,61]],[[8,0,101,4],[12,0,101,8],[13,0,101,9],[24,0,101,20],[27,0,101,23],[31,0,101,27],[32,0,101,28],[43,0,101,39],[44,0,101,40],[50,0,101,46],[52,0,101,48],[53,0,101,49]],[[5,0,102,3]],[[4,0,103,2],[8,0,103,6],[12,0,103,10],[13,0,103,11],[27,0,103,25],[28,0,103,26],[42,0,103,40],[43,0,103,41],[45,0,103,43]],[[8,0,104,4],[12,0,104,8],[13,0,104,9],[25,0,104,21],[28,0,104,24],[32,0,104,28],[33,0,104,29],[45,0,104,62],[46,0,104,63]],[[8,0,105,4],[12,0,105,8],[13,0,105,9],[25,0,105,21],[28,0,105,24],[32,0,105,28],[33,0,105,29],[45,0,105,41],[46,0,105,42],[52,0,105,48],[54,0,105,50],[55,0,105,51]],[[5,0,106,3]],[[4,0,108,2],[11,0,108,9],[15,0,108,13],[16,0,108,14]],[[0,0,109,0],[1,0,109,1]]],"sourcesContent":["import {\r\n  collection,\r\n  CollectionReference,\r\n  doc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  Firestore,\r\n  Timestamp as FirebaseTimestamp\r\n} from 'firebase/firestore';\r\n\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath<A>(path: string, firestore: Firestore): DocumentReference<A> | CollectionReference<A> {\r\n  const pathSegmentAmount: number = path.split('/').length;\r\n  if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n    return doc(firestore, path) as DocumentReference<A>;\r\n  } else { // odd meaning collection\r\n    return collection(firestore, path) as CollectionReference<A>;\r\n  }\r\n}\r\n\r\nexport function getSubCollection<T extends DocumentData, A extends DocumentData>(docRef: DocumentReference<T>, collectionName: string): CollectionReference<A> {\r\n  const collectionPath: string = docRef.path.concat('/', collectionName);\r\n  return collection(docRef.firestore, collectionPath) as CollectionReference<A>;\r\n}\r\n\r\nexport function getDocRefWithId<T extends DocumentData>(collectionRef: CollectionReference<T>, id: string): DocumentReference<T> {\r\n  return doc(collectionRef.firestore, collectionRef.path, id) as DocumentReference<T>;\r\n}\r\n\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem<A extends { [field: string]: any }>(\r\n  item: A, dataToAdd: { [field: string]: any }, inplace = false): A {\r\n\r\n  if (inplace) {\r\n    Object.entries(dataToAdd).forEach(([k, v]) => {\r\n      (item as { [field: string]: any })[k] = v;\r\n    });\r\n    return item;\r\n  } else {\r\n    return {...item, ...dataToAdd};\r\n  }\r\n}\r\n\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate<A>(item: A, inplace = false, createdDate: Date = new Date()): A {\r\n  // do not overwrite previous createdDate\r\n  if ('createdDate' in item) {\r\n    return item;\r\n  }\r\n\r\n  return addDataToItem(item, {createdDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate<A>(item: A, inplace = false, modifiedDate: Date = new Date()): A {\r\n  return addDataToItem(item, {modifiedDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy<A>(item: A, createdBy: { [field: string]: any }, inplace = false): A {\r\n\r\n  return addDataToItem(item, {createdBy}, inplace);\r\n}\r\n\r\n\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\n\r\nexport function convertTimestampToDate<A extends { createdDate?: any, modifiedDate?: any }>(item: A): A {\r\n  if (item.hasOwnProperty('createdDate')) {\r\n    item.createdDate = item.createdDate as FirebaseTimestamp;\r\n    item.createdDate = item.createdDate.toDate();\r\n  }\r\n  if (item.hasOwnProperty('modifiedDate')) {\r\n    item.modifiedDate = item.modifiedDate as FirebaseTimestamp;\r\n    item.modifiedDate = item.modifiedDate.toDate();\r\n  }\r\n\r\n  return item;\r\n}\r\n"]},"resolvedIds":{"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":7980,"body":[{"type":"ExportNamedDeclaration","start":430,"end":835,"declaration":{"type":"FunctionDeclaration","start":437,"end":835,"id":{"type":"Identifier","start":446,"end":461,"name":"moveItemInArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":462,"end":467,"name":"array"},{"type":"Identifier","start":469,"end":478,"name":"fromIndex"},{"type":"Identifier","start":480,"end":487,"name":"toIndex"}],"body":{"type":"BlockStatement","start":489,"end":835,"body":[{"type":"VariableDeclaration","start":496,"end":544,"declarations":[{"type":"VariableDeclarator","start":502,"end":543,"id":{"type":"Identifier","start":502,"end":506,"name":"from"},"init":{"type":"CallExpression","start":509,"end":543,"callee":{"type":"Identifier","start":509,"end":514,"name":"clamp"},"arguments":[{"type":"Identifier","start":515,"end":524,"name":"fromIndex"},{"type":"BinaryExpression","start":526,"end":542,"left":{"type":"MemberExpression","start":526,"end":538,"object":{"type":"Identifier","start":526,"end":531,"name":"array"},"property":{"type":"Identifier","start":532,"end":538,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":541,"end":542,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":550,"end":594,"declarations":[{"type":"VariableDeclarator","start":556,"end":593,"id":{"type":"Identifier","start":556,"end":558,"name":"to"},"init":{"type":"CallExpression","start":561,"end":593,"callee":{"type":"Identifier","start":561,"end":566,"name":"clamp"},"arguments":[{"type":"Identifier","start":567,"end":574,"name":"toIndex"},{"type":"BinaryExpression","start":576,"end":592,"left":{"type":"MemberExpression","start":576,"end":588,"object":{"type":"Identifier","start":576,"end":581,"name":"array"},"property":{"type":"Identifier","start":582,"end":588,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":591,"end":592,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":600,"end":642,"test":{"type":"BinaryExpression","start":604,"end":615,"left":{"type":"Identifier","start":604,"end":608,"name":"from"},"operator":"===","right":{"type":"Identifier","start":613,"end":615,"name":"to"}},"consequent":{"type":"BlockStatement","start":617,"end":642,"body":[{"type":"ReturnStatement","start":628,"end":635,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":648,"end":675,"declarations":[{"type":"VariableDeclarator","start":654,"end":674,"id":{"type":"Identifier","start":654,"end":660,"name":"target"},"init":{"type":"MemberExpression","start":663,"end":674,"object":{"type":"Identifier","start":663,"end":668,"name":"array"},"property":{"type":"Identifier","start":669,"end":673,"name":"from"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":681,"end":714,"declarations":[{"type":"VariableDeclarator","start":687,"end":713,"id":{"type":"Identifier","start":687,"end":692,"name":"delta"},"init":{"type":"ConditionalExpression","start":695,"end":713,"test":{"type":"BinaryExpression","start":695,"end":704,"left":{"type":"Identifier","start":695,"end":697,"name":"to"},"operator":"<","right":{"type":"Identifier","start":700,"end":704,"name":"from"}},"consequent":{"type":"UnaryExpression","start":707,"end":709,"operator":"-","prefix":true,"argument":{"type":"Literal","start":708,"end":709,"value":1,"raw":"1"}},"alternate":{"type":"Literal","start":712,"end":713,"value":1,"raw":"1"}}}],"kind":"const"},{"type":"ForStatement","start":720,"end":807,"init":{"type":"VariableDeclaration","start":725,"end":737,"declarations":[{"type":"VariableDeclarator","start":729,"end":737,"id":{"type":"Identifier","start":729,"end":730,"name":"i"},"init":{"type":"Identifier","start":733,"end":737,"name":"from"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":739,"end":747,"left":{"type":"Identifier","start":739,"end":740,"name":"i"},"operator":"!==","right":{"type":"Identifier","start":745,"end":747,"name":"to"}},"update":{"type":"AssignmentExpression","start":749,"end":759,"operator":"+=","left":{"type":"Identifier","start":749,"end":750,"name":"i"},"right":{"type":"Identifier","start":754,"end":759,"name":"delta"}},"body":{"type":"BlockStatement","start":761,"end":807,"body":[{"type":"ExpressionStatement","start":772,"end":800,"expression":{"type":"AssignmentExpression","start":772,"end":799,"operator":"=","left":{"type":"MemberExpression","start":772,"end":780,"object":{"type":"Identifier","start":772,"end":777,"name":"array"},"property":{"type":"Identifier","start":778,"end":779,"name":"i"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":783,"end":799,"object":{"type":"Identifier","start":783,"end":788,"name":"array"},"property":{"type":"BinaryExpression","start":789,"end":798,"left":{"type":"Identifier","start":789,"end":790,"name":"i"},"operator":"+","right":{"type":"Identifier","start":793,"end":798,"name":"delta"}},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":813,"end":832,"expression":{"type":"AssignmentExpression","start":813,"end":831,"operator":"=","left":{"type":"MemberExpression","start":813,"end":822,"object":{"type":"Identifier","start":813,"end":818,"name":"array"},"property":{"type":"Identifier","start":819,"end":821,"name":"to"},"computed":true,"optional":false},"right":{"type":"Identifier","start":825,"end":831,"name":"target"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1134,"end":1454,"declaration":{"type":"FunctionDeclaration","start":1141,"end":1454,"id":{"type":"Identifier","start":1150,"end":1167,"name":"transferArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1168,"end":1180,"name":"currentArray"},{"type":"Identifier","start":1182,"end":1193,"name":"targetArray"},{"type":"Identifier","start":1195,"end":1207,"name":"currentIndex"},{"type":"Identifier","start":1209,"end":1220,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1222,"end":1454,"body":[{"type":"VariableDeclaration","start":1229,"end":1287,"declarations":[{"type":"VariableDeclarator","start":1235,"end":1286,"id":{"type":"Identifier","start":1235,"end":1239,"name":"from"},"init":{"type":"CallExpression","start":1242,"end":1286,"callee":{"type":"Identifier","start":1242,"end":1247,"name":"clamp"},"arguments":[{"type":"Identifier","start":1248,"end":1260,"name":"currentIndex"},{"type":"BinaryExpression","start":1262,"end":1285,"left":{"type":"MemberExpression","start":1262,"end":1281,"object":{"type":"Identifier","start":1262,"end":1274,"name":"currentArray"},"property":{"type":"Identifier","start":1275,"end":1281,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":1284,"end":1285,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1293,"end":1343,"declarations":[{"type":"VariableDeclarator","start":1299,"end":1342,"id":{"type":"Identifier","start":1299,"end":1301,"name":"to"},"init":{"type":"CallExpression","start":1304,"end":1342,"callee":{"type":"Identifier","start":1304,"end":1309,"name":"clamp"},"arguments":[{"type":"Identifier","start":1310,"end":1321,"name":"targetIndex"},{"type":"MemberExpression","start":1323,"end":1341,"object":{"type":"Identifier","start":1323,"end":1334,"name":"targetArray"},"property":{"type":"Identifier","start":1335,"end":1341,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1349,"end":1451,"test":{"type":"MemberExpression","start":1353,"end":1372,"object":{"type":"Identifier","start":1353,"end":1365,"name":"currentArray"},"property":{"type":"Identifier","start":1366,"end":1372,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1374,"end":1451,"body":[{"type":"ExpressionStatement","start":1385,"end":1444,"expression":{"type":"CallExpression","start":1385,"end":1443,"callee":{"type":"MemberExpression","start":1385,"end":1403,"object":{"type":"Identifier","start":1385,"end":1396,"name":"targetArray"},"property":{"type":"Identifier","start":1397,"end":1403,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1404,"end":1406,"name":"to"},{"type":"Literal","start":1408,"end":1409,"value":0,"raw":"0"},{"type":"MemberExpression","start":1411,"end":1442,"object":{"type":"CallExpression","start":1411,"end":1439,"callee":{"type":"MemberExpression","start":1411,"end":1430,"object":{"type":"Identifier","start":1411,"end":1423,"name":"currentArray"},"property":{"type":"Identifier","start":1424,"end":1430,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1431,"end":1435,"name":"from"},{"type":"Literal","start":1437,"end":1438,"value":1,"raw":"1"}],"optional":false},"property":{"type":"Literal","start":1440,"end":1441,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1813,"end":2060,"declaration":{"type":"FunctionDeclaration","start":1820,"end":2060,"id":{"type":"Identifier","start":1829,"end":1842,"name":"copyArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1855,"name":"currentArray"},{"type":"Identifier","start":1857,"end":1868,"name":"targetArray"},{"type":"Identifier","start":1870,"end":1882,"name":"currentIndex"},{"type":"Identifier","start":1884,"end":1895,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1897,"end":2060,"body":[{"type":"VariableDeclaration","start":1904,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1910,"end":1953,"id":{"type":"Identifier","start":1910,"end":1912,"name":"to"},"init":{"type":"CallExpression","start":1915,"end":1953,"callee":{"type":"Identifier","start":1915,"end":1920,"name":"clamp"},"arguments":[{"type":"Identifier","start":1921,"end":1932,"name":"targetIndex"},{"type":"MemberExpression","start":1934,"end":1952,"object":{"type":"Identifier","start":1934,"end":1945,"name":"targetArray"},"property":{"type":"Identifier","start":1946,"end":1952,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1960,"end":2057,"test":{"type":"MemberExpression","start":1964,"end":1983,"object":{"type":"Identifier","start":1964,"end":1976,"name":"currentArray"},"property":{"type":"Identifier","start":1977,"end":1983,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1985,"end":2057,"body":[{"type":"ExpressionStatement","start":1996,"end":2050,"expression":{"type":"CallExpression","start":1996,"end":2049,"callee":{"type":"MemberExpression","start":1996,"end":2014,"object":{"type":"Identifier","start":1996,"end":2007,"name":"targetArray"},"property":{"type":"Identifier","start":2008,"end":2014,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2015,"end":2017,"name":"to"},{"type":"Literal","start":2019,"end":2020,"value":0,"raw":"0"},{"type":"MemberExpression","start":2022,"end":2048,"object":{"type":"Identifier","start":2022,"end":2034,"name":"currentArray"},"property":{"type":"Identifier","start":2035,"end":2047,"name":"currentIndex"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"FunctionDeclaration","start":2114,"end":2192,"id":{"type":"Identifier","start":2123,"end":2128,"name":"clamp"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2129,"end":2134,"name":"value"},{"type":"Identifier","start":2136,"end":2139,"name":"max"}],"body":{"type":"BlockStatement","start":2141,"end":2192,"body":[{"type":"ReturnStatement","start":2148,"end":2189,"argument":{"type":"CallExpression","start":2155,"end":2188,"callee":{"type":"MemberExpression","start":2155,"end":2163,"object":{"type":"Identifier","start":2155,"end":2159,"name":"Math"},"property":{"type":"Identifier","start":2160,"end":2163,"name":"max"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2164,"end":2165,"value":0,"raw":"0"},{"type":"CallExpression","start":2167,"end":2187,"callee":{"type":"MemberExpression","start":2167,"end":2175,"object":{"type":"Identifier","start":2167,"end":2171,"name":"Math"},"property":{"type":"Identifier","start":2172,"end":2175,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2176,"end":2179,"name":"max"},{"type":"Identifier","start":2181,"end":2186,"name":"value"}],"optional":false}],"optional":false}}]}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","start":2194,"end":7980}]},"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"drag-utils.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/drag-utils.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,8,0]],[],[],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[31,0,14,31],[32,0,14,41],[37,0,14,51],[39,0,14,53],[48,0,14,70],[50,0,14,72],[57,0,14,87]],[[4,0,15,2],[10,0,15,8],[14,0,15,12],[17,0,15,15],[22,0,15,20],[23,0,15,21],[32,0,15,30],[34,0,15,32],[39,0,15,37],[40,0,15,38],[46,0,15,44],[49,0,15,47],[50,0,15,48],[51,0,15,49],[52,0,15,50]],[[4,0,16,2],[10,0,16,8],[12,0,16,10],[15,0,16,13],[20,0,16,18],[21,0,16,19],[28,0,16,26],[30,0,16,28],[35,0,16,33],[36,0,16,34],[42,0,16,40],[45,0,16,43],[46,0,16,44],[47,0,16,45],[48,0,16,46]],[[4,0,18,2],[8,0,18,6],[12,0,18,10],[17,0,18,15],[19,0,18,17],[21,0,18,19]],[[8,0,19,4],[15,0,19,11]],[[5,0,20,3]],[[4,0,22,2],[10,0,22,8],[16,0,22,14],[19,0,22,17],[24,0,22,22],[25,0,22,23],[29,0,22,27],[30,0,22,28],[31,0,22,29]],[[4,0,23,2],[10,0,23,8],[15,0,23,13],[18,0,23,16],[20,0,23,18],[23,0,23,21],[27,0,23,25],[28,0,23,26],[29,0,23,27],[30,0,23,28],[31,0,23,29],[32,0,23,30],[33,0,23,31],[34,0,23,32],[35,0,23,33],[36,0,23,34],[37,0,23,35]],[[4,0,25,2],[9,0,25,7],[13,0,25,11],[14,0,25,12],[17,0,25,15],[21,0,25,19],[23,0,25,21],[24,0,25,22],[29,0,25,27],[31,0,25,29],[33,0,25,31],[34,0,25,32],[38,0,25,36],[43,0,25,41],[45,0,25,43]],[[8,0,26,4],[13,0,26,9],[14,0,26,10],[15,0,26,11],[16,0,26,12],[19,0,26,15],[24,0,26,20],[25,0,26,21],[26,0,26,22],[29,0,26,25],[34,0,26,30],[35,0,26,31],[36,0,26,32]],[[5,0,27,3]],[[4,0,29,2],[9,0,29,7],[10,0,29,8],[12,0,29,10],[13,0,29,11],[16,0,29,14],[22,0,29,20],[23,0,29,21]],[[0,0,30,0],[1,0,30,1]],[[0,0,33,0]],[],[],[],[],[],[[3,0,39,3]],[[0,0,40,0],[6,0,40,6],[16,0,40,16],[33,0,40,33],[34,0,40,43],[46,0,40,60],[48,0,41,43],[59,0,41,59],[61,0,42,43],[73,0,42,63],[75,0,43,43],[86,0,43,62]],[[4,0,44,2],[10,0,44,8],[14,0,44,12],[17,0,44,15],[22,0,44,20],[23,0,44,21],[35,0,44,33],[37,0,44,35],[49,0,44,47],[50,0,44,48],[56,0,44,54],[59,0,44,57],[60,0,44,58],[61,0,44,59],[62,0,44,60]],[[4,0,45,2],[10,0,45,8],[12,0,45,10],[15,0,45,13],[20,0,45,18],[21,0,45,19],[32,0,45,30],[34,0,45,32],[45,0,45,43],[46,0,45,44],[52,0,45,50],[53,0,45,51],[54,0,45,52]],[[4,0,47,2],[8,0,47,6],[20,0,47,18],[21,0,47,19],[27,0,47,25],[29,0,47,27]],[[8,0,48,4],[19,0,48,15],[20,0,48,16],[26,0,48,22],[27,0,48,23],[29,0,48,25],[31,0,48,27],[32,0,48,28],[34,0,48,30],[46,0,48,42],[47,0,48,43],[53,0,48,49],[54,0,48,50],[58,0,48,54],[60,0,48,56],[61,0,48,57],[62,0,48,58],[63,0,48,59],[64,0,48,60],[65,0,48,61],[66,0,48,62],[67,0,48,63]],[[5,0,49,3]],[[0,0,50,0],[1,0,50,1]],[[0,0,52,0]],[],[],[],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[16,0,61,16],[29,0,61,29],[30,0,61,39],[42,0,61,56],[44,0,62,39],[55,0,62,55],[57,0,63,39],[69,0,63,59],[71,0,64,39],[82,0,64,58]],[[4,0,65,2],[10,0,65,8],[12,0,65,10],[15,0,65,13],[20,0,65,18],[21,0,65,19],[32,0,65,30],[34,0,65,32],[45,0,65,43],[46,0,65,44],[52,0,65,50],[53,0,65,51],[54,0,65,52]],[[4,0,67,2],[8,0,67,6],[20,0,67,18],[21,0,67,19],[27,0,67,25],[29,0,67,27]],[[8,0,68,4],[19,0,68,15],[20,0,68,16],[26,0,68,22],[27,0,68,23],[29,0,68,25],[31,0,68,27],[32,0,68,28],[34,0,68,30],[46,0,68,42],[47,0,68,43],[59,0,68,55],[60,0,68,56],[61,0,68,57],[62,0,68,58]],[[5,0,69,3]],[[0,0,70,0],[1,0,70,1]],[[0,0,72,0],[50,0,72,50]],[[0,0,73,0],[9,0,73,9],[14,0,73,14],[15,0,73,15],[20,0,73,28],[22,0,73,30],[25,0,73,41]],[[4,0,74,2],[11,0,74,9],[15,0,74,13],[16,0,74,14],[19,0,74,17],[20,0,74,18],[21,0,74,19],[23,0,74,21],[27,0,74,25],[28,0,74,26],[31,0,74,29],[32,0,74,30],[35,0,74,33],[37,0,74,35],[42,0,74,40],[43,0,74,41],[44,0,74,42],[45,0,74,43]],[[0,0,75,0],[1,0,75,1]]],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\r\n  const from = clamp(fromIndex, array.length - 1);\r\n  const to = clamp(toIndex, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n}\r\n\r\n\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem<T = any>(currentArray: T[],\r\n                                           targetArray: T[],\r\n                                           currentIndex: number,\r\n                                           targetIndex: number): void {\r\n  const from = clamp(currentIndex, currentArray.length - 1);\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n  }\r\n}\r\n\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem<T = any>(currentArray: T[],\r\n                                       targetArray: T[],\r\n                                       currentIndex: number,\r\n                                       targetIndex: number): void {\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray[currentIndex]);\r\n  }\r\n}\r\n\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value: number, max: number): number {\r\n  return Math.max(0, Math.min(max, value));\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":192161,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":32,"imported":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"},"local":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"}},{"type":"ImportSpecifier","start":34,"end":38,"imported":{"type":"Identifier","start":34,"end":38,"name":"from"},"local":{"type":"Identifier","start":34,"end":38,"name":"from"}},{"type":"ImportSpecifier","start":40,"end":42,"imported":{"type":"Identifier","start":40,"end":42,"name":"of"},"local":{"type":"Identifier","start":40,"end":42,"name":"of"}}],"source":{"type":"Literal","start":50,"end":56,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":59,"end":148,"specifiers":[{"type":"ImportSpecifier","start":68,"end":78,"imported":{"type":"Identifier","start":68,"end":78,"name":"catchError"},"local":{"type":"Identifier","start":68,"end":78,"name":"catchError"}},{"type":"ImportSpecifier","start":80,"end":86,"imported":{"type":"Identifier","start":80,"end":86,"name":"filter"},"local":{"type":"Identifier","start":80,"end":86,"name":"filter"}},{"type":"ImportSpecifier","start":88,"end":91,"imported":{"type":"Identifier","start":88,"end":91,"name":"map"},"local":{"type":"Identifier","start":88,"end":91,"name":"map"}},{"type":"ImportSpecifier","start":93,"end":101,"imported":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"},"local":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"}},{"type":"ImportSpecifier","start":103,"end":112,"imported":{"type":"Identifier","start":103,"end":112,"name":"switchMap"},"local":{"type":"Identifier","start":103,"end":112,"name":"switchMap"}},{"type":"ImportSpecifier","start":114,"end":118,"imported":{"type":"Identifier","start":114,"end":118,"name":"take"},"local":{"type":"Identifier","start":114,"end":118,"name":"take"}},{"type":"ImportSpecifier","start":120,"end":123,"imported":{"type":"Identifier","start":120,"end":123,"name":"tap"},"local":{"type":"Identifier","start":120,"end":123,"name":"tap"}}],"source":{"type":"Literal","start":131,"end":147,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":150,"end":320,"specifiers":[{"type":"ImportSpecifier","start":159,"end":169,"imported":{"type":"Identifier","start":159,"end":169,"name":"collection"},"local":{"type":"Identifier","start":159,"end":169,"name":"collection"}},{"type":"ImportSpecifier","start":171,"end":188,"imported":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"},"local":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"}},{"type":"ImportSpecifier","start":190,"end":195,"imported":{"type":"Identifier","start":190,"end":195,"name":"endAt"},"local":{"type":"Identifier","start":190,"end":195,"name":"endAt"}},{"type":"ImportSpecifier","start":197,"end":206,"imported":{"type":"Identifier","start":197,"end":206,"name":"endBefore"},"local":{"type":"Identifier","start":197,"end":206,"name":"endBefore"}},{"type":"ImportSpecifier","start":208,"end":215,"imported":{"type":"Identifier","start":208,"end":215,"name":"getDocs"},"local":{"type":"Identifier","start":208,"end":215,"name":"getDocs"}},{"type":"ImportSpecifier","start":217,"end":222,"imported":{"type":"Identifier","start":217,"end":222,"name":"limit"},"local":{"type":"Identifier","start":217,"end":222,"name":"limit"}},{"type":"ImportSpecifier","start":224,"end":235,"imported":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"},"local":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"}},{"type":"ImportSpecifier","start":237,"end":244,"imported":{"type":"Identifier","start":237,"end":244,"name":"orderBy"},"local":{"type":"Identifier","start":237,"end":244,"name":"orderBy"}},{"type":"ImportSpecifier","start":246,"end":251,"imported":{"type":"Identifier","start":246,"end":251,"name":"query"},"local":{"type":"Identifier","start":246,"end":251,"name":"query"}},{"type":"ImportSpecifier","start":253,"end":263,"imported":{"type":"Identifier","start":253,"end":263,"name":"startAfter"},"local":{"type":"Identifier","start":253,"end":263,"name":"startAfter"}},{"type":"ImportSpecifier","start":265,"end":272,"imported":{"type":"Identifier","start":265,"end":272,"name":"startAt"},"local":{"type":"Identifier","start":265,"end":272,"name":"startAt"}},{"type":"ImportSpecifier","start":274,"end":279,"imported":{"type":"Identifier","start":274,"end":279,"name":"where"},"local":{"type":"Identifier","start":274,"end":279,"name":"where"}},{"type":"ImportSpecifier","start":281,"end":291,"imported":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"},"local":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"}}],"source":{"type":"Literal","start":299,"end":319,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":322,"end":472,"specifiers":[{"type":"ImportSpecifier","start":331,"end":345,"imported":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"},"local":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"}},{"type":"ImportSpecifier","start":347,"end":360,"imported":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"},"local":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"}},{"type":"ImportSpecifier","start":362,"end":377,"imported":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"},"local":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"}},{"type":"ImportSpecifier","start":379,"end":401,"imported":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"},"local":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"}},{"type":"ImportSpecifier","start":403,"end":418,"imported":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"},"local":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"}},{"type":"ImportSpecifier","start":420,"end":434,"imported":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"},"local":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"}},{"type":"ImportSpecifier","start":436,"end":452,"imported":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"},"local":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"}}],"source":{"type":"Literal","start":460,"end":471,"value":"./helpers","raw":"'./helpers'"}},{"type":"ImportDeclaration","start":474,"end":540,"specifiers":[{"type":"ImportSpecifier","start":483,"end":498,"imported":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"},"local":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"}},{"type":"ImportSpecifier","start":500,"end":517,"imported":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"},"local":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"}}],"source":{"type":"Literal","start":525,"end":539,"value":"./drag-utils","raw":"'./drag-utils'"}},{"type":"ExportNamedDeclaration","start":619,"end":648,"declaration":{"type":"VariableDeclaration","start":626,"end":648,"declarations":[{"type":"VariableDeclarator","start":630,"end":647,"id":{"type":"Identifier","start":630,"end":647,"name":"DocNotExistAction"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":650,"end":1328,"expression":{"type":"CallExpression","start":650,"end":1327,"callee":{"type":"FunctionExpression","start":651,"end":1279,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":661,"end":678,"name":"DocNotExistAction"}],"body":{"type":"BlockStatement","start":680,"end":1279,"body":[{"type":"ExpressionStatement","start":721,"end":793,"expression":{"type":"AssignmentExpression","start":721,"end":792,"operator":"=","left":{"type":"MemberExpression","start":721,"end":776,"object":{"type":"Identifier","start":721,"end":738,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":739,"end":775,"operator":"=","left":{"type":"MemberExpression","start":739,"end":771,"object":{"type":"Identifier","start":739,"end":756,"name":"DocNotExistAction"},"property":{"type":"Literal","start":757,"end":770,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""},"computed":true,"optional":false},"right":{"type":"Literal","start":774,"end":775,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":779,"end":792,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""}}},{"type":"ExpressionStatement","start":918,"end":1006,"expression":{"type":"AssignmentExpression","start":918,"end":1005,"operator":"=","left":{"type":"MemberExpression","start":918,"end":981,"object":{"type":"Identifier","start":918,"end":935,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":936,"end":980,"operator":"=","left":{"type":"MemberExpression","start":936,"end":976,"object":{"type":"Identifier","start":936,"end":953,"name":"DocNotExistAction"},"property":{"type":"Literal","start":954,"end":975,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""},"computed":true,"optional":false},"right":{"type":"Literal","start":979,"end":980,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":984,"end":1005,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""}}},{"type":"ExpressionStatement","start":1065,"end":1127,"expression":{"type":"AssignmentExpression","start":1065,"end":1126,"operator":"=","left":{"type":"MemberExpression","start":1065,"end":1115,"object":{"type":"Identifier","start":1065,"end":1082,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1083,"end":1114,"operator":"=","left":{"type":"MemberExpression","start":1083,"end":1110,"object":{"type":"Identifier","start":1083,"end":1100,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1101,"end":1109,"value":"FILTER","raw":"\"FILTER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1113,"end":1114,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1118,"end":1126,"value":"FILTER","raw":"\"FILTER\""}}},{"type":"ExpressionStatement","start":1188,"end":1276,"expression":{"type":"AssignmentExpression","start":1188,"end":1275,"operator":"=","left":{"type":"MemberExpression","start":1188,"end":1251,"object":{"type":"Identifier","start":1188,"end":1205,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1206,"end":1250,"operator":"=","left":{"type":"MemberExpression","start":1206,"end":1246,"object":{"type":"Identifier","start":1206,"end":1223,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1224,"end":1245,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1249,"end":1250,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1254,"end":1275,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""}}}]}},"arguments":[{"type":"LogicalExpression","start":1281,"end":1326,"left":{"type":"Identifier","start":1281,"end":1298,"name":"DocNotExistAction"},"operator":"||","right":{"type":"AssignmentExpression","start":1303,"end":1325,"operator":"=","left":{"type":"Identifier","start":1303,"end":1320,"name":"DocNotExistAction"},"right":{"type":"ObjectExpression","start":1323,"end":1325,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":1368,"end":54822,"declaration":{"type":"ClassDeclaration","start":1375,"end":54822,"id":{"type":"Identifier","start":1381,"end":1398,"name":"FirestoreExtended"},"superClass":null,"body":{"type":"ClassBody","start":1399,"end":54822,"body":[{"type":"MethodDefinition","start":1682,"end":1795,"static":false,"computed":false,"key":{"type":"Identifier","start":1682,"end":1693,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1693,"end":1795,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1694,"end":1696,"name":"fs"},{"type":"AssignmentPattern","start":1698,"end":1719,"left":{"type":"Identifier","start":1698,"end":1710,"name":"defaultDocId"},"right":{"type":"Literal","start":1713,"end":1719,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":1721,"end":1795,"body":[{"type":"ExpressionStatement","start":1732,"end":1745,"expression":{"type":"AssignmentExpression","start":1732,"end":1744,"operator":"=","left":{"type":"MemberExpression","start":1732,"end":1739,"object":{"type":"ThisExpression","start":1732,"end":1736},"property":{"type":"Identifier","start":1737,"end":1739,"name":"fs"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1742,"end":1744,"name":"fs"}}},{"type":"ExpressionStatement","start":1755,"end":1788,"expression":{"type":"AssignmentExpression","start":1755,"end":1787,"operator":"=","left":{"type":"MemberExpression","start":1755,"end":1772,"object":{"type":"ThisExpression","start":1755,"end":1759},"property":{"type":"Identifier","start":1760,"end":1772,"name":"defaultDocId"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1775,"end":1787,"name":"defaultDocId"}}}]}}},{"type":"MethodDefinition","start":2921,"end":3163,"static":false,"computed":false,"key":{"type":"Identifier","start":2921,"end":2934,"name":"listenForDoc$"},"kind":"method","value":{"type":"FunctionExpression","start":2934,"end":3163,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2935,"end":2941,"name":"docRef"},{"type":"AssignmentPattern","start":2943,"end":2968,"left":{"type":"Identifier","start":2943,"end":2963,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":2966,"end":2968,"elements":[]}},{"type":"AssignmentPattern","start":2970,"end":3026,"left":{"type":"Identifier","start":2970,"end":2986,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":2989,"end":3026,"object":{"type":"Identifier","start":2989,"end":3006,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":3007,"end":3026,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":3028,"end":3163,"body":[{"type":"ReturnStatement","start":3039,"end":3156,"argument":{"type":"CallExpression","start":3046,"end":3155,"callee":{"type":"MemberExpression","start":3046,"end":3136,"object":{"type":"CallExpression","start":3046,"end":3131,"callee":{"type":"MemberExpression","start":3046,"end":3083,"object":{"type":"ThisExpression","start":3046,"end":3050},"property":{"type":"Identifier","start":3051,"end":3083,"name":"listenForDocDeepRecursiveHelper$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3084,"end":3090,"name":"docRef"},{"type":"Identifier","start":3092,"end":3112,"name":"subCollectionQueries"},{"type":"Identifier","start":3114,"end":3130,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":3132,"end":3136,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3137,"end":3154,"callee":{"type":"Identifier","start":3137,"end":3140,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3141,"end":3153,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3141,"end":3145,"name":"data"}],"body":{"type":"Identifier","start":3149,"end":3153,"name":"data"}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4801,"end":5721,"static":false,"computed":false,"key":{"type":"Identifier","start":4801,"end":4821,"name":"listenForCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":4821,"end":5721,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4822,"end":4828,"name":"_query"},{"type":"AssignmentPattern","start":4830,"end":4855,"left":{"type":"Identifier","start":4830,"end":4850,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":4853,"end":4855,"elements":[]}}],"body":{"type":"BlockStatement","start":4857,"end":5721,"body":[{"type":"ReturnStatement","start":5032,"end":5714,"argument":{"type":"CallExpression","start":5039,"end":5713,"callee":{"type":"MemberExpression","start":5039,"end":5083,"object":{"type":"CallExpression","start":5039,"end":5078,"callee":{"type":"MemberExpression","start":5039,"end":5070,"object":{"type":"ThisExpression","start":5039,"end":5043},"property":{"type":"Identifier","start":5044,"end":5070,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5071,"end":5077,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":5079,"end":5083,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5084,"end":5712,"callee":{"type":"Identifier","start":5084,"end":5092,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":5093,"end":5711,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5094,"end":5099,"name":"items"}],"body":{"type":"BlockStatement","start":5104,"end":5711,"body":[{"type":"IfStatement","start":5119,"end":5208,"test":{"type":"LogicalExpression","start":5123,"end":5158,"left":{"type":"BinaryExpression","start":5123,"end":5136,"left":{"type":"Identifier","start":5123,"end":5128,"name":"items"},"operator":"==","right":{"type":"Literal","start":5132,"end":5136,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":5140,"end":5158,"left":{"type":"MemberExpression","start":5140,"end":5152,"object":{"type":"Identifier","start":5140,"end":5145,"name":"items"},"property":{"type":"Identifier","start":5146,"end":5152,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5157,"end":5158,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":5160,"end":5208,"body":[{"type":"ReturnStatement","start":5179,"end":5193,"argument":{"type":"CallExpression","start":5186,"end":5192,"callee":{"type":"Identifier","start":5186,"end":5188,"name":"of"},"arguments":[{"type":"ArrayExpression","start":5189,"end":5191,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5222,"end":5311,"test":{"type":"BinaryExpression","start":5226,"end":5258,"left":{"type":"MemberExpression","start":5226,"end":5253,"object":{"type":"Identifier","start":5226,"end":5246,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":5247,"end":5253,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":5257,"end":5258,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5260,"end":5311,"body":[{"type":"ReturnStatement","start":5279,"end":5296,"argument":{"type":"CallExpression","start":5286,"end":5295,"callee":{"type":"Identifier","start":5286,"end":5288,"name":"of"},"arguments":[{"type":"Identifier","start":5289,"end":5294,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":5325,"end":5356,"declarations":[{"type":"VariableDeclarator","start":5331,"end":5355,"id":{"type":"Identifier","start":5331,"end":5350,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":5353,"end":5355,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":5370,"end":5576,"expression":{"type":"CallExpression","start":5370,"end":5575,"callee":{"type":"MemberExpression","start":5370,"end":5383,"object":{"type":"Identifier","start":5370,"end":5375,"name":"items"},"property":{"type":"Identifier","start":5376,"end":5383,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5384,"end":5574,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5384,"end":5388,"name":"item"}],"body":{"type":"BlockStatement","start":5392,"end":5574,"body":[{"type":"VariableDeclaration","start":5411,"end":5496,"declarations":[{"type":"VariableDeclarator","start":5417,"end":5495,"id":{"type":"Identifier","start":5417,"end":5435,"name":"collectionListener"},"init":{"type":"CallExpression","start":5438,"end":5495,"callee":{"type":"MemberExpression","start":5438,"end":5467,"object":{"type":"ThisExpression","start":5438,"end":5442},"property":{"type":"Identifier","start":5443,"end":5467,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5468,"end":5472,"name":"item"},{"type":"Identifier","start":5474,"end":5494,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5514,"end":5559,"expression":{"type":"CallExpression","start":5514,"end":5558,"callee":{"type":"MemberExpression","start":5514,"end":5538,"object":{"type":"Identifier","start":5514,"end":5533,"name":"collectionListeners"},"property":{"type":"Identifier","start":5534,"end":5538,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5539,"end":5557,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":5658,"end":5700,"argument":{"type":"CallExpression","start":5665,"end":5699,"callee":{"type":"Identifier","start":5665,"end":5678,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":5679,"end":5698,"name":"collectionListeners"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5872,"end":7514,"static":false,"computed":false,"key":{"type":"Identifier","start":5872,"end":5903,"name":"listenForCollectionRecursively$"},"kind":"method","value":{"type":"FunctionExpression","start":5903,"end":7514,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5904,"end":5918,"name":"collectionPath"},{"type":"Identifier","start":5920,"end":5933,"name":"collectionKey"},{"type":"Identifier","start":5935,"end":5943,"name":"orderKey"}],"body":{"type":"BlockStatement","start":5945,"end":7514,"body":[{"type":"VariableDeclaration","start":6067,"end":6161,"declarations":[{"type":"VariableDeclarator","start":6073,"end":6160,"id":{"type":"Identifier","start":6073,"end":6088,"name":"collectionQuery"},"init":{"type":"NewExpression","start":6091,"end":6160,"callee":{"type":"Identifier","start":6095,"end":6109,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":6110,"end":6159,"callee":{"type":"Identifier","start":6110,"end":6124,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":6125,"end":6139,"name":"collectionPath"},{"type":"MemberExpression","start":6141,"end":6158,"object":{"type":"MemberExpression","start":6141,"end":6148,"object":{"type":"ThisExpression","start":6141,"end":6145},"property":{"type":"Identifier","start":6146,"end":6148,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6149,"end":6158,"name":"firestore"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":6171,"end":6253,"test":{"type":"BinaryExpression","start":6175,"end":6191,"left":{"type":"Identifier","start":6175,"end":6183,"name":"orderKey"},"operator":"!=","right":{"type":"Literal","start":6187,"end":6191,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6193,"end":6253,"body":[{"type":"ExpressionStatement","start":6208,"end":6242,"expression":{"type":"CallExpression","start":6208,"end":6241,"callee":{"type":"MemberExpression","start":6208,"end":6231,"object":{"type":"Identifier","start":6208,"end":6223,"name":"collectionQuery"},"property":{"type":"Identifier","start":6224,"end":6231,"name":"orderBy"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6232,"end":6240,"name":"orderKey"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6263,"end":7507,"argument":{"type":"CallExpression","start":6270,"end":7506,"callee":{"type":"MemberExpression","start":6270,"end":6329,"object":{"type":"CallExpression","start":6270,"end":6324,"callee":{"type":"MemberExpression","start":6270,"end":6301,"object":{"type":"ThisExpression","start":6270,"end":6274},"property":{"type":"Identifier","start":6275,"end":6301,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6302,"end":6323,"object":{"type":"Identifier","start":6302,"end":6317,"name":"collectionQuery"},"property":{"type":"Identifier","start":6318,"end":6323,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":6325,"end":6329,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6330,"end":7505,"callee":{"type":"Identifier","start":6330,"end":6338,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":6339,"end":7504,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6340,"end":6345,"name":"items"}],"body":{"type":"BlockStatement","start":6350,"end":7504,"body":[{"type":"IfStatement","start":6365,"end":6436,"test":{"type":"BinaryExpression","start":6369,"end":6386,"left":{"type":"MemberExpression","start":6369,"end":6381,"object":{"type":"Identifier","start":6369,"end":6374,"name":"items"},"property":{"type":"Identifier","start":6375,"end":6381,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6385,"end":6386,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6388,"end":6436,"body":[{"type":"ReturnStatement","start":6407,"end":6421,"argument":{"type":"CallExpression","start":6414,"end":6420,"callee":{"type":"Identifier","start":6414,"end":6416,"name":"of"},"arguments":[{"type":"ArrayExpression","start":6417,"end":6419,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":6582,"end":6606,"declarations":[{"type":"VariableDeclarator","start":6588,"end":6605,"id":{"type":"Identifier","start":6588,"end":6600,"name":"nextLevelObs"},"init":{"type":"ArrayExpression","start":6603,"end":6605,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":6620,"end":7409,"await":false,"left":{"type":"VariableDeclaration","start":6625,"end":6635,"declarations":[{"type":"VariableDeclarator","start":6631,"end":6635,"id":{"type":"Identifier","start":6631,"end":6635,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":6639,"end":6644,"name":"items"},"body":{"type":"BlockStatement","start":6646,"end":7409,"body":[{"type":"VariableDeclaration","start":6787,"end":6868,"declarations":[{"type":"VariableDeclarator","start":6793,"end":6867,"id":{"type":"Identifier","start":6793,"end":6806,"name":"nextLevelPath"},"init":{"type":"CallExpression","start":6809,"end":6867,"callee":{"type":"MemberExpression","start":6809,"end":6847,"object":{"type":"MemberExpression","start":6809,"end":6840,"object":{"type":"MemberExpression","start":6809,"end":6835,"object":{"type":"MemberExpression","start":6809,"end":6831,"object":{"type":"Identifier","start":6809,"end":6813,"name":"item"},"property":{"type":"Identifier","start":6814,"end":6831,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6832,"end":6835,"name":"ref"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6836,"end":6840,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6841,"end":6847,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6848,"end":6851,"value":"/","raw":"'/'"},{"type":"Identifier","start":6853,"end":6866,"name":"collectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6906,"end":7341,"declarations":[{"type":"VariableDeclarator","start":6912,"end":7340,"id":{"type":"Identifier","start":6912,"end":6927,"name":"nextLevelItems$"},"init":{"type":"CallExpression","start":6930,"end":7340,"callee":{"type":"MemberExpression","start":6930,"end":7011,"object":{"type":"CallExpression","start":6930,"end":7006,"callee":{"type":"MemberExpression","start":6930,"end":6966,"object":{"type":"ThisExpression","start":6930,"end":6934},"property":{"type":"Identifier","start":6935,"end":6966,"name":"listenForCollectionRecursively$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6967,"end":6980,"name":"nextLevelPath"},{"type":"Identifier","start":6982,"end":6995,"name":"collectionKey"},{"type":"Identifier","start":6997,"end":7005,"name":"orderKey"}],"optional":false},"property":{"type":"Identifier","start":7007,"end":7011,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7012,"end":7339,"callee":{"type":"Identifier","start":7012,"end":7015,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":7016,"end":7338,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7017,"end":7031,"name":"nextLevelItems"}],"body":{"type":"BlockStatement","start":7036,"end":7338,"body":[{"type":"IfStatement","start":7059,"end":7288,"test":{"type":"BinaryExpression","start":7063,"end":7088,"left":{"type":"MemberExpression","start":7063,"end":7084,"object":{"type":"Identifier","start":7063,"end":7077,"name":"nextLevelItems"},"property":{"type":"Identifier","start":7078,"end":7084,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":7087,"end":7088,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7090,"end":7192,"body":[{"type":"ReturnStatement","start":7117,"end":7169,"argument":{"type":"ObjectExpression","start":7124,"end":7168,"properties":[{"type":"SpreadElement","start":7126,"end":7133,"argument":{"type":"Identifier","start":7129,"end":7133,"name":"item"}},{"type":"Property","start":7135,"end":7166,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":7136,"end":7149,"name":"collectionKey"},"value":{"type":"Identifier","start":7152,"end":7166,"name":"nextLevelItems"},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":7219,"end":7288,"body":[{"type":"ReturnStatement","start":7246,"end":7265,"argument":{"type":"ObjectExpression","start":7253,"end":7264,"properties":[{"type":"SpreadElement","start":7255,"end":7262,"argument":{"type":"Identifier","start":7258,"end":7262,"name":"item"}}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7359,"end":7394,"expression":{"type":"CallExpression","start":7359,"end":7393,"callee":{"type":"MemberExpression","start":7359,"end":7376,"object":{"type":"Identifier","start":7359,"end":7371,"name":"nextLevelObs"},"property":{"type":"Identifier","start":7372,"end":7376,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7377,"end":7392,"name":"nextLevelItems$"}],"optional":false}}]}},{"type":"ReturnStatement","start":7423,"end":7493,"argument":{"type":"CallExpression","start":7430,"end":7492,"callee":{"type":"MemberExpression","start":7430,"end":7462,"object":{"type":"CallExpression","start":7430,"end":7457,"callee":{"type":"Identifier","start":7430,"end":7443,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":7444,"end":7456,"name":"nextLevelObs"}],"optional":false},"property":{"type":"Identifier","start":7458,"end":7462,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7463,"end":7491,"callee":{"type":"Identifier","start":7463,"end":7466,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":7467,"end":7490,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":7467,"end":7470,"name":"val"}],"body":{"type":"CallExpression","start":7474,"end":7490,"callee":{"type":"MemberExpression","start":7474,"end":7485,"object":{"type":"Identifier","start":7474,"end":7481,"name":"console"},"property":{"type":"Identifier","start":7482,"end":7485,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7486,"end":7489,"name":"val"}],"optional":false}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":8148,"end":14956,"static":false,"computed":false,"key":{"type":"Identifier","start":8148,"end":8152,"name":"add$"},"kind":"method","value":{"type":"FunctionExpression","start":8152,"end":14956,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8153,"end":8157,"name":"data"},{"type":"Identifier","start":8159,"end":8172,"name":"collectionRef"},{"type":"AssignmentPattern","start":8174,"end":8199,"left":{"type":"Identifier","start":8174,"end":8194,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":8197,"end":8199,"elements":[]}},{"type":"AssignmentPattern","start":8201,"end":8218,"left":{"type":"Identifier","start":8201,"end":8211,"name":"isAddDates"},"right":{"type":"Literal","start":8214,"end":8218,"value":true,"raw":"true"}},{"type":"Identifier","start":8220,"end":8225,"name":"docId"}],"body":{"type":"BlockStatement","start":8227,"end":14956,"body":[{"type":"IfStatement","start":8238,"end":8723,"test":{"type":"LogicalExpression","start":8242,"end":8305,"left":{"type":"LogicalExpression","start":8242,"end":8270,"left":{"type":"CallExpression","start":8242,"end":8261,"callee":{"type":"MemberExpression","start":8242,"end":8255,"object":{"type":"Identifier","start":8242,"end":8247,"name":"Array"},"property":{"type":"Identifier","start":8248,"end":8255,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8256,"end":8260,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":8265,"end":8270,"name":"docId"}},"operator":"&&","right":{"type":"BinaryExpression","start":8274,"end":8305,"left":{"type":"MemberExpression","start":8274,"end":8301,"object":{"type":"Identifier","start":8274,"end":8294,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":8295,"end":8301,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":8304,"end":8305,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":8307,"end":8723,"body":[{"type":"VariableDeclaration","start":8322,"end":8686,"declarations":[{"type":"VariableDeclarator","start":8328,"end":8685,"id":{"type":"Identifier","start":8328,"end":8333,"name":"error"},"init":{"type":"ObjectExpression","start":8336,"end":8685,"properties":[{"type":"Property","start":8355,"end":8406,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8355,"end":8359,"name":"name"},"value":{"type":"Literal","start":8361,"end":8406,"value":"firestoreExt/invalid-sub-collection-writers","raw":"'firestoreExt/invalid-sub-collection-writers'"},"kind":"init"},{"type":"Property","start":8425,"end":8440,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8425,"end":8429,"name":"code"},"value":{"type":"Literal","start":8431,"end":8440,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":8459,"end":8556,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8459,"end":8466,"name":"message"},"value":{"type":"Literal","start":8468,"end":8556,"value":"Cannot have both docId and subCollectionWriters at the same time when data is an array","raw":"'Cannot have both docId and subCollectionWriters at the same time when data is an array'"},"kind":"init"},{"type":"Property","start":8575,"end":8584,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8575,"end":8580,"name":"stack"},"value":{"type":"Literal","start":8582,"end":8584,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":8603,"end":8607,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8603,"end":8607,"name":"data"},"kind":"init","value":{"type":"Identifier","start":8603,"end":8607,"name":"data"}},{"type":"Property","start":8626,"end":8646,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8626,"end":8646,"name":"subCollectionWriters"},"kind":"init","value":{"type":"Identifier","start":8626,"end":8646,"name":"subCollectionWriters"}},{"type":"Property","start":8665,"end":8670,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8665,"end":8670,"name":"docId"},"kind":"init","value":{"type":"Identifier","start":8665,"end":8670,"name":"docId"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":8700,"end":8712,"argument":{"type":"Identifier","start":8706,"end":8711,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":8733,"end":8748,"declarations":[{"type":"VariableDeclarator","start":8737,"end":8747,"id":{"type":"Identifier","start":8737,"end":8747,"name":"currentDoc"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8758,"end":8782,"declarations":[{"type":"VariableDeclarator","start":8762,"end":8781,"id":{"type":"Identifier","start":8762,"end":8776,"name":"subCollections"},"init":{"type":"ObjectExpression","start":8779,"end":8781,"properties":[]}}],"kind":"let"},{"type":"IfStatement","start":9112,"end":9415,"test":{"type":"LogicalExpression","start":9116,"end":9144,"left":{"type":"CallExpression","start":9116,"end":9135,"callee":{"type":"MemberExpression","start":9116,"end":9129,"object":{"type":"Identifier","start":9116,"end":9121,"name":"Array"},"property":{"type":"Identifier","start":9122,"end":9129,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9130,"end":9134,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":9139,"end":9144,"name":"docId"}},"consequent":{"type":"BlockStatement","start":9146,"end":9190,"body":[{"type":"ExpressionStatement","start":9161,"end":9179,"expression":{"type":"AssignmentExpression","start":9161,"end":9178,"operator":"=","left":{"type":"Identifier","start":9161,"end":9171,"name":"currentDoc"},"right":{"type":"Identifier","start":9174,"end":9178,"name":"data"}}}]},"alternate":{"type":"BlockStatement","start":9205,"end":9415,"body":[{"type":"VariableDeclaration","start":9220,"end":9308,"declarations":[{"type":"VariableDeclarator","start":9226,"end":9307,"id":{"type":"Identifier","start":9226,"end":9231,"name":"split"},"init":{"type":"CallExpression","start":9234,"end":9307,"callee":{"type":"MemberExpression","start":9234,"end":9279,"object":{"type":"ThisExpression","start":9234,"end":9238},"property":{"type":"Identifier","start":9239,"end":9279,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9280,"end":9284,"name":"data"},{"type":"Identifier","start":9286,"end":9306,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9322,"end":9352,"expression":{"type":"AssignmentExpression","start":9322,"end":9351,"operator":"=","left":{"type":"Identifier","start":9322,"end":9332,"name":"currentDoc"},"right":{"type":"MemberExpression","start":9335,"end":9351,"object":{"type":"Identifier","start":9335,"end":9340,"name":"split"},"property":{"type":"Identifier","start":9341,"end":9351,"name":"currentDoc"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":9366,"end":9404,"expression":{"type":"AssignmentExpression","start":9366,"end":9403,"operator":"=","left":{"type":"Identifier","start":9366,"end":9380,"name":"subCollections"},"right":{"type":"MemberExpression","start":9383,"end":9403,"object":{"type":"Identifier","start":9383,"end":9388,"name":"split"},"property":{"type":"Identifier","start":9389,"end":9403,"name":"subCollections"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":9425,"end":14949,"argument":{"type":"CallExpression","start":9432,"end":14948,"callee":{"type":"MemberExpression","start":9432,"end":14906,"object":{"type":"CallExpression","start":9432,"end":14901,"callee":{"type":"MemberExpression","start":9432,"end":9498,"object":{"type":"CallExpression","start":9432,"end":9493,"callee":{"type":"MemberExpression","start":9432,"end":9447,"object":{"type":"ThisExpression","start":9432,"end":9436},"property":{"type":"Identifier","start":9437,"end":9447,"name":"addSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9448,"end":9458,"name":"currentDoc"},{"type":"Identifier","start":9460,"end":9473,"name":"collectionRef"},{"type":"Identifier","start":9475,"end":9485,"name":"isAddDates"},{"type":"Identifier","start":9487,"end":9492,"name":"docId"}],"optional":false},"property":{"type":"Identifier","start":9494,"end":9498,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9547,"end":14900,"callee":{"type":"Identifier","start":9547,"end":9555,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":9556,"end":14899,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9557,"end":9568,"name":"currentData"}],"body":{"type":"BlockStatement","start":9573,"end":14899,"body":[{"type":"VariableDeclaration","start":9588,"end":9610,"declarations":[{"type":"VariableDeclarator","start":9594,"end":9609,"id":{"type":"Identifier","start":9594,"end":9604,"name":"subWriters"},"init":{"type":"ArrayExpression","start":9607,"end":9609,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":9624,"end":12955,"await":false,"left":{"type":"VariableDeclaration","start":9629,"end":9673,"declarations":[{"type":"VariableDeclarator","start":9635,"end":9673,"id":{"type":"ArrayPattern","start":9635,"end":9673,"elements":[{"type":"Identifier","start":9636,"end":9652,"name":"subCollectionKey"},{"type":"Identifier","start":9654,"end":9672,"name":"subCollectionValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":9677,"end":9707,"callee":{"type":"MemberExpression","start":9677,"end":9691,"object":{"type":"Identifier","start":9677,"end":9683,"name":"Object"},"property":{"type":"Identifier","start":9684,"end":9691,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9692,"end":9706,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":9709,"end":12955,"body":[{"type":"VariableDeclaration","start":9728,"end":9756,"declarations":[{"type":"VariableDeclarator","start":9732,"end":9755,"id":{"type":"Identifier","start":9732,"end":9755,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":9814,"end":9827,"declarations":[{"type":"VariableDeclarator","start":9818,"end":9826,"id":{"type":"Identifier","start":9818,"end":9826,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9845,"end":10139,"test":{"type":"Identifier","start":9849,"end":9869,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":9871,"end":10139,"body":[{"type":"ExpressionStatement","start":9894,"end":10008,"expression":{"type":"AssignmentExpression","start":9894,"end":10007,"operator":"=","left":{"type":"Identifier","start":9894,"end":9917,"name":"subSubCollectionWriters"},"right":{"type":"ChainExpression","start":9920,"end":10007,"expression":{"type":"MemberExpression","start":9920,"end":10007,"object":{"type":"CallExpression","start":9920,"end":9991,"callee":{"type":"MemberExpression","start":9920,"end":9945,"object":{"type":"Identifier","start":9920,"end":9940,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":9941,"end":9945,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9946,"end":9990,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":9946,"end":9953,"name":"subColl"}],"body":{"type":"BinaryExpression","start":9957,"end":9990,"left":{"type":"MemberExpression","start":9957,"end":9969,"object":{"type":"Identifier","start":9957,"end":9964,"name":"subColl"},"property":{"type":"Identifier","start":9965,"end":9969,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":9974,"end":9990,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":9993,"end":10007,"name":"subCollections"},"computed":false,"optional":true}}}},{"type":"ExpressionStatement","start":10030,"end":10120,"expression":{"type":"AssignmentExpression","start":10030,"end":10119,"operator":"=","left":{"type":"Identifier","start":10030,"end":10038,"name":"subDocId"},"right":{"type":"ChainExpression","start":10041,"end":10119,"expression":{"type":"MemberExpression","start":10041,"end":10119,"object":{"type":"CallExpression","start":10041,"end":10112,"callee":{"type":"MemberExpression","start":10041,"end":10066,"object":{"type":"Identifier","start":10041,"end":10061,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10062,"end":10066,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10067,"end":10111,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10067,"end":10074,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10078,"end":10111,"left":{"type":"MemberExpression","start":10078,"end":10090,"object":{"type":"Identifier","start":10078,"end":10085,"name":"subColl"},"property":{"type":"Identifier","start":10086,"end":10090,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10095,"end":10111,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":10114,"end":10119,"name":"docId"},"computed":false,"optional":true}}}}]},"alternate":null},{"type":"VariableDeclaration","start":10157,"end":10252,"declarations":[{"type":"VariableDeclarator","start":10163,"end":10251,"id":{"type":"Identifier","start":10163,"end":10179,"name":"subCollectionRef"},"init":{"type":"CallExpression","start":10182,"end":10251,"callee":{"type":"Identifier","start":10182,"end":10198,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":10199,"end":10232,"object":{"type":"MemberExpression","start":10199,"end":10228,"object":{"type":"Identifier","start":10199,"end":10210,"name":"currentData"},"property":{"type":"Identifier","start":10211,"end":10228,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10229,"end":10232,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":10234,"end":10250,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10677,"end":12940,"test":{"type":"CallExpression","start":10681,"end":10714,"callee":{"type":"MemberExpression","start":10681,"end":10694,"object":{"type":"Identifier","start":10681,"end":10686,"name":"Array"},"property":{"type":"Identifier","start":10687,"end":10694,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10695,"end":10713,"name":"subCollectionValue"}],"optional":false},"consequent":{"type":"BlockStatement","start":10716,"end":12255,"body":[{"type":"IfStatement","start":10739,"end":12236,"test":{"type":"BinaryExpression","start":10743,"end":10765,"left":{"type":"Identifier","start":10743,"end":10751,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":10756,"end":10765,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":10767,"end":11397,"body":[{"type":"VariableDeclaration","start":10970,"end":11321,"declarations":[{"type":"VariableDeclarator","start":10976,"end":11320,"id":{"type":"Identifier","start":10976,"end":10985,"name":"subWriter"},"init":{"type":"CallExpression","start":10988,"end":11320,"callee":{"type":"MemberExpression","start":10988,"end":11087,"object":{"type":"CallExpression","start":10988,"end":11082,"callee":{"type":"MemberExpression","start":10988,"end":10997,"object":{"type":"ThisExpression","start":10988,"end":10992},"property":{"type":"Identifier","start":10993,"end":10997,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10998,"end":11016,"name":"subCollectionValue"},{"type":"Identifier","start":11018,"end":11034,"name":"subCollectionRef"},{"type":"Identifier","start":11036,"end":11059,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11061,"end":11071,"name":"isAddDates"},{"type":"Identifier","start":11073,"end":11081,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":11083,"end":11087,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11088,"end":11319,"callee":{"type":"Identifier","start":11088,"end":11091,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11092,"end":11318,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11092,"end":11096,"name":"item"}],"body":{"type":"BlockStatement","start":11100,"end":11318,"body":[{"type":"ReturnStatement","start":11185,"end":11231,"argument":{"type":"ObjectExpression","start":11192,"end":11230,"properties":[{"type":"Property","start":11194,"end":11215,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11194,"end":11197,"name":"key"},"value":{"type":"Identifier","start":11199,"end":11215,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11217,"end":11228,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11217,"end":11222,"name":"value"},"value":{"type":"Identifier","start":11224,"end":11228,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11347,"end":11374,"expression":{"type":"CallExpression","start":11347,"end":11373,"callee":{"type":"MemberExpression","start":11347,"end":11362,"object":{"type":"Identifier","start":11347,"end":11357,"name":"subWriters"},"property":{"type":"Identifier","start":11358,"end":11362,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11363,"end":11372,"name":"subWriter"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11424,"end":12236,"body":[{"type":"ExpressionStatement","start":11521,"end":12213,"expression":{"type":"CallExpression","start":11521,"end":12212,"callee":{"type":"MemberExpression","start":11521,"end":11547,"object":{"type":"Identifier","start":11521,"end":11539,"name":"subCollectionValue"},"property":{"type":"Identifier","start":11540,"end":11547,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11548,"end":12211,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11549,"end":11559,"name":"arrayValue"}],"body":{"type":"BlockStatement","start":11564,"end":12211,"body":[{"type":"VariableDeclaration","start":11711,"end":12127,"declarations":[{"type":"VariableDeclarator","start":11717,"end":12126,"id":{"type":"Identifier","start":11717,"end":11726,"name":"subWriter"},"init":{"type":"CallExpression","start":11729,"end":12126,"callee":{"type":"MemberExpression","start":11729,"end":11810,"object":{"type":"CallExpression","start":11729,"end":11805,"callee":{"type":"MemberExpression","start":11729,"end":11738,"object":{"type":"ThisExpression","start":11729,"end":11733},"property":{"type":"Identifier","start":11734,"end":11738,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11739,"end":11749,"name":"arrayValue"},{"type":"Identifier","start":11751,"end":11767,"name":"subCollectionRef"},{"type":"Identifier","start":11769,"end":11792,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11794,"end":11804,"name":"isAddDates"}],"optional":false},"property":{"type":"Identifier","start":11806,"end":11810,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11811,"end":12125,"callee":{"type":"Identifier","start":11811,"end":11814,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11815,"end":12124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11815,"end":11819,"name":"item"}],"body":{"type":"BlockStatement","start":11823,"end":12124,"body":[{"type":"ReturnStatement","start":12045,"end":12093,"argument":{"type":"ObjectExpression","start":12052,"end":12092,"properties":[{"type":"Property","start":12054,"end":12075,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12054,"end":12057,"name":"key"},"value":{"type":"Identifier","start":12059,"end":12075,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12077,"end":12090,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12077,"end":12082,"name":"value"},"value":{"type":"ArrayExpression","start":12084,"end":12090,"elements":[{"type":"Identifier","start":12085,"end":12089,"name":"item"}]},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12157,"end":12184,"expression":{"type":"CallExpression","start":12157,"end":12183,"callee":{"type":"MemberExpression","start":12157,"end":12172,"object":{"type":"Identifier","start":12157,"end":12167,"name":"subWriters"},"property":{"type":"Identifier","start":12168,"end":12172,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12173,"end":12182,"name":"subWriter"}],"optional":false}}]}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":12278,"end":12940,"body":[{"type":"ExpressionStatement","start":12338,"end":12403,"expression":{"type":"AssignmentExpression","start":12338,"end":12402,"operator":"=","left":{"type":"Identifier","start":12338,"end":12346,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":12349,"end":12402,"test":{"type":"BinaryExpression","start":12349,"end":12371,"left":{"type":"Identifier","start":12349,"end":12357,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":12362,"end":12371,"name":"undefined"}},"consequent":{"type":"Identifier","start":12374,"end":12382,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":12385,"end":12402,"object":{"type":"ThisExpression","start":12385,"end":12389},"property":{"type":"Identifier","start":12390,"end":12402,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":12533,"end":12872,"declarations":[{"type":"VariableDeclarator","start":12539,"end":12871,"id":{"type":"Identifier","start":12539,"end":12548,"name":"subWriter"},"init":{"type":"CallExpression","start":12551,"end":12871,"callee":{"type":"MemberExpression","start":12551,"end":12650,"object":{"type":"CallExpression","start":12551,"end":12645,"callee":{"type":"MemberExpression","start":12551,"end":12560,"object":{"type":"ThisExpression","start":12551,"end":12555},"property":{"type":"Identifier","start":12556,"end":12560,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12561,"end":12579,"name":"subCollectionValue"},{"type":"Identifier","start":12581,"end":12597,"name":"subCollectionRef"},{"type":"Identifier","start":12599,"end":12622,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12624,"end":12634,"name":"isAddDates"},{"type":"Identifier","start":12636,"end":12644,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":12646,"end":12650,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12651,"end":12870,"callee":{"type":"Identifier","start":12651,"end":12654,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12655,"end":12869,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12655,"end":12659,"name":"item"}],"body":{"type":"BlockStatement","start":12663,"end":12869,"body":[{"type":"ReturnStatement","start":12740,"end":12786,"argument":{"type":"ObjectExpression","start":12747,"end":12785,"properties":[{"type":"Property","start":12749,"end":12770,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12749,"end":12752,"name":"key"},"value":{"type":"Identifier","start":12754,"end":12770,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12772,"end":12783,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12772,"end":12777,"name":"value"},"value":{"type":"Identifier","start":12779,"end":12783,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12894,"end":12921,"expression":{"type":"CallExpression","start":12894,"end":12920,"callee":{"type":"MemberExpression","start":12894,"end":12909,"object":{"type":"Identifier","start":12894,"end":12904,"name":"subWriters"},"property":{"type":"Identifier","start":12905,"end":12909,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12910,"end":12919,"name":"subWriter"}],"optional":false}}]}}]}},{"type":"IfStatement","start":12992,"end":14888,"test":{"type":"BinaryExpression","start":12996,"end":13017,"left":{"type":"MemberExpression","start":12996,"end":13013,"object":{"type":"Identifier","start":12996,"end":13006,"name":"subWriters"},"property":{"type":"Identifier","start":13007,"end":13013,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":13016,"end":13017,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":13019,"end":14812,"body":[{"type":"ReturnStatement","start":13202,"end":14797,"argument":{"type":"CallExpression","start":13209,"end":14796,"callee":{"type":"MemberExpression","start":13209,"end":13239,"object":{"type":"CallExpression","start":13209,"end":13234,"callee":{"type":"Identifier","start":13209,"end":13222,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":13223,"end":13233,"name":"subWriters"}],"optional":false},"property":{"type":"Identifier","start":13235,"end":13239,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13628,"end":14603,"callee":{"type":"Identifier","start":13628,"end":13631,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":13632,"end":14602,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13633,"end":13641,"name":"docDatas"}],"body":{"type":"BlockStatement","start":13646,"end":14602,"body":[{"type":"VariableDeclaration","start":13669,"end":13692,"declarations":[{"type":"VariableDeclarator","start":13675,"end":13691,"id":{"type":"Identifier","start":13675,"end":13686,"name":"groupedData"},"init":{"type":"ObjectExpression","start":13689,"end":13691,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13714,"end":14542,"expression":{"type":"CallExpression","start":13714,"end":14541,"callee":{"type":"MemberExpression","start":13714,"end":13730,"object":{"type":"Identifier","start":13714,"end":13722,"name":"docDatas"},"property":{"type":"Identifier","start":13723,"end":13730,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13731,"end":14540,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13732,"end":13735,"name":"doc"}],"body":{"type":"BlockStatement","start":13740,"end":14540,"body":[{"type":"VariableDeclaration","start":13767,"end":13787,"declarations":[{"type":"VariableDeclarator","start":13773,"end":13786,"id":{"type":"Identifier","start":13773,"end":13776,"name":"key"},"init":{"type":"MemberExpression","start":13779,"end":13786,"object":{"type":"Identifier","start":13779,"end":13782,"name":"doc"},"property":{"type":"Identifier","start":13783,"end":13786,"name":"key"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":13813,"end":13837,"declarations":[{"type":"VariableDeclarator","start":13819,"end":13836,"id":{"type":"Identifier","start":13819,"end":13824,"name":"value"},"init":{"type":"MemberExpression","start":13827,"end":13836,"object":{"type":"Identifier","start":13827,"end":13830,"name":"doc"},"property":{"type":"Identifier","start":13831,"end":13836,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":14030,"end":14517,"test":{"type":"LogicalExpression","start":14034,"end":14100,"left":{"type":"CallExpression","start":14034,"end":14065,"callee":{"type":"MemberExpression","start":14034,"end":14060,"object":{"type":"Identifier","start":14034,"end":14045,"name":"groupedData"},"property":{"type":"Identifier","start":14046,"end":14060,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14061,"end":14064,"name":"key"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":14069,"end":14100,"callee":{"type":"MemberExpression","start":14069,"end":14082,"object":{"type":"Identifier","start":14069,"end":14074,"name":"Array"},"property":{"type":"Identifier","start":14075,"end":14082,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14083,"end":14099,"object":{"type":"Identifier","start":14083,"end":14094,"name":"groupedData"},"property":{"type":"Identifier","start":14095,"end":14098,"name":"key"},"computed":true,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":14102,"end":14360,"body":[{"type":"ExpressionStatement","start":14301,"end":14333,"expression":{"type":"CallExpression","start":14301,"end":14332,"callee":{"type":"MemberExpression","start":14301,"end":14322,"object":{"type":"MemberExpression","start":14301,"end":14317,"object":{"type":"Identifier","start":14301,"end":14312,"name":"groupedData"},"property":{"type":"Identifier","start":14313,"end":14316,"name":"key"},"computed":true,"optional":false},"property":{"type":"Identifier","start":14318,"end":14322,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14323,"end":14331,"object":{"type":"Identifier","start":14323,"end":14328,"name":"value"},"property":{"type":"Literal","start":14329,"end":14330,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14391,"end":14517,"body":[{"type":"ExpressionStatement","start":14465,"end":14490,"expression":{"type":"AssignmentExpression","start":14465,"end":14489,"operator":"=","left":{"type":"MemberExpression","start":14465,"end":14481,"object":{"type":"Identifier","start":14465,"end":14476,"name":"groupedData"},"property":{"type":"Identifier","start":14477,"end":14480,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":14484,"end":14489,"name":"value"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":14564,"end":14583,"argument":{"type":"Identifier","start":14571,"end":14582,"name":"groupedData"}}]}}],"optional":false},{"type":"CallExpression","start":14689,"end":14795,"callee":{"type":"Identifier","start":14689,"end":14692,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":14693,"end":14794,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14694,"end":14705,"name":"groupedData"}],"body":{"type":"BlockStatement","start":14710,"end":14794,"body":[{"type":"ReturnStatement","start":14733,"end":14775,"argument":{"type":"ObjectExpression","start":14740,"end":14774,"properties":[{"type":"SpreadElement","start":14742,"end":14756,"argument":{"type":"Identifier","start":14745,"end":14756,"name":"currentData"}},{"type":"SpreadElement","start":14758,"end":14772,"argument":{"type":"Identifier","start":14761,"end":14772,"name":"groupedData"}}]}}]}}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14831,"end":14888,"body":[{"type":"ReturnStatement","start":14850,"end":14873,"argument":{"type":"CallExpression","start":14857,"end":14872,"callee":{"type":"Identifier","start":14857,"end":14859,"name":"of"},"arguments":[{"type":"Identifier","start":14860,"end":14871,"name":"currentData"}],"optional":false}}]}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":14902,"end":14906,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":14940,"end":14947,"callee":{"type":"Identifier","start":14940,"end":14944,"name":"take"},"arguments":[{"type":"Literal","start":14945,"end":14946,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":15691,"end":16144,"static":false,"computed":false,"key":{"type":"Identifier","start":15691,"end":15698,"name":"update$"},"kind":"method","value":{"type":"FunctionExpression","start":15698,"end":16144,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15699,"end":15703,"name":"data"},{"type":"Identifier","start":15705,"end":15711,"name":"docRef"},{"type":"AssignmentPattern","start":15713,"end":15738,"left":{"type":"Identifier","start":15713,"end":15733,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":15736,"end":15738,"elements":[]}},{"type":"AssignmentPattern","start":15740,"end":15764,"left":{"type":"Identifier","start":15740,"end":15757,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":15760,"end":15764,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":15766,"end":16144,"body":[{"type":"IfStatement","start":15777,"end":15987,"test":{"type":"LogicalExpression","start":15781,"end":15846,"left":{"type":"BinaryExpression","start":15781,"end":15809,"left":{"type":"Identifier","start":15781,"end":15801,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":15805,"end":15809,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":15813,"end":15846,"left":{"type":"MemberExpression","start":15813,"end":15840,"object":{"type":"Identifier","start":15813,"end":15833,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":15834,"end":15840,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":15845,"end":15846,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":15848,"end":15987,"body":[{"type":"ReturnStatement","start":15863,"end":15922,"argument":{"type":"CallExpression","start":15870,"end":15921,"callee":{"type":"MemberExpression","start":15870,"end":15888,"object":{"type":"ThisExpression","start":15870,"end":15874},"property":{"type":"Identifier","start":15875,"end":15888,"name":"updateSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15889,"end":15893,"name":"data"},{"type":"Identifier","start":15895,"end":15901,"name":"docRef"},{"type":"Identifier","start":15903,"end":15920,"name":"isAddModifiedDate"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":15997,"end":16095,"declarations":[{"type":"VariableDeclarator","start":16003,"end":16094,"id":{"type":"Identifier","start":16003,"end":16008,"name":"batch"},"init":{"type":"CallExpression","start":16011,"end":16094,"callee":{"type":"MemberExpression","start":16011,"end":16039,"object":{"type":"ThisExpression","start":16011,"end":16015},"property":{"type":"Identifier","start":16016,"end":16039,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16040,"end":16044,"name":"data"},{"type":"Identifier","start":16046,"end":16052,"name":"docRef"},{"type":"Identifier","start":16054,"end":16074,"name":"subCollectionWriters"},{"type":"Identifier","start":16076,"end":16093,"name":"isAddModifiedDate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":16105,"end":16137,"argument":{"type":"CallExpression","start":16112,"end":16136,"callee":{"type":"MemberExpression","start":16112,"end":16129,"object":{"type":"ThisExpression","start":16112,"end":16116},"property":{"type":"Identifier","start":16117,"end":16129,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16130,"end":16135,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16421,"end":16837,"static":false,"computed":false,"key":{"type":"Identifier","start":16421,"end":16436,"name":"updateMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":16436,"end":16837,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16437,"end":16444,"name":"docRefs"},{"type":"Identifier","start":16446,"end":16450,"name":"data"},{"type":"AssignmentPattern","start":16452,"end":16476,"left":{"type":"Identifier","start":16452,"end":16469,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16472,"end":16476,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16478,"end":16837,"body":[{"type":"VariableDeclaration","start":16556,"end":16600,"declarations":[{"type":"VariableDeclarator","start":16562,"end":16599,"id":{"type":"Identifier","start":16562,"end":16567,"name":"batch"},"init":{"type":"CallExpression","start":16570,"end":16599,"callee":{"type":"Identifier","start":16570,"end":16580,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":16581,"end":16598,"object":{"type":"MemberExpression","start":16581,"end":16588,"object":{"type":"ThisExpression","start":16581,"end":16585},"property":{"type":"Identifier","start":16586,"end":16588,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16589,"end":16598,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":16610,"end":16695,"test":{"type":"Identifier","start":16614,"end":16631,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":16633,"end":16695,"body":[{"type":"ExpressionStatement","start":16648,"end":16684,"expression":{"type":"AssignmentExpression","start":16648,"end":16683,"operator":"=","left":{"type":"Identifier","start":16648,"end":16652,"name":"data"},"right":{"type":"CallExpression","start":16655,"end":16683,"callee":{"type":"Identifier","start":16655,"end":16670,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":16671,"end":16675,"name":"data"},{"type":"Literal","start":16677,"end":16682,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":16705,"end":16788,"expression":{"type":"CallExpression","start":16705,"end":16787,"callee":{"type":"MemberExpression","start":16705,"end":16720,"object":{"type":"Identifier","start":16705,"end":16712,"name":"docRefs"},"property":{"type":"Identifier","start":16713,"end":16720,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16721,"end":16786,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16722,"end":16728,"name":"docRef"}],"body":{"type":"BlockStatement","start":16733,"end":16786,"body":[{"type":"ExpressionStatement","start":16748,"end":16775,"expression":{"type":"CallExpression","start":16748,"end":16774,"callee":{"type":"MemberExpression","start":16748,"end":16760,"object":{"type":"Identifier","start":16748,"end":16753,"name":"batch"},"property":{"type":"Identifier","start":16754,"end":16760,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16761,"end":16767,"name":"docRef"},{"type":"Identifier","start":16769,"end":16773,"name":"data"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":16798,"end":16830,"argument":{"type":"CallExpression","start":16805,"end":16829,"callee":{"type":"MemberExpression","start":16805,"end":16822,"object":{"type":"ThisExpression","start":16805,"end":16809},"property":{"type":"Identifier","start":16810,"end":16822,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16823,"end":16828,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":17436,"end":18313,"static":false,"computed":false,"key":{"type":"Identifier","start":17436,"end":17448,"name":"changeDocId$"},"kind":"method","value":{"type":"FunctionExpression","start":17448,"end":18313,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17449,"end":17455,"name":"docRef"},{"type":"Identifier","start":17457,"end":17462,"name":"newId"},{"type":"AssignmentPattern","start":17464,"end":17489,"left":{"type":"Identifier","start":17464,"end":17484,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":17487,"end":17489,"elements":[]}},{"type":"Identifier","start":17491,"end":17511,"name":"subCollectionWriters"}],"body":{"type":"BlockStatement","start":17513,"end":18313,"body":[{"type":"IfStatement","start":17524,"end":17628,"test":{"type":"BinaryExpression","start":17528,"end":17556,"left":{"type":"Identifier","start":17528,"end":17548,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":17552,"end":17556,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":17558,"end":17628,"body":[{"type":"ExpressionStatement","start":17573,"end":17617,"expression":{"type":"AssignmentExpression","start":17573,"end":17616,"operator":"=","left":{"type":"Identifier","start":17573,"end":17593,"name":"subCollectionWriters"},"right":{"type":"Identifier","start":17596,"end":17616,"name":"subCollectionQueries"}}}]},"alternate":null},{"type":"VariableDeclaration","start":17638,"end":17674,"declarations":[{"type":"VariableDeclarator","start":17644,"end":17673,"id":{"type":"Identifier","start":17644,"end":17657,"name":"collectionRef"},"init":{"type":"MemberExpression","start":17660,"end":17673,"object":{"type":"Identifier","start":17660,"end":17666,"name":"docRef"},"property":{"type":"Identifier","start":17667,"end":17673,"name":"parent"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":17684,"end":18306,"argument":{"type":"CallExpression","start":17691,"end":18305,"callee":{"type":"MemberExpression","start":17691,"end":17744,"object":{"type":"CallExpression","start":17691,"end":17739,"callee":{"type":"MemberExpression","start":17691,"end":17709,"object":{"type":"ThisExpression","start":17691,"end":17695},"property":{"type":"Identifier","start":17696,"end":17709,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17710,"end":17716,"name":"docRef"},{"type":"Identifier","start":17718,"end":17738,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17740,"end":17744,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17778,"end":17785,"callee":{"type":"Identifier","start":17778,"end":17782,"name":"take"},"arguments":[{"type":"Literal","start":17783,"end":17784,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":17787,"end":17860,"callee":{"type":"Identifier","start":17787,"end":17790,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":17791,"end":17859,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":17792,"end":17799,"name":"oldData"}],"body":{"type":"CallExpression","start":17804,"end":17859,"callee":{"type":"MemberExpression","start":17804,"end":17828,"object":{"type":"ThisExpression","start":17804,"end":17808},"property":{"type":"Identifier","start":17809,"end":17828,"name":"cleanExtrasFromData"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17829,"end":17836,"name":"oldData"},{"type":"Identifier","start":17838,"end":17858,"name":"subCollectionWriters"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":17862,"end":18177,"callee":{"type":"Identifier","start":17862,"end":17871,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":17872,"end":18176,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17873,"end":17880,"name":"oldData"}],"body":{"type":"BlockStatement","start":17885,"end":18176,"body":[{"type":"ReturnStatement","start":17900,"end":18165,"argument":{"type":"CallExpression","start":17907,"end":18164,"callee":{"type":"MemberExpression","start":17907,"end":17981,"object":{"type":"CallExpression","start":17907,"end":17976,"callee":{"type":"MemberExpression","start":17907,"end":17916,"object":{"type":"ThisExpression","start":17907,"end":17911},"property":{"type":"Identifier","start":17912,"end":17916,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17917,"end":17924,"name":"oldData"},{"type":"Identifier","start":17926,"end":17939,"name":"collectionRef"},{"type":"Identifier","start":17941,"end":17961,"name":"subCollectionWriters"},{"type":"Literal","start":17963,"end":17968,"value":false,"raw":"false"},{"type":"Identifier","start":17970,"end":17975,"name":"newId"}],"optional":false},"property":{"type":"Identifier","start":17977,"end":17981,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18009,"end":18163,"callee":{"type":"Identifier","start":18009,"end":18017,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18018,"end":18162,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18018,"end":18025,"name":"newData"}],"body":{"type":"BlockStatement","start":18029,"end":18162,"body":[{"type":"ReturnStatement","start":18048,"end":18147,"argument":{"type":"CallExpression","start":18055,"end":18146,"callee":{"type":"MemberExpression","start":18055,"end":18102,"object":{"type":"CallExpression","start":18055,"end":18097,"callee":{"type":"MemberExpression","start":18055,"end":18067,"object":{"type":"ThisExpression","start":18055,"end":18059},"property":{"type":"Identifier","start":18060,"end":18067,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18068,"end":18074,"name":"docRef"},{"type":"Identifier","start":18076,"end":18096,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":18098,"end":18102,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18103,"end":18121,"callee":{"type":"Identifier","start":18103,"end":18106,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":18107,"end":18120,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"Identifier","start":18113,"end":18120,"name":"newData"}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":18179,"end":18295,"callee":{"type":"Identifier","start":18179,"end":18189,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":18190,"end":18294,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18190,"end":18193,"name":"err"}],"body":{"type":"BlockStatement","start":18197,"end":18294,"body":[{"type":"ExpressionStatement","start":18212,"end":18259,"expression":{"type":"CallExpression","start":18212,"end":18258,"callee":{"type":"MemberExpression","start":18212,"end":18223,"object":{"type":"Identifier","start":18212,"end":18219,"name":"console"},"property":{"type":"Identifier","start":18220,"end":18223,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":18224,"end":18257,"left":{"type":"Literal","start":18224,"end":18251,"value":"Failed to Change Doc Id: ","raw":"'Failed to Change Doc Id: '"},"operator":"+","right":{"type":"Identifier","start":18254,"end":18257,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":18273,"end":18283,"argument":{"type":"Identifier","start":18279,"end":18282,"name":"err"}}]}}],"optional":false},{"type":"CallExpression","start":18297,"end":18304,"callee":{"type":"Identifier","start":18297,"end":18301,"name":"take"},"arguments":[{"type":"Literal","start":18302,"end":18303,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":18938,"end":19692,"static":false,"computed":false,"key":{"type":"Identifier","start":18938,"end":18954,"name":"moveItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":18954,"end":19692,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18955,"end":18960,"name":"items"},{"type":"Identifier","start":18962,"end":18971,"name":"fromIndex"},{"type":"Identifier","start":18973,"end":18980,"name":"toIndex"},{"type":"AssignmentPattern","start":18982,"end":18997,"left":{"type":"Identifier","start":18982,"end":18989,"name":"useCopy"},"right":{"type":"Literal","start":18992,"end":18997,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":18999,"end":19692,"body":[{"type":"IfStatement","start":19010,"end":19169,"test":{"type":"LogicalExpression","start":19014,"end":19096,"left":{"type":"LogicalExpression","start":19014,"end":19075,"left":{"type":"LogicalExpression","start":19014,"end":19050,"left":{"type":"BinaryExpression","start":19014,"end":19031,"left":{"type":"Identifier","start":19014,"end":19023,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":19027,"end":19031,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19035,"end":19050,"left":{"type":"Identifier","start":19035,"end":19042,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":19046,"end":19050,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":19054,"end":19075,"left":{"type":"Identifier","start":19054,"end":19063,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":19068,"end":19075,"name":"toIndex"}}},"operator":"||","right":{"type":"BinaryExpression","start":19079,"end":19096,"left":{"type":"MemberExpression","start":19079,"end":19091,"object":{"type":"Identifier","start":19079,"end":19084,"name":"items"},"property":{"type":"Identifier","start":19085,"end":19091,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":19095,"end":19096,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":19098,"end":19169,"body":[{"type":"ReturnStatement","start":19146,"end":19158,"argument":{"type":"CallExpression","start":19153,"end":19157,"callee":{"type":"Identifier","start":19153,"end":19155,"name":"of"},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":19179,"end":19544,"test":{"type":"BinaryExpression","start":19183,"end":19218,"left":{"type":"ChainExpression","start":19183,"end":19210,"expression":{"type":"MemberExpression","start":19183,"end":19210,"object":{"type":"MemberExpression","start":19183,"end":19191,"object":{"type":"Identifier","start":19183,"end":19188,"name":"items"},"property":{"type":"Literal","start":19189,"end":19190,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":19193,"end":19210,"name":"firestoreMetadata"},"computed":false,"optional":true}},"operator":"==","right":{"type":"Literal","start":19214,"end":19218,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":19220,"end":19544,"body":[{"type":"VariableDeclaration","start":19235,"end":19507,"declarations":[{"type":"VariableDeclarator","start":19241,"end":19506,"id":{"type":"Identifier","start":19241,"end":19246,"name":"error"},"init":{"type":"ObjectExpression","start":19249,"end":19506,"properties":[{"type":"Property","start":19268,"end":19327,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19268,"end":19272,"name":"name"},"value":{"type":"Literal","start":19274,"end":19327,"value":"firestoreExt/unable-to-change-index-of-non-document","raw":"'firestoreExt/unable-to-change-index-of-non-document'"},"kind":"init"},{"type":"Property","start":19346,"end":19363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19346,"end":19350,"name":"code"},"value":{"type":"Literal","start":19352,"end":19363,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":19382,"end":19490,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19382,"end":19389,"name":"message"},"value":{"type":"Literal","start":19391,"end":19490,"value":"The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata","raw":"'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata'"},"kind":"init"}]}}],"kind":"const"},{"type":"ThrowStatement","start":19521,"end":19533,"argument":{"type":"Identifier","start":19527,"end":19532,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":19554,"end":19643,"declarations":[{"type":"VariableDeclarator","start":19560,"end":19642,"id":{"type":"Identifier","start":19560,"end":19565,"name":"batch"},"init":{"type":"CallExpression","start":19568,"end":19642,"callee":{"type":"MemberExpression","start":19568,"end":19606,"object":{"type":"ThisExpression","start":19568,"end":19572},"property":{"type":"Identifier","start":19573,"end":19606,"name":"getBatchFromMoveItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19607,"end":19612,"name":"items"},{"type":"Identifier","start":19614,"end":19623,"name":"fromIndex"},{"type":"Identifier","start":19625,"end":19632,"name":"toIndex"},{"type":"Identifier","start":19634,"end":19641,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":19653,"end":19685,"argument":{"type":"CallExpression","start":19660,"end":19684,"callee":{"type":"MemberExpression","start":19660,"end":19677,"object":{"type":"ThisExpression","start":19660,"end":19664},"property":{"type":"Identifier","start":19665,"end":19677,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19678,"end":19683,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":20063,"end":21121,"static":false,"computed":false,"key":{"type":"Identifier","start":20063,"end":20096,"name":"getBatchFromMoveItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":20096,"end":21121,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20097,"end":20102,"name":"items"},{"type":"Identifier","start":20104,"end":20113,"name":"fromIndex"},{"type":"Identifier","start":20115,"end":20122,"name":"toIndex"},{"type":"AssignmentPattern","start":20124,"end":20139,"left":{"type":"Identifier","start":20124,"end":20131,"name":"useCopy"},"right":{"type":"Literal","start":20134,"end":20139,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":20141,"end":21121,"body":[{"type":"VariableDeclaration","start":20152,"end":20201,"declarations":[{"type":"VariableDeclarator","start":20158,"end":20200,"id":{"type":"Identifier","start":20158,"end":20169,"name":"lowestIndex"},"init":{"type":"CallExpression","start":20172,"end":20200,"callee":{"type":"MemberExpression","start":20172,"end":20180,"object":{"type":"Identifier","start":20172,"end":20176,"name":"Math"},"property":{"type":"Identifier","start":20177,"end":20180,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20181,"end":20190,"name":"fromIndex"},{"type":"Identifier","start":20192,"end":20199,"name":"toIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20211,"end":20255,"declarations":[{"type":"VariableDeclarator","start":20217,"end":20254,"id":{"type":"Identifier","start":20217,"end":20222,"name":"batch"},"init":{"type":"CallExpression","start":20225,"end":20254,"callee":{"type":"Identifier","start":20225,"end":20235,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":20236,"end":20253,"object":{"type":"MemberExpression","start":20236,"end":20243,"object":{"type":"ThisExpression","start":20236,"end":20240},"property":{"type":"Identifier","start":20241,"end":20243,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20244,"end":20253,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20265,"end":20404,"test":{"type":"LogicalExpression","start":20269,"end":20330,"left":{"type":"LogicalExpression","start":20269,"end":20305,"left":{"type":"BinaryExpression","start":20269,"end":20286,"left":{"type":"Identifier","start":20269,"end":20278,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":20282,"end":20286,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":20290,"end":20305,"left":{"type":"Identifier","start":20290,"end":20297,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":20301,"end":20305,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":20309,"end":20330,"left":{"type":"Identifier","start":20309,"end":20318,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":20323,"end":20330,"name":"toIndex"}}},"consequent":{"type":"BlockStatement","start":20332,"end":20404,"body":[{"type":"ReturnStatement","start":20380,"end":20393,"argument":{"type":"Identifier","start":20387,"end":20392,"name":"batch"}}]},"alternate":null},{"type":"VariableDeclaration","start":20414,"end":20428,"declarations":[{"type":"VariableDeclarator","start":20418,"end":20427,"id":{"type":"Identifier","start":20418,"end":20427,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":20438,"end":20573,"test":{"type":"Identifier","start":20442,"end":20449,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":20451,"end":20514,"body":[{"type":"ExpressionStatement","start":20466,"end":20503,"expression":{"type":"AssignmentExpression","start":20466,"end":20502,"operator":"=","left":{"type":"Identifier","start":20466,"end":20475,"name":"usedItems"},"right":{"type":"CallExpression","start":20478,"end":20502,"callee":{"type":"MemberExpression","start":20478,"end":20491,"object":{"type":"Identifier","start":20478,"end":20484,"name":"Object"},"property":{"type":"Identifier","start":20485,"end":20491,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":20492,"end":20494,"elements":[]},{"type":"Identifier","start":20496,"end":20501,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":20529,"end":20573,"body":[{"type":"ExpressionStatement","start":20544,"end":20562,"expression":{"type":"AssignmentExpression","start":20544,"end":20561,"operator":"=","left":{"type":"Identifier","start":20544,"end":20553,"name":"usedItems"},"right":{"type":"Identifier","start":20556,"end":20561,"name":"items"}}}]}},{"type":"ExpressionStatement","start":20583,"end":20630,"expression":{"type":"CallExpression","start":20583,"end":20629,"callee":{"type":"Identifier","start":20583,"end":20598,"name":"moveItemInArray"},"arguments":[{"type":"Identifier","start":20599,"end":20608,"name":"usedItems"},{"type":"Identifier","start":20610,"end":20619,"name":"fromIndex"},{"type":"Identifier","start":20621,"end":20628,"name":"toIndex"}],"optional":false}},{"type":"VariableDeclaration","start":20640,"end":20695,"declarations":[{"type":"VariableDeclarator","start":20646,"end":20694,"id":{"type":"Identifier","start":20646,"end":20663,"name":"listSliceToUpdate"},"init":{"type":"CallExpression","start":20666,"end":20694,"callee":{"type":"MemberExpression","start":20666,"end":20681,"object":{"type":"Identifier","start":20666,"end":20675,"name":"usedItems"},"property":{"type":"Identifier","start":20676,"end":20681,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20682,"end":20693,"name":"lowestIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20705,"end":20725,"declarations":[{"type":"VariableDeclarator","start":20709,"end":20724,"id":{"type":"Identifier","start":20709,"end":20710,"name":"i"},"init":{"type":"Identifier","start":20713,"end":20724,"name":"lowestIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":20735,"end":21091,"await":false,"left":{"type":"VariableDeclaration","start":20740,"end":20750,"declarations":[{"type":"VariableDeclarator","start":20746,"end":20750,"id":{"type":"Identifier","start":20746,"end":20750,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":20754,"end":20771,"name":"listSliceToUpdate"},"body":{"type":"BlockStatement","start":20773,"end":21091,"body":[{"type":"IfStatement","start":20788,"end":20927,"test":{"type":"UnaryExpression","start":20792,"end":20800,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":20793,"end":20800,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":20802,"end":20927,"body":[{"type":"ExpressionStatement","start":20897,"end":20912,"expression":{"type":"AssignmentExpression","start":20897,"end":20911,"operator":"=","left":{"type":"MemberExpression","start":20897,"end":20907,"object":{"type":"Identifier","start":20897,"end":20901,"name":"item"},"property":{"type":"Identifier","start":20902,"end":20907,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":20910,"end":20911,"name":"i"}}}]},"alternate":null},{"type":"VariableDeclaration","start":20941,"end":21016,"declarations":[{"type":"VariableDeclarator","start":20947,"end":21015,"id":{"type":"Identifier","start":20947,"end":20950,"name":"ref"},"init":{"type":"CallExpression","start":20953,"end":21015,"callee":{"type":"Identifier","start":20953,"end":20967,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":20968,"end":20995,"object":{"type":"MemberExpression","start":20968,"end":20990,"object":{"type":"Identifier","start":20968,"end":20972,"name":"item"},"property":{"type":"Identifier","start":20973,"end":20990,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20991,"end":20995,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":20997,"end":21014,"object":{"type":"MemberExpression","start":20997,"end":21004,"object":{"type":"ThisExpression","start":20997,"end":21001},"property":{"type":"Identifier","start":21002,"end":21004,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21005,"end":21014,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":21030,"end":21062,"expression":{"type":"CallExpression","start":21030,"end":21061,"callee":{"type":"MemberExpression","start":21030,"end":21042,"object":{"type":"Identifier","start":21030,"end":21035,"name":"batch"},"property":{"type":"Identifier","start":21036,"end":21042,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":21043,"end":21046,"name":"ref"},{"type":"ObjectExpression","start":21048,"end":21060,"properties":[{"type":"Property","start":21050,"end":21058,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":21050,"end":21055,"name":"index"},"value":{"type":"Identifier","start":21057,"end":21058,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":21076,"end":21080,"expression":{"type":"UpdateExpression","start":21076,"end":21079,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":21076,"end":21077,"name":"i"}}}]}},{"type":"ReturnStatement","start":21101,"end":21114,"argument":{"type":"Identifier","start":21108,"end":21113,"name":"batch"}}]}}},{"type":"MethodDefinition","start":21456,"end":22385,"static":false,"computed":false,"key":{"type":"Identifier","start":21456,"end":21481,"name":"deleteIndexedItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":21481,"end":22385,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21482,"end":21487,"name":"items"},{"type":"Identifier","start":21489,"end":21502,"name":"indexToDelete"},{"type":"AssignmentPattern","start":21504,"end":21529,"left":{"type":"Identifier","start":21504,"end":21524,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":21527,"end":21529,"elements":[]}},{"type":"AssignmentPattern","start":21531,"end":21546,"left":{"type":"Identifier","start":21531,"end":21538,"name":"useCopy"},"right":{"type":"Literal","start":21541,"end":21546,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":21548,"end":22385,"body":[{"type":"VariableDeclaration","start":21559,"end":21573,"declarations":[{"type":"VariableDeclarator","start":21563,"end":21572,"id":{"type":"Identifier","start":21563,"end":21572,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":21583,"end":21718,"test":{"type":"Identifier","start":21587,"end":21594,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":21596,"end":21659,"body":[{"type":"ExpressionStatement","start":21611,"end":21648,"expression":{"type":"AssignmentExpression","start":21611,"end":21647,"operator":"=","left":{"type":"Identifier","start":21611,"end":21620,"name":"usedItems"},"right":{"type":"CallExpression","start":21623,"end":21647,"callee":{"type":"MemberExpression","start":21623,"end":21636,"object":{"type":"Identifier","start":21623,"end":21629,"name":"Object"},"property":{"type":"Identifier","start":21630,"end":21636,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":21637,"end":21639,"elements":[]},{"type":"Identifier","start":21641,"end":21646,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":21674,"end":21718,"body":[{"type":"ExpressionStatement","start":21689,"end":21707,"expression":{"type":"AssignmentExpression","start":21689,"end":21706,"operator":"=","left":{"type":"Identifier","start":21689,"end":21698,"name":"usedItems"},"right":{"type":"Identifier","start":21701,"end":21706,"name":"items"}}}]}},{"type":"VariableDeclaration","start":21728,"end":21774,"declarations":[{"type":"VariableDeclarator","start":21734,"end":21773,"id":{"type":"Identifier","start":21734,"end":21746,"name":"itemToDelete"},"init":{"type":"MemberExpression","start":21749,"end":21773,"object":{"type":"Identifier","start":21749,"end":21758,"name":"usedItems"},"property":{"type":"Identifier","start":21759,"end":21772,"name":"indexToDelete"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":21868,"end":22378,"argument":{"type":"CallExpression","start":21875,"end":22377,"callee":{"type":"MemberExpression","start":21875,"end":21958,"object":{"type":"CallExpression","start":21875,"end":21953,"callee":{"type":"MemberExpression","start":21875,"end":21895,"object":{"type":"ThisExpression","start":21875,"end":21879},"property":{"type":"Identifier","start":21880,"end":21895,"name":"getDeleteBatch$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":21896,"end":21930,"object":{"type":"MemberExpression","start":21896,"end":21926,"object":{"type":"Identifier","start":21896,"end":21908,"name":"itemToDelete"},"property":{"type":"Identifier","start":21909,"end":21926,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21927,"end":21930,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":21932,"end":21952,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":21954,"end":21958,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":21959,"end":22328,"callee":{"type":"Identifier","start":21959,"end":21962,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":21963,"end":22327,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21964,"end":21969,"name":"batch"}],"body":{"type":"BlockStatement","start":21974,"end":22327,"body":[{"type":"ExpressionStatement","start":22092,"end":22127,"expression":{"type":"CallExpression","start":22092,"end":22126,"callee":{"type":"MemberExpression","start":22092,"end":22106,"object":{"type":"Identifier","start":22092,"end":22101,"name":"usedItems"},"property":{"type":"Identifier","start":22102,"end":22106,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22107,"end":22125,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22107,"end":22111,"name":"item"}],"body":{"type":"MemberExpression","start":22115,"end":22125,"object":{"type":"Identifier","start":22115,"end":22119,"name":"item"},"property":{"type":"Identifier","start":22120,"end":22125,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"ExpressionStatement","start":22179,"end":22214,"expression":{"type":"CallExpression","start":22179,"end":22213,"callee":{"type":"MemberExpression","start":22179,"end":22195,"object":{"type":"Identifier","start":22179,"end":22188,"name":"usedItems"},"property":{"type":"Identifier","start":22189,"end":22195,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22196,"end":22209,"name":"indexToDelete"},{"type":"Literal","start":22211,"end":22212,"value":1,"raw":"1"}],"optional":false}},{"type":"ExpressionStatement","start":22228,"end":22289,"expression":{"type":"CallExpression","start":22228,"end":22288,"callee":{"type":"MemberExpression","start":22228,"end":22270,"object":{"type":"ThisExpression","start":22228,"end":22232},"property":{"type":"Identifier","start":22233,"end":22270,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22271,"end":22280,"name":"usedItems"},{"type":"Identifier","start":22282,"end":22287,"name":"batch"}],"optional":false}},{"type":"ReturnStatement","start":22303,"end":22316,"argument":{"type":"Identifier","start":22310,"end":22315,"name":"batch"}}]}}],"optional":false},{"type":"CallExpression","start":22330,"end":22376,"callee":{"type":"Identifier","start":22330,"end":22339,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":22340,"end":22375,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22341,"end":22346,"name":"batch"}],"body":{"type":"CallExpression","start":22351,"end":22375,"callee":{"type":"MemberExpression","start":22351,"end":22368,"object":{"type":"ThisExpression","start":22351,"end":22355},"property":{"type":"Identifier","start":22356,"end":22368,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22369,"end":22374,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":22728,"end":24396,"static":false,"computed":false,"key":{"type":"Identifier","start":22728,"end":22754,"name":"deleteIndexedItemsInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":22754,"end":24396,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22755,"end":22760,"name":"items"},{"type":"Identifier","start":22762,"end":22777,"name":"indicesToDelete"},{"type":"AssignmentPattern","start":22779,"end":22804,"left":{"type":"Identifier","start":22779,"end":22799,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":22802,"end":22804,"elements":[]}},{"type":"AssignmentPattern","start":22806,"end":22821,"left":{"type":"Identifier","start":22806,"end":22813,"name":"useCopy"},"right":{"type":"Literal","start":22816,"end":22821,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":22823,"end":24396,"body":[{"type":"VariableDeclaration","start":22834,"end":22848,"declarations":[{"type":"VariableDeclarator","start":22838,"end":22847,"id":{"type":"Identifier","start":22838,"end":22847,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":22858,"end":22993,"test":{"type":"Identifier","start":22862,"end":22869,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":22871,"end":22934,"body":[{"type":"ExpressionStatement","start":22886,"end":22923,"expression":{"type":"AssignmentExpression","start":22886,"end":22922,"operator":"=","left":{"type":"Identifier","start":22886,"end":22895,"name":"usedItems"},"right":{"type":"CallExpression","start":22898,"end":22922,"callee":{"type":"MemberExpression","start":22898,"end":22911,"object":{"type":"Identifier","start":22898,"end":22904,"name":"Object"},"property":{"type":"Identifier","start":22905,"end":22911,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":22912,"end":22914,"elements":[]},{"type":"Identifier","start":22916,"end":22921,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":22949,"end":22993,"body":[{"type":"ExpressionStatement","start":22964,"end":22982,"expression":{"type":"AssignmentExpression","start":22964,"end":22981,"operator":"=","left":{"type":"Identifier","start":22964,"end":22973,"name":"usedItems"},"right":{"type":"Identifier","start":22976,"end":22981,"name":"items"}}}]}},{"type":"ExpressionStatement","start":23003,"end":23038,"expression":{"type":"CallExpression","start":23003,"end":23037,"callee":{"type":"MemberExpression","start":23003,"end":23017,"object":{"type":"Identifier","start":23003,"end":23012,"name":"usedItems"},"property":{"type":"Identifier","start":23013,"end":23017,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23018,"end":23036,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23018,"end":23022,"name":"item"}],"body":{"type":"MemberExpression","start":23026,"end":23036,"object":{"type":"Identifier","start":23026,"end":23030,"name":"item"},"property":{"type":"Identifier","start":23031,"end":23036,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"VariableDeclaration","start":23086,"end":23222,"declarations":[{"type":"VariableDeclarator","start":23092,"end":23221,"id":{"type":"Identifier","start":23092,"end":23105,"name":"itemsToDelete"},"init":{"type":"CallExpression","start":23108,"end":23221,"callee":{"type":"MemberExpression","start":23108,"end":23124,"object":{"type":"Identifier","start":23108,"end":23117,"name":"usedItems"},"property":{"type":"Identifier","start":23118,"end":23124,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23125,"end":23220,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23126,"end":23130,"name":"item"},{"type":"Identifier","start":23132,"end":23133,"name":"i"}],"body":{"type":"BlockStatement","start":23138,"end":23220,"body":[{"type":"ReturnStatement","start":23153,"end":23209,"argument":{"type":"BinaryExpression","start":23160,"end":23208,"left":{"type":"CallExpression","start":23160,"end":23201,"callee":{"type":"MemberExpression","start":23160,"end":23185,"object":{"type":"Identifier","start":23160,"end":23175,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23176,"end":23185,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23186,"end":23200,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23186,"end":23188,"name":"_i"}],"body":{"type":"BinaryExpression","start":23192,"end":23200,"left":{"type":"Identifier","start":23192,"end":23194,"name":"_i"},"operator":"===","right":{"type":"Identifier","start":23199,"end":23200,"name":"i"}}}],"optional":false},"operator":"!==","right":{"type":"UnaryExpression","start":23206,"end":23208,"operator":"-","prefix":true,"argument":{"type":"Literal","start":23207,"end":23208,"value":1,"raw":"1"}}}}]}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23350,"end":23373,"expression":{"type":"CallExpression","start":23350,"end":23372,"callee":{"type":"MemberExpression","start":23350,"end":23370,"object":{"type":"Identifier","start":23350,"end":23365,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23366,"end":23370,"name":"sort"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ForStatement","start":23383,"end":23503,"init":{"type":"VariableDeclaration","start":23388,"end":23422,"declarations":[{"type":"VariableDeclarator","start":23392,"end":23422,"id":{"type":"Identifier","start":23392,"end":23393,"name":"i"},"init":{"type":"BinaryExpression","start":23396,"end":23422,"left":{"type":"MemberExpression","start":23396,"end":23418,"object":{"type":"Identifier","start":23396,"end":23411,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23412,"end":23418,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":23421,"end":23422,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":23424,"end":23430,"left":{"type":"Identifier","start":23424,"end":23425,"name":"i"},"operator":">=","right":{"type":"Literal","start":23429,"end":23430,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":23432,"end":23435,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":23432,"end":23433,"name":"i"}},"body":{"type":"BlockStatement","start":23437,"end":23503,"body":[{"type":"ExpressionStatement","start":23452,"end":23492,"expression":{"type":"CallExpression","start":23452,"end":23491,"callee":{"type":"MemberExpression","start":23452,"end":23468,"object":{"type":"Identifier","start":23452,"end":23461,"name":"usedItems"},"property":{"type":"Identifier","start":23462,"end":23468,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23469,"end":23487,"object":{"type":"Identifier","start":23469,"end":23484,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23485,"end":23486,"name":"i"},"computed":true,"optional":false},{"type":"Literal","start":23489,"end":23490,"value":1,"raw":"1"}],"optional":false}}]}},{"type":"VariableDeclaration","start":23513,"end":23536,"declarations":[{"type":"VariableDeclarator","start":23519,"end":23535,"id":{"type":"Identifier","start":23519,"end":23530,"name":"docRefsObs$"},"init":{"type":"ArrayExpression","start":23533,"end":23535,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":23639,"end":23859,"expression":{"type":"CallExpression","start":23639,"end":23858,"callee":{"type":"MemberExpression","start":23639,"end":23660,"object":{"type":"Identifier","start":23639,"end":23652,"name":"itemsToDelete"},"property":{"type":"Identifier","start":23653,"end":23660,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23661,"end":23857,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23661,"end":23673,"name":"itemToDelete"}],"body":{"type":"BlockStatement","start":23677,"end":23857,"body":[{"type":"VariableDeclaration","start":23692,"end":23809,"declarations":[{"type":"VariableDeclarator","start":23698,"end":23808,"id":{"type":"Identifier","start":23698,"end":23702,"name":"obs$"},"init":{"type":"CallExpression","start":23705,"end":23808,"callee":{"type":"MemberExpression","start":23705,"end":23799,"object":{"type":"CallExpression","start":23705,"end":23794,"callee":{"type":"MemberExpression","start":23705,"end":23736,"object":{"type":"ThisExpression","start":23705,"end":23709},"property":{"type":"Identifier","start":23710,"end":23736,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23737,"end":23771,"object":{"type":"MemberExpression","start":23737,"end":23767,"object":{"type":"Identifier","start":23737,"end":23749,"name":"itemToDelete"},"property":{"type":"Identifier","start":23750,"end":23767,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":23768,"end":23771,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":23773,"end":23793,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":23795,"end":23799,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23800,"end":23807,"callee":{"type":"Identifier","start":23800,"end":23804,"name":"take"},"arguments":[{"type":"Literal","start":23805,"end":23806,"value":1,"raw":"1"}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23823,"end":23846,"expression":{"type":"CallExpression","start":23823,"end":23845,"callee":{"type":"MemberExpression","start":23823,"end":23839,"object":{"type":"Identifier","start":23823,"end":23834,"name":"docRefsObs$"},"property":{"type":"Identifier","start":23835,"end":23839,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23840,"end":23844,"name":"obs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":23869,"end":24389,"argument":{"type":"CallExpression","start":23876,"end":24388,"callee":{"type":"MemberExpression","start":23876,"end":23902,"object":{"type":"CallExpression","start":23876,"end":23897,"callee":{"type":"Identifier","start":23876,"end":23884,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":23885,"end":23896,"name":"docRefsObs$"}],"optional":false},"property":{"type":"Identifier","start":23898,"end":23902,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23903,"end":23910,"callee":{"type":"Identifier","start":23903,"end":23907,"name":"take"},"arguments":[{"type":"Literal","start":23908,"end":23909,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":23912,"end":24199,"callee":{"type":"Identifier","start":23912,"end":23915,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":23916,"end":24198,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23917,"end":23930,"name":"listOfDocRefs"}],"body":{"type":"BlockStatement","start":23935,"end":24198,"body":[{"type":"VariableDeclaration","start":24030,"end":24047,"declarations":[{"type":"VariableDeclarator","start":24034,"end":24046,"id":{"type":"Identifier","start":24034,"end":24041,"name":"docRefs"},"init":{"type":"ArrayExpression","start":24044,"end":24046,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":24061,"end":24158,"expression":{"type":"CallExpression","start":24061,"end":24157,"callee":{"type":"MemberExpression","start":24061,"end":24082,"object":{"type":"Identifier","start":24061,"end":24074,"name":"listOfDocRefs"},"property":{"type":"Identifier","start":24075,"end":24082,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24083,"end":24156,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24083,"end":24087,"name":"refs"}],"body":{"type":"BlockStatement","start":24091,"end":24156,"body":[{"type":"ExpressionStatement","start":24110,"end":24141,"expression":{"type":"AssignmentExpression","start":24110,"end":24140,"operator":"=","left":{"type":"Identifier","start":24110,"end":24117,"name":"docRefs"},"right":{"type":"CallExpression","start":24120,"end":24140,"callee":{"type":"MemberExpression","start":24120,"end":24134,"object":{"type":"Identifier","start":24120,"end":24127,"name":"docRefs"},"property":{"type":"Identifier","start":24128,"end":24134,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24135,"end":24139,"name":"refs"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":24172,"end":24187,"argument":{"type":"Identifier","start":24179,"end":24186,"name":"docRefs"}}]}}],"optional":false},{"type":"CallExpression","start":24201,"end":24261,"callee":{"type":"Identifier","start":24201,"end":24204,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24205,"end":24260,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24206,"end":24213,"name":"docRefs"}],"body":{"type":"CallExpression","start":24218,"end":24260,"callee":{"type":"MemberExpression","start":24218,"end":24251,"object":{"type":"ThisExpression","start":24218,"end":24222},"property":{"type":"Identifier","start":24223,"end":24251,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24252,"end":24259,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24263,"end":24339,"callee":{"type":"Identifier","start":24263,"end":24266,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24267,"end":24338,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24268,"end":24273,"name":"batch"}],"body":{"type":"CallExpression","start":24278,"end":24338,"callee":{"type":"MemberExpression","start":24278,"end":24320,"object":{"type":"ThisExpression","start":24278,"end":24282},"property":{"type":"Identifier","start":24283,"end":24320,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24321,"end":24330,"name":"usedItems"},{"type":"Identifier","start":24332,"end":24337,"name":"batch"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24341,"end":24387,"callee":{"type":"Identifier","start":24341,"end":24350,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":24351,"end":24386,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24352,"end":24357,"name":"batch"}],"body":{"type":"CallExpression","start":24362,"end":24386,"callee":{"type":"MemberExpression","start":24362,"end":24379,"object":{"type":"ThisExpression","start":24362,"end":24366},"property":{"type":"Identifier","start":24367,"end":24379,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24380,"end":24385,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":24736,"end":25215,"static":false,"computed":false,"key":{"type":"Identifier","start":24736,"end":24773,"name":"getBatchFromUpdateIndexFromListOfDocs"},"kind":"method","value":{"type":"FunctionExpression","start":24773,"end":25215,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24774,"end":24779,"name":"items"},{"type":"AssignmentPattern","start":24781,"end":24818,"left":{"type":"Identifier","start":24781,"end":24786,"name":"batch"},"right":{"type":"CallExpression","start":24789,"end":24818,"callee":{"type":"Identifier","start":24789,"end":24799,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":24800,"end":24817,"object":{"type":"MemberExpression","start":24800,"end":24807,"object":{"type":"ThisExpression","start":24800,"end":24804},"property":{"type":"Identifier","start":24805,"end":24807,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24808,"end":24817,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":24820,"end":25215,"body":[{"type":"ExpressionStatement","start":24831,"end":25185,"expression":{"type":"CallExpression","start":24831,"end":25184,"callee":{"type":"MemberExpression","start":24831,"end":24844,"object":{"type":"Identifier","start":24831,"end":24836,"name":"items"},"property":{"type":"Identifier","start":24837,"end":24844,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24845,"end":25183,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24846,"end":24850,"name":"item"},{"type":"Identifier","start":24852,"end":24857,"name":"index"}],"body":{"type":"BlockStatement","start":24862,"end":25183,"body":[{"type":"IfStatement","start":24877,"end":25172,"test":{"type":"BinaryExpression","start":24881,"end":24901,"left":{"type":"MemberExpression","start":24881,"end":24891,"object":{"type":"Identifier","start":24881,"end":24885,"name":"item"},"property":{"type":"Identifier","start":24886,"end":24891,"name":"index"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":24896,"end":24901,"name":"index"}},"consequent":{"type":"BlockStatement","start":24903,"end":25172,"body":[{"type":"ExpressionStatement","start":24922,"end":24941,"expression":{"type":"AssignmentExpression","start":24922,"end":24940,"operator":"=","left":{"type":"MemberExpression","start":24922,"end":24932,"object":{"type":"Identifier","start":24922,"end":24926,"name":"item"},"property":{"type":"Identifier","start":24927,"end":24932,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":24935,"end":24940,"name":"index"}}},{"type":"VariableDeclaration","start":25035,"end":25110,"declarations":[{"type":"VariableDeclarator","start":25041,"end":25109,"id":{"type":"Identifier","start":25041,"end":25044,"name":"ref"},"init":{"type":"CallExpression","start":25047,"end":25109,"callee":{"type":"Identifier","start":25047,"end":25061,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":25062,"end":25089,"object":{"type":"MemberExpression","start":25062,"end":25084,"object":{"type":"Identifier","start":25062,"end":25066,"name":"item"},"property":{"type":"Identifier","start":25067,"end":25084,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25085,"end":25089,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":25091,"end":25108,"object":{"type":"MemberExpression","start":25091,"end":25098,"object":{"type":"ThisExpression","start":25091,"end":25095},"property":{"type":"Identifier","start":25096,"end":25098,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25099,"end":25108,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":25128,"end":25157,"expression":{"type":"CallExpression","start":25128,"end":25156,"callee":{"type":"MemberExpression","start":25128,"end":25140,"object":{"type":"Identifier","start":25128,"end":25133,"name":"batch"},"property":{"type":"Identifier","start":25134,"end":25140,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25141,"end":25144,"name":"ref"},{"type":"ObjectExpression","start":25146,"end":25155,"properties":[{"type":"Property","start":25148,"end":25153,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":25148,"end":25153,"name":"index"},"kind":"init","value":{"type":"Identifier","start":25148,"end":25153,"name":"index"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":25195,"end":25208,"argument":{"type":"Identifier","start":25202,"end":25207,"name":"batch"}}]}}},{"type":"MethodDefinition","start":25221,"end":25681,"static":false,"computed":false,"key":{"type":"Identifier","start":25221,"end":25246,"name":"transferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25246,"end":25681,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25247,"end":25260,"name":"previousArray"},{"type":"Identifier","start":25262,"end":25274,"name":"currentArray"},{"type":"Identifier","start":25276,"end":25289,"name":"previousIndex"},{"type":"Identifier","start":25291,"end":25303,"name":"currentIndex"},{"type":"Identifier","start":25305,"end":25321,"name":"currentArrayName"},{"type":"Identifier","start":25323,"end":25354,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":25356,"end":25394,"left":{"type":"Identifier","start":25356,"end":25387,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":25390,"end":25394,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":25396,"end":25411,"left":{"type":"Identifier","start":25396,"end":25403,"name":"useCopy"},"right":{"type":"Literal","start":25406,"end":25411,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":25413,"end":25681,"body":[{"type":"VariableDeclaration","start":25424,"end":25632,"declarations":[{"type":"VariableDeclarator","start":25430,"end":25631,"id":{"type":"Identifier","start":25430,"end":25435,"name":"batch"},"init":{"type":"CallExpression","start":25438,"end":25631,"callee":{"type":"MemberExpression","start":25438,"end":25480,"object":{"type":"ThisExpression","start":25438,"end":25442},"property":{"type":"Identifier","start":25443,"end":25480,"name":"getBatchFromTransferItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25481,"end":25494,"name":"previousArray"},{"type":"Identifier","start":25496,"end":25508,"name":"currentArray"},{"type":"Identifier","start":25510,"end":25523,"name":"previousIndex"},{"type":"Identifier","start":25525,"end":25537,"name":"currentIndex"},{"type":"Identifier","start":25539,"end":25555,"name":"currentArrayName"},{"type":"Identifier","start":25557,"end":25588,"name":"additionalDataUpdateOnMovedItem"},{"type":"Identifier","start":25590,"end":25621,"name":"isUpdateModifiedDateOnMovedItem"},{"type":"Identifier","start":25623,"end":25630,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":25642,"end":25674,"argument":{"type":"CallExpression","start":25649,"end":25673,"callee":{"type":"MemberExpression","start":25649,"end":25666,"object":{"type":"ThisExpression","start":25649,"end":25653},"property":{"type":"Identifier","start":25654,"end":25666,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25667,"end":25672,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":25987,"end":26382,"static":false,"computed":false,"key":{"type":"Identifier","start":25987,"end":25994,"name":"delete$"},"kind":"method","value":{"type":"FunctionExpression","start":25994,"end":26382,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25995,"end":26001,"name":"docRef"},{"type":"AssignmentPattern","start":26003,"end":26028,"left":{"type":"Identifier","start":26003,"end":26023,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26026,"end":26028,"elements":[]}}],"body":{"type":"BlockStatement","start":26030,"end":26382,"body":[{"type":"IfStatement","start":26041,"end":26224,"test":{"type":"LogicalExpression","start":26045,"end":26110,"left":{"type":"BinaryExpression","start":26045,"end":26073,"left":{"type":"Identifier","start":26045,"end":26065,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26069,"end":26073,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26077,"end":26110,"left":{"type":"MemberExpression","start":26077,"end":26104,"object":{"type":"Identifier","start":26077,"end":26097,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26098,"end":26104,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26109,"end":26110,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26112,"end":26224,"body":[{"type":"ReturnStatement","start":26183,"end":26213,"argument":{"type":"CallExpression","start":26190,"end":26212,"callee":{"type":"MemberExpression","start":26190,"end":26204,"object":{"type":"MemberExpression","start":26190,"end":26197,"object":{"type":"ThisExpression","start":26190,"end":26194},"property":{"type":"Identifier","start":26195,"end":26197,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26198,"end":26204,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26205,"end":26211,"name":"docRef"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26234,"end":26375,"argument":{"type":"CallExpression","start":26241,"end":26374,"callee":{"type":"MemberExpression","start":26241,"end":26307,"object":{"type":"CallExpression","start":26241,"end":26302,"callee":{"type":"MemberExpression","start":26241,"end":26272,"object":{"type":"ThisExpression","start":26241,"end":26245},"property":{"type":"Identifier","start":26246,"end":26272,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26273,"end":26279,"name":"docRef"},{"type":"Identifier","start":26281,"end":26301,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26303,"end":26307,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26308,"end":26373,"callee":{"type":"Identifier","start":26308,"end":26317,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":26318,"end":26372,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26319,"end":26329,"name":"docRefList"}],"body":{"type":"CallExpression","start":26334,"end":26372,"callee":{"type":"MemberExpression","start":26334,"end":26360,"object":{"type":"ThisExpression","start":26334,"end":26338},"property":{"type":"Identifier","start":26339,"end":26360,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26361,"end":26371,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":26714,"end":27182,"static":false,"computed":false,"key":{"type":"Identifier","start":26714,"end":26729,"name":"getDeleteBatch$"},"kind":"method","value":{"type":"FunctionExpression","start":26729,"end":27182,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26730,"end":26736,"name":"docRef"},{"type":"AssignmentPattern","start":26738,"end":26763,"left":{"type":"Identifier","start":26738,"end":26758,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26761,"end":26763,"elements":[]}},{"type":"AssignmentPattern","start":26765,"end":26802,"left":{"type":"Identifier","start":26765,"end":26770,"name":"batch"},"right":{"type":"CallExpression","start":26773,"end":26802,"callee":{"type":"Identifier","start":26773,"end":26783,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":26784,"end":26801,"object":{"type":"MemberExpression","start":26784,"end":26791,"object":{"type":"ThisExpression","start":26784,"end":26788},"property":{"type":"Identifier","start":26789,"end":26791,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26792,"end":26801,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":26804,"end":27182,"body":[{"type":"IfStatement","start":26815,"end":27020,"test":{"type":"LogicalExpression","start":26819,"end":26884,"left":{"type":"BinaryExpression","start":26819,"end":26847,"left":{"type":"Identifier","start":26819,"end":26839,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26843,"end":26847,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26851,"end":26884,"left":{"type":"MemberExpression","start":26851,"end":26878,"object":{"type":"Identifier","start":26851,"end":26871,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26872,"end":26878,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26883,"end":26884,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26886,"end":27020,"body":[{"type":"ExpressionStatement","start":26957,"end":26978,"expression":{"type":"CallExpression","start":26957,"end":26977,"callee":{"type":"MemberExpression","start":26957,"end":26969,"object":{"type":"Identifier","start":26957,"end":26962,"name":"batch"},"property":{"type":"Identifier","start":26963,"end":26969,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26970,"end":26976,"name":"docRef"}],"optional":false}},{"type":"ReturnStatement","start":26992,"end":27009,"argument":{"type":"CallExpression","start":26999,"end":27008,"callee":{"type":"Identifier","start":26999,"end":27001,"name":"of"},"arguments":[{"type":"Identifier","start":27002,"end":27007,"name":"batch"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":27030,"end":27175,"argument":{"type":"CallExpression","start":27037,"end":27174,"callee":{"type":"MemberExpression","start":27037,"end":27103,"object":{"type":"CallExpression","start":27037,"end":27098,"callee":{"type":"MemberExpression","start":27037,"end":27068,"object":{"type":"ThisExpression","start":27037,"end":27041},"property":{"type":"Identifier","start":27042,"end":27068,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27069,"end":27075,"name":"docRef"},{"type":"Identifier","start":27077,"end":27097,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":27099,"end":27103,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":27104,"end":27164,"callee":{"type":"Identifier","start":27104,"end":27107,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":27108,"end":27163,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27109,"end":27116,"name":"docRefs"}],"body":{"type":"CallExpression","start":27121,"end":27163,"callee":{"type":"MemberExpression","start":27121,"end":27154,"object":{"type":"ThisExpression","start":27121,"end":27125},"property":{"type":"Identifier","start":27126,"end":27154,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27155,"end":27162,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":27166,"end":27173,"callee":{"type":"Identifier","start":27166,"end":27170,"name":"take"},"arguments":[{"type":"Literal","start":27171,"end":27172,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27188,"end":27370,"static":false,"computed":false,"key":{"type":"Identifier","start":27188,"end":27210,"name":"deleteMultipleByPaths$"},"kind":"method","value":{"type":"FunctionExpression","start":27210,"end":27370,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27211,"end":27219,"name":"docPaths"}],"body":{"type":"BlockStatement","start":27221,"end":27370,"body":[{"type":"VariableDeclaration","start":27232,"end":27310,"declarations":[{"type":"VariableDeclarator","start":27238,"end":27309,"id":{"type":"Identifier","start":27238,"end":27245,"name":"docRefs"},"init":{"type":"CallExpression","start":27248,"end":27309,"callee":{"type":"MemberExpression","start":27248,"end":27260,"object":{"type":"Identifier","start":27248,"end":27256,"name":"docPaths"},"property":{"type":"Identifier","start":27257,"end":27260,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27261,"end":27308,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27261,"end":27265,"name":"path"}],"body":{"type":"CallExpression","start":27269,"end":27308,"callee":{"type":"Identifier","start":27269,"end":27283,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":27284,"end":27288,"name":"path"},{"type":"MemberExpression","start":27290,"end":27307,"object":{"type":"MemberExpression","start":27290,"end":27297,"object":{"type":"ThisExpression","start":27290,"end":27294},"property":{"type":"Identifier","start":27295,"end":27297,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27298,"end":27307,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":27320,"end":27363,"argument":{"type":"CallExpression","start":27327,"end":27362,"callee":{"type":"MemberExpression","start":27327,"end":27353,"object":{"type":"ThisExpression","start":27327,"end":27331},"property":{"type":"Identifier","start":27332,"end":27353,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27354,"end":27361,"name":"docRefs"}],"optional":false}}]}}},{"type":"MethodDefinition","start":27646,"end":28525,"static":false,"computed":false,"key":{"type":"Identifier","start":27646,"end":27661,"name":"deleteMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":27661,"end":28525,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27662,"end":27669,"name":"docRefs"},{"type":"AssignmentPattern","start":27671,"end":27696,"left":{"type":"Identifier","start":27671,"end":27691,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27694,"end":27696,"elements":[]}}],"body":{"type":"BlockStatement","start":27698,"end":28525,"body":[{"type":"IfStatement","start":27709,"end":27849,"test":{"type":"LogicalExpression","start":27713,"end":27778,"left":{"type":"BinaryExpression","start":27713,"end":27741,"left":{"type":"Identifier","start":27713,"end":27733,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27737,"end":27741,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27745,"end":27778,"left":{"type":"MemberExpression","start":27745,"end":27772,"object":{"type":"Identifier","start":27745,"end":27765,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":27766,"end":27772,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":27777,"end":27778,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":27780,"end":27849,"body":[{"type":"ReturnStatement","start":27795,"end":27838,"argument":{"type":"CallExpression","start":27802,"end":27837,"callee":{"type":"MemberExpression","start":27802,"end":27828,"object":{"type":"ThisExpression","start":27802,"end":27806},"property":{"type":"Identifier","start":27807,"end":27828,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27829,"end":27836,"name":"docRefs"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":27859,"end":27883,"declarations":[{"type":"VariableDeclarator","start":27865,"end":27882,"id":{"type":"Identifier","start":27865,"end":27877,"name":"deepDocRefs$"},"init":{"type":"ArrayExpression","start":27880,"end":27882,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":27893,"end":28068,"expression":{"type":"CallExpression","start":27893,"end":28067,"callee":{"type":"MemberExpression","start":27893,"end":27908,"object":{"type":"Identifier","start":27893,"end":27900,"name":"docRefs"},"property":{"type":"Identifier","start":27901,"end":27908,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27909,"end":28066,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27909,"end":27915,"name":"docRef"}],"body":{"type":"BlockStatement","start":27919,"end":28066,"body":[{"type":"VariableDeclaration","start":27934,"end":28013,"declarations":[{"type":"VariableDeclarator","start":27940,"end":28012,"id":{"type":"Identifier","start":27940,"end":27948,"name":"docRefs$"},"init":{"type":"CallExpression","start":27951,"end":28012,"callee":{"type":"MemberExpression","start":27951,"end":27982,"object":{"type":"ThisExpression","start":27951,"end":27955},"property":{"type":"Identifier","start":27956,"end":27982,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27983,"end":27989,"name":"docRef"},{"type":"Identifier","start":27991,"end":28011,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":28027,"end":28055,"expression":{"type":"CallExpression","start":28027,"end":28054,"callee":{"type":"MemberExpression","start":28027,"end":28044,"object":{"type":"Identifier","start":28027,"end":28039,"name":"deepDocRefs$"},"property":{"type":"Identifier","start":28040,"end":28044,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28045,"end":28053,"name":"docRefs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":28078,"end":28518,"argument":{"type":"CallExpression","start":28085,"end":28517,"callee":{"type":"MemberExpression","start":28085,"end":28117,"object":{"type":"CallExpression","start":28085,"end":28112,"callee":{"type":"Identifier","start":28085,"end":28098,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":28099,"end":28111,"name":"deepDocRefs$"}],"optional":false},"property":{"type":"Identifier","start":28113,"end":28117,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28174,"end":28393,"callee":{"type":"Identifier","start":28174,"end":28177,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":28178,"end":28392,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28179,"end":28184,"name":"lists"}],"body":{"type":"BlockStatement","start":28189,"end":28392,"body":[{"type":"VariableDeclaration","start":28204,"end":28228,"declarations":[{"type":"VariableDeclarator","start":28208,"end":28227,"id":{"type":"Identifier","start":28208,"end":28222,"name":"mainDocRefList"},"init":{"type":"ArrayExpression","start":28225,"end":28227,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":28242,"end":28345,"expression":{"type":"CallExpression","start":28242,"end":28344,"callee":{"type":"MemberExpression","start":28242,"end":28255,"object":{"type":"Identifier","start":28242,"end":28247,"name":"lists"},"property":{"type":"Identifier","start":28248,"end":28255,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28256,"end":28343,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28256,"end":28260,"name":"list"}],"body":{"type":"BlockStatement","start":28264,"end":28343,"body":[{"type":"ExpressionStatement","start":28283,"end":28328,"expression":{"type":"AssignmentExpression","start":28283,"end":28327,"operator":"=","left":{"type":"Identifier","start":28283,"end":28297,"name":"mainDocRefList"},"right":{"type":"CallExpression","start":28300,"end":28327,"callee":{"type":"MemberExpression","start":28300,"end":28321,"object":{"type":"Identifier","start":28300,"end":28314,"name":"mainDocRefList"},"property":{"type":"Identifier","start":28315,"end":28321,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28322,"end":28326,"name":"list"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":28359,"end":28381,"argument":{"type":"Identifier","start":28366,"end":28380,"name":"mainDocRefList"}}]}}],"optional":false},{"type":"CallExpression","start":28451,"end":28516,"callee":{"type":"Identifier","start":28451,"end":28460,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28461,"end":28515,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28462,"end":28472,"name":"docRefList"}],"body":{"type":"CallExpression","start":28477,"end":28515,"callee":{"type":"MemberExpression","start":28477,"end":28503,"object":{"type":"ThisExpression","start":28477,"end":28481},"property":{"type":"Identifier","start":28482,"end":28503,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28504,"end":28514,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":28863,"end":29102,"static":false,"computed":false,"key":{"type":"Identifier","start":28863,"end":28880,"name":"deleteCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":28880,"end":29102,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28881,"end":28894,"name":"collectionRef"},{"type":"AssignmentPattern","start":28896,"end":28921,"left":{"type":"Identifier","start":28896,"end":28916,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":28919,"end":28921,"elements":[]}}],"body":{"type":"BlockStatement","start":28923,"end":29102,"body":[{"type":"ReturnStatement","start":28934,"end":29095,"argument":{"type":"CallExpression","start":28941,"end":29094,"callee":{"type":"MemberExpression","start":28941,"end":29085,"object":{"type":"CallExpression","start":28941,"end":29080,"callee":{"type":"MemberExpression","start":28941,"end":29027,"object":{"type":"CallExpression","start":28941,"end":29022,"callee":{"type":"MemberExpression","start":28941,"end":28985,"object":{"type":"ThisExpression","start":28941,"end":28945},"property":{"type":"Identifier","start":28946,"end":28985,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28986,"end":28999,"name":"collectionRef"},{"type":"Identifier","start":29001,"end":29021,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":29023,"end":29027,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29028,"end":29079,"callee":{"type":"Identifier","start":29028,"end":29037,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":29038,"end":29078,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":29038,"end":29045,"name":"docRefs"}],"body":{"type":"CallExpression","start":29049,"end":29078,"callee":{"type":"MemberExpression","start":29049,"end":29069,"object":{"type":"ThisExpression","start":29049,"end":29053},"property":{"type":"Identifier","start":29054,"end":29069,"name":"deleteMultiple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29070,"end":29077,"name":"docRefs"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":29081,"end":29085,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29086,"end":29093,"callee":{"type":"Identifier","start":29086,"end":29090,"name":"take"},"arguments":[{"type":"Literal","start":29091,"end":29092,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29526,"end":29715,"static":false,"computed":false,"key":{"type":"Identifier","start":29526,"end":29542,"name":"deleteDocByPath$"},"kind":"method","value":{"type":"FunctionExpression","start":29542,"end":29715,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29543,"end":29550,"name":"docPath"},{"type":"AssignmentPattern","start":29552,"end":29577,"left":{"type":"Identifier","start":29552,"end":29572,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29575,"end":29577,"elements":[]}}],"body":{"type":"BlockStatement","start":29579,"end":29715,"body":[{"type":"VariableDeclaration","start":29590,"end":29648,"declarations":[{"type":"VariableDeclarator","start":29596,"end":29647,"id":{"type":"Identifier","start":29596,"end":29602,"name":"docRef"},"init":{"type":"CallExpression","start":29605,"end":29647,"callee":{"type":"Identifier","start":29605,"end":29619,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":29620,"end":29627,"name":"docPath"},{"type":"MemberExpression","start":29629,"end":29646,"object":{"type":"MemberExpression","start":29629,"end":29636,"object":{"type":"ThisExpression","start":29629,"end":29633},"property":{"type":"Identifier","start":29634,"end":29636,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":29637,"end":29646,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":29658,"end":29708,"argument":{"type":"CallExpression","start":29665,"end":29707,"callee":{"type":"MemberExpression","start":29665,"end":29677,"object":{"type":"ThisExpression","start":29665,"end":29669},"property":{"type":"Identifier","start":29670,"end":29677,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29678,"end":29684,"name":"docRef"},{"type":"Identifier","start":29686,"end":29706,"name":"subCollectionQueries"}],"optional":false}}]}}},{"type":"MethodDefinition","start":30069,"end":30520,"static":false,"computed":false,"key":{"type":"Identifier","start":30069,"end":30080,"name":"deleteItem$"},"kind":"method","value":{"type":"FunctionExpression","start":30080,"end":30520,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30081,"end":30085,"name":"item"},{"type":"AssignmentPattern","start":30087,"end":30112,"left":{"type":"Identifier","start":30087,"end":30107,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":30110,"end":30112,"elements":[]}}],"body":{"type":"BlockStatement","start":30114,"end":30520,"body":[{"type":"VariableDeclaration","start":30125,"end":30204,"declarations":[{"type":"VariableDeclarator","start":30131,"end":30203,"id":{"type":"Identifier","start":30131,"end":30138,"name":"docRefs"},"init":{"type":"CallExpression","start":30141,"end":30203,"callee":{"type":"MemberExpression","start":30141,"end":30175,"object":{"type":"ThisExpression","start":30141,"end":30145},"property":{"type":"Identifier","start":30146,"end":30175,"name":"getDocumentReferencesFromItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30176,"end":30180,"name":"item"},{"type":"Identifier","start":30182,"end":30202,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":30214,"end":30513,"argument":{"type":"CallExpression","start":30221,"end":30512,"callee":{"type":"MemberExpression","start":30221,"end":30261,"object":{"type":"CallExpression","start":30221,"end":30256,"callee":{"type":"MemberExpression","start":30221,"end":30247,"object":{"type":"ThisExpression","start":30221,"end":30225},"property":{"type":"Identifier","start":30226,"end":30247,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30248,"end":30255,"name":"docRefs"}],"optional":false},"property":{"type":"Identifier","start":30257,"end":30261,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30504,"end":30511,"callee":{"type":"Identifier","start":30504,"end":30508,"name":"take"},"arguments":[{"type":"Literal","start":30509,"end":30510,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":30526,"end":31188,"static":false,"computed":false,"key":{"type":"Identifier","start":30526,"end":30545,"name":"cleanExtrasFromData"},"kind":"method","value":{"type":"FunctionExpression","start":30545,"end":31188,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30546,"end":30550,"name":"data"},{"type":"AssignmentPattern","start":30552,"end":30577,"left":{"type":"Identifier","start":30552,"end":30572,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":30575,"end":30577,"elements":[]}},{"type":"AssignmentPattern","start":30579,"end":30608,"left":{"type":"Identifier","start":30579,"end":30603,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":30606,"end":30608,"elements":[]}}],"body":{"type":"BlockStatement","start":30610,"end":31188,"body":[{"type":"IfStatement","start":30764,"end":31181,"test":{"type":"CallExpression","start":30768,"end":30787,"callee":{"type":"MemberExpression","start":30768,"end":30781,"object":{"type":"Identifier","start":30768,"end":30773,"name":"Array"},"property":{"type":"Identifier","start":30774,"end":30781,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30782,"end":30786,"name":"data"}],"optional":false},"consequent":{"type":"BlockStatement","start":30789,"end":31042,"body":[{"type":"VariableDeclaration","start":30804,"end":30826,"declarations":[{"type":"VariableDeclarator","start":30810,"end":30825,"id":{"type":"Identifier","start":30810,"end":30820,"name":"cleanDatas"},"init":{"type":"ArrayExpression","start":30823,"end":30825,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":30840,"end":30999,"expression":{"type":"CallExpression","start":30840,"end":30998,"callee":{"type":"MemberExpression","start":30840,"end":30852,"object":{"type":"Identifier","start":30840,"end":30844,"name":"data"},"property":{"type":"Identifier","start":30845,"end":30852,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":30853,"end":30997,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30853,"end":30854,"name":"d"}],"body":{"type":"BlockStatement","start":30858,"end":30997,"body":[{"type":"ExpressionStatement","start":30877,"end":30982,"expression":{"type":"CallExpression","start":30877,"end":30981,"callee":{"type":"MemberExpression","start":30877,"end":30892,"object":{"type":"Identifier","start":30877,"end":30887,"name":"cleanDatas"},"property":{"type":"Identifier","start":30888,"end":30892,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30893,"end":30980,"callee":{"type":"MemberExpression","start":30893,"end":30929,"object":{"type":"ThisExpression","start":30893,"end":30897},"property":{"type":"Identifier","start":30898,"end":30929,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30930,"end":30931,"name":"d"},{"type":"Identifier","start":30933,"end":30953,"name":"subCollectionWriters"},{"type":"Identifier","start":30955,"end":30979,"name":"additionalFieldsToRemove"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":31013,"end":31031,"argument":{"type":"Identifier","start":31020,"end":31030,"name":"cleanDatas"}}]},"alternate":{"type":"BlockStatement","start":31057,"end":31181,"body":[{"type":"ReturnStatement","start":31072,"end":31170,"argument":{"type":"CallExpression","start":31079,"end":31169,"callee":{"type":"MemberExpression","start":31079,"end":31115,"object":{"type":"ThisExpression","start":31079,"end":31083},"property":{"type":"Identifier","start":31084,"end":31115,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31116,"end":31120,"name":"data"},{"type":"Identifier","start":31122,"end":31142,"name":"subCollectionWriters"},{"type":"Identifier","start":31144,"end":31168,"name":"additionalFieldsToRemove"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":31721,"end":33387,"static":false,"computed":false,"key":{"type":"Identifier","start":31721,"end":31740,"name":"listenForDocSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":31740,"end":33387,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31741,"end":31747,"name":"docRef"},{"type":"AssignmentPattern","start":31749,"end":31805,"left":{"type":"Identifier","start":31749,"end":31765,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":31768,"end":31805,"object":{"type":"Identifier","start":31768,"end":31785,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":31786,"end":31805,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":31807,"end":33387,"body":[{"type":"ReturnStatement","start":31818,"end":33380,"argument":{"type":"CallExpression","start":31825,"end":33379,"callee":{"type":"MemberExpression","start":31825,"end":31849,"object":{"type":"CallExpression","start":31825,"end":31844,"callee":{"type":"MemberExpression","start":31825,"end":31836,"object":{"type":"MemberExpression","start":31825,"end":31832,"object":{"type":"ThisExpression","start":31825,"end":31829},"property":{"type":"Identifier","start":31830,"end":31832,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":31833,"end":31836,"name":"doc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31837,"end":31843,"name":"docRef"}],"optional":false},"property":{"type":"Identifier","start":31845,"end":31849,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":31850,"end":32298,"callee":{"type":"Identifier","start":31850,"end":31853,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":31854,"end":32297,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31855,"end":31863,"name":"snapshot"}],"body":{"type":"BlockStatement","start":31868,"end":32297,"body":[{"type":"IfStatement","start":31883,"end":32286,"test":{"type":"LogicalExpression","start":31887,"end":31967,"left":{"type":"UnaryExpression","start":31887,"end":31905,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":31888,"end":31905,"callee":{"type":"MemberExpression","start":31888,"end":31903,"object":{"type":"Identifier","start":31888,"end":31896,"name":"snapshot"},"property":{"type":"Identifier","start":31897,"end":31903,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":31909,"end":31967,"left":{"type":"Identifier","start":31909,"end":31925,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":31930,"end":31967,"object":{"type":"Identifier","start":31930,"end":31947,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":31948,"end":31967,"name":"THROW_DOC_NOT_FOUND"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":31969,"end":32286,"body":[{"type":"VariableDeclaration","start":31988,"end":32241,"declarations":[{"type":"VariableDeclarator","start":31994,"end":32240,"id":{"type":"Identifier","start":31994,"end":31999,"name":"error"},"init":{"type":"ObjectExpression","start":32002,"end":32240,"properties":[{"type":"Property","start":32025,"end":32049,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32025,"end":32029,"name":"name"},"value":{"type":"Literal","start":32031,"end":32049,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":32072,"end":32089,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32072,"end":32076,"name":"code"},"value":{"type":"Literal","start":32078,"end":32089,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":32112,"end":32192,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32112,"end":32119,"name":"message"},"value":{"type":"Literal","start":32121,"end":32192,"value":"Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND","raw":"'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND'"},"kind":"init"},{"type":"Property","start":32215,"end":32221,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32215,"end":32221,"name":"docRef"},"kind":"init","value":{"type":"Identifier","start":32215,"end":32221,"name":"docRef"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":32259,"end":32271,"argument":{"type":"Identifier","start":32265,"end":32270,"name":"error"}}]},"alternate":null}]}}],"optional":false},{"type":"CallExpression","start":32300,"end":32425,"callee":{"type":"Identifier","start":32300,"end":32306,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":32307,"end":32424,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32308,"end":32316,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32321,"end":32424,"body":[{"type":"ReturnStatement","start":32336,"end":32413,"argument":{"type":"UnaryExpression","start":32343,"end":32412,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":32345,"end":32411,"left":{"type":"CallExpression","start":32345,"end":32362,"callee":{"type":"MemberExpression","start":32345,"end":32360,"object":{"type":"Identifier","start":32345,"end":32353,"name":"snapshot"},"property":{"type":"Identifier","start":32354,"end":32360,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":32366,"end":32411,"left":{"type":"Identifier","start":32366,"end":32382,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32387,"end":32411,"object":{"type":"Identifier","start":32387,"end":32404,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32405,"end":32411,"name":"FILTER"},"computed":false,"optional":false}}}}}]}}],"optional":false},{"type":"CallExpression","start":32427,"end":33182,"callee":{"type":"Identifier","start":32427,"end":32430,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32431,"end":33181,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32432,"end":32440,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32445,"end":33181,"body":[{"type":"ExpressionStatement","start":32460,"end":32491,"expression":{"type":"CallExpression","start":32460,"end":32490,"callee":{"type":"MemberExpression","start":32460,"end":32471,"object":{"type":"Identifier","start":32460,"end":32467,"name":"console"},"property":{"type":"Identifier","start":32468,"end":32471,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":32472,"end":32489,"callee":{"type":"MemberExpression","start":32472,"end":32487,"object":{"type":"Identifier","start":32472,"end":32480,"name":"snapshot"},"property":{"type":"Identifier","start":32481,"end":32487,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":32505,"end":33144,"test":{"type":"LogicalExpression","start":32509,"end":32588,"left":{"type":"CallExpression","start":32509,"end":32526,"callee":{"type":"MemberExpression","start":32509,"end":32524,"object":{"type":"Identifier","start":32509,"end":32517,"name":"snapshot"},"property":{"type":"Identifier","start":32518,"end":32524,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":32530,"end":32588,"left":{"type":"Identifier","start":32530,"end":32546,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32551,"end":32588,"object":{"type":"Identifier","start":32551,"end":32568,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32569,"end":32588,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32590,"end":32999,"body":[{"type":"VariableDeclaration","start":32609,"end":32638,"declarations":[{"type":"VariableDeclarator","start":32615,"end":32637,"id":{"type":"Identifier","start":32615,"end":32619,"name":"data"},"init":{"type":"CallExpression","start":32622,"end":32637,"callee":{"type":"MemberExpression","start":32622,"end":32635,"object":{"type":"Identifier","start":32622,"end":32630,"name":"snapshot"},"property":{"type":"Identifier","start":32631,"end":32635,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":32656,"end":32928,"declarations":[{"type":"VariableDeclarator","start":32662,"end":32927,"id":{"type":"Identifier","start":32662,"end":32679,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":32682,"end":32927,"properties":[{"type":"Property","start":32705,"end":32720,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32705,"end":32707,"name":"id"},"value":{"type":"MemberExpression","start":32709,"end":32720,"object":{"type":"Identifier","start":32709,"end":32717,"name":"snapshot"},"property":{"type":"Identifier","start":32718,"end":32720,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32743,"end":32760,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32743,"end":32746,"name":"ref"},"value":{"type":"MemberExpression","start":32748,"end":32760,"object":{"type":"Identifier","start":32748,"end":32756,"name":"snapshot"},"property":{"type":"Identifier","start":32757,"end":32760,"name":"ref"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32783,"end":32800,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32783,"end":32787,"name":"path"},"value":{"type":"MemberExpression","start":32789,"end":32800,"object":{"type":"Identifier","start":32789,"end":32795,"name":"docRef"},"property":{"type":"Identifier","start":32796,"end":32800,"name":"path"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32823,"end":32850,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32823,"end":32831,"name":"isExists"},"value":{"type":"CallExpression","start":32833,"end":32850,"callee":{"type":"MemberExpression","start":32833,"end":32848,"object":{"type":"Identifier","start":32833,"end":32841,"name":"snapshot"},"property":{"type":"Identifier","start":32842,"end":32848,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":32873,"end":32908,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32873,"end":32889,"name":"snapshotMetadata"},"value":{"type":"MemberExpression","start":32891,"end":32908,"object":{"type":"Identifier","start":32891,"end":32899,"name":"snapshot"},"property":{"type":"Identifier","start":32900,"end":32908,"name":"metadata"},"computed":false,"optional":false},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":32946,"end":32984,"argument":{"type":"ObjectExpression","start":32953,"end":32983,"properties":[{"type":"SpreadElement","start":32955,"end":32962,"argument":{"type":"Identifier","start":32958,"end":32962,"name":"data"}},{"type":"Property","start":32964,"end":32981,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32964,"end":32981,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":32964,"end":32981,"name":"firestoreMetadata"}}]}}]},"alternate":{"type":"IfStatement","start":33018,"end":33144,"test":{"type":"BinaryExpression","start":33022,"end":33072,"left":{"type":"Identifier","start":33022,"end":33038,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":33043,"end":33072,"object":{"type":"Identifier","start":33043,"end":33060,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":33061,"end":33072,"name":"RETURN_NULL"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":33074,"end":33144,"body":[{"type":"ReturnStatement","start":33117,"end":33129,"argument":{"type":"Literal","start":33124,"end":33128,"value":null,"raw":"null"}}]},"alternate":null}},{"type":"ReturnStatement","start":33158,"end":33170,"argument":{"type":"Literal","start":33165,"end":33169,"value":null,"raw":"null"}}]}}],"optional":false},{"type":"CallExpression","start":33184,"end":33378,"callee":{"type":"Identifier","start":33184,"end":33187,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33188,"end":33377,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33189,"end":33193,"name":"data"}],"body":{"type":"BlockStatement","start":33198,"end":33377,"body":[{"type":"IfStatement","start":33213,"end":33366,"test":{"type":"BinaryExpression","start":33217,"end":33229,"left":{"type":"Identifier","start":33217,"end":33221,"name":"data"},"operator":"!=","right":{"type":"Literal","start":33225,"end":33229,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":33231,"end":33301,"body":[{"type":"ReturnStatement","start":33250,"end":33286,"argument":{"type":"CallExpression","start":33257,"end":33285,"callee":{"type":"Identifier","start":33257,"end":33279,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":33280,"end":33284,"name":"data"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":33320,"end":33366,"body":[{"type":"ReturnStatement","start":33339,"end":33351,"argument":{"type":"Identifier","start":33346,"end":33350,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":33653,"end":34627,"static":false,"computed":false,"key":{"type":"Identifier","start":33653,"end":33679,"name":"listenForCollectionSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":33679,"end":34627,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33680,"end":33686,"name":"_query"}],"body":{"type":"BlockStatement","start":33688,"end":34627,"body":[{"type":"ReturnStatement","start":33863,"end":34620,"argument":{"type":"CallExpression","start":33870,"end":34619,"callee":{"type":"MemberExpression","start":33870,"end":33901,"object":{"type":"CallExpression","start":33870,"end":33896,"callee":{"type":"MemberExpression","start":33870,"end":33888,"object":{"type":"MemberExpression","start":33870,"end":33877,"object":{"type":"ThisExpression","start":33870,"end":33874},"property":{"type":"Identifier","start":33875,"end":33877,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":33878,"end":33888,"name":"collection"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":33889,"end":33895,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":33897,"end":33901,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":33902,"end":34500,"callee":{"type":"Identifier","start":33902,"end":33905,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33906,"end":34499,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33907,"end":33911,"name":"snap"}],"body":{"type":"BlockStatement","start":33916,"end":34499,"body":[{"type":"ReturnStatement","start":33931,"end":34488,"argument":{"type":"CallExpression","start":33938,"end":34487,"callee":{"type":"MemberExpression","start":33938,"end":33951,"object":{"type":"MemberExpression","start":33938,"end":33947,"object":{"type":"Identifier","start":33938,"end":33942,"name":"snap"},"property":{"type":"Identifier","start":33943,"end":33947,"name":"docs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":33948,"end":33951,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":33952,"end":34486,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33952,"end":33960,"name":"snapshot"}],"body":{"type":"BlockStatement","start":33964,"end":34486,"body":[{"type":"VariableDeclaration","start":33983,"end":34012,"declarations":[{"type":"VariableDeclarator","start":33989,"end":34011,"id":{"type":"Identifier","start":33989,"end":33993,"name":"data"},"init":{"type":"CallExpression","start":33996,"end":34011,"callee":{"type":"MemberExpression","start":33996,"end":34009,"object":{"type":"Identifier","start":33996,"end":34004,"name":"snapshot"},"property":{"type":"Identifier","start":34005,"end":34009,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34030,"end":34053,"declarations":[{"type":"VariableDeclarator","start":34036,"end":34052,"id":{"type":"Identifier","start":34036,"end":34038,"name":"id"},"init":{"type":"MemberExpression","start":34041,"end":34052,"object":{"type":"Identifier","start":34041,"end":34049,"name":"snapshot"},"property":{"type":"Identifier","start":34050,"end":34052,"name":"id"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34071,"end":34096,"declarations":[{"type":"VariableDeclarator","start":34077,"end":34095,"id":{"type":"Identifier","start":34077,"end":34080,"name":"ref"},"init":{"type":"MemberExpression","start":34083,"end":34095,"object":{"type":"Identifier","start":34083,"end":34091,"name":"snapshot"},"property":{"type":"Identifier","start":34092,"end":34095,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34114,"end":34136,"declarations":[{"type":"VariableDeclarator","start":34120,"end":34135,"id":{"type":"Identifier","start":34120,"end":34124,"name":"path"},"init":{"type":"MemberExpression","start":34127,"end":34135,"object":{"type":"Identifier","start":34127,"end":34130,"name":"ref"},"property":{"type":"Identifier","start":34131,"end":34135,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34154,"end":34197,"declarations":[{"type":"VariableDeclarator","start":34160,"end":34196,"id":{"type":"Identifier","start":34160,"end":34176,"name":"snapshotMetadata"},"init":{"type":"MemberExpression","start":34179,"end":34196,"object":{"type":"Identifier","start":34179,"end":34187,"name":"snapshot"},"property":{"type":"Identifier","start":34188,"end":34196,"name":"metadata"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34215,"end":34415,"declarations":[{"type":"VariableDeclarator","start":34221,"end":34414,"id":{"type":"Identifier","start":34221,"end":34238,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":34241,"end":34414,"properties":[{"type":"Property","start":34264,"end":34266,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34264,"end":34266,"name":"id"},"kind":"init","value":{"type":"Identifier","start":34264,"end":34266,"name":"id"}},{"type":"Property","start":34289,"end":34293,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34289,"end":34293,"name":"path"},"kind":"init","value":{"type":"Identifier","start":34289,"end":34293,"name":"path"}},{"type":"Property","start":34316,"end":34319,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34316,"end":34319,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":34316,"end":34319,"name":"ref"}},{"type":"Property","start":34342,"end":34358,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34342,"end":34358,"name":"snapshotMetadata"},"kind":"init","value":{"type":"Identifier","start":34342,"end":34358,"name":"snapshotMetadata"}},{"type":"Property","start":34381,"end":34395,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":34381,"end":34389,"name":"isExists"},"value":{"type":"Literal","start":34391,"end":34395,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":34433,"end":34471,"argument":{"type":"ObjectExpression","start":34440,"end":34470,"properties":[{"type":"SpreadElement","start":34442,"end":34449,"argument":{"type":"Identifier","start":34445,"end":34449,"name":"data"}},{"type":"Property","start":34451,"end":34468,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34451,"end":34468,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":34451,"end":34468,"name":"firestoreMetadata"}}]}}]}}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":34502,"end":34618,"callee":{"type":"Identifier","start":34502,"end":34505,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34506,"end":34617,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":34507,"end":34512,"name":"datas"}],"body":{"type":"CallExpression","start":34517,"end":34617,"callee":{"type":"MemberExpression","start":34517,"end":34526,"object":{"type":"Identifier","start":34517,"end":34522,"name":"datas"},"property":{"type":"Identifier","start":34523,"end":34526,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34527,"end":34616,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34527,"end":34531,"name":"data"}],"body":{"type":"BlockStatement","start":34535,"end":34616,"body":[{"type":"ExpressionStatement","start":34550,"end":34579,"expression":{"type":"CallExpression","start":34550,"end":34578,"callee":{"type":"Identifier","start":34550,"end":34572,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":34573,"end":34577,"name":"data"}],"optional":false}},{"type":"ReturnStatement","start":34593,"end":34605,"argument":{"type":"Identifier","start":34600,"end":34604,"name":"data"}}]}}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":34909,"end":38683,"static":false,"computed":false,"key":{"type":"Identifier","start":34909,"end":34933,"name":"listenForCollectionsDeep"},"kind":"method","value":{"type":"FunctionExpression","start":34933,"end":38683,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34934,"end":34938,"name":"item"},{"type":"AssignmentPattern","start":34940,"end":34965,"left":{"type":"Identifier","start":34940,"end":34960,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":34963,"end":34965,"elements":[]}}],"body":{"type":"BlockStatement","start":34967,"end":38683,"body":[{"type":"IfStatement","start":34978,"end":35040,"test":{"type":"BinaryExpression","start":34982,"end":34994,"left":{"type":"Identifier","start":34982,"end":34986,"name":"item"},"operator":"==","right":{"type":"Literal","start":34990,"end":34994,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":34996,"end":35040,"body":[{"type":"ReturnStatement","start":35011,"end":35029,"argument":{"type":"CallExpression","start":35018,"end":35028,"callee":{"type":"Identifier","start":35018,"end":35020,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35021,"end":35027,"elements":[{"type":"Identifier","start":35022,"end":35026,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":35050,"end":35132,"test":{"type":"BinaryExpression","start":35054,"end":35086,"left":{"type":"MemberExpression","start":35054,"end":35081,"object":{"type":"Identifier","start":35054,"end":35074,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35075,"end":35081,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":35085,"end":35086,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":35088,"end":35132,"body":[{"type":"ReturnStatement","start":35103,"end":35121,"argument":{"type":"CallExpression","start":35110,"end":35120,"callee":{"type":"Identifier","start":35110,"end":35112,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35113,"end":35119,"elements":[{"type":"Identifier","start":35114,"end":35118,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":35142,"end":35173,"declarations":[{"type":"VariableDeclarator","start":35148,"end":35172,"id":{"type":"Identifier","start":35148,"end":35167,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":35170,"end":35172,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":35276,"end":38076,"expression":{"type":"CallExpression","start":35276,"end":38075,"callee":{"type":"MemberExpression","start":35276,"end":35304,"object":{"type":"Identifier","start":35276,"end":35296,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35297,"end":35304,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":35305,"end":38074,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35305,"end":35323,"name":"subCollectionQuery"}],"body":{"type":"BlockStatement","start":35327,"end":38074,"body":[{"type":"VariableDeclaration","start":35342,"end":35455,"declarations":[{"type":"VariableDeclarator","start":35348,"end":35454,"id":{"type":"Identifier","start":35348,"end":35362,"name":"queryContainer"},"init":{"type":"NewExpression","start":35365,"end":35454,"callee":{"type":"Identifier","start":35369,"end":35383,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":35384,"end":35453,"callee":{"type":"Identifier","start":35384,"end":35400,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":35401,"end":35427,"object":{"type":"MemberExpression","start":35401,"end":35423,"object":{"type":"Identifier","start":35401,"end":35405,"name":"item"},"property":{"type":"Identifier","start":35406,"end":35423,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":35424,"end":35427,"name":"ref"},"computed":false,"optional":false},{"type":"MemberExpression","start":35429,"end":35452,"object":{"type":"Identifier","start":35429,"end":35447,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35448,"end":35452,"name":"name"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":35469,"end":35716,"test":{"type":"MemberExpression","start":35473,"end":35508,"object":{"type":"Identifier","start":35473,"end":35491,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35492,"end":35508,"name":"queryConstraints"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":35510,"end":35716,"body":[{"type":"ExpressionStatement","start":35529,"end":35599,"expression":{"type":"AssignmentExpression","start":35529,"end":35598,"operator":"=","left":{"type":"MemberExpression","start":35529,"end":35560,"object":{"type":"Identifier","start":35529,"end":35543,"name":"queryContainer"},"property":{"type":"Identifier","start":35544,"end":35560,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":35563,"end":35598,"object":{"type":"Identifier","start":35563,"end":35581,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35582,"end":35598,"name":"queryConstraints"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":35898,"end":38004,"declarations":[{"type":"VariableDeclarator","start":35904,"end":38003,"id":{"type":"Identifier","start":35904,"end":35922,"name":"collectionListener"},"init":{"type":"CallExpression","start":35925,"end":38003,"callee":{"type":"MemberExpression","start":35925,"end":35983,"object":{"type":"CallExpression","start":35925,"end":35978,"callee":{"type":"MemberExpression","start":35925,"end":35956,"object":{"type":"ThisExpression","start":35925,"end":35929},"property":{"type":"Identifier","start":35930,"end":35956,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":35957,"end":35977,"object":{"type":"Identifier","start":35957,"end":35971,"name":"queryContainer"},"property":{"type":"Identifier","start":35972,"end":35977,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":35979,"end":35983,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":36398,"end":37216,"callee":{"type":"Identifier","start":36398,"end":36406,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":36407,"end":37215,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36408,"end":36413,"name":"items"}],"body":{"type":"BlockStatement","start":36418,"end":37215,"body":[{"type":"IfStatement","start":36437,"end":36536,"test":{"type":"UnaryExpression","start":36441,"end":36475,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":36442,"end":36475,"object":{"type":"Identifier","start":36442,"end":36460,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36461,"end":36475,"name":"subCollections"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":36477,"end":36536,"body":[{"type":"ReturnStatement","start":36500,"end":36517,"argument":{"type":"CallExpression","start":36507,"end":36516,"callee":{"type":"Identifier","start":36507,"end":36509,"name":"of"},"arguments":[{"type":"Identifier","start":36510,"end":36515,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":36554,"end":36578,"declarations":[{"type":"VariableDeclarator","start":36560,"end":36577,"id":{"type":"Identifier","start":36560,"end":36572,"name":"docListeners"},"init":{"type":"ArrayExpression","start":36575,"end":36577,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":36596,"end":36633,"expression":{"type":"AssignmentExpression","start":36596,"end":36632,"operator":"=","left":{"type":"Identifier","start":36596,"end":36601,"name":"items"},"right":{"type":"CallExpression","start":36604,"end":36632,"callee":{"type":"MemberExpression","start":36604,"end":36616,"object":{"type":"Identifier","start":36604,"end":36609,"name":"items"},"property":{"type":"Identifier","start":36610,"end":36616,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36617,"end":36631,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":36617,"end":36618,"name":"d"}],"body":{"type":"BinaryExpression","start":36622,"end":36631,"left":{"type":"Identifier","start":36622,"end":36623,"name":"d"},"operator":"!=","right":{"type":"Literal","start":36627,"end":36631,"value":null,"raw":"null"}}}],"optional":false}}},{"type":"ExpressionStatement","start":36681,"end":36919,"expression":{"type":"CallExpression","start":36681,"end":36918,"callee":{"type":"MemberExpression","start":36681,"end":36694,"object":{"type":"Identifier","start":36681,"end":36686,"name":"items"},"property":{"type":"Identifier","start":36687,"end":36694,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36695,"end":36917,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36696,"end":36703,"name":"subItem"}],"body":{"type":"BlockStatement","start":36708,"end":36917,"body":[{"type":"VariableDeclaration","start":36731,"end":36835,"declarations":[{"type":"VariableDeclarator","start":36737,"end":36834,"id":{"type":"Identifier","start":36737,"end":36758,"name":"subDocAndCollections$"},"init":{"type":"CallExpression","start":36761,"end":36834,"callee":{"type":"MemberExpression","start":36761,"end":36790,"object":{"type":"ThisExpression","start":36761,"end":36765},"property":{"type":"Identifier","start":36766,"end":36790,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36791,"end":36798,"name":"subItem"},{"type":"MemberExpression","start":36800,"end":36833,"object":{"type":"Identifier","start":36800,"end":36818,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36819,"end":36833,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":36857,"end":36898,"expression":{"type":"CallExpression","start":36857,"end":36897,"callee":{"type":"MemberExpression","start":36857,"end":36874,"object":{"type":"Identifier","start":36857,"end":36869,"name":"docListeners"},"property":{"type":"Identifier","start":36870,"end":36874,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36875,"end":36896,"name":"subDocAndCollections$"}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":36937,"end":37023,"test":{"type":"BinaryExpression","start":36941,"end":36965,"left":{"type":"MemberExpression","start":36941,"end":36960,"object":{"type":"Identifier","start":36941,"end":36953,"name":"docListeners"},"property":{"type":"Identifier","start":36954,"end":36960,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":36964,"end":36965,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":36967,"end":37023,"body":[{"type":"ReturnStatement","start":36990,"end":37004,"argument":{"type":"CallExpression","start":36997,"end":37003,"callee":{"type":"Identifier","start":36997,"end":36999,"name":"of"},"arguments":[{"type":"ArrayExpression","start":37000,"end":37002,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":37091,"end":37200,"argument":{"type":"CallExpression","start":37098,"end":37199,"callee":{"type":"MemberExpression","start":37098,"end":37130,"object":{"type":"CallExpression","start":37098,"end":37125,"callee":{"type":"Identifier","start":37098,"end":37111,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":37112,"end":37124,"name":"docListeners"}],"optional":false},"property":{"type":"Identifier","start":37126,"end":37130,"name":"pipe"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":37569,"end":38002,"callee":{"type":"Identifier","start":37569,"end":37572,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37573,"end":38001,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37574,"end":37579,"name":"items"}],"body":{"type":"BlockStatement","start":37584,"end":38001,"body":[{"type":"VariableDeclaration","start":37603,"end":37703,"declarations":[{"type":"VariableDeclarator","start":37609,"end":37702,"id":{"type":"Identifier","start":37609,"end":37614,"name":"docId"},"init":{"type":"ConditionalExpression","start":37617,"end":37702,"test":{"type":"BinaryExpression","start":37617,"end":37655,"left":{"type":"MemberExpression","start":37617,"end":37641,"object":{"type":"Identifier","start":37617,"end":37635,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37636,"end":37641,"name":"docId"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":37646,"end":37655,"name":"undefined"}},"consequent":{"type":"MemberExpression","start":37658,"end":37682,"object":{"type":"Identifier","start":37658,"end":37676,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37677,"end":37682,"name":"docId"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":37685,"end":37702,"object":{"type":"ThisExpression","start":37685,"end":37689},"property":{"type":"Identifier","start":37690,"end":37702,"name":"defaultDocId"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":37721,"end":37986,"test":{"type":"LogicalExpression","start":37725,"end":37786,"left":{"type":"BinaryExpression","start":37725,"end":37743,"left":{"type":"MemberExpression","start":37725,"end":37737,"object":{"type":"Identifier","start":37725,"end":37730,"name":"items"},"property":{"type":"Identifier","start":37731,"end":37737,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":37742,"end":37743,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":37747,"end":37786,"left":{"type":"MemberExpression","start":37747,"end":37776,"object":{"type":"MemberExpression","start":37747,"end":37773,"object":{"type":"MemberExpression","start":37747,"end":37755,"object":{"type":"Identifier","start":37747,"end":37752,"name":"items"},"property":{"type":"Literal","start":37753,"end":37754,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":37756,"end":37773,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":37774,"end":37776,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":37781,"end":37786,"name":"docId"}}},"consequent":{"type":"BlockStatement","start":37788,"end":37877,"body":[{"type":"ReturnStatement","start":37811,"end":37858,"argument":{"type":"ObjectExpression","start":37818,"end":37857,"properties":[{"type":"Property","start":37820,"end":37855,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37821,"end":37844,"object":{"type":"Identifier","start":37821,"end":37839,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37840,"end":37844,"name":"name"},"computed":false,"optional":false},"value":{"type":"MemberExpression","start":37847,"end":37855,"object":{"type":"Identifier","start":37847,"end":37852,"name":"items"},"property":{"type":"Literal","start":37853,"end":37854,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":37900,"end":37986,"body":[{"type":"ReturnStatement","start":37923,"end":37967,"argument":{"type":"ObjectExpression","start":37930,"end":37966,"properties":[{"type":"Property","start":37932,"end":37964,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37933,"end":37956,"object":{"type":"Identifier","start":37933,"end":37951,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37952,"end":37956,"name":"name"},"computed":false,"optional":false},"value":{"type":"Identifier","start":37959,"end":37964,"name":"items"},"kind":"init"}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":38018,"end":38063,"expression":{"type":"CallExpression","start":38018,"end":38062,"callee":{"type":"MemberExpression","start":38018,"end":38042,"object":{"type":"Identifier","start":38018,"end":38037,"name":"collectionListeners"},"property":{"type":"Identifier","start":38038,"end":38042,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38043,"end":38061,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":38172,"end":38676,"argument":{"type":"CallExpression","start":38179,"end":38675,"callee":{"type":"MemberExpression","start":38179,"end":38218,"object":{"type":"CallExpression","start":38179,"end":38213,"callee":{"type":"Identifier","start":38179,"end":38192,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":38193,"end":38212,"name":"collectionListeners"}],"optional":false},"property":{"type":"Identifier","start":38214,"end":38218,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38219,"end":38603,"callee":{"type":"Identifier","start":38219,"end":38222,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38223,"end":38602,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38224,"end":38239,"name":"collectionDatas"}],"body":{"type":"BlockStatement","start":38244,"end":38602,"body":[{"type":"VariableDeclaration","start":38302,"end":38322,"declarations":[{"type":"VariableDeclarator","start":38308,"end":38321,"id":{"type":"Identifier","start":38308,"end":38316,"name":"datasMap"},"init":{"type":"ObjectExpression","start":38319,"end":38321,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":38336,"end":38561,"expression":{"type":"CallExpression","start":38336,"end":38560,"callee":{"type":"MemberExpression","start":38336,"end":38359,"object":{"type":"Identifier","start":38336,"end":38351,"name":"collectionDatas"},"property":{"type":"Identifier","start":38352,"end":38359,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":38360,"end":38559,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38361,"end":38375,"name":"collectionData"}],"body":{"type":"BlockStatement","start":38380,"end":38559,"body":[{"type":"ForOfStatement","start":38399,"end":38544,"await":false,"left":{"type":"VariableDeclaration","start":38404,"end":38433,"declarations":[{"type":"VariableDeclarator","start":38410,"end":38433,"id":{"type":"ArrayPattern","start":38410,"end":38433,"elements":[{"type":"Identifier","start":38411,"end":38425,"name":"collectionName"},{"type":"Identifier","start":38427,"end":38432,"name":"items"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":38437,"end":38467,"callee":{"type":"MemberExpression","start":38437,"end":38451,"object":{"type":"Identifier","start":38437,"end":38443,"name":"Object"},"property":{"type":"Identifier","start":38444,"end":38451,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38452,"end":38466,"name":"collectionData"}],"optional":false},"body":{"type":"BlockStatement","start":38469,"end":38544,"body":[{"type":"ExpressionStatement","start":38492,"end":38525,"expression":{"type":"AssignmentExpression","start":38492,"end":38524,"operator":"=","left":{"type":"MemberExpression","start":38492,"end":38516,"object":{"type":"Identifier","start":38492,"end":38500,"name":"datasMap"},"property":{"type":"Identifier","start":38501,"end":38515,"name":"collectionName"},"computed":true,"optional":false},"right":{"type":"Identifier","start":38519,"end":38524,"name":"items"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":38575,"end":38591,"argument":{"type":"Identifier","start":38582,"end":38590,"name":"datasMap"}}]}}],"optional":false},{"type":"CallExpression","start":38605,"end":38674,"callee":{"type":"Identifier","start":38605,"end":38608,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38609,"end":38673,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38610,"end":38614,"name":"data"}],"body":{"type":"BlockStatement","start":38619,"end":38673,"body":[{"type":"ReturnStatement","start":38634,"end":38662,"argument":{"type":"ObjectExpression","start":38641,"end":38661,"properties":[{"type":"SpreadElement","start":38643,"end":38650,"argument":{"type":"Identifier","start":38646,"end":38650,"name":"item"}},{"type":"SpreadElement","start":38652,"end":38659,"argument":{"type":"Identifier","start":38655,"end":38659,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":38798,"end":39330,"static":false,"computed":false,"key":{"type":"Identifier","start":38798,"end":38830,"name":"listenForDocDeepRecursiveHelper$"},"kind":"method","value":{"type":"FunctionExpression","start":38830,"end":39330,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38831,"end":38837,"name":"docRef"},{"type":"AssignmentPattern","start":38839,"end":38864,"left":{"type":"Identifier","start":38839,"end":38859,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":38862,"end":38864,"elements":[]}},{"type":"AssignmentPattern","start":38866,"end":38914,"left":{"type":"Identifier","start":38866,"end":38882,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":38885,"end":38914,"object":{"type":"Identifier","start":38885,"end":38902,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":38903,"end":38914,"name":"RETURN_NULL"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":38916,"end":39330,"body":[{"type":"ReturnStatement","start":38962,"end":39323,"argument":{"type":"CallExpression","start":38969,"end":39322,"callee":{"type":"MemberExpression","start":38969,"end":39024,"object":{"type":"CallExpression","start":38969,"end":39019,"callee":{"type":"MemberExpression","start":38969,"end":38993,"object":{"type":"ThisExpression","start":38969,"end":38973},"property":{"type":"Identifier","start":38974,"end":38993,"name":"listenForDocSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38994,"end":39000,"name":"docRef"},{"type":"Identifier","start":39002,"end":39018,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":39020,"end":39024,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":39025,"end":39321,"callee":{"type":"Identifier","start":39025,"end":39033,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":39034,"end":39320,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39035,"end":39039,"name":"item"}],"body":{"type":"BlockStatement","start":39044,"end":39320,"body":[{"type":"IfStatement","start":39059,"end":39128,"test":{"type":"BinaryExpression","start":39063,"end":39076,"left":{"type":"Identifier","start":39063,"end":39067,"name":"item"},"operator":"===","right":{"type":"Literal","start":39072,"end":39076,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":39078,"end":39128,"body":[{"type":"ReturnStatement","start":39097,"end":39113,"argument":{"type":"CallExpression","start":39104,"end":39112,"callee":{"type":"Identifier","start":39104,"end":39106,"name":"of"},"arguments":[{"type":"Identifier","start":39107,"end":39111,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":39142,"end":39230,"test":{"type":"BinaryExpression","start":39146,"end":39178,"left":{"type":"MemberExpression","start":39146,"end":39173,"object":{"type":"Identifier","start":39146,"end":39166,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":39167,"end":39173,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":39177,"end":39178,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":39180,"end":39230,"body":[{"type":"ReturnStatement","start":39199,"end":39215,"argument":{"type":"CallExpression","start":39206,"end":39214,"callee":{"type":"Identifier","start":39206,"end":39208,"name":"of"},"arguments":[{"type":"Identifier","start":39209,"end":39213,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":39244,"end":39309,"argument":{"type":"CallExpression","start":39251,"end":39308,"callee":{"type":"MemberExpression","start":39251,"end":39280,"object":{"type":"ThisExpression","start":39251,"end":39255},"property":{"type":"Identifier","start":39256,"end":39280,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39281,"end":39285,"name":"item"},{"type":"Identifier","start":39287,"end":39307,"name":"subCollectionQueries"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":40021,"end":41902,"static":false,"computed":false,"key":{"type":"Identifier","start":40021,"end":40031,"name":"addSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":40031,"end":41902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":40032,"end":40036,"name":"data"},{"type":"Identifier","start":40038,"end":40051,"name":"collectionRef"},{"type":"AssignmentPattern","start":40053,"end":40070,"left":{"type":"Identifier","start":40053,"end":40063,"name":"isAddDates"},"right":{"type":"Literal","start":40066,"end":40070,"value":true,"raw":"true"}},{"type":"Identifier","start":40072,"end":40074,"name":"id"}],"body":{"type":"BlockStatement","start":40076,"end":41902,"body":[{"type":"VariableDeclaration","start":40147,"end":40156,"declarations":[{"type":"VariableDeclarator","start":40151,"end":40155,"id":{"type":"Identifier","start":40151,"end":40155,"name":"res$"},"init":null}],"kind":"let"},{"type":"IfStatement","start":40166,"end":40343,"test":{"type":"Identifier","start":40170,"end":40180,"name":"isAddDates"},"consequent":{"type":"BlockStatement","start":40182,"end":40343,"body":[{"type":"VariableDeclaration","start":40197,"end":40221,"declarations":[{"type":"VariableDeclarator","start":40203,"end":40220,"id":{"type":"Identifier","start":40203,"end":40207,"name":"date"},"init":{"type":"NewExpression","start":40210,"end":40220,"callee":{"type":"Identifier","start":40214,"end":40218,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":40235,"end":40276,"expression":{"type":"AssignmentExpression","start":40235,"end":40275,"operator":"=","left":{"type":"Identifier","start":40235,"end":40239,"name":"data"},"right":{"type":"CallExpression","start":40242,"end":40275,"callee":{"type":"Identifier","start":40242,"end":40256,"name":"addCreatedDate"},"arguments":[{"type":"Identifier","start":40257,"end":40261,"name":"data"},{"type":"Literal","start":40263,"end":40268,"value":false,"raw":"false"},{"type":"Identifier","start":40270,"end":40274,"name":"date"}],"optional":false}}},{"type":"ExpressionStatement","start":40290,"end":40332,"expression":{"type":"AssignmentExpression","start":40290,"end":40331,"operator":"=","left":{"type":"Identifier","start":40290,"end":40294,"name":"data"},"right":{"type":"CallExpression","start":40297,"end":40331,"callee":{"type":"Identifier","start":40297,"end":40312,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":40313,"end":40317,"name":"data"},{"type":"Literal","start":40319,"end":40324,"value":false,"raw":"false"},{"type":"Identifier","start":40326,"end":40330,"name":"date"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":40353,"end":40579,"test":{"type":"BinaryExpression","start":40357,"end":40373,"left":{"type":"Identifier","start":40357,"end":40359,"name":"id"},"operator":"!==","right":{"type":"Identifier","start":40364,"end":40373,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":40375,"end":40498,"body":[{"type":"VariableDeclaration","start":40390,"end":40440,"declarations":[{"type":"VariableDeclarator","start":40396,"end":40439,"id":{"type":"Identifier","start":40396,"end":40402,"name":"docRef"},"init":{"type":"CallExpression","start":40405,"end":40439,"callee":{"type":"Identifier","start":40405,"end":40420,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":40421,"end":40434,"name":"collectionRef"},{"type":"Identifier","start":40436,"end":40438,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":40454,"end":40487,"expression":{"type":"AssignmentExpression","start":40454,"end":40486,"operator":"=","left":{"type":"Identifier","start":40454,"end":40458,"name":"res$"},"right":{"type":"CallExpression","start":40461,"end":40486,"callee":{"type":"MemberExpression","start":40461,"end":40472,"object":{"type":"MemberExpression","start":40461,"end":40468,"object":{"type":"ThisExpression","start":40461,"end":40465},"property":{"type":"Identifier","start":40466,"end":40468,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40469,"end":40472,"name":"set"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40473,"end":40479,"name":"docRef"},{"type":"Identifier","start":40481,"end":40485,"name":"data"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":40513,"end":40579,"body":[{"type":"ExpressionStatement","start":40528,"end":40568,"expression":{"type":"AssignmentExpression","start":40528,"end":40567,"operator":"=","left":{"type":"Identifier","start":40528,"end":40532,"name":"res$"},"right":{"type":"CallExpression","start":40535,"end":40567,"callee":{"type":"MemberExpression","start":40535,"end":40546,"object":{"type":"MemberExpression","start":40535,"end":40542,"object":{"type":"ThisExpression","start":40535,"end":40539},"property":{"type":"Identifier","start":40540,"end":40542,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40543,"end":40546,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40547,"end":40560,"name":"collectionRef"},{"type":"Identifier","start":40562,"end":40566,"name":"data"}],"optional":false}}}]}},{"type":"ExpressionStatement","start":40829,"end":41859,"expression":{"type":"AssignmentExpression","start":40829,"end":41858,"operator":"=","left":{"type":"Identifier","start":40829,"end":40833,"name":"res$"},"right":{"type":"CallExpression","start":40836,"end":41858,"callee":{"type":"MemberExpression","start":40836,"end":40845,"object":{"type":"Identifier","start":40836,"end":40840,"name":"res$"},"property":{"type":"Identifier","start":40841,"end":40845,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41021,"end":41857,"callee":{"type":"Identifier","start":41021,"end":41024,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":41025,"end":41856,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41026,"end":41029,"name":"ref"}],"body":{"type":"BlockStatement","start":41034,"end":41856,"body":[{"type":"IfStatement","start":41049,"end":41845,"test":{"type":"LogicalExpression","start":41053,"end":41076,"left":{"type":"BinaryExpression","start":41053,"end":41069,"left":{"type":"Identifier","start":41053,"end":41055,"name":"id"},"operator":"===","right":{"type":"Identifier","start":41060,"end":41069,"name":"undefined"}},"operator":"&&","right":{"type":"Identifier","start":41073,"end":41076,"name":"ref"}},"consequent":{"type":"BlockStatement","start":41078,"end":41377,"body":[{"type":"VariableDeclaration","start":41097,"end":41119,"declarations":[{"type":"VariableDeclarator","start":41103,"end":41118,"id":{"type":"Identifier","start":41103,"end":41107,"name":"path"},"init":{"type":"MemberExpression","start":41110,"end":41118,"object":{"type":"Identifier","start":41110,"end":41113,"name":"ref"},"property":{"type":"Identifier","start":41114,"end":41118,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":41137,"end":41306,"declarations":[{"type":"VariableDeclarator","start":41143,"end":41305,"id":{"type":"Identifier","start":41143,"end":41160,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41163,"end":41305,"properties":[{"type":"Property","start":41186,"end":41196,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41186,"end":41188,"name":"id"},"value":{"type":"MemberExpression","start":41190,"end":41196,"object":{"type":"Identifier","start":41190,"end":41193,"name":"ref"},"property":{"type":"Identifier","start":41194,"end":41196,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":41219,"end":41223,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41219,"end":41223,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41219,"end":41223,"name":"path"}},{"type":"Property","start":41246,"end":41249,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41246,"end":41249,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41246,"end":41249,"name":"ref"}},{"type":"Property","start":41272,"end":41286,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41272,"end":41280,"name":"isExists"},"value":{"type":"Literal","start":41282,"end":41286,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41324,"end":41362,"argument":{"type":"ObjectExpression","start":41331,"end":41361,"properties":[{"type":"SpreadElement","start":41333,"end":41340,"argument":{"type":"Identifier","start":41336,"end":41340,"name":"data"}},{"type":"Property","start":41342,"end":41359,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41342,"end":41359,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41342,"end":41359,"name":"firestoreMetadata"}}]}}]},"alternate":{"type":"BlockStatement","start":41396,"end":41845,"body":[{"type":"VariableDeclaration","start":41484,"end":41527,"declarations":[{"type":"VariableDeclarator","start":41490,"end":41526,"id":{"type":"Identifier","start":41490,"end":41494,"name":"path"},"init":{"type":"BinaryExpression","start":41497,"end":41526,"left":{"type":"BinaryExpression","start":41497,"end":41521,"left":{"type":"MemberExpression","start":41497,"end":41515,"object":{"type":"Identifier","start":41497,"end":41510,"name":"collectionRef"},"property":{"type":"Identifier","start":41511,"end":41515,"name":"path"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":41518,"end":41521,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":41524,"end":41526,"name":"id"}}}],"kind":"const"},{"type":"ExpressionStatement","start":41545,"end":41591,"expression":{"type":"AssignmentExpression","start":41545,"end":41590,"operator":"=","left":{"type":"Identifier","start":41545,"end":41548,"name":"ref"},"right":{"type":"CallExpression","start":41551,"end":41590,"callee":{"type":"Identifier","start":41551,"end":41565,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":41566,"end":41570,"name":"path"},{"type":"MemberExpression","start":41572,"end":41589,"object":{"type":"MemberExpression","start":41572,"end":41579,"object":{"type":"ThisExpression","start":41572,"end":41576},"property":{"type":"Identifier","start":41577,"end":41579,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":41580,"end":41589,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":41609,"end":41774,"declarations":[{"type":"VariableDeclarator","start":41615,"end":41773,"id":{"type":"Identifier","start":41615,"end":41632,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41635,"end":41773,"properties":[{"type":"Property","start":41658,"end":41664,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41658,"end":41660,"name":"id"},"value":{"type":"Identifier","start":41662,"end":41664,"name":"id"},"kind":"init"},{"type":"Property","start":41687,"end":41690,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41687,"end":41690,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41687,"end":41690,"name":"ref"}},{"type":"Property","start":41713,"end":41717,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41713,"end":41717,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41713,"end":41717,"name":"path"}},{"type":"Property","start":41740,"end":41754,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41740,"end":41748,"name":"isExists"},"value":{"type":"Literal","start":41750,"end":41754,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41792,"end":41830,"argument":{"type":"ObjectExpression","start":41799,"end":41829,"properties":[{"type":"SpreadElement","start":41801,"end":41808,"argument":{"type":"Identifier","start":41804,"end":41808,"name":"data"}},{"type":"Property","start":41810,"end":41827,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41810,"end":41827,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41810,"end":41827,"name":"firestoreMetadata"}}]}}]}}]}}],"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":41869,"end":41895,"argument":{"type":"CallExpression","start":41876,"end":41894,"callee":{"type":"MemberExpression","start":41876,"end":41885,"object":{"type":"Identifier","start":41876,"end":41880,"name":"res$"},"property":{"type":"Identifier","start":41881,"end":41885,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41886,"end":41893,"callee":{"type":"Identifier","start":41886,"end":41890,"name":"take"},"arguments":[{"type":"Literal","start":41891,"end":41892,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":41984,"end":42187,"static":false,"computed":false,"key":{"type":"Identifier","start":41984,"end":41997,"name":"updateSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":41997,"end":42187,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41998,"end":42002,"name":"data"},{"type":"Identifier","start":42004,"end":42010,"name":"docRef"},{"type":"AssignmentPattern","start":42012,"end":42036,"left":{"type":"Identifier","start":42012,"end":42029,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42032,"end":42036,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":42038,"end":42187,"body":[{"type":"IfStatement","start":42049,"end":42134,"test":{"type":"Identifier","start":42053,"end":42070,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42072,"end":42134,"body":[{"type":"ExpressionStatement","start":42087,"end":42123,"expression":{"type":"AssignmentExpression","start":42087,"end":42122,"operator":"=","left":{"type":"Identifier","start":42087,"end":42091,"name":"data"},"right":{"type":"CallExpression","start":42094,"end":42122,"callee":{"type":"Identifier","start":42094,"end":42109,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42110,"end":42114,"name":"data"},{"type":"Literal","start":42116,"end":42121,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":42144,"end":42180,"argument":{"type":"CallExpression","start":42151,"end":42179,"callee":{"type":"MemberExpression","start":42151,"end":42165,"object":{"type":"MemberExpression","start":42151,"end":42158,"object":{"type":"ThisExpression","start":42151,"end":42155},"property":{"type":"Identifier","start":42156,"end":42158,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42159,"end":42165,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42166,"end":42172,"name":"docRef"},{"type":"Identifier","start":42174,"end":42178,"name":"data"}],"optional":false}}]}}},{"type":"MethodDefinition","start":42264,"end":43869,"static":false,"computed":false,"key":{"type":"Identifier","start":42264,"end":42287,"name":"updateDeepToBatchHelper"},"kind":"method","value":{"type":"FunctionExpression","start":42287,"end":43869,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42288,"end":42292,"name":"data"},{"type":"Identifier","start":42294,"end":42300,"name":"docRef"},{"type":"AssignmentPattern","start":42302,"end":42327,"left":{"type":"Identifier","start":42302,"end":42322,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":42325,"end":42327,"elements":[]}},{"type":"AssignmentPattern","start":42329,"end":42353,"left":{"type":"Identifier","start":42329,"end":42346,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42349,"end":42353,"value":true,"raw":"true"}},{"type":"Identifier","start":42355,"end":42360,"name":"batch"}],"body":{"type":"BlockStatement","start":42362,"end":43869,"body":[{"type":"IfStatement","start":42373,"end":42462,"test":{"type":"BinaryExpression","start":42377,"end":42396,"left":{"type":"Identifier","start":42377,"end":42382,"name":"batch"},"operator":"===","right":{"type":"Identifier","start":42387,"end":42396,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":42398,"end":42462,"body":[{"type":"ExpressionStatement","start":42413,"end":42451,"expression":{"type":"AssignmentExpression","start":42413,"end":42450,"operator":"=","left":{"type":"Identifier","start":42413,"end":42418,"name":"batch"},"right":{"type":"CallExpression","start":42421,"end":42450,"callee":{"type":"Identifier","start":42421,"end":42431,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":42432,"end":42449,"object":{"type":"MemberExpression","start":42432,"end":42439,"object":{"type":"ThisExpression","start":42432,"end":42436},"property":{"type":"Identifier","start":42437,"end":42439,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42440,"end":42449,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":42472,"end":42557,"test":{"type":"Identifier","start":42476,"end":42493,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42495,"end":42557,"body":[{"type":"ExpressionStatement","start":42510,"end":42546,"expression":{"type":"AssignmentExpression","start":42510,"end":42545,"operator":"=","left":{"type":"Identifier","start":42510,"end":42514,"name":"data"},"right":{"type":"CallExpression","start":42517,"end":42545,"callee":{"type":"Identifier","start":42517,"end":42532,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42533,"end":42537,"name":"data"},{"type":"Literal","start":42539,"end":42544,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":42567,"end":42655,"declarations":[{"type":"VariableDeclarator","start":42573,"end":42654,"id":{"type":"Identifier","start":42573,"end":42578,"name":"split"},"init":{"type":"CallExpression","start":42581,"end":42654,"callee":{"type":"MemberExpression","start":42581,"end":42626,"object":{"type":"ThisExpression","start":42581,"end":42585},"property":{"type":"Identifier","start":42586,"end":42626,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42627,"end":42631,"name":"data"},{"type":"Identifier","start":42633,"end":42653,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42665,"end":42701,"declarations":[{"type":"VariableDeclarator","start":42671,"end":42700,"id":{"type":"Identifier","start":42671,"end":42681,"name":"currentDoc"},"init":{"type":"MemberExpression","start":42684,"end":42700,"object":{"type":"Identifier","start":42684,"end":42689,"name":"split"},"property":{"type":"Identifier","start":42690,"end":42700,"name":"currentDoc"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42711,"end":42755,"declarations":[{"type":"VariableDeclarator","start":42717,"end":42754,"id":{"type":"Identifier","start":42717,"end":42731,"name":"subCollections"},"init":{"type":"MemberExpression","start":42734,"end":42754,"object":{"type":"Identifier","start":42734,"end":42739,"name":"split"},"property":{"type":"Identifier","start":42740,"end":42754,"name":"subCollections"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":42818,"end":42851,"expression":{"type":"CallExpression","start":42818,"end":42850,"callee":{"type":"MemberExpression","start":42818,"end":42830,"object":{"type":"Identifier","start":42818,"end":42823,"name":"batch"},"property":{"type":"Identifier","start":42824,"end":42830,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42831,"end":42837,"name":"docRef"},{"type":"Identifier","start":42839,"end":42849,"name":"currentDoc"}],"optional":false}},{"type":"ForOfStatement","start":42861,"end":43839,"await":false,"left":{"type":"VariableDeclaration","start":42866,"end":42909,"declarations":[{"type":"VariableDeclarator","start":42872,"end":42909,"id":{"type":"ArrayPattern","start":42872,"end":42909,"elements":[{"type":"Identifier","start":42873,"end":42889,"name":"subCollectionKey"},{"type":"Identifier","start":42891,"end":42908,"name":"subDocUpdateValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":42913,"end":42943,"callee":{"type":"MemberExpression","start":42913,"end":42927,"object":{"type":"Identifier","start":42913,"end":42919,"name":"Object"},"property":{"type":"Identifier","start":42920,"end":42927,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42928,"end":42942,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":42945,"end":43839,"body":[{"type":"VariableDeclaration","start":42960,"end":42988,"declarations":[{"type":"VariableDeclarator","start":42964,"end":42987,"id":{"type":"Identifier","start":42964,"end":42987,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":43042,"end":43055,"declarations":[{"type":"VariableDeclarator","start":43046,"end":43054,"id":{"type":"Identifier","start":43046,"end":43054,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":43069,"end":43351,"test":{"type":"Identifier","start":43073,"end":43093,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":43095,"end":43351,"body":[{"type":"ExpressionStatement","start":43114,"end":43228,"expression":{"type":"AssignmentExpression","start":43114,"end":43227,"operator":"=","left":{"type":"Identifier","start":43114,"end":43137,"name":"subSubCollectionWriters"},"right":{"type":"ChainExpression","start":43140,"end":43227,"expression":{"type":"MemberExpression","start":43140,"end":43227,"object":{"type":"CallExpression","start":43140,"end":43211,"callee":{"type":"MemberExpression","start":43140,"end":43165,"object":{"type":"Identifier","start":43140,"end":43160,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43161,"end":43165,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43166,"end":43210,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43166,"end":43173,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43177,"end":43210,"left":{"type":"MemberExpression","start":43177,"end":43189,"object":{"type":"Identifier","start":43177,"end":43184,"name":"subColl"},"property":{"type":"Identifier","start":43185,"end":43189,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43194,"end":43210,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":43213,"end":43227,"name":"subCollections"},"computed":false,"optional":true}}}},{"type":"ExpressionStatement","start":43246,"end":43336,"expression":{"type":"AssignmentExpression","start":43246,"end":43335,"operator":"=","left":{"type":"Identifier","start":43246,"end":43254,"name":"subDocId"},"right":{"type":"ChainExpression","start":43257,"end":43335,"expression":{"type":"MemberExpression","start":43257,"end":43335,"object":{"type":"CallExpression","start":43257,"end":43328,"callee":{"type":"MemberExpression","start":43257,"end":43282,"object":{"type":"Identifier","start":43257,"end":43277,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43278,"end":43282,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43283,"end":43327,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43283,"end":43290,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43294,"end":43327,"left":{"type":"MemberExpression","start":43294,"end":43306,"object":{"type":"Identifier","start":43294,"end":43301,"name":"subColl"},"property":{"type":"Identifier","start":43302,"end":43306,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43311,"end":43327,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":43330,"end":43335,"name":"docId"},"computed":false,"optional":true}}}}]},"alternate":null},{"type":"ExpressionStatement","start":43365,"end":43430,"expression":{"type":"AssignmentExpression","start":43365,"end":43429,"operator":"=","left":{"type":"Identifier","start":43365,"end":43373,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43376,"end":43429,"test":{"type":"BinaryExpression","start":43376,"end":43398,"left":{"type":"Identifier","start":43376,"end":43384,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":43389,"end":43398,"name":"undefined"}},"consequent":{"type":"Identifier","start":43401,"end":43409,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":43412,"end":43429,"object":{"type":"ThisExpression","start":43412,"end":43416},"property":{"type":"Identifier","start":43417,"end":43429,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":43560,"end":43625,"declarations":[{"type":"VariableDeclarator","start":43566,"end":43624,"id":{"type":"Identifier","start":43566,"end":43579,"name":"subCollection"},"init":{"type":"CallExpression","start":43582,"end":43624,"callee":{"type":"Identifier","start":43582,"end":43598,"name":"getSubCollection"},"arguments":[{"type":"Identifier","start":43599,"end":43605,"name":"docRef"},{"type":"Identifier","start":43607,"end":43623,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43639,"end":43697,"declarations":[{"type":"VariableDeclarator","start":43645,"end":43696,"id":{"type":"Identifier","start":43645,"end":43653,"name":"subDocFs"},"init":{"type":"CallExpression","start":43656,"end":43696,"callee":{"type":"Identifier","start":43656,"end":43671,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":43672,"end":43685,"name":"subCollection"},{"type":"Identifier","start":43687,"end":43695,"name":"subDocId"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":43711,"end":43828,"expression":{"type":"AssignmentExpression","start":43711,"end":43827,"operator":"=","left":{"type":"Identifier","start":43711,"end":43716,"name":"batch"},"right":{"type":"CallExpression","start":43719,"end":43827,"callee":{"type":"MemberExpression","start":43719,"end":43747,"object":{"type":"ThisExpression","start":43719,"end":43723},"property":{"type":"Identifier","start":43724,"end":43747,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43748,"end":43765,"name":"subDocUpdateValue"},{"type":"Identifier","start":43767,"end":43775,"name":"subDocFs"},{"type":"Identifier","start":43777,"end":43800,"name":"subSubCollectionWriters"},{"type":"Identifier","start":43802,"end":43819,"name":"isAddModifiedDate"},{"type":"Identifier","start":43821,"end":43826,"name":"batch"}],"optional":false}}}]}},{"type":"ReturnStatement","start":43849,"end":43862,"argument":{"type":"Identifier","start":43856,"end":43861,"name":"batch"}}]}}},{"type":"MethodDefinition","start":44340,"end":46527,"static":false,"computed":false,"key":{"type":"Identifier","start":44340,"end":44377,"name":"getBatchFromTransferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":44377,"end":46527,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":44378,"end":44391,"name":"previousArray"},{"type":"Identifier","start":44393,"end":44405,"name":"currentArray"},{"type":"Identifier","start":44407,"end":44420,"name":"previousIndex"},{"type":"Identifier","start":44422,"end":44434,"name":"currentIndex"},{"type":"Identifier","start":44436,"end":44452,"name":"currentArrayName"},{"type":"Identifier","start":44454,"end":44485,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":44487,"end":44525,"left":{"type":"Identifier","start":44487,"end":44518,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":44521,"end":44525,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":44527,"end":44542,"left":{"type":"Identifier","start":44527,"end":44534,"name":"useCopy"},"right":{"type":"Literal","start":44537,"end":44542,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":44544,"end":46527,"body":[{"type":"VariableDeclaration","start":44555,"end":44577,"declarations":[{"type":"VariableDeclarator","start":44559,"end":44576,"id":{"type":"Identifier","start":44559,"end":44576,"name":"usedPreviousArray"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":44587,"end":44608,"declarations":[{"type":"VariableDeclarator","start":44591,"end":44607,"id":{"type":"Identifier","start":44591,"end":44607,"name":"usedCurrentArray"},"init":null}],"kind":"let"},{"type":"IfStatement","start":44618,"end":44896,"test":{"type":"Identifier","start":44622,"end":44629,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":44631,"end":44775,"body":[{"type":"ExpressionStatement","start":44646,"end":44699,"expression":{"type":"AssignmentExpression","start":44646,"end":44698,"operator":"=","left":{"type":"Identifier","start":44646,"end":44663,"name":"usedPreviousArray"},"right":{"type":"CallExpression","start":44666,"end":44698,"callee":{"type":"MemberExpression","start":44666,"end":44679,"object":{"type":"Identifier","start":44666,"end":44672,"name":"Object"},"property":{"type":"Identifier","start":44673,"end":44679,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44680,"end":44682,"elements":[]},{"type":"Identifier","start":44684,"end":44697,"name":"previousArray"}],"optional":false}}},{"type":"ExpressionStatement","start":44713,"end":44764,"expression":{"type":"AssignmentExpression","start":44713,"end":44763,"operator":"=","left":{"type":"Identifier","start":44713,"end":44729,"name":"usedCurrentArray"},"right":{"type":"CallExpression","start":44732,"end":44763,"callee":{"type":"MemberExpression","start":44732,"end":44745,"object":{"type":"Identifier","start":44732,"end":44738,"name":"Object"},"property":{"type":"Identifier","start":44739,"end":44745,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44746,"end":44748,"elements":[]},{"type":"Identifier","start":44750,"end":44762,"name":"currentArray"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":44790,"end":44896,"body":[{"type":"ExpressionStatement","start":44805,"end":44839,"expression":{"type":"AssignmentExpression","start":44805,"end":44838,"operator":"=","left":{"type":"Identifier","start":44805,"end":44822,"name":"usedPreviousArray"},"right":{"type":"Identifier","start":44825,"end":44838,"name":"previousArray"}}},{"type":"ExpressionStatement","start":44853,"end":44885,"expression":{"type":"AssignmentExpression","start":44853,"end":44884,"operator":"=","left":{"type":"Identifier","start":44853,"end":44869,"name":"usedCurrentArray"},"right":{"type":"Identifier","start":44872,"end":44884,"name":"currentArray"}}}]}},{"type":"ExpressionStatement","start":44906,"end":44990,"expression":{"type":"CallExpression","start":44906,"end":44989,"callee":{"type":"Identifier","start":44906,"end":44923,"name":"transferArrayItem"},"arguments":[{"type":"Identifier","start":44924,"end":44941,"name":"usedPreviousArray"},{"type":"Identifier","start":44943,"end":44959,"name":"usedCurrentArray"},{"type":"Identifier","start":44961,"end":44974,"name":"previousIndex"},{"type":"Identifier","start":44976,"end":44988,"name":"currentIndex"}],"optional":false}},{"type":"VariableDeclaration","start":45000,"end":45044,"declarations":[{"type":"VariableDeclarator","start":45006,"end":45043,"id":{"type":"Identifier","start":45006,"end":45011,"name":"batch"},"init":{"type":"CallExpression","start":45014,"end":45043,"callee":{"type":"Identifier","start":45014,"end":45024,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":45025,"end":45042,"object":{"type":"MemberExpression","start":45025,"end":45032,"object":{"type":"ThisExpression","start":45025,"end":45029},"property":{"type":"Identifier","start":45030,"end":45032,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45033,"end":45042,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45054,"end":45762,"test":{"type":"BinaryExpression","start":45058,"end":45103,"left":{"type":"Identifier","start":45058,"end":45089,"name":"additionalDataUpdateOnMovedItem"},"operator":"!==","right":{"type":"Identifier","start":45094,"end":45103,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":45105,"end":45762,"body":[{"type":"VariableDeclaration","start":45120,"end":45169,"declarations":[{"type":"VariableDeclarator","start":45126,"end":45168,"id":{"type":"Identifier","start":45126,"end":45135,"name":"movedItem"},"init":{"type":"MemberExpression","start":45138,"end":45168,"object":{"type":"Identifier","start":45138,"end":45154,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45155,"end":45167,"name":"currentIndex"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45183,"end":45236,"declarations":[{"type":"VariableDeclarator","start":45189,"end":45235,"id":{"type":"Identifier","start":45189,"end":45201,"name":"movedItemRef"},"init":{"type":"MemberExpression","start":45204,"end":45235,"object":{"type":"MemberExpression","start":45204,"end":45231,"object":{"type":"Identifier","start":45204,"end":45213,"name":"movedItem"},"property":{"type":"Identifier","start":45214,"end":45231,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45232,"end":45235,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45250,"end":45331,"declarations":[{"type":"VariableDeclarator","start":45256,"end":45330,"id":{"type":"Identifier","start":45256,"end":45260,"name":"data"},"init":{"type":"ObjectExpression","start":45263,"end":45330,"properties":[{"type":"SpreadElement","start":45265,"end":45299,"argument":{"type":"Identifier","start":45268,"end":45299,"name":"additionalDataUpdateOnMovedItem"}},{"type":"Property","start":45301,"end":45328,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45301,"end":45310,"name":"groupName"},"value":{"type":"Identifier","start":45312,"end":45328,"name":"currentArrayName"},"kind":"init"}]}}],"kind":"const"},{"type":"IfStatement","start":45345,"end":45430,"test":{"type":"UnaryExpression","start":45349,"end":45357,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45350,"end":45357,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45359,"end":45430,"body":[{"type":"ExpressionStatement","start":45378,"end":45415,"expression":{"type":"CallExpression","start":45378,"end":45414,"callee":{"type":"Identifier","start":45378,"end":45391,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":45392,"end":45401,"name":"movedItem"},{"type":"Identifier","start":45403,"end":45407,"name":"data"},{"type":"Literal","start":45409,"end":45413,"value":true,"raw":"true"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":45444,"end":45704,"test":{"type":"Identifier","start":45448,"end":45479,"name":"isUpdateModifiedDateOnMovedItem"},"consequent":{"type":"BlockStatement","start":45481,"end":45704,"body":[{"type":"VariableDeclaration","start":45500,"end":45524,"declarations":[{"type":"VariableDeclarator","start":45506,"end":45523,"id":{"type":"Identifier","start":45506,"end":45510,"name":"date"},"init":{"type":"NewExpression","start":45513,"end":45523,"callee":{"type":"Identifier","start":45517,"end":45521,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":45542,"end":45576,"expression":{"type":"CallExpression","start":45542,"end":45575,"callee":{"type":"Identifier","start":45542,"end":45557,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45558,"end":45562,"name":"data"},{"type":"Literal","start":45564,"end":45568,"value":true,"raw":"true"},{"type":"Identifier","start":45570,"end":45574,"name":"date"}],"optional":false}},{"type":"IfStatement","start":45594,"end":45689,"test":{"type":"UnaryExpression","start":45598,"end":45606,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45599,"end":45606,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45608,"end":45689,"body":[{"type":"ExpressionStatement","start":45631,"end":45670,"expression":{"type":"CallExpression","start":45631,"end":45669,"callee":{"type":"Identifier","start":45631,"end":45646,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45647,"end":45656,"name":"movedItem"},{"type":"Literal","start":45658,"end":45662,"value":true,"raw":"true"},{"type":"Identifier","start":45664,"end":45668,"name":"date"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":45718,"end":45751,"expression":{"type":"CallExpression","start":45718,"end":45750,"callee":{"type":"MemberExpression","start":45718,"end":45730,"object":{"type":"Identifier","start":45718,"end":45723,"name":"batch"},"property":{"type":"Identifier","start":45724,"end":45730,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45731,"end":45743,"name":"movedItemRef"},{"type":"Identifier","start":45745,"end":45749,"name":"data"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":45772,"end":45843,"declarations":[{"type":"VariableDeclarator","start":45778,"end":45842,"id":{"type":"Identifier","start":45778,"end":45803,"name":"currentArraySliceToUpdate"},"init":{"type":"CallExpression","start":45806,"end":45842,"callee":{"type":"MemberExpression","start":45806,"end":45828,"object":{"type":"Identifier","start":45806,"end":45822,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45823,"end":45828,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45829,"end":45841,"name":"currentIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45853,"end":45874,"declarations":[{"type":"VariableDeclarator","start":45857,"end":45873,"id":{"type":"Identifier","start":45857,"end":45858,"name":"i"},"init":{"type":"Identifier","start":45861,"end":45873,"name":"currentIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":45884,"end":46133,"await":false,"left":{"type":"VariableDeclaration","start":45889,"end":45899,"declarations":[{"type":"VariableDeclarator","start":45895,"end":45899,"id":{"type":"Identifier","start":45895,"end":45899,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":45903,"end":45928,"name":"currentArraySliceToUpdate"},"body":{"type":"BlockStatement","start":45930,"end":46133,"body":[{"type":"ExpressionStatement","start":45972,"end":46027,"expression":{"type":"CallExpression","start":45972,"end":46026,"callee":{"type":"MemberExpression","start":45972,"end":45984,"object":{"type":"Identifier","start":45972,"end":45977,"name":"batch"},"property":{"type":"Identifier","start":45978,"end":45984,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":45985,"end":46011,"object":{"type":"MemberExpression","start":45985,"end":46007,"object":{"type":"Identifier","start":45985,"end":45989,"name":"item"},"property":{"type":"Identifier","start":45990,"end":46007,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46008,"end":46011,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46013,"end":46025,"properties":[{"type":"Property","start":46015,"end":46023,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46015,"end":46020,"name":"index"},"value":{"type":"Identifier","start":46022,"end":46023,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46041,"end":46104,"test":{"type":"UnaryExpression","start":46045,"end":46053,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46046,"end":46053,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46055,"end":46104,"body":[{"type":"ExpressionStatement","start":46074,"end":46089,"expression":{"type":"AssignmentExpression","start":46074,"end":46088,"operator":"=","left":{"type":"MemberExpression","start":46074,"end":46084,"object":{"type":"Identifier","start":46074,"end":46078,"name":"item"},"property":{"type":"Identifier","start":46079,"end":46084,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46087,"end":46088,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46118,"end":46122,"expression":{"type":"UpdateExpression","start":46118,"end":46121,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46118,"end":46119,"name":"i"}}}]}},{"type":"VariableDeclaration","start":46143,"end":46213,"declarations":[{"type":"VariableDeclarator","start":46149,"end":46212,"id":{"type":"Identifier","start":46149,"end":46171,"name":"prevArraySliceToUpdate"},"init":{"type":"CallExpression","start":46174,"end":46212,"callee":{"type":"MemberExpression","start":46174,"end":46197,"object":{"type":"Identifier","start":46174,"end":46191,"name":"usedPreviousArray"},"property":{"type":"Identifier","start":46192,"end":46197,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46198,"end":46211,"name":"previousIndex"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":46223,"end":46241,"expression":{"type":"AssignmentExpression","start":46223,"end":46240,"operator":"=","left":{"type":"Identifier","start":46223,"end":46224,"name":"i"},"right":{"type":"Identifier","start":46227,"end":46240,"name":"previousIndex"}}},{"type":"ForOfStatement","start":46251,"end":46497,"await":false,"left":{"type":"VariableDeclaration","start":46256,"end":46266,"declarations":[{"type":"VariableDeclarator","start":46262,"end":46266,"id":{"type":"Identifier","start":46262,"end":46266,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46270,"end":46292,"name":"prevArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46294,"end":46497,"body":[{"type":"ExpressionStatement","start":46336,"end":46391,"expression":{"type":"CallExpression","start":46336,"end":46390,"callee":{"type":"MemberExpression","start":46336,"end":46348,"object":{"type":"Identifier","start":46336,"end":46341,"name":"batch"},"property":{"type":"Identifier","start":46342,"end":46348,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46349,"end":46375,"object":{"type":"MemberExpression","start":46349,"end":46371,"object":{"type":"Identifier","start":46349,"end":46353,"name":"item"},"property":{"type":"Identifier","start":46354,"end":46371,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46372,"end":46375,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46377,"end":46389,"properties":[{"type":"Property","start":46379,"end":46387,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46379,"end":46384,"name":"index"},"value":{"type":"Identifier","start":46386,"end":46387,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46405,"end":46468,"test":{"type":"UnaryExpression","start":46409,"end":46417,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46410,"end":46417,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46419,"end":46468,"body":[{"type":"ExpressionStatement","start":46438,"end":46453,"expression":{"type":"AssignmentExpression","start":46438,"end":46452,"operator":"=","left":{"type":"MemberExpression","start":46438,"end":46448,"object":{"type":"Identifier","start":46438,"end":46442,"name":"item"},"property":{"type":"Identifier","start":46443,"end":46448,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46451,"end":46452,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46482,"end":46486,"expression":{"type":"UpdateExpression","start":46482,"end":46485,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46482,"end":46483,"name":"i"}}}]}},{"type":"ReturnStatement","start":46507,"end":46520,"argument":{"type":"Identifier","start":46514,"end":46519,"name":"batch"}}]}}},{"type":"MethodDefinition","start":46660,"end":46808,"static":false,"computed":false,"key":{"type":"Identifier","start":46660,"end":46681,"name":"deleteMultipleSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":46681,"end":46808,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46682,"end":46689,"name":"docRefs"}],"body":{"type":"BlockStatement","start":46691,"end":46808,"body":[{"type":"VariableDeclaration","start":46702,"end":46759,"declarations":[{"type":"VariableDeclarator","start":46708,"end":46758,"id":{"type":"Identifier","start":46708,"end":46713,"name":"batch"},"init":{"type":"CallExpression","start":46716,"end":46758,"callee":{"type":"MemberExpression","start":46716,"end":46749,"object":{"type":"ThisExpression","start":46716,"end":46720},"property":{"type":"Identifier","start":46721,"end":46749,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46750,"end":46757,"name":"docRefs"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":46769,"end":46801,"argument":{"type":"CallExpression","start":46776,"end":46800,"callee":{"type":"MemberExpression","start":46776,"end":46793,"object":{"type":"ThisExpression","start":46776,"end":46780},"property":{"type":"Identifier","start":46781,"end":46793,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46794,"end":46799,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":46814,"end":47009,"static":false,"computed":false,"key":{"type":"Identifier","start":46814,"end":46842,"name":"getDeleteMultipleSimpleBatch"},"kind":"method","value":{"type":"FunctionExpression","start":46842,"end":47009,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46843,"end":46850,"name":"docRefs"},{"type":"AssignmentPattern","start":46852,"end":46889,"left":{"type":"Identifier","start":46852,"end":46857,"name":"batch"},"right":{"type":"CallExpression","start":46860,"end":46889,"callee":{"type":"Identifier","start":46860,"end":46870,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":46871,"end":46888,"object":{"type":"MemberExpression","start":46871,"end":46878,"object":{"type":"ThisExpression","start":46871,"end":46875},"property":{"type":"Identifier","start":46876,"end":46878,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46879,"end":46888,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":46891,"end":47009,"body":[{"type":"ExpressionStatement","start":46902,"end":46979,"expression":{"type":"CallExpression","start":46902,"end":46978,"callee":{"type":"MemberExpression","start":46902,"end":46917,"object":{"type":"Identifier","start":46902,"end":46909,"name":"docRefs"},"property":{"type":"Identifier","start":46910,"end":46917,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":46918,"end":46977,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46919,"end":46925,"name":"docRef"}],"body":{"type":"BlockStatement","start":46930,"end":46977,"body":[{"type":"ExpressionStatement","start":46945,"end":46966,"expression":{"type":"CallExpression","start":46945,"end":46965,"callee":{"type":"MemberExpression","start":46945,"end":46957,"object":{"type":"Identifier","start":46945,"end":46950,"name":"batch"},"property":{"type":"Identifier","start":46951,"end":46957,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46958,"end":46964,"name":"docRef"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":46989,"end":47002,"argument":{"type":"Identifier","start":46996,"end":47001,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47296,"end":48975,"static":false,"computed":false,"key":{"type":"Identifier","start":47296,"end":47327,"name":"removeDataExtrasRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":47327,"end":48975,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47328,"end":47334,"name":"dbItem"},{"type":"AssignmentPattern","start":47336,"end":47361,"left":{"type":"Identifier","start":47336,"end":47356,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":47359,"end":47361,"elements":[]}},{"type":"AssignmentPattern","start":47363,"end":47392,"left":{"type":"Identifier","start":47363,"end":47387,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":47390,"end":47392,"elements":[]}}],"body":{"type":"BlockStatement","start":47394,"end":48975,"body":[{"type":"VariableDeclaration","start":47502,"end":47584,"declarations":[{"type":"VariableDeclarator","start":47508,"end":47583,"id":{"type":"Identifier","start":47508,"end":47526,"name":"extraPropertyNames"},"init":{"type":"CallExpression","start":47529,"end":47583,"callee":{"type":"MemberExpression","start":47529,"end":47557,"object":{"type":"ArrayExpression","start":47529,"end":47550,"elements":[{"type":"Literal","start":47530,"end":47549,"value":"firestoreMetadata","raw":"'firestoreMetadata'"}]},"property":{"type":"Identifier","start":47551,"end":47557,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47558,"end":47582,"name":"additionalFieldsToRemove"}],"optional":false}}],"kind":"const"},{"type":"ForOfStatement","start":47630,"end":47741,"await":false,"left":{"type":"VariableDeclaration","start":47635,"end":47658,"declarations":[{"type":"VariableDeclarator","start":47641,"end":47658,"id":{"type":"Identifier","start":47641,"end":47658,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":47662,"end":47680,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":47682,"end":47741,"body":[{"type":"ExpressionStatement","start":47697,"end":47730,"expression":{"type":"UnaryExpression","start":47697,"end":47729,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":47704,"end":47729,"object":{"type":"Identifier","start":47704,"end":47710,"name":"dbItem"},"property":{"type":"Identifier","start":47711,"end":47728,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":47751,"end":48944,"expression":{"type":"CallExpression","start":47751,"end":48943,"callee":{"type":"MemberExpression","start":47751,"end":47779,"object":{"type":"Identifier","start":47751,"end":47771,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":47772,"end":47779,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47780,"end":48942,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47780,"end":47783,"name":"col"}],"body":{"type":"BlockStatement","start":47787,"end":48942,"body":[{"type":"IfStatement","start":47802,"end":48931,"test":{"type":"CallExpression","start":47806,"end":47837,"callee":{"type":"MemberExpression","start":47806,"end":47819,"object":{"type":"Identifier","start":47806,"end":47811,"name":"Array"},"property":{"type":"Identifier","start":47812,"end":47819,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":47820,"end":47836,"object":{"type":"Identifier","start":47820,"end":47826,"name":"dbItem"},"property":{"type":"MemberExpression","start":47827,"end":47835,"object":{"type":"Identifier","start":47827,"end":47830,"name":"col"},"property":{"type":"Identifier","start":47831,"end":47835,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":47839,"end":48467,"body":[{"type":"VariableDeclaration","start":47912,"end":47942,"declarations":[{"type":"VariableDeclarator","start":47918,"end":47941,"id":{"type":"Identifier","start":47918,"end":47922,"name":"docs"},"init":{"type":"MemberExpression","start":47925,"end":47941,"object":{"type":"Identifier","start":47925,"end":47931,"name":"dbItem"},"property":{"type":"MemberExpression","start":47932,"end":47940,"object":{"type":"Identifier","start":47932,"end":47935,"name":"col"},"property":{"type":"Identifier","start":47936,"end":47940,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":47960,"end":48452,"expression":{"type":"CallExpression","start":47960,"end":48451,"callee":{"type":"MemberExpression","start":47960,"end":47972,"object":{"type":"Identifier","start":47960,"end":47964,"name":"docs"},"property":{"type":"Identifier","start":47965,"end":47972,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47973,"end":48450,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47974,"end":47975,"name":"d"},{"type":"Identifier","start":47977,"end":47978,"name":"i"}],"body":{"type":"BlockStatement","start":47983,"end":48450,"body":[{"type":"IfStatement","start":48006,"end":48431,"test":{"type":"MemberExpression","start":48010,"end":48028,"object":{"type":"Identifier","start":48010,"end":48013,"name":"col"},"property":{"type":"Identifier","start":48014,"end":48028,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48030,"end":48166,"body":[{"type":"ExpressionStatement","start":48057,"end":48143,"expression":{"type":"CallExpression","start":48057,"end":48142,"callee":{"type":"MemberExpression","start":48057,"end":48093,"object":{"type":"ThisExpression","start":48057,"end":48061},"property":{"type":"Identifier","start":48062,"end":48093,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48094,"end":48095,"name":"d"},{"type":"MemberExpression","start":48097,"end":48115,"object":{"type":"Identifier","start":48097,"end":48100,"name":"col"},"property":{"type":"Identifier","start":48101,"end":48115,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48117,"end":48141,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48193,"end":48431,"body":[{"type":"ForOfStatement","start":48252,"end":48408,"await":false,"left":{"type":"VariableDeclaration","start":48257,"end":48280,"declarations":[{"type":"VariableDeclarator","start":48263,"end":48280,"id":{"type":"Identifier","start":48263,"end":48280,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48284,"end":48302,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48304,"end":48408,"body":[{"type":"ExpressionStatement","start":48335,"end":48381,"expression":{"type":"UnaryExpression","start":48335,"end":48380,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48342,"end":48380,"object":{"type":"MemberExpression","start":48342,"end":48361,"object":{"type":"MemberExpression","start":48342,"end":48358,"object":{"type":"Identifier","start":48342,"end":48348,"name":"dbItem"},"property":{"type":"MemberExpression","start":48349,"end":48357,"object":{"type":"Identifier","start":48349,"end":48352,"name":"col"},"property":{"type":"Identifier","start":48353,"end":48357,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48359,"end":48360,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":48362,"end":48379,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48486,"end":48931,"body":[{"type":"IfStatement","start":48539,"end":48916,"test":{"type":"MemberExpression","start":48543,"end":48561,"object":{"type":"Identifier","start":48543,"end":48546,"name":"col"},"property":{"type":"Identifier","start":48547,"end":48561,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48563,"end":48706,"body":[{"type":"ExpressionStatement","start":48586,"end":48687,"expression":{"type":"CallExpression","start":48586,"end":48686,"callee":{"type":"MemberExpression","start":48586,"end":48622,"object":{"type":"ThisExpression","start":48586,"end":48590},"property":{"type":"Identifier","start":48591,"end":48622,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":48623,"end":48639,"object":{"type":"Identifier","start":48623,"end":48629,"name":"dbItem"},"property":{"type":"MemberExpression","start":48630,"end":48638,"object":{"type":"Identifier","start":48630,"end":48633,"name":"col"},"property":{"type":"Identifier","start":48634,"end":48638,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},{"type":"MemberExpression","start":48641,"end":48659,"object":{"type":"Identifier","start":48641,"end":48644,"name":"col"},"property":{"type":"Identifier","start":48645,"end":48659,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48661,"end":48685,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48729,"end":48916,"body":[{"type":"ForOfStatement","start":48752,"end":48897,"await":false,"left":{"type":"VariableDeclaration","start":48757,"end":48780,"declarations":[{"type":"VariableDeclarator","start":48763,"end":48780,"id":{"type":"Identifier","start":48763,"end":48780,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48784,"end":48802,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48804,"end":48897,"body":[{"type":"ExpressionStatement","start":48831,"end":48874,"expression":{"type":"UnaryExpression","start":48831,"end":48873,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48838,"end":48873,"object":{"type":"MemberExpression","start":48838,"end":48854,"object":{"type":"Identifier","start":48838,"end":48844,"name":"dbItem"},"property":{"type":"MemberExpression","start":48845,"end":48853,"object":{"type":"Identifier","start":48845,"end":48848,"name":"col"},"property":{"type":"Identifier","start":48849,"end":48853,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48855,"end":48872,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":48954,"end":48968,"argument":{"type":"Identifier","start":48961,"end":48967,"name":"dbItem"}}]}}},{"type":"MethodDefinition","start":49301,"end":49657,"static":false,"computed":false,"key":{"type":"Identifier","start":49301,"end":49327,"name":"getDocumentReferencesDeep$"},"kind":"method","value":{"type":"FunctionExpression","start":49327,"end":49657,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49328,"end":49331,"name":"ref"},{"type":"AssignmentPattern","start":49333,"end":49358,"left":{"type":"Identifier","start":49333,"end":49353,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49356,"end":49358,"elements":[]}}],"body":{"type":"BlockStatement","start":49360,"end":49657,"body":[{"type":"IfStatement","start":49371,"end":49650,"test":{"type":"BinaryExpression","start":49375,"end":49407,"left":{"type":"Identifier","start":49375,"end":49378,"name":"ref"},"operator":"instanceof","right":{"type":"Identifier","start":49390,"end":49407,"name":"DocumentReference"}},"consequent":{"type":"BlockStatement","start":49409,"end":49507,"body":[{"type":"ReturnStatement","start":49424,"end":49496,"argument":{"type":"CallExpression","start":49431,"end":49495,"callee":{"type":"MemberExpression","start":49431,"end":49468,"object":{"type":"ThisExpression","start":49431,"end":49435},"property":{"type":"Identifier","start":49436,"end":49468,"name":"getDocumentReferencesFromDocRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49469,"end":49472,"name":"ref"},{"type":"Identifier","start":49474,"end":49494,"name":"subCollectionQueries"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49522,"end":49650,"body":[{"type":"ReturnStatement","start":49560,"end":49639,"argument":{"type":"CallExpression","start":49567,"end":49638,"callee":{"type":"MemberExpression","start":49567,"end":49611,"object":{"type":"ThisExpression","start":49567,"end":49571},"property":{"type":"Identifier","start":49572,"end":49611,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49612,"end":49615,"name":"ref"},{"type":"Identifier","start":49617,"end":49637,"name":"subCollectionQueries"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":49663,"end":50098,"static":false,"computed":false,"key":{"type":"Identifier","start":49663,"end":49695,"name":"getDocumentReferencesFromDocRef$"},"kind":"method","value":{"type":"FunctionExpression","start":49695,"end":50098,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49696,"end":49702,"name":"docRef"},{"type":"AssignmentPattern","start":49704,"end":49729,"left":{"type":"Identifier","start":49704,"end":49724,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49727,"end":49729,"elements":[]}}],"body":{"type":"BlockStatement","start":49731,"end":50098,"body":[{"type":"ReturnStatement","start":49742,"end":50091,"argument":{"type":"CallExpression","start":49749,"end":50090,"callee":{"type":"MemberExpression","start":49749,"end":49802,"object":{"type":"CallExpression","start":49749,"end":49797,"callee":{"type":"MemberExpression","start":49749,"end":49767,"object":{"type":"ThisExpression","start":49749,"end":49753},"property":{"type":"Identifier","start":49754,"end":49767,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49768,"end":49774,"name":"docRef"},{"type":"Identifier","start":49776,"end":49796,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":49798,"end":49802,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":49803,"end":49810,"callee":{"type":"Identifier","start":49803,"end":49807,"name":"take"},"arguments":[{"type":"Literal","start":49808,"end":49809,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":49812,"end":49893,"callee":{"type":"Identifier","start":49812,"end":49815,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":49816,"end":49892,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":49816,"end":49820,"name":"item"}],"body":{"type":"CallExpression","start":49824,"end":49892,"callee":{"type":"MemberExpression","start":49824,"end":49864,"object":{"type":"ThisExpression","start":49824,"end":49828},"property":{"type":"Identifier","start":49829,"end":49864,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49865,"end":49869,"name":"item"},{"type":"Identifier","start":49871,"end":49891,"name":"subCollectionQueries"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":49957,"end":50089,"callee":{"type":"Identifier","start":49957,"end":49960,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":49961,"end":50088,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49962,"end":49970,"name":"pathList"}],"body":{"type":"BlockStatement","start":49975,"end":50088,"body":[{"type":"ReturnStatement","start":49990,"end":50077,"argument":{"type":"CallExpression","start":49997,"end":50076,"callee":{"type":"MemberExpression","start":49997,"end":50027,"object":{"type":"Identifier","start":49997,"end":50005,"name":"pathList"},"property":{"type":"Identifier","start":50024,"end":50027,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50028,"end":50075,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50028,"end":50032,"name":"path"}],"body":{"type":"CallExpression","start":50036,"end":50075,"callee":{"type":"Identifier","start":50036,"end":50050,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50051,"end":50055,"name":"path"},{"type":"MemberExpression","start":50057,"end":50074,"object":{"type":"MemberExpression","start":50057,"end":50064,"object":{"type":"ThisExpression","start":50057,"end":50061},"property":{"type":"Identifier","start":50062,"end":50064,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50065,"end":50074,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":50104,"end":50920,"static":false,"computed":false,"key":{"type":"Identifier","start":50104,"end":50143,"name":"getDocumentReferencesFromCollectionRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50143,"end":50920,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50144,"end":50157,"name":"collectionRef"},{"type":"AssignmentPattern","start":50159,"end":50184,"left":{"type":"Identifier","start":50159,"end":50179,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50182,"end":50184,"elements":[]}}],"body":{"type":"BlockStatement","start":50186,"end":50920,"body":[{"type":"ReturnStatement","start":50197,"end":50913,"argument":{"type":"CallExpression","start":50204,"end":50912,"callee":{"type":"MemberExpression","start":50204,"end":50255,"object":{"type":"CallExpression","start":50204,"end":50250,"callee":{"type":"MemberExpression","start":50204,"end":50235,"object":{"type":"ThisExpression","start":50204,"end":50208},"property":{"type":"Identifier","start":50209,"end":50235,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50236,"end":50249,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":50251,"end":50255,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50289,"end":50296,"callee":{"type":"Identifier","start":50289,"end":50293,"name":"take"},"arguments":[{"type":"Literal","start":50294,"end":50295,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50298,"end":50528,"callee":{"type":"Identifier","start":50298,"end":50306,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":50307,"end":50527,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50308,"end":50313,"name":"items"}],"body":{"type":"BlockStatement","start":50318,"end":50527,"body":[{"type":"VariableDeclaration","start":50333,"end":50350,"declarations":[{"type":"VariableDeclarator","start":50337,"end":50349,"id":{"type":"Identifier","start":50337,"end":50349,"name":"docListeners"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":50364,"end":50467,"expression":{"type":"AssignmentExpression","start":50364,"end":50466,"operator":"=","left":{"type":"Identifier","start":50364,"end":50376,"name":"docListeners"},"right":{"type":"CallExpression","start":50379,"end":50466,"callee":{"type":"MemberExpression","start":50379,"end":50388,"object":{"type":"Identifier","start":50379,"end":50384,"name":"items"},"property":{"type":"Identifier","start":50385,"end":50388,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50389,"end":50465,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50389,"end":50393,"name":"item"}],"body":{"type":"CallExpression","start":50397,"end":50465,"callee":{"type":"MemberExpression","start":50397,"end":50415,"object":{"type":"ThisExpression","start":50397,"end":50401},"property":{"type":"Identifier","start":50402,"end":50415,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":50416,"end":50442,"object":{"type":"MemberExpression","start":50416,"end":50438,"object":{"type":"Identifier","start":50416,"end":50420,"name":"item"},"property":{"type":"Identifier","start":50421,"end":50438,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50439,"end":50442,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":50444,"end":50464,"name":"subCollectionQueries"}],"optional":false}}],"optional":false}}},{"type":"ReturnStatement","start":50481,"end":50516,"argument":{"type":"CallExpression","start":50488,"end":50515,"callee":{"type":"Identifier","start":50488,"end":50501,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":50502,"end":50514,"name":"docListeners"}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":50530,"end":50777,"callee":{"type":"Identifier","start":50530,"end":50533,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50534,"end":50776,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50535,"end":50540,"name":"items"}],"body":{"type":"BlockStatement","start":50545,"end":50776,"body":[{"type":"VariableDeclaration","start":50560,"end":50575,"declarations":[{"type":"VariableDeclarator","start":50564,"end":50574,"id":{"type":"Identifier","start":50564,"end":50569,"name":"paths"},"init":{"type":"ArrayExpression","start":50572,"end":50574,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":50589,"end":50738,"expression":{"type":"CallExpression","start":50589,"end":50737,"callee":{"type":"MemberExpression","start":50589,"end":50602,"object":{"type":"Identifier","start":50589,"end":50594,"name":"items"},"property":{"type":"Identifier","start":50595,"end":50602,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50603,"end":50736,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50603,"end":50607,"name":"item"}],"body":{"type":"BlockStatement","start":50611,"end":50736,"body":[{"type":"ExpressionStatement","start":50630,"end":50721,"expression":{"type":"AssignmentExpression","start":50630,"end":50720,"operator":"=","left":{"type":"Identifier","start":50630,"end":50635,"name":"paths"},"right":{"type":"CallExpression","start":50638,"end":50720,"callee":{"type":"MemberExpression","start":50638,"end":50650,"object":{"type":"Identifier","start":50638,"end":50643,"name":"paths"},"property":{"type":"Identifier","start":50644,"end":50650,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50651,"end":50719,"callee":{"type":"MemberExpression","start":50651,"end":50691,"object":{"type":"ThisExpression","start":50651,"end":50655},"property":{"type":"Identifier","start":50656,"end":50691,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50692,"end":50696,"name":"item"},{"type":"Identifier","start":50698,"end":50718,"name":"subCollectionQueries"}],"optional":false}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":50752,"end":50765,"argument":{"type":"Identifier","start":50759,"end":50764,"name":"paths"}}]}}],"optional":false},{"type":"CallExpression","start":50779,"end":50911,"callee":{"type":"Identifier","start":50779,"end":50782,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50783,"end":50910,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50784,"end":50792,"name":"pathList"}],"body":{"type":"BlockStatement","start":50797,"end":50910,"body":[{"type":"ReturnStatement","start":50812,"end":50899,"argument":{"type":"CallExpression","start":50819,"end":50898,"callee":{"type":"MemberExpression","start":50819,"end":50849,"object":{"type":"Identifier","start":50819,"end":50827,"name":"pathList"},"property":{"type":"Identifier","start":50846,"end":50849,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50850,"end":50897,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50850,"end":50854,"name":"path"}],"body":{"type":"CallExpression","start":50858,"end":50897,"callee":{"type":"Identifier","start":50858,"end":50872,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50873,"end":50877,"name":"path"},{"type":"MemberExpression","start":50879,"end":50896,"object":{"type":"MemberExpression","start":50879,"end":50886,"object":{"type":"ThisExpression","start":50879,"end":50883},"property":{"type":"Identifier","start":50884,"end":50886,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50887,"end":50896,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":51326,"end":51566,"static":false,"computed":false,"key":{"type":"Identifier","start":51326,"end":51355,"name":"getDocumentReferencesFromItem"},"kind":"method","value":{"type":"FunctionExpression","start":51355,"end":51566,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51356,"end":51360,"name":"item"},{"type":"AssignmentPattern","start":51362,"end":51387,"left":{"type":"Identifier","start":51362,"end":51382,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51385,"end":51387,"elements":[]}}],"body":{"type":"BlockStatement","start":51389,"end":51566,"body":[{"type":"VariableDeclaration","start":51400,"end":51483,"declarations":[{"type":"VariableDeclarator","start":51406,"end":51482,"id":{"type":"Identifier","start":51406,"end":51411,"name":"paths"},"init":{"type":"CallExpression","start":51414,"end":51482,"callee":{"type":"MemberExpression","start":51414,"end":51454,"object":{"type":"ThisExpression","start":51414,"end":51418},"property":{"type":"Identifier","start":51419,"end":51454,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51455,"end":51459,"name":"item"},{"type":"Identifier","start":51461,"end":51481,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":51493,"end":51559,"argument":{"type":"CallExpression","start":51500,"end":51558,"callee":{"type":"MemberExpression","start":51500,"end":51509,"object":{"type":"Identifier","start":51500,"end":51505,"name":"paths"},"property":{"type":"Identifier","start":51506,"end":51509,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51510,"end":51557,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":51510,"end":51514,"name":"path"}],"body":{"type":"CallExpression","start":51518,"end":51557,"callee":{"type":"Identifier","start":51518,"end":51532,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51533,"end":51537,"name":"path"},{"type":"MemberExpression","start":51539,"end":51556,"object":{"type":"MemberExpression","start":51539,"end":51546,"object":{"type":"ThisExpression","start":51539,"end":51543},"property":{"type":"Identifier","start":51544,"end":51546,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51547,"end":51556,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":51666,"end":53254,"static":false,"computed":false,"key":{"type":"Identifier","start":51666,"end":51701,"name":"getPathsFromItemDeepRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":51701,"end":53254,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51702,"end":51706,"name":"item"},{"type":"AssignmentPattern","start":51708,"end":51733,"left":{"type":"Identifier","start":51708,"end":51728,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51731,"end":51733,"elements":[]}}],"body":{"type":"BlockStatement","start":51735,"end":53254,"body":[{"type":"IfStatement","start":51746,"end":51880,"test":{"type":"LogicalExpression","start":51750,"end":51815,"left":{"type":"BinaryExpression","start":51750,"end":51778,"left":{"type":"Identifier","start":51750,"end":51770,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":51774,"end":51778,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":51782,"end":51815,"left":{"type":"MemberExpression","start":51782,"end":51809,"object":{"type":"Identifier","start":51782,"end":51802,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":51803,"end":51809,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":51814,"end":51815,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":51817,"end":51880,"body":[{"type":"ReturnStatement","start":51832,"end":51869,"argument":{"type":"ArrayExpression","start":51839,"end":51868,"elements":[{"type":"MemberExpression","start":51840,"end":51867,"object":{"type":"MemberExpression","start":51840,"end":51862,"object":{"type":"Identifier","start":51840,"end":51844,"name":"item"},"property":{"type":"Identifier","start":51845,"end":51862,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51863,"end":51867,"name":"path"},"computed":false,"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":51890,"end":51908,"declarations":[{"type":"VariableDeclarator","start":51894,"end":51907,"id":{"type":"Identifier","start":51894,"end":51902,"name":"pathList"},"init":{"type":"ArrayExpression","start":51905,"end":51907,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":51918,"end":51961,"expression":{"type":"CallExpression","start":51918,"end":51960,"callee":{"type":"MemberExpression","start":51918,"end":51931,"object":{"type":"Identifier","start":51918,"end":51926,"name":"pathList"},"property":{"type":"Identifier","start":51927,"end":51931,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":51932,"end":51959,"object":{"type":"MemberExpression","start":51932,"end":51954,"object":{"type":"Identifier","start":51932,"end":51936,"name":"item"},"property":{"type":"Identifier","start":51937,"end":51954,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51955,"end":51959,"name":"path"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":51971,"end":53221,"expression":{"type":"CallExpression","start":51971,"end":53220,"callee":{"type":"MemberExpression","start":51971,"end":51999,"object":{"type":"Identifier","start":51971,"end":51991,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":51992,"end":51999,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52000,"end":53219,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52000,"end":52003,"name":"col"}],"body":{"type":"BlockStatement","start":52007,"end":53219,"body":[{"type":"IfStatement","start":52022,"end":53208,"test":{"type":"LogicalExpression","start":52026,"end":52069,"left":{"type":"CallExpression","start":52026,"end":52055,"callee":{"type":"MemberExpression","start":52026,"end":52039,"object":{"type":"Identifier","start":52026,"end":52031,"name":"Array"},"property":{"type":"Identifier","start":52032,"end":52039,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52040,"end":52054,"object":{"type":"Identifier","start":52040,"end":52044,"name":"item"},"property":{"type":"MemberExpression","start":52045,"end":52053,"object":{"type":"Identifier","start":52045,"end":52048,"name":"col"},"property":{"type":"Identifier","start":52049,"end":52053,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":52059,"end":52069,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":52060,"end":52069,"object":{"type":"Identifier","start":52060,"end":52063,"name":"col"},"property":{"type":"Identifier","start":52064,"end":52069,"name":"docId"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52071,"end":52607,"body":[{"type":"VariableDeclaration","start":52181,"end":52210,"declarations":[{"type":"VariableDeclarator","start":52187,"end":52209,"id":{"type":"Identifier","start":52187,"end":52192,"name":"items"},"init":{"type":"MemberExpression","start":52195,"end":52209,"object":{"type":"Identifier","start":52195,"end":52199,"name":"item"},"property":{"type":"MemberExpression","start":52200,"end":52208,"object":{"type":"Identifier","start":52200,"end":52203,"name":"col"},"property":{"type":"Identifier","start":52204,"end":52208,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":52228,"end":52592,"expression":{"type":"CallExpression","start":52228,"end":52591,"callee":{"type":"MemberExpression","start":52228,"end":52241,"object":{"type":"Identifier","start":52228,"end":52233,"name":"items"},"property":{"type":"Identifier","start":52234,"end":52241,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52242,"end":52590,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52242,"end":52249,"name":"subItem"}],"body":{"type":"BlockStatement","start":52253,"end":52590,"body":[{"type":"IfStatement","start":52276,"end":52571,"test":{"type":"MemberExpression","start":52280,"end":52298,"object":{"type":"Identifier","start":52280,"end":52283,"name":"col"},"property":{"type":"Identifier","start":52284,"end":52298,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52300,"end":52448,"body":[{"type":"ExpressionStatement","start":52327,"end":52425,"expression":{"type":"AssignmentExpression","start":52327,"end":52424,"operator":"=","left":{"type":"Identifier","start":52327,"end":52335,"name":"pathList"},"right":{"type":"CallExpression","start":52338,"end":52424,"callee":{"type":"MemberExpression","start":52338,"end":52353,"object":{"type":"Identifier","start":52338,"end":52346,"name":"pathList"},"property":{"type":"Identifier","start":52347,"end":52353,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52354,"end":52423,"callee":{"type":"MemberExpression","start":52354,"end":52394,"object":{"type":"ThisExpression","start":52354,"end":52358},"property":{"type":"Identifier","start":52359,"end":52394,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52395,"end":52402,"name":"subItem"},{"type":"MemberExpression","start":52404,"end":52422,"object":{"type":"Identifier","start":52404,"end":52407,"name":"col"},"property":{"type":"Identifier","start":52408,"end":52422,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52475,"end":52571,"body":[{"type":"ExpressionStatement","start":52502,"end":52548,"expression":{"type":"CallExpression","start":52502,"end":52547,"callee":{"type":"MemberExpression","start":52502,"end":52515,"object":{"type":"Identifier","start":52502,"end":52510,"name":"pathList"},"property":{"type":"Identifier","start":52511,"end":52515,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52516,"end":52546,"object":{"type":"MemberExpression","start":52516,"end":52541,"object":{"type":"Identifier","start":52516,"end":52523,"name":"subItem"},"property":{"type":"Identifier","start":52524,"end":52541,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52542,"end":52546,"name":"path"},"computed":false,"optional":false}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":52626,"end":53208,"body":[{"type":"IfStatement","start":52679,"end":53193,"test":{"type":"MemberExpression","start":52683,"end":52701,"object":{"type":"Identifier","start":52683,"end":52686,"name":"col"},"property":{"type":"Identifier","start":52687,"end":52701,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52703,"end":52840,"body":[{"type":"ExpressionStatement","start":52726,"end":52821,"expression":{"type":"AssignmentExpression","start":52726,"end":52820,"operator":"=","left":{"type":"Identifier","start":52726,"end":52734,"name":"pathList"},"right":{"type":"CallExpression","start":52737,"end":52820,"callee":{"type":"MemberExpression","start":52737,"end":52752,"object":{"type":"Identifier","start":52737,"end":52745,"name":"pathList"},"property":{"type":"Identifier","start":52746,"end":52752,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52753,"end":52819,"callee":{"type":"MemberExpression","start":52753,"end":52793,"object":{"type":"ThisExpression","start":52753,"end":52757},"property":{"type":"Identifier","start":52758,"end":52793,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52794,"end":52798,"name":"item"},{"type":"MemberExpression","start":52800,"end":52818,"object":{"type":"Identifier","start":52800,"end":52803,"name":"col"},"property":{"type":"Identifier","start":52804,"end":52818,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52863,"end":53193,"body":[{"type":"VariableDeclaration","start":52886,"end":52917,"declarations":[{"type":"VariableDeclarator","start":52892,"end":52916,"id":{"type":"Identifier","start":52892,"end":52899,"name":"subItem"},"init":{"type":"MemberExpression","start":52902,"end":52916,"object":{"type":"Identifier","start":52902,"end":52906,"name":"item"},"property":{"type":"MemberExpression","start":52907,"end":52915,"object":{"type":"Identifier","start":52907,"end":52910,"name":"col"},"property":{"type":"Identifier","start":52911,"end":52915,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":52939,"end":53095,"test":{"type":"LogicalExpression","start":52943,"end":52997,"left":{"type":"BinaryExpression","start":52943,"end":52958,"left":{"type":"Identifier","start":52943,"end":52950,"name":"subItem"},"operator":"!=","right":{"type":"Literal","start":52954,"end":52958,"value":null,"raw":"null"}},"operator":"&&","right":{"type":"BinaryExpression","start":52962,"end":52997,"left":{"type":"Literal","start":52962,"end":52968,"value":"path","raw":"'path'"},"operator":"in","right":{"type":"MemberExpression","start":52972,"end":52997,"object":{"type":"Identifier","start":52972,"end":52979,"name":"subItem"},"property":{"type":"Identifier","start":52980,"end":52997,"name":"firestoreMetadata"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52999,"end":53095,"body":[{"type":"ExpressionStatement","start":53026,"end":53072,"expression":{"type":"CallExpression","start":53026,"end":53071,"callee":{"type":"MemberExpression","start":53026,"end":53039,"object":{"type":"Identifier","start":53026,"end":53034,"name":"pathList"},"property":{"type":"Identifier","start":53035,"end":53039,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53040,"end":53070,"object":{"type":"MemberExpression","start":53040,"end":53065,"object":{"type":"Identifier","start":53040,"end":53047,"name":"subItem"},"property":{"type":"Identifier","start":53048,"end":53065,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53066,"end":53070,"name":"path"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":53231,"end":53247,"argument":{"type":"Identifier","start":53238,"end":53246,"name":"pathList"}}]}}},{"type":"MethodDefinition","start":53435,"end":54460,"static":false,"computed":false,"key":{"type":"Identifier","start":53435,"end":53475,"name":"splitDataIntoCurrentDocAndSubCollections"},"kind":"method","value":{"type":"FunctionExpression","start":53475,"end":54460,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":53476,"end":53480,"name":"data"},{"type":"AssignmentPattern","start":53482,"end":53507,"left":{"type":"Identifier","start":53482,"end":53502,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":53505,"end":53507,"elements":[]}}],"body":{"type":"BlockStatement","start":53509,"end":54460,"body":[{"type":"VariableDeclaration","start":53583,"end":53603,"declarations":[{"type":"VariableDeclarator","start":53587,"end":53602,"id":{"type":"Identifier","start":53587,"end":53597,"name":"currentDoc"},"init":{"type":"ObjectExpression","start":53600,"end":53602,"properties":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":53613,"end":53639,"declarations":[{"type":"VariableDeclarator","start":53619,"end":53638,"id":{"type":"Identifier","start":53619,"end":53633,"name":"subCollections"},"init":{"type":"ObjectExpression","start":53636,"end":53638,"properties":[]}}],"kind":"const"},{"type":"ForOfStatement","start":53799,"end":54370,"await":false,"left":{"type":"VariableDeclaration","start":53804,"end":53822,"declarations":[{"type":"VariableDeclarator","start":53810,"end":53822,"id":{"type":"ArrayPattern","start":53810,"end":53822,"elements":[{"type":"Identifier","start":53811,"end":53814,"name":"key"},{"type":"Identifier","start":53816,"end":53821,"name":"value"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":53826,"end":53846,"callee":{"type":"MemberExpression","start":53826,"end":53840,"object":{"type":"Identifier","start":53826,"end":53832,"name":"Object"},"property":{"type":"Identifier","start":53833,"end":53840,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53841,"end":53845,"name":"data"}],"optional":false},"body":{"type":"BlockStatement","start":53848,"end":54370,"body":[{"type":"IfStatement","start":53904,"end":54359,"test":{"type":"LogicalExpression","start":53908,"end":53963,"left":{"type":"Identifier","start":53908,"end":53928,"name":"subCollectionWriters"},"operator":"&&","right":{"type":"BinaryExpression","start":53932,"end":53963,"left":{"type":"MemberExpression","start":53932,"end":53959,"object":{"type":"Identifier","start":53932,"end":53952,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":53953,"end":53959,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":53962,"end":53963,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":53965,"end":54288,"body":[{"type":"VariableDeclaration","start":53984,"end":54071,"declarations":[{"type":"VariableDeclarator","start":53990,"end":54070,"id":{"type":"Identifier","start":53990,"end":54009,"name":"subCollectionWriter"},"init":{"type":"CallExpression","start":54012,"end":54070,"callee":{"type":"MemberExpression","start":54012,"end":54037,"object":{"type":"Identifier","start":54012,"end":54032,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54033,"end":54037,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":54038,"end":54069,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":54038,"end":54045,"name":"subColl"}],"body":{"type":"BinaryExpression","start":54049,"end":54069,"left":{"type":"MemberExpression","start":54049,"end":54061,"object":{"type":"Identifier","start":54049,"end":54056,"name":"subColl"},"property":{"type":"Identifier","start":54057,"end":54061,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":54066,"end":54069,"name":"key"}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":54089,"end":54273,"test":{"type":"Identifier","start":54093,"end":54112,"name":"subCollectionWriter"},"consequent":{"type":"BlockStatement","start":54114,"end":54184,"body":[{"type":"ExpressionStatement","start":54137,"end":54165,"expression":{"type":"AssignmentExpression","start":54137,"end":54164,"operator":"=","left":{"type":"MemberExpression","start":54137,"end":54156,"object":{"type":"Identifier","start":54137,"end":54151,"name":"subCollections"},"property":{"type":"Identifier","start":54152,"end":54155,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54159,"end":54164,"name":"value"}}}]},"alternate":{"type":"BlockStatement","start":54207,"end":54273,"body":[{"type":"ExpressionStatement","start":54230,"end":54254,"expression":{"type":"AssignmentExpression","start":54230,"end":54253,"operator":"=","left":{"type":"MemberExpression","start":54230,"end":54245,"object":{"type":"Identifier","start":54230,"end":54240,"name":"currentDoc"},"property":{"type":"Identifier","start":54241,"end":54244,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54248,"end":54253,"name":"value"}}}]}}]},"alternate":{"type":"BlockStatement","start":54307,"end":54359,"body":[{"type":"ExpressionStatement","start":54326,"end":54344,"expression":{"type":"AssignmentExpression","start":54326,"end":54343,"operator":"=","left":{"type":"Identifier","start":54326,"end":54336,"name":"currentDoc"},"right":{"type":"Identifier","start":54339,"end":54343,"name":"data"}}}]}}]}},{"type":"ReturnStatement","start":54380,"end":54453,"argument":{"type":"ObjectExpression","start":54387,"end":54452,"properties":[{"type":"Property","start":54402,"end":54412,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54402,"end":54412,"name":"currentDoc"},"kind":"init","value":{"type":"Identifier","start":54402,"end":54412,"name":"currentDoc"}},{"type":"Property","start":54427,"end":54441,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54427,"end":54441,"name":"subCollections"},"kind":"init","value":{"type":"Identifier","start":54427,"end":54441,"name":"subCollections"}}]}}]}}},{"type":"MethodDefinition","start":54739,"end":54819,"static":false,"computed":false,"key":{"type":"Identifier","start":54739,"end":54751,"name":"batchCommit$"},"kind":"method","value":{"type":"FunctionExpression","start":54751,"end":54819,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":54752,"end":54757,"name":"batch"}],"body":{"type":"BlockStatement","start":54759,"end":54819,"body":[{"type":"ReturnStatement","start":54770,"end":54812,"argument":{"type":"CallExpression","start":54777,"end":54811,"callee":{"type":"MemberExpression","start":54777,"end":54802,"object":{"type":"CallExpression","start":54777,"end":54797,"callee":{"type":"Identifier","start":54777,"end":54781,"name":"from"},"arguments":[{"type":"CallExpression","start":54782,"end":54796,"callee":{"type":"MemberExpression","start":54782,"end":54794,"object":{"type":"Identifier","start":54782,"end":54787,"name":"batch"},"property":{"type":"Identifier","start":54788,"end":54794,"name":"commit"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"property":{"type":"Identifier","start":54798,"end":54802,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":54803,"end":54810,"callee":{"type":"Identifier","start":54803,"end":54807,"name":"take"},"arguments":[{"type":"Literal","start":54808,"end":54809,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":55504,"end":57725,"declaration":{"type":"ClassDeclaration","start":55511,"end":57725,"id":{"type":"Identifier","start":55517,"end":55531,"name":"QueryContainer"},"superClass":null,"body":{"type":"ClassBody","start":55532,"end":57725,"body":[{"type":"MethodDefinition","start":55539,"end":55626,"static":false,"computed":false,"key":{"type":"Identifier","start":55539,"end":55550,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":55550,"end":55626,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":55551,"end":55554,"name":"ref"}],"body":{"type":"BlockStatement","start":55556,"end":55626,"body":[{"type":"ExpressionStatement","start":55567,"end":55582,"expression":{"type":"AssignmentExpression","start":55567,"end":55581,"operator":"=","left":{"type":"MemberExpression","start":55567,"end":55575,"object":{"type":"ThisExpression","start":55567,"end":55571},"property":{"type":"Identifier","start":55572,"end":55575,"name":"ref"},"computed":false,"optional":false},"right":{"type":"Identifier","start":55578,"end":55581,"name":"ref"}}},{"type":"ExpressionStatement","start":55592,"end":55619,"expression":{"type":"AssignmentExpression","start":55592,"end":55618,"operator":"=","left":{"type":"MemberExpression","start":55592,"end":55613,"object":{"type":"ThisExpression","start":55592,"end":55596},"property":{"type":"Identifier","start":55597,"end":55613,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":55616,"end":55618,"elements":[]}}}]}}},{"type":"MethodDefinition","start":55689,"end":55811,"static":true,"computed":false,"key":{"type":"Identifier","start":55696,"end":55704,"name":"fromPath"},"kind":"method","value":{"type":"FunctionExpression","start":55704,"end":55811,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":55705,"end":55714,"name":"firestore"},{"type":"Identifier","start":55716,"end":55720,"name":"path"}],"body":{"type":"BlockStatement","start":55722,"end":55811,"body":[{"type":"VariableDeclaration","start":55733,"end":55773,"declarations":[{"type":"VariableDeclarator","start":55739,"end":55772,"id":{"type":"Identifier","start":55739,"end":55742,"name":"ref"},"init":{"type":"CallExpression","start":55745,"end":55772,"callee":{"type":"Identifier","start":55745,"end":55755,"name":"collection"},"arguments":[{"type":"Identifier","start":55756,"end":55765,"name":"firestore"},{"type":"Identifier","start":55767,"end":55771,"name":"path"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":55783,"end":55804,"argument":{"type":"NewExpression","start":55790,"end":55803,"callee":{"type":"ThisExpression","start":55794,"end":55798},"arguments":[{"type":"Identifier","start":55799,"end":55802,"name":"ref"}]}}]}}},{"type":"MethodDefinition","start":55878,"end":55957,"static":false,"computed":false,"key":{"type":"Identifier","start":55882,"end":55887,"name":"query"},"kind":"get","value":{"type":"FunctionExpression","start":55887,"end":55957,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":55890,"end":55957,"body":[{"type":"ReturnStatement","start":55901,"end":55950,"argument":{"type":"CallExpression","start":55908,"end":55949,"callee":{"type":"Identifier","start":55908,"end":55913,"name":"query"},"arguments":[{"type":"MemberExpression","start":55914,"end":55922,"object":{"type":"ThisExpression","start":55914,"end":55918},"property":{"type":"Identifier","start":55919,"end":55922,"name":"ref"},"computed":false,"optional":false},{"type":"SpreadElement","start":55924,"end":55948,"argument":{"type":"MemberExpression","start":55927,"end":55948,"object":{"type":"ThisExpression","start":55927,"end":55931},"property":{"type":"Identifier","start":55932,"end":55948,"name":"queryConstraints"},"computed":false,"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":56055,"end":56117,"static":false,"computed":false,"key":{"type":"Identifier","start":56055,"end":56063,"name":"getDocs$"},"kind":"method","value":{"type":"FunctionExpression","start":56063,"end":56117,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":56066,"end":56117,"body":[{"type":"ReturnStatement","start":56077,"end":56110,"argument":{"type":"CallExpression","start":56084,"end":56109,"callee":{"type":"Identifier","start":56084,"end":56088,"name":"from"},"arguments":[{"type":"CallExpression","start":56089,"end":56108,"callee":{"type":"Identifier","start":56089,"end":56096,"name":"getDocs"},"arguments":[{"type":"MemberExpression","start":56097,"end":56107,"object":{"type":"ThisExpression","start":56097,"end":56101},"property":{"type":"Identifier","start":56102,"end":56107,"name":"query"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":56123,"end":56253,"static":false,"computed":false,"key":{"type":"Identifier","start":56123,"end":56128,"name":"where"},"kind":"method","value":{"type":"FunctionExpression","start":56128,"end":56253,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56129,"end":56138,"name":"fieldPath"},{"type":"Identifier","start":56140,"end":56145,"name":"opStr"},{"type":"Identifier","start":56147,"end":56152,"name":"value"}],"body":{"type":"BlockStatement","start":56154,"end":56253,"body":[{"type":"ExpressionStatement","start":56165,"end":56224,"expression":{"type":"CallExpression","start":56165,"end":56223,"callee":{"type":"MemberExpression","start":56165,"end":56191,"object":{"type":"MemberExpression","start":56165,"end":56186,"object":{"type":"ThisExpression","start":56165,"end":56169},"property":{"type":"Identifier","start":56170,"end":56186,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56187,"end":56191,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56192,"end":56222,"callee":{"type":"Identifier","start":56192,"end":56197,"name":"where"},"arguments":[{"type":"Identifier","start":56198,"end":56207,"name":"fieldPath"},{"type":"Identifier","start":56209,"end":56214,"name":"opStr"},{"type":"Identifier","start":56216,"end":56221,"name":"value"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56234,"end":56246,"argument":{"type":"ThisExpression","start":56241,"end":56245}}]}}},{"type":"MethodDefinition","start":56259,"end":56393,"static":false,"computed":false,"key":{"type":"Identifier","start":56259,"end":56266,"name":"orderBy"},"kind":"method","value":{"type":"FunctionExpression","start":56266,"end":56393,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56267,"end":56276,"name":"fieldPath"},{"type":"Identifier","start":56278,"end":56290,"name":"directionStr"}],"body":{"type":"BlockStatement","start":56292,"end":56393,"body":[{"type":"ExpressionStatement","start":56303,"end":56364,"expression":{"type":"CallExpression","start":56303,"end":56363,"callee":{"type":"MemberExpression","start":56303,"end":56329,"object":{"type":"MemberExpression","start":56303,"end":56324,"object":{"type":"ThisExpression","start":56303,"end":56307},"property":{"type":"Identifier","start":56308,"end":56324,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56325,"end":56329,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56330,"end":56362,"callee":{"type":"Identifier","start":56330,"end":56337,"name":"orderBy"},"arguments":[{"type":"Identifier","start":56338,"end":56347,"name":"fieldPath"},{"type":"Identifier","start":56349,"end":56361,"name":"directionStr"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56374,"end":56386,"argument":{"type":"ThisExpression","start":56381,"end":56385}}]}}},{"type":"MethodDefinition","start":56399,"end":56495,"static":false,"computed":false,"key":{"type":"Identifier","start":56399,"end":56404,"name":"limit"},"kind":"method","value":{"type":"FunctionExpression","start":56404,"end":56495,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56405,"end":56411,"name":"_limit"}],"body":{"type":"BlockStatement","start":56413,"end":56495,"body":[{"type":"ExpressionStatement","start":56424,"end":56466,"expression":{"type":"CallExpression","start":56424,"end":56465,"callee":{"type":"MemberExpression","start":56424,"end":56450,"object":{"type":"MemberExpression","start":56424,"end":56445,"object":{"type":"ThisExpression","start":56424,"end":56428},"property":{"type":"Identifier","start":56429,"end":56445,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56446,"end":56450,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56451,"end":56464,"callee":{"type":"Identifier","start":56451,"end":56456,"name":"limit"},"arguments":[{"type":"Identifier","start":56457,"end":56463,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56476,"end":56488,"argument":{"type":"ThisExpression","start":56483,"end":56487}}]}}},{"type":"MethodDefinition","start":56501,"end":56609,"static":false,"computed":false,"key":{"type":"Identifier","start":56501,"end":56512,"name":"limitToLast"},"kind":"method","value":{"type":"FunctionExpression","start":56512,"end":56609,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56513,"end":56519,"name":"_limit"}],"body":{"type":"BlockStatement","start":56521,"end":56609,"body":[{"type":"ExpressionStatement","start":56532,"end":56580,"expression":{"type":"CallExpression","start":56532,"end":56579,"callee":{"type":"MemberExpression","start":56532,"end":56558,"object":{"type":"MemberExpression","start":56532,"end":56553,"object":{"type":"ThisExpression","start":56532,"end":56536},"property":{"type":"Identifier","start":56537,"end":56553,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56554,"end":56558,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56559,"end":56578,"callee":{"type":"Identifier","start":56559,"end":56570,"name":"limitToLast"},"arguments":[{"type":"Identifier","start":56571,"end":56577,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56590,"end":56602,"argument":{"type":"ThisExpression","start":56597,"end":56601}}]}}},{"type":"MethodDefinition","start":56615,"end":56885,"static":false,"computed":false,"key":{"type":"Identifier","start":56615,"end":56622,"name":"startAt"},"kind":"method","value":{"type":"FunctionExpression","start":56622,"end":56885,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56623,"end":56631,"name":"snapshot"},{"type":"RestElement","start":56633,"end":56647,"argument":{"type":"Identifier","start":56636,"end":56647,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":56649,"end":56885,"body":[{"type":"IfStatement","start":56660,"end":56856,"test":{"type":"Identifier","start":56664,"end":56672,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":56674,"end":56746,"body":[{"type":"ExpressionStatement","start":56689,"end":56735,"expression":{"type":"CallExpression","start":56689,"end":56734,"callee":{"type":"MemberExpression","start":56689,"end":56715,"object":{"type":"MemberExpression","start":56689,"end":56710,"object":{"type":"ThisExpression","start":56689,"end":56693},"property":{"type":"Identifier","start":56694,"end":56710,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56711,"end":56715,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56716,"end":56733,"callee":{"type":"Identifier","start":56716,"end":56723,"name":"startAt"},"arguments":[{"type":"Identifier","start":56724,"end":56732,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":56761,"end":56856,"test":{"type":"Identifier","start":56765,"end":56776,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":56778,"end":56856,"body":[{"type":"ExpressionStatement","start":56793,"end":56845,"expression":{"type":"CallExpression","start":56793,"end":56844,"callee":{"type":"MemberExpression","start":56793,"end":56819,"object":{"type":"MemberExpression","start":56793,"end":56814,"object":{"type":"ThisExpression","start":56793,"end":56797},"property":{"type":"Identifier","start":56798,"end":56814,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56815,"end":56819,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56820,"end":56843,"callee":{"type":"Identifier","start":56820,"end":56827,"name":"startAt"},"arguments":[{"type":"SpreadElement","start":56828,"end":56842,"argument":{"type":"Identifier","start":56831,"end":56842,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":56866,"end":56878,"argument":{"type":"ThisExpression","start":56873,"end":56877}}]}}},{"type":"MethodDefinition","start":56891,"end":57170,"static":false,"computed":false,"key":{"type":"Identifier","start":56891,"end":56901,"name":"startAfter"},"kind":"method","value":{"type":"FunctionExpression","start":56901,"end":57170,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56902,"end":56910,"name":"snapshot"},{"type":"RestElement","start":56912,"end":56926,"argument":{"type":"Identifier","start":56915,"end":56926,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":56928,"end":57170,"body":[{"type":"IfStatement","start":56939,"end":57141,"test":{"type":"Identifier","start":56943,"end":56951,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":56953,"end":57028,"body":[{"type":"ExpressionStatement","start":56968,"end":57017,"expression":{"type":"CallExpression","start":56968,"end":57016,"callee":{"type":"MemberExpression","start":56968,"end":56994,"object":{"type":"MemberExpression","start":56968,"end":56989,"object":{"type":"ThisExpression","start":56968,"end":56972},"property":{"type":"Identifier","start":56973,"end":56989,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56990,"end":56994,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56995,"end":57015,"callee":{"type":"Identifier","start":56995,"end":57005,"name":"startAfter"},"arguments":[{"type":"Identifier","start":57006,"end":57014,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57043,"end":57141,"test":{"type":"Identifier","start":57047,"end":57058,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57060,"end":57141,"body":[{"type":"ExpressionStatement","start":57075,"end":57130,"expression":{"type":"CallExpression","start":57075,"end":57129,"callee":{"type":"MemberExpression","start":57075,"end":57101,"object":{"type":"MemberExpression","start":57075,"end":57096,"object":{"type":"ThisExpression","start":57075,"end":57079},"property":{"type":"Identifier","start":57080,"end":57096,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57097,"end":57101,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57102,"end":57128,"callee":{"type":"Identifier","start":57102,"end":57112,"name":"startAfter"},"arguments":[{"type":"SpreadElement","start":57113,"end":57127,"argument":{"type":"Identifier","start":57116,"end":57127,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57151,"end":57163,"argument":{"type":"ThisExpression","start":57158,"end":57162}}]}}},{"type":"MethodDefinition","start":57176,"end":57440,"static":false,"computed":false,"key":{"type":"Identifier","start":57176,"end":57181,"name":"endAt"},"kind":"method","value":{"type":"FunctionExpression","start":57181,"end":57440,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57182,"end":57190,"name":"snapshot"},{"type":"RestElement","start":57192,"end":57206,"argument":{"type":"Identifier","start":57195,"end":57206,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57208,"end":57440,"body":[{"type":"IfStatement","start":57219,"end":57411,"test":{"type":"Identifier","start":57223,"end":57231,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57233,"end":57303,"body":[{"type":"ExpressionStatement","start":57248,"end":57292,"expression":{"type":"CallExpression","start":57248,"end":57291,"callee":{"type":"MemberExpression","start":57248,"end":57274,"object":{"type":"MemberExpression","start":57248,"end":57269,"object":{"type":"ThisExpression","start":57248,"end":57252},"property":{"type":"Identifier","start":57253,"end":57269,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57270,"end":57274,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57275,"end":57290,"callee":{"type":"Identifier","start":57275,"end":57280,"name":"endAt"},"arguments":[{"type":"Identifier","start":57281,"end":57289,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57318,"end":57411,"test":{"type":"Identifier","start":57322,"end":57333,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57335,"end":57411,"body":[{"type":"ExpressionStatement","start":57350,"end":57400,"expression":{"type":"CallExpression","start":57350,"end":57399,"callee":{"type":"MemberExpression","start":57350,"end":57376,"object":{"type":"MemberExpression","start":57350,"end":57371,"object":{"type":"ThisExpression","start":57350,"end":57354},"property":{"type":"Identifier","start":57355,"end":57371,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57372,"end":57376,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57377,"end":57398,"callee":{"type":"Identifier","start":57377,"end":57382,"name":"endAt"},"arguments":[{"type":"SpreadElement","start":57383,"end":57397,"argument":{"type":"Identifier","start":57386,"end":57397,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57421,"end":57433,"argument":{"type":"ThisExpression","start":57428,"end":57432}}]}}},{"type":"MethodDefinition","start":57446,"end":57722,"static":false,"computed":false,"key":{"type":"Identifier","start":57446,"end":57455,"name":"endBefore"},"kind":"method","value":{"type":"FunctionExpression","start":57455,"end":57722,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57456,"end":57464,"name":"snapshot"},{"type":"RestElement","start":57466,"end":57480,"argument":{"type":"Identifier","start":57469,"end":57480,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57482,"end":57722,"body":[{"type":"IfStatement","start":57493,"end":57693,"test":{"type":"Identifier","start":57497,"end":57505,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57507,"end":57581,"body":[{"type":"ExpressionStatement","start":57522,"end":57570,"expression":{"type":"CallExpression","start":57522,"end":57569,"callee":{"type":"MemberExpression","start":57522,"end":57548,"object":{"type":"MemberExpression","start":57522,"end":57543,"object":{"type":"ThisExpression","start":57522,"end":57526},"property":{"type":"Identifier","start":57527,"end":57543,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57544,"end":57548,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57549,"end":57568,"callee":{"type":"Identifier","start":57549,"end":57558,"name":"endBefore"},"arguments":[{"type":"Identifier","start":57559,"end":57567,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57596,"end":57693,"test":{"type":"Identifier","start":57600,"end":57611,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57613,"end":57693,"body":[{"type":"ExpressionStatement","start":57628,"end":57682,"expression":{"type":"CallExpression","start":57628,"end":57681,"callee":{"type":"MemberExpression","start":57628,"end":57654,"object":{"type":"MemberExpression","start":57628,"end":57649,"object":{"type":"ThisExpression","start":57628,"end":57632},"property":{"type":"Identifier","start":57633,"end":57649,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57650,"end":57654,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57655,"end":57680,"callee":{"type":"Identifier","start":57655,"end":57664,"name":"endBefore"},"arguments":[{"type":"SpreadElement","start":57665,"end":57679,"argument":{"type":"Identifier","start":57668,"end":57679,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57703,"end":57715,"argument":{"type":"ThisExpression","start":57710,"end":57714}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBYyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFbkUsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZGLE9BQU8sRUFDTCxVQUFVLEVBR1YsaUJBQWlCLEVBRWpCLEtBQUssRUFDTCxTQUFTLEVBR1QsT0FBTyxFQUNQLEtBQUssRUFDTCxXQUFXLEVBQ1gsT0FBTyxFQUVQLEtBQUssRUFJTCxVQUFVLEVBQ1YsT0FBTyxFQUNQLEtBQUssRUFFTCxVQUFVLEVBRVgsTUFBTSxvQkFBb0IsQ0FBQztBQUU1QixPQUFPLEVBQ0wsY0FBYyxFQUNkLGFBQWEsRUFDYixlQUFlLEVBQ2Ysc0JBQXNCLEVBQ3RCLGVBQWUsRUFDZixjQUFjLEVBQ2QsZ0JBQWdCLEVBQ2pCLE1BQU0sV0FBVyxDQUFDO0FBS25CLE9BQU8sRUFBQyxlQUFlLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFFaEU7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxpQkFZWDtBQVpELFdBQVksaUJBQWlCO0lBQzNCLDRCQUE0QjtJQUM1Qix1RUFBVyxDQUFBO0lBRVgsaUhBQWlIO0lBQ2pILHVGQUFtQixDQUFBO0lBRW5CLCtDQUErQztJQUMvQyw2REFBTSxDQUFBO0lBRU4saURBQWlEO0lBQ2pELHVGQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFaVyxpQkFBaUIsS0FBakIsaUJBQWlCLFFBWTVCO0FBV0Q7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8saUJBQWlCO0lBRTVCOzs7OztPQUtHO0lBQ0gsWUFBb0IsRUFBd0IsRUFBUyxlQUF1QixNQUFNO1FBQTlELE9BQUUsR0FBRixFQUFFLENBQXNCO1FBQVMsaUJBQVksR0FBWixZQUFZLENBQWlCO0lBQ2xGLENBQUM7SUFFRCx1Q0FBdUM7SUFFdkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0E0Qkc7SUFDSSxhQUFhLENBQ2xCLE1BQXlCLEVBQ3pCLHVCQUE2QyxFQUFFLEVBQy9DLG1CQUFzQyxpQkFBaUIsQ0FBQyxtQkFBbUI7UUFFM0UsT0FBTyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsTUFBTSxFQUFFLG9CQUFvQixFQUFFLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUMvRixHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFtQixDQUFDLENBQ2pDLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0ErQkc7SUFDSSxvQkFBb0IsQ0FDekIsTUFBZ0IsRUFDaEIsdUJBQTZDLEVBQUU7UUFDL0M7OztXQUdHO1FBQ0gsT0FBTyxJQUFJLENBQUMsMEJBQTBCLENBQUksTUFBTSxDQUFDLENBQUMsSUFBSSxDQUNwRCxRQUFRLENBQUMsQ0FBQyxLQUFxQixFQUFFLEVBQUU7WUFFakMsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN2QyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNmO1lBQ0QsSUFBSSxvQkFBb0IsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNwQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNsQjtZQUVELE1BQU0sbUJBQW1CLEdBQTJCLEVBQUUsQ0FBQztZQUV2RCxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUVuQixNQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztnQkFFckYsbUJBQW1CLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDL0MsQ0FBQyxDQUFDLENBQUM7WUFFSCxzREFBc0Q7WUFDdEQsT0FBTyxhQUFhLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksK0JBQStCLENBQ3BDLGNBQXNCLEVBQ3RCLGFBQXFCLEVBQ3JCLFFBQWlCO1FBRWpCLHFHQUFxRztRQUNyRyxNQUFNLGVBQWUsR0FBRyxJQUFJLGNBQWMsQ0FBSSxjQUFjLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUEyQixDQUFDLENBQUM7UUFDM0gsSUFBSSxRQUFRLElBQUksSUFBSSxFQUFFO1lBQ3BCLGVBQWUsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDbkM7UUFFRCxPQUFPLElBQUksQ0FBQywwQkFBMEIsQ0FBSSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUNuRSxRQUFRLENBQUMsQ0FBQyxLQUFvQixFQUFFLEVBQUU7WUFFaEMsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtnQkFDckIsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDZixDQUFDLGdFQUFnRTtZQUVsRSxxREFBcUQ7WUFFckQsTUFBTSxZQUFZLEdBQW1DLEVBQUUsQ0FBQztZQUV4RCxLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtnQkFFeEIsd0dBQXdHO2dCQUN4RyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUUsbUJBQW1CO2dCQUV0RyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsK0JBQStCLENBQUMsYUFBYSxFQUFFLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQ3ZHLEdBQUcsQ0FBQyxDQUFDLGNBQWtDLEVBQUUsRUFBRTtvQkFDekMsSUFBSSxjQUFjLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTt3QkFDN0IsT0FBTyxFQUFDLEdBQUcsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsY0FBYyxFQUFnQixDQUFDO3FCQUNsRTt5QkFBTTt3QkFDTCxPQUFPLEVBQUMsR0FBRyxJQUFJLEVBQWdCLENBQUM7cUJBQ2pDLENBQUUsOEJBQThCO2dCQUNuQyxDQUFDLENBQUMsQ0FDSCxDQUFDO2dCQUNGLFlBQVksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7YUFDcEM7WUFFRCxPQUFPLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQ3JDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDN0IsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsbUNBQW1DO0lBRW5DOzs7Ozs7OztPQVFHO0lBQ0ksSUFBSSxDQUNULElBQU8sRUFDUCxhQUFxQyxFQUNyQyx1QkFBOEMsRUFBRSxFQUNoRCxhQUFzQixJQUFJLEVBQzFCLEtBQWM7UUFFZCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLG9CQUFvQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbkUsTUFBTSxLQUFLLEdBQXNCO2dCQUMvQixJQUFJLEVBQUUsNkNBQTZDO2dCQUNuRCxJQUFJLEVBQUUsU0FBUztnQkFDZixPQUFPLEVBQUUsd0ZBQXdGO2dCQUNqRyxLQUFLLEVBQUUsRUFBRTtnQkFDVCxJQUFJO2dCQUNKLG9CQUFvQjtnQkFDcEIsS0FBSzthQUNOLENBQUM7WUFFRixNQUFNLEtBQUssQ0FBQztTQUNiO1FBRUQsSUFBSSxVQUFVLENBQUM7UUFDZixJQUFJLGNBQWMsR0FBOEIsRUFBRSxDQUFDO1FBRW5EOzs7VUFHRTtRQUNGLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLEVBQUU7WUFDaEMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUNuQjthQUFNO1lBQ0wsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLHdDQUF3QyxDQUFDLElBQUksRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1lBQ3hGLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQzlCLGNBQWMsR0FBRyxLQUFLLENBQUMsY0FBYyxDQUFDO1NBQ3ZDO1FBRUQsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFJLFVBQWUsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDLElBQUk7UUFDL0UsNEJBQTRCO1FBQzVCLFFBQVEsQ0FBQyxDQUFDLFdBQXdCLEVBQUUsRUFBRTtZQUVwQyxNQUFNLFVBQVUsR0FBMkIsRUFBRSxDQUFDO1lBRTlDLEtBQUssTUFBTSxDQUFDLGdCQUFnQixFQUFFLGtCQUFrQixDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRTtnQkFDbkYsSUFBSSx1QkFBMEQsQ0FBQyxDQUFDLHVDQUF1QztnQkFDdkcsSUFBSSxRQUE0QixDQUFDO2dCQUVqQyxJQUFJLG9CQUFvQixFQUFFO29CQUN4Qix1QkFBdUIsR0FBRyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFDLEVBQUUsY0FBYyxDQUFDO29CQUNsSCxRQUFRLEdBQUcsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxnQkFBZ0IsQ0FBQyxFQUFFLEtBQUssQ0FBQztpQkFDM0Y7Z0JBRUQsTUFBTSxnQkFBZ0IsR0FBd0IsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO2dCQUVwSDs7OzJJQUcySDtnQkFDM0gsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLEVBQUU7b0JBQ3JDLElBQUksUUFBUSxLQUFLLFNBQVMsRUFBRSxFQUFFLCtEQUErRDt3QkFFM0Ysc0ZBQXNGO3dCQUN0RixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLHVCQUF1QixFQUFFLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQ25ILEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTs0QkFDVCx3QkFBd0I7NEJBQ3hCLE9BQU8sRUFBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsMkRBQTJEO3dCQUMxRyxDQUFDLENBQUMsQ0FDSCxDQUFDO3dCQUNGLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7cUJBRTVCO3lCQUFNLEVBQUUscUVBQXFFO3dCQUM1RSxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUF3QixFQUFFLEVBQUU7NEJBRXRELHNGQUFzRjs0QkFDdEYsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLEVBQUUsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUNqRyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0NBQ1QsMEJBQTBCO2dDQUMxQiw2RkFBNkY7Z0NBQzdGLE9BQU8sRUFBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUMsQ0FBQzs0QkFDaEQsQ0FBQyxDQUFDLENBQ0gsQ0FBQzs0QkFFRixVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO3dCQUM3QixDQUFDLENBQUMsQ0FBQztxQkFDSjtpQkFDRjtxQkFBTSxFQUFFLG9DQUFvQztvQkFDM0MsUUFBUSxHQUFHLFFBQVEsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztvQkFFakUsc0ZBQXNGO29CQUN0RixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLHVCQUF1QixFQUFFLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQ25ILEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTt3QkFDVCx3QkFBd0I7d0JBQ3hCLE9BQU8sRUFBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsMkRBQTJEO29CQUMxRyxDQUFDLENBQUMsQ0FDSCxDQUFDO29CQUVGLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7aUJBQzVCO2FBQ0YsQ0FBQyxzQkFBc0I7WUFFeEIsSUFBSSxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxFQUFFLHdFQUF3RTtnQkFFbkcseUVBQXlFO2dCQUN6RSxPQUFPLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJO2dCQUNuQyxnQ0FBZ0M7Z0JBRWhDLDJIQUEySDtnQkFDM0gsNkhBQTZIO2dCQUM3SCxrQkFBa0I7Z0JBRWxCLEdBQUcsQ0FBQyxDQUFDLFFBQWdDLEVBQUUsRUFBRTtvQkFDdkMsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDO29CQUV2QixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBNkIsRUFBRSxFQUFFO3dCQUVqRCxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO3dCQUNwQixNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO3dCQUV4QixzR0FBc0c7d0JBQ3RHLGFBQWE7d0JBQ2IsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7NEJBQ3RFLCtGQUErRjs0QkFDL0YsYUFBYTs0QkFDWixXQUFXLENBQUMsR0FBRyxDQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzt5QkFDakQ7NkJBQU07NEJBQ0wsYUFBYTs0QkFDYixXQUFXLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO3lCQUMxQjtvQkFDSCxDQUFDLENBQUMsQ0FBQztvQkFFSCxPQUFPLFdBQWdCLENBQUM7Z0JBQzFCLENBQUMsQ0FBQztnQkFFRixnREFBZ0Q7Z0JBRWhELEdBQUcsQ0FBQyxDQUFDLFdBQWMsRUFBRSxFQUFFO29CQUNyQixPQUFPLEVBQUMsR0FBRyxXQUFXLEVBQUUsR0FBRyxXQUFXLEVBQU0sQ0FBQztnQkFDL0MsQ0FBQyxDQUFDLENBRUgsQ0FBQzthQUNIO2lCQUFNO2dCQUNMLE9BQU8sRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2FBQ3hCO1FBQ0gsQ0FBQyxDQUFDLENBQ0gsQ0FBQyxJQUFJO1FBQ0osYUFBYTtRQUNiLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVELHFDQUFxQztJQUVyQzs7Ozs7Ozs7OztPQVVHO0lBQ0ksT0FBTyxDQUFxQyxJQUFnQixFQUNoQixNQUF5QixFQUN6Qix1QkFBOEMsRUFBRSxFQUNoRCxvQkFBNkIsSUFBSTtRQUVsRixJQUFJLG9CQUFvQixJQUFJLElBQUksSUFBSSxvQkFBb0IsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3JFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxxREFBcUQ7U0FDbEg7UUFFRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2xHLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0ksZUFBZSxDQUFJLE9BQTRCLEVBQUUsSUFBTyxFQUFFLG9CQUE2QixJQUFJO1FBQ2hHLHlEQUF5RDtRQUN6RCxNQUFNLEtBQUssR0FBZSxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUV4RCxJQUFJLGlCQUFpQixFQUFFO1lBQ3JCLElBQUksR0FBRyxlQUFlLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ3JDO1FBRUQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3pCLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFHRDs7Ozs7Ozs7O09BU0c7SUFDSSxZQUFZLENBQUksTUFBeUIsRUFDekIsS0FBYSxFQUNiLHVCQUE2QyxFQUFFLEVBQy9DLG9CQUE0QztRQUVqRSxJQUFJLG9CQUFvQixJQUFJLElBQUksRUFBRTtZQUNoQyxvQkFBb0IsR0FBRyxvQkFBNkMsQ0FBQztTQUN0RTtRQUVELE1BQU0sYUFBYSxHQUF3QixNQUFNLENBQUMsTUFBTSxDQUFDO1FBRXpELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxJQUFJO1FBQzFELGFBQWE7UUFDYixJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ1AsR0FBRyxDQUFDLENBQUMsT0FBVSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxFQUFFLG9CQUFvQixDQUFDLENBQUMsRUFDNUUsU0FBUyxDQUFDLENBQUMsT0FBVSxFQUFFLEVBQUU7WUFDdkIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsb0JBQW9CLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBRSwwQkFBMEIsQ0FDM0csUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNqQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLG9CQUFvQixDQUFDLENBQUMsSUFBSSxDQUNwRCxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsdUJBQXVCLENBQzNDLENBQUM7WUFDSixDQUFDLENBQUMsQ0FDSCxDQUFDO1FBQ0osQ0FBQyxDQUFDLEVBQ0YsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsR0FBRyxHQUFHLENBQUMsQ0FBQztZQUMvQyxNQUFNLEdBQUcsQ0FBQztRQUNaLENBQUMsQ0FBQyxFQUNGLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBRUosQ0FBQztJQUVELHdCQUF3QjtJQUd4Qjs7Ozs7Ozs7O09BU0c7SUFDSSxnQkFBZ0IsQ0FBOEIsS0FBeUIsRUFDekIsU0FBaUIsRUFDakIsT0FBZSxFQUNmLE9BQU8sR0FBRyxLQUFLO1FBRWxFLElBQUksU0FBUyxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksSUFBSSxJQUFJLFNBQVMsS0FBSyxPQUFPLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUUsRUFBRSxnQ0FBZ0M7WUFDeEgsT0FBTyxFQUFFLEVBQUUsQ0FBQztTQUNiO1FBRUQsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsaUJBQWlCLElBQUksSUFBSSxFQUFFO1lBQ3ZDLE1BQU0sS0FBSyxHQUFzQjtnQkFDL0IsSUFBSSxFQUFFLHFEQUFxRDtnQkFDM0QsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLE9BQU8sRUFBRSxtR0FBbUc7YUFDN0csQ0FBQztZQUNGLE1BQU0sS0FBSyxDQUFDO1NBQ2I7UUFFRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsaUNBQWlDLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFFekYsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRDs7Ozs7Ozs7O09BU0c7SUFDTyxpQ0FBaUMsQ0FBOEIsS0FBeUIsRUFDekIsU0FBaUIsRUFDakIsT0FBZSxFQUNmLE9BQU8sR0FBRyxLQUFLO1FBRXRGLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2pELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXhELElBQUksU0FBUyxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksSUFBSSxJQUFJLFNBQVMsS0FBSyxPQUFPLEVBQUUsRUFBRSxnQ0FBZ0M7WUFDbkcsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELElBQUksU0FBNkIsQ0FBQztRQUVsQyxJQUFJLE9BQU8sRUFBRTtZQUNYLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUN0QzthQUFNO1lBQ0wsU0FBUyxHQUFHLEtBQUssQ0FBQztTQUNuQjtRQUVELGVBQWUsQ0FBSSxTQUFTLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRWxELE1BQU0saUJBQWlCLEdBQXVCLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFM0UsSUFBSSxDQUFDLEdBQUcsV0FBVyxDQUFDO1FBQ3BCLEtBQUssTUFBTSxJQUFJLElBQUksaUJBQWlCLEVBQUU7WUFDcEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFLDJFQUEyRTtnQkFDekYsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDaEI7WUFDRCxNQUFNLEdBQUcsR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBc0IsQ0FBQztZQUNoRyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBQzlCLENBQUMsRUFBRSxDQUFDO1NBQ0w7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0kseUJBQXlCLENBQThCLEtBQXlCLEVBQ3pCLGFBQXFCLEVBQ3JCLHVCQUE2QyxFQUFFLEVBQy9DLFVBQW1CLEtBQUs7UUFFcEYsSUFBSSxTQUE2QixDQUFDO1FBRWxDLElBQUksT0FBTyxFQUFFO1lBQ1gsU0FBUyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ3RDO2FBQU07WUFDTCxTQUFTLEdBQUcsS0FBSyxDQUFDO1NBQ25CO1FBRUQsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRTlDLDBFQUEwRTtRQUMxRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLElBQUksQ0FDeEYsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDWix5RkFBeUY7WUFDekYsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLHFDQUFxQztZQUN6RSxTQUFTLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUVuQyxJQUFJLENBQUMscUNBQXFDLENBQUksU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRWhFLE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQyxDQUFDLEVBRUYsU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQy9DLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNJLDBCQUEwQixDQUE4QixLQUF5QixFQUN6QixlQUF5QixFQUN6Qix1QkFBNkMsRUFBRSxFQUMvQyxVQUFtQixLQUFLO1FBRXJGLElBQUksU0FBNkIsQ0FBQztRQUVsQyxJQUFJLE9BQU8sRUFBRTtZQUNYLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUN0QzthQUFNO1lBQ0wsU0FBUyxHQUFHLEtBQUssQ0FBQztTQUNuQjtRQUVELFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxxQ0FBcUM7UUFFekUsTUFBTSxhQUFhLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNqRCxPQUFPLGVBQWUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDMUQsQ0FBQyxDQUFDLENBQUM7UUFFSCxzREFBc0Q7UUFDdEQsNENBQTRDO1FBQzVDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDcEQsU0FBUyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDekM7UUFFRCxNQUFNLFdBQVcsR0FBc0MsRUFBRSxDQUFDO1FBRTFELG1GQUFtRjtRQUNuRixhQUFhLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBRW5DLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUMsSUFBSSxDQUN6RyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztZQUNGLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsQ0FBQyxDQUFDLENBQUM7UUFHSCxPQUFPLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQy9CLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBRTtZQUNwQixrRUFBa0U7WUFDbEUsSUFBSSxPQUFPLEdBQXdCLEVBQUUsQ0FBQztZQUV0QyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUMzQixPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNqQyxDQUFDLENBQUMsQ0FBQztZQUVILE9BQU8sT0FBTyxDQUFDO1FBQ2pCLENBQUMsQ0FBQyxFQUNGLEdBQUcsQ0FBQyxDQUFDLE9BQTBDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUMvRixHQUFHLENBQUMsQ0FBQyxLQUFpQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMscUNBQXFDLENBQUksU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQzNGLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUMvQyxDQUFDO0lBQ0osQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ08scUNBQXFDLENBQzdDLEtBQXlCLEVBQ3pCLFFBQW9CLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztRQUdqRCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQzVCLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLEVBQUU7Z0JBQ3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUMsMkVBQTJFO2dCQUMvRixNQUFNLEdBQUcsR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBc0IsQ0FBQztnQkFDaEcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsRUFBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO2FBQzVCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTSx5QkFBeUIsQ0FDOUIsYUFBaUMsRUFDakMsWUFBZ0MsRUFDaEMsYUFBcUIsRUFDckIsWUFBb0IsRUFDcEIsZ0JBQXdCLEVBQ3hCLCtCQUF3RCxFQUN4RCwrQkFBK0IsR0FBRyxJQUFJLEVBQ3RDLE9BQU8sR0FBRyxLQUFLO1FBRWYsTUFBTSxLQUFLLEdBQWUsSUFBSSxDQUFDLHFDQUFxQyxDQUFDLGFBQWEsRUFDaEYsWUFBWSxFQUNaLGFBQWEsRUFDYixZQUFZLEVBQ1osZ0JBQWdCLEVBQ2hCLCtCQUErQixFQUMvQiwrQkFBK0IsRUFDL0IsT0FBTyxDQUFDLENBQUM7UUFFWCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUdELHVDQUF1QztJQUV2Qzs7Ozs7T0FLRztJQUNJLE9BQU8sQ0FBQyxNQUF5QixFQUFFLHVCQUE2QyxFQUFFO1FBRXZGLElBQUksb0JBQW9CLElBQUksSUFBSSxJQUFJLG9CQUFvQixDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDckUsMENBQTBDO1lBQzFDLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDL0I7UUFFRCxPQUFPLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxJQUFJLENBQ3ZFLFNBQVMsQ0FBQyxDQUFDLFVBQTZDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUtyRyxDQUFDO0lBQ0osQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNJLGVBQWUsQ0FBQyxNQUF5QixFQUN6Qix1QkFBNkMsRUFBRSxFQUMvQyxRQUFvQixVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7UUFFdEUsSUFBSSxvQkFBb0IsSUFBSSxJQUFJLElBQUksb0JBQW9CLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNyRSwwQ0FBMEM7WUFDMUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNyQixPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNsQjtRQUVELE9BQU8sSUFBSSxDQUFDLDBCQUEwQixDQUFDLE1BQU0sRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLElBQUksQ0FDdkUsR0FBRyxDQUFDLENBQUMsT0FBMEMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLDRCQUE0QixDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQy9GLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLHNCQUFzQixDQUFDLFFBQWtCO1FBQzlDLE1BQU0sT0FBTyxHQUNYLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFzQixDQUFDLENBQUM7UUFFckYsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksZUFBZSxDQUFDLE9BQTRCLEVBQUUsdUJBQTZDLEVBQUU7UUFFbEcsSUFBSSxvQkFBb0IsSUFBSSxJQUFJLElBQUksb0JBQW9CLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNyRSxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM1QztRQUVELE1BQU0sWUFBWSxHQUEyQixFQUFFLENBQUM7UUFFaEQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsMEJBQTBCLENBQUMsTUFBTSxFQUFFLG9CQUFvQixDQUFDLENBQUM7WUFDL0UsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUk7UUFDckMsb0NBQW9DO1FBQ3BDLEdBQUcsQ0FBQyxDQUFDLEtBQVksRUFBRSxFQUFFO1lBQ25CLElBQUksY0FBYyxHQUF3QixFQUFFLENBQUM7WUFDN0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDbkIsY0FBYyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDL0MsQ0FBQyxDQUFDLENBQUM7WUFDSCxPQUFPLGNBQWMsQ0FBQztRQUN4QixDQUFDLENBQUM7UUFDRixvQ0FBb0M7UUFDcEMsU0FBUyxDQUFDLENBQUMsVUFBK0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBS3ZGLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNJLGlCQUFpQixDQUFDLGFBQWtDLEVBQUUsdUJBQTZDLEVBQUU7UUFDMUcsT0FBTyxJQUFJLENBQUMsdUNBQXVDLENBQUMsYUFBYSxFQUFFLG9CQUFvQixDQUFDLENBQUMsSUFBSSxDQUMzRixTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQ3BELENBQUMsSUFBSSxDQUNKLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUdEOzs7Ozs7T0FNRztJQUNJLGdCQUFnQixDQUFDLE9BQWUsRUFBRSx1QkFBNkMsRUFBRTtRQUN0RixNQUFNLE1BQU0sR0FBRyxjQUFjLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFzQixDQUFDO1FBQy9FLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNJLFdBQVcsQ0FBSSxJQUFpQixFQUFFLHVCQUE2QyxFQUFFO1FBRXRGLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUUvRSxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJO1FBQzdDLGlHQUFpRztRQUNqRyxpRUFBaUU7UUFDakUsd0JBQXdCO1FBQ3hCLE1BQU07UUFDTixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUF5Qk0sbUJBQW1CLENBQUksSUFBZ0QsRUFDaEQsdUJBQThDLEVBQUUsRUFDaEQsMkJBQXFDLEVBQUU7UUFFbkUsMkZBQTJGO1FBQzNGLGdDQUFnQztRQUVoQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFFdkIsTUFBTSxVQUFVLEdBQWEsRUFBRSxDQUFDO1lBRWhDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ2YsVUFBVSxDQUFDLElBQUksQ0FDYixJQUFJLENBQUMsK0JBQStCLENBQUMsQ0FBQyxFQUFFLG9CQUFvQixFQUFFLHdCQUF3QixDQUFNLENBQzdGLENBQUM7WUFDSixDQUFDLENBQUMsQ0FBQztZQUVILE9BQU8sVUFBVSxDQUFDO1NBRW5CO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsd0JBQXdCLENBQU0sQ0FBQztTQUN4RztJQUNILENBQUM7SUFHRCxrREFBa0Q7SUFFbEQ7Ozs7Ozs7O09BUUc7SUFDTyxtQkFBbUIsQ0FBSSxNQUE4QixFQUM5QixtQkFBc0MsaUJBQWlCLENBQUMsbUJBQW1CO1FBRzFHLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUM3QixHQUFHLENBQUMsQ0FBQyxRQUEwQixFQUFFLEVBQUU7WUFDakMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxnQkFBZ0IsS0FBSyxpQkFBaUIsQ0FBQyxtQkFBbUIsRUFBRTtnQkFDcEYsTUFBTSxLQUFLLEdBQXNCO29CQUMvQixJQUFJLEVBQUUsa0JBQWtCO29CQUN4QixJQUFJLEVBQUUsV0FBVztvQkFDakIsT0FBTyxFQUFFLHVFQUF1RTtvQkFDaEYsTUFBTTtpQkFDUCxDQUFDO2dCQUNGLE1BQU0sS0FBSyxDQUFDO2FBQ2I7UUFDSCxDQUFDLENBQUMsRUFFRixNQUFNLENBQUMsQ0FBQyxRQUEwQixFQUFFLEVBQUU7WUFDcEMsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLGdCQUFnQixLQUFLLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9FLENBQUMsQ0FBQyxFQUVGLEdBQUcsQ0FBQyxDQUFDLFFBQTBCLEVBQUUsRUFBRTtZQUVqQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBRS9CLElBQUksUUFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLGdCQUFnQixLQUFLLGlCQUFpQixDQUFDLG1CQUFtQixFQUFFO2dCQUNuRixNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxFQUFPLENBQUM7Z0JBRWxDLE1BQU0saUJBQWlCLEdBQXlCO29CQUM5QyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUU7b0JBQ2YsR0FBRyxFQUFFLFFBQVEsQ0FBQyxHQUEyQjtvQkFDekMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJO29CQUNqQixRQUFRLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRTtvQkFDM0IsZ0JBQWdCLEVBQUUsUUFBUSxDQUFDLFFBQVE7aUJBQ3BDLENBQUM7Z0JBRUYsT0FBTyxFQUFDLEdBQUcsSUFBSSxFQUFFLGlCQUFpQixFQUFnQixDQUFDO2FBRXBEO2lCQUFNLElBQUksZ0JBQWdCLEtBQUssaUJBQWlCLENBQUMsV0FBVyxFQUFFLEVBQUUsdUJBQXVCO2dCQUN0RixPQUFPLElBQUksQ0FBQzthQUNiO1lBQ0QsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUMsRUFDRixHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNYLElBQUksSUFBSSxJQUFJLElBQUksRUFBRTtnQkFDaEIsT0FBTyxzQkFBc0IsQ0FBQyxJQUFvQixDQUFDLENBQUM7YUFDckQ7aUJBQU07Z0JBQ0wsT0FBTyxJQUFJLENBQUM7YUFDYjtRQUNILENBQUMsQ0FBQyxDQUN3QixDQUFDO0lBQy9CLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDTywwQkFBMEIsQ0FBSSxNQUFnQjtRQUN0RDs7O1dBR0c7UUFDSCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FDcEMsR0FBRyxDQUFDLENBQUMsSUFBc0IsRUFBRSxFQUFFO1lBQzdCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7Z0JBQzlCLE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQU8sQ0FBQztnQkFFbEMsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLEVBQUUsQ0FBQztnQkFDdkIsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLEdBQTJCLENBQUM7Z0JBQ2pELE1BQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7Z0JBQ3RCLE1BQU0sZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztnQkFFM0MsTUFBTSxpQkFBaUIsR0FBeUI7b0JBQzlDLEVBQUU7b0JBQ0YsSUFBSTtvQkFDSixHQUFHO29CQUNILGdCQUFnQjtvQkFDaEIsUUFBUSxFQUFFLElBQUk7aUJBQ2YsQ0FBQztnQkFFRixPQUFPLEVBQUMsR0FBRyxJQUFJLEVBQUUsaUJBQWlCLEVBQWdCLENBQUM7WUFDckQsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsRUFDRixHQUFHLENBQUMsQ0FBQyxLQUF5QixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2xELHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdCLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLENBQUMsQ0FDOEIsQ0FBQztJQUN0QyxDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDTyx3QkFBd0IsQ0FDaEMsSUFBaUIsRUFDakIsdUJBQTZDLEVBQUU7UUFFL0MsSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFO1lBQ2hCLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUNuQjtRQUNELElBQUksb0JBQW9CLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUNwQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbkI7UUFFRCxNQUFNLG1CQUFtQixHQUEyQixFQUFFLENBQUM7UUFFdkQsbUZBQW1GO1FBQ25GLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFO1lBRWhELE1BQU0sY0FBYyxHQUFHLElBQUksY0FBYyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNqSCxJQUFJLGtCQUFrQixDQUFDLGdCQUFnQixFQUFFO2dCQUN2QyxjQUFjLENBQUMsZ0JBQWdCLEdBQUcsa0JBQWtCLENBQUMsZ0JBQWdCLENBQUM7Z0JBQ3RFLG9GQUFvRjthQUNyRjtZQUNELG9DQUFvQztZQUNwQyxzRkFBc0Y7WUFDdEYsSUFBSTtZQUVKLE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJO1lBQ25GLHVHQUF1RztZQUN2RywwQ0FBMEM7WUFDMUMsNEJBQTRCO1lBQzVCLGdDQUFnQztZQUNoQyw4Q0FBOEM7WUFDOUMsaUVBQWlFO1lBQ2pFLFFBQVEsQ0FBQyxDQUFDLEtBQXFCLEVBQUUsRUFBRTtnQkFFakMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsRUFBRTtvQkFDdEMsT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7aUJBQ2xCO2dCQUVELE1BQU0sWUFBWSxHQUEyQixFQUFFLENBQUM7Z0JBRWhELEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsNkJBQTZCO2dCQUVuRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBcUIsRUFBRSxFQUFFO29CQUN0QyxNQUFNLHFCQUFxQixHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxPQUFPLEVBQUUsa0JBQWtCLENBQUMsY0FBYyxDQUFDLENBQUM7b0JBQ3hHLFlBQVksQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztnQkFDM0MsQ0FBQyxDQUFDLENBQUM7Z0JBRUgsSUFBSSxZQUFZLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtvQkFDNUIsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7aUJBQ2YsQ0FBQyxpREFBaUQ7Z0JBRW5ELE9BQU8sYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUk7Z0JBQ3JDLCtCQUErQjtpQkFDaEMsQ0FBQztZQUNKLENBQUMsQ0FBQyxFQUFFLG1DQUFtQztZQUN2Qzs7a0VBRXNEO1lBQ3RELEdBQUcsQ0FBQyxDQUFDLEtBQXFCLEVBQUUsRUFBRTtnQkFDNUIsTUFBTSxLQUFLLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUVwRyxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLEtBQUssS0FBSyxFQUFFO29CQUNqRSxPQUFPLEVBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztpQkFDOUM7cUJBQU07b0JBQ0wsT0FBTyxFQUFDLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFDLENBQUM7aUJBQzNDO1lBQ0gsQ0FBQyxDQUFDLENBRUgsQ0FBQztZQUVGLG1CQUFtQixDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQy9DLENBQUMsQ0FBQyxDQUFDO1FBRUgscURBQXFEO1FBQ3JELGFBQWE7UUFDYixPQUFPLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLElBQUksQ0FDNUMsR0FBRyxDQUFDLENBQUMsZUFBNEUsRUFBRSxFQUFFO1lBQ25GLDZCQUE2QjtZQUM3QixNQUFNLFFBQVEsR0FBNkIsRUFBRSxDQUFDO1lBRTlDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBRTtnQkFFekMsS0FBSyxNQUFNLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUU7b0JBQ3BFLFFBQVEsQ0FBQyxjQUFjLENBQUMsR0FBRyxLQUFLLENBQUM7aUJBQ2xDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7WUFDSCxPQUFPLFFBQVEsQ0FBQztRQUNsQixDQUFDLENBQUMsRUFFRixHQUFHLENBQUMsQ0FBQyxJQUFrQixFQUFFLEVBQUU7WUFDekIsT0FBTyxFQUFDLEdBQUcsSUFBSSxFQUFFLEdBQUcsSUFBSSxFQUFnQixDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDTyxnQ0FBZ0MsQ0FDeEMsTUFBeUIsRUFDekIsdUJBQTZDLEVBQUUsRUFDL0MsbUJBQXNDLGlCQUFpQixDQUFDLFdBQVc7UUFFbkUseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFJLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLElBQUksQ0FDL0QsUUFBUSxDQUFDLENBQUMsSUFBa0IsRUFBRSxFQUFFO1lBRTlCLElBQUksSUFBSSxLQUFLLElBQUksRUFBRTtnQkFDakIsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDakI7WUFDRCxJQUFJLG9CQUFvQixDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7Z0JBQ3BDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ2pCO1lBRUQsT0FBTyxJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDbkUsQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7T0FXRztJQUNPLFVBQVUsQ0FBSSxJQUFPLEVBQUUsYUFBcUMsRUFBRSxhQUFzQixJQUFJLEVBQUUsRUFBVztRQUc3RyxrREFBa0Q7UUFFbEQsSUFBSSxJQUFxQixDQUFDO1FBRTFCLElBQUksVUFBVSxFQUFFO1lBQ2QsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUN4QixJQUFJLEdBQUcsY0FBYyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDekMsSUFBSSxHQUFHLGVBQWUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQzNDO1FBRUQsSUFBSSxFQUFFLEtBQUssU0FBUyxFQUFFO1lBQ3BCLE1BQU0sTUFBTSxHQUFzQixlQUFlLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3JFLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDbEM7YUFBTTtZQUNMLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBSSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDNUM7UUFFRCwyQ0FBMkM7UUFDM0MsOEJBQThCO1FBQzlCLDBHQUEwRztRQUMxRyxPQUFPO1FBQ1AsSUFBSTtRQUVKLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSTtRQUNkLHVFQUF1RTtRQUN2RSxnQ0FBZ0M7UUFDaEMsZ0NBQWdDO1FBQ2hDLEdBQUcsQ0FBQyxDQUFDLEdBQXFDLEVBQUUsRUFBRTtZQUM1QyxJQUFJLEVBQUUsS0FBSyxTQUFTLElBQUksR0FBRyxFQUFFO2dCQUUzQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO2dCQUV0QixNQUFNLGlCQUFpQixHQUF5QjtvQkFDOUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFO29CQUNWLElBQUk7b0JBQ0osR0FBRztvQkFDSCxRQUFRLEVBQUUsSUFBSTtpQkFDZixDQUFDO2dCQUVGLE9BQU8sRUFBQyxHQUFHLElBQUksRUFBRSxpQkFBaUIsRUFBZ0IsQ0FBQzthQUVwRDtpQkFBTSxFQUFFLG9FQUFvRTtnQkFDM0UsTUFBTSxJQUFJLEdBQUcsYUFBYSxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO2dCQUMzQyxHQUFHLEdBQUcsY0FBYyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBeUIsQ0FBQztnQkFFdEUsTUFBTSxpQkFBaUIsR0FBeUI7b0JBQzlDLEVBQUUsRUFBRSxFQUFZO29CQUNoQixHQUFHO29CQUNILElBQUk7b0JBQ0osUUFBUSxFQUFFLElBQUk7aUJBQ2YsQ0FBQztnQkFFRixPQUFPLEVBQUMsR0FBRyxJQUFJLEVBQUUsaUJBQWlCLEVBQWdCLENBQUM7YUFDcEQ7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO1FBRUYsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUNkLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVELHNFQUFzRTtJQUM1RCxhQUFhLENBQUksSUFBTyxFQUFFLE1BQXlCLEVBQUUsb0JBQTZCLElBQUk7UUFFOUYsSUFBSSxpQkFBaUIsRUFBRTtZQUNyQixJQUFJLEdBQUcsZUFBZSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNyQztRQUNELE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRDs7T0FFRztJQUNPLHVCQUF1QixDQUFJLElBQU8sRUFDUCxNQUF5QixFQUN6Qix1QkFBOEMsRUFBRSxFQUNoRCxvQkFBNkIsSUFBSSxFQUNqQyxLQUFrQjtRQUVyRCxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsS0FBSyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ3ZDO1FBRUQsSUFBSSxpQkFBaUIsRUFBRTtZQUNyQixJQUFJLEdBQUcsZUFBZSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNyQztRQUVELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyx3Q0FBd0MsQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUN4RixNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1FBQ3BDLE1BQU0sY0FBYyxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUM7UUFFNUMsMkNBQTJDO1FBQzNDLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRWpDLEtBQUssTUFBTSxDQUFDLGdCQUFnQixFQUFFLGlCQUFpQixDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUVsRixJQUFJLHVCQUEwRCxDQUFDLENBQUMsdUNBQXVDO1lBQ3ZHLElBQUksUUFBNEIsQ0FBQztZQUVqQyxJQUFJLG9CQUFvQixFQUFFO2dCQUN4Qix1QkFBdUIsR0FBRyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFDLEVBQUUsY0FBYyxDQUFDO2dCQUNsSCxRQUFRLEdBQUcsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxnQkFBZ0IsQ0FBQyxFQUFFLEtBQUssQ0FBQzthQUMzRjtZQUVELFFBQVEsR0FBRyxRQUFRLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQywrQkFBK0I7WUFFakcsc0VBQXNFO1lBQ3RFLE1BQU0sYUFBYSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1lBQ2pFLE1BQU0sUUFBUSxHQUFHLGVBQWUsQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFFMUQsS0FBSyxHQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDdEg7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ08scUNBQXFDLENBQzdDLGFBQWlDLEVBQ2pDLFlBQWdDLEVBQ2hDLGFBQXFCLEVBQ3JCLFlBQW9CLEVBQ3BCLGdCQUF3QixFQUN4QiwrQkFBd0QsRUFDeEQsK0JBQStCLEdBQUcsSUFBSSxFQUN0QyxPQUFPLEdBQUcsS0FBSztRQUVmLElBQUksaUJBQXFDLENBQUM7UUFDMUMsSUFBSSxnQkFBb0MsQ0FBQztRQUN6QyxJQUFJLE9BQU8sRUFBRTtZQUNYLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1lBQ3JELGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQ3BEO2FBQU07WUFDTCxpQkFBaUIsR0FBRyxhQUFhLENBQUM7WUFDbEMsZ0JBQWdCLEdBQUcsWUFBWSxDQUFDO1NBQ2pDO1FBRUQsaUJBQWlCLENBQUMsaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBRXBGLE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXhELElBQUksK0JBQStCLEtBQUssU0FBUyxFQUFFO1lBQ2pELE1BQU0sU0FBUyxHQUFHLGdCQUFnQixDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ2pELE1BQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUM7WUFFckQsTUFBTSxJQUFJLEdBQUcsRUFBQyxHQUFHLCtCQUErQixFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBQyxDQUFDO1lBRS9FLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1osYUFBYSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDdEM7WUFFRCxJQUFJLCtCQUErQixFQUFFO2dCQUNuQyxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO2dCQUN4QixlQUFlLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFFbEMsSUFBSSxDQUFDLE9BQU8sRUFBRTtvQkFDWixlQUFlLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztpQkFDeEM7YUFDRjtZQUNELEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ2xDO1FBRUQsTUFBTSx5QkFBeUIsR0FBdUIsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQztRQUNyQixLQUFLLE1BQU0sSUFBSSxJQUFJLHlCQUF5QixFQUFFO1lBQzVDLGFBQWE7WUFDYixLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztZQUVyRCxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNaLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO2FBQ2hCO1lBRUQsQ0FBQyxFQUFFLENBQUM7U0FDTDtRQUVELE1BQU0sc0JBQXNCLEdBQXVCLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMxRixDQUFDLEdBQUcsYUFBYSxDQUFDO1FBQ2xCLEtBQUssTUFBTSxJQUFJLElBQUksc0JBQXNCLEVBQUU7WUFDekMsYUFBYTtZQUNiLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBRXJELElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1osSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDaEI7WUFFRCxDQUFDLEVBQUUsQ0FBQztTQUNMO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBR0Q7Ozs7T0FJRztJQUNPLHFCQUFxQixDQUFDLE9BQTRCO1FBRTFELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUV6RCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVTLDRCQUE0QixDQUFDLE9BQTRCLEVBQUUsUUFBb0IsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBRXBILE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUN6QixLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ08sK0JBQStCLENBQUksTUFBd0IsRUFDeEIsdUJBQThDLEVBQUUsRUFDaEQsMkJBQXFDLEVBQUU7UUFFbEYsdUZBQXVGO1FBQ3ZGLE1BQU0sa0JBQWtCLEdBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBRTVGLDBCQUEwQjtRQUMxQixLQUFLLE1BQU0saUJBQWlCLElBQUksa0JBQWtCLEVBQUU7WUFDbEQsT0FBTyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztTQUNsQztRQUVELG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNqQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUUscURBQXFEO2dCQUUxRixNQUFNLElBQUksR0FBa0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDN0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFFcEIsSUFBSSxHQUFHLENBQUMsY0FBYyxFQUFFO3dCQUN0QixJQUFJLENBQUMsK0JBQStCLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxjQUFjLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztxQkFDdkY7eUJBQU07d0JBQ0wsTUFBTTt3QkFDTixLQUFLLE1BQU0saUJBQWlCLElBQUksa0JBQWtCLEVBQUU7NEJBQ2xELE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO3lCQUMvQztxQkFDRjtnQkFDSCxDQUFDLENBQUMsQ0FBQzthQUVKO2lCQUFNLEVBQUUsaUNBQWlDO2dCQUV4QyxJQUFJLEdBQUcsQ0FBQyxjQUFjLEVBQUU7b0JBQ3RCLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxjQUFjLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztpQkFDdEc7cUJBQU07b0JBQ0wsS0FBSyxNQUFNLGlCQUFpQixJQUFJLGtCQUFrQixFQUFFO3dCQUNsRCxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQztxQkFDNUM7aUJBQ0Y7YUFFRjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxNQUFNLENBQUM7SUFFaEIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ08sMEJBQTBCLENBQUMsR0FBNEMsRUFDNUMsdUJBQTZDLEVBQUU7UUFHbEYsSUFBSSxHQUFHLFlBQVksaUJBQWlCLEVBQUU7WUFDcEMsT0FBTyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUM7U0FDekU7YUFBTSxFQUFFLHNCQUFzQjtZQUM3QixPQUFPLElBQUksQ0FBQyx1Q0FBdUMsQ0FBQyxHQUFHLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztTQUNoRjtJQUNILENBQUM7SUFFUyxnQ0FBZ0MsQ0FBQyxNQUF5QixFQUN6Qix1QkFBNkMsRUFBRTtRQUd4RixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLG9CQUFvQixDQUFDLENBQUMsSUFBSSxDQUMxRCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ1AsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLG1DQUFtQyxDQUFDLElBQUksRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1FBQ2pGLDBDQUEwQztRQUMxQyxHQUFHLENBQUMsQ0FBQyxRQUFrQixFQUFFLEVBQUU7WUFDekIsT0FBTyxRQUFRO2lCQUNaLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQXNCLENBQUMsQ0FBQztRQUMvRSxDQUFDLENBQUMsQ0FFSCxDQUFDO0lBQ0osQ0FBQztJQUVTLHVDQUF1QyxDQUFDLGFBQWtDLEVBQ2xDLHVCQUE2QyxFQUFFO1FBRy9GLE9BQU8sSUFBSSxDQUFDLDBCQUEwQixDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUk7UUFDeEQsYUFBYTtRQUNiLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxRQUFRLENBQUMsQ0FBQyxLQUFxQixFQUFFLEVBQUU7WUFDakMsSUFBSSxZQUFvQyxDQUFDO1lBQ3pDLFlBQVksR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDLENBQUMsQ0FBQztZQUN2RyxPQUFPLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsRUFDRixHQUFHLENBQUMsQ0FBQyxLQUFxQixFQUFFLEVBQUU7WUFFNUIsSUFBSSxLQUFLLEdBQWEsRUFBRSxDQUFDO1lBRXpCLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ25CLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxDQUFDO1lBQzdGLENBQUMsQ0FBQyxDQUFDO1lBQ0gsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDLENBQUMsRUFDRixHQUFHLENBQUMsQ0FBQyxRQUFrQixFQUFFLEVBQUU7WUFDekIsT0FBTyxRQUFRO2lCQUNaLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQXNCLENBQUMsQ0FBQztRQUMvRSxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDTyw2QkFBNkIsQ0FDckMsSUFBaUIsRUFDakIsdUJBQTZDLEVBQUU7UUFFL0MsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLG1DQUFtQyxDQUFDLElBQUksRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1FBQ25GLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQXNCLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRUQ7O09BRUc7SUFDTyxtQ0FBbUMsQ0FBSSxJQUFpQixFQUNqQix1QkFBNkMsRUFBRTtRQUU5RixJQUFJLG9CQUFvQixJQUFJLElBQUksSUFBSSxvQkFBb0IsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3JFLE9BQU8sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEM7UUFDRCxJQUFJLFFBQVEsR0FBYSxFQUFFLENBQUM7UUFDNUIsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFM0Msb0JBQW9CLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2pDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBRSxJQUFxQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRTtnQkFDakUseUVBQXlFO2dCQUV6RSxNQUFNLEtBQUssR0FBb0IsSUFBcUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQy9ELEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7b0JBRXRCLElBQUksR0FBRyxDQUFDLGNBQWMsRUFBRTt3QkFDdEIsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLG1DQUFtQyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztxQkFDbkc7eUJBQU07d0JBQ0wsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7cUJBQy9DO2dCQUNILENBQUMsQ0FBQyxDQUFDO2FBRUo7aUJBQU0sRUFBRSxpQ0FBaUM7Z0JBRXhDLElBQUksR0FBRyxDQUFDLGNBQWMsRUFBRTtvQkFDdEIsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLG1DQUFtQyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztpQkFDaEc7cUJBQU07b0JBQ0wsTUFBTSxPQUFPLEdBQUssSUFBcUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFrQixDQUFDO29CQUNuRSxJQUFJLE9BQU8sSUFBSSxJQUFJLElBQUksTUFBTSxJQUFJLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTt3QkFDMUQsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7cUJBQy9DO29CQUNELHlEQUF5RDtpQkFDMUQ7YUFFRjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUVEOzs7T0FHRztJQUNPLHdDQUF3QyxDQUNoRCxJQUFPLEVBQ1AsdUJBQThDLEVBQUU7UUFFaEQscURBQXFEO1FBQ3JELElBQUksVUFBVSxHQUE4QixFQUFFLENBQUM7UUFDL0MsTUFBTSxjQUFjLEdBQThCLEVBQUUsQ0FBQztRQUVyRCw0R0FBNEc7UUFFNUcsc0JBQXNCO1FBQ3RCLEtBQUssTUFBTSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQy9DLDJCQUEyQjtZQUMzQixJQUFJLG9CQUFvQixJQUFJLG9CQUFvQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQzNELE1BQU0sbUJBQW1CLEdBQW9DLG9CQUFvQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7Z0JBRXhILElBQUksbUJBQW1CLEVBQUU7b0JBQ3ZCLGNBQWMsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7aUJBQzdCO3FCQUFNO29CQUNMLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7aUJBQ3pCO2FBQ0Y7aUJBQU07Z0JBQ0wsVUFBVSxHQUFHLElBQUksQ0FBQzthQUNuQjtTQUNGO1FBR0QsT0FBTztZQUNMLFVBQVU7WUFDVixjQUFjO1NBQ2lCLENBQUM7SUFDcEMsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDTyxZQUFZLENBQUMsS0FBaUI7UUFDdEMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUM5QixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQUdEOzs7Ozs7Ozs7Ozs7O0dBYUc7QUFDSCxNQUFNLE9BQU8sY0FBYztJQUl6QixZQUFtQixHQUEyQjtRQUEzQixRQUFHLEdBQUgsR0FBRyxDQUF3QjtRQUZ2QyxxQkFBZ0IsR0FBc0IsRUFBRSxDQUFDO0lBR2hELENBQUM7SUFFRCxtREFBbUQ7SUFDbkQsTUFBTSxDQUFDLFFBQVEsQ0FBSSxTQUFvQixFQUFFLElBQVk7UUFDbkQsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQTJCLENBQUM7UUFDbEUsT0FBTyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRUQsdURBQXVEO0lBQ3ZELElBQUksS0FBSztRQUNQLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsc0ZBQXNGO0lBQ3RGLFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELEtBQUssQ0FBQyxTQUE2QixFQUFFLEtBQW9CLEVBQUUsS0FBYztRQUN2RSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDM0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsT0FBTyxDQUFDLFNBQTZCLEVBQUUsWUFBK0I7UUFDcEUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFDN0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQWM7UUFDbEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUMxQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxXQUFXLENBQUMsTUFBYztRQUN4QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELE9BQU8sQ0FBQyxRQUFvQyxFQUFFLEdBQUcsV0FBc0I7UUFDckUsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQy9DO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ3JEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsVUFBVSxDQUFDLFFBQW9DLEVBQUUsR0FBRyxXQUFzQjtRQUN4RSxJQUFJLFFBQVEsRUFBRTtZQUNaLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7U0FDbEQ7YUFBTSxJQUFJLFdBQVcsRUFBRTtZQUN0QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUM7U0FDeEQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFLRCxLQUFLLENBQUMsUUFBb0MsRUFBRSxHQUFHLFdBQXNCO1FBQ25FLElBQUksUUFBUSxFQUFFO1lBQ1osSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztTQUM3QzthQUFNLElBQUksV0FBVyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztTQUNuRDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELFNBQVMsQ0FBQyxRQUFvQyxFQUFFLEdBQUcsV0FBc0I7UUFDdkUsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ3ZEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvbWJpbmVMYXRlc3QsIGZvcmtKb2luLCBmcm9tLCBPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQge2NhdGNoRXJyb3IsIGZpbHRlciwgbWFwLCBtZXJnZU1hcCwgc3dpdGNoTWFwLCB0YWtlLCB0YXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHtcclxuICBjb2xsZWN0aW9uLFxyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgZW5kQXQsXHJcbiAgZW5kQmVmb3JlLFxyXG4gIEZpZWxkUGF0aCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jcyxcclxuICBsaW1pdCxcclxuICBsaW1pdFRvTGFzdCxcclxuICBvcmRlckJ5LFxyXG4gIE9yZGVyQnlEaXJlY3Rpb24sXHJcbiAgcXVlcnksXHJcbiAgUXVlcnksXHJcbiAgUXVlcnlDb25zdHJhaW50LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc3RhcnRBZnRlcixcclxuICBzdGFydEF0LFxyXG4gIHdoZXJlLFxyXG4gIFdoZXJlRmlsdGVyT3AsXHJcbiAgd3JpdGVCYXRjaCxcclxuICBXcml0ZUJhdGNoXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcbmltcG9ydCB7XHJcbiAgYWRkQ3JlYXRlZERhdGUsXHJcbiAgYWRkRGF0YVRvSXRlbSxcclxuICBhZGRNb2RpZmllZERhdGUsXHJcbiAgY29udmVydFRpbWVzdGFtcFRvRGF0ZSxcclxuICBnZXREb2NSZWZXaXRoSWQsXHJcbiAgZ2V0UmVmRnJvbVBhdGgsXHJcbiAgZ2V0U3ViQ29sbGVjdGlvblxyXG59IGZyb20gJy4vaGVscGVycyc7XHJcbmltcG9ydCB7U3ViQ29sbGVjdGlvblF1ZXJ5fSBmcm9tICcuL3N1Yi1jb2xsZWN0aW9uLXF1ZXJ5JztcclxuaW1wb3J0IHtCYXNlRmlyZXN0b3JlV3JhcHBlciwgRmlyZXN0b3JlRXJyb3JFeHR9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7RmlyZUl0ZW0sIEZpcmVzdG9yZUl0ZW0sIEZpcmVzdG9yZU1ldGFkYXRhfSBmcm9tICcuL21vZGVscy9maXJlc3RvcmVJdGVtJztcclxuaW1wb3J0IHtTdWJDb2xsZWN0aW9uV3JpdGVyfSBmcm9tICcuL3N1Yi1jb2xsZWN0aW9uLXdyaXRlcic7XHJcbmltcG9ydCB7bW92ZUl0ZW1JbkFycmF5LCB0cmFuc2ZlckFycmF5SXRlbX0gZnJvbSAnLi9kcmFnLXV0aWxzJztcclxuXHJcbi8qKlxyXG4gKiBBY3Rpb24gdG8gYmUgdGFrZW4gYnkgbGlzdGVuZXIgaWYgdGhlIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0LlxyXG4gKi9cclxuZXhwb3J0IGVudW0gRG9jTm90RXhpc3RBY3Rpb24ge1xyXG4gIC8qKiByZXR1cm5zIGEgbnVsbCBvYmplY3QgKi9cclxuICBSRVRVUk5fTlVMTCxcclxuXHJcbiAgLyoqIHJldHVybiBhbGwgdGhlIGV4dHJhcyBzdWNoIGFzIHJlZiwgcGF0aCBhbmQgc28gb24gYnV0IG5vIGRhdGEsIGtpbmRhIGp1c3QgaWdub3JlcyB0aGF0IHRoZSBkb2MgaXNuJ3QgdGhlcmUgKi9cclxuICBSRVRVUk5fQUxMX0JVVF9EQVRBLFxyXG5cclxuICAvKiogZG8gbm90IHJldHVybiBhdCBhbGwgdW50aWwgaXQgZG9lcyBleGlzdCAqL1xyXG4gIEZJTFRFUixcclxuXHJcbiAgLyoqIHJldHVybiBkb2Mgbm90IGZvdW5kIGVycm9yICdkb2Nfbm90X2ZvdW5kJyAqL1xyXG4gIFRIUk9XX0RPQ19OT1RfRk9VTkQsXHJcbn1cclxuXHJcbi8qKiBVc2VkIGludGVybmFsbHkgKi9cclxuaW50ZXJmYWNlIEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQge1xyXG4gIC8qKiBjb250YWlucyB0aGUgZG9jdW1lbnQgdGhhdCBpcyBjb25zaWRlcmVkIHRoZSBjdXJyZW50ICovXHJcbiAgY3VycmVudERvYzogRmlyZUl0ZW08e30+O1xyXG4gIC8qKiBzdWIgY29sbGVjdGlvbnMgb2YgY3VycmVudCBkb2N1bWVudCAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTWFpbiBDbGFzcy5cclxuICpcclxuICpcclxuICpcclxuICovXHJcbmV4cG9ydCBjbGFzcyBGaXJlc3RvcmVFeHRlbmRlZCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbnN0cnVjdG9yIGZvciBBbmd1bGFyRmlyZXN0b3JlV3JhcHBlclxyXG4gICAqXHJcbiAgICogQHBhcmFtIGZzIEZpcmVzdG9yZSB3cmFwcGVyIEZpcmVzdG9yZSBleHRlbmRlZCBjYW4gYmUgdXNlZCBieSBtYW55IEZpcmVzdG9yZSBpbXBsZW1lbnRhdGlvbnNcclxuICAgKiBAcGFyYW0gZGVmYXVsdERvY0lkIFRoZSBkZWZhdWx0IG5hbWUgZ2l2ZW4gdG8gYSBzdWJDb2xsZWN0aW9uIGRvY3VtZW50IHdoZW4gbm8gbmFtZSBpcyBnaXZlblxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnM6IEJhc2VGaXJlc3RvcmVXcmFwcGVyLCBwdWJsaWMgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICB9XHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIExJU1RFTiAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIEFsbG93cyBmb3IgbGlzdGVuaW5nIHRvIGRvY3VtZW50cyBhbmQgY29sbGVjdGlvbnMgbiBkZWVwIHVwIHRvIHRoZSBmaXJlc3RvcmUgbWF4IG9mIDEwMCBsZXZlbHMuXHJcbiAgICpcclxuICAgKiBUcmlnZ2VycyBmb3IgYW55IGNoYW5nZSBpbiBhbnkgZG9jdW1lbnQgdGhhdCBpcyBsaXN0ZW5lZCB0by5cclxuICAgKlxyXG4gICAqXHJcbiAgICogRS54OlxyXG4gICAqICAgICAgY29uc3Qgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW1xyXG4gICAqICAgICAgICAgeyBuYW1lOiAnZGF0YScgfSxcclxuICAgKiAgICAgICAgIHsgbmFtZTogJ3NlY3VyZScgfSxcclxuICAgKiAgICAgICAgIHsgbmFtZTogJ3ZhcmlhbnRzJyB9LFxyXG4gICAqICAgICAgICAgeyBuYW1lOiAnaW1hZ2VzJyxcclxuICAgKiAgICAgICAgICAgcXVlcnlGbjogcmVmID0+IHJlZi5vcmRlckJ5KCdpbmRleCcpLFxyXG4gICAqICAgICAgICAgICBjb2xsZWN0aW9uV2l0aE5hbWVzOiBbXHJcbiAgICogICAgICAgICAgICAgeyBuYW1lOiAnc2VjdXJlJ31cclxuICAgKiAgICAgICAgICAgXVxyXG4gICAqICAgICAgICAgfSxcclxuICAgKiAgICAgXTtcclxuICAgKlxyXG4gICAqICAgICB0aGlzLmxpc3RlbkZvckRvY0FuZFN1YkNvbGxlY3Rpb25zPFByb2R1Y3Q+KGRvY0ZzLCBjb2xsZWN0aW9ucylcclxuICAgKlxyXG4gICAqIFdyYXBwZXIgZm9yIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkIHNvIHRoYXQgd2UgY2FuIGNhc3QgdGhlIHJldHVybiB0byB0aGUgY29ycmVjdCB0eXBlXHJcbiAgICogQWxsIGxvZ2ljIGlzIGluIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiAtIGEgZG9jUmVmIHdpdGggcG90ZW50aWFsIHF1ZXJ5Rm5cclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgLSBzZWUgZXhhbXBsZVxyXG4gICAqIEBwYXJhbSBhY3Rpb25JZk5vdEV4aXN0IEFjdGlvbiB0byB0YWtlIGlmIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckRvYyQ8VCA9IEZpcmVzdG9yZUl0ZW0gfCBEb2N1bWVudERhdGE+KFxyXG4gICAgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIHJldHVybiB0aGlzLmxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMsIGFjdGlvbklmTm90RXhpc3QpLnBpcGUoXHJcbiAgICAgIG1hcChkYXRhID0+IGRhdGEgYXMgRmlyZUl0ZW08VD4pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2FtZSBhcyBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5zbmFwc2hvdENoYW5nZXMgYnV0IGl0IGFkZHMgdGhlIHByb3BlcnRpZXMgaW4gRmlyZWJhc2VEYkl0ZW0uXHJcbiAgICpcclxuICAgKiBJbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHdpbGwgdHJpZ2dlciBmb3IgZXZlcnkgY2hhbmdlL3VwZGF0ZSBvbiBhbnkgb2YgdGhlIGRvY3VtZW50cyB3ZSBhcmUgbGlzdGVuaW5nIHRvLlxyXG4gICAqIFRoYXQgbWVhbnMgdGhhdCBpZiBhbnkgZG9jdW1lbnQgd2UgYXJlIGxpc3RlbmluZyB0byBpcyBjaGFuZ2VkIHRoZSBlbnRpcmUgb2JqZWN0IHdpbGwgYmUgdHJpZ2dlcmVkIGNvbnRhaW5pbmcgdGhlIHVwZGF0ZWQgZGF0YS5cclxuICAgKlxyXG4gICAqXHJcbiAgICogICAgRXhhbXBsZSB1c2FnZS5cclxuICAgKlxyXG4gICAqICAgIG5nRmlyZXN0b3JlRGVlcDogUnhGaXJlc3RvcmVFeHRlbmRlZDsgIC8vICBSeEZpcmVzdG9yZUV4dGVuZGVkIHZhcmlhYmxlXHJcbiAgICogICAgcmVzdGF1cmFudENvbGxlY3Rpb25GcyA9IHRoaXMubmdGaXJlU3RvcmUuY29sbGVjdGlvbigncmVzdGF1cmFudHMnKTsgLy8gQW5ndWxhckZpcmVzdG9yZUNvbGxlY3Rpb25SZWYgdG8gcmVzdGF1cmFudHNcclxuICAgKlxyXG4gICAqICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmdGaXJlU3RvcmU6IEFuZ3VsYXJGaXJlc3RvcmUpIHtcclxuICAgKiAgICAgICAgdGhpcy5uZ0ZpcmVzdG9yZURlZXAgPSBuZXcgUnhGaXJlc3RvcmVFeHRlbmRlZChuZ0ZpcmVTdG9yZSk7ICAvLyAgaW5pdGlhbGl6ZSBBbmd1bGFyRmlyZVN0b3JlRGVlcCB3aXRoIEFuZ3VsYXJGaXJlc3RvcmVcclxuICAgKiAgICB9XHJcbiAgICpcclxuICAgKiAgICBsaXN0ZW5Gb3JSZXN0YXVyYW50cyQoKTogT2JzZXJ2YWJsZTxSZXN0YXVyYW50SXRlbVtdPiB7XHJcbiAgICogICAgICAgIHJldHVybiB0aGlzLm5nRmlyZXN0b3JlRGVlcC5saXN0ZW5Gb3JDb2xsZWN0aW9uJDxSZXN0YXVyYW50SXRlbT4odGhpcy5yZXN0YXVyYW50Q29sbGVjdGlvbkZzKTtcclxuICAgKiAgICB9XHJcbiAgICpcclxuICAgKiAgICBJZiB5b3UgZG8gbm90IHdpc2ggdG8gbGlzdGVuIGZvciBjaGFuZ2VzIGFuZCBvbmx5IGNhcmUgYWJvdXQgZ2V0dGluZyB0aGUgdmFsdWVzIG9uY2VcclxuICAgKlxyXG4gICAqICAgIGdldFJlc3RhdXJhbnRzJCgpOiBPYnNlcnZhYmxlPFJlc3RhdXJhbnRJdGVtW10+IHtcclxuICAgKiAgICAgICAgcmV0dXJuIHRoaXMubmdGaXJlc3RvcmVEZWVwLmxpc3RlbkZvckNvbGxlY3Rpb24kPFJlc3RhdXJhbnRJdGVtPih0aGlzLnJlc3RhdXJhbnRDb2xsZWN0aW9uRnMpLnBpcGUoXHJcbiAgICogICAgICAgICAgdGFrZSgxKVxyXG4gICAqICAgICAgICApO1xyXG4gICAqICAgIH1cclxuICAgKlxyXG4gICAqIEBwYXJhbSBfcXVlcnkgdGhlIGNvbGxlY3Rpb25SZWYgd2hpY2ggd2lsbCBiZSBsaXN0ZW5lZCB0b1xyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllc1xyXG4gICAqIEBwYXJhbSBkb2N1bWVudENoYW5nZVR5cGVzIGxpc3Qgb2YgRG9jdW1lbnRDaGFuZ2VUeXBlIHRoYXQgd2lsbCBiZSBsaXN0ZW5lZCB0bywgaWYgbnVsbCBsaXN0ZW4gdG8gYWxsXHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckNvbGxlY3Rpb24kPFQgPSBGaXJlc3RvcmVJdGVtIHwgRG9jdW1lbnREYXRhPihcclxuICAgIF9xdWVyeTogUXVlcnk8VD4sXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8QXJyYXk8RmlyZUl0ZW08VD4+PiB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZW1pdCB3aGVuZXZlciB0aGUgcmVmIGNoYW5nZXMgaW4gYW55IHdheS5cclxuICAgICAqIEFsc28gYWRkcyB0aGUgaWQgYW5kIHJlZiB0byB0aGUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uU2ltcGxlJDxUPihfcXVlcnkpLnBpcGUoXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW1zID09IG51bGwgfHwgaXRlbXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoW10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgIHJldHVybiBvZihpdGVtcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBjb2xsZWN0aW9uTGlzdGVuZXJzOiBBcnJheTxPYnNlcnZhYmxlPGFueT4+ID0gW107XHJcblxyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgY29uc3QgY29sbGVjdGlvbkxpc3RlbmVyID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG5cclxuICAgICAgICAgIGNvbGxlY3Rpb25MaXN0ZW5lcnMucHVzaChjb2xsZWN0aW9uTGlzdGVuZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKiBGaW5hbGx5IHJldHVybiB0aGUgY29tYmluZWQgY29sbGVjdGlvbiBsaXN0ZW5lcnMgKi9cclxuICAgICAgICByZXR1cm4gY29tYmluZUxhdGVzdChjb2xsZWN0aW9uTGlzdGVuZXJzKTtcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBMaXN0ZW5zIGZvciBjb2xsZWN0aW9ucyBpbnNpZGUgY29sbGVjdGlvbnMgd2l0aCB0aGUgc2FtZSBuYW1lIHRvIGFuIHVubGltaXRlZCBkZXB0aCBhbmQgcmV0dXJucyBhbGwgb2YgaXQgYXMgYW4gYXJyYXkuXHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckNvbGxlY3Rpb25SZWN1cnNpdmVseSQ8VCA9IEZpcmVzdG9yZUl0ZW0gfCBEb2N1bWVudERhdGE+KFxyXG4gICAgY29sbGVjdGlvblBhdGg6IHN0cmluZyxcclxuICAgIGNvbGxlY3Rpb25LZXk6IHN0cmluZyxcclxuICAgIG9yZGVyS2V5Pzogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuXHJcbiAgICAvLyBjb25zdCBjb2xsZWN0aW9uUmVmID0gZ2V0UmVmRnJvbVBhdGgoY29sbGVjdGlvblBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+O1xyXG4gICAgY29uc3QgY29sbGVjdGlvblF1ZXJ5ID0gbmV3IFF1ZXJ5Q29udGFpbmVyPFQ+KGdldFJlZkZyb21QYXRoKGNvbGxlY3Rpb25QYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPik7XHJcbiAgICBpZiAob3JkZXJLZXkgIT0gbnVsbCkge1xyXG4gICAgICBjb2xsZWN0aW9uUXVlcnkub3JkZXJCeShvcmRlcktleSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMubGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQ8VD4oY29sbGVjdGlvblF1ZXJ5LnF1ZXJ5KS5waXBlKFxyXG4gICAgICBtZXJnZU1hcCgoaXRlbXM6IEZpcmVJdGVtPFQ+W10pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW1zLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoW10pO1xyXG4gICAgICAgIH0gLy8gVE9ETyAgcGVyaGFwcyBtYWtlIHRoaXMgdGhyb3cgYW4gZXJyb3Igc28gdGhhdCB3ZSBjYW4gc2tpcCBpdFxyXG5cclxuICAgICAgICAvLyBpZiAoaXRlbXMubGVuZ3RoIDw9IDApIHsgdGhyb3dFcnJvcignTm8gbW9yZSAnKTsgfVxyXG5cclxuICAgICAgICBjb25zdCBuZXh0TGV2ZWxPYnM6IEFycmF5PE9ic2VydmFibGU8RmlyZUl0ZW08VD4+PiA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcclxuXHJcbiAgICAgICAgICAvLyBjb25zdCBuZXh0TGV2ZWxQYXRoID0gaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYuY29sbGVjdGlvbihjb2xsZWN0aW9uS2V5KS5wYXRoOyAgLy8gb25lIGxldmVsIGRlZXBlclxyXG4gICAgICAgICAgY29uc3QgbmV4dExldmVsUGF0aCA9IGl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEucmVmLnBhdGguY29uY2F0KCcvJywgY29sbGVjdGlvbktleSk7ICAvLyBvbmUgbGV2ZWwgZGVlcGVyXHJcblxyXG4gICAgICAgICAgY29uc3QgbmV4dExldmVsSXRlbXMkID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uUmVjdXJzaXZlbHkkKG5leHRMZXZlbFBhdGgsIGNvbGxlY3Rpb25LZXksIG9yZGVyS2V5KS5waXBlKFxyXG4gICAgICAgICAgICBtYXAoKG5leHRMZXZlbEl0ZW1zOiBBcnJheTxGaXJlSXRlbTxUPj4pID0+IHtcclxuICAgICAgICAgICAgICBpZiAobmV4dExldmVsSXRlbXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsuLi5pdGVtLCBbY29sbGVjdGlvbktleV06IG5leHRMZXZlbEl0ZW1zfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsuLi5pdGVtfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICAgICAgICB9ICAvLyBkb250IGluY2x1ZGUgYW4gZW1wdHkgYXJyYXlcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgbmV4dExldmVsT2JzLnB1c2gobmV4dExldmVsSXRlbXMkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KG5leHRMZXZlbE9icykucGlwZShcclxuICAgICAgICAgIHRhcCh2YWwgPT4gY29uc29sZS5sb2codmFsKSlcclxuICAgICAgICApO1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKiAtLS0tLS0tLS0tIEFERCAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBBZGQgZG9jdW1lbnQgdG8gZmlyZXN0b3JlIGFuZCBzcGxpdCBpdCB1cCBpbnRvIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgdGhlIGRhdGEgdG8gYmUgc2F2ZWRcclxuICAgKiBAcGFyYW0gY29sbGVjdGlvblJlZiBDb2xsZWN0aW9uUmVmZXJlbmNlIHJlZmVyZW5jZSB0byB3aGVyZSBvbiBmaXJlc3RvcmUgdGhlIGl0ZW0gc2hvdWxkIGJlIHNhdmVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25Xcml0ZXJzIHNlZSBkb2N1bWVudGF0aW9uIGZvciBTdWJDb2xsZWN0aW9uV3JpdGVyIGZvciBtb3JlIGRldGFpbHMgb24gaG93IHRoZXNlIGFyZSB1c2VkXHJcbiAgICogQHBhcmFtIGlzQWRkRGF0ZXMgaWYgdHJ1ZSAnY3JlYXRlZERhdGUnIGFuZCAnbW9kaWZpZWREYXRlJyBpcyBhZGRlZCB0byB0aGUgZGF0YVxyXG4gICAqIEBwYXJhbSBkb2NJZCBJZiBhIGRvY0lkIGlzIGdpdmVuIGl0IHdpbGwgdXNlIHRoYXQgc3BlY2lmaWMgaWQgd2hlbiBzYXZpbmcgdGhlIGRvYywgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYSByYW5kb20gaWQgd2lsbCBiZSB1c2VkLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBhZGQkPFQgPSBGaXJlc3RvcmVJdGVtPihcclxuICAgIGRhdGE6IFQsXHJcbiAgICBjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LFxyXG4gICAgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtdLFxyXG4gICAgaXNBZGREYXRlczogYm9vbGVhbiA9IHRydWUsXHJcbiAgICBkb2NJZD86IHN0cmluZyk6IE9ic2VydmFibGU8RmlyZUl0ZW08VD4+IHtcclxuXHJcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSAmJiBkb2NJZCAmJiBzdWJDb2xsZWN0aW9uV3JpdGVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IGVycm9yOiBGaXJlc3RvcmVFcnJvckV4dCA9IHtcclxuICAgICAgICBuYW1lOiAnZmlyZXN0b3JlRXh0L2ludmFsaWQtc3ViLWNvbGxlY3Rpb24td3JpdGVycycsXHJcbiAgICAgICAgY29kZTogJ3Vua25vd24nLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdDYW5ub3QgaGF2ZSBib3RoIGRvY0lkIGFuZCBzdWJDb2xsZWN0aW9uV3JpdGVycyBhdCB0aGUgc2FtZSB0aW1lIHdoZW4gZGF0YSBpcyBhbiBhcnJheScsXHJcbiAgICAgICAgc3RhY2s6ICcnLFxyXG4gICAgICAgIGRhdGEsXHJcbiAgICAgICAgc3ViQ29sbGVjdGlvbldyaXRlcnMsXHJcbiAgICAgICAgZG9jSWRcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBjdXJyZW50RG9jO1xyXG4gICAgbGV0IHN1YkNvbGxlY3Rpb25zOiB7IFtpbmRleDogc3RyaW5nXTogYW55OyB9ID0ge307XHJcblxyXG4gICAgLyogaWYgdGhlIGRhdGEgaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGVudGlyZSBhcnJheSB3aWxsIGJlIHNhdmVkIGluIGEgc2luZ2xlIGRvY3VtZW50IHdpdGggdGhhdCBkb2NJZCxcclxuICAgICogRWFjaCBpdGVtIGluIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGEgbWFwIHdpdGggdGhlIGtleSBiZWluZyB0aGUgYXJyYXkgaW5kZXhcclxuICAgICogV2Ugc3RpbGwgd2FudCB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoaXMgZnVuY3Rpb24gdG8gYmUgYXMgYW4gYXJyYXkgbm9uIGFzIGEgbWFwXHJcbiAgICAqL1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZG9jSWQpIHtcclxuICAgICAgY3VycmVudERvYyA9IGRhdGE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCBzcGxpdCA9IHRoaXMuc3BsaXREYXRhSW50b0N1cnJlbnREb2NBbmRTdWJDb2xsZWN0aW9ucyhkYXRhLCBzdWJDb2xsZWN0aW9uV3JpdGVycyk7XHJcbiAgICAgIGN1cnJlbnREb2MgPSBzcGxpdC5jdXJyZW50RG9jO1xyXG4gICAgICBzdWJDb2xsZWN0aW9ucyA9IHNwbGl0LnN1YkNvbGxlY3Rpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmFkZFNpbXBsZSQ8VD4oY3VycmVudERvYyBhcyBULCBjb2xsZWN0aW9uUmVmLCBpc0FkZERhdGVzLCBkb2NJZCkucGlwZShcclxuICAgICAgLyogQWRkIFN1Yi9zdWIgY29sbGVjdGlvbnMqL1xyXG4gICAgICBtZXJnZU1hcCgoY3VycmVudERhdGE6IEZpcmVJdGVtPFQ+KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnN0IHN1YldyaXRlcnM6IEFycmF5PE9ic2VydmFibGU8YW55Pj4gPSBbXTtcclxuXHJcbiAgICAgICAgZm9yIChjb25zdCBbc3ViQ29sbGVjdGlvbktleSwgc3ViQ29sbGVjdGlvblZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdWJDb2xsZWN0aW9ucykpIHtcclxuICAgICAgICAgIGxldCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdIHwgdW5kZWZpbmVkOyAvLyB1bmRlZmluZWQgaWYgbm8gc3ViQ29sbGVjdGlvbldyaXRlcnNcclxuICAgICAgICAgIGxldCBzdWJEb2NJZDogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG5cclxuICAgICAgICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycykge1xyXG4gICAgICAgICAgICBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycyA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5zdWJDb2xsZWN0aW9ucztcclxuICAgICAgICAgICAgc3ViRG9jSWQgPSBzdWJDb2xsZWN0aW9uV3JpdGVycy5maW5kKHN1YkNvbGwgPT4gc3ViQ29sbC5uYW1lID09PSBzdWJDb2xsZWN0aW9uS2V5KT8uZG9jSWQ7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY29uc3Qgc3ViQ29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSA9IGdldFN1YkNvbGxlY3Rpb24oY3VycmVudERhdGEuZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uS2V5KTtcclxuXHJcbiAgICAgICAgICAvKiBIYW5kbGUgYXJyYXkgYW5kIG9iamVjdCBkaWZmZXJlbnRseVxyXG4gICAgICAgICAgKiBGb3IgZXhhbXBsZSBpZiBhcnJheSBhbmQgbm8gZG9jSWQgaXMgZ2l2ZW4gaXQgbWVhbnMgd2Ugc2hvdWxkIHNhdmUgZWFjaCBlbnRyeSBhcyBhIHNlcGFyYXRlIGRvYy5cclxuICAgICAgICAgICogSWYgYSBkb2NJZCBpcyBnaXZlbiB3ZSBzaG91bGQgc2F2ZSBpdCB1c2luZyB0aGF0IGRvY0lkIHVuZGVyIGEgc2luZ2xlIGRvYy5cclxuICAgICAgICAgICogSWYgbm90IGFuIGFycmF5IGl0IHdpbGwgYWx3YXlzIGJlIHNhdmVkIGFzIGEgc2luZ2xlIGRvYywgdXNpbmcgdGhpcy5kZWZhdWx0RG9jSWQgYXMgdGhlIGRlZmF1bHQgZG9jSWQgaWYgbm9uZSBpcyBnaXZlbiAqL1xyXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3ViQ29sbGVjdGlvblZhbHVlKSkge1xyXG4gICAgICAgICAgICBpZiAoc3ViRG9jSWQgIT09IHVuZGVmaW5lZCkgeyAvKiBub3QgdW5kZWZpbmVkIHNvIHNhdmUgaXQgYXMgYSBzaW5nbGUgZG9jIHVuZGVyIHRoYXQgZG9jSWQgKi9cclxuXHJcbiAgICAgICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHN1YkNvbGxlY3Rpb25WYWx1ZSBub3QgZm9yIHdyaXRpbmcgdGhlIGRhdGEgKi9cclxuICAgICAgICAgICAgICBjb25zdCBzdWJXcml0ZXIgPSB0aGlzLmFkZCQoc3ViQ29sbGVjdGlvblZhbHVlLCBzdWJDb2xsZWN0aW9uUmVmLCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycywgaXNBZGREYXRlcywgc3ViRG9jSWQpLnBpcGUoXHJcbiAgICAgICAgICAgICAgICBtYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIC8vIHJldHVybiB7W2tleV06IGl0ZW19O1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4ge2tleTogc3ViQ29sbGVjdGlvbktleSwgdmFsdWU6IGl0ZW19OyAvKiBrZXkgYW5kIHN1YkNvbGxlY3Rpb25WYWx1ZSBhcyBzZXBhcmF0ZSBrLHYgcHJvcGVydGllcyAqL1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgIHN1YldyaXRlcnMucHVzaChzdWJXcml0ZXIpO1xyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHsgLyogZG9jSWQgaXMgdW5kZWZpbmVkIHNvIHdlIHNhdmUgZWFjaCBvYmplY3QgaW4gdGhlIGFycmF5IHNlcGFyYXRlICovXHJcbiAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvblZhbHVlLmZvckVhY2goKGFycmF5VmFsdWU6IEZpcmVJdGVtPHt9PikgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIC8qIHRoZSBwaXBlIG9ubHkgbWF0dGVycyBmb3IgdGhlIHJldHVybiBzdWJDb2xsZWN0aW9uVmFsdWUgbm90IGZvciB3cml0aW5nIHRoZSBkYXRhICovXHJcbiAgICAgICAgICAgICAgICBjb25zdCBzdWJXcml0ZXIgPSB0aGlzLmFkZCQoYXJyYXlWYWx1ZSwgc3ViQ29sbGVjdGlvblJlZiwgc3ViU3ViQ29sbGVjdGlvbldyaXRlcnMsIGlzQWRkRGF0ZXMpLnBpcGUoXHJcbiAgICAgICAgICAgICAgICAgIG1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4ge1trZXldOiBbaXRlbV19O1xyXG4gICAgICAgICAgICAgICAgICAgIC8qIGtleSBhbmQgc3ViQ29sbGVjdGlvblZhbHVlIGFzIHNlcGFyYXRlIGssdiBwcm9wZXJ0aWVzIC0tIHN1YkNvbGxlY3Rpb25WYWx1ZSBpbiBhbiBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7a2V5OiBzdWJDb2xsZWN0aW9uS2V5LCB2YWx1ZTogW2l0ZW1dfTtcclxuICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAgICAgc3ViV3JpdGVycy5wdXNoKHN1YldyaXRlcik7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7IC8qIE5vdCBhbiBhcnJheSBzbyBhIHNpbmdsZSBPYmplY3QqL1xyXG4gICAgICAgICAgICBzdWJEb2NJZCA9IHN1YkRvY0lkICE9PSB1bmRlZmluZWQgPyBzdWJEb2NJZCA6IHRoaXMuZGVmYXVsdERvY0lkO1xyXG5cclxuICAgICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHN1YkNvbGxlY3Rpb25WYWx1ZSBub3QgZm9yIHdyaXRpbmcgdGhlIGRhdGEgKi9cclxuICAgICAgICAgICAgY29uc3Qgc3ViV3JpdGVyID0gdGhpcy5hZGQkKHN1YkNvbGxlY3Rpb25WYWx1ZSwgc3ViQ29sbGVjdGlvblJlZiwgc3ViU3ViQ29sbGVjdGlvbldyaXRlcnMsIGlzQWRkRGF0ZXMsIHN1YkRvY0lkKS5waXBlKFxyXG4gICAgICAgICAgICAgIG1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIHJldHVybiB7W2tleV06IGl0ZW19O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtrZXk6IHN1YkNvbGxlY3Rpb25LZXksIHZhbHVlOiBpdGVtfTsgLyoga2V5IGFuZCBzdWJDb2xsZWN0aW9uVmFsdWUgYXMgc2VwYXJhdGUgayx2IHByb3BlcnRpZXMgKi9cclxuICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgc3ViV3JpdGVycy5wdXNoKHN1YldyaXRlcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSAvKiBlbmQgb2YgaXRlcmF0aW9uICovXHJcblxyXG4gICAgICAgIGlmIChzdWJXcml0ZXJzLmxlbmd0aCA+IDApIHsgLyogaWYgc3ViV3JpdGVycy5sZW5ndGggPiAwIGl0IG1lYW5zIHdlIG5lZWQgdG8gaGFuZGxlIHRoZSBzdWJXcml0ZXJzICovXHJcblxyXG4gICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHZhbHVlIG5vdCBmb3Igd3JpdGluZyB0aGUgZGF0YSAqL1xyXG4gICAgICAgICAgcmV0dXJuIGNvbWJpbmVMYXRlc3Qoc3ViV3JpdGVycykucGlwZShcclxuICAgICAgICAgICAgLy8gdGFwKHN1YiA9PiBjb25zb2xlLmxvZyhzdWIpKSxcclxuXHJcbiAgICAgICAgICAgIC8vIFRPRE8gc3VwZXIgZHVwZXIgdWdseSB3YXkgb2Ygam9pbmluZyB0aGUgZGF0YSB0b2dldGhlciBidXQgSSBjYW5ub3QgdGhpbmsgb2YgYSBiZXR0ZXIgd2F5Li5hbHNvIGl0IGRvZXNudCByZWFsbHkgbWF0dGVyLlxyXG4gICAgICAgICAgICAvLyBUT0RPIFRoZSB1Z2xpbmVzcyBvbmx5IHJlbGF0ZXMgdG8gaG93IHRoZSByZXR1cm4gb2JqZWN0IGxvb2tzIGFmdGVyIHdlIGFkZCwgaXQgaGFzIG5vIGVmZmVjdCBvbiBob3cgdGhlIG9iamVjdCBpcyBzYXZlZCBvblxyXG4gICAgICAgICAgICAvLyBUT0RPIGZpcmVzdG9yZS5cclxuXHJcbiAgICAgICAgICAgIG1hcCgoZG9jRGF0YXM6IEFycmF5PE1hcDxzdHJpbmcsIFtdPj4pID0+IHsgLyogTGlzdCBvZiBzdWIgZG9jcyovXHJcbiAgICAgICAgICAgICAgY29uc3QgZ3JvdXBlZERhdGEgPSB7fTtcclxuXHJcbiAgICAgICAgICAgICAgZG9jRGF0YXMuZm9yRWFjaCgoZG9jOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0pID0+IHsgLyogaXRlcmF0ZSBvdmVyIGVhY2ggZG9jICovXHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gZG9jLmtleTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZG9jLnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIC8qIGlmIGdyb3VwZWREYXRhIGhhcyB0aGUga2V5IGFscmVhZHkgaXQgbWVhbnMgdGhhdCB0aGUgc2V2ZXJhbCBkb2NzIGhhdmUgdGhlIHNhbWUga2V5Li5zbyBhbiBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgaWYgKGdyb3VwZWREYXRhLmhhc093blByb3BlcnR5KGtleSkgJiYgQXJyYXkuaXNBcnJheShncm91cGVkRGF0YVtrZXldKSkge1xyXG4gICAgICAgICAgICAgICAgICAvKiBncm91cGVkRGF0YVtrZXldIG11c3QgYmUgYW4gYXJyYXkgc2luY2UgaXQgYWxyZWFkeSBleGlzdC4uYWRkIHRoaXMgZG9jLnZhbHVlIHRvIHRoZSBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgICAgICAgIChncm91cGVkRGF0YVtrZXldIGFzIEFycmF5PGFueT4pLnB1c2godmFsdWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgICBncm91cGVkRGF0YVtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIHJldHVybiBncm91cGVkRGF0YSBhcyBUO1xyXG4gICAgICAgICAgICB9KSxcclxuXHJcbiAgICAgICAgICAgIC8vIHRhcChncm91cGVkRGF0YSA9PiBjb25zb2xlLmxvZyhncm91cGVkRGF0YSkpLFxyXG5cclxuICAgICAgICAgICAgbWFwKChncm91cGVkRGF0YTogVCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiB7Li4uY3VycmVudERhdGEsIC4uLmdyb3VwZWREYXRhfSBhcyBUO1xyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgLy8gdGFwKGQgPT4gY29uc29sZS5sb2coZCkpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIG9mKGN1cnJlbnREYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICApLnBpcGUoXHJcbiAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIEVESVQgLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiAgLyoqXHJcbiAgICogVXBkYXRlIGRvY3VtZW50IGFuZCBjaGlsZCBkb2N1bWVudHNcclxuICAgKlxyXG4gICAqIEJlIGNhcmVmdWwgd2hlbiB1cGRhdGluZyBhIGRvY3VtZW50IG9mIGFueSBraW5kIHNpbmNlIHdlIGFsbG93IHBhcnRpYWwgZGF0YSB0aGVyZSBjYW5ub3QgYmUgYW55IHR5cGUgY2hlY2tpbmcgcHJpb3IgdG8gdXBkYXRlXHJcbiAgICogc28gaXRzIHBvc3NpYmxlIHRvIGludHJvZHVjZSBzcGVsbGluZyBtaXN0YWtlcyBvbiBhdHRyaWJ1dGVzIGFuZCBzbyBmb3J0aFxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgdGhlIGRhdGEgdGhhdCBpcyB0byBiZSBhZGRlZCBvciB1cGRhdGVkIHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfVxyXG4gICAqIEBwYXJhbSBkb2NSZWYgRG9jdW1lbnRSZWZlcmVuY2UgdG8gYmUgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uV3JpdGVycyBpZiB0aGUgZGF0YSBjb250YWlucyBwcm9wZXJ0aWVzIHRoYXQgc2hvdWxkIGJlIHBsYWNlZCBpbiBjaGlsZCBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzIHNwZWNpZnkgdGhhdCBoZXJlXHJcbiAgICogQHBhcmFtIGlzQWRkTW9kaWZpZWREYXRlIGlmIHRydWUgdGhlIG1vZGlmaWVkRGF0ZSBwcm9wZXJ0eSBpcyBhZGRlZC91cGRhdGVkIG9uIHRoZSBhZmZlY3RlZCBkb2N1bWVudHNcclxuICAgKi9cclxuICBwdWJsaWMgdXBkYXRlJDxBIGV4dGVuZHMgeyBbZmllbGQ6IHN0cmluZ106IGFueSB9PihkYXRhOiBQYXJ0aWFsPEE+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWRkTW9kaWZpZWREYXRlOiBib29sZWFuID0gdHJ1ZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gdGhpcy51cGRhdGVTaW1wbGUkKGRhdGEsIGRvY1JlZiwgaXNBZGRNb2RpZmllZERhdGUpOyAvLyBubyBzdWJDb2xsZWN0aW9uV3JpdGVycyBzbyBqdXN0IGRvIGEgc2ltcGxlIHVwZGF0ZVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGJhdGNoID0gdGhpcy51cGRhdGVEZWVwVG9CYXRjaEhlbHBlcihkYXRhLCBkb2NSZWYsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBpc0FkZE1vZGlmaWVkRGF0ZSk7XHJcbiAgICByZXR1cm4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVXBkYXRlLyBhZGQgZGF0YSB0byB0aGUgZmlyZXN0b3JlIGRvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZnMgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSB0byBiZSBoYXZlIHRoZWlyIGRhdGEgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBkYXRhIGRhdGEgdG8gYWRkL3VwZGF0ZVxyXG4gICAqIEBwYXJhbSBpc0FkZE1vZGlmaWVkRGF0ZSBpZiB0cnVlIHRoZSBtb2RpZmllZERhdGUgaXMgYWRkZWQvdXBkYXRlZFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1cGRhdGVNdWx0aXBsZSQ8QT4oZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSwgZGF0YTogQSwgaXNBZGRNb2RpZmllZERhdGU6IGJvb2xlYW4gPSB0cnVlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICAvLyBjb25zdCBiYXRjaCA9IHRoaXMuZnMuZmlyZWJhc2VBcHAuZmlyZXN0b3JlKCkuYmF0Y2goKTtcclxuICAgIGNvbnN0IGJhdGNoOiBXcml0ZUJhdGNoID0gd3JpdGVCYXRjaCh0aGlzLmZzLmZpcmVzdG9yZSk7XHJcblxyXG4gICAgaWYgKGlzQWRkTW9kaWZpZWREYXRlKSB7XHJcbiAgICAgIGRhdGEgPSBhZGRNb2RpZmllZERhdGUoZGF0YSwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGRvY1JlZnMuZm9yRWFjaCgoZG9jUmVmKSA9PiB7XHJcbiAgICAgIGJhdGNoLnVwZGF0ZShkb2NSZWYsIGRhdGEpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuYmF0Y2hDb21taXQkKGJhdGNoKTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBGaXJlc3RvcmUgZG9lc24ndCBhbGxvdyB5b3UgZG8gY2hhbmdlIHRoZSBuYW1lIG9yIG1vdmUgYSBkb2MgZGlyZWN0bHkgc28geW91IHdpbGwgaGF2ZSB0byBjcmVhdGUgYSBuZXcgZG9jIHVuZGVyIHRoZSBuZXcgbmFtZVxyXG4gICAqIGFuZCB0aGVuIGRlbGV0ZSB0aGUgb2xkIGRvYy5cclxuICAgKiByZXR1cm5zIHRoZSBuZXcgZG9jIG9uY2UgdGhlIGRlbGV0ZSBpcyBkb25lLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiBEb2N1bWVudFJlZmVyZW5jZSB0byBoYXZlIGl0cyBpZCBjaGFuZ2VkXHJcbiAgICogQHBhcmFtIG5ld0lkIHRoZSBuZXcgaWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIFN1YkNvbGxlY3Rpb25Xcml0ZXJzIGFyZSBuZWVkZWQgdG8gYWRkIHRoZW0gYmFja1xyXG4gICAqL1xyXG4gIHB1YmxpYyBjaGFuZ2VEb2NJZCQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0lkOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycyA9PSBudWxsKSB7XHJcbiAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzID0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXMgU3ViQ29sbGVjdGlvbldyaXRlcltdO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2UgPSBkb2NSZWYucGFyZW50O1xyXG5cclxuICAgIHJldHVybiB0aGlzLmxpc3RlbkZvckRvYyQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgICBtYXAoKG9sZERhdGE6IFQpID0+IHRoaXMuY2xlYW5FeHRyYXNGcm9tRGF0YShvbGREYXRhLCBzdWJDb2xsZWN0aW9uV3JpdGVycykpLFxyXG4gICAgICBzd2l0Y2hNYXAoKG9sZERhdGE6IFQpID0+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hZGQkKG9sZERhdGEsIGNvbGxlY3Rpb25SZWYsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBmYWxzZSwgbmV3SWQpLnBpcGUoIC8qIGFkZCB0aGUgZGF0YSB1bmRlciBpZCovXHJcbiAgICAgICAgICBtZXJnZU1hcChuZXdEYXRhID0+IHsgLyogZGVsZXRlIHRoZSBvbGQgZG9jICovXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRlbGV0ZSQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgICAgICAgICBtYXAoKCkgPT4gbmV3RGF0YSkgLyoga2VlcCB0aGUgbmV3IGRhdGEgKi9cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH0pLFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pLFxyXG4gICAgICBjYXRjaEVycm9yKGVyciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBDaGFuZ2UgRG9jIElkOiAnICsgZXJyKTtcclxuICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICAgIH0pLFxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgKTtcclxuXHJcbiAgfVxyXG5cclxuICAvKiBNb3ZlIEl0ZW0gaW4gQXJyYXkgKi9cclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIE1vdmVkIGl0ZW0gd2l0aGluIHRoZSBzYW1lIGxpc3Qgc28gd2UgbmVlZCB0byB1cGRhdGUgdGhlIGluZGV4IG9mIGFsbCBpdGVtcyBpbiB0aGUgbGlzdDtcclxuICAgKiBVc2UgYSBjb3B5IGlmIHlvdSBkb250IHdpc2ggdG8gdXBkYXRlIHRoZSBnaXZlbiBhcnJheSwgZm9yIGV4YW1wbGUgd2hlbiB5b3Ugd2FudCB0byBqdXN0IGxpc3RlbiBmb3IgdGhlIGNoYW5nZSBvZiB0aGUgZGIuLlxyXG4gICAqIFRoZSByZWFzb24gdG8gbm90IGRvIHRoaXMgaXMgYmVjYXVzZSBpdCB0YWtlcyBzb21lIHRpbWUgZm9yIHRoZSBkYiB0byB1cGRhdGUgYW5kIGl0IGxvb2tzIGJldHRlciBpZiB0aGUgbGlzdCB1cGRhdGVzIGltbWVkaWF0ZWx5LlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGl0ZW1zIGFycmF5IG9mIEZpcmVJdGVtPEE+IGRvY3Mgd2l0aCBpbmRleCB2YXJpYWJsZXMgdG8gYmUgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBmcm9tSW5kZXhcclxuICAgKiBAcGFyYW0gdG9JbmRleFxyXG4gICAqIEBwYXJhbSB1c2VDb3B5IGlmIHRydWUgdGhlIGdpdmVuIGFycmF5IHdpbGwgbm90IGJlIHVwZGF0ZWRcclxuICAgKi9cclxuICBwdWJsaWMgbW92ZUl0ZW1JbkFycmF5JDxBIGV4dGVuZHMgeyBpbmRleDogbnVtYmVyIH0+KGl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZUNvcHkgPSBmYWxzZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChmcm9tSW5kZXggPT0gbnVsbCB8fCB0b0luZGV4ID09IG51bGwgfHwgZnJvbUluZGV4ID09PSB0b0luZGV4IHx8IGl0ZW1zLmxlbmd0aCA8PSAwKSB7IC8vIHdlIGRpZG50IHJlYWxseSBtb3ZlIGFueXRoaW5nXHJcbiAgICAgIHJldHVybiBvZigpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpdGVtc1swXT8uZmlyZXN0b3JlTWV0YWRhdGEgPT0gbnVsbCkge1xyXG4gICAgICBjb25zdCBlcnJvcjogRmlyZXN0b3JlRXJyb3JFeHQgPSB7XHJcbiAgICAgICAgbmFtZTogJ2ZpcmVzdG9yZUV4dC91bmFibGUtdG8tY2hhbmdlLWluZGV4LW9mLW5vbi1kb2N1bWVudCcsXHJcbiAgICAgICAgY29kZTogJ25vdC1mb3VuZCcsXHJcbiAgICAgICAgbWVzc2FnZTogJ1RoZSBhcnJheSBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgYSBmaXJlc3RvcmUgZG9jdW1lbnQgb3IgRmlyZUl0ZW0gc2luY2UgaXQgbGFja3MgZmlyZXN0b3JlTWV0YWRhdGEnLFxyXG4gICAgICB9O1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBiYXRjaCA9IHRoaXMuZ2V0QmF0Y2hGcm9tTW92ZUl0ZW1JbkluZGV4ZWREb2NzKGl0ZW1zLCBmcm9tSW5kZXgsIHRvSW5kZXgsIHVzZUNvcHkpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmJhdGNoQ29tbWl0JChiYXRjaCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEb2VzIHRoZSBoZWF2eSBsaWZ0aW5nIHdoZW4gaXQgY29tZXMgdG8gdXBkYXRpbmcgbXVsdGlwbGUgZG9jcyB0byBjaGFuZ2UgdGhlaXIgaW5kZXguXHJcbiAgICogTm90IGNhbGxlZCBkaXJlY3RseS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBGaXJlSXRlbTxBPiBkb2NzIHdpdGggaW5kZXggdmFyaWFibGVzIHRvIGJlIHVwZGF0ZWRcclxuICAgKiBAcGFyYW0gZnJvbUluZGV4XHJcbiAgICogQHBhcmFtIHRvSW5kZXhcclxuICAgKiBAcGFyYW0gdXNlQ29weSBpZiB0cnVlIHRoZSBnaXZlbiBhcnJheSB3aWxsIG5vdCBiZSB1cGRhdGVkXHJcbiAgICogQHByb3RlY3RlZFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXRCYXRjaEZyb21Nb3ZlSXRlbUluSW5kZXhlZERvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihpdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9JbmRleDogbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VDb3B5ID0gZmFsc2UpOiBXcml0ZUJhdGNoIHtcclxuXHJcbiAgICBjb25zdCBsb3dlc3RJbmRleCA9IE1hdGgubWluKGZyb21JbmRleCwgdG9JbmRleCk7XHJcbiAgICBjb25zdCBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpO1xyXG5cclxuICAgIGlmIChmcm9tSW5kZXggPT0gbnVsbCB8fCB0b0luZGV4ID09IG51bGwgfHwgZnJvbUluZGV4ID09PSB0b0luZGV4KSB7IC8vIHdlIGRpZG50IHJlYWxseSBtb3ZlIGFueXRoaW5nXHJcbiAgICAgIHJldHVybiBiYXRjaDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgdXNlZEl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj47XHJcblxyXG4gICAgaWYgKHVzZUNvcHkpIHtcclxuICAgICAgdXNlZEl0ZW1zID0gT2JqZWN0LmFzc2lnbihbXSwgaXRlbXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdXNlZEl0ZW1zID0gaXRlbXM7XHJcbiAgICB9XHJcblxyXG4gICAgbW92ZUl0ZW1JbkFycmF5PEE+KHVzZWRJdGVtcywgZnJvbUluZGV4LCB0b0luZGV4KTtcclxuXHJcbiAgICBjb25zdCBsaXN0U2xpY2VUb1VwZGF0ZTogQXJyYXk8RmlyZUl0ZW08QT4+ID0gdXNlZEl0ZW1zLnNsaWNlKGxvd2VzdEluZGV4KTtcclxuXHJcbiAgICBsZXQgaSA9IGxvd2VzdEluZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGxpc3RTbGljZVRvVXBkYXRlKSB7XHJcbiAgICAgIGlmICghdXNlQ29weSkgeyAvLyB0aGlzIGlzIGp1c3Qgc28gdGhhdCB0aGUgZ2l2ZW4gYXJyYXkncyBpbmRleCBpcyBhbHNvIHVwZGF0ZWQgaW1tZWRpYXRlbHlcclxuICAgICAgICBpdGVtLmluZGV4ID0gaTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCByZWYgPSBnZXRSZWZGcm9tUGF0aChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZTtcclxuICAgICAgYmF0Y2gudXBkYXRlKHJlZiwge2luZGV4OiBpfSk7XHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2Ugd2hlbiB5b3Ugd2lzaCB0byBkZWxldGUgYW4gaW5kZXhlZCBkb2N1bWVudCBhbmQgaGF2ZSB0aGUgcmVtYWluaW5nIGRvY3VtZW50cyB1cGRhdGUgdGhlaXIgaW5kaWNlcyB0byByZWZsZWN0IHRoZSBjaGFuZ2UuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbXMgYXJyYXkgb2YgRmlyZUl0ZW08QT4gZG9jcyB3aXRoIGluZGV4IHZhcmlhYmxlcyB0byBiZSB1cGRhdGVkXHJcbiAgICogQHBhcmFtIGluZGV4VG9EZWxldGVcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXNcclxuICAgKiBAcGFyYW0gdXNlQ29weVxyXG4gICAqL1xyXG4gIHB1YmxpYyBkZWxldGVJbmRleGVkSXRlbUluQXJyYXkkPEEgZXh0ZW5kcyB7IGluZGV4OiBudW1iZXIgfT4oaXRlbXM6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4VG9EZWxldGU6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlQ29weTogYm9vbGVhbiA9IGZhbHNlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgbGV0IHVzZWRJdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG5cclxuICAgIGlmICh1c2VDb3B5KSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IE9iamVjdC5hc3NpZ24oW10sIGl0ZW1zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGl0ZW1Ub0RlbGV0ZSA9IHVzZWRJdGVtc1tpbmRleFRvRGVsZXRlXTtcclxuXHJcbiAgICAvLyBnZXQgdGhlIGRlbGV0ZSBiYXRjaCB0aGF0IGFsc28gY29udGFpbnMgYW55IHN1YiBjb2xsZWN0aW9ucyBvZiB0aGUgaXRlbVxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RGVsZXRlQmF0Y2gkKGl0ZW1Ub0RlbGV0ZS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKS5waXBlKFxyXG4gICAgICBtYXAoKGJhdGNoKSA9PiB7XHJcbiAgICAgICAgLy8gc29ydCBhbmQgcmVtb3ZlIHRoZSBpdGVtIGZyb20gdGhlIHVzZWRJdGVtcyBhbmQgdGhlbiBhZGQgdGhlIHVwZGF0ZSBpbmRleCB0byB0aGUgYmF0Y2hcclxuICAgICAgICB1c2VkSXRlbXMuc29ydChpdGVtID0+IGl0ZW0uaW5kZXgpOyAvLyBtYWtlIHN1cmUgYXJyYXkgaXMgc29ydGVkIGJ5IGluZGV4XHJcbiAgICAgICAgdXNlZEl0ZW1zLnNwbGljZShpbmRleFRvRGVsZXRlLCAxKTtcclxuXHJcbiAgICAgICAgdGhpcy5nZXRCYXRjaEZyb21VcGRhdGVJbmRleEZyb21MaXN0T2ZEb2NzPEE+KHVzZWRJdGVtcywgYmF0Y2gpO1xyXG5cclxuICAgICAgICByZXR1cm4gYmF0Y2g7XHJcbiAgICAgIH0pLFxyXG5cclxuICAgICAgc3dpdGNoTWFwKChiYXRjaCkgPT4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFVzZSB3aGVuIHlvdSB3aXNoIHRvIGRlbGV0ZSBzZXZlcmFsIGluZGV4ZWQgZG9jdW1lbnRzIGFuZCBoYXZlIHRoZSByZW1haW5pbmcgZG9jdW1lbnRzIHVwZGF0ZSB0aGVpciBpbmRpY2VzIHRvIHJlZmxlY3QgdGhlIGNoYW5nZS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBGaXJlSXRlbTxBPiBkb2NzIHdpdGggaW5kZXggdmFyaWFibGVzIHRvIGJlIHVwZGF0ZWRcclxuICAgKiBAcGFyYW0gaW5kaWNlc1RvRGVsZXRlXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzXHJcbiAgICogQHBhcmFtIHVzZUNvcHlcclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlSW5kZXhlZEl0ZW1zSW5BcnJheSQ8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihpdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNUb0RlbGV0ZTogbnVtYmVyW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlQ29weTogYm9vbGVhbiA9IGZhbHNlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgbGV0IHVzZWRJdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG5cclxuICAgIGlmICh1c2VDb3B5KSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IE9iamVjdC5hc3NpZ24oW10sIGl0ZW1zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIHVzZWRJdGVtcy5zb3J0KGl0ZW0gPT4gaXRlbS5pbmRleCk7IC8vIG1ha2Ugc3VyZSBhcnJheSBpcyBzb3J0ZWQgYnkgaW5kZXhcclxuXHJcbiAgICBjb25zdCBpdGVtc1RvRGVsZXRlID0gdXNlZEl0ZW1zLmZpbHRlcigoaXRlbSwgaSkgPT4ge1xyXG4gICAgICByZXR1cm4gaW5kaWNlc1RvRGVsZXRlLmZpbmRJbmRleChfaSA9PiBfaSA9PT0gaSkgIT09IC0xO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gaXRlcmF0ZSBpbiByZXZlcnNlIHNvIGFzIHRvIG5vdCBjaGFuZ2UgdGhlIGluZGljZXMsXHJcbiAgICAvLyB0aGUgaW5kaWNlcyB0byBkZWxldGUgbXVzdCBhbHNvIGJlIHNvcnRlZFxyXG4gICAgaW5kaWNlc1RvRGVsZXRlLnNvcnQoKTtcclxuICAgIGZvciAobGV0IGkgPSBpbmRpY2VzVG9EZWxldGUubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgdXNlZEl0ZW1zLnNwbGljZShpbmRpY2VzVG9EZWxldGVbaV0sIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGRvY1JlZnNPYnMkOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+W10gPSBbXTtcclxuXHJcbiAgICAvLyBnZXQgdGhlIGRvY1JlZnMgZm9yIGl0ZW1zIHRvIGJlIGRlbGV0ZWQgaW5jbHVkaW5nIHRoZSBvbmVzIGluIHRoZSBzdWJDb2xsZWN0aW9uc1xyXG4gICAgaXRlbXNUb0RlbGV0ZS5mb3JFYWNoKGl0ZW1Ub0RlbGV0ZSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBvYnMkID0gdGhpcy5nZXREb2N1bWVudFJlZmVyZW5jZXNEZWVwJChpdGVtVG9EZWxldGUuZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgICB0YWtlKDEpXHJcbiAgICAgICk7XHJcbiAgICAgIGRvY1JlZnNPYnMkLnB1c2gob2JzJCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgcmV0dXJuIGZvcmtKb2luKGRvY1JlZnNPYnMkKS5waXBlKFxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgICBtYXAoKGxpc3RPZkRvY1JlZnMpID0+IHtcclxuICAgICAgICAvLyBjb25jYXQgYWxsIHRoZSBzZXBhcmF0ZSBkb2NSZWZzIGxpc3RzIGludG8gb25lIGFycmF5IG9mIGRvY1JlZnNcclxuICAgICAgICBsZXQgZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSA9IFtdO1xyXG5cclxuICAgICAgICBsaXN0T2ZEb2NSZWZzLmZvckVhY2gocmVmcyA9PiB7XHJcbiAgICAgICAgICBkb2NSZWZzID0gZG9jUmVmcy5jb25jYXQocmVmcyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkb2NSZWZzO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwKChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzKSksXHJcbiAgICAgIG1hcCgoYmF0Y2g6IFdyaXRlQmF0Y2gpID0+IHRoaXMuZ2V0QmF0Y2hGcm9tVXBkYXRlSW5kZXhGcm9tTGlzdE9mRG9jczxBPih1c2VkSXRlbXMsIGJhdGNoKSksXHJcbiAgICAgIHN3aXRjaE1hcCgoYmF0Y2gpID0+IHRoaXMuYmF0Y2hDb21taXQkKGJhdGNoKSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSdW4gdGhpcyBvbiBjb2xsZWN0aW9ucyB3aXRoIGEgZml4ZWQgb3JkZXIgdXNpbmcgYW4gaW5kZXg6IG51bWJlciBhdHRyaWJ1dGU7XHJcbiAgICogVGhpcyB3aWxsIHVwZGF0ZSB0aGF0IGluZGV4IHdpdGggdGhlIGluZGV4IGluIHRoZSBjb2xsZWN0aW9uRGF0YSwgc28gaXQgc2hvdWxkIGJlIHNvcnRlZCBieSBpbmRleCBmaXJzdC5cclxuICAgKiBCYXNpY2FsbHkgbmVlZHMgdG8gYmUgcnVuIGFmdGVyIGEgZGVsZXRlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbXNcclxuICAgKiBAcGFyYW0gYmF0Y2hcclxuICAgKiBAcHJvdGVjdGVkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldEJhdGNoRnJvbVVwZGF0ZUluZGV4RnJvbUxpc3RPZkRvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihcclxuICAgIGl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpXHJcbiAgKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgaWYgKGl0ZW0uaW5kZXggIT09IGluZGV4KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGluZGV4OyAvLyB0aGlzIGlzIGp1c3Qgc28gdGhhdCB0aGUgZ2l2ZW4gYXJyYXkncyBpbmRleCBpcyBhbHNvIHVwZGF0ZWQgaW1tZWRpYXRlbHlcclxuICAgICAgICBjb25zdCByZWYgPSBnZXRSZWZGcm9tUGF0aChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZTtcclxuICAgICAgICBiYXRjaC51cGRhdGUocmVmLCB7aW5kZXh9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGJhdGNoO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHRyYW5zZmVySXRlbUluSW5kZXhlZERvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciwgZ3JvdXBOYW1lOiBzdHJpbmcgfT4oXHJcbiAgICBwcmV2aW91c0FycmF5OiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICBjdXJyZW50QXJyYXk6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgIHByZXZpb3VzSW5kZXg6IG51bWJlcixcclxuICAgIGN1cnJlbnRJbmRleDogbnVtYmVyLFxyXG4gICAgY3VycmVudEFycmF5TmFtZTogc3RyaW5nLFxyXG4gICAgYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbT86IHsgW2tleTogc3RyaW5nXTogYW55IH0sXHJcbiAgICBpc1VwZGF0ZU1vZGlmaWVkRGF0ZU9uTW92ZWRJdGVtID0gdHJ1ZSxcclxuICAgIHVzZUNvcHkgPSBmYWxzZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGNvbnN0IGJhdGNoOiBXcml0ZUJhdGNoID0gdGhpcy5nZXRCYXRjaEZyb21UcmFuc2Zlckl0ZW1JbkluZGV4ZWREb2NzKHByZXZpb3VzQXJyYXksXHJcbiAgICAgIGN1cnJlbnRBcnJheSxcclxuICAgICAgcHJldmlvdXNJbmRleCxcclxuICAgICAgY3VycmVudEluZGV4LFxyXG4gICAgICBjdXJyZW50QXJyYXlOYW1lLFxyXG4gICAgICBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtLFxyXG4gICAgICBpc1VwZGF0ZU1vZGlmaWVkRGF0ZU9uTW92ZWRJdGVtLFxyXG4gICAgICB1c2VDb3B5KTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIERFTEVURSAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBEZWxldGUgRG9jdW1lbnQgYW5kIGNoaWxkIGRvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiBEb2N1bWVudFJlZmVyZW5jZSB0aGF0IGlzIHRvIGJlIGRlbGV0ZWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlJChkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uUXVlcmllcyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBub3QgZGVlcCBzbyBqdXN0IGRvIGEgbm9ybWFsIGRvYyBkZWxldGVcclxuICAgICAgcmV0dXJuIHRoaXMuZnMuZGVsZXRlKGRvY1JlZik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRGVlcCQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgc3dpdGNoTWFwKChkb2NSZWZMaXN0OiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZGVsZXRlTXVsdGlwbGVTaW1wbGUkKGRvY1JlZkxpc3QpKSxcclxuICAgICAgLy8gY2F0Y2hFcnJvcigoZXJyKSA9PiB7IC8vIFRPRE8gc3VwZXIgdWdseSBhbmQgSSBkb250IGtub3cgd2h5IHRoaXMgZXJyb3IgaXMgdGhyb3duLi5zdGlsbCB3b3Jrc1xyXG4gICAgICAvLyAgIGlmIChlcnIgPT09ICdEb2N1bWVudCBEb2VzIG5vdCBleGlzdHMnKSB7IHJldHVybiBvZigpOyB9XHJcbiAgICAgIC8vICAgZWxzZSB7IHRocm93IGVycjsgfVxyXG4gICAgICAvLyB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIFdyaXRlQmF0Y2ggdGhhdCBpcyBzZXQgdG8gZGVsZXRlIERvY3VtZW50IGFuZCBjaGlsZCBkb2N1bWVudHMgb2YgZ2l2ZW4gZG9jUmVmXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUmVmIERvY3VtZW50UmVmZXJlbmNlIHRoYXQgaXMgdG8gYmUgZGVsZXRlZFxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllcyBpZiB0aGUgZG9jdW1lbnQgaGFzIGNoaWxkIGRvY3VtZW50cyB0aGUgc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXJlIG5lZWRlZCB0byBsb2NhdGUgdGhlbVxyXG4gICAqIEBwYXJhbSBiYXRjaFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXREZWxldGVCYXRjaCQoZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2g6IFdyaXRlQmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKSk6IE9ic2VydmFibGU8V3JpdGVCYXRjaD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uUXVlcmllcyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBub3QgZGVlcCBzbyBqdXN0IGRvIGEgbm9ybWFsIGRvYyBkZWxldGVcclxuICAgICAgYmF0Y2guZGVsZXRlKGRvY1JlZik7XHJcbiAgICAgIHJldHVybiBvZihiYXRjaCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRGVlcCQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgbWFwKChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzKSksXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGVsZXRlTXVsdGlwbGVCeVBhdGhzJChkb2NQYXRoczogc3RyaW5nW10pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSA9XHJcbiAgICAgIGRvY1BhdGhzLm1hcChwYXRoID0+IGdldFJlZkZyb21QYXRoKHBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZGVsZXRlTXVsdGlwbGVTaW1wbGUkKGRvY1JlZnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIERvY3VtZW50cyBhbmQgY2hpbGQgZG9jdW1lbnRzXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUmVmcyAtIEEgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSB0aGF0IGFyZSB0byBiZSBkZWxldGVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZU11bHRpcGxlJChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZVtdLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgaWYgKHN1YkNvbGxlY3Rpb25RdWVyaWVzID09IG51bGwgfHwgc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZzKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkZWVwRG9jUmVmcyQ6IEFycmF5PE9ic2VydmFibGU8YW55Pj4gPSBbXTtcclxuXHJcbiAgICBkb2NSZWZzLmZvckVhY2goZG9jUmVmID0+IHtcclxuICAgICAgY29uc3QgZG9jUmVmcyQgPSB0aGlzLmdldERvY3VtZW50UmVmZXJlbmNlc0RlZXAkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgICBkZWVwRG9jUmVmcyQucHVzaChkb2NSZWZzJCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gY29tYmluZUxhdGVzdChkZWVwRG9jUmVmcyQpLnBpcGUoXHJcbiAgICAgIC8vIHRhcChsaXN0cyA9PiBjb25zb2xlLmxvZyhsaXN0cykpLFxyXG4gICAgICBtYXAoKGxpc3RzOiBhbnlbXSkgPT4ge1xyXG4gICAgICAgIGxldCBtYWluRG9jUmVmTGlzdDogRG9jdW1lbnRSZWZlcmVuY2VbXSA9IFtdO1xyXG4gICAgICAgIGxpc3RzLmZvckVhY2gobGlzdCA9PiB7XHJcbiAgICAgICAgICBtYWluRG9jUmVmTGlzdCA9IG1haW5Eb2NSZWZMaXN0LmNvbmNhdChsaXN0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gbWFpbkRvY1JlZkxpc3Q7XHJcbiAgICAgIH0pLFxyXG4gICAgICAvLyB0YXAobGlzdHMgPT4gY29uc29sZS5sb2cobGlzdHMpKSxcclxuICAgICAgc3dpdGNoTWFwKChkb2NSZWZMaXN0OiBEb2N1bWVudFJlZmVyZW5jZVtdKSA9PiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZMaXN0KSksXHJcbiAgICAgIC8vIGNhdGNoRXJyb3IoKGVycikgPT4geyAvLyBUT0RPIHN1cGVyIHVnbHkgYW5kIEkgZG9udCBrbm93IHdoeSB0aGlzIGVycm9yIGlzIHRocm93bi4uc3RpbGwgd29ya3NcclxuICAgICAgLy8gICBpZiAoZXJyID09PSAnRG9jdW1lbnQgRG9lcyBub3QgZXhpc3RzJykgeyByZXR1cm4gb2YobnVsbCk7IH1cclxuICAgICAgLy8gICBlbHNlIHsgdGhyb3cgZXJyOyB9XHJcbiAgICAgIC8vIH0pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIGFsbCBkb2N1bWVudHMgYW5kIHN1YiBjb2xsZWN0aW9ucyBhcyBzcGVjaWZpZWQgaW4gc3ViQ29sbGVjdGlvblF1ZXJpZXMuXHJcbiAgICogTm90IHZlcnkgZWZmaWNpZW50IGFuZCBjYXVzZXMgYSBsb3Qgb2YgZGIgcmVhZHMuXHJcbiAgICogSWYgcG9zc2libGUgdXNlIHRoZSBmaXJlYmFzZSBDTEkgb3IgdGhlIGNvbnNvbGUgaW5zdGVhZCB3aGVuIGRlbGV0aW5nIGxhcmdlIGNvbGxlY3Rpb25zLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25SZWZcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXNcclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlQ29sbGVjdGlvbiQoY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSwgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUNvbGxlY3Rpb25SZWYkKGNvbGxlY3Rpb25SZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKS5waXBlKFxyXG4gICAgICBzd2l0Y2hNYXAoZG9jUmVmcyA9PiB0aGlzLmRlbGV0ZU11bHRpcGxlJChkb2NSZWZzKSlcclxuICAgICkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBEZWxldGUgZmlyZXN0b3JlIGRvY3VtZW50IGJ5IHBhdGhcclxuICAgKiBDb252ZW5pZW5jZSBtZXRob2QgaW4gY2FzZSB3ZSBkbyBub3QgaGF2ZSBkaXJlY3QgYWNjZXNzIHRvIHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnQgcmVmZXJlbmNlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUGF0aCBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIHBhdGggb2YgdGhlIHJlZmVyZW5jZWQgZG9jdW1lbnQgKHJlbGF0aXZlIHRvIHRoZSByb290IG9mIHRoZSBkYXRhYmFzZSkuXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZURvY0J5UGF0aCQoZG9jUGF0aDogc3RyaW5nLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCBkb2NSZWYgPSBnZXRSZWZGcm9tUGF0aChkb2NQYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgRG9jdW1lbnRSZWZlcmVuY2U7XHJcbiAgICByZXR1cm4gdGhpcy5kZWxldGUkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIGRvY3VtZW50IGJ5IEZpcmVzdG9yZUl0ZW1cclxuICAgKlxyXG4gICAqIENvbnZlbmllbmNlIG1ldGhvZCB0aGF0IHdvcmtzIHRoZSBzYW1lIGFzIGRlbGV0ZURlZXAkIGJ1dCB0YWtlcyBhIEZpcmVzdG9yZUl0ZW0gdG8gYmUgZGVsZXRlZFxyXG4gICAqXHJcbiAgICogQHBhcmFtIGl0ZW0gRmlyZXN0b3JlSXRlbSB0byBiZSBkZWxldGVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZUl0ZW0kPFQ+KGl0ZW06IEZpcmVJdGVtPFQ+LCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgY29uc3QgZG9jUmVmcyA9IHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUl0ZW0oaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZzKS5waXBlKFxyXG4gICAgICAvLyBjYXRjaEVycm9yKChlcnIpID0+IHsgLy8gVE9ETyBzdXBlciB1Z2x5IGFuZCBJIGRvbnQga25vdyB3aHkgdGhpcyBlcnJvciBpcyB0aHJvd24uLnN0aWxsIHdvcmtzXHJcbiAgICAgIC8vICAgaWYgKGVyciA9PT0gJ0RvY3VtZW50IERvZXMgbm90IGV4aXN0cycpIHsgcmV0dXJuIG9mKG51bGwpOyB9XHJcbiAgICAgIC8vICAgZWxzZSB7IHRocm93IGVycjsgfVxyXG4gICAgICAvLyB9KSxcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG5cclxuICAvKiAtLS0tIE9USEVSIC0tLS0gKi9cclxuXHJcbiAgLyoqXHJcbiAgICogY2xlYW4gRmlyZXN0b3JlQmFzZUl0ZW0gcHJvcGVydGllcyBmcm9tIHRoZSBkYXRhLlxyXG4gICAqIFVzdWFsbHkgZG9uZSBpZiB5b3Ugd2lzaCB0byBzYXZlIHRoZSBkYXRhIHRvIGZpcmVzdG9yZSwgc2luY2Ugc29tZSBGaXJlc3RvcmVCYXNlSXRlbSBwcm9wZXJ0aWVzIGFyZSBvZiBub24gYWxsb3dlZCB0eXBlcy5cclxuICAgKlxyXG4gICAqIEdvZXMgdGhyb3VnaCBlYWNoIGxldmVsIGFuZCByZW1vdmVzIERiSXRlbUV4dHJhc1xyXG4gICAqIEluIGNhc2UgeW91IHdpc2ggdG8gc2F2ZSB0aGUgZGF0YVxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgZGF0YSB0byBiZSBjbGVhbmVkLCBlaXRoZXIgc2luZ2xlIGl0ZW0gb3IgYW4gYXJyYXkgb2YgaXRlbXNcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIFN1YkNvbGxlY3Rpb25Xcml0ZXJzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKiBAcGFyYW0gYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlXHJcbiAgICovXHJcblxyXG4gIGNsZWFuRXh0cmFzRnJvbURhdGE8VD4oZGF0YTogVCAmIERvY3VtZW50RGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlPzogc3RyaW5nW10pOiBUO1xyXG5cclxuICBjbGVhbkV4dHJhc0Zyb21EYXRhPFQ+KGRhdGFzOiBBcnJheTxUICYgRG9jdW1lbnREYXRhPixcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlPzogc3RyaW5nW10pOiBBcnJheTxUPjtcclxuXHJcbiAgcHVibGljIGNsZWFuRXh0cmFzRnJvbURhdGE8VD4oZGF0YTogVCAmIERvY3VtZW50RGF0YSB8IEFycmF5PFQgJiBEb2N1bWVudERhdGE+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzOiBTdWJDb2xsZWN0aW9uV3JpdGVyW10gPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmU6IHN0cmluZ1tdID0gW10pOiBUIHwgQXJyYXk8VD4ge1xyXG5cclxuICAgIC8vIGNvbnN0IGRhdGFUb0JlQ2xlYW5lZCA9IGNsb25lRGVlcChkYXRhKTsgLyogY2xvbmUgZGF0YSBzbyB3ZSBkb250IG1vZGlmeSB0aGUgb3JpZ2luYWwgKi9cclxuICAgIC8vIGNvbnN0IGRhdGFUb0JlQ2xlYW5lZCA9IGRhdGE7XHJcblxyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuXHJcbiAgICAgIGNvbnN0IGNsZWFuRGF0YXM6IEFycmF5PFQ+ID0gW107XHJcblxyXG4gICAgICBkYXRhLmZvckVhY2goZCA9PiB7XHJcbiAgICAgICAgY2xlYW5EYXRhcy5wdXNoKFxyXG4gICAgICAgICAgdGhpcy5yZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyKGQsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmUpIGFzIFRcclxuICAgICAgICApO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBjbGVhbkRhdGFzO1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnJlbW92ZURhdGFFeHRyYXNSZWN1cnNpdmVIZWxwZXIoZGF0YSwgc3ViQ29sbGVjdGlvbldyaXRlcnMsIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZSkgYXMgVDtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAvKiAtLS0tLS0tLS0tICBQUk9URUNURUQgTUVUSE9EUyAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBTYW1lIGFzIEFuZ3VsYXJGaXJlc3RvcmVEb2N1bWVudC5zbmFwc2hvdENoYW5nZXMgYnV0IGl0IGFkZHMgdGhlIHByb3BlcnRpZXMgaW4gRmlyZWJhc2VEYkl0ZW1cclxuICAgKiBhbmQgYWxzbyBhbGxvd3MgZm9yIHRvIGNob29zZSBhY3Rpb24gdG8gdGFrZSB3aGVuIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XHJcbiAgICpcclxuICAgKiBJbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHdpbGwgdHJpZ2dlciBmb3IgZXZlcnkgY2hhbmdlL3VwZGF0ZSBvbiB0aGUgZG9jdW1lbnQgd2UgYXJlIGxpc3RlbmluZyB0by5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBkb2NSZWYgRG9jdW1lbnRSZWZlcmVuY2UgdGhhdCB3aWxsIGJlIGxpc3RlbmVkIHRvXHJcbiAgICogQHBhcmFtIGFjdGlvbklmTm90RXhpc3QgQWN0aW9uIHRvIHRha2UgaWYgZG9jdW1lbnQgZG9lcyBub3QgZXhpc3RcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yRG9jU2ltcGxlJDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPGFueT4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBXHJcbiAgKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIHJldHVybiB0aGlzLmZzLmRvYyhkb2NSZWYpLnBpcGUoXHJcbiAgICAgIHRhcCgoc25hcHNob3Q6IERvY3VtZW50U25hcHNob3QpID0+IHtcclxuICAgICAgICBpZiAoIXNuYXBzaG90LmV4aXN0cygpICYmIGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlRIUk9XX0RPQ19OT1RfRk9VTkQpIHtcclxuICAgICAgICAgIGNvbnN0IGVycm9yOiBGaXJlc3RvcmVFcnJvckV4dCA9IHtcclxuICAgICAgICAgICAgbmFtZTogJ0ZpcmViYXNlRXJyb3JFeHQnLFxyXG4gICAgICAgICAgICBjb2RlOiAnbm90LWZvdW5kJyxcclxuICAgICAgICAgICAgbWVzc2FnZTogJ0RvY3VtZW50IG5vdCBmb3VuZCBhbmQgYWN0aW9uSWZOb3RFeGlzdCBpcyBzZXQgdG8gVEhST1dfRE9DX05PVF9GT1VORCcsXHJcbiAgICAgICAgICAgIGRvY1JlZlxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcblxyXG4gICAgICBmaWx0ZXIoKHNuYXBzaG90OiBEb2N1bWVudFNuYXBzaG90KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICEoc25hcHNob3QuZXhpc3RzKCkgJiYgYWN0aW9uSWZOb3RFeGlzdCA9PT0gRG9jTm90RXhpc3RBY3Rpb24uRklMVEVSKTtcclxuICAgICAgfSksXHJcblxyXG4gICAgICBtYXAoKHNuYXBzaG90OiBEb2N1bWVudFNuYXBzaG90KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHNuYXBzaG90LmV4aXN0cygpKTtcclxuXHJcbiAgICAgICAgaWYgKHNuYXBzaG90LmV4aXN0cygpIHx8IGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlJFVFVSTl9BTExfQlVUX0RBVEEpIHtcclxuICAgICAgICAgIGNvbnN0IGRhdGEgPSBzbmFwc2hvdC5kYXRhKCkgYXMgVDtcclxuXHJcbiAgICAgICAgICBjb25zdCBmaXJlc3RvcmVNZXRhZGF0YTogRmlyZXN0b3JlTWV0YWRhdGE8VD4gPSB7XHJcbiAgICAgICAgICAgIGlkOiBzbmFwc2hvdC5pZCxcclxuICAgICAgICAgICAgcmVmOiBzbmFwc2hvdC5yZWYgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD4sXHJcbiAgICAgICAgICAgIHBhdGg6IGRvY1JlZi5wYXRoLFxyXG4gICAgICAgICAgICBpc0V4aXN0czogc25hcHNob3QuZXhpc3RzKCksXHJcbiAgICAgICAgICAgIHNuYXBzaG90TWV0YWRhdGE6IHNuYXBzaG90Lm1ldGFkYXRhXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHJldHVybiB7Li4uZGF0YSwgZmlyZXN0b3JlTWV0YWRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlJFVFVSTl9OVUxMKSB7IC8qIGRvYyBkb2Vzbid0IGV4aXN0ICovXHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH0pLFxyXG4gICAgICBtYXAoKGRhdGEpID0+IHtcclxuICAgICAgICBpZiAoZGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvRGF0ZShkYXRhIGFzIEZpcmVJdGVtPHt9Pik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcbiAgICApIGFzIE9ic2VydmFibGU8RmlyZUl0ZW08VD4+O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTGlzdGVucyBmb3Igc2luZ2xlIGNvbGxlY3Rpb24gYW5kIHJldHVybnMgYW4gYXJyYXkgb2YgZG9jdW1lbnRzIGFzIEZpcmVJdGVtPFQ+W11cclxuICAgKiBVc2VkIGludGVybmFsbHksIHBsZWFzZSB1c2UgbGlzdGVuRm9yQ29sbGVjdGlvbiQoKSBpbnN0ZWFkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIF9xdWVyeSB0aGUgUXVlcnkgd2hpY2ggd2lsbCBiZSBsaXN0ZW5lZCB0b1xyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQ8VD4oX3F1ZXJ5OiBRdWVyeTxUPik6IE9ic2VydmFibGU8QXJyYXk8RmlyZUl0ZW08VD4+PiB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZW1pdCB3aGVuZXZlciB0aGUgcmVmIGNoYW5nZXMgaW4gYW55IHdheS5cclxuICAgICAqIEFsc28gYWRkcyB0aGUgaWQgYW5kIHJlZiB0byB0aGUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXR1cm4gdGhpcy5mcy5jb2xsZWN0aW9uKF9xdWVyeSkucGlwZShcclxuICAgICAgbWFwKChzbmFwOiBRdWVyeVNuYXBzaG90PFQ+KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHNuYXAuZG9jcy5tYXAoc25hcHNob3QgPT4ge1xyXG4gICAgICAgICAgY29uc3QgZGF0YSA9IHNuYXBzaG90LmRhdGEoKSBhcyBUO1xyXG5cclxuICAgICAgICAgIGNvbnN0IGlkID0gc25hcHNob3QuaWQ7XHJcbiAgICAgICAgICBjb25zdCByZWYgPSBzbmFwc2hvdC5yZWYgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcbiAgICAgICAgICBjb25zdCBwYXRoID0gcmVmLnBhdGg7XHJcbiAgICAgICAgICBjb25zdCBzbmFwc2hvdE1ldGFkYXRhID0gc25hcHNob3QubWV0YWRhdGE7XHJcblxyXG4gICAgICAgICAgY29uc3QgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+ID0ge1xyXG4gICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgcGF0aCxcclxuICAgICAgICAgICAgcmVmLFxyXG4gICAgICAgICAgICBzbmFwc2hvdE1ldGFkYXRhLFxyXG4gICAgICAgICAgICBpc0V4aXN0czogdHJ1ZVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICByZXR1cm4gey4uLmRhdGEsIGZpcmVzdG9yZU1ldGFkYXRhfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICB9KTtcclxuICAgICAgfSksXHJcbiAgICAgIG1hcCgoZGF0YXM6IEFycmF5PEZpcmVJdGVtPFQ+PikgPT4gZGF0YXMubWFwKGRhdGEgPT4ge1xyXG4gICAgICAgIGNvbnZlcnRUaW1lc3RhbXBUb0RhdGUoZGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0pKVxyXG4gICAgKSBhcyBPYnNlcnZhYmxlPEFycmF5PEZpcmVJdGVtPFQ+Pj47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2VkIGludGVybmFsbHkgZm9yIGJvdGggbGlzdGVuRm9yRG9jIGFuZCBsaXN0ZW5Gb3JDb2xsZWN0aW9uIGluIG9yZGVyIHRvIHJlY3Vyc2l2ZWx5IGdldCBjb2xsZWN0aW9ucy5cclxuICAgKlxyXG4gICAqIFBsZWFzZSB1c2UgbGlzdGVuRm9yRG9jIG9yIGxpc3RlbkZvckNvbGxlY3Rpb24uXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbVxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllc1xyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yQ29sbGVjdGlvbnNEZWVwPFQ+KFxyXG4gICAgaXRlbTogRmlyZUl0ZW08VD4sXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8RmlyZUl0ZW08VD5bXT4ge1xyXG5cclxuICAgIGlmIChpdGVtID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIG9mKFtpdGVtXSk7XHJcbiAgICB9XHJcbiAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgcmV0dXJuIG9mKFtpdGVtXSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY29sbGVjdGlvbkxpc3RlbmVyczogQXJyYXk8T2JzZXJ2YWJsZTxhbnk+PiA9IFtdO1xyXG5cclxuICAgIC8qIEl0ZXJhdGUgb3ZlciBlYWNoIHN1YiBjb2xsZWN0aW9uIHdlIGhhdmUgZ2l2ZW4gYW5kIGNyZWF0ZSBjb2xsZWN0aW9uIGxpc3RlbmVycyovXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllcy5mb3JFYWNoKHN1YkNvbGxlY3Rpb25RdWVyeSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBxdWVyeUNvbnRhaW5lciA9IG5ldyBRdWVyeUNvbnRhaW5lcihnZXRTdWJDb2xsZWN0aW9uKGl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uUXVlcnkubmFtZSkpO1xyXG4gICAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJ5LnF1ZXJ5Q29uc3RyYWludHMpIHtcclxuICAgICAgICBxdWVyeUNvbnRhaW5lci5xdWVyeUNvbnN0cmFpbnRzID0gc3ViQ29sbGVjdGlvblF1ZXJ5LnF1ZXJ5Q29uc3RyYWludHM7XHJcbiAgICAgICAgLy8gY29sbGVjdGlvblJlZiA9IHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKGNvbGxlY3Rpb25SZWYpIGFzIENvbGxlY3Rpb25SZWZlcmVuY2U7XHJcbiAgICAgIH1cclxuICAgICAgLy8gaWYgKHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKSB7XHJcbiAgICAgIC8vICAgY29sbGVjdGlvblJlZiA9IHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKGNvbGxlY3Rpb25SZWYpIGFzIENvbGxlY3Rpb25SZWZlcmVuY2U7XHJcbiAgICAgIC8vIH1cclxuXHJcbiAgICAgIGNvbnN0IGNvbGxlY3Rpb25MaXN0ZW5lciA9IHRoaXMubGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQocXVlcnlDb250YWluZXIucXVlcnkpLnBpcGUoXHJcbiAgICAgICAgLy8gZmlsdGVyKGRvY3MgPT4gZG9jcy5sZW5ndGggPiAwKSwgLy8gc2tpcCBlbXB0eSBjb2xsZWN0aW9ucyBvciBpZiB0aGUgc3ViQ29sbGVjdGlvblF1ZXJ5IGRvZXNudCBleGlzdFxyXG4gICAgICAgIC8qIFVuY29tbWVudCB0byBzZWUgZGF0YSBvbiBlYWNoIHVwZGF0ZSAqL1xyXG4gICAgICAgIC8vIHRhcChkID0+IGNvbnNvbGUubG9nKGQpKSxcclxuICAgICAgICAvLyBmaWx0ZXIoZG9jcyA9PiBkb2NzICE9IG51bGwpLFxyXG4gICAgICAgIC8qIExpc3RlbiBGb3IgYW5kIEFkZCBhbnkgUG90ZW50aWFsIFN1YiBEb2NzKi9cclxuICAgICAgICAvLyBAdHMtaWdub3JlIC8vIFRPRE8gZml4IHRoaXMgc28gdGhhdCBJIGNhbiByZW1vdmUgdGhlIHRzLWlnbm9yZVxyXG4gICAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgICBpZiAoIXN1YkNvbGxlY3Rpb25RdWVyeS5zdWJDb2xsZWN0aW9ucykge1xyXG4gICAgICAgICAgICByZXR1cm4gb2YoaXRlbXMpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNvbnN0IGRvY0xpc3RlbmVyczogQXJyYXk8T2JzZXJ2YWJsZTxhbnk+PiA9IFtdO1xyXG5cclxuICAgICAgICAgIGl0ZW1zID0gaXRlbXMuZmlsdGVyKGQgPT4gZCAhPSBudWxsKTsgLy8gZmlsdGVyIG91dCBwb3RlbnRpYWwgbnVsbHNcclxuXHJcbiAgICAgICAgICBpdGVtcy5mb3JFYWNoKChzdWJJdGVtOiBGaXJlSXRlbTx7fT4pID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc3ViRG9jQW5kQ29sbGVjdGlvbnMkID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoc3ViSXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJ5LnN1YkNvbGxlY3Rpb25zKTtcclxuICAgICAgICAgICAgZG9jTGlzdGVuZXJzLnB1c2goc3ViRG9jQW5kQ29sbGVjdGlvbnMkKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGlmIChkb2NMaXN0ZW5lcnMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG9mKFtdKTtcclxuICAgICAgICAgIH0gLyogc3ViQ29sbGVjdGlvblF1ZXJ5IGlzIGVtcHR5IG9yIGRvZXNudCBleGlzdCAqL1xyXG5cclxuICAgICAgICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KGRvY0xpc3RlbmVycykucGlwZShcclxuICAgICAgICAgICAgLy8gdGFwKHZhbCA9PiBjb25zb2xlLmxvZyh2YWwpKVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9KSwgLyogRW5kIG9mIExpc3RlbmluZyBmb3Igc3ViIGRvY3MgKi9cclxuICAgICAgICAvKiBJZiBkb2NzLmxlbmd0aCA9PT0gMSBhbmQgdGhlIGlkIGlzIGRlZmF1bHREb2NJZCBvciB0aGUgZ2l2ZW4gZG9jSWQgaXQgbWVhbnMgd2UgYXJlIGluIGEgc3ViIHN1YkNvbGxlY3Rpb25RdWVyeVxyXG4gICAgICAgIGFuZCB3ZSBvbmx5IGNhcmUgYWJvdXQgdGhlIGRhdGEuIFNvIHdlIHJlbW92ZSB0aGUgYXJyYXkgYW5kIGp1c3QgbWFrZSBpdCBvbmUgb2JqZWN0IHdpdGggdGhlXHJcbiAgICAgICAgc3ViQ29sbGVjdGlvblF1ZXJ5IG5hbWUgYXMga2V5IGFuZCBkb2NzWzBdIGFzIHZhbHVlICovXHJcbiAgICAgICAgbWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuICAgICAgICAgIGNvbnN0IGRvY0lkID0gc3ViQ29sbGVjdGlvblF1ZXJ5LmRvY0lkICE9PSB1bmRlZmluZWQgPyBzdWJDb2xsZWN0aW9uUXVlcnkuZG9jSWQgOiB0aGlzLmRlZmF1bHREb2NJZDtcclxuXHJcbiAgICAgICAgICBpZiAoaXRlbXMubGVuZ3RoID09PSAxICYmIGl0ZW1zWzBdLmZpcmVzdG9yZU1ldGFkYXRhLmlkID09PSBkb2NJZCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1tzdWJDb2xsZWN0aW9uUXVlcnkubmFtZV06IGl0ZW1zWzBdfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7W3N1YkNvbGxlY3Rpb25RdWVyeS5uYW1lXTogaXRlbXN9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIC8vIHRhcChkID0+IGNvbnNvbGUubG9nKGQpKSxcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGNvbGxlY3Rpb25MaXN0ZW5lcnMucHVzaChjb2xsZWN0aW9uTGlzdGVuZXIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyogRmluYWxseSByZXR1cm4gdGhlIGNvbWJpbmVkIGNvbGxlY3Rpb24gbGlzdGVuZXJzKi9cclxuICAgIC8vIEB0cy1pZ25vcmVcclxuICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KGNvbGxlY3Rpb25MaXN0ZW5lcnMpLnBpcGUoXHJcbiAgICAgIG1hcCgoY29sbGVjdGlvbkRhdGFzOiB7IFtjb2xsZWN0aW9uS2V5TmFtZTogc3RyaW5nXTogRmlyZUl0ZW08RmlyZUl0ZW08e30+PltdIH1bXSkgPT4ge1xyXG4gICAgICAgIC8vIG1hcCgoY29sbGVjdGlvbkRhdGFzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGF0YXNNYXA6IHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG5cclxuICAgICAgICBjb2xsZWN0aW9uRGF0YXMuZm9yRWFjaCgoY29sbGVjdGlvbkRhdGEpID0+IHtcclxuXHJcbiAgICAgICAgICBmb3IgKGNvbnN0IFtjb2xsZWN0aW9uTmFtZSwgaXRlbXNdIG9mIE9iamVjdC5lbnRyaWVzKGNvbGxlY3Rpb25EYXRhKSkge1xyXG4gICAgICAgICAgICBkYXRhc01hcFtjb2xsZWN0aW9uTmFtZV0gPSBpdGVtcztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZGF0YXNNYXA7XHJcbiAgICAgIH0pLFxyXG5cclxuICAgICAgbWFwKChkYXRhOiBEb2N1bWVudERhdGEpID0+IHtcclxuICAgICAgICByZXR1cm4gey4uLml0ZW0sIC4uLmRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgbWVhbnQgdG8gYmUgdXNlZCBzb2xlbHkgYnkgbGlzdGVuRm9yRG9jQW5kU3ViQ29sbGVjdGlvbnMkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkPFQ+KFxyXG4gICAgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fTlVMTCk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgLyogTGlzdGVuIGZvciB0aGUgZG9jRnMqL1xyXG4gICAgcmV0dXJuIHRoaXMubGlzdGVuRm9yRG9jU2ltcGxlJDxUPihkb2NSZWYsIGFjdGlvbklmTm90RXhpc3QpLnBpcGUoXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtOiBGaXJlSXRlbTx7fT4pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW0gPT09IG51bGwpIHtcclxuICAgICAgICAgIHJldHVybiBvZihpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoaXRlbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEEgcmVwbGFjZW1lbnQvZXh0ZW5zaW9uIHRvIHRoZSBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5hZGQuXHJcbiAgICogRG9lcyB0aGUgc2FtZSBhcyBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5hZGQgYnV0IGNhbiBhbHNvIGFkZCBjcmVhdGVkRGF0ZSBhbmQgbW9kaWZpZWREYXRlIGFuZCByZXR1cm5zXHJcbiAgICogdGhlIGRhdGEgd2l0aCB0aGUgYWRkZWQgcHJvcGVydGllcyBpbiBGaXJlYmFzZURiSXRlbVxyXG4gICAqXHJcbiAgICogVXNlZCBpbnRlcm5hbGx5XHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGF0YSB0aGUgZGF0YSB0byBiZSBhZGRlZCB0byB0aGUgZG9jdW1lbnQsIGNhbm5vdCBjb250YWluIHR5cGVzIGZpcmVzdG9yZSB3b24ndCBhbGxvd1xyXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uUmVmIHRoZSBDb2xsZWN0aW9uUmVmZXJlbmNlIHdoZXJlIHRoZSBkb2N1bWVudCBzaG91bGQgYmUgYWRkZWRcclxuICAgKiBAcGFyYW0gaXNBZGREYXRlcyBpZiB0cnVlIGFkZHMgbW9kaWZpZWREYXRlIGFuZCBjcmVhdGVkRGF0ZSB0byB0aGUgZGF0YVxyXG4gICAqIEBwYXJhbSBpZCBpZiBnaXZlbiB0aGUgYWRkZWQgZG9jdW1lbnQgd2lsbCBiZSBnaXZlbiB0aGlzIGlkLCBvdGhlcndpc2UgYSByYW5kb20gdW5pcXVlIGlkIHdpbGwgYmUgdXNlZC5cclxuICAgKi9cclxuICBwcm90ZWN0ZWQgYWRkU2ltcGxlJDxUPihkYXRhOiBULCBjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBpc0FkZERhdGVzOiBib29sZWFuID0gdHJ1ZSwgaWQ/OiBzdHJpbmcpOlxyXG4gICAgT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIC8vIGxldCBkYXRhVG9CZVNhdmVkOiBBID0gT2JqZWN0LmFzc2lnbih7fSwgZGF0YSk7XHJcblxyXG4gICAgbGV0IHJlcyQ6IE9ic2VydmFibGU8YW55PjtcclxuXHJcbiAgICBpZiAoaXNBZGREYXRlcykge1xyXG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgZGF0YSA9IGFkZENyZWF0ZWREYXRlKGRhdGEsIGZhbHNlLCBkYXRlKTtcclxuICAgICAgZGF0YSA9IGFkZE1vZGlmaWVkRGF0ZShkYXRhLCBmYWxzZSwgZGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgY29uc3QgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSA9IGdldERvY1JlZldpdGhJZChjb2xsZWN0aW9uUmVmLCBpZCk7XHJcbiAgICAgIHJlcyQgPSB0aGlzLmZzLnNldChkb2NSZWYsIGRhdGEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzJCA9IHRoaXMuZnMuYWRkPFQ+KGNvbGxlY3Rpb25SZWYsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGlmIChBcnJheS5pc0FycmF5KGRhdGEpICYmIGlzQWRkRGF0ZXMpIHtcclxuICAgIC8vICAgZGF0YSA9IGRhdGEubWFwKGl0ZW0gPT4ge1xyXG4gICAgLy8gICAgIHJldHVybiB7Li4uaXRlbSwgbW9kaWZpZWREYXRlOiBkYXRhVG9CZVNhdmVkLm1vZGlmaWVkRGF0ZSwgY3JlYXRlZERhdGE6IGRhdGFUb0JlU2F2ZWQuY3JlYXRlZERhdGEgfVxyXG4gICAgLy8gICB9KVxyXG4gICAgLy8gfVxyXG5cclxuICAgIHJlcyQgPSByZXMkLnBpcGUoXHJcbiAgICAgIC8vIHRhcCgoKSA9PiB0aGlzLnNuYWNrQmFyLm9wZW4oJ1N1Y2Nlc3MnLCAnQWRkZWQnLCB7ZHVyYXRpb246IDEwMDB9KSksXHJcbiAgICAgIC8vIHRhcChyZWYgPT4gY29uc29sZS5sb2cocmVmKSksXHJcbiAgICAgIC8vIHRhcCgoKSA9PiBjb25zb2xlLmxvZyhkYXRhKSksXHJcbiAgICAgIG1hcCgocmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiB8IHVuZGVmaW5lZCkgPT4ge1xyXG4gICAgICAgIGlmIChpZCA9PT0gdW5kZWZpbmVkICYmIHJlZikge1xyXG5cclxuICAgICAgICAgIGNvbnN0IHBhdGggPSByZWYucGF0aDtcclxuXHJcbiAgICAgICAgICBjb25zdCBmaXJlc3RvcmVNZXRhZGF0YTogRmlyZXN0b3JlTWV0YWRhdGE8VD4gPSB7XHJcbiAgICAgICAgICAgIGlkOiByZWYuaWQsXHJcbiAgICAgICAgICAgIHBhdGgsXHJcbiAgICAgICAgICAgIHJlZixcclxuICAgICAgICAgICAgaXNFeGlzdHM6IHRydWVcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHsuLi5kYXRhLCBmaXJlc3RvcmVNZXRhZGF0YX0gYXMgRmlyZUl0ZW08VD47XHJcblxyXG4gICAgICAgIH0gZWxzZSB7IC8vIGlmIGlkIGlzIGRlZmluZWQgaXQgbWVhbnMgd2UgdXNlZCBkb2NSZWYuc2V0IGFuZCByZWYgaXMgdW5kZWZpbmVkXHJcbiAgICAgICAgICBjb25zdCBwYXRoID0gY29sbGVjdGlvblJlZi5wYXRoICsgJy8nICsgaWQ7XHJcbiAgICAgICAgICByZWYgPSBnZXRSZWZGcm9tUGF0aChwYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcblxyXG4gICAgICAgICAgY29uc3QgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+ID0ge1xyXG4gICAgICAgICAgICBpZDogaWQgYXMgc3RyaW5nLFxyXG4gICAgICAgICAgICByZWYsXHJcbiAgICAgICAgICAgIHBhdGgsXHJcbiAgICAgICAgICAgIGlzRXhpc3RzOiB0cnVlXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHJldHVybiB7Li4uZGF0YSwgZmlyZXN0b3JlTWV0YWRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiByZXMkLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKiogVXNlZCBpbnRlcm5hbGx5IGZvciB1cGRhdGVzIHRoYXQgZG9lc24ndCBhZmZlY3QgY2hpbGQgZG9jdW1lbnRzICovXHJcbiAgcHJvdGVjdGVkIHVwZGF0ZVNpbXBsZSQ8QT4oZGF0YTogQSwgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSwgaXNBZGRNb2RpZmllZERhdGU6IGJvb2xlYW4gPSB0cnVlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKGlzQWRkTW9kaWZpZWREYXRlKSB7XHJcbiAgICAgIGRhdGEgPSBhZGRNb2RpZmllZERhdGUoZGF0YSwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuZnMudXBkYXRlKGRvY1JlZiwgZGF0YSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgdXNlZCBieSB1cGRhdGUgZGVlcFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCB1cGRhdGVEZWVwVG9CYXRjaEhlbHBlcjxBPihkYXRhOiBBLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWRkTW9kaWZpZWREYXRlOiBib29sZWFuID0gdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2g/OiBXcml0ZUJhdGNoKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgaWYgKGJhdGNoID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgYmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoaXNBZGRNb2RpZmllZERhdGUpIHtcclxuICAgICAgZGF0YSA9IGFkZE1vZGlmaWVkRGF0ZShkYXRhLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3BsaXQgPSB0aGlzLnNwbGl0RGF0YUludG9DdXJyZW50RG9jQW5kU3ViQ29sbGVjdGlvbnMoZGF0YSwgc3ViQ29sbGVjdGlvbldyaXRlcnMpO1xyXG4gICAgY29uc3QgY3VycmVudERvYyA9IHNwbGl0LmN1cnJlbnREb2M7XHJcbiAgICBjb25zdCBzdWJDb2xsZWN0aW9ucyA9IHNwbGl0LnN1YkNvbGxlY3Rpb25zO1xyXG5cclxuICAgIC8vIGNvbnNvbGUubG9nKGN1cnJlbnREb2MsIHN1YkNvbGxlY3Rpb25zKTtcclxuICAgIGJhdGNoLnVwZGF0ZShkb2NSZWYsIGN1cnJlbnREb2MpO1xyXG5cclxuICAgIGZvciAoY29uc3QgW3N1YkNvbGxlY3Rpb25LZXksIHN1YkRvY1VwZGF0ZVZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdWJDb2xsZWN0aW9ucykpIHtcclxuXHJcbiAgICAgIGxldCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdIHwgdW5kZWZpbmVkOyAvLyB1bmRlZmluZWQgaWYgbm8gc3ViQ29sbGVjdGlvbldyaXRlcnNcclxuICAgICAgbGV0IHN1YkRvY0lkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcblxyXG4gICAgICBpZiAoc3ViQ29sbGVjdGlvbldyaXRlcnMpIHtcclxuICAgICAgICBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycyA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5zdWJDb2xsZWN0aW9ucztcclxuICAgICAgICBzdWJEb2NJZCA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5kb2NJZDtcclxuICAgICAgfVxyXG5cclxuICAgICAgc3ViRG9jSWQgPSBzdWJEb2NJZCAhPT0gdW5kZWZpbmVkID8gc3ViRG9jSWQgOiB0aGlzLmRlZmF1bHREb2NJZDsgLyogU2V0IGRlZmF1bHQgaWYgbm9uZSBnaXZlbiAqL1xyXG5cclxuICAgICAgLy8gY29uc3Qgc3ViRG9jRnMgPSBkb2NSZWYuY29sbGVjdGlvbihzdWJDb2xsZWN0aW9uS2V5KS5kb2Moc3ViRG9jSWQpO1xyXG4gICAgICBjb25zdCBzdWJDb2xsZWN0aW9uID0gZ2V0U3ViQ29sbGVjdGlvbihkb2NSZWYsIHN1YkNvbGxlY3Rpb25LZXkpO1xyXG4gICAgICBjb25zdCBzdWJEb2NGcyA9IGdldERvY1JlZldpdGhJZChzdWJDb2xsZWN0aW9uLCBzdWJEb2NJZCk7XHJcblxyXG4gICAgICBiYXRjaCA9IHRoaXMudXBkYXRlRGVlcFRvQmF0Y2hIZWxwZXIoc3ViRG9jVXBkYXRlVmFsdWUsIHN1YkRvY0ZzLCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycywgaXNBZGRNb2RpZmllZERhdGUsIGJhdGNoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2VkIG1haW5seSBmb3IgZHJhZyBhbmQgZHJvcCBzY2VuYXJpb3Mgd2hlcmUgd2UgZHJhZyBhbiBpdGVtIGZyb20gb25lIGxpc3QgdG8gYW5vdGhlciBhbmQgdGhlIHRoZSBkb2NzXHJcbiAgICogaGF2ZSBhbiBpbmRleCB2YWx1ZSBhbmQgYSBncm91cE5hbWUuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gcHJldmlvdXNBcnJheVxyXG4gICAqIEBwYXJhbSBjdXJyZW50QXJyYXlcclxuICAgKiBAcGFyYW0gcHJldmlvdXNJbmRleFxyXG4gICAqIEBwYXJhbSBjdXJyZW50SW5kZXhcclxuICAgKiBAcGFyYW0gY3VycmVudEFycmF5TmFtZVxyXG4gICAqIEBwYXJhbSBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtXHJcbiAgICogQHBhcmFtIGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW1cclxuICAgKiBAcGFyYW0gdXNlQ29weVxyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgZ2V0QmF0Y2hGcm9tVHJhbnNmZXJJdGVtSW5JbmRleGVkRG9jczxBIGV4dGVuZHMgeyBpbmRleDogbnVtYmVyLCBncm91cE5hbWU6IHN0cmluZyB9PihcclxuICAgIHByZXZpb3VzQXJyYXk6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgIGN1cnJlbnRBcnJheTogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgcHJldmlvdXNJbmRleDogbnVtYmVyLFxyXG4gICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICBjdXJyZW50QXJyYXlOYW1lOiBzdHJpbmcsXHJcbiAgICBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtPzogeyBba2V5OiBzdHJpbmddOiBhbnkgfSxcclxuICAgIGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW0gPSB0cnVlLFxyXG4gICAgdXNlQ29weSA9IGZhbHNlKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgbGV0IHVzZWRQcmV2aW91c0FycmF5OiBBcnJheTxGaXJlSXRlbTxBPj47XHJcbiAgICBsZXQgdXNlZEN1cnJlbnRBcnJheTogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG4gICAgaWYgKHVzZUNvcHkpIHtcclxuICAgICAgdXNlZFByZXZpb3VzQXJyYXkgPSBPYmplY3QuYXNzaWduKFtdLCBwcmV2aW91c0FycmF5KTtcclxuICAgICAgdXNlZEN1cnJlbnRBcnJheSA9IE9iamVjdC5hc3NpZ24oW10sIGN1cnJlbnRBcnJheSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB1c2VkUHJldmlvdXNBcnJheSA9IHByZXZpb3VzQXJyYXk7XHJcbiAgICAgIHVzZWRDdXJyZW50QXJyYXkgPSBjdXJyZW50QXJyYXk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNmZXJBcnJheUl0ZW0odXNlZFByZXZpb3VzQXJyYXksIHVzZWRDdXJyZW50QXJyYXksIHByZXZpb3VzSW5kZXgsIGN1cnJlbnRJbmRleCk7XHJcblxyXG4gICAgY29uc3QgYmF0Y2g6IFdyaXRlQmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKTtcclxuXHJcbiAgICBpZiAoYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGNvbnN0IG1vdmVkSXRlbSA9IHVzZWRDdXJyZW50QXJyYXlbY3VycmVudEluZGV4XTtcclxuICAgICAgY29uc3QgbW92ZWRJdGVtUmVmID0gbW92ZWRJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnJlZjtcclxuXHJcbiAgICAgIGNvbnN0IGRhdGEgPSB7Li4uYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbSwgZ3JvdXBOYW1lOiBjdXJyZW50QXJyYXlOYW1lfTtcclxuXHJcbiAgICAgIGlmICghdXNlQ29weSkge1xyXG4gICAgICAgIGFkZERhdGFUb0l0ZW0obW92ZWRJdGVtLCBkYXRhLCB0cnVlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW0pIHtcclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgICBhZGRNb2RpZmllZERhdGUoZGF0YSwgdHJ1ZSwgZGF0ZSk7XHJcblxyXG4gICAgICAgIGlmICghdXNlQ29weSkge1xyXG4gICAgICAgICAgYWRkTW9kaWZpZWREYXRlKG1vdmVkSXRlbSwgdHJ1ZSwgZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGJhdGNoLnVwZGF0ZShtb3ZlZEl0ZW1SZWYsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGN1cnJlbnRBcnJheVNsaWNlVG9VcGRhdGU6IEFycmF5PEZpcmVJdGVtPEE+PiA9IHVzZWRDdXJyZW50QXJyYXkuc2xpY2UoY3VycmVudEluZGV4KTtcclxuICAgIGxldCBpID0gY3VycmVudEluZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGN1cnJlbnRBcnJheVNsaWNlVG9VcGRhdGUpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBiYXRjaC51cGRhdGUoaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHtpbmRleDogaX0pO1xyXG5cclxuICAgICAgaWYgKCF1c2VDb3B5KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmV2QXJyYXlTbGljZVRvVXBkYXRlOiBBcnJheTxGaXJlSXRlbTxBPj4gPSB1c2VkUHJldmlvdXNBcnJheS5zbGljZShwcmV2aW91c0luZGV4KTtcclxuICAgIGkgPSBwcmV2aW91c0luZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIHByZXZBcnJheVNsaWNlVG9VcGRhdGUpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBiYXRjaC51cGRhdGUoaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHtpbmRleDogaX0pO1xyXG5cclxuICAgICAgaWYgKCF1c2VDb3B5KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIERvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZnMgLSBBIGxpc3Qgb2YgRG9jdW1lbnRSZWZlcmVuY2UgdGhhdCBhcmUgdG8gYmUgZGVsZXRlZFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBkZWxldGVNdWx0aXBsZVNpbXBsZSQoZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGNvbnN0IGJhdGNoID0gdGhpcy5nZXREZWxldGVNdWx0aXBsZVNpbXBsZUJhdGNoKGRvY1JlZnMpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmJhdGNoQ29tbWl0JChiYXRjaCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZVtdLCBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgZG9jUmVmcy5mb3JFYWNoKChkb2NSZWYpID0+IHtcclxuICAgICAgYmF0Y2guZGVsZXRlKGRvY1JlZik7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWN1cnNpdmUgbWV0aG9kIHRvIGNsZWFuIEZpcmVzdG9yZUJhc2VJdGVtIHByb3BlcnRpZXMgZnJvbSB0aGUgZGJJdGVtXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGJJdGVtIHRoZSBkYXRhIHRvIGJlIGNsZWFuZWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgbGlzdCBvZiBTdWJDb2xsZWN0aW9uV3JpdGVycyB0byBoYW5kbGUgc3ViIGNvbGxlY3Rpb25zXHJcbiAgICogQHBhcmFtIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCByZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyPFQ+KGRiSXRlbTogVCAmIERvY3VtZW50RGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlOiBzdHJpbmdbXSA9IFtdKTogVCB7XHJcblxyXG4gICAgLy8gY29uc3QgZXh0cmFQcm9wZXJ0eU5hbWVzOiBzdHJpbmdbXSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG5ldyBEYkl0ZW1FeHRyYXMoKSk7XHJcbiAgICBjb25zdCBleHRyYVByb3BlcnR5TmFtZXM6IHN0cmluZ1tdID0gWydmaXJlc3RvcmVNZXRhZGF0YSddLmNvbmNhdChhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmUpO1xyXG5cclxuICAgIC8qIEN1cnJlbnQgbGV2ZWwgZGVsZXRlICovXHJcbiAgICBmb3IgKGNvbnN0IGV4dHJhUHJvcGVydHlOYW1lIG9mIGV4dHJhUHJvcGVydHlOYW1lcykge1xyXG4gICAgICBkZWxldGUgZGJJdGVtW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgIH1cclxuXHJcbiAgICBzdWJDb2xsZWN0aW9uV3JpdGVycy5mb3JFYWNoKGNvbCA9PiB7XHJcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGRiSXRlbVtjb2wubmFtZV0pKSB7IC8qIHByb3BlcnR5IGlzIGFycmF5IHNvIHdpbGwgY29udGFpbiBtdWx0aXBsZSBkb2NzICovXHJcblxyXG4gICAgICAgIGNvbnN0IGRvY3M6IEZpcmVJdGVtPFQ+W10gPSBkYkl0ZW1bY29sLm5hbWVdO1xyXG4gICAgICAgIGRvY3MuZm9yRWFjaCgoZCwgaSkgPT4ge1xyXG5cclxuICAgICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy5yZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyKGQsIGNvbC5zdWJDb2xsZWN0aW9ucywgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8qICAqL1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGV4dHJhUHJvcGVydHlOYW1lIG9mIGV4dHJhUHJvcGVydHlOYW1lcykge1xyXG4gICAgICAgICAgICAgIGRlbGV0ZSBkYkl0ZW1bY29sLm5hbWVdW2ldW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgfSBlbHNlIHsgLyogbm90IGFuIGFycmF5IHNvIGEgc2luZ2xlIGRvYyovXHJcblxyXG4gICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgIHRoaXMucmVtb3ZlRGF0YUV4dHJhc1JlY3Vyc2l2ZUhlbHBlcihkYkl0ZW1bY29sLm5hbWVdLCBjb2wuc3ViQ29sbGVjdGlvbnMsIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGZvciAoY29uc3QgZXh0cmFQcm9wZXJ0eU5hbWUgb2YgZXh0cmFQcm9wZXJ0eU5hbWVzKSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBkYkl0ZW1bY29sLm5hbWVdW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZGJJdGVtO1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgYW4gT2JzZXJ2YWJsZSBjb250YWluaW5nIGEgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSBmb3VuZCB1bmRlciB0aGUgZ2l2ZW4gZG9jUmVmIHVzaW5nIHRoZSBTdWJDb2xsZWN0aW9uUXVlcnlbXVxyXG4gICAqIE1haW5seSB1c2VkIHRvIGRlbGV0ZSBhIGRvY0ZzIGFuZCBpdHMgc3ViIGRvY3NcclxuICAgKiBAcGFyYW0gcmVmOiBEb2N1bWVudFJlZmVyZW5jZSB8IENvbGxlY3Rpb25SZWZlcmVuY2VcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldERvY3VtZW50UmVmZXJlbmNlc0RlZXAkKHJlZjogRG9jdW1lbnRSZWZlcmVuY2UgfCBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICBpZiAocmVmIGluc3RhbmNlb2YgRG9jdW1lbnRSZWZlcmVuY2UpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbURvY1JlZiQocmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcyk7XHJcbiAgICB9IGVsc2UgeyAvLyBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAgICAgIHJldHVybiB0aGlzLmdldERvY3VtZW50UmVmZXJlbmNlc0Zyb21Db2xsZWN0aW9uUmVmJChyZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBnZXREb2N1bWVudFJlZmVyZW5jZXNGcm9tRG9jUmVmJChkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JEb2MkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpLnBpcGUoXHJcbiAgICAgIHRha2UoMSksXHJcbiAgICAgIG1hcChpdGVtID0+IHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpKSxcclxuICAgICAgLy8gdGFwKHBhdGhMaXN0ID0+IGNvbnNvbGUubG9nKHBhdGhMaXN0KSksXHJcbiAgICAgIG1hcCgocGF0aExpc3Q6IHN0cmluZ1tdKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhMaXN0XHJcbiAgICAgICAgICAubWFwKHBhdGggPT4gZ2V0UmVmRnJvbVBhdGgocGF0aCwgdGhpcy5mcy5maXJlc3RvcmUpIGFzIERvY3VtZW50UmVmZXJlbmNlKTtcclxuICAgICAgfSksXHJcbiAgICAgIC8vIHRhcChpdGVtID0+IGNvbnNvbGUubG9nKGl0ZW0pKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUNvbGxlY3Rpb25SZWYkKGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uU2ltcGxlJChjb2xsZWN0aW9uUmVmKS5waXBlKFxyXG4gICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgIHRha2UoMSksXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuICAgICAgICBsZXQgZG9jTGlzdGVuZXJzOiBBcnJheTxPYnNlcnZhYmxlPGFueT4+O1xyXG4gICAgICAgIGRvY0xpc3RlbmVycyA9IGl0ZW1zLm1hcChpdGVtID0+IHRoaXMubGlzdGVuRm9yRG9jJChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnJlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZUxhdGVzdChkb2NMaXN0ZW5lcnMpO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgbGV0IHBhdGhzOiBzdHJpbmdbXSA9IFtdO1xyXG5cclxuICAgICAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgcGF0aHMgPSBwYXRocy5jb25jYXQodGhpcy5nZXRQYXRoc0Zyb21JdGVtRGVlcFJlY3Vyc2l2ZUhlbHBlcihpdGVtLCBzdWJDb2xsZWN0aW9uUXVlcmllcykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBwYXRocztcclxuICAgICAgfSksXHJcbiAgICAgIG1hcCgocGF0aExpc3Q6IHN0cmluZ1tdKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhMaXN0XHJcbiAgICAgICAgICAubWFwKHBhdGggPT4gZ2V0UmVmRnJvbVBhdGgocGF0aCwgdGhpcy5mcy5maXJlc3RvcmUpIGFzIERvY3VtZW50UmVmZXJlbmNlKTtcclxuICAgICAgfSksXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVXNlZCBieSBkZWxldGVEZWVwQnlJdGVtJCB0byBnZXQgYWxsIHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnRzIHRvIGJlIGRlbGV0ZWRcclxuICAgKiBpbmNsdWRpbmcgY2hpbGQgZG9jdW1lbnRzIHVzaW5nIFN1YkNvbGxlY3Rpb25RdWVyaWVzXHJcbiAgICpcclxuICAgKiBJbnRlcm5hbCB1c2VcclxuICAgKiBAcGFyYW0gaXRlbSBGaXJlc3RvcmVJdGVtIGZyb20gd2hlcmUgd2UgZ2V0IHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnRzXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkYkl0ZW0gaGFzIGNoaWxkIGRvY3VtZW50cyB0aGUgc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXJlIG5lZWRlZCB0byBsb2NhdGUgdGhlbVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXREb2N1bWVudFJlZmVyZW5jZXNGcm9tSXRlbTxUPihcclxuICAgIGl0ZW06IEZpcmVJdGVtPFQ+LFxyXG4gICAgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10pOiBEb2N1bWVudFJlZmVyZW5jZVtdIHtcclxuXHJcbiAgICBjb25zdCBwYXRocyA9IHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgcmV0dXJuIHBhdGhzLm1hcChwYXRoID0+IGdldFJlZkZyb21QYXRoKHBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgaXRzIG1lYW50IGFzIGEgc3VwcG9ydCBtZXRob2QgZm9yIGdldERvY3MkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldFBhdGhzRnJvbUl0ZW1EZWVwUmVjdXJzaXZlSGVscGVyPFQ+KGl0ZW06IEZpcmVJdGVtPFQ+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IHN0cmluZ1tdIHtcclxuXHJcbiAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMgPT0gbnVsbCB8fCBzdWJDb2xsZWN0aW9uUXVlcmllcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIFtpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGhdO1xyXG4gICAgfVxyXG4gICAgbGV0IHBhdGhMaXN0OiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgcGF0aExpc3QucHVzaChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG5cclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzLmZvckVhY2goY29sID0+IHtcclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoKGl0ZW0gYXMgRG9jdW1lbnREYXRhKVtjb2wubmFtZV0pICYmICFjb2wuZG9jSWQpIHtcclxuICAgICAgICAvKiBwcm9wZXJ0eSBpcyBhcnJheSBhbmQgbm90IHVzaW5nIGRvY0lkIHNvIHdpbGwgY29udGFpbiBtdWx0aXBsZSBkb2NzICovXHJcblxyXG4gICAgICAgIGNvbnN0IGl0ZW1zOiBGaXJlSXRlbTx7fT5bXSA9IChpdGVtIGFzIERvY3VtZW50RGF0YSlbY29sLm5hbWVdO1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goc3ViSXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgaWYgKGNvbC5zdWJDb2xsZWN0aW9ucykge1xyXG4gICAgICAgICAgICBwYXRoTGlzdCA9IHBhdGhMaXN0LmNvbmNhdCh0aGlzLmdldFBhdGhzRnJvbUl0ZW1EZWVwUmVjdXJzaXZlSGVscGVyKHN1Ykl0ZW0sIGNvbC5zdWJDb2xsZWN0aW9ucykpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGF0aExpc3QucHVzaChzdWJJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgfSBlbHNlIHsgLyogbm90IGFuIGFycmF5IHNvIGEgc2luZ2xlIGRvYyovXHJcblxyXG4gICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgIHBhdGhMaXN0ID0gcGF0aExpc3QuY29uY2F0KHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgY29sLnN1YkNvbGxlY3Rpb25zKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IHN1Ykl0ZW0gPSAoKGl0ZW0gYXMgRG9jdW1lbnREYXRhKVtjb2wubmFtZV0gYXMgRmlyZUl0ZW08e30+KTtcclxuICAgICAgICAgIGlmIChzdWJJdGVtICE9IG51bGwgJiYgJ3BhdGgnIGluIHN1Ykl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEpIHtcclxuICAgICAgICAgICAgcGF0aExpc3QucHVzaChzdWJJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gY29uc3QgcGF0aCA9IChkYkl0ZW1bY29sLm5hbWVdIGFzIEZpcmVzdG9yZUl0ZW0pLnBhdGg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHBhdGhMaXN0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRE8gIE5PVCAgQ0FMTCBUSElTIE1FVEhPRCwgdXNlZCBpbiBhZGREZWVwIGFuZCB1cGRhdGVEZWVwIHRvIHNwbGl0IHRoZSBkYXRhIGludG8gY3VycmVudERvYyBhbmQgc3ViQ29sbGVjdGlvbnNcclxuICAgKiBPbmx5IGdvZXMgb25lIHN1YiBsZXZlbCBkZWVwO1xyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBzcGxpdERhdGFJbnRvQ3VycmVudERvY0FuZFN1YkNvbGxlY3Rpb25zPFQ+KFxyXG4gICAgZGF0YTogVCxcclxuICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzOiBTdWJDb2xsZWN0aW9uV3JpdGVyW10gPSBbXSk6IEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQge1xyXG5cclxuICAgIC8qIFNwbGl0IGRhdGEgaW50byBjdXJyZW50IGRvYyBhbmQgc3ViIGNvbGxlY3Rpb25zICovXHJcbiAgICBsZXQgY3VycmVudERvYzogeyBbaW5kZXg6IHN0cmluZ106IGFueTsgfSA9IHt9O1xyXG4gICAgY29uc3Qgc3ViQ29sbGVjdGlvbnM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnk7IH0gPSB7fTtcclxuXHJcbiAgICAvKiBDaGVjayBpZiB0aGUga2V5IGlzIGluIHN1YkNvbGxlY3Rpb25zLCBpZiBpdCBpcyBwbGFjZSBpdCBpbiBzdWJDb2xsZWN0aW9ucyBlbHNlIHBsYWNlIGl0IGluIGN1cnJlbnREb2MgKi9cclxuXHJcbiAgICAvLyBub3QgYXJyYXkgc28gb2JqZWN0XHJcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhrZXksIHZhbHVlKTtcclxuICAgICAgaWYgKHN1YkNvbGxlY3Rpb25Xcml0ZXJzICYmIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb25zdCBzdWJDb2xsZWN0aW9uV3JpdGVyOiBTdWJDb2xsZWN0aW9uV3JpdGVyIHwgdW5kZWZpbmVkID0gc3ViQ29sbGVjdGlvbldyaXRlcnMuZmluZChzdWJDb2xsID0+IHN1YkNvbGwubmFtZSA9PT0ga2V5KTtcclxuXHJcbiAgICAgICAgaWYgKHN1YkNvbGxlY3Rpb25Xcml0ZXIpIHtcclxuICAgICAgICAgIHN1YkNvbGxlY3Rpb25zW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY3VycmVudERvY1trZXldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGN1cnJlbnREb2MgPSBkYXRhO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGN1cnJlbnREb2MsXHJcbiAgICAgIHN1YkNvbGxlY3Rpb25zXHJcbiAgICB9IGFzIEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUdXJuIGEgYmF0Y2ggaW50byBhbiBPYnNlcnZhYmxlIGluc3RlYWQgb2YgUHJvbWlzZS5cclxuICAgKlxyXG4gICAqIEZvciBzb21lIHJlYXNvbiBhbmd1bGFyZmlyZSByZXR1cm5zIGEgcHJvbWlzZSBvbiBiYXRjaC5jb21taXQoKSBpbnN0ZWFkIG9mIGFuIG9ic2VydmFibGUgbGlrZSBmb3JcclxuICAgKiBldmVyeXRoaW5nIGVsc2UuXHJcbiAgICpcclxuICAgKiBUaGlzIG1ldGhvZCB0dXJucyBpdCBpbnRvIGFuIG9ic2VydmFibGVcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgYmF0Y2hDb21taXQkKGJhdGNoOiBXcml0ZUJhdGNoKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbShiYXRjaC5jb21taXQoKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogRmlyZWJhc2UgdmVyc2lvbiA5IGNoYW5nZWQgdGhlIHF1ZXJ5IHN5bnRheFxyXG4gKiBUaGUgbmV3IHN5bnRheCBicm9rZW4gdGhlIGFiaWxpdHkgdG8gY2hhaW4gcXVlcmllcyBsaWtlIHRoaXM6XHJcbiAqXHJcbiAqIGNvbGxlY3Rpb25SZWYud2hlcmUoJ2ZvbycsICc9PScsIDEyMykubGltaXQoMTApLi5yZXR1cm5zIHRoZSBjb2xsZWN0aW9uIHJlZlxyXG4gKlxyXG4gKiBub3cgaW5zdGVhZCB5b3UgbXVzdCB3cml0ZSBpdCBsaWtlIHRoaXMsIHF1ZXJ5KGNvbGxlY3Rpb25SZWYsIHdoZXJlKCdmb28nLCAnPT0nLCAxMjMpLCBsaW1pdCgxMCkpLi4ucmV0dXJucyBhIFF1ZXJ5XHJcbiAqXHJcbiAqIHdoaWNoIGlzIHVnbHkgYW5kIG1ha2UgeW91IGxvb3NlIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHdhcyBwcmVzZW50IGluIHRoZSBjb2xsZWN0aW9uUmVmIHNpbmNlIGEgUXVlcnkgaXMgcmV0dXJuZWQgaW5zdGVhZCxcclxuICogd2hpY2ggaG9sZHMgbGVzcyBpbmZvcm1hdGlvbiB0aGFuIGEgQ29sbGVjdGlvblJlZmVyZW5jZS5cclxuICpcclxuICogVGhpcyBDb250YWluZXIgaXMgbWVhbnQgdG8gYWxsb3cgeW91IHRvIGNoYWluIHF1ZXJpZXMsIGxpa2UgYmVmb3JlIHZlcnNpb24gOSBhbmQgYWxzbyByZXRhaW4gdGhlIGluZm9ybWF0aW9uIGluXHJcbiAqIHRoZSBvcmlnaW5hbCBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUXVlcnlDb250YWluZXI8VD4ge1xyXG5cclxuICBwdWJsaWMgcXVlcnlDb25zdHJhaW50czogUXVlcnlDb25zdHJhaW50W10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikge1xyXG4gIH1cclxuXHJcbiAgLyoqIGZhY3RvcnkgbWV0aG9kIHRvIGNyZWF0ZSBjb250YWluZXIgZnJvbSBwYXRoICovXHJcbiAgc3RhdGljIGZyb21QYXRoPFQ+KGZpcmVzdG9yZTogRmlyZXN0b3JlLCBwYXRoOiBzdHJpbmcpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICBjb25zdCByZWYgPSBjb2xsZWN0aW9uKGZpcmVzdG9yZSwgcGF0aCkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPjtcclxuICAgIHJldHVybiBuZXcgdGhpcyhyZWYpO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJldHVybnMgdGhlIHF1ZXJ5IHdpdGggYWxsIHRoZSBxdWVyeSBjb25zdHJhaW50cyAqL1xyXG4gIGdldCBxdWVyeSgpOiBRdWVyeTxUPiB7XHJcbiAgICByZXR1cm4gcXVlcnkodGhpcy5yZWYsIC4uLnRoaXMucXVlcnlDb25zdHJhaW50cyk7XHJcbiAgfVxyXG5cclxuICAvKiogQ2FsbHMgdGhlIGZpcmViYXNlIGdldERvY3MoKSBtZXRob2QgYW5kIGxpc3RlbnMgZm9yIHRoZSBkb2N1bWVudHMgaW4gdGhlIHF1ZXJ5LiAqL1xyXG4gIGdldERvY3MkKCk6IE9ic2VydmFibGU8UXVlcnlTbmFwc2hvdDxUPj4ge1xyXG4gICAgcmV0dXJuIGZyb20oZ2V0RG9jczxUPih0aGlzLnF1ZXJ5KSk7XHJcbiAgfVxyXG5cclxuICB3aGVyZShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgb3BTdHI6IFdoZXJlRmlsdGVyT3AsIHZhbHVlOiB1bmtub3duKTogUXVlcnlDb250YWluZXI8VD4ge1xyXG4gICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2god2hlcmUoZmllbGRQYXRoLCBvcFN0ciwgdmFsdWUpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgb3JkZXJCeShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgZGlyZWN0aW9uU3RyPzogT3JkZXJCeURpcmVjdGlvbik6IFF1ZXJ5Q29udGFpbmVyPFQ+IHtcclxuICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKG9yZGVyQnkoZmllbGRQYXRoLCBkaXJlY3Rpb25TdHIpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXQoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXRUb0xhc3QoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdFRvTGFzdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgc3RhcnRBdCguLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuICBzdGFydEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIHN0YXJ0QXQoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+LCAuLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD4geyAvLyBpbXBsZW1lbnRhdGlvblxyXG4gICAgaWYgKHNuYXBzaG90KSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKHN0YXJ0QXQoc25hcHNob3QpKTtcclxuICAgIH0gZWxzZSBpZiAoZmllbGRWYWx1ZXMpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIHN0YXJ0QWZ0ZXIoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+KTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuXHJcbiAgc3RhcnRBZnRlcihzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBZnRlcihzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGVuZEF0KC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPiwgLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+IHsgLy8gaW1wbGVtZW50YXRpb25cclxuICAgIGlmIChzbmFwc2hvdCkge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdChzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBlbmRCZWZvcmUoLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcbiAgZW5kQmVmb3JlKHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEJlZm9yZShzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goZW5kQmVmb3JlKHNuYXBzaG90KSk7XHJcbiAgICB9IGVsc2UgaWYgKGZpZWxkVmFsdWVzKSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKGVuZEJlZm9yZSguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=","start":57727,"end":192161}]},"code":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,23],[32,0,0,31],[34,0,0,33],[38,0,0,37],[40,0,0,51],[42,0,0,53],[44,0,0,54],[50,0,0,60],[56,0,0,66],[57,0,0,67]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,20],[27,0,2,26],[29,0,2,28],[32,0,2,31],[34,0,2,33],[42,0,2,41],[44,0,2,43],[53,0,2,52],[55,0,2,54],[59,0,2,58],[61,0,2,60],[64,0,2,63],[66,0,2,64],[72,0,2,70],[88,0,2,86],[89,0,2,87]],[[0,0,3,0],[7,0,3,7],[9,0,4,2],[19,0,4,12],[21,0,7,2],[38,0,7,19],[40,0,9,2],[45,0,9,7],[47,0,10,2],[56,0,10,11],[58,0,13,2],[65,0,13,9],[67,0,14,2],[72,0,14,7],[74,0,15,2],[85,0,15,13],[87,0,16,2],[94,0,16,9],[96,0,18,2],[101,0,18,7],[103,0,22,2],[113,0,22,12],[115,0,23,2],[122,0,23,9],[124,0,24,2],[129,0,24,7],[131,0,26,2],[141,0,26,12],[143,0,28,1],[149,0,28,7],[169,0,28,27],[170,0,28,28]],[[0,0,30,0],[7,0,30,7],[9,0,31,2],[23,0,31,16],[25,0,32,2],[38,0,32,15],[40,0,33,2],[55,0,33,17],[57,0,34,2],[79,0,34,24],[81,0,35,2],[96,0,35,17],[98,0,36,2],[112,0,36,16],[114,0,37,2],[130,0,37,18],[132,0,38,1],[138,0,38,7],[149,0,38,18],[150,0,38,19]],[[0,0,43,0],[7,0,43,7],[9,0,43,8],[24,0,43,23],[26,0,43,25],[43,0,43,42],[45,0,43,43],[51,0,43,49],[65,0,43,63],[66,0,43,64]],[[0,0,45,0]],[],[[3,0,47,3]],[[0,0,48,0],[6,0,48,6],[7,0,48,0],[11,0,48,12],[28,0,60,1]],[[0,0,48,0],[11,0,48,12],[28,0,48,29]],[[4,0,49,2],[32,0,49,30]],[[4,0,50,2],[75,0,50,13],[76,0,50,13]],[[4,0,52,2],[117,0,52,115]],[[4,0,53,2],[91,0,53,21],[92,0,53,21]],[[4,0,55,2],[51,0,55,49]],[[4,0,56,2],[65,0,56,8],[66,0,56,8]],[[4,0,58,2],[53,0,58,51]],[[4,0,59,2],[91,0,59,21],[92,0,59,21]],[[0,0,60,0],[1,0,60,1],[3,0,48,12],[20,0,48,29],[25,0,48,12],[42,0,48,29],[50,0,60,1]],[[0,0,71,0]],[],[],[],[],[[3,0,76,3]],[[0,0,77,0],[6,0,77,6],[13,0,77,13],[30,0,77,30]],[[4,0,79,2]],[],[],[],[],[[7,0,84,5]],[[4,0,85,2],[16,0,85,22],[18,0,85,46],[20,0,85,55],[35,0,85,78],[41,0,85,84]],[[8,0,85,22],[15,0,85,24],[18,0,85,22],[20,0,85,24],[21,0,85,46]],[[8,0,85,55],[25,0,85,67],[28,0,85,55],[40,0,85,67],[41,0,85,84]],[[4,0,86,2],[5,0,86,3]],[[4,0,88,2],[43,0,88,41]],[[4,0,90,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,118,5]],[[4,0,119,9],[17,0,119,22],[18,0,120,4],[24,0,120,29],[26,0,121,4],[49,0,121,49],[51,0,121,51],[53,0,122,4],[72,0,122,42],[89,0,122,59],[90,0,122,60],[109,0,122,79]],[[8,0,124,4],[15,0,124,11],[19,0,124,15],[20,0,124,16],[52,0,124,48],[53,0,124,49],[59,0,124,55],[61,0,124,57],[81,0,124,77],[83,0,124,79],[99,0,124,95],[100,0,124,96],[101,0,124,97],[105,0,124,101],[106,0,125,6],[109,0,125,9],[110,0,125,10],[114,0,125,14],[115,0,125,15],[117,0,125,17],[118,0,125,18],[122,0,125,37],[123,0,125,38],[124,0,126,5],[125,0,126,6]],[[4,0,127,2],[5,0,127,3]],[[4,0,129,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,160,5]],[[4,0,161,9],[24,0,161,29],[25,0,162,4],[31,0,162,20],[33,0,163,4],[56,0,163,49],[58,0,163,51]],[[8,0,164,4]],[],[],[[11,0,167,7]],[[8,0,168,4],[15,0,168,11],[19,0,168,15],[20,0,168,16],[46,0,168,42],[47,0,168,46],[53,0,168,52],[54,0,168,53],[55,0,168,54],[59,0,168,58],[60,0,169,6],[68,0,169,14],[69,0,169,15],[70,0,169,16],[75,0,169,37],[77,0,169,39],[79,0,169,41]],[[12,0,171,8],[16,0,171,12],[21,0,171,17],[25,0,171,21],[29,0,171,25],[33,0,171,29],[38,0,171,34],[39,0,171,35],[45,0,171,41],[50,0,171,46],[51,0,171,47],[53,0,171,49]],[[16,0,172,10],[23,0,172,17],[25,0,172,19],[26,0,172,20],[28,0,172,22],[29,0,172,23],[30,0,172,24]],[[13,0,173,9]],[[12,0,174,8],[16,0,174,12],[36,0,174,32],[37,0,174,33],[43,0,174,39],[47,0,174,43],[48,0,174,44],[50,0,174,46]],[[16,0,175,10],[23,0,175,17],[25,0,175,19],[26,0,175,20],[31,0,175,25],[32,0,175,26],[33,0,175,27]],[[13,0,176,9]],[[12,0,178,8],[18,0,178,14],[37,0,178,33],[40,0,178,60],[42,0,178,62],[43,0,178,63]],[[12,0,180,8],[17,0,180,13],[18,0,180,14],[25,0,180,21],[26,0,180,22],[30,0,180,26],[31,0,180,27],[33,0,180,29]],[[16,0,182,10],[22,0,182,16],[40,0,182,34],[43,0,182,37],[47,0,182,41],[48,0,182,42],[72,0,182,66],[73,0,182,67],[77,0,182,71],[79,0,182,73],[99,0,182,93],[100,0,182,94],[101,0,182,95]],[[16,0,184,10],[35,0,184,29],[36,0,184,30],[40,0,184,34],[41,0,184,35],[59,0,184,53],[60,0,184,54],[61,0,184,55]],[[12,0,185,8],[13,0,185,9],[14,0,185,10],[15,0,185,11]],[[12,0,187,8],[66,0,187,62]],[[12,0,188,8],[19,0,188,15],[32,0,188,28],[33,0,188,29],[52,0,188,48],[53,0,188,49],[54,0,188,50]],[[8,0,189,6],[9,0,189,7],[10,0,189,8],[11,0,190,5],[12,0,190,6]],[[4,0,191,2],[5,0,191,3]],[[4,0,193,2]],[],[[7,0,195,5]],[[4,0,196,9],[35,0,196,40],[36,0,197,4],[50,0,197,26],[52,0,198,4],[65,0,198,25],[67,0,199,4],[75,0,199,21]],[[8,0,201,4],[109,0,201,105]],[[8,0,202,4],[14,0,202,10],[29,0,202,25],[32,0,202,28],[36,0,202,32],[50,0,202,46],[51,0,202,50],[65,0,202,64],[66,0,202,65],[80,0,202,79],[82,0,202,81],[86,0,202,85],[87,0,202,86],[89,0,202,88],[90,0,202,89],[99,0,202,98],[100,0,202,125],[101,0,202,126],[102,0,202,127]],[[8,0,203,4],[12,0,203,8],[20,0,203,16],[24,0,203,20],[28,0,203,24],[30,0,203,26]],[[12,0,204,6],[27,0,204,21],[28,0,204,22],[35,0,204,29],[36,0,204,30],[44,0,204,38],[45,0,204,39],[46,0,204,40]],[[9,0,205,5]],[[8,0,207,4],[15,0,207,11],[19,0,207,15],[20,0,207,16],[46,0,207,42],[47,0,207,46],[62,0,207,61],[63,0,207,62],[68,0,207,67],[69,0,207,68],[70,0,207,69],[74,0,207,73],[75,0,208,6],[83,0,208,14],[84,0,208,15],[85,0,208,16],[90,0,208,36],[92,0,208,38],[94,0,208,40]],[[12,0,210,8],[16,0,210,12],[21,0,210,17],[22,0,210,18],[28,0,210,24],[32,0,210,28],[33,0,210,29],[35,0,210,31]],[[16,0,211,10],[23,0,211,17],[25,0,211,19],[26,0,211,20],[28,0,211,22],[29,0,211,23],[30,0,211,24]],[[13,0,212,9],[14,0,212,10],[78,0,212,74]],[[12,0,214,8],[65,0,214,61]],[[12,0,216,8],[18,0,216,14],[30,0,216,26],[33,0,216,61],[35,0,216,63],[36,0,216,64]],[[12,0,218,8],[17,0,218,13],[23,0,218,19],[27,0,218,23],[31,0,218,27],[36,0,218,32],[38,0,218,34]],[[16,0,220,10],[120,0,220,114]],[[16,0,221,10],[22,0,221,16],[35,0,221,29],[38,0,221,32],[42,0,221,36],[43,0,221,37],[60,0,221,54],[61,0,221,55],[64,0,221,58],[65,0,221,59],[69,0,221,63],[70,0,221,64],[76,0,221,70],[77,0,221,71],[80,0,221,74],[82,0,221,76],[95,0,221,89],[96,0,221,90],[97,0,221,91],[98,0,221,93],[117,0,221,112]],[[16,0,223,10],[22,0,223,16],[37,0,223,31],[40,0,223,34],[44,0,223,38],[45,0,223,39],[76,0,223,70],[77,0,223,71],[90,0,223,84],[92,0,223,86],[105,0,223,99],[107,0,223,101],[115,0,223,109],[116,0,223,110],[117,0,223,111],[121,0,223,115],[122,0,224,12],[125,0,224,15],[126,0,224,16],[127,0,224,17],[141,0,224,51],[143,0,224,53],[145,0,224,55]],[[20,0,225,14],[24,0,225,18],[38,0,225,32],[39,0,225,33],[45,0,225,39],[48,0,225,42],[49,0,225,43],[51,0,225,45]],[[24,0,226,16],[31,0,226,23],[33,0,226,24],[36,0,226,27],[40,0,226,31],[42,0,226,33],[43,0,226,34],[56,0,226,47],[57,0,226,48],[59,0,226,50],[73,0,226,64],[75,0,226,80],[76,0,226,81]],[[21,0,227,15]],[[25,0,227,21]],[[24,0,228,16],[31,0,228,23],[33,0,228,24],[36,0,228,27],[40,0,228,31],[42,0,228,47],[43,0,228,48]],[[21,0,229,15],[22,0,229,17],[52,0,229,47]],[[16,0,230,12],[17,0,230,13],[18,0,230,14],[19,0,231,11],[20,0,231,12]],[[16,0,232,10],[28,0,232,22],[29,0,232,23],[33,0,232,27],[34,0,232,28],[49,0,232,43],[50,0,232,44],[51,0,232,45]],[[13,0,233,9]],[[12,0,235,8],[19,0,235,15],[32,0,235,28],[33,0,235,29],[45,0,235,41],[46,0,235,42],[47,0,235,43],[51,0,235,47],[52,0,236,10],[55,0,236,13],[56,0,236,14],[59,0,236,17],[60,0,236,18],[62,0,236,20],[63,0,236,21],[70,0,236,28],[71,0,236,29],[74,0,236,32],[75,0,236,33],[78,0,236,36],[79,0,236,37],[80,0,236,38],[81,0,237,9],[82,0,237,10]],[[8,0,238,6],[9,0,238,7],[10,0,238,8],[11,0,239,5],[12,0,239,6]],[[4,0,240,2],[5,0,240,3]],[[4,0,242,2],[39,0,242,37]],[[4,0,244,2]],[],[],[],[],[],[],[],[[7,0,252,5]],[[4,0,253,9],[8,0,253,13],[9,0,254,4],[13,0,254,11],[15,0,255,4],[28,0,255,41],[30,0,256,4],[53,0,256,50],[55,0,256,52],[57,0,257,4],[70,0,257,26],[74,0,257,30],[76,0,258,4],[81,0,258,18]],[[8,0,260,4],[12,0,260,8],[17,0,260,13],[18,0,260,14],[25,0,260,21],[26,0,260,22],[30,0,260,26],[31,0,260,27],[35,0,260,31],[40,0,260,36],[44,0,260,40],[64,0,260,60],[65,0,260,61],[71,0,260,67],[74,0,260,70],[75,0,260,71],[77,0,260,73]],[[12,0,261,6],[18,0,261,12],[23,0,261,17],[26,0,261,39]],[[16,0,262,8],[20,0,262,12],[22,0,262,14],[67,0,262,59]],[[16,0,263,8],[20,0,263,12],[22,0,263,14],[31,0,263,23]],[[16,0,264,8],[23,0,264,15],[25,0,264,17],[113,0,264,105]],[[16,0,265,8],[21,0,265,13],[23,0,265,15],[25,0,265,17]],[[16,0,266,8],[20,0,266,12]],[[16,0,267,8],[36,0,267,28]],[[16,0,268,8],[21,0,268,13]],[[13,0,269,7],[14,0,269,8]],[[12,0,271,6],[18,0,271,12],[23,0,271,17],[24,0,271,18]],[[9,0,272,5]],[[8,0,274,4],[12,0,274,8],[22,0,274,18],[23,0,274,19]],[[8,0,275,4],[12,0,275,8],[26,0,275,22],[29,0,275,52],[31,0,275,54],[32,0,275,55]],[[8,0,277,4]],[],[],[[10,0,280,6]],[[8,0,281,4],[12,0,281,8],[17,0,281,13],[18,0,281,14],[25,0,281,21],[26,0,281,22],[30,0,281,26],[31,0,281,27],[35,0,281,31],[40,0,281,36],[42,0,281,38]],[[12,0,282,6],[22,0,282,16],[25,0,282,19],[29,0,282,23],[30,0,282,24]],[[9,0,283,5]],[[13,0,283,11]],[[12,0,284,6],[18,0,284,12],[23,0,284,17],[26,0,284,20],[30,0,284,24],[31,0,284,25],[71,0,284,65],[72,0,284,66],[76,0,284,70],[78,0,284,72],[98,0,284,92],[99,0,284,93],[100,0,284,94]],[[12,0,285,6],[22,0,285,16],[25,0,285,19],[30,0,285,24],[31,0,285,25],[41,0,285,35],[42,0,285,36]],[[12,0,286,6],[26,0,286,20],[29,0,286,23],[34,0,286,28],[35,0,286,29],[49,0,286,43],[50,0,286,44]],[[9,0,287,5]],[[8,0,289,4],[15,0,289,11],[19,0,289,15],[20,0,289,16],[30,0,289,26],[31,0,289,30],[41,0,289,45],[43,0,289,47],[56,0,289,60],[58,0,289,62],[68,0,289,72],[70,0,289,74],[75,0,289,79],[76,0,289,80],[77,0,289,81],[81,0,289,85]],[[8,0,290,6],[36,0,290,34]],[[8,0,291,6],[16,0,291,14],[17,0,291,15],[18,0,291,16],[29,0,291,40],[31,0,291,42],[33,0,291,44]],[[12,0,293,8],[18,0,293,14],[28,0,293,24],[31,0,293,51],[33,0,293,53],[34,0,293,54]],[[12,0,295,8],[17,0,295,13],[23,0,295,19],[24,0,295,20],[40,0,295,36],[42,0,295,38],[60,0,295,56],[61,0,295,57],[65,0,295,61],[71,0,295,67],[72,0,295,68],[79,0,295,75],[80,0,295,76],[94,0,295,90],[95,0,295,91],[97,0,295,93]],[[16,0,296,10],[20,0,296,14],[43,0,296,72],[44,0,296,73],[45,0,296,74],[84,0,296,113]],[[16,0,297,10],[20,0,297,14],[28,0,297,42],[29,0,297,43]],[[16,0,299,10],[20,0,299,14],[40,0,299,34],[42,0,299,36]],[[20,0,300,12],[43,0,300,35],[46,0,300,38],[66,0,300,58],[67,0,300,59],[71,0,300,63],[72,0,300,64],[79,0,300,71],[80,0,300,72],[82,0,300,74],[83,0,300,75],[90,0,300,82],[91,0,300,83],[95,0,300,87],[100,0,300,92],[116,0,300,108],[117,0,300,109],[119,0,300,111],[133,0,300,125],[134,0,300,126]],[[20,0,301,12],[28,0,301,20],[31,0,301,23],[51,0,301,43],[52,0,301,44],[56,0,301,48],[57,0,301,49],[64,0,301,56],[65,0,301,57],[67,0,301,59],[68,0,301,60],[75,0,301,67],[76,0,301,68],[80,0,301,72],[85,0,301,77],[101,0,301,93],[102,0,301,94],[104,0,301,96],[109,0,301,101],[110,0,301,102]],[[17,0,302,11]],[[16,0,304,10],[22,0,304,16],[38,0,304,32],[41,0,304,56],[57,0,304,72],[58,0,304,73],[69,0,304,84],[70,0,304,85],[87,0,304,102],[88,0,304,103],[91,0,304,106],[93,0,304,108],[109,0,304,124],[110,0,304,125],[111,0,304,126]],[[16,0,306,10]],[],[],[[139,0,309,133]],[[16,0,310,10],[20,0,310,14],[25,0,310,19],[26,0,310,20],[33,0,310,27],[34,0,310,28],[52,0,310,46],[53,0,310,47],[55,0,310,49]],[[20,0,311,12],[24,0,311,16],[32,0,311,24],[37,0,311,29],[46,0,311,38],[48,0,311,40],[50,0,311,42],[113,0,311,105]],[[24,0,313,14],[110,0,313,100]],[[24,0,314,14],[30,0,314,20],[39,0,314,29],[42,0,314,32],[46,0,314,36],[47,0,314,37],[51,0,314,41],[52,0,314,42],[70,0,314,60],[72,0,314,62],[88,0,314,78],[90,0,314,80],[113,0,314,103],[115,0,314,105],[125,0,314,115],[127,0,314,117],[135,0,314,125],[136,0,314,126],[137,0,314,127],[141,0,314,131],[142,0,315,16],[145,0,315,19],[146,0,315,20],[150,0,315,24],[151,0,315,25],[153,0,315,27]],[[28,0,316,18],[52,0,316,42]],[[28,0,317,18],[35,0,317,25],[37,0,317,26],[40,0,317,29],[42,0,317,31],[58,0,317,47],[60,0,317,49],[65,0,317,54],[67,0,317,56],[71,0,317,60],[73,0,317,61],[74,0,317,62],[75,0,317,63],[134,0,317,122]],[[24,0,318,16],[25,0,318,17],[26,0,318,18],[27,0,319,15],[28,0,319,16]],[[24,0,320,14],[34,0,320,24],[35,0,320,25],[39,0,320,29],[40,0,320,30],[49,0,320,39],[50,0,320,40],[51,0,320,41]],[[21,0,322,13]],[[25,0,322,19],[27,0,322,21],[96,0,322,90]],[[24,0,323,14],[42,0,323,32],[43,0,323,33],[50,0,323,40],[51,0,323,41],[52,0,323,42],[62,0,323,66],[64,0,323,68],[66,0,323,70]],[[28,0,325,16],[114,0,325,102]],[[28,0,326,16],[34,0,326,22],[43,0,326,31],[46,0,326,34],[50,0,326,38],[51,0,326,39],[55,0,326,43],[56,0,326,44],[66,0,326,54],[68,0,326,56],[84,0,326,72],[86,0,326,74],[109,0,326,97],[111,0,326,99],[121,0,326,109],[122,0,326,110],[123,0,326,111],[127,0,326,115],[128,0,327,18],[131,0,327,21],[132,0,327,22],[136,0,327,26],[137,0,327,27],[139,0,327,29]],[[32,0,328,20],[58,0,328,46]],[[32,0,329,20],[125,0,329,113]],[[32,0,330,20],[39,0,330,27],[41,0,330,28],[44,0,330,31],[46,0,330,33],[62,0,330,49],[64,0,330,51],[69,0,330,56],[71,0,330,58],[72,0,330,59],[76,0,330,63],[77,0,330,64],[79,0,330,65],[80,0,330,66]],[[28,0,331,18],[29,0,331,19],[30,0,331,20],[31,0,332,17],[32,0,332,18]],[[28,0,334,16],[38,0,334,26],[39,0,334,27],[43,0,334,31],[44,0,334,32],[53,0,334,41],[54,0,334,42],[55,0,334,43]],[[24,0,335,14],[25,0,335,15],[26,0,335,16],[27,0,335,17]],[[21,0,336,13]],[[17,0,337,11]],[[21,0,337,17],[23,0,337,19],[59,0,337,55]],[[20,0,338,12],[28,0,338,20],[31,0,338,23],[39,0,338,31],[44,0,338,36],[53,0,338,45],[54,0,338,46],[55,0,338,47],[56,0,338,48],[64,0,338,56],[65,0,338,57],[66,0,338,58],[67,0,338,59],[71,0,338,63],[72,0,338,64],[84,0,338,76],[85,0,338,77]],[[20,0,340,12],[106,0,340,98]],[[20,0,341,12],[26,0,341,18],[35,0,341,27],[38,0,341,30],[42,0,341,34],[43,0,341,35],[47,0,341,39],[48,0,341,40],[66,0,341,58],[68,0,341,60],[84,0,341,76],[86,0,341,78],[109,0,341,101],[111,0,341,103],[121,0,341,113],[123,0,341,115],[131,0,341,123],[132,0,341,124],[133,0,341,125],[137,0,341,129],[138,0,342,14],[141,0,342,17],[142,0,342,18],[146,0,342,22],[147,0,342,23],[149,0,342,25]],[[24,0,343,16],[48,0,343,40]],[[24,0,344,16],[31,0,344,23],[33,0,344,24],[36,0,344,27],[38,0,344,29],[54,0,344,45],[56,0,344,47],[61,0,344,52],[63,0,344,54],[67,0,344,58],[69,0,344,59],[70,0,344,60],[71,0,344,61],[130,0,344,120]],[[20,0,345,14],[21,0,345,15],[22,0,345,16],[23,0,346,13],[24,0,346,14]],[[20,0,348,12],[30,0,348,22],[31,0,348,23],[35,0,348,27],[36,0,348,28],[45,0,348,37],[46,0,348,38],[47,0,348,39]],[[17,0,349,11]],[[13,0,350,9],[14,0,350,10],[36,0,350,32]],[[12,0,352,8],[16,0,352,12],[26,0,352,22],[27,0,352,23],[33,0,352,29],[36,0,352,32],[37,0,352,33],[39,0,352,35],[41,0,352,37],[113,0,352,109]],[[16,0,354,10],[89,0,354,83]],[[16,0,355,10],[23,0,355,17],[36,0,355,30],[37,0,355,31],[47,0,355,41],[48,0,355,42],[49,0,355,43],[53,0,355,47]],[[16,0,356,12],[48,0,356,44]],[[16,0,358,12],[139,0,358,135]],[[16,0,359,12],[141,0,359,137]],[[16,0,360,12],[34,0,360,30]],[[16,0,362,12],[19,0,362,15],[20,0,362,16],[21,0,362,17],[29,0,362,49],[31,0,362,51],[33,0,362,53]],[[20,0,363,14],[26,0,363,20],[37,0,363,31],[40,0,363,34],[42,0,363,36],[43,0,363,37]],[[20,0,365,14],[28,0,365,22],[29,0,365,23],[36,0,365,30],[37,0,365,31],[38,0,365,32],[41,0,365,61],[43,0,365,63],[45,0,365,65]],[[24,0,367,16],[30,0,367,22],[33,0,367,25],[36,0,367,28],[39,0,367,31],[40,0,367,32],[43,0,367,35],[44,0,367,36]],[[24,0,368,16],[30,0,368,22],[35,0,368,27],[38,0,368,30],[41,0,368,33],[42,0,368,34],[47,0,368,39],[48,0,368,40]],[[24,0,370,16],[126,0,370,118]],[[24,0,371,16],[37,0,371,29]],[[24,0,372,16],[28,0,372,20],[39,0,372,31],[40,0,372,32],[54,0,372,46],[55,0,372,47],[58,0,372,50],[59,0,372,51],[63,0,372,55],[68,0,372,60],[69,0,372,61],[76,0,372,68],[77,0,372,69],[88,0,372,80],[89,0,372,81],[92,0,372,84],[93,0,372,85],[94,0,372,86],[96,0,372,88]],[[28,0,373,18],[123,0,373,113]],[[28,0,374,18],[41,0,374,31]],[[28,0,375,19],[39,0,375,30],[40,0,375,31],[43,0,375,34],[44,0,375,50],[45,0,375,51],[49,0,375,55],[50,0,375,56],[55,0,375,61],[56,0,375,62],[57,0,375,63],[58,0,375,64],[59,0,375,65],[60,0,375,66]],[[25,0,376,17]],[[29,0,376,23]],[[28,0,377,18],[41,0,377,31]],[[28,0,378,18],[39,0,378,29],[40,0,378,30],[43,0,378,33],[44,0,378,34],[47,0,378,37],[52,0,378,42],[53,0,378,43]],[[25,0,379,17]],[[20,0,380,14],[21,0,380,15],[22,0,380,16],[23,0,380,17]],[[20,0,382,14],[27,0,382,21],[38,0,382,37],[39,0,382,38]],[[16,0,383,12],[17,0,383,13],[18,0,383,14]],[[16,0,385,12],[64,0,385,60]],[[16,0,387,12],[19,0,387,15],[20,0,387,16],[21,0,387,17],[32,0,387,31],[34,0,387,33],[36,0,387,35]],[[20,0,388,14],[27,0,388,21],[29,0,388,22],[32,0,388,25],[43,0,388,36],[45,0,388,38],[48,0,388,41],[59,0,388,52],[61,0,388,58],[62,0,388,59]],[[16,0,389,12],[17,0,389,13],[18,0,389,14],[19,0,391,11],[20,0,391,12]],[[13,0,392,9]],[[17,0,392,15]],[[16,0,393,10],[23,0,393,17],[25,0,393,19],[26,0,393,20],[37,0,393,31],[38,0,393,32],[39,0,393,33]],[[13,0,394,9]],[[8,0,395,6],[9,0,395,7],[10,0,395,8],[11,0,396,5],[12,0,396,6],[16,0,396,10]],[[8,0,397,6],[21,0,397,19]],[[8,0,398,6],[12,0,398,10],[13,0,398,11],[14,0,398,12],[15,0,398,13],[16,0,399,5],[17,0,399,6]],[[4,0,400,2],[5,0,400,3]],[[4,0,402,2],[41,0,402,39]],[[4,0,404,2]],[],[],[],[],[],[],[],[],[],[[7,0,414,5]],[[4,0,415,9],[11,0,415,16],[12,0,415,53],[16,0,415,69],[18,0,416,53],[24,0,416,78],[26,0,417,53],[49,0,417,99],[51,0,417,101],[53,0,418,53],[73,0,418,82],[77,0,418,86]],[[8,0,420,4],[12,0,420,8],[32,0,420,28],[36,0,420,32],[40,0,420,36],[44,0,420,40],[64,0,420,60],[65,0,420,61],[71,0,420,67],[76,0,420,72],[77,0,420,73],[79,0,420,75]],[[12,0,421,6],[19,0,421,13],[23,0,421,17],[24,0,421,18],[37,0,421,31],[38,0,421,32],[42,0,421,36],[44,0,421,38],[50,0,421,44],[52,0,421,46],[69,0,421,63],[70,0,421,64],[71,0,421,65],[72,0,421,66],[125,0,421,119]],[[9,0,422,5]],[[8,0,424,4],[14,0,424,10],[19,0,424,15],[22,0,424,18],[26,0,424,22],[27,0,424,23],[50,0,424,46],[51,0,424,47],[55,0,424,51],[57,0,424,53],[63,0,424,59],[65,0,424,61],[85,0,424,81],[87,0,424,83],[104,0,424,100],[105,0,424,101],[106,0,424,102]],[[8,0,425,4],[15,0,425,11],[19,0,425,15],[20,0,425,16],[32,0,425,28],[33,0,425,29],[38,0,425,34],[39,0,425,35],[40,0,425,36]],[[4,0,426,2],[5,0,426,3]],[[4,0,428,2]],[],[],[],[],[],[[7,0,434,5]],[[4,0,435,9],[19,0,435,24],[20,0,435,28],[27,0,435,56],[29,0,435,58],[33,0,435,65],[35,0,435,67],[55,0,435,96],[59,0,435,100]],[[8,0,436,4],[65,0,436,61]],[[8,0,437,4],[14,0,437,10],[19,0,437,15],[22,0,437,30],[32,0,437,40],[33,0,437,41],[37,0,437,45],[38,0,437,46],[40,0,437,48],[41,0,437,49],[50,0,437,58],[51,0,437,59],[52,0,437,60]],[[8,0,439,4],[12,0,439,8],[29,0,439,25],[31,0,439,27]],[[12,0,440,6],[16,0,440,10],[19,0,440,13],[34,0,440,28],[35,0,440,29],[39,0,440,33],[41,0,440,35],[46,0,440,40],[47,0,440,41],[48,0,440,42]],[[9,0,441,5]],[[8,0,443,4],[15,0,443,11],[16,0,443,12],[23,0,443,19],[24,0,443,20],[25,0,443,21],[31,0,443,27],[33,0,443,29],[35,0,443,31]],[[12,0,444,6],[17,0,444,11],[18,0,444,12],[24,0,444,18],[25,0,444,19],[31,0,444,25],[33,0,444,27],[37,0,444,31],[38,0,444,32],[39,0,444,33]],[[8,0,445,4],[9,0,445,5],[10,0,445,6],[11,0,445,7]],[[8,0,447,4],[15,0,447,11],[19,0,447,15],[20,0,447,16],[32,0,447,28],[33,0,447,29],[38,0,447,34],[39,0,447,35],[40,0,447,36]],[[4,0,448,2],[5,0,448,3]],[[4,0,451,2]],[],[],[],[],[],[],[],[],[[7,0,460,5]],[[4,0,461,9],[16,0,461,21],[17,0,461,25],[23,0,461,50],[25,0,462,25],[30,0,462,38],[32,0,463,25],[55,0,463,70],[57,0,463,72],[59,0,464,25],[79,0,464,69]],[[8,0,466,4],[12,0,466,8],[32,0,466,28],[36,0,466,32],[40,0,466,36],[42,0,466,38]],[[12,0,467,6],[32,0,467,26],[35,0,467,29],[55,0,467,74],[56,0,467,75]],[[9,0,468,5]],[[8,0,470,4],[14,0,470,10],[27,0,470,23],[30,0,470,47],[36,0,470,53],[37,0,470,54],[43,0,470,60],[44,0,470,61]],[[8,0,472,4],[15,0,472,11],[19,0,472,15],[20,0,472,16],[33,0,472,29],[34,0,472,30],[40,0,472,36],[42,0,472,38],[62,0,472,58],[63,0,472,59],[64,0,472,60],[68,0,472,64]],[[8,0,473,6],[21,0,473,19]],[[8,0,474,6],[12,0,474,10],[13,0,474,11],[14,0,474,12],[15,0,474,13],[17,0,475,6],[20,0,475,9],[21,0,475,10],[22,0,475,11],[29,0,475,21],[31,0,475,23],[33,0,475,25],[34,0,475,26],[38,0,475,30],[39,0,475,31],[58,0,475,50],[59,0,475,51],[66,0,475,58],[68,0,475,60],[88,0,475,80],[89,0,475,81],[90,0,475,82],[92,0,476,6],[101,0,476,15],[102,0,476,16],[103,0,476,17],[110,0,476,27],[112,0,476,29],[114,0,476,31]],[[12,0,477,8],[19,0,477,15],[23,0,477,19],[24,0,477,20],[28,0,477,24],[29,0,477,25],[36,0,477,32],[38,0,477,34],[51,0,477,47],[53,0,477,49],[73,0,477,69],[75,0,477,71],[80,0,477,76],[82,0,477,78],[87,0,477,83],[88,0,477,84],[89,0,477,85],[93,0,477,89],[94,0,477,91],[120,0,477,117],[121,0,478,10],[129,0,478,18],[130,0,478,19],[137,0,478,26],[138,0,478,27],[140,0,478,29]],[[16,0,479,12],[23,0,479,19],[27,0,479,23],[28,0,479,24],[35,0,479,31],[36,0,479,32],[42,0,479,38],[44,0,479,40],[64,0,479,60],[65,0,479,61],[66,0,479,62],[70,0,479,66],[71,0,480,14],[74,0,480,17],[75,0,480,18],[78,0,480,21],[80,0,480,23],[81,0,480,24],[88,0,480,31],[89,0,480,32],[90,0,480,33],[113,0,480,56],[114,0,481,13],[115,0,481,14]],[[12,0,482,10],[13,0,482,11],[14,0,482,12],[15,0,483,9],[16,0,483,10]],[[8,0,484,6],[9,0,484,7],[10,0,484,8],[12,0,485,6],[22,0,485,16],[23,0,485,17],[26,0,485,20],[27,0,485,21],[29,0,485,23]],[[12,0,486,8],[19,0,486,15],[20,0,486,16],[23,0,486,19],[24,0,486,20],[51,0,486,47],[54,0,486,50],[57,0,486,53],[58,0,486,54],[59,0,486,55]],[[12,0,487,8],[18,0,487,14],[21,0,487,17],[22,0,487,18]],[[8,0,488,6],[9,0,488,7],[10,0,488,8],[12,0,489,6],[16,0,489,10],[17,0,489,11],[18,0,489,12],[19,0,489,13],[20,0,490,5],[21,0,490,6]],[[4,0,492,2],[5,0,492,3]],[[4,0,494,2],[28,0,494,26]],[[4,0,497,2]],[],[],[],[],[],[],[],[],[[7,0,506,5]],[[4,0,507,9],[20,0,507,25],[21,0,507,55],[26,0,507,80],[28,0,508,55],[37,0,508,72],[39,0,509,55],[46,0,509,70],[48,0,510,55],[55,0,510,62],[58,0,510,65],[63,0,510,70]],[[8,0,512,4],[12,0,512,8],[21,0,512,17],[25,0,512,21],[29,0,512,25],[33,0,512,29],[40,0,512,36],[44,0,512,40],[48,0,512,44],[52,0,512,48],[61,0,512,57],[66,0,512,62],[73,0,512,69],[77,0,512,73],[82,0,512,78],[83,0,512,79],[89,0,512,85],[93,0,512,89],[94,0,512,90],[96,0,512,92],[98,0,512,94],[130,0,512,126]],[[12,0,513,6],[19,0,513,13],[21,0,513,15],[23,0,513,17],[24,0,513,18]],[[9,0,514,5]],[[8,0,516,4],[12,0,516,8],[17,0,516,13],[18,0,516,14],[19,0,516,15],[20,0,516,16],[22,0,516,18],[39,0,516,35],[43,0,516,39],[47,0,516,43],[49,0,516,45]],[[12,0,517,6],[18,0,517,12],[23,0,517,17],[26,0,517,39]],[[16,0,518,8],[20,0,518,12],[22,0,518,14],[75,0,518,67]],[[16,0,519,8],[20,0,519,12],[22,0,519,14],[33,0,519,25]],[[16,0,520,8],[23,0,520,15],[25,0,520,17],[124,0,520,116]],[[13,0,521,7],[14,0,521,8]],[[12,0,522,6],[18,0,522,12],[23,0,522,17],[24,0,522,18]],[[9,0,523,5]],[[8,0,525,4],[14,0,525,10],[19,0,525,15],[22,0,525,18],[26,0,525,22],[27,0,525,23],[60,0,525,56],[61,0,525,57],[66,0,525,62],[68,0,525,64],[77,0,525,73],[79,0,525,75],[86,0,525,82],[88,0,525,84],[95,0,525,91],[96,0,525,92],[97,0,525,93]],[[8,0,527,4],[15,0,527,11],[19,0,527,15],[20,0,527,16],[32,0,527,28],[33,0,527,29],[38,0,527,34],[39,0,527,35],[40,0,527,36]],[[4,0,528,2],[5,0,528,3]],[[4,0,530,2]],[],[],[],[],[],[],[],[],[[7,0,539,5]],[[4,0,540,12],[37,0,540,45],[38,0,540,75],[43,0,540,100],[45,0,541,75],[54,0,541,92],[56,0,542,75],[63,0,542,90],[65,0,543,75],[72,0,543,82],[75,0,543,85],[80,0,543,90]],[[8,0,545,4],[14,0,545,10],[25,0,545,21],[28,0,545,24],[32,0,545,28],[33,0,545,29],[36,0,545,32],[37,0,545,33],[46,0,545,42],[48,0,545,44],[55,0,545,51],[56,0,545,52],[57,0,545,53]],[[8,0,546,4],[14,0,546,10],[19,0,546,15],[22,0,546,30],[32,0,546,40],[33,0,546,41],[37,0,546,45],[38,0,546,46],[40,0,546,48],[41,0,546,49],[50,0,546,58],[51,0,546,59],[52,0,546,60]],[[8,0,548,4],[12,0,548,8],[21,0,548,17],[25,0,548,21],[29,0,548,25],[33,0,548,29],[40,0,548,36],[44,0,548,40],[48,0,548,44],[52,0,548,48],[61,0,548,57],[66,0,548,62],[73,0,548,69],[75,0,548,71],[77,0,548,73],[109,0,548,105]],[[12,0,549,6],[19,0,549,13],[24,0,549,18],[25,0,549,19]],[[9,0,550,5]],[[8,0,552,4],[12,0,552,8],[21,0,552,37],[22,0,552,38]],[[8,0,554,4],[12,0,554,8],[19,0,554,15],[21,0,554,17]],[[12,0,555,6],[21,0,555,15],[24,0,555,18],[30,0,555,24],[31,0,555,25],[37,0,555,31],[38,0,555,32],[40,0,555,34],[42,0,555,36],[47,0,555,41],[48,0,555,42],[49,0,555,43]],[[9,0,556,5]],[[13,0,556,11]],[[12,0,557,6],[21,0,557,15],[24,0,557,18],[29,0,557,23],[30,0,557,24]],[[9,0,558,5]],[[8,0,560,4],[23,0,560,19],[24,0,560,23],[33,0,560,32],[35,0,560,34],[44,0,560,43],[46,0,560,45],[53,0,560,52],[54,0,560,53],[55,0,560,54]],[[8,0,562,4],[14,0,562,10],[31,0,562,27],[34,0,562,50],[43,0,562,59],[44,0,562,60],[49,0,562,65],[50,0,562,66],[61,0,562,77],[62,0,562,78],[63,0,562,79]],[[8,0,564,4],[12,0,564,8],[13,0,564,9],[16,0,564,12],[27,0,564,23],[28,0,564,24]],[[8,0,565,4],[13,0,565,9],[19,0,565,15],[23,0,565,19],[27,0,565,23],[44,0,565,40],[46,0,565,42]],[[12,0,566,6],[16,0,566,10],[17,0,566,11],[24,0,566,18],[26,0,566,20],[28,0,566,22],[103,0,566,97]],[[16,0,567,8],[20,0,567,12],[21,0,567,13],[26,0,567,18],[29,0,567,21],[30,0,567,22],[31,0,567,23]],[[13,0,568,7]],[[12,0,569,6],[18,0,569,12],[21,0,569,15],[24,0,569,18],[38,0,569,32],[39,0,569,33],[43,0,569,37],[44,0,569,38],[61,0,569,55],[62,0,569,56],[66,0,569,60],[68,0,569,62],[72,0,569,66],[73,0,569,67],[75,0,569,69],[76,0,569,70],[85,0,569,79],[86,0,569,101],[87,0,569,102]],[[12,0,570,6],[17,0,570,11],[18,0,570,12],[24,0,570,18],[25,0,570,19],[28,0,570,22],[30,0,570,24],[32,0,570,25],[37,0,570,30],[39,0,570,32],[40,0,570,33],[42,0,570,34],[43,0,570,35],[44,0,570,36]],[[12,0,571,6],[13,0,571,7],[15,0,571,9],[16,0,571,10]],[[9,0,572,5]],[[8,0,574,4],[15,0,574,11],[20,0,574,16],[21,0,574,17]],[[4,0,575,2],[5,0,575,3]],[[4,0,577,2]],[],[],[],[],[],[],[[7,0,584,5]],[[4,0,585,9],[29,0,585,34],[30,0,585,64],[35,0,585,89],[37,0,586,64],[50,0,586,85],[52,0,587,64],[75,0,587,109],[77,0,587,111],[79,0,588,64],[89,0,588,83],[94,0,588,88]],[[8,0,590,4],[12,0,590,8],[21,0,590,37],[22,0,590,38]],[[8,0,592,4],[12,0,592,8],[19,0,592,15],[21,0,592,17]],[[12,0,593,6],[21,0,593,15],[24,0,593,18],[30,0,593,24],[31,0,593,25],[37,0,593,31],[38,0,593,32],[40,0,593,34],[42,0,593,36],[47,0,593,41],[48,0,593,42],[49,0,593,43]],[[9,0,594,5]],[[13,0,594,11]],[[12,0,595,6],[21,0,595,15],[24,0,595,18],[29,0,595,23],[30,0,595,24]],[[9,0,596,5]],[[8,0,598,4],[14,0,598,10],[26,0,598,22],[29,0,598,25],[38,0,598,34],[39,0,598,35],[52,0,598,48],[53,0,598,49],[54,0,598,50]],[[8,0,600,4],[82,0,600,78]],[[8,0,601,4],[15,0,601,11],[19,0,601,15],[20,0,601,16],[35,0,601,31],[36,0,601,32],[48,0,601,44],[49,0,601,45],[66,0,601,62],[67,0,601,63],[70,0,601,66],[72,0,601,68],[92,0,601,88],[93,0,601,89],[94,0,601,90],[98,0,601,94],[99,0,602,6],[102,0,602,9],[103,0,602,10],[104,0,602,11],[109,0,602,16],[111,0,602,18],[113,0,602,20]],[[12,0,603,8],[101,0,603,97]],[[12,0,604,8],[21,0,604,17],[22,0,604,18],[26,0,604,22],[27,0,604,23],[31,0,604,27],[32,0,604,28],[34,0,604,30],[35,0,604,31],[39,0,604,35],[40,0,604,36],[45,0,604,41],[46,0,604,42],[47,0,604,43],[48,0,604,44],[85,0,604,81]],[[12,0,605,8],[21,0,605,17],[22,0,605,18],[28,0,605,24],[29,0,605,25],[42,0,605,38],[44,0,605,40],[45,0,605,41],[46,0,605,42],[47,0,605,43]],[[12,0,607,8],[16,0,607,12],[17,0,607,13],[54,0,607,50],[55,0,607,54],[64,0,607,63],[66,0,607,65],[71,0,607,70],[72,0,607,71],[73,0,607,72]],[[12,0,609,8],[19,0,609,15],[24,0,609,20],[25,0,609,21]],[[8,0,610,6],[9,0,610,7],[10,0,610,8],[12,0,612,6],[21,0,612,15],[22,0,612,16],[23,0,612,17],[28,0,612,22],[30,0,612,24],[32,0,612,26],[33,0,612,27],[37,0,612,31],[38,0,612,32],[50,0,612,44],[51,0,612,45],[56,0,612,50],[57,0,612,51],[58,0,612,52],[59,0,613,5],[60,0,613,6]],[[4,0,614,2],[5,0,614,3]],[[4,0,616,2]],[],[],[],[],[],[],[[7,0,623,5]],[[4,0,624,9],[30,0,624,35],[31,0,624,65],[36,0,624,90],[38,0,625,65],[53,0,625,90],[55,0,626,65],[78,0,626,110],[80,0,626,112],[82,0,627,65],[92,0,627,84],[97,0,627,89]],[[8,0,629,4],[12,0,629,8],[21,0,629,37],[22,0,629,38]],[[8,0,631,4],[12,0,631,8],[19,0,631,15],[21,0,631,17]],[[12,0,632,6],[21,0,632,15],[24,0,632,18],[30,0,632,24],[31,0,632,25],[37,0,632,31],[38,0,632,32],[40,0,632,34],[42,0,632,36],[47,0,632,41],[48,0,632,42],[49,0,632,43]],[[9,0,633,5]],[[13,0,633,11]],[[12,0,634,6],[21,0,634,15],[24,0,634,18],[29,0,634,23],[30,0,634,24]],[[9,0,635,5]],[[8,0,637,4],[17,0,637,13],[18,0,637,14],[22,0,637,18],[23,0,637,19],[27,0,637,23],[28,0,637,24],[30,0,637,26],[31,0,637,27],[35,0,637,31],[36,0,637,32],[41,0,637,37],[42,0,637,38],[43,0,637,39],[44,0,637,40],[81,0,637,77]],[[8,0,639,4],[14,0,639,10],[27,0,639,23],[30,0,639,26],[39,0,639,35],[40,0,639,36],[46,0,639,42],[47,0,639,43],[48,0,639,44],[52,0,639,48],[54,0,639,50],[55,0,639,51],[57,0,639,53],[59,0,639,55]],[[12,0,640,6],[19,0,640,13],[34,0,640,28],[35,0,640,29],[44,0,640,38],[45,0,640,39],[47,0,640,41],[48,0,640,42],[50,0,640,44],[51,0,640,45],[53,0,640,47],[58,0,640,52],[59,0,640,53],[60,0,640,54],[65,0,640,59],[66,0,640,60],[67,0,640,61],[68,0,640,62]],[[8,0,641,4],[9,0,641,5],[10,0,641,6],[11,0,641,7]],[[8,0,643,4],[62,0,643,58]],[[8,0,644,4],[52,0,644,48]],[[8,0,645,4],[23,0,645,19],[24,0,645,20],[28,0,645,24],[30,0,645,26],[31,0,645,27]],[[8,0,646,4],[13,0,646,9],[17,0,646,13],[18,0,646,14],[21,0,646,17],[36,0,646,32],[37,0,646,33],[43,0,646,39],[46,0,646,42],[47,0,646,43],[49,0,646,45],[50,0,646,46],[54,0,646,50],[55,0,646,51],[57,0,646,53],[58,0,646,54],[60,0,646,56],[62,0,646,58]],[[12,0,647,6],[21,0,647,15],[22,0,647,16],[28,0,647,22],[29,0,647,23],[44,0,647,38],[45,0,647,39],[46,0,647,40],[47,0,647,41],[49,0,647,43],[50,0,647,44],[51,0,647,45],[52,0,647,46]],[[9,0,648,5]],[[8,0,650,4],[14,0,650,10],[25,0,650,21],[28,0,650,59],[30,0,650,61],[31,0,650,62]],[[8,0,652,4],[91,0,652,87]],[[8,0,653,4],[21,0,653,17],[22,0,653,18],[29,0,653,25],[30,0,653,26],[42,0,653,38],[43,0,653,39],[45,0,653,41]],[[12,0,655,6],[18,0,655,12],[22,0,655,16],[25,0,655,19],[29,0,655,23],[30,0,655,24],[56,0,655,50],[57,0,655,51],[69,0,655,63],[70,0,655,64],[87,0,655,81],[88,0,655,82],[91,0,655,85],[93,0,655,87],[113,0,655,107],[114,0,655,108],[115,0,655,109],[119,0,655,113],[120,0,656,8],[124,0,656,12],[125,0,656,13],[126,0,656,14],[127,0,656,15],[128,0,657,7],[129,0,657,8]],[[12,0,658,6],[23,0,658,17],[24,0,658,18],[28,0,658,22],[29,0,658,23],[33,0,658,27],[34,0,658,28],[35,0,658,29]],[[8,0,659,4],[9,0,659,5],[10,0,659,6],[11,0,659,7]],[[8,0,662,4],[15,0,662,11],[23,0,662,19],[24,0,662,20],[35,0,662,31],[36,0,662,32],[37,0,662,33],[41,0,662,37],[42,0,663,6],[46,0,663,10],[47,0,663,11],[48,0,663,12],[49,0,663,13],[51,0,664,6],[54,0,664,9],[55,0,664,10],[56,0,664,11],[69,0,664,24],[71,0,664,26],[73,0,664,28]],[[12,0,665,8],[78,0,665,74]],[[12,0,666,8],[16,0,666,12],[23,0,666,19],[26,0,666,43],[28,0,666,45],[29,0,666,46]],[[12,0,668,8],[25,0,668,21],[26,0,668,22],[33,0,668,29],[34,0,668,30],[38,0,668,34],[39,0,668,35],[41,0,668,37]],[[16,0,669,10],[23,0,669,17],[26,0,669,20],[33,0,669,27],[34,0,669,28],[40,0,669,34],[41,0,669,35],[45,0,669,39],[46,0,669,40],[47,0,669,41]],[[12,0,670,8],[13,0,670,9],[14,0,670,10],[15,0,670,11]],[[12,0,672,8],[19,0,672,15],[26,0,672,22],[27,0,672,23]],[[8,0,673,6],[9,0,673,7],[10,0,673,8],[12,0,674,6],[15,0,674,9],[16,0,674,10],[17,0,674,11],[24,0,674,53],[26,0,674,55],[28,0,674,57],[29,0,674,58],[33,0,674,62],[34,0,674,63],[62,0,674,91],[63,0,674,92],[70,0,674,99],[71,0,674,100],[72,0,674,101],[74,0,675,6],[77,0,675,9],[78,0,675,10],[79,0,675,11],[84,0,675,28],[86,0,675,30],[88,0,675,32],[89,0,675,33],[93,0,675,37],[94,0,675,38],[131,0,675,75],[132,0,675,79],[141,0,675,88],[143,0,675,90],[148,0,675,95],[149,0,675,96],[150,0,675,97],[152,0,676,6],[161,0,676,15],[162,0,676,16],[163,0,676,17],[168,0,676,22],[170,0,676,24],[172,0,676,26],[173,0,676,27],[177,0,676,31],[178,0,676,32],[190,0,676,44],[191,0,676,45],[196,0,676,50],[197,0,676,51],[198,0,676,52],[199,0,677,5],[200,0,677,6]],[[4,0,678,2],[5,0,678,3]],[[4,0,680,2]],[],[],[],[],[],[],[],[[7,0,688,5]],[[4,0,689,12],[41,0,689,49],[42,0,690,4],[47,0,690,29],[49,0,691,4],[57,0,691,24],[67,0,691,34],[68,0,691,35],[72,0,691,39],[73,0,691,40],[75,0,691,42],[76,0,691,43],[85,0,691,52],[86,0,691,53]],[[8,0,694,4],[13,0,694,9],[14,0,694,10],[21,0,694,17],[22,0,694,18],[23,0,694,19],[27,0,694,23],[29,0,694,25],[34,0,694,30],[36,0,694,32],[38,0,694,34]],[[12,0,695,6],[16,0,695,10],[20,0,695,14],[21,0,695,15],[26,0,695,20],[31,0,695,25],[36,0,695,30],[38,0,695,32]],[[16,0,696,8],[20,0,696,12],[21,0,696,13],[26,0,696,18],[29,0,696,21],[34,0,696,26],[35,0,696,27],[36,0,696,28],[111,0,696,103]],[[16,0,697,8],[22,0,697,14],[25,0,697,17],[28,0,697,20],[42,0,697,34],[43,0,697,35],[47,0,697,39],[48,0,697,40],[65,0,697,57],[66,0,697,58],[70,0,697,62],[72,0,697,64],[76,0,697,68],[77,0,697,69],[79,0,697,71],[80,0,697,72],[89,0,697,81],[90,0,697,103],[91,0,697,104]],[[16,0,698,8],[21,0,698,13],[22,0,698,14],[28,0,698,20],[29,0,698,21],[32,0,698,24],[34,0,698,26],[36,0,698,27],[41,0,698,32],[43,0,698,33],[44,0,698,34],[45,0,698,35]],[[13,0,699,7]],[[8,0,700,4],[9,0,700,5],[10,0,700,6],[11,0,700,7]],[[8,0,702,4],[15,0,702,11],[20,0,702,16],[21,0,702,17]],[[4,0,703,2],[5,0,703,3]],[[4,0,705,9],[29,0,705,34],[30,0,706,4],[43,0,706,37],[45,0,707,4],[57,0,707,36],[59,0,708,4],[72,0,708,25],[74,0,709,4],[86,0,709,24],[88,0,710,4],[104,0,710,28],[106,0,711,4],[137,0,711,60],[139,0,712,4],[170,0,712,35],[173,0,712,38],[177,0,712,42],[179,0,713,4],[186,0,713,11],[189,0,713,14],[194,0,713,19]],[[8,0,715,4],[14,0,715,10],[19,0,715,15],[22,0,715,30],[26,0,715,34],[27,0,715,35],[64,0,715,72],[65,0,715,73],[78,0,715,86],[80,0,716,6],[92,0,716,18],[94,0,717,6],[107,0,717,19],[109,0,718,6],[121,0,718,18],[123,0,719,6],[139,0,719,22],[141,0,720,6],[172,0,720,37],[174,0,721,6],[205,0,721,37],[207,0,722,6],[214,0,722,13],[215,0,722,14],[216,0,722,15]],[[8,0,724,4],[15,0,724,11],[19,0,724,15],[20,0,724,16],[32,0,724,28],[33,0,724,29],[38,0,724,34],[39,0,724,35],[40,0,724,36]],[[4,0,725,2],[5,0,725,3]],[[4,0,728,2],[43,0,728,41]],[[4,0,730,2]],[],[],[],[],[[7,0,735,5]],[[4,0,736,9],[11,0,736,16],[12,0,736,17],[18,0,736,42],[20,0,736,44],[43,0,736,89],[45,0,736,91]],[[8,0,738,4],[12,0,738,8],[32,0,738,28],[36,0,738,32],[40,0,738,36],[44,0,738,40],[64,0,738,60],[65,0,738,61],[71,0,738,67],[76,0,738,72],[77,0,738,73],[79,0,738,75]],[[12,0,739,6],[54,0,739,48]],[[12,0,740,6],[19,0,740,13],[23,0,740,17],[24,0,740,18],[26,0,740,20],[27,0,740,21],[33,0,740,27],[34,0,740,28],[40,0,740,34],[41,0,740,35],[42,0,740,36]],[[9,0,741,5]],[[8,0,743,4],[15,0,743,11],[19,0,743,15],[20,0,743,16],[46,0,743,42],[47,0,743,43],[53,0,743,49],[55,0,743,51],[75,0,743,71],[76,0,743,72],[77,0,743,73],[81,0,743,77],[82,0,744,6],[91,0,744,15],[92,0,744,16],[93,0,744,17],[103,0,744,62],[105,0,744,64],[107,0,744,66],[108,0,744,67],[112,0,744,71],[113,0,744,72],[134,0,744,93],[135,0,744,94],[145,0,744,104],[146,0,744,105],[147,0,744,106],[148,0,749,5],[149,0,749,6]],[[4,0,750,2],[5,0,750,3]],[[4,0,752,2]],[],[],[],[],[],[[7,0,758,5]],[[4,0,759,9],[19,0,759,24],[20,0,759,25],[26,0,759,50],[28,0,760,25],[51,0,760,70],[53,0,760,72],[55,0,761,25],[63,0,761,45],[73,0,761,55],[74,0,761,56],[78,0,761,60],[79,0,761,61],[81,0,761,63],[82,0,761,64],[91,0,761,73],[92,0,761,74]],[[8,0,763,4],[12,0,763,8],[32,0,763,28],[36,0,763,32],[40,0,763,36],[44,0,763,40],[64,0,763,60],[65,0,763,61],[71,0,763,67],[76,0,763,72],[77,0,763,73],[79,0,763,75]],[[12,0,764,6],[54,0,764,48]],[[12,0,765,6],[17,0,765,11],[18,0,765,12],[24,0,765,18],[25,0,765,19],[31,0,765,25],[32,0,765,26],[33,0,765,27]],[[12,0,766,6],[19,0,766,13],[21,0,766,15],[22,0,766,16],[27,0,766,21],[28,0,766,22],[29,0,766,23]],[[9,0,767,5]],[[8,0,769,4],[15,0,769,11],[19,0,769,15],[20,0,769,16],[46,0,769,42],[47,0,769,43],[53,0,769,49],[55,0,769,51],[75,0,769,71],[76,0,769,72],[77,0,769,73],[81,0,769,77],[82,0,770,6],[85,0,770,9],[86,0,770,10],[87,0,770,11],[94,0,770,53],[96,0,770,55],[98,0,770,57],[99,0,770,58],[103,0,770,62],[104,0,770,63],[132,0,770,91],[133,0,770,92],[140,0,770,99],[141,0,770,100],[142,0,770,101],[144,0,771,6],[148,0,771,10],[149,0,771,11],[150,0,771,12],[151,0,771,13],[152,0,772,5],[153,0,772,6]],[[4,0,773,2],[5,0,773,3]],[[4,0,775,9],[26,0,775,31],[27,0,775,32],[35,0,775,50]],[[8,0,776,4],[14,0,776,10],[21,0,776,17],[24,0,777,6],[32,0,777,14],[33,0,777,15],[36,0,777,18],[37,0,777,19],[41,0,777,23],[42,0,777,24],[44,0,777,26],[45,0,777,27],[59,0,777,41],[60,0,777,42],[64,0,777,46],[66,0,777,48],[70,0,777,52],[71,0,777,53],[73,0,777,55],[74,0,777,56],[83,0,777,65],[84,0,777,87],[85,0,777,88],[86,0,777,89]],[[8,0,779,4],[15,0,779,11],[19,0,779,15],[20,0,779,16],[41,0,779,37],[42,0,779,38],[49,0,779,45],[50,0,779,46],[51,0,779,47]],[[4,0,780,2],[5,0,780,3]],[[4,0,782,2]],[],[],[],[],[[7,0,787,5]],[[4,0,788,9],[19,0,788,24],[20,0,788,25],[27,0,788,53],[29,0,788,55],[52,0,788,100],[54,0,788,102]],[[8,0,790,4],[12,0,790,8],[32,0,790,28],[36,0,790,32],[40,0,790,36],[44,0,790,40],[64,0,790,60],[65,0,790,61],[71,0,790,67],[76,0,790,72],[77,0,790,73],[79,0,790,75]],[[12,0,791,6],[19,0,791,13],[23,0,791,17],[24,0,791,18],[45,0,791,39],[46,0,791,40],[53,0,791,47],[54,0,791,48],[55,0,791,49]],[[9,0,792,5]],[[8,0,794,4],[14,0,794,10],[26,0,794,22],[29,0,794,49],[31,0,794,51],[32,0,794,52]],[[8,0,796,4],[15,0,796,11],[16,0,796,12],[23,0,796,19],[24,0,796,20],[30,0,796,26],[31,0,796,27],[33,0,796,29]],[[12,0,797,6],[18,0,797,12],[26,0,797,20],[29,0,797,23],[33,0,797,27],[34,0,797,28],[60,0,797,54],[61,0,797,55],[67,0,797,61],[69,0,797,63],[89,0,797,83],[90,0,797,84],[91,0,797,85]],[[12,0,798,6],[24,0,798,18],[25,0,798,19],[29,0,798,23],[30,0,798,24],[38,0,798,32],[39,0,798,33],[40,0,798,34]],[[8,0,799,4],[9,0,799,5],[10,0,799,6],[11,0,799,7]],[[8,0,801,4],[15,0,801,11],[28,0,801,24],[29,0,801,25],[41,0,801,37],[42,0,801,38],[43,0,801,39],[47,0,801,43]],[[8,0,802,6],[44,0,802,42]],[[8,0,803,6],[11,0,803,9],[12,0,803,10],[13,0,803,11],[18,0,803,23],[20,0,803,25],[22,0,803,27]],[[12,0,804,8],[16,0,804,12],[30,0,804,26],[33,0,804,50],[35,0,804,52],[36,0,804,53]],[[12,0,805,8],[17,0,805,13],[18,0,805,14],[25,0,805,21],[26,0,805,22],[30,0,805,26],[31,0,805,27],[33,0,805,29]],[[16,0,806,10],[30,0,806,24],[33,0,806,27],[47,0,806,41],[48,0,806,42],[54,0,806,48],[55,0,806,49],[59,0,806,53],[60,0,806,54],[61,0,806,55]],[[12,0,807,8],[13,0,807,9],[14,0,807,10],[15,0,807,11]],[[12,0,808,8],[19,0,808,15],[33,0,808,29],[34,0,808,30]],[[8,0,809,6],[9,0,809,7],[10,0,809,8]],[[8,0,810,6],[44,0,810,42]],[[8,0,811,6],[17,0,811,15],[18,0,811,16],[19,0,811,17],[29,0,811,48],[31,0,811,50],[33,0,811,52],[34,0,811,53],[38,0,811,57],[39,0,811,58],[60,0,811,79],[61,0,811,80],[71,0,811,90],[72,0,811,91],[73,0,811,92],[74,0,816,5],[75,0,816,6]],[[4,0,817,2],[5,0,817,3]],[[4,0,819,2]],[],[],[],[],[],[],[[7,0,826,5]],[[4,0,827,9],[21,0,827,26],[22,0,827,27],[35,0,827,61],[37,0,827,63],[60,0,827,108],[62,0,827,110]],[[8,0,828,4],[15,0,828,11],[19,0,828,15],[20,0,828,16],[59,0,828,55],[60,0,828,56],[73,0,828,69],[75,0,828,71],[95,0,828,91],[96,0,828,92],[97,0,828,93],[101,0,828,97],[102,0,829,6],[111,0,829,15],[112,0,829,16],[119,0,829,23],[120,0,829,24],[122,0,829,26],[123,0,829,27],[127,0,829,31],[128,0,829,32],[143,0,829,47],[144,0,829,48],[151,0,829,55],[152,0,829,56],[153,0,829,57],[154,0,830,5],[155,0,830,6],[159,0,830,10],[160,0,831,6],[164,0,831,10],[165,0,831,11],[166,0,831,12],[167,0,831,13],[168,0,832,5],[169,0,832,6]],[[4,0,833,2],[5,0,833,3]],[[4,0,836,2]],[],[],[],[],[],[[7,0,842,5]],[[4,0,843,9],[20,0,843,25],[21,0,843,26],[28,0,843,41],[30,0,843,43],[53,0,843,88],[55,0,843,90]],[[8,0,844,4],[14,0,844,10],[20,0,844,16],[23,0,844,19],[37,0,844,33],[38,0,844,34],[45,0,844,41],[47,0,844,43],[51,0,844,47],[52,0,844,48],[54,0,844,50],[55,0,844,51],[64,0,844,60],[65,0,844,82],[66,0,844,83]],[[8,0,845,4],[15,0,845,11],[19,0,845,15],[20,0,845,16],[27,0,845,23],[28,0,845,24],[34,0,845,30],[36,0,845,32],[56,0,845,52],[57,0,845,53],[58,0,845,54]],[[4,0,846,2],[5,0,846,3]],[[4,0,848,2]],[],[],[],[],[],[],[[7,0,855,5]],[[4,0,856,9],[15,0,856,20],[16,0,856,24],[20,0,856,41],[22,0,856,43],[45,0,856,88],[47,0,856,90]],[[8,0,858,4],[14,0,858,10],[21,0,858,17],[24,0,858,20],[28,0,858,24],[29,0,858,25],[58,0,858,54],[59,0,858,55],[63,0,858,59],[65,0,858,61],[85,0,858,81],[86,0,858,82],[87,0,858,83]],[[8,0,860,4],[15,0,860,11],[19,0,860,15],[20,0,860,16],[41,0,860,37],[42,0,860,38],[49,0,860,45],[50,0,860,46],[51,0,860,47],[55,0,860,51]],[[8,0,861,6],[105,0,861,103]],[[8,0,862,6],[73,0,862,71]],[[8,0,863,6],[32,0,863,30]],[[8,0,864,6],[14,0,864,12]],[[8,0,865,6],[12,0,865,10],[13,0,865,11],[14,0,865,12],[15,0,865,13],[16,0,866,5],[17,0,866,6]],[[4,0,867,2],[5,0,867,3]],[[4,0,892,9],[23,0,892,28],[24,0,892,32],[28,0,892,80],[30,0,893,32],[53,0,893,78],[55,0,893,80],[57,0,894,32],[84,0,894,69],[86,0,894,71]],[[8,0,896,4],[99,0,896,95]],[[8,0,897,4],[40,0,897,36]],[[8,0,899,4],[12,0,899,8],[17,0,899,13],[18,0,899,14],[25,0,899,21],[26,0,899,22],[30,0,899,26],[31,0,899,27],[33,0,899,29]],[[12,0,901,6],[18,0,901,12],[28,0,901,22],[31,0,901,35],[33,0,901,37],[34,0,901,38]],[[12,0,903,6],[16,0,903,10],[17,0,903,11],[24,0,903,18],[25,0,903,19],[26,0,903,20],[27,0,903,21],[29,0,903,23]],[[16,0,904,8],[26,0,904,18],[27,0,904,19],[31,0,904,23],[32,0,905,10],[36,0,905,14],[37,0,905,15],[68,0,905,46],[69,0,905,47],[70,0,905,48],[72,0,905,50],[92,0,905,70],[94,0,905,72],[118,0,905,96],[119,0,905,102],[120,0,906,9],[121,0,906,10]],[[12,0,907,6],[13,0,907,7],[14,0,907,8],[15,0,907,9]],[[12,0,909,6],[19,0,909,13],[29,0,909,23],[30,0,909,24]],[[9,0,911,5]],[[13,0,911,11]],[[12,0,912,6],[19,0,912,13],[23,0,912,17],[24,0,912,18],[55,0,912,49],[56,0,912,50],[60,0,912,54],[62,0,912,56],[82,0,912,76],[84,0,912,78],[108,0,912,102],[109,0,912,108],[110,0,912,109]],[[9,0,913,5]],[[4,0,914,2],[5,0,914,3]],[[4,0,917,2],[54,0,917,52]],[[4,0,919,2]],[],[],[],[],[],[],[],[[7,0,927,5]],[[4,0,928,12],[23,0,928,31],[24,0,928,35],[30,0,928,65],[32,0,929,35],[51,0,929,73],[68,0,929,90],[69,0,929,91],[88,0,929,110]],[[8,0,932,4],[15,0,932,11],[19,0,932,15],[20,0,932,16],[22,0,932,18],[23,0,932,19],[26,0,932,22],[27,0,932,23],[33,0,932,29],[34,0,932,30],[35,0,932,31],[39,0,932,35],[40,0,933,6],[43,0,933,9],[44,0,933,10],[45,0,933,11],[53,0,933,37],[55,0,933,39],[57,0,933,41]],[[12,0,934,8],[16,0,934,12],[17,0,934,13],[25,0,934,21],[26,0,934,22],[32,0,934,28],[34,0,934,30],[38,0,934,34],[54,0,934,50],[59,0,934,55],[76,0,934,72],[77,0,934,73],[96,0,934,92],[98,0,934,94]],[[16,0,935,10],[22,0,935,16],[27,0,935,21],[30,0,935,43]],[[20,0,936,12],[24,0,936,16],[26,0,936,18],[44,0,936,36]],[[20,0,937,12],[24,0,937,16],[26,0,937,18],[37,0,937,29]],[[20,0,938,12],[27,0,938,19],[29,0,938,21],[100,0,938,92]],[[20,0,939,12],[26,0,939,18]],[[17,0,940,11],[18,0,940,12]],[[16,0,941,10],[22,0,941,16],[27,0,941,21],[28,0,941,22]],[[13,0,942,9]],[[8,0,943,6],[9,0,943,7],[10,0,943,8],[12,0,945,6],[18,0,945,12],[19,0,945,13],[20,0,945,14],[28,0,945,40],[30,0,945,42],[32,0,945,44]],[[12,0,946,8],[19,0,946,15],[20,0,946,16],[21,0,946,17],[29,0,946,25],[30,0,946,26],[36,0,946,32],[38,0,946,34],[42,0,946,38],[58,0,946,54],[63,0,946,59],[80,0,946,76],[81,0,946,77],[87,0,946,83],[88,0,946,84],[89,0,946,85]],[[8,0,947,6],[9,0,947,7],[10,0,947,8],[12,0,949,6],[15,0,949,9],[16,0,949,10],[17,0,949,11],[25,0,949,37],[27,0,949,39],[29,0,949,41]],[[12,0,951,8],[19,0,951,15],[20,0,951,16],[23,0,951,19],[24,0,951,20],[32,0,951,28],[33,0,951,29],[39,0,951,35],[41,0,951,37],[42,0,951,38],[43,0,951,39]],[[12,0,953,8],[16,0,953,12],[24,0,953,20],[25,0,953,21],[31,0,953,27],[33,0,953,29],[37,0,953,33],[53,0,953,49],[58,0,953,54],[75,0,953,71],[76,0,953,72],[95,0,953,91],[97,0,953,93]],[[16,0,954,10],[22,0,954,16],[26,0,954,20],[29,0,954,23],[37,0,954,31],[38,0,954,32],[42,0,954,36],[44,0,954,43],[45,0,954,44]],[[16,0,956,10],[22,0,956,16],[39,0,956,33],[42,0,956,58]],[[20,0,957,12],[22,0,957,14],[24,0,957,16],[32,0,957,24],[33,0,957,25],[35,0,957,27]],[[20,0,958,12],[23,0,958,15],[25,0,958,17],[33,0,958,25],[34,0,958,26],[37,0,958,53]],[[20,0,959,12],[24,0,959,16],[26,0,959,18],[32,0,959,24],[33,0,959,25],[37,0,959,29]],[[20,0,960,12],[28,0,960,20],[30,0,960,22],[38,0,960,30],[39,0,960,31],[45,0,960,37],[47,0,960,39]],[[20,0,961,12],[36,0,961,28],[38,0,961,30],[46,0,961,38],[47,0,961,39],[55,0,961,47]],[[17,0,962,11],[18,0,962,12]],[[16,0,964,10],[23,0,964,17],[25,0,964,18],[28,0,964,21],[32,0,964,25],[34,0,964,27],[51,0,964,44],[53,0,964,60],[54,0,964,61]],[[13,0,966,9]],[[17,0,966,15],[21,0,966,19],[37,0,966,35],[42,0,966,40],[59,0,966,57],[60,0,966,58],[71,0,966,69],[73,0,966,71],[75,0,966,73],[98,0,966,96]],[[16,0,967,10],[23,0,967,17],[27,0,967,21],[28,0,967,22]],[[13,0,968,9]],[[12,0,969,8],[19,0,969,15],[23,0,969,19],[24,0,969,20]],[[8,0,970,6],[9,0,970,7],[10,0,970,8],[12,0,971,6],[15,0,971,9],[16,0,971,10],[17,0,971,11],[21,0,971,15],[23,0,971,17],[25,0,971,19]],[[12,0,972,8],[16,0,972,12],[20,0,972,16],[24,0,972,20],[28,0,972,24],[30,0,972,26]],[[16,0,973,10],[23,0,973,17],[45,0,973,39],[46,0,973,40],[50,0,973,60],[51,0,973,61],[52,0,973,62]],[[13,0,974,9]],[[17,0,974,15]],[[16,0,975,10],[23,0,975,17],[27,0,975,21],[28,0,975,22]],[[13,0,976,9]],[[8,0,977,6],[9,0,977,7],[10,0,977,8],[11,0,978,32],[12,0,978,33]],[[4,0,979,2],[5,0,979,3]],[[4,0,981,2]],[],[],[],[],[],[[7,0,987,5]],[[4,0,988,12],[30,0,988,38],[31,0,988,42],[37,0,988,58]],[[8,0,989,4]],[],[],[[11,0,992,7]],[[8,0,993,4],[15,0,993,11],[19,0,993,15],[20,0,993,16],[22,0,993,18],[23,0,993,19],[33,0,993,29],[34,0,993,30],[40,0,993,36],[41,0,993,37],[42,0,993,38],[46,0,993,42],[47,0,994,6],[50,0,994,9],[51,0,994,10],[52,0,994,11],[56,0,994,33],[58,0,994,35],[60,0,994,37]],[[12,0,995,8],[19,0,995,15],[23,0,995,19],[24,0,995,20],[28,0,995,24],[29,0,995,25],[32,0,995,28],[33,0,995,29],[41,0,995,37],[42,0,995,38],[44,0,995,40]],[[16,0,996,10],[22,0,996,16],[26,0,996,20],[29,0,996,23],[37,0,996,31],[38,0,996,32],[42,0,996,36],[44,0,996,43],[45,0,996,44]],[[16,0,998,10],[22,0,998,16],[24,0,998,18],[27,0,998,21],[35,0,998,29],[36,0,998,30],[38,0,998,32],[39,0,998,33]],[[16,0,999,10],[22,0,999,16],[25,0,999,19],[28,0,999,22],[36,0,999,30],[37,0,999,31],[40,0,999,58],[41,0,999,59]],[[16,0,1000,10],[22,0,1000,16],[26,0,1000,20],[29,0,1000,23],[32,0,1000,26],[33,0,1000,27],[37,0,1000,31],[38,0,1000,32]],[[16,0,1001,10],[22,0,1001,16],[38,0,1001,32],[41,0,1001,35],[49,0,1001,43],[50,0,1001,44],[58,0,1001,52],[59,0,1001,53]],[[16,0,1003,10],[22,0,1003,16],[39,0,1003,33],[42,0,1003,58]],[[20,0,1004,12],[22,0,1004,14]],[[20,0,1005,12],[24,0,1005,16]],[[20,0,1006,12],[23,0,1006,15]],[[20,0,1007,12],[36,0,1007,28]],[[20,0,1008,12],[28,0,1008,20],[30,0,1008,22],[34,0,1008,26]],[[17,0,1009,11],[18,0,1009,12]],[[16,0,1011,10],[23,0,1011,17],[25,0,1011,18],[28,0,1011,21],[32,0,1011,25],[34,0,1011,27],[51,0,1011,44],[53,0,1011,60],[54,0,1011,61]],[[12,0,1012,8],[13,0,1012,9],[14,0,1012,10],[15,0,1012,11]],[[8,0,1013,6],[9,0,1013,7],[10,0,1013,8],[12,0,1014,6],[15,0,1014,9],[16,0,1014,10],[17,0,1014,11],[22,0,1014,36],[24,0,1014,38],[26,0,1014,40],[27,0,1014,41],[32,0,1014,46],[33,0,1014,47],[36,0,1014,50],[37,0,1014,51],[41,0,1014,55],[42,0,1014,56],[44,0,1014,58]],[[12,0,1015,8],[34,0,1015,30],[35,0,1015,31],[39,0,1015,35],[40,0,1015,36],[41,0,1015,37]],[[12,0,1016,8],[19,0,1016,15],[23,0,1016,19],[24,0,1016,20]],[[8,0,1017,6],[9,0,1017,7],[10,0,1017,8],[11,0,1017,9],[12,0,1018,39],[13,0,1018,40]],[[4,0,1019,2],[5,0,1019,3]],[[4,0,1021,2]],[],[],[],[],[],[],[],[[7,0,1029,5]],[[4,0,1030,12],[28,0,1030,36],[29,0,1031,4],[33,0,1031,21],[35,0,1032,4],[58,0,1032,49],[60,0,1032,51]],[[8,0,1034,4],[12,0,1034,8],[16,0,1034,12],[20,0,1034,16],[24,0,1034,20],[26,0,1034,22]],[[12,0,1035,6],[19,0,1035,13],[21,0,1035,15],[22,0,1035,16],[23,0,1035,17],[27,0,1035,21],[28,0,1035,22],[29,0,1035,23],[30,0,1035,24]],[[9,0,1036,5]],[[8,0,1037,4],[12,0,1037,8],[32,0,1037,28],[33,0,1037,29],[39,0,1037,35],[43,0,1037,39],[44,0,1037,40],[46,0,1037,42]],[[12,0,1038,6],[19,0,1038,13],[21,0,1038,15],[22,0,1038,16],[23,0,1038,17],[27,0,1038,21],[28,0,1038,22],[29,0,1038,23],[30,0,1038,24]],[[9,0,1039,5]],[[8,0,1041,4],[14,0,1041,10],[33,0,1041,29],[36,0,1041,56],[38,0,1041,58],[39,0,1041,59]],[[8,0,1043,4],[91,0,1043,87]],[[8,0,1044,4],[28,0,1044,24],[29,0,1044,25],[36,0,1044,32],[37,0,1044,33],[55,0,1044,51],[56,0,1044,52],[58,0,1044,54]],[[12,0,1046,6],[18,0,1046,12],[32,0,1046,26],[35,0,1046,29],[39,0,1046,33],[53,0,1046,47],[54,0,1046,48],[70,0,1046,64],[71,0,1046,65],[75,0,1046,69],[76,0,1046,70],[93,0,1046,87],[94,0,1046,88],[97,0,1046,91],[99,0,1046,93],[117,0,1046,111],[118,0,1046,112],[122,0,1046,116],[123,0,1046,117],[124,0,1046,118],[125,0,1046,119]],[[12,0,1047,6],[16,0,1047,10],[34,0,1047,28],[35,0,1047,29],[51,0,1047,45],[53,0,1047,47]],[[16,0,1048,8],[30,0,1048,22],[31,0,1048,23],[47,0,1048,39],[50,0,1048,42],[68,0,1048,60],[69,0,1048,61],[85,0,1048,77],[86,0,1048,78]],[[16,0,1049,8],[100,0,1049,92]],[[13,0,1050,7]],[[12,0,1051,6],[48,0,1051,42]],[[12,0,1052,6],[98,0,1052,92]],[[12,0,1053,6],[16,0,1053,10]],[[12,0,1055,6],[18,0,1055,12],[36,0,1055,30],[39,0,1055,33],[43,0,1055,37],[44,0,1055,38],[70,0,1055,64],[71,0,1055,65],[85,0,1055,79],[86,0,1055,80],[91,0,1055,85],[92,0,1055,86],[93,0,1055,87],[97,0,1055,91]],[[12,0,1056,8],[115,0,1056,111]],[[12,0,1057,8],[54,0,1057,50]],[[12,0,1058,8],[40,0,1058,36]],[[12,0,1059,8],[44,0,1059,40]],[[12,0,1060,8],[58,0,1060,54]],[[12,0,1061,8],[77,0,1061,73]],[[12,0,1062,8],[20,0,1062,16],[21,0,1062,17],[22,0,1062,18],[27,0,1062,39],[29,0,1062,41],[31,0,1062,43]],[[16,0,1064,10],[20,0,1064,14],[21,0,1064,15],[39,0,1064,33],[40,0,1064,34],[54,0,1064,48],[56,0,1064,50]],[[20,0,1065,12],[27,0,1065,19],[29,0,1065,21],[30,0,1065,22],[35,0,1065,27],[36,0,1065,28],[37,0,1065,29]],[[17,0,1066,11]],[[16,0,1068,10],[22,0,1068,16],[34,0,1068,28],[37,0,1068,55],[39,0,1068,57],[40,0,1068,58]],[[16,0,1070,10],[21,0,1070,15],[24,0,1070,18],[29,0,1070,23],[30,0,1070,24],[36,0,1070,30],[37,0,1070,31],[38,0,1070,32],[39,0,1070,33],[41,0,1070,35],[42,0,1070,36],[43,0,1070,37],[47,0,1070,41],[51,0,1070,45],[52,0,1070,46],[53,0,1070,47],[54,0,1070,48],[83,0,1070,77]],[[16,0,1072,10],[21,0,1072,15],[22,0,1072,16],[29,0,1072,23],[30,0,1072,24],[31,0,1072,25],[38,0,1072,46],[40,0,1072,48],[42,0,1072,50]],[[20,0,1073,12],[26,0,1073,18],[47,0,1073,39],[50,0,1073,42],[54,0,1073,46],[55,0,1073,47],[79,0,1073,71],[80,0,1073,72],[87,0,1073,79],[89,0,1073,81],[107,0,1073,99],[108,0,1073,100],[122,0,1073,114],[123,0,1073,115],[124,0,1073,116]],[[20,0,1074,12],[32,0,1074,24],[33,0,1074,25],[37,0,1074,29],[38,0,1074,30],[59,0,1074,51],[60,0,1074,52],[61,0,1074,53]],[[16,0,1075,10],[17,0,1075,11],[18,0,1075,12],[19,0,1075,13]],[[16,0,1077,10],[20,0,1077,14],[32,0,1077,26],[33,0,1077,27],[39,0,1077,33],[43,0,1077,37],[44,0,1077,38],[46,0,1077,40]],[[20,0,1078,12],[27,0,1078,19],[29,0,1078,21],[30,0,1078,22],[32,0,1078,24],[33,0,1078,25],[34,0,1078,26]],[[17,0,1079,11],[18,0,1079,12],[67,0,1079,61]],[[16,0,1081,10],[23,0,1081,17],[36,0,1081,30],[37,0,1081,31],[49,0,1081,43],[50,0,1081,44],[51,0,1081,45],[55,0,1081,49]],[[16,0,1082,12],[47,0,1082,43]],[[17,0,1083,11],[18,0,1083,12]],[[12,0,1084,8],[13,0,1084,9],[14,0,1084,10],[16,0,1084,12],[51,0,1084,47]],[[12,0,1085,8]],[],[[66,0,1087,62]],[[12,0,1088,8],[15,0,1088,11],[16,0,1088,12],[17,0,1088,13],[22,0,1088,34],[24,0,1088,36],[26,0,1088,38]],[[16,0,1089,10],[22,0,1089,16],[27,0,1089,21],[30,0,1089,24],[48,0,1089,42],[49,0,1089,43],[54,0,1089,48],[59,0,1089,53],[68,0,1089,62],[69,0,1089,63],[70,0,1089,64],[71,0,1089,65],[89,0,1089,83],[90,0,1089,84],[95,0,1089,89],[96,0,1089,90],[97,0,1089,91],[98,0,1089,92],[102,0,1089,96],[103,0,1089,97],[115,0,1089,109],[116,0,1089,110]],[[16,0,1091,10],[20,0,1091,14],[25,0,1091,19],[26,0,1091,20],[32,0,1091,26],[37,0,1091,31],[38,0,1091,32],[42,0,1091,36],[47,0,1091,41],[48,0,1091,42],[49,0,1091,43],[50,0,1091,44],[51,0,1091,45],[68,0,1091,62],[69,0,1091,63],[71,0,1091,65],[76,0,1091,70],[81,0,1091,75],[83,0,1091,77]],[[20,0,1092,12],[27,0,1092,19],[29,0,1092,20],[30,0,1092,21],[48,0,1092,39],[49,0,1092,40],[53,0,1092,44],[54,0,1092,45],[56,0,1092,47],[61,0,1092,52],[62,0,1092,53],[63,0,1092,54],[64,0,1092,55],[66,0,1092,56],[67,0,1092,57]],[[17,0,1093,11]],[[21,0,1093,17]],[[20,0,1094,12],[27,0,1094,19],[29,0,1094,20],[30,0,1094,21],[48,0,1094,39],[49,0,1094,40],[53,0,1094,44],[54,0,1094,45],[56,0,1094,47],[61,0,1094,52],[63,0,1094,53],[64,0,1094,54]],[[17,0,1095,11]],[[12,0,1096,8],[13,0,1096,9],[14,0,1096,10],[15,0,1098,7],[16,0,1098,8]],[[12,0,1100,6],[31,0,1100,25],[32,0,1100,26],[36,0,1100,30],[37,0,1100,31],[55,0,1100,49],[56,0,1100,50],[57,0,1100,51]],[[8,0,1101,4],[9,0,1101,5],[10,0,1101,6],[11,0,1101,7]],[[8,0,1103,4],[61,0,1103,57]],[[8,0,1104,4],[21,0,1104,17]],[[8,0,1105,4],[15,0,1105,11],[28,0,1105,24],[29,0,1105,25],[48,0,1105,44],[49,0,1105,45],[50,0,1105,46],[54,0,1105,50],[55,0,1106,6],[58,0,1106,9],[59,0,1106,10],[60,0,1106,11],[75,0,1106,87],[77,0,1106,89],[79,0,1106,91]],[[12,0,1107,8],[41,0,1107,37]],[[12,0,1108,8],[18,0,1108,14],[26,0,1108,22],[29,0,1108,51],[31,0,1108,53],[32,0,1108,54]],[[12,0,1110,8],[27,0,1110,23],[28,0,1110,24],[35,0,1110,31],[36,0,1110,32],[37,0,1110,33],[51,0,1110,47],[53,0,1110,49],[55,0,1110,51]],[[16,0,1112,10],[21,0,1112,15],[27,0,1112,21],[28,0,1112,22],[42,0,1112,36],[44,0,1112,38],[49,0,1112,43],[50,0,1112,44],[54,0,1112,48],[60,0,1112,54],[61,0,1112,55],[68,0,1112,62],[69,0,1112,63],[83,0,1112,77],[84,0,1112,78],[86,0,1112,80]],[[20,0,1113,12],[28,0,1113,20],[29,0,1113,21],[43,0,1113,35],[44,0,1113,36],[47,0,1113,39],[52,0,1113,44],[53,0,1113,45]],[[17,0,1114,11]],[[12,0,1115,8],[13,0,1115,9],[14,0,1115,10],[15,0,1115,11]],[[12,0,1116,8],[19,0,1116,15],[27,0,1116,23],[28,0,1116,24]],[[8,0,1117,6],[9,0,1117,7],[10,0,1117,8],[12,0,1119,6],[15,0,1119,9],[16,0,1119,10],[17,0,1119,11],[21,0,1119,29],[23,0,1119,31],[25,0,1119,33]],[[12,0,1120,8],[19,0,1120,15],[21,0,1120,16],[24,0,1120,19],[28,0,1120,23],[30,0,1120,25],[33,0,1120,28],[37,0,1120,32],[39,0,1120,48],[40,0,1120,49]],[[8,0,1121,6],[9,0,1121,7],[10,0,1121,8],[11,0,1122,5],[12,0,1122,6]],[[4,0,1123,2],[5,0,1123,3]],[[4,0,1125,2]],[],[[7,0,1127,5]],[[4,0,1128,12],[36,0,1128,44],[37,0,1129,4],[43,0,1129,29],[45,0,1130,4],[68,0,1130,49],[70,0,1130,51],[72,0,1131,4],[91,0,1131,42],[108,0,1131,59],[109,0,1131,60],[120,0,1131,71]],[[8,0,1133,4],[33,0,1133,29]],[[8,0,1134,4],[15,0,1134,11],[19,0,1134,15],[20,0,1134,16],[39,0,1134,35],[40,0,1134,39],[46,0,1134,45],[48,0,1134,47],[64,0,1134,63],[65,0,1134,64],[66,0,1134,65],[70,0,1134,69],[71,0,1135,6],[79,0,1135,14],[80,0,1135,15],[81,0,1135,16],[85,0,1135,34],[87,0,1135,36],[89,0,1135,38]],[[12,0,1137,8],[16,0,1137,12],[20,0,1137,16],[25,0,1137,21],[29,0,1137,25],[31,0,1137,27]],[[16,0,1138,10],[23,0,1138,17],[25,0,1138,19],[26,0,1138,20],[30,0,1138,24],[31,0,1138,25],[32,0,1138,26]],[[13,0,1139,9]],[[12,0,1140,8],[16,0,1140,12],[36,0,1140,32],[37,0,1140,33],[43,0,1140,39],[47,0,1140,43],[48,0,1140,44],[50,0,1140,46]],[[16,0,1141,10],[23,0,1141,17],[25,0,1141,19],[26,0,1141,20],[30,0,1141,24],[31,0,1141,25],[32,0,1141,26]],[[13,0,1142,9]],[[12,0,1144,8],[19,0,1144,15],[23,0,1144,19],[24,0,1144,20],[48,0,1144,44],[49,0,1144,45],[53,0,1144,49],[55,0,1144,51],[75,0,1144,71],[76,0,1144,72],[77,0,1144,73]],[[8,0,1145,6],[9,0,1145,7],[10,0,1145,8],[11,0,1146,5],[12,0,1146,6]],[[4,0,1147,2],[5,0,1147,3]],[[4,0,1149,2]],[],[],[],[],[],[],[],[],[],[],[[7,0,1160,5]],[[4,0,1161,12],[14,0,1161,22],[15,0,1161,26],[19,0,1161,33],[21,0,1161,35],[34,0,1161,72],[36,0,1161,74],[49,0,1161,96],[53,0,1161,100],[55,0,1161,102],[57,0,1161,113]],[[8,0,1164,4],[58,0,1164,54]],[[8,0,1166,4],[12,0,1166,8],[16,0,1166,29],[17,0,1166,30]],[[8,0,1168,4],[12,0,1168,8],[22,0,1168,18],[24,0,1168,20]],[[12,0,1169,6],[18,0,1169,12],[22,0,1169,16],[25,0,1169,19],[29,0,1169,23],[33,0,1169,27],[35,0,1169,29],[36,0,1169,30]],[[12,0,1170,6],[16,0,1170,10],[19,0,1170,13],[33,0,1170,27],[34,0,1170,28],[38,0,1170,32],[40,0,1170,34],[45,0,1170,39],[47,0,1170,41],[51,0,1170,45],[52,0,1170,46],[53,0,1170,47]],[[12,0,1171,6],[16,0,1171,10],[19,0,1171,13],[34,0,1171,28],[35,0,1171,29],[39,0,1171,33],[41,0,1171,35],[46,0,1171,40],[48,0,1171,42],[52,0,1171,46],[53,0,1171,47],[54,0,1171,48]],[[9,0,1172,5]],[[8,0,1174,4],[12,0,1174,8],[14,0,1174,10],[19,0,1174,15],[28,0,1174,24],[30,0,1174,26]],[[12,0,1175,6],[18,0,1175,12],[24,0,1175,18],[27,0,1175,40],[42,0,1175,55],[43,0,1175,56],[56,0,1175,69],[58,0,1175,71],[60,0,1175,73],[61,0,1175,74],[62,0,1175,75]],[[12,0,1176,6],[16,0,1176,10],[19,0,1176,13],[23,0,1176,17],[24,0,1176,18],[26,0,1176,20],[27,0,1176,21],[30,0,1176,24],[31,0,1176,25],[37,0,1176,31],[39,0,1176,33],[43,0,1176,37],[44,0,1176,38],[45,0,1176,39]],[[9,0,1177,5]],[[13,0,1177,11]],[[12,0,1178,6],[16,0,1178,10],[19,0,1178,13],[23,0,1178,17],[24,0,1178,18],[26,0,1178,20],[27,0,1178,21],[30,0,1178,24],[31,0,1178,28],[44,0,1178,41],[46,0,1178,43],[50,0,1178,47],[51,0,1178,48],[52,0,1178,49]],[[9,0,1179,5]],[[8,0,1181,4],[51,0,1181,47]],[[8,0,1182,4],[38,0,1182,34]],[[8,0,1183,4],[114,0,1183,110]],[[8,0,1184,4],[15,0,1184,11]],[[8,0,1185,4],[12,0,1185,8]],[[8,0,1187,4],[12,0,1187,8],[15,0,1187,11],[19,0,1187,15],[20,0,1187,16],[24,0,1187,20]],[[8,0,1188,6],[79,0,1188,77]],[[8,0,1189,6],[40,0,1189,38]],[[8,0,1190,6],[40,0,1190,38]],[[8,0,1191,6],[11,0,1191,9],[12,0,1191,10],[13,0,1191,11],[16,0,1191,48],[18,0,1191,50],[20,0,1191,52]],[[12,0,1192,8],[16,0,1192,12],[18,0,1192,14],[23,0,1192,19],[32,0,1192,28],[36,0,1192,32],[39,0,1192,35],[41,0,1192,37]],[[16,0,1194,10],[22,0,1194,16],[26,0,1194,20],[29,0,1194,23],[32,0,1194,26],[33,0,1194,27],[37,0,1194,31],[38,0,1194,32]],[[16,0,1196,10],[22,0,1196,16],[39,0,1196,33],[42,0,1196,58]],[[20,0,1197,12],[22,0,1197,14],[24,0,1197,16],[27,0,1197,19],[28,0,1197,20],[30,0,1197,22]],[[20,0,1198,12],[24,0,1198,16]],[[20,0,1199,12],[23,0,1199,15]],[[20,0,1200,12],[28,0,1200,20],[30,0,1200,22],[34,0,1200,26]],[[17,0,1201,11],[18,0,1201,12]],[[16,0,1203,10],[23,0,1203,17],[25,0,1203,18],[28,0,1203,21],[32,0,1203,25],[34,0,1203,27],[51,0,1203,44],[53,0,1203,60],[54,0,1203,61]],[[13,0,1205,9]],[[17,0,1205,15],[19,0,1205,17],[87,0,1205,85]],[[16,0,1206,10],[22,0,1206,16],[26,0,1206,20],[29,0,1206,23],[42,0,1206,36],[43,0,1206,37],[47,0,1206,41],[50,0,1206,44],[53,0,1206,47],[56,0,1206,50],[58,0,1206,52],[59,0,1206,53]],[[16,0,1207,10],[19,0,1207,13],[22,0,1207,16],[36,0,1207,30],[37,0,1207,31],[41,0,1207,35],[43,0,1207,37],[47,0,1207,41],[48,0,1207,42],[50,0,1207,44],[51,0,1207,45],[60,0,1207,54],[61,0,1207,79],[62,0,1207,80]],[[16,0,1209,10],[22,0,1209,16],[39,0,1209,33],[42,0,1209,58]],[[20,0,1210,12],[22,0,1210,14],[24,0,1210,16],[26,0,1210,28]],[[20,0,1211,12],[23,0,1211,15]],[[20,0,1212,12],[24,0,1212,16]],[[20,0,1213,12],[28,0,1213,20],[30,0,1213,22],[34,0,1213,26]],[[17,0,1214,11],[18,0,1214,12]],[[16,0,1216,10],[23,0,1216,17],[25,0,1216,18],[28,0,1216,21],[32,0,1216,25],[34,0,1216,27],[51,0,1216,44],[53,0,1216,60],[54,0,1216,61]],[[13,0,1217,9]],[[8,0,1218,6],[9,0,1218,7],[10,0,1218,8],[11,0,1219,5],[12,0,1219,6]],[[8,0,1221,4],[15,0,1221,11],[19,0,1221,15],[20,0,1221,16],[24,0,1221,20],[25,0,1222,6],[29,0,1222,10],[30,0,1222,11],[31,0,1222,12],[32,0,1222,13],[33,0,1223,5],[34,0,1223,6]],[[4,0,1224,2],[5,0,1224,3]],[[4,0,1226,2],[74,0,1226,72]],[[4,0,1227,12],[17,0,1227,25],[18,0,1227,29],[22,0,1227,36],[24,0,1227,38],[30,0,1227,63],[32,0,1227,65],[52,0,1227,94],[56,0,1227,98]],[[8,0,1229,4],[12,0,1229,8],[29,0,1229,25],[31,0,1229,27]],[[12,0,1230,6],[16,0,1230,10],[19,0,1230,13],[34,0,1230,28],[35,0,1230,29],[39,0,1230,33],[41,0,1230,35],[46,0,1230,40],[47,0,1230,41],[48,0,1230,42]],[[9,0,1231,5]],[[8,0,1232,4],[15,0,1232,11],[19,0,1232,15],[20,0,1232,16],[22,0,1232,18],[23,0,1232,19],[29,0,1232,25],[30,0,1232,26],[36,0,1232,32],[38,0,1232,34],[42,0,1232,38],[43,0,1232,39],[44,0,1232,40]],[[4,0,1233,2],[5,0,1233,3]],[[4,0,1235,2]],[],[[7,0,1237,5]],[[4,0,1238,12],[27,0,1238,35],[28,0,1238,39],[32,0,1238,46],[34,0,1239,39],[40,0,1239,64],[42,0,1240,39],[65,0,1240,85],[67,0,1240,87],[69,0,1241,39],[89,0,1241,68],[93,0,1241,72],[95,0,1242,39],[100,0,1242,57]],[[8,0,1244,4],[12,0,1244,8],[17,0,1244,13],[22,0,1244,18],[31,0,1244,27],[33,0,1244,29]],[[12,0,1245,6],[17,0,1245,11],[20,0,1245,14],[30,0,1245,24],[31,0,1245,25],[35,0,1245,29],[36,0,1245,30],[38,0,1245,32],[39,0,1245,33],[48,0,1245,42],[49,0,1245,43],[50,0,1245,44]],[[9,0,1246,5]],[[8,0,1248,4],[12,0,1248,8],[29,0,1248,25],[31,0,1248,27]],[[12,0,1249,6],[16,0,1249,10],[19,0,1249,13],[34,0,1249,28],[35,0,1249,29],[39,0,1249,33],[41,0,1249,35],[46,0,1249,40],[47,0,1249,41],[48,0,1249,42]],[[9,0,1250,5]],[[8,0,1252,4],[14,0,1252,10],[19,0,1252,15],[22,0,1252,18],[26,0,1252,22],[27,0,1252,23],[67,0,1252,63],[68,0,1252,64],[72,0,1252,68],[74,0,1252,70],[94,0,1252,90],[95,0,1252,91],[96,0,1252,92]],[[8,0,1253,4],[14,0,1253,10],[24,0,1253,20],[27,0,1253,23],[32,0,1253,28],[33,0,1253,29],[43,0,1253,39],[44,0,1253,40]],[[8,0,1254,4],[14,0,1254,10],[28,0,1254,24],[31,0,1254,27],[36,0,1254,32],[37,0,1254,33],[51,0,1254,47],[52,0,1254,48]],[[8,0,1256,4],[51,0,1256,47]],[[8,0,1257,4],[13,0,1257,9],[14,0,1257,10],[20,0,1257,16],[21,0,1257,17],[27,0,1257,23],[29,0,1257,25],[39,0,1257,35],[40,0,1257,36],[41,0,1257,37]],[[8,0,1259,4],[13,0,1259,9],[19,0,1259,15],[20,0,1259,16],[36,0,1259,32],[38,0,1259,34],[55,0,1259,51],[56,0,1259,52],[60,0,1259,56],[66,0,1259,62],[67,0,1259,63],[74,0,1259,70],[75,0,1259,71],[89,0,1259,85],[90,0,1259,86],[92,0,1259,88]],[[12,0,1261,6],[16,0,1261,10],[39,0,1261,68],[40,0,1261,69],[41,0,1261,70],[80,0,1261,109]],[[12,0,1262,6],[16,0,1262,10],[24,0,1262,38],[25,0,1262,39]],[[12,0,1264,6],[16,0,1264,10],[36,0,1264,30],[38,0,1264,32]],[[16,0,1265,8],[39,0,1265,31],[42,0,1265,34],[62,0,1265,54],[63,0,1265,55],[67,0,1265,59],[68,0,1265,60],[75,0,1265,67],[76,0,1265,68],[78,0,1265,70],[79,0,1265,71],[86,0,1265,78],[87,0,1265,79],[91,0,1265,83],[96,0,1265,88],[112,0,1265,104],[113,0,1265,105],[115,0,1265,107],[129,0,1265,121],[130,0,1265,122]],[[16,0,1266,8],[24,0,1266,16],[27,0,1266,19],[47,0,1266,39],[48,0,1266,40],[52,0,1266,44],[53,0,1266,45],[60,0,1266,52],[61,0,1266,53],[63,0,1266,55],[64,0,1266,56],[71,0,1266,63],[72,0,1266,64],[76,0,1266,68],[81,0,1266,73],[97,0,1266,89],[98,0,1266,90],[100,0,1266,92],[105,0,1266,97],[106,0,1266,98]],[[13,0,1267,7]],[[12,0,1269,6],[20,0,1269,14],[23,0,1269,17],[31,0,1269,25],[36,0,1269,30],[45,0,1269,39],[46,0,1269,40],[47,0,1269,41],[48,0,1269,42],[56,0,1269,50],[57,0,1269,51],[58,0,1269,52],[59,0,1269,53],[63,0,1269,57],[64,0,1269,58],[76,0,1269,70],[77,0,1269,71],[78,0,1269,72],[109,0,1269,103]],[[12,0,1271,6],[82,0,1271,76]],[[12,0,1272,6],[18,0,1272,12],[31,0,1272,25],[34,0,1272,28],[50,0,1272,44],[51,0,1272,45],[57,0,1272,51],[59,0,1272,53],[75,0,1272,69],[76,0,1272,70],[77,0,1272,71]],[[12,0,1273,6],[18,0,1273,12],[26,0,1273,20],[29,0,1273,23],[44,0,1273,38],[45,0,1273,39],[58,0,1273,52],[60,0,1273,54],[68,0,1273,62],[69,0,1273,63],[70,0,1273,64]],[[12,0,1275,6],[17,0,1275,11],[20,0,1275,14],[24,0,1275,18],[25,0,1275,19],[48,0,1275,42],[49,0,1275,43],[66,0,1275,60],[68,0,1275,62],[76,0,1275,70],[78,0,1275,72],[101,0,1275,95],[103,0,1275,97],[120,0,1275,114],[122,0,1275,116],[127,0,1275,121],[128,0,1275,122],[129,0,1275,123]],[[9,0,1276,5]],[[8,0,1278,4],[15,0,1278,11],[20,0,1278,16],[21,0,1278,17]],[[4,0,1279,2],[5,0,1279,3]],[[4,0,1281,2]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,1294,5]],[[4,0,1295,12],[41,0,1295,49],[42,0,1296,4],[55,0,1296,37],[57,0,1297,4],[69,0,1297,36],[71,0,1298,4],[84,0,1298,25],[86,0,1299,4],[98,0,1299,24],[100,0,1300,4],[116,0,1300,28],[118,0,1301,4],[149,0,1301,60],[151,0,1302,4],[182,0,1302,35],[185,0,1302,38],[189,0,1302,42],[191,0,1303,4],[198,0,1303,11],[201,0,1303,14],[206,0,1303,19]],[[8,0,1305,4],[12,0,1305,8],[29,0,1305,45],[30,0,1305,46]],[[8,0,1306,4],[12,0,1306,8],[28,0,1306,44],[29,0,1306,45]],[[8,0,1307,4],[12,0,1307,8],[19,0,1307,15],[21,0,1307,17]],[[12,0,1308,6],[29,0,1308,23],[32,0,1308,26],[38,0,1308,32],[39,0,1308,33],[45,0,1308,39],[46,0,1308,40],[48,0,1308,42],[50,0,1308,44],[63,0,1308,57],[64,0,1308,58],[65,0,1308,59]],[[12,0,1309,6],[28,0,1309,22],[31,0,1309,25],[37,0,1309,31],[38,0,1309,32],[44,0,1309,38],[45,0,1309,39],[47,0,1309,41],[49,0,1309,43],[61,0,1309,55],[62,0,1309,56],[63,0,1309,57]],[[9,0,1310,5]],[[13,0,1310,11]],[[12,0,1311,6],[29,0,1311,23],[32,0,1311,26],[45,0,1311,39],[46,0,1311,40]],[[12,0,1312,6],[28,0,1312,22],[31,0,1312,25],[43,0,1312,37],[44,0,1312,38]],[[9,0,1313,5]],[[8,0,1315,4],[25,0,1315,21],[26,0,1315,22],[43,0,1315,39],[45,0,1315,41],[61,0,1315,57],[63,0,1315,59],[76,0,1315,72],[78,0,1315,74],[90,0,1315,86],[91,0,1315,87],[92,0,1315,88]],[[8,0,1317,4],[14,0,1317,10],[19,0,1317,15],[22,0,1317,30],[32,0,1317,40],[33,0,1317,41],[37,0,1317,45],[38,0,1317,46],[40,0,1317,48],[41,0,1317,49],[50,0,1317,58],[51,0,1317,59],[52,0,1317,60]],[[8,0,1319,4],[12,0,1319,8],[43,0,1319,39],[48,0,1319,44],[57,0,1319,53],[59,0,1319,55]],[[12,0,1320,6],[18,0,1320,12],[27,0,1320,21],[30,0,1320,24],[46,0,1320,40],[47,0,1320,41],[59,0,1320,53],[60,0,1320,54],[61,0,1320,55]],[[12,0,1321,6],[18,0,1321,12],[30,0,1321,24],[33,0,1321,27],[42,0,1321,36],[43,0,1321,37],[60,0,1321,54],[61,0,1321,55],[64,0,1321,58],[65,0,1321,59]],[[12,0,1323,6],[18,0,1323,12],[22,0,1323,16],[25,0,1323,19],[27,0,1323,20],[30,0,1323,23],[61,0,1323,54],[63,0,1323,56],[72,0,1323,65],[74,0,1323,67],[90,0,1323,83],[92,0,1323,84],[93,0,1323,85]],[[12,0,1325,6],[16,0,1325,10],[17,0,1325,11],[24,0,1325,18],[26,0,1325,20]],[[16,0,1326,8],[29,0,1326,21],[30,0,1326,22],[39,0,1326,31],[41,0,1326,33],[45,0,1326,37],[47,0,1326,39],[51,0,1326,43],[52,0,1326,44],[53,0,1326,45]],[[13,0,1327,7]],[[12,0,1329,6],[16,0,1329,10],[47,0,1329,41],[49,0,1329,43]],[[16,0,1330,8],[22,0,1330,14],[26,0,1330,18],[29,0,1330,21],[33,0,1330,25],[37,0,1330,29],[39,0,1330,31],[40,0,1330,32]],[[16,0,1331,8],[31,0,1331,23],[32,0,1331,24],[36,0,1331,28],[38,0,1331,30],[42,0,1331,34],[44,0,1331,36],[48,0,1331,40],[49,0,1331,41],[50,0,1331,42]],[[16,0,1333,8],[20,0,1333,12],[21,0,1333,13],[28,0,1333,20],[30,0,1333,22]],[[20,0,1334,10],[35,0,1334,25],[36,0,1334,26],[45,0,1334,35],[47,0,1334,37],[51,0,1334,41],[53,0,1334,43],[57,0,1334,47],[58,0,1334,48],[59,0,1334,49]],[[17,0,1335,9]],[[13,0,1336,7]],[[12,0,1337,6],[17,0,1337,11],[18,0,1337,12],[24,0,1337,18],[25,0,1337,19],[37,0,1337,31],[39,0,1337,33],[43,0,1337,37],[44,0,1337,38],[45,0,1337,39]],[[9,0,1338,5]],[[8,0,1340,4],[14,0,1340,10],[39,0,1340,35],[42,0,1340,58],[58,0,1340,74],[59,0,1340,75],[64,0,1340,80],[65,0,1340,81],[77,0,1340,93],[78,0,1340,94],[79,0,1340,95]],[[8,0,1341,4],[12,0,1341,8],[13,0,1341,9],[16,0,1341,12],[28,0,1341,24],[29,0,1341,25]],[[8,0,1342,4],[13,0,1342,9],[19,0,1342,15],[23,0,1342,19],[27,0,1342,23],[52,0,1342,48],[54,0,1342,50]],[[12,0,1343,6],[25,0,1343,19]],[[12,0,1344,6],[17,0,1344,11],[18,0,1344,12],[24,0,1344,18],[25,0,1344,19],[29,0,1344,23],[30,0,1344,24],[47,0,1344,41],[48,0,1344,42],[51,0,1344,45],[53,0,1344,47],[55,0,1344,48],[60,0,1344,53],[62,0,1344,55],[63,0,1344,56],[65,0,1344,57],[66,0,1344,58],[67,0,1344,59]],[[12,0,1346,6],[16,0,1346,10],[17,0,1346,11],[24,0,1346,18],[26,0,1346,20]],[[16,0,1347,8],[20,0,1347,12],[21,0,1347,13],[26,0,1347,18],[29,0,1347,21],[30,0,1347,22],[31,0,1347,23]],[[13,0,1348,7]],[[12,0,1350,6],[13,0,1350,7],[15,0,1350,9],[16,0,1350,10]],[[9,0,1351,5]],[[8,0,1353,4],[14,0,1353,10],[36,0,1353,32],[39,0,1353,55],[56,0,1353,72],[57,0,1353,73],[62,0,1353,78],[63,0,1353,79],[76,0,1353,92],[77,0,1353,93],[78,0,1353,94]],[[8,0,1354,4],[9,0,1354,5],[12,0,1354,8],[25,0,1354,21],[26,0,1354,22]],[[8,0,1355,4],[13,0,1355,9],[19,0,1355,15],[23,0,1355,19],[27,0,1355,23],[49,0,1355,45],[51,0,1355,47]],[[12,0,1356,6],[25,0,1356,19]],[[12,0,1357,6],[17,0,1357,11],[18,0,1357,12],[24,0,1357,18],[25,0,1357,19],[29,0,1357,23],[30,0,1357,24],[47,0,1357,41],[48,0,1357,42],[51,0,1357,45],[53,0,1357,47],[55,0,1357,48],[60,0,1357,53],[62,0,1357,55],[63,0,1357,56],[65,0,1357,57],[66,0,1357,58],[67,0,1357,59]],[[12,0,1359,6],[16,0,1359,10],[17,0,1359,11],[24,0,1359,18],[26,0,1359,20]],[[16,0,1360,8],[20,0,1360,12],[21,0,1360,13],[26,0,1360,18],[29,0,1360,21],[30,0,1360,22],[31,0,1360,23]],[[13,0,1361,7]],[[12,0,1363,6],[13,0,1363,7],[15,0,1363,9],[16,0,1363,10]],[[9,0,1364,5]],[[8,0,1366,4],[15,0,1366,11],[20,0,1366,16],[21,0,1366,17]],[[4,0,1367,2],[5,0,1367,3]],[[4,0,1370,2]],[],[],[],[[7,0,1374,5]],[[4,0,1375,12],[25,0,1375,33],[26,0,1375,34],[33,0,1375,62]],[[8,0,1377,4],[14,0,1377,10],[19,0,1377,15],[22,0,1377,18],[26,0,1377,22],[27,0,1377,23],[55,0,1377,51],[56,0,1377,52],[63,0,1377,59],[64,0,1377,60],[65,0,1377,61]],[[8,0,1379,4],[15,0,1379,11],[19,0,1379,15],[20,0,1379,16],[32,0,1379,28],[33,0,1379,29],[38,0,1379,34],[39,0,1379,35],[40,0,1379,36]],[[4,0,1380,2],[5,0,1380,3]],[[4,0,1382,12],[32,0,1382,40],[33,0,1382,41],[40,0,1382,69],[42,0,1382,71],[50,0,1382,91],[60,0,1382,101],[61,0,1382,102],[65,0,1382,106],[66,0,1382,107],[68,0,1382,109],[69,0,1382,110],[78,0,1382,119],[79,0,1382,120]],[[8,0,1384,4],[15,0,1384,11],[16,0,1384,12],[23,0,1384,19],[24,0,1384,20],[25,0,1384,21],[31,0,1384,27],[33,0,1384,29],[35,0,1384,31]],[[12,0,1385,6],[17,0,1385,11],[18,0,1385,12],[24,0,1385,18],[25,0,1385,19],[31,0,1385,25],[32,0,1385,26],[33,0,1385,27]],[[8,0,1386,4],[9,0,1386,5],[10,0,1386,6],[11,0,1386,7]],[[8,0,1388,4],[15,0,1388,11],[20,0,1388,16],[21,0,1388,17]],[[4,0,1389,2],[5,0,1389,3]],[[4,0,1391,2]],[],[],[],[],[],[[7,0,1397,5]],[[4,0,1398,12],[35,0,1398,43],[36,0,1398,47],[42,0,1398,71],[44,0,1399,47],[67,0,1399,93],[69,0,1399,95],[71,0,1400,47],[98,0,1400,84],[100,0,1400,86]],[[8,0,1402,4],[95,0,1402,91]],[[8,0,1403,4],[14,0,1403,10],[32,0,1403,28],[35,0,1403,41],[36,0,1403,42],[55,0,1403,61],[56,0,1403,62],[57,0,1403,63],[63,0,1403,69],[64,0,1403,70],[88,0,1403,94],[89,0,1403,95],[90,0,1403,96]],[[8,0,1405,4],[34,0,1405,30]],[[8,0,1406,4],[13,0,1406,9],[19,0,1406,15],[36,0,1406,32],[40,0,1406,36],[58,0,1406,54],[60,0,1406,56]],[[12,0,1407,6],[19,0,1407,13],[25,0,1407,19],[26,0,1407,20],[43,0,1407,37],[44,0,1407,38],[45,0,1407,39]],[[9,0,1408,5]],[[8,0,1410,4],[28,0,1410,24],[29,0,1410,25],[36,0,1410,32],[37,0,1410,33],[40,0,1410,36],[41,0,1410,37],[43,0,1410,39]],[[12,0,1411,6],[16,0,1411,10],[21,0,1411,15],[22,0,1411,16],[29,0,1411,23],[30,0,1411,24],[36,0,1411,30],[37,0,1411,31],[40,0,1411,34],[41,0,1411,35],[45,0,1411,39],[46,0,1411,40],[47,0,1411,41],[49,0,1411,43],[51,0,1411,45],[104,0,1411,98]],[[16,0,1413,8],[22,0,1413,14],[26,0,1413,18],[29,0,1413,36],[35,0,1413,42],[36,0,1413,43],[39,0,1413,46],[40,0,1413,47],[44,0,1413,51],[45,0,1413,52],[46,0,1413,53]],[[16,0,1414,8],[20,0,1414,12],[21,0,1414,13],[28,0,1414,20],[29,0,1414,21],[30,0,1414,22],[31,0,1414,23],[33,0,1414,25],[34,0,1414,26],[36,0,1414,28],[38,0,1414,30]],[[20,0,1416,10],[24,0,1416,14],[27,0,1416,17],[28,0,1416,18],[42,0,1416,32],[44,0,1416,34]],[[24,0,1417,12],[28,0,1417,16],[29,0,1417,17],[60,0,1417,48],[61,0,1417,49],[62,0,1417,50],[64,0,1417,52],[67,0,1417,55],[68,0,1417,56],[82,0,1417,70],[84,0,1417,72],[108,0,1417,96],[109,0,1417,97],[110,0,1417,98]],[[21,0,1418,11]],[[25,0,1418,17]],[[24,0,1419,12],[30,0,1419,18]],[[24,0,1420,12],[29,0,1420,17],[35,0,1420,23],[52,0,1420,40],[56,0,1420,44],[74,0,1420,62],[76,0,1420,64]],[[28,0,1421,14],[35,0,1421,21],[41,0,1421,27],[42,0,1421,28],[45,0,1421,31],[46,0,1421,32],[50,0,1421,36],[51,0,1421,37],[52,0,1421,38],[53,0,1421,39],[54,0,1421,40],[55,0,1421,41],[72,0,1421,58],[73,0,1421,59],[74,0,1421,60]],[[25,0,1422,13]],[[21,0,1423,11]],[[16,0,1424,8],[17,0,1424,9],[18,0,1424,10],[19,0,1424,11]],[[13,0,1426,7]],[[17,0,1426,13],[19,0,1426,15],[52,0,1426,48]],[[16,0,1428,8],[20,0,1428,12],[23,0,1428,15],[24,0,1428,16],[38,0,1428,30],[40,0,1428,32]],[[20,0,1429,10],[24,0,1429,14],[25,0,1429,15],[56,0,1429,46],[57,0,1429,47],[63,0,1429,53],[64,0,1429,54],[67,0,1429,57],[68,0,1429,58],[72,0,1429,62],[73,0,1429,63],[75,0,1429,65],[78,0,1429,68],[79,0,1429,69],[93,0,1429,83],[95,0,1429,85],[119,0,1429,109],[120,0,1429,110],[121,0,1429,111]],[[17,0,1430,9]],[[21,0,1430,15]],[[20,0,1431,10],[25,0,1431,15],[31,0,1431,21],[48,0,1431,38],[52,0,1431,42],[70,0,1431,60],[72,0,1431,62]],[[24,0,1432,12],[31,0,1432,19],[37,0,1432,25],[38,0,1432,26],[41,0,1432,29],[42,0,1432,30],[46,0,1432,34],[47,0,1432,35],[48,0,1432,36],[65,0,1432,53],[66,0,1432,54],[67,0,1432,55]],[[21,0,1433,11]],[[17,0,1434,9]],[[13,0,1436,7]],[[8,0,1437,4],[9,0,1437,5],[10,0,1437,6],[11,0,1437,7]],[[8,0,1439,4],[15,0,1439,11],[21,0,1439,17],[22,0,1439,18]],[[4,0,1441,2],[5,0,1441,3]],[[4,0,1443,2]],[],[],[],[],[[7,0,1448,5]],[[4,0,1449,12],[30,0,1449,38],[31,0,1449,39],[34,0,1449,83],[36,0,1450,39],[59,0,1450,84],[61,0,1450,86]],[[8,0,1453,4],[12,0,1453,8],[15,0,1453,11],[27,0,1453,23],[44,0,1453,40],[46,0,1453,42]],[[12,0,1454,6],[19,0,1454,13],[23,0,1454,17],[24,0,1454,18],[56,0,1454,50],[57,0,1454,51],[60,0,1454,54],[62,0,1454,56],[82,0,1454,76],[83,0,1454,77],[84,0,1454,78]],[[9,0,1455,5]],[[13,0,1455,11],[15,0,1455,13],[37,0,1455,35]],[[12,0,1456,6],[19,0,1456,13],[23,0,1456,17],[24,0,1456,18],[63,0,1456,57],[64,0,1456,58],[67,0,1456,61],[69,0,1456,63],[89,0,1456,83],[90,0,1456,84],[91,0,1456,85]],[[9,0,1457,5]],[[4,0,1458,2],[5,0,1458,3]],[[4,0,1460,12],[36,0,1460,44],[37,0,1460,45],[43,0,1460,70],[45,0,1461,45],[68,0,1461,90],[70,0,1461,92]],[[8,0,1464,4],[15,0,1464,11],[19,0,1464,15],[20,0,1464,16],[33,0,1464,29],[34,0,1464,30],[40,0,1464,36],[42,0,1464,38],[62,0,1464,58],[63,0,1464,59],[64,0,1464,60],[68,0,1464,64],[69,0,1465,6],[73,0,1465,10],[74,0,1465,11],[75,0,1465,12],[76,0,1465,13],[78,0,1466,6],[81,0,1466,9],[82,0,1466,10],[86,0,1466,14],[87,0,1466,15],[89,0,1466,17],[90,0,1466,18],[94,0,1466,22],[95,0,1466,23],[130,0,1466,58],[131,0,1466,59],[135,0,1466,63],[137,0,1466,65],[157,0,1466,85],[158,0,1466,86],[159,0,1466,87]],[[8,0,1467,6],[50,0,1467,48]],[[8,0,1468,6],[11,0,1468,9],[12,0,1468,10],[13,0,1468,11],[21,0,1468,29],[23,0,1468,31],[25,0,1468,33]],[[12,0,1469,8],[19,0,1469,15],[27,0,1469,23]],[[17,0,1470,11],[20,0,1470,14],[21,0,1470,15],[25,0,1470,19],[26,0,1470,20],[28,0,1470,22],[29,0,1470,23],[43,0,1470,37],[44,0,1470,38],[48,0,1470,42],[50,0,1470,44],[54,0,1470,48],[55,0,1470,49],[57,0,1470,51],[58,0,1470,52],[67,0,1470,61],[68,0,1470,83],[69,0,1470,84],[70,0,1470,85]],[[8,0,1471,6],[9,0,1471,7],[10,0,1471,8],[11,0,1473,5],[12,0,1473,6]],[[4,0,1474,2],[5,0,1474,3]],[[4,0,1476,12],[43,0,1476,51],[44,0,1476,52],[57,0,1476,86],[59,0,1477,52],[82,0,1477,97],[84,0,1477,99]],[[8,0,1480,4],[15,0,1480,11],[19,0,1480,15],[20,0,1480,16],[46,0,1480,42],[47,0,1480,43],[60,0,1480,56],[61,0,1480,57],[62,0,1480,58],[66,0,1480,62]],[[8,0,1481,6],[21,0,1481,19]],[[8,0,1482,6],[12,0,1482,10],[13,0,1482,11],[14,0,1482,12],[15,0,1482,13],[17,0,1483,6],[25,0,1483,14],[26,0,1483,15],[27,0,1483,16],[32,0,1483,37],[34,0,1483,39],[36,0,1483,41]],[[12,0,1484,8],[16,0,1484,12],[28,0,1484,48],[29,0,1484,49]],[[12,0,1485,8],[24,0,1485,20],[27,0,1485,23],[32,0,1485,28],[33,0,1485,29],[36,0,1485,32],[37,0,1485,33],[41,0,1485,37],[42,0,1485,38],[44,0,1485,40],[45,0,1485,41],[49,0,1485,45],[50,0,1485,46],[63,0,1485,59],[64,0,1485,60],[68,0,1485,64],[69,0,1485,65],[86,0,1485,82],[87,0,1485,83],[90,0,1485,86],[92,0,1485,88],[112,0,1485,108],[113,0,1485,109],[114,0,1485,110],[115,0,1485,111]],[[12,0,1486,8],[19,0,1486,15],[32,0,1486,28],[33,0,1486,29],[45,0,1486,41],[46,0,1486,42],[47,0,1486,43]],[[8,0,1487,6],[9,0,1487,7],[10,0,1487,8],[12,0,1488,6],[15,0,1488,9],[16,0,1488,10],[17,0,1488,11],[22,0,1488,32],[24,0,1488,34],[26,0,1488,36]],[[12,0,1490,8],[16,0,1490,12],[21,0,1490,17],[24,0,1490,30],[26,0,1490,32],[27,0,1490,33]],[[12,0,1492,8],[17,0,1492,13],[18,0,1492,14],[25,0,1492,21],[26,0,1492,22],[30,0,1492,26],[31,0,1492,27],[33,0,1492,29]],[[16,0,1493,10],[21,0,1493,15],[24,0,1493,18],[29,0,1493,23],[30,0,1493,24],[36,0,1493,30],[37,0,1493,31],[41,0,1493,35],[42,0,1493,36],[77,0,1493,71],[78,0,1493,72],[82,0,1493,76],[84,0,1493,78],[104,0,1493,98],[105,0,1493,99],[106,0,1493,100],[107,0,1493,101]],[[12,0,1494,8],[13,0,1494,9],[14,0,1494,10],[15,0,1494,11]],[[12,0,1495,8],[19,0,1495,15],[24,0,1495,20],[25,0,1495,21]],[[8,0,1496,6],[9,0,1496,7],[10,0,1496,8],[12,0,1497,6],[15,0,1497,9],[16,0,1497,10],[17,0,1497,11],[25,0,1497,29],[27,0,1497,31],[29,0,1497,33]],[[12,0,1498,8],[19,0,1498,15],[27,0,1498,23]],[[17,0,1499,11],[20,0,1499,14],[21,0,1499,15],[25,0,1499,19],[26,0,1499,20],[28,0,1499,22],[29,0,1499,23],[43,0,1499,37],[44,0,1499,38],[48,0,1499,42],[50,0,1499,44],[54,0,1499,48],[55,0,1499,49],[57,0,1499,51],[58,0,1499,52],[67,0,1499,61],[68,0,1499,83],[69,0,1499,84],[70,0,1499,85]],[[8,0,1500,6],[9,0,1500,7],[10,0,1500,8],[11,0,1501,5],[12,0,1501,6]],[[4,0,1502,2],[5,0,1502,3]],[[4,0,1504,2]],[],[],[],[],[],[],[[7,0,1511,5]],[[4,0,1512,12],[33,0,1512,41],[34,0,1513,4],[38,0,1513,21],[40,0,1514,4],[63,0,1514,49],[65,0,1514,51]],[[8,0,1516,4],[14,0,1516,10],[19,0,1516,15],[22,0,1516,18],[26,0,1516,22],[27,0,1516,23],[62,0,1516,58],[63,0,1516,59],[67,0,1516,63],[69,0,1516,65],[89,0,1516,85],[90,0,1516,86],[91,0,1516,87]],[[8,0,1517,4],[15,0,1517,11],[20,0,1517,16],[21,0,1517,17],[24,0,1517,20],[25,0,1517,21],[29,0,1517,25],[30,0,1517,26],[32,0,1517,28],[33,0,1517,29],[47,0,1517,43],[48,0,1517,44],[52,0,1517,48],[54,0,1517,50],[58,0,1517,54],[59,0,1517,55],[61,0,1517,57],[62,0,1517,58],[71,0,1517,67],[72,0,1517,89],[73,0,1517,90],[74,0,1517,91]],[[4,0,1518,2],[5,0,1518,3]],[[4,0,1520,2]],[],[[7,0,1522,5]],[[4,0,1523,12],[39,0,1523,47],[40,0,1523,51],[44,0,1523,68],[46,0,1524,51],[69,0,1524,96],[71,0,1524,98]],[[8,0,1526,4],[12,0,1526,8],[32,0,1526,28],[36,0,1526,32],[40,0,1526,36],[44,0,1526,40],[64,0,1526,60],[65,0,1526,61],[71,0,1526,67],[76,0,1526,72],[77,0,1526,73],[79,0,1526,75]],[[12,0,1527,6],[19,0,1527,13],[20,0,1527,14],[24,0,1527,18],[25,0,1527,19],[42,0,1527,36],[43,0,1527,37],[47,0,1527,41],[48,0,1527,42],[49,0,1527,43]],[[9,0,1528,5]],[[8,0,1529,4],[12,0,1529,8],[20,0,1529,16],[23,0,1529,29],[25,0,1529,31],[26,0,1529,32]],[[8,0,1530,4],[16,0,1530,12],[17,0,1530,13],[21,0,1530,17],[22,0,1530,18],[26,0,1530,22],[27,0,1530,23],[44,0,1530,40],[45,0,1530,41],[49,0,1530,45],[50,0,1530,46],[51,0,1530,47]],[[8,0,1532,4],[28,0,1532,24],[29,0,1532,25],[36,0,1532,32],[37,0,1532,33],[40,0,1532,36],[41,0,1532,37],[43,0,1532,39]],[[12,0,1533,6],[16,0,1533,10],[21,0,1533,15],[22,0,1533,16],[29,0,1533,23],[30,0,1533,25],[34,0,1533,46],[35,0,1533,47],[38,0,1533,50],[39,0,1533,51],[43,0,1533,55],[44,0,1533,56],[45,0,1533,57],[49,0,1533,61],[50,0,1533,62],[53,0,1533,65],[54,0,1533,66],[59,0,1533,71],[61,0,1533,73]],[[16,0,1534,8],[89,0,1534,81]],[[16,0,1536,8],[22,0,1536,14],[27,0,1536,19],[30,0,1536,39],[34,0,1536,60],[35,0,1536,61],[38,0,1536,64],[39,0,1536,65],[43,0,1536,69],[44,0,1536,70],[45,0,1536,71]],[[16,0,1537,8],[21,0,1537,13],[22,0,1537,14],[29,0,1537,21],[30,0,1537,22],[37,0,1537,29],[38,0,1537,30],[40,0,1537,32]],[[20,0,1539,10],[24,0,1539,14],[27,0,1539,17],[28,0,1539,18],[42,0,1539,32],[44,0,1539,34]],[[24,0,1540,12],[32,0,1540,20],[35,0,1540,23],[43,0,1540,31],[44,0,1540,32],[50,0,1540,38],[51,0,1540,39],[55,0,1540,43],[56,0,1540,44],[91,0,1540,79],[92,0,1540,80],[99,0,1540,87],[101,0,1540,89],[104,0,1540,92],[105,0,1540,93],[119,0,1540,107],[120,0,1540,108],[121,0,1540,109],[122,0,1540,110]],[[21,0,1541,11]],[[25,0,1541,17]],[[24,0,1542,12],[32,0,1542,20],[33,0,1542,21],[37,0,1542,25],[38,0,1542,26],[45,0,1542,33],[46,0,1542,34],[63,0,1542,51],[64,0,1542,52],[68,0,1542,56],[69,0,1542,57],[70,0,1542,58]],[[21,0,1543,11]],[[16,0,1544,8],[17,0,1544,9],[18,0,1544,10],[19,0,1544,11]],[[13,0,1546,7]],[[17,0,1546,13],[19,0,1546,15],[52,0,1546,48]],[[16,0,1548,8],[20,0,1548,12],[23,0,1548,15],[24,0,1548,16],[38,0,1548,30],[40,0,1548,32]],[[20,0,1549,10],[28,0,1549,18],[31,0,1549,21],[39,0,1549,29],[40,0,1549,30],[46,0,1549,36],[47,0,1549,37],[51,0,1549,41],[52,0,1549,42],[87,0,1549,77],[88,0,1549,78],[92,0,1549,82],[94,0,1549,84],[97,0,1549,87],[98,0,1549,88],[112,0,1549,102],[113,0,1549,103],[114,0,1549,104],[115,0,1549,105]],[[17,0,1550,9]],[[21,0,1550,15]],[[20,0,1551,10],[26,0,1551,16],[33,0,1551,23],[36,0,1551,28],[40,0,1551,49],[41,0,1551,50],[44,0,1551,53],[45,0,1551,54],[49,0,1551,58],[50,0,1551,76],[51,0,1551,77]],[[20,0,1552,10],[24,0,1552,14],[31,0,1552,21],[35,0,1552,25],[39,0,1552,29],[43,0,1552,33],[49,0,1552,39],[53,0,1552,43],[60,0,1552,50],[61,0,1552,51],[78,0,1552,68],[80,0,1552,70]],[[24,0,1553,12],[32,0,1553,20],[33,0,1553,21],[37,0,1553,25],[38,0,1553,26],[45,0,1553,33],[46,0,1553,34],[63,0,1553,51],[64,0,1553,52],[68,0,1553,56],[69,0,1553,57],[70,0,1553,58]],[[21,0,1554,11]],[[20,0,1555,10],[77,0,1555,67]],[[17,0,1556,9]],[[13,0,1558,7]],[[8,0,1559,4],[9,0,1559,5],[10,0,1559,6],[11,0,1559,7]],[[8,0,1561,4],[15,0,1561,11],[23,0,1561,19],[24,0,1561,20]],[[4,0,1562,2],[5,0,1562,3]],[[4,0,1564,2]],[],[],[[7,0,1567,5]],[[4,0,1568,12],[44,0,1568,52],[45,0,1569,4],[49,0,1569,11],[51,0,1570,4],[74,0,1570,50],[76,0,1570,52]],[[8,0,1572,4],[61,0,1572,57]],[[8,0,1573,4],[12,0,1573,8],[22,0,1573,18],[25,0,1573,48],[27,0,1573,50],[28,0,1573,51]],[[8,0,1574,4],[14,0,1574,10],[28,0,1574,24],[31,0,1574,54],[33,0,1574,56],[34,0,1574,57]],[[8,0,1576,4],[116,0,1576,112]],[[8,0,1578,4],[30,0,1578,26]],[[8,0,1579,4],[13,0,1579,9],[19,0,1579,15],[20,0,1579,16],[23,0,1579,19],[25,0,1579,21],[30,0,1579,26],[31,0,1579,27],[35,0,1579,31],[41,0,1579,37],[42,0,1579,38],[49,0,1579,45],[50,0,1579,46],[54,0,1579,50],[55,0,1579,51],[57,0,1579,53]],[[12,0,1580,6],[39,0,1580,33]],[[12,0,1581,6],[16,0,1581,10],[36,0,1581,30],[40,0,1581,34],[60,0,1581,54],[61,0,1581,55],[67,0,1581,61],[70,0,1581,64],[71,0,1581,65],[73,0,1581,67]],[[16,0,1582,8],[22,0,1582,14],[41,0,1582,33],[44,0,1582,69],[64,0,1582,89],[65,0,1582,90],[69,0,1582,94],[70,0,1582,95],[77,0,1582,102],[78,0,1582,103],[80,0,1582,105],[81,0,1582,106],[88,0,1582,113],[89,0,1582,114],[93,0,1582,118],[98,0,1582,123],[101,0,1582,126],[102,0,1582,127],[103,0,1582,128]],[[16,0,1584,8],[20,0,1584,12],[39,0,1584,31],[41,0,1584,33]],[[20,0,1585,10],[34,0,1585,24],[35,0,1585,25],[38,0,1585,28],[39,0,1585,29],[42,0,1585,32],[47,0,1585,37],[48,0,1585,38]],[[17,0,1586,9]],[[21,0,1586,15]],[[20,0,1587,10],[30,0,1587,20],[31,0,1587,21],[34,0,1587,24],[35,0,1587,25],[38,0,1587,28],[43,0,1587,33],[44,0,1587,34]],[[17,0,1588,9]],[[13,0,1589,7]],[[17,0,1589,13]],[[16,0,1590,8],[26,0,1590,18],[29,0,1590,21],[33,0,1590,25],[34,0,1590,26]],[[13,0,1591,7]],[[9,0,1592,5]],[[8,0,1595,4],[15,0,1595,11]],[[12,0,1596,6],[22,0,1596,16]],[[12,0,1597,6],[26,0,1597,20]],[[9,0,1598,37],[10,0,1598,38]],[[4,0,1599,2],[5,0,1599,3]],[[4,0,1601,2]],[],[],[],[],[],[],[[7,0,1608,5]],[[4,0,1609,12],[16,0,1609,24],[17,0,1609,25],[22,0,1609,42]],[[8,0,1610,4],[15,0,1610,11],[19,0,1610,15],[20,0,1610,16],[25,0,1610,21],[26,0,1610,22],[32,0,1610,28],[34,0,1610,30],[35,0,1610,31],[36,0,1610,32],[40,0,1610,36],[41,0,1611,6],[45,0,1611,10],[46,0,1611,11],[47,0,1611,12],[48,0,1611,13],[49,0,1612,5],[50,0,1612,6]],[[4,0,1613,2],[5,0,1613,3]],[[1,0,1614,1]],[[0,0,1617,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,1630,3]],[[0,0,1631,0],[6,0,1631,6],[13,0,1631,13],[27,0,1631,27]],[[4,0,1635,2],[16,0,1635,21],[19,0,1635,48]],[[8,0,1635,21],[16,0,1635,24],[19,0,1635,21],[22,0,1635,24],[23,0,1635,48]],[[8,0,1633,9],[29,0,1633,25],[32,0,1633,47],[34,0,1633,49],[35,0,1633,50]],[[4,0,1636,2],[5,0,1636,3]],[[4,0,1638,2],[55,0,1638,53]],[[4,0,1639,2],[10,0,1639,8],[11,0,1639,9],[19,0,1639,17],[20,0,1639,21],[29,0,1639,41],[31,0,1639,43],[35,0,1639,55]],[[8,0,1640,4],[14,0,1640,10],[17,0,1640,13],[20,0,1640,16],[30,0,1640,26],[31,0,1640,27],[40,0,1640,36],[42,0,1640,38],[46,0,1640,42],[47,0,1640,69],[48,0,1640,70]],[[8,0,1641,4],[15,0,1641,11],[19,0,1641,15],[23,0,1641,19],[24,0,1641,20],[27,0,1641,23],[28,0,1641,24],[29,0,1641,25]],[[4,0,1642,2],[5,0,1642,3]],[[4,0,1644,2],[59,0,1644,57]],[[4,0,1645,2],[8,0,1645,6],[13,0,1645,11]],[[8,0,1646,4],[15,0,1646,11],[20,0,1646,16],[21,0,1646,17],[25,0,1646,21],[26,0,1646,22],[29,0,1646,25],[31,0,1646,27],[34,0,1646,30],[38,0,1646,34],[39,0,1646,35],[55,0,1646,51],[56,0,1646,52],[57,0,1646,53]],[[4,0,1647,2],[5,0,1647,3]],[[4,0,1649,2],[90,0,1649,88]],[[4,0,1650,2],[12,0,1650,10]],[[8,0,1651,4],[15,0,1651,11],[19,0,1651,15],[20,0,1651,16],[27,0,1651,23],[28,0,1651,27],[32,0,1651,31],[33,0,1651,32],[38,0,1651,37],[39,0,1651,38],[40,0,1651,39],[41,0,1651,40]],[[4,0,1652,2],[5,0,1652,3]],[[4,0,1654,2],[9,0,1654,7],[10,0,1654,8],[19,0,1654,37],[21,0,1654,39],[26,0,1654,59],[28,0,1654,61],[33,0,1654,75]],[[8,0,1655,4],[12,0,1655,8],[13,0,1655,9],[29,0,1655,25],[30,0,1655,26],[34,0,1655,30],[35,0,1655,31],[40,0,1655,36],[41,0,1655,37],[50,0,1655,46],[52,0,1655,48],[57,0,1655,53],[59,0,1655,55],[64,0,1655,60],[65,0,1655,61],[66,0,1655,62],[67,0,1655,63]],[[8,0,1656,4],[15,0,1656,11],[19,0,1656,15],[20,0,1656,16]],[[4,0,1657,2],[5,0,1657,3]],[[4,0,1659,2],[11,0,1659,9],[12,0,1659,10],[21,0,1659,39],[23,0,1659,41],[35,0,1659,72]],[[8,0,1660,4],[12,0,1660,8],[13,0,1660,9],[29,0,1660,25],[30,0,1660,26],[34,0,1660,30],[35,0,1660,31],[42,0,1660,38],[43,0,1660,39],[52,0,1660,48],[54,0,1660,50],[66,0,1660,62],[67,0,1660,63],[68,0,1660,64],[69,0,1660,65]],[[8,0,1661,4],[15,0,1661,11],[19,0,1661,15],[20,0,1661,16]],[[4,0,1662,2],[5,0,1662,3]],[[4,0,1664,2],[9,0,1664,7],[10,0,1664,8],[16,0,1664,22]],[[8,0,1665,4],[12,0,1665,8],[13,0,1665,9],[29,0,1665,25],[30,0,1665,26],[34,0,1665,30],[35,0,1665,31],[40,0,1665,36],[41,0,1665,37],[47,0,1665,43],[48,0,1665,44],[49,0,1665,45],[50,0,1665,46]],[[8,0,1666,4],[15,0,1666,11],[19,0,1666,15],[20,0,1666,16]],[[4,0,1667,2],[5,0,1667,3]],[[4,0,1669,2],[15,0,1669,13],[16,0,1669,14],[22,0,1669,28]],[[8,0,1670,4],[12,0,1670,8],[13,0,1670,9],[29,0,1670,25],[30,0,1670,26],[34,0,1670,30],[35,0,1670,31],[46,0,1670,42],[47,0,1670,43],[53,0,1670,49],[54,0,1670,50],[55,0,1670,51],[56,0,1670,52]],[[8,0,1671,4],[15,0,1671,11],[19,0,1671,15],[20,0,1671,16]],[[4,0,1672,2],[5,0,1672,3]],[[4,0,1677,2],[11,0,1677,9],[12,0,1677,10],[20,0,1677,46],[22,0,1677,48],[25,0,1677,51],[36,0,1677,73]],[[8,0,1678,4],[12,0,1678,8],[20,0,1678,16],[22,0,1678,18]],[[12,0,1679,6],[16,0,1679,10],[17,0,1679,11],[33,0,1679,27],[34,0,1679,28],[38,0,1679,32],[39,0,1679,33],[46,0,1679,40],[47,0,1679,41],[55,0,1679,49],[56,0,1679,50],[57,0,1679,51],[58,0,1679,52]],[[9,0,1680,5]],[[13,0,1680,11],[17,0,1680,15],[28,0,1680,26],[30,0,1680,28]],[[12,0,1681,6],[16,0,1681,10],[17,0,1681,11],[33,0,1681,27],[34,0,1681,28],[38,0,1681,32],[39,0,1681,33],[46,0,1681,40],[47,0,1681,41],[50,0,1681,44],[61,0,1681,55],[62,0,1681,56],[63,0,1681,57],[64,0,1681,58]],[[9,0,1682,5]],[[8,0,1683,4],[15,0,1683,11],[19,0,1683,15],[20,0,1683,16]],[[4,0,1684,2],[5,0,1684,3]],[[4,0,1689,2],[14,0,1689,12],[15,0,1689,13],[23,0,1689,49],[25,0,1689,51],[28,0,1689,54],[39,0,1689,76]],[[8,0,1690,4],[12,0,1690,8],[20,0,1690,16],[22,0,1690,18]],[[12,0,1691,6],[16,0,1691,10],[17,0,1691,11],[33,0,1691,27],[34,0,1691,28],[38,0,1691,32],[39,0,1691,33],[49,0,1691,43],[50,0,1691,44],[58,0,1691,52],[59,0,1691,53],[60,0,1691,54],[61,0,1691,55]],[[9,0,1692,5]],[[13,0,1692,11],[17,0,1692,15],[28,0,1692,26],[30,0,1692,28]],[[12,0,1693,6],[16,0,1693,10],[17,0,1693,11],[33,0,1693,27],[34,0,1693,28],[38,0,1693,32],[39,0,1693,33],[49,0,1693,43],[50,0,1693,44],[53,0,1693,47],[64,0,1693,58],[65,0,1693,59],[66,0,1693,60],[67,0,1693,61]],[[9,0,1694,5]],[[8,0,1695,4],[15,0,1695,11],[19,0,1695,15],[20,0,1695,16]],[[4,0,1696,2],[5,0,1696,3]],[[4,0,1701,2],[9,0,1701,7],[10,0,1701,8],[18,0,1701,44],[20,0,1701,46],[23,0,1701,49],[34,0,1701,71]],[[8,0,1702,4],[12,0,1702,8],[20,0,1702,16],[22,0,1702,18]],[[12,0,1703,6],[16,0,1703,10],[17,0,1703,11],[33,0,1703,27],[34,0,1703,28],[38,0,1703,32],[39,0,1703,33],[44,0,1703,38],[45,0,1703,39],[53,0,1703,47],[54,0,1703,48],[55,0,1703,49],[56,0,1703,50]],[[9,0,1704,5]],[[13,0,1704,11],[17,0,1704,15],[28,0,1704,26],[30,0,1704,28]],[[12,0,1705,6],[16,0,1705,10],[17,0,1705,11],[33,0,1705,27],[34,0,1705,28],[38,0,1705,32],[39,0,1705,33],[44,0,1705,38],[45,0,1705,39],[48,0,1705,42],[59,0,1705,53],[60,0,1705,54],[61,0,1705,55],[62,0,1705,56]],[[9,0,1706,5]],[[8,0,1707,4],[15,0,1707,11],[19,0,1707,15],[20,0,1707,16]],[[4,0,1708,2],[5,0,1708,3]],[[4,0,1713,2],[13,0,1713,11],[14,0,1713,12],[22,0,1713,48],[24,0,1713,50],[27,0,1713,53],[38,0,1713,75]],[[8,0,1714,4],[12,0,1714,8],[20,0,1714,16],[22,0,1714,18]],[[12,0,1715,6],[16,0,1715,10],[17,0,1715,11],[33,0,1715,27],[34,0,1715,28],[38,0,1715,32],[39,0,1715,33],[48,0,1715,42],[49,0,1715,43],[57,0,1715,51],[58,0,1715,52],[59,0,1715,53],[60,0,1715,54]],[[9,0,1716,5]],[[13,0,1716,11],[17,0,1716,15],[28,0,1716,26],[30,0,1716,28]],[[12,0,1717,6],[16,0,1717,10],[17,0,1717,11],[33,0,1717,27],[34,0,1717,28],[38,0,1717,32],[39,0,1717,33],[48,0,1717,42],[49,0,1717,43],[52,0,1717,46],[63,0,1717,57],[64,0,1717,58],[65,0,1717,59],[66,0,1717,60]],[[9,0,1718,5]],[[8,0,1719,4],[15,0,1719,11],[19,0,1719,15],[20,0,1719,16]],[[4,0,1720,2],[5,0,1720,3]],[[1,0,1722,1]]],"sourcesContent":["import {combineLatest, forkJoin, from, Observable, of} from 'rxjs';\r\n\r\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\r\nimport {\r\n  collection,\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  endAt,\r\n  endBefore,\r\n  FieldPath,\r\n  Firestore,\r\n  getDocs,\r\n  limit,\r\n  limitToLast,\r\n  orderBy,\r\n  OrderByDirection,\r\n  query,\r\n  Query,\r\n  QueryConstraint,\r\n  QuerySnapshot,\r\n  startAfter,\r\n  startAt,\r\n  where,\r\n  WhereFilterOp,\r\n  writeBatch,\r\n  WriteBatch\r\n} from 'firebase/firestore';\r\n\r\nimport {\r\n  addCreatedDate,\r\n  addDataToItem,\r\n  addModifiedDate,\r\n  convertTimestampToDate,\r\n  getDocRefWithId,\r\n  getRefFromPath,\r\n  getSubCollection\r\n} from './helpers';\r\nimport {SubCollectionQuery} from './sub-collection-query';\r\nimport {BaseFirestoreWrapper, FirestoreErrorExt} from './interfaces';\r\nimport {FireItem, FirestoreItem, FirestoreMetadata} from './models/firestoreItem';\r\nimport {SubCollectionWriter} from './sub-collection-writer';\r\nimport {moveItemInArray, transferArrayItem} from './drag-utils';\r\n\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport enum DocNotExistAction {\r\n  /** returns a null object */\r\n  RETURN_NULL,\r\n\r\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n  RETURN_ALL_BUT_DATA,\r\n\r\n  /** do not return at all until it does exist */\r\n  FILTER,\r\n\r\n  /** return doc not found error 'doc_not_found' */\r\n  THROW_DOC_NOT_FOUND,\r\n}\r\n\r\n/** Used internally */\r\ninterface CurrentDocSubCollectionSplit {\r\n  /** contains the document that is considered the current */\r\n  currentDoc: FireItem<{}>;\r\n  /** sub collections of current document */\r\n  subCollections: { [index: string]: any };\r\n}\r\n\r\n\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n\r\n  /**\r\n   * Constructor for AngularFirestoreWrapper\r\n   *\r\n   * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n   * @param defaultDocId The default name given to a subCollection document when no name is given\r\n   */\r\n  constructor(private fs: BaseFirestoreWrapper, public defaultDocId: string = 'data') {\r\n  }\r\n\r\n  /* ----------  LISTEN -------------- */\r\n\r\n  /**\r\n   *\r\n   * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n   *\r\n   * Triggers for any change in any document that is listened to.\r\n   *\r\n   *\r\n   * E.x:\r\n   *      const subCollectionQueries: SubCollectionQuery[] = [\r\n   *         { name: 'data' },\r\n   *         { name: 'secure' },\r\n   *         { name: 'variants' },\r\n   *         { name: 'images',\r\n   *           queryFn: ref => ref.orderBy('index'),\r\n   *           collectionWithNames: [\r\n   *             { name: 'secure'}\r\n   *           ]\r\n   *         },\r\n   *     ];\r\n   *\r\n   *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n   *\r\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n   * All logic is in listenForDocDeepRecursiveHelper$.\r\n   *\r\n   * @param docRef - a docRef with potential queryFn\r\n   * @param subCollectionQueries - see example\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  public listenForDoc$<T = FirestoreItem | DocumentData>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA): Observable<FireItem<T>> {\r\n\r\n    return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(\r\n      map(data => data as FireItem<T>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n   *\r\n   * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n   * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n   *\r\n   *\r\n   *    Example usage.\r\n   *\r\n   *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n   *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n   *\r\n   *    constructor(private ngFireStore: AngularFirestore) {\r\n   *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n   *    }\r\n   *\r\n   *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n   *    }\r\n   *\r\n   *    If you do not wish to listen for changes and only care about getting the values once\r\n   *\r\n   *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n   *          take(1)\r\n   *        );\r\n   *    }\r\n   *\r\n   * @param _query the collectionRef which will be listened to\r\n   * @param subCollectionQueries\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   */\r\n  public listenForCollection$<T = FirestoreItem | DocumentData>(\r\n    _query: Query<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.listenForCollectionSimple$<T>(_query).pipe(\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n\r\n        if (items == null || items.length === 0) {\r\n          return of([]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(items);\r\n        }\r\n\r\n        const collectionListeners: Array<Observable<any>> = [];\r\n\r\n        items.forEach(item => {\r\n\r\n          const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n\r\n          collectionListeners.push(collectionListener);\r\n        });\r\n\r\n        /* Finally return the combined collection listeners */\r\n        return combineLatest(collectionListeners);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n   */\r\n  public listenForCollectionRecursively$<T = FirestoreItem | DocumentData>(\r\n    collectionPath: string,\r\n    collectionKey: string,\r\n    orderKey?: string): Observable<any> {\r\n\r\n    // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n    const collectionQuery = new QueryContainer<T>(getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>);\r\n    if (orderKey != null) {\r\n      collectionQuery.orderBy(orderKey);\r\n    }\r\n\r\n    return this.listenForCollectionSimple$<T>(collectionQuery.query).pipe(\r\n      mergeMap((items: FireItem<T>[]) => {\r\n\r\n        if (items.length <= 0) {\r\n          return of([]);\r\n        } // TODO  perhaps make this throw an error so that we can skip it\r\n\r\n        // if (items.length <= 0) { throwError('No more '); }\r\n\r\n        const nextLevelObs: Array<Observable<FireItem<T>>> = [];\r\n\r\n        for (const item of items) {\r\n\r\n          // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n          const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey);  // one level deeper\r\n\r\n          const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(\r\n            map((nextLevelItems: Array<FireItem<T>>) => {\r\n              if (nextLevelItems.length > 0) {\r\n                return {...item, [collectionKey]: nextLevelItems} as FireItem<T>;\r\n              } else {\r\n                return {...item} as FireItem<T>;\r\n              }  // dont include an empty array\r\n            }),\r\n          );\r\n          nextLevelObs.push(nextLevelItems$);\r\n        }\r\n\r\n        return combineLatest(nextLevelObs).pipe(\r\n          tap(val => console.log(val))\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /* ---------- ADD -------------- */\r\n\r\n  /**\r\n   * Add document to firestore and split it up into sub collection.\r\n   *\r\n   * @param data the data to be saved\r\n   * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n   * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n   * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n   * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n   */\r\n  public add$<T = FirestoreItem>(\r\n    data: T,\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionWriters: SubCollectionWriter[] = [],\r\n    isAddDates: boolean = true,\r\n    docId?: string): Observable<FireItem<T>> {\r\n\r\n    if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/invalid-sub-collection-writers',\r\n        code: 'unknown',\r\n        message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n        stack: '',\r\n        data,\r\n        subCollectionWriters,\r\n        docId\r\n      };\r\n\r\n      throw error;\r\n    }\r\n\r\n    let currentDoc;\r\n    let subCollections: { [index: string]: any; } = {};\r\n\r\n    /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n    * Each item in the array will be saved as a map with the key being the array index\r\n    * We still want the return value of this function to be as an array non as a map\r\n    */\r\n    if (Array.isArray(data) && docId) {\r\n      currentDoc = data;\r\n    } else {\r\n      const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n      currentDoc = split.currentDoc;\r\n      subCollections = split.subCollections;\r\n    }\r\n\r\n    return this.addSimple$<T>(currentDoc as T, collectionRef, isAddDates, docId).pipe(\r\n      /* Add Sub/sub collections*/\r\n      mergeMap((currentData: FireItem<T>) => {\r\n\r\n        const subWriters: Array<Observable<any>> = [];\r\n\r\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n          let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n          let subDocId: string | undefined;\r\n\r\n          if (subCollectionWriters) {\r\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n          }\r\n\r\n          const subCollectionRef: CollectionReference = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n\r\n          /* Handle array and object differently\r\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n          * If a docId is given we should save it using that docId under a single doc.\r\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n          if (Array.isArray(subCollectionValue)) {\r\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n\r\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n              const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n                map(item => {\r\n                  // return {[key]: item};\r\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n                })\r\n              );\r\n              subWriters.push(subWriter);\r\n\r\n            } else { /* docId is undefined so we save each object in the array separate */\r\n              subCollectionValue.forEach((arrayValue: FireItem<{}>) => {\r\n\r\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(\r\n                  map(item => {\r\n                    // return {[key]: [item]};\r\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                    return {key: subCollectionKey, value: [item]};\r\n                  })\r\n                );\r\n\r\n                subWriters.push(subWriter);\r\n              });\r\n            }\r\n          } else { /* Not an array so a single Object*/\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n\r\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n            const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n              map(item => {\r\n                // return {[key]: item};\r\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n              })\r\n            );\r\n\r\n            subWriters.push(subWriter);\r\n          }\r\n        } /* end of iteration */\r\n\r\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n\r\n          /* the pipe only matters for the return value not for writing the data */\r\n          return combineLatest(subWriters).pipe(\r\n            // tap(sub => console.log(sub)),\r\n\r\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n            // TODO firestore.\r\n\r\n            map((docDatas: Array<Map<string, []>>) => { /* List of sub docs*/\r\n              const groupedData = {};\r\n\r\n              docDatas.forEach((doc: { [index: string]: any }) => { /* iterate over each doc */\r\n\r\n                const key = doc.key;\r\n                const value = doc.value;\r\n\r\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                // @ts-ignore\r\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                  // @ts-ignore\r\n                  (groupedData[key] as Array<any>).push(value[0]);\r\n                } else {\r\n                  // @ts-ignore\r\n                  groupedData[key] = value;\r\n                }\r\n              });\r\n\r\n              return groupedData as T;\r\n            }),\r\n\r\n            // tap(groupedData => console.log(groupedData)),\r\n\r\n            map((groupedData: T) => {\r\n              return {...currentData, ...groupedData} as T;\r\n            }),\r\n            // tap(d => console.log(d)),\r\n          );\r\n        } else {\r\n          return of(currentData);\r\n        }\r\n      })\r\n    ).pipe(\r\n      // @ts-ignore\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /* ----------  EDIT -------------- */\r\n\r\n  /**\r\n   * Update document and child documents\r\n   *\r\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n   * so its possible to introduce spelling mistakes on attributes and so forth\r\n   *\r\n   * @param data the data that is to be added or updated { [field: string]: any }\r\n   * @param docRef DocumentReference to be updated\r\n   * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n   * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n   */\r\n  public update$<A extends { [field: string]: any }>(data: Partial<A>,\r\n                                                     docRef: DocumentReference,\r\n                                                     subCollectionWriters: SubCollectionWriter[] = [],\r\n                                                     isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n      return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n    }\r\n\r\n    const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Update/ add data to the firestore documents\r\n   *\r\n   * @param docRefs list of DocumentReference to be have their data updated\r\n   * @param data data to add/update\r\n   * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n   */\r\n  public updateMultiple$<A>(docRefs: DocumentReference[], data: A, isAddModifiedDate: boolean = true): Observable<void> {\r\n    // const batch = this.fs.firebaseApp.firestore().batch();\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.update(docRef, data);\r\n    });\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /**\r\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n   * and then delete the old doc.\r\n   * returns the new doc once the delete is done.\r\n   *\r\n   * @param docRef DocumentReference to have its id changed\r\n   * @param newId the new id\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n   */\r\n  public changeDocId$<T>(docRef: DocumentReference,\r\n                         newId: string,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         subCollectionWriters?: SubCollectionWriter[]): Observable<FireItem<T>> {\r\n\r\n    if (subCollectionWriters == null) {\r\n      subCollectionWriters = subCollectionQueries as SubCollectionWriter[];\r\n    }\r\n\r\n    const collectionRef: CollectionReference = docRef.parent;\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      map((oldData: T) => this.cleanExtrasFromData(oldData, subCollectionWriters)),\r\n      switchMap((oldData: T) => {\r\n        return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe( /* add the data under id*/\r\n          mergeMap(newData => { /* delete the old doc */\r\n            return this.delete$(docRef, subCollectionQueries).pipe(\r\n              map(() => newData) /* keep the new data */\r\n            );\r\n          }),\r\n        );\r\n      }),\r\n      catchError(err => {\r\n        console.log('Failed to Change Doc Id: ' + err);\r\n        throw err;\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n  /* Move Item in Array */\r\n\r\n\r\n  /**\r\n   * Moved item within the same list so we need to update the index of all items in the list;\r\n   * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n   * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   */\r\n  public moveItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                       fromIndex: number,\r\n                                                       toIndex: number,\r\n                                                       useCopy = false): Observable<void> {\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n      return of();\r\n    }\r\n\r\n    if (items[0]?.firestoreMetadata == null) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n        code: 'not-found',\r\n        message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n      };\r\n      throw error;\r\n    }\r\n\r\n    const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n   * Not called directly.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   * @protected\r\n   */\r\n  protected getBatchFromMoveItemInIndexedDocs<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                           fromIndex: number,\r\n                                                                           toIndex: number,\r\n                                                                           useCopy = false): WriteBatch {\r\n\r\n    const lowestIndex = Math.min(fromIndex, toIndex);\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n      return batch;\r\n    }\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    moveItemInArray<A>(usedItems, fromIndex, toIndex);\r\n\r\n    const listSliceToUpdate: Array<FireItem<A>> = usedItems.slice(lowestIndex);\r\n\r\n    let i = lowestIndex;\r\n    for (const item of listSliceToUpdate) {\r\n      if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n        item.index = i;\r\n      }\r\n      const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n      batch.update(ref, {index: i});\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indexToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                indexToDelete: number,\r\n                                                                subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    const itemToDelete = usedItems[indexToDelete];\r\n\r\n    // get the delete batch that also contains any sub collections of the item\r\n    return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n      map((batch) => {\r\n        // sort and remove the item from the usedItems and then add the update index to the batch\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        usedItems.splice(indexToDelete, 1);\r\n\r\n        this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch);\r\n\r\n        return batch;\r\n      }),\r\n\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indicesToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemsInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                 indicesToDelete: number[],\r\n                                                                 subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                 useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    usedItems.sort(item => item.index); // make sure array is sorted by index\r\n\r\n    const itemsToDelete = usedItems.filter((item, i) => {\r\n      return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n    });\r\n\r\n    // iterate in reverse so as to not change the indices,\r\n    // the indices to delete must also be sorted\r\n    indicesToDelete.sort();\r\n    for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n      usedItems.splice(indicesToDelete[i], 1);\r\n    }\r\n\r\n    const docRefsObs$: Observable<DocumentReference[]>[] = [];\r\n\r\n    // get the docRefs for items to be deleted including the ones in the subCollections\r\n    itemsToDelete.forEach(itemToDelete => {\r\n\r\n      const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n        take(1)\r\n      );\r\n      docRefsObs$.push(obs$);\r\n    });\r\n\r\n\r\n    return forkJoin(docRefsObs$).pipe(\r\n      take(1),\r\n      map((listOfDocRefs) => {\r\n        // concat all the separate docRefs lists into one array of docRefs\r\n        let docRefs: DocumentReference[] = [];\r\n\r\n        listOfDocRefs.forEach(refs => {\r\n          docRefs = docRefs.concat(refs);\r\n        });\r\n\r\n        return docRefs;\r\n      }),\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      map((batch: WriteBatch) => this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch)),\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Run this on collections with a fixed order using an index: number attribute;\r\n   * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n   * Basically needs to be run after a delete\r\n   *\r\n   * @param items\r\n   * @param batch\r\n   * @protected\r\n   */\r\n  protected getBatchFromUpdateIndexFromListOfDocs<A extends { index: number }>(\r\n    items: Array<FireItem<A>>,\r\n    batch: WriteBatch = writeBatch(this.fs.firestore)\r\n  ): WriteBatch {\r\n\r\n    items.forEach((item, index) => {\r\n      if (item.index !== index) {\r\n        item.index = index; // this is just so that the given array's index is also updated immediately\r\n        const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n        batch.update(ref, {index});\r\n      }\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  public transferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): Observable<void> {\r\n\r\n    const batch: WriteBatch = this.getBatchFromTransferItemInIndexedDocs(previousArray,\r\n      currentArray,\r\n      previousIndex,\r\n      currentIndex,\r\n      currentArrayName,\r\n      additionalDataUpdateOnMovedItem,\r\n      isUpdateModifiedDateOnMovedItem,\r\n      useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /* ----------  DELETE -------------- */\r\n\r\n  /**\r\n   * Delete Document and child documents\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public delete$(docRef: DocumentReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<void> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      return this.fs.delete(docRef);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      switchMap((docRefList: DocumentReference<DocumentData>[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(); }\r\n      //   else { throw err; }\r\n      // }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param batch\r\n   */\r\n  public getDeleteBatch$(docRef: DocumentReference,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         batch: WriteBatch = writeBatch(this.fs.firestore)): Observable<WriteBatch> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      batch.delete(docRef);\r\n      return of(batch);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public deleteMultipleByPaths$(docPaths: string[]): Observable<any> {\r\n    const docRefs: DocumentReference[] =\r\n      docPaths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n\r\n    return this.deleteMultipleSimple$(docRefs);\r\n  }\r\n\r\n  /**\r\n   * Delete Documents and child documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteMultiple$(docRefs: DocumentReference[], subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n\r\n    const deepDocRefs$: Array<Observable<any>> = [];\r\n\r\n    docRefs.forEach(docRef => {\r\n      const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n      deepDocRefs$.push(docRefs$);\r\n    });\r\n\r\n    return combineLatest(deepDocRefs$).pipe(\r\n      // tap(lists => console.log(lists)),\r\n      map((lists: any[]) => {\r\n        let mainDocRefList: DocumentReference[] = [];\r\n        lists.forEach(list => {\r\n          mainDocRefList = mainDocRefList.concat(list);\r\n        });\r\n        return mainDocRefList;\r\n      }),\r\n      // tap(lists => console.log(lists)),\r\n      switchMap((docRefList: DocumentReference[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete all documents and sub collections as specified in subCollectionQueries.\r\n   * Not very efficient and causes a lot of db reads.\r\n   * If possible use the firebase CLI or the console instead when deleting large collections.\r\n   *\r\n   * @param collectionRef\r\n   * @param subCollectionQueries\r\n   */\r\n  public deleteCollection$(collectionRef: CollectionReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(\r\n      switchMap(docRefs => this.deleteMultiple$(docRefs))\r\n    ).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete firestore document by path\r\n   * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n   *\r\n   * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteDocByPath$(docPath: string, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    const docRef = getRefFromPath(docPath, this.fs.firestore) as DocumentReference;\r\n    return this.delete$(docRef, subCollectionQueries);\r\n  }\r\n\r\n  /**\r\n   * Delete document by FirestoreItem\r\n   *\r\n   * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n   *\r\n   * @param item FirestoreItem to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteItem$<T>(item: FireItem<T>, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n\r\n    return this.deleteMultipleSimple$(docRefs).pipe(\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /* ---- OTHER ---- */\r\n\r\n  /**\r\n   * clean FirestoreBaseItem properties from the data.\r\n   * Usually done if you wish to save the data to firestore, since some FirestoreBaseItem properties are of non allowed types.\r\n   *\r\n   * Goes through each level and removes DbItemExtras\r\n   * In case you wish to save the data\r\n   *\r\n   * @param data data to be cleaned, either single item or an array of items\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to locate them\r\n   * @param additionalFieldsToRemove\r\n   */\r\n\r\n  cleanExtrasFromData<T>(data: T & DocumentData,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): T;\r\n\r\n  cleanExtrasFromData<T>(datas: Array<T & DocumentData>,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): Array<T>;\r\n\r\n  public cleanExtrasFromData<T>(data: T & DocumentData | Array<T & DocumentData>,\r\n                                subCollectionWriters: SubCollectionWriter[] = [],\r\n                                additionalFieldsToRemove: string[] = []): T | Array<T> {\r\n\r\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n    // const dataToBeCleaned = data;\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n      const cleanDatas: Array<T> = [];\r\n\r\n      data.forEach(d => {\r\n        cleanDatas.push(\r\n          this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove) as T\r\n        );\r\n      });\r\n\r\n      return cleanDatas;\r\n\r\n    } else {\r\n      return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove) as T;\r\n    }\r\n  }\r\n\r\n\r\n  /* ----------  PROTECTED METHODS -------------- */\r\n\r\n  /**\r\n   * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n   * and also allows for to choose action to take when document does not exist\r\n   *\r\n   * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n   *\r\n   * @param docRef DocumentReference that will be listened to\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  protected listenForDocSimple$<T>(docRef: DocumentReference<any>,\r\n                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA\r\n  ): Observable<FireItem<T>> {\r\n\r\n    return this.fs.doc(docRef).pipe(\r\n      tap((snapshot: DocumentSnapshot) => {\r\n        if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n          const error: FirestoreErrorExt = {\r\n            name: 'FirebaseErrorExt',\r\n            code: 'not-found',\r\n            message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n            docRef\r\n          };\r\n          throw error;\r\n        }\r\n      }),\r\n\r\n      filter((snapshot: DocumentSnapshot) => {\r\n        return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n      }),\r\n\r\n      map((snapshot: DocumentSnapshot) => {\r\n\r\n        console.log(snapshot.exists());\r\n\r\n        if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n          const data = snapshot.data() as T;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: snapshot.id,\r\n            ref: snapshot.ref as DocumentReference<T>,\r\n            path: docRef.path,\r\n            isExists: snapshot.exists(),\r\n            snapshotMetadata: snapshot.metadata\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n          return null;\r\n        }\r\n        return null;\r\n      }),\r\n      map((data) => {\r\n        if (data != null) {\r\n          return convertTimestampToDate(data as FireItem<{}>);\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    ) as Observable<FireItem<T>>;\r\n  }\r\n\r\n  /**\r\n   * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n   * Used internally, please use listenForCollection$() instead.\r\n   *\r\n   * @param _query the Query which will be listened to\r\n   * @protected\r\n   */\r\n  protected listenForCollectionSimple$<T>(_query: Query<T>): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.fs.collection(_query).pipe(\r\n      map((snap: QuerySnapshot<T>) => {\r\n        return snap.docs.map(snapshot => {\r\n          const data = snapshot.data() as T;\r\n\r\n          const id = snapshot.id;\r\n          const ref = snapshot.ref as DocumentReference<T>;\r\n          const path = ref.path;\r\n          const snapshotMetadata = snapshot.metadata;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id,\r\n            path,\r\n            ref,\r\n            snapshotMetadata,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        });\r\n      }),\r\n      map((datas: Array<FireItem<T>>) => datas.map(data => {\r\n        convertTimestampToDate(data);\r\n        return data;\r\n      }))\r\n    ) as Observable<Array<FireItem<T>>>;\r\n  }\r\n\r\n  /**\r\n   * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n   *\r\n   * Please use listenForDoc or listenForCollection.\r\n   *\r\n   * @param item\r\n   * @param subCollectionQueries\r\n   * @protected\r\n   */\r\n  protected listenForCollectionsDeep<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<FireItem<T>[]> {\r\n\r\n    if (item == null) {\r\n      return of([item]);\r\n    }\r\n    if (subCollectionQueries.length <= 0) {\r\n      return of([item]);\r\n    }\r\n\r\n    const collectionListeners: Array<Observable<any>> = [];\r\n\r\n    /* Iterate over each sub collection we have given and create collection listeners*/\r\n    subCollectionQueries.forEach(subCollectionQuery => {\r\n\r\n      const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n      if (subCollectionQuery.queryConstraints) {\r\n        queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n        // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      }\r\n      // if (subCollectionQuery.queryFn) {\r\n      //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      // }\r\n\r\n      const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n        // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n        /* Uncomment to see data on each update */\r\n        // tap(d => console.log(d)),\r\n        // filter(docs => docs != null),\r\n        /* Listen For and Add any Potential Sub Docs*/\r\n        // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n        mergeMap((items: FireItem<{}>[]) => {\r\n\r\n          if (!subCollectionQuery.subCollections) {\r\n            return of(items);\r\n          }\r\n\r\n          const docListeners: Array<Observable<any>> = [];\r\n\r\n          items = items.filter(d => d != null); // filter out potential nulls\r\n\r\n          items.forEach((subItem: FireItem<{}>) => {\r\n            const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n            docListeners.push(subDocAndCollections$);\r\n          });\r\n\r\n          if (docListeners.length <= 0) {\r\n            return of([]);\r\n          } /* subCollectionQuery is empty or doesnt exist */\r\n\r\n          return combineLatest(docListeners).pipe(\r\n            // tap(val => console.log(val))\r\n          );\r\n        }), /* End of Listening for sub docs */\r\n        /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n        and we only care about the data. So we remove the array and just make it one object with the\r\n        subCollectionQuery name as key and docs[0] as value */\r\n        map((items: FireItem<{}>[]) => {\r\n          const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n\r\n          if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n            return {[subCollectionQuery.name]: items[0]};\r\n          } else {\r\n            return {[subCollectionQuery.name]: items};\r\n          }\r\n        }),\r\n        // tap(d => console.log(d)),\r\n      );\r\n\r\n      collectionListeners.push(collectionListener);\r\n    });\r\n\r\n    /* Finally return the combined collection listeners*/\r\n    // @ts-ignore\r\n    return combineLatest(collectionListeners).pipe(\r\n      map((collectionDatas: { [collectionKeyName: string]: FireItem<FireItem<{}>>[] }[]) => {\r\n        // map((collectionDatas) => {\r\n        const datasMap: { [field: string]: any } = {};\r\n\r\n        collectionDatas.forEach((collectionData) => {\r\n\r\n          for (const [collectionName, items] of Object.entries(collectionData)) {\r\n            datasMap[collectionName] = items;\r\n          }\r\n        });\r\n        return datasMap;\r\n      }),\r\n\r\n      map((data: DocumentData) => {\r\n        return {...item, ...data} as FireItem<T>;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n   */\r\n  protected listenForDocDeepRecursiveHelper$<T>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable<any> {\r\n\r\n    /* Listen for the docFs*/\r\n    return this.listenForDocSimple$<T>(docRef, actionIfNotExist).pipe(\r\n      mergeMap((item: FireItem<{}>) => {\r\n\r\n        if (item === null) {\r\n          return of(item);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(item);\r\n        }\r\n\r\n        return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A replacement/extension to the AngularFirestoreCollection.add.\r\n   * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n   * the data with the added properties in FirebaseDbItem\r\n   *\r\n   * Used internally\r\n   *\r\n   * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n   * @param collectionRef the CollectionReference where the document should be added\r\n   * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n   * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n   */\r\n  protected addSimple$<T>(data: T, collectionRef: CollectionReference<T>, isAddDates: boolean = true, id?: string):\r\n    Observable<FireItem<T>> {\r\n\r\n    // let dataToBeSaved: A = Object.assign({}, data);\r\n\r\n    let res$: Observable<any>;\r\n\r\n    if (isAddDates) {\r\n      const date = new Date();\r\n      data = addCreatedDate(data, false, date);\r\n      data = addModifiedDate(data, false, date);\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      const docRef: DocumentReference = getDocRefWithId(collectionRef, id);\r\n      res$ = this.fs.set(docRef, data);\r\n    } else {\r\n      res$ = this.fs.add<T>(collectionRef, data);\r\n    }\r\n\r\n    // if (Array.isArray(data) && isAddDates) {\r\n    //   data = data.map(item => {\r\n    //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n    //   })\r\n    // }\r\n\r\n    res$ = res$.pipe(\r\n      // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n      // tap(ref => console.log(ref)),\r\n      // tap(() => console.log(data)),\r\n      map((ref: DocumentReference<T> | undefined) => {\r\n        if (id === undefined && ref) {\r\n\r\n          const path = ref.path;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: ref.id,\r\n            path,\r\n            ref,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else { // if id is defined it means we used docRef.set and ref is undefined\r\n          const path = collectionRef.path + '/' + id;\r\n          ref = getRefFromPath(path, this.fs.firestore) as DocumentReference<T>;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: id as string,\r\n            ref,\r\n            path,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return res$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /** Used internally for updates that doesn't affect child documents */\r\n  protected updateSimple$<A>(data: A, docRef: DocumentReference, isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n    return this.fs.update(docRef, data);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, used by update deep\r\n   */\r\n  protected updateDeepToBatchHelper<A>(data: A,\r\n                                       docRef: DocumentReference,\r\n                                       subCollectionWriters: SubCollectionWriter[] = [],\r\n                                       isAddModifiedDate: boolean = true,\r\n                                       batch?: WriteBatch): WriteBatch {\r\n\r\n    if (batch === undefined) {\r\n      batch = writeBatch(this.fs.firestore);\r\n    }\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n    const currentDoc = split.currentDoc;\r\n    const subCollections = split.subCollections;\r\n\r\n    // console.log(currentDoc, subCollections);\r\n    batch.update(docRef, currentDoc);\r\n\r\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n\r\n      let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n      let subDocId: string | undefined;\r\n\r\n      if (subCollectionWriters) {\r\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n      }\r\n\r\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n\r\n      // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n      const subCollection = getSubCollection(docRef, subCollectionKey);\r\n      const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n\r\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n   * have an index value and a groupName.\r\n   *\r\n   * @param previousArray\r\n   * @param currentArray\r\n   * @param previousIndex\r\n   * @param currentIndex\r\n   * @param currentArrayName\r\n   * @param additionalDataUpdateOnMovedItem\r\n   * @param isUpdateModifiedDateOnMovedItem\r\n   * @param useCopy\r\n   * @protected\r\n   */\r\n  protected getBatchFromTransferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): WriteBatch {\r\n\r\n    let usedPreviousArray: Array<FireItem<A>>;\r\n    let usedCurrentArray: Array<FireItem<A>>;\r\n    if (useCopy) {\r\n      usedPreviousArray = Object.assign([], previousArray);\r\n      usedCurrentArray = Object.assign([], currentArray);\r\n    } else {\r\n      usedPreviousArray = previousArray;\r\n      usedCurrentArray = currentArray;\r\n    }\r\n\r\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (additionalDataUpdateOnMovedItem !== undefined) {\r\n      const movedItem = usedCurrentArray[currentIndex];\r\n      const movedItemRef = movedItem.firestoreMetadata.ref;\r\n\r\n      const data = {...additionalDataUpdateOnMovedItem, groupName: currentArrayName};\r\n\r\n      if (!useCopy) {\r\n        addDataToItem(movedItem, data, true);\r\n      }\r\n\r\n      if (isUpdateModifiedDateOnMovedItem) {\r\n        const date = new Date();\r\n        addModifiedDate(data, true, date);\r\n\r\n        if (!useCopy) {\r\n          addModifiedDate(movedItem, true, date);\r\n        }\r\n      }\r\n      batch.update(movedItemRef, data);\r\n    }\r\n\r\n    const currentArraySliceToUpdate: Array<FireItem<A>> = usedCurrentArray.slice(currentIndex);\r\n    let i = currentIndex;\r\n    for (const item of currentArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    const prevArraySliceToUpdate: Array<FireItem<A>> = usedPreviousArray.slice(previousIndex);\r\n    i = previousIndex;\r\n    for (const item of prevArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete Documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   */\r\n  protected deleteMultipleSimple$(docRefs: DocumentReference[]): Observable<void> {\r\n\r\n    const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  protected getDeleteMultipleSimpleBatch(docRefs: DocumentReference[], batch: WriteBatch = writeBatch(this.fs.firestore)): WriteBatch {\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.delete(docRef);\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n   *\r\n   * @param dbItem the data to be cleaned\r\n   * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n   * @param additionalFieldsToRemove\r\n   */\r\n  protected removeDataExtrasRecursiveHelper<T>(dbItem: T & DocumentData,\r\n                                               subCollectionWriters: SubCollectionWriter[] = [],\r\n                                               additionalFieldsToRemove: string[] = []): T {\r\n\r\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n    const extraPropertyNames: string[] = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n\r\n    /* Current level delete */\r\n    for (const extraPropertyName of extraPropertyNames) {\r\n      delete dbItem[extraPropertyName];\r\n    }\r\n\r\n    subCollectionWriters.forEach(col => {\r\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n\r\n        const docs: FireItem<T>[] = dbItem[col.name];\r\n        docs.forEach((d, i) => {\r\n\r\n          if (col.subCollections) {\r\n            this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n          } else {\r\n            /*  */\r\n            for (const extraPropertyName of extraPropertyNames) {\r\n              delete dbItem[col.name][i][extraPropertyName];\r\n            }\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n        } else {\r\n          for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[col.name][extraPropertyName];\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return dbItem;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n   * Mainly used to delete a docFs and its sub docs\r\n   * @param ref: DocumentReference | CollectionReference\r\n   * @param subCollectionQueries: SubCollectionQuery[]\r\n   */\r\n  protected getDocumentReferencesDeep$(ref: DocumentReference | CollectionReference,\r\n                                       subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    if (ref instanceof DocumentReference) {\r\n      return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n    } else { // CollectionReference\r\n      return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n    }\r\n  }\r\n\r\n  protected getDocumentReferencesFromDocRef$(docRef: DocumentReference,\r\n                                             subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      take(1),\r\n      map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)),\r\n      // tap(pathList => console.log(pathList)),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n      // tap(item => console.log(item)),\r\n    );\r\n  }\r\n\r\n  protected getDocumentReferencesFromCollectionRef$(collectionRef: CollectionReference,\r\n                                                    subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForCollectionSimple$(collectionRef).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n        let docListeners: Array<Observable<any>>;\r\n        docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n        return combineLatest(docListeners);\r\n      }),\r\n      map((items: FireItem<{}>[]) => {\r\n\r\n        let paths: string[] = [];\r\n\r\n        items.forEach(item => {\r\n          paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n        });\r\n        return paths;\r\n      }),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n   * including child documents using SubCollectionQueries\r\n   *\r\n   * Internal use\r\n   * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n   * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  protected getDocumentReferencesFromItem<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): DocumentReference[] {\r\n\r\n    const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n    return paths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n   */\r\n  protected getPathsFromItemDeepRecursiveHelper<T>(item: FireItem<T>,\r\n                                                   subCollectionQueries: SubCollectionQuery[] = []): string[] {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return [item.firestoreMetadata.path];\r\n    }\r\n    let pathList: string[] = [];\r\n    pathList.push(item.firestoreMetadata.path);\r\n\r\n    subCollectionQueries.forEach(col => {\r\n      if (Array.isArray((item as DocumentData)[col.name]) && !col.docId) {\r\n        /* property is array and not using docId so will contain multiple docs */\r\n\r\n        const items: FireItem<{}>[] = (item as DocumentData)[col.name];\r\n        items.forEach(subItem => {\r\n\r\n          if (col.subCollections) {\r\n            pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n          } else {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n        } else {\r\n          const subItem = ((item as DocumentData)[col.name] as FireItem<{}>);\r\n          if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n          // const path = (dbItem[col.name] as FirestoreItem).path;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return pathList;\r\n  }\r\n\r\n  /**\r\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n   * Only goes one sub level deep;\r\n   */\r\n  protected splitDataIntoCurrentDocAndSubCollections<T>(\r\n    data: T,\r\n    subCollectionWriters: SubCollectionWriter[] = []): CurrentDocSubCollectionSplit {\r\n\r\n    /* Split data into current doc and sub collections */\r\n    let currentDoc: { [index: string]: any; } = {};\r\n    const subCollections: { [index: string]: any; } = {};\r\n\r\n    /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n\r\n    // not array so object\r\n    for (const [key, value] of Object.entries(data)) {\r\n      // console.log(key, value);\r\n      if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n        const subCollectionWriter: SubCollectionWriter | undefined = subCollectionWriters.find(subColl => subColl.name === key);\r\n\r\n        if (subCollectionWriter) {\r\n          subCollections[key] = value;\r\n        } else {\r\n          currentDoc[key] = value;\r\n        }\r\n      } else {\r\n        currentDoc = data;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      currentDoc,\r\n      subCollections\r\n    } as CurrentDocSubCollectionSplit;\r\n  }\r\n\r\n  /**\r\n   * Turn a batch into an Observable instead of Promise.\r\n   *\r\n   * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n   * everything else.\r\n   *\r\n   * This method turns it into an observable\r\n   */\r\n  protected batchCommit$(batch: WriteBatch): Observable<void> {\r\n    return from(batch.commit()).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer<T> {\r\n\r\n  public queryConstraints: QueryConstraint[] = [];\r\n\r\n  constructor(public ref: CollectionReference<T>) {\r\n  }\r\n\r\n  /** factory method to create container from path */\r\n  static fromPath<T>(firestore: Firestore, path: string): QueryContainer<T> {\r\n    const ref = collection(firestore, path) as CollectionReference<T>;\r\n    return new this(ref);\r\n  }\r\n\r\n  /** Returns the query with all the query constraints */\r\n  get query(): Query<T> {\r\n    return query(this.ref, ...this.queryConstraints);\r\n  }\r\n\r\n  /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n  getDocs$(): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs<T>(this.query));\r\n  }\r\n\r\n  where(fieldPath: string | FieldPath, opStr: WhereFilterOp, value: unknown): QueryContainer<T> {\r\n    this.queryConstraints.push(where(fieldPath, opStr, value));\r\n    return this;\r\n  }\r\n\r\n  orderBy(fieldPath: string | FieldPath, directionStr?: OrderByDirection): QueryContainer<T> {\r\n    this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n    return this;\r\n  }\r\n\r\n  limit(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limit(_limit));\r\n    return this;\r\n  }\r\n\r\n  limitToLast(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limitToLast(_limit));\r\n    return this;\r\n  }\r\n\r\n  startAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  startAfter(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAfter(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAfter(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endBefore(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endBefore(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endBefore(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./drag-utils":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1777,"body":[{"type":"ExportNamedDeclaration","start":71,"end":81,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","start":83,"end":1777}]},"code":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"sub-collection-query.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/sub-collection-query.ts"],"names":[],"mappings":[[[0,0,0,0],[69,0,0,69]]],"sourcesContent":["/* For Listening to a Doc and multiple sub collections in that doc */\r\n\r\nimport {QueryConstraint} from 'firebase/firestore';\r\n\r\n/**\r\n * For Listening to a Document and multiple sub Collections in that Document\r\n */\r\n\r\nexport interface SubCollectionQuery {\r\n\r\n  /** the name of the subCollection to be read. */\r\n  name: string;\r\n\r\n  /** Specified Document name if multiple documents in collection is not used */\r\n  docId?: string;\r\n\r\n  /** Any SubCollections to be read in the Collection */\r\n  subCollections?: SubCollectionQuery[];\r\n\r\n  /**\r\n   *\r\n   * The Collection QueryFn.\r\n   *\r\n   * Example:\r\n   * const query = ref.where('type', '==', 'Book')\r\n   *                  .where('price', '>' 18.00)\r\n   *                  .where('price', '<' 100.00)\r\n   *                  .where('category', '==', 'Fiction')\r\n   *                  .where('publisher', '==', 'BigPublisher')\r\n   *\r\n   */\r\n  // queryFn?: QueryFn;\r\n  queryConstraints?: QueryConstraint[];\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":7998,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","start":12,"end":7998}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2802,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","start":12,"end":2802}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4401,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":28,"imported":{"type":"Identifier","start":24,"end":28,"name":"noop"},"local":{"type":"Identifier","start":24,"end":28,"name":"noop"}}],"source":{"type":"Literal","start":36,"end":42,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":45,"end":98,"specifiers":[{"type":"ImportSpecifier","start":54,"end":57,"imported":{"type":"Identifier","start":54,"end":57,"name":"map"},"local":{"type":"Identifier","start":54,"end":57,"name":"map"}},{"type":"ImportSpecifier","start":59,"end":68,"imported":{"type":"Identifier","start":59,"end":68,"name":"startWith"},"local":{"type":"Identifier","start":59,"end":68,"name":"startWith"}},{"type":"ImportSpecifier","start":70,"end":73,"imported":{"type":"Identifier","start":70,"end":73,"name":"tap"},"local":{"type":"Identifier","start":70,"end":73,"name":"tap"}}],"source":{"type":"Literal","start":81,"end":97,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":100,"end":128,"declarations":[{"type":"VariableDeclarator","start":106,"end":127,"id":{"type":"Identifier","start":106,"end":109,"name":"nop"},"init":{"type":"ArrowFunctionExpression","start":112,"end":127,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":118,"end":127,"callee":{"type":"Identifier","start":118,"end":121,"name":"tap"},"arguments":[{"type":"Identifier","start":122,"end":126,"name":"noop"}],"optional":false}}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":512,"end":893,"declaration":{"type":"VariableDeclaration","start":519,"end":893,"declarations":[{"type":"VariableDeclarator","start":525,"end":892,"id":{"type":"Identifier","start":525,"end":546,"name":"combineLatestToObject"},"init":{"type":"ArrowFunctionExpression","start":549,"end":892,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":550,"end":561,"name":"observables"}],"body":{"type":"BlockStatement","start":566,"end":892,"body":[{"type":"VariableDeclaration","start":573,"end":611,"declarations":[{"type":"VariableDeclarator","start":579,"end":610,"id":{"type":"Identifier","start":579,"end":583,"name":"keys"},"init":{"type":"CallExpression","start":586,"end":610,"callee":{"type":"MemberExpression","start":586,"end":597,"object":{"type":"Identifier","start":586,"end":592,"name":"Object"},"property":{"type":"Identifier","start":593,"end":597,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":598,"end":609,"name":"observables"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":617,"end":889,"argument":{"type":"CallExpression","start":624,"end":888,"callee":{"type":"MemberExpression","start":624,"end":817,"object":{"type":"CallExpression","start":624,"end":812,"callee":{"type":"Identifier","start":624,"end":637,"name":"combineLatest"},"arguments":[{"type":"CallExpression","start":638,"end":811,"callee":{"type":"MemberExpression","start":638,"end":646,"object":{"type":"Identifier","start":638,"end":642,"name":"keys"},"property":{"type":"Identifier","start":643,"end":646,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":647,"end":810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":647,"end":648,"name":"k"}],"body":{"type":"BlockStatement","start":652,"end":810,"body":[{"type":"VariableDeclaration","start":663,"end":690,"declarations":[{"type":"VariableDeclarator","start":669,"end":689,"id":{"type":"Identifier","start":669,"end":672,"name":"obs"},"init":{"type":"MemberExpression","start":675,"end":689,"object":{"type":"Identifier","start":675,"end":686,"name":"observables"},"property":{"type":"Identifier","start":687,"end":688,"name":"k"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":700,"end":803,"argument":{"type":"ConditionalExpression","start":707,"end":802,"test":{"type":"CallExpression","start":707,"end":725,"callee":{"type":"MemberExpression","start":707,"end":720,"object":{"type":"Identifier","start":707,"end":712,"name":"Array"},"property":{"type":"Identifier","start":713,"end":720,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":721,"end":724,"name":"obs"}],"optional":false},"consequent":{"type":"CallExpression","start":741,"end":771,"callee":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"MemberExpression","start":741,"end":747,"object":{"type":"Identifier","start":741,"end":744,"name":"obs"},"property":{"type":"Literal","start":745,"end":746,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":748,"end":752,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":753,"end":770,"callee":{"type":"Identifier","start":753,"end":762,"name":"startWith"},"arguments":[{"type":"MemberExpression","start":763,"end":769,"object":{"type":"Identifier","start":763,"end":766,"name":"obs"},"property":{"type":"Literal","start":767,"end":768,"value":1,"raw":"1"},"computed":true,"optional":false}],"optional":false}],"optional":false},"alternate":{"type":"CallExpression","start":787,"end":802,"callee":{"type":"MemberExpression","start":787,"end":795,"object":{"type":"Identifier","start":787,"end":790,"name":"obs"},"property":{"type":"Identifier","start":791,"end":795,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":796,"end":801,"callee":{"type":"Identifier","start":796,"end":799,"name":"nop"},"arguments":[],"optional":false}],"optional":false}}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":813,"end":817,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":818,"end":887,"callee":{"type":"Identifier","start":818,"end":821,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":822,"end":886,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":822,"end":823,"name":"b"}],"body":{"type":"CallExpression","start":827,"end":886,"callee":{"type":"MemberExpression","start":827,"end":835,"object":{"type":"Identifier","start":827,"end":828,"name":"b"},"property":{"type":"Identifier","start":829,"end":835,"name":"reduce"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":836,"end":881,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":837,"end":840,"name":"acc"},{"type":"Identifier","start":842,"end":845,"name":"val"},{"type":"Identifier","start":847,"end":848,"name":"i"}],"body":{"type":"ObjectExpression","start":854,"end":880,"properties":[{"type":"SpreadElement","start":856,"end":862,"argument":{"type":"Identifier","start":859,"end":862,"name":"acc"}},{"type":"Property","start":864,"end":878,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":865,"end":872,"object":{"type":"Identifier","start":865,"end":869,"name":"keys"},"property":{"type":"Identifier","start":870,"end":871,"name":"i"},"computed":true,"optional":false},"value":{"type":"Identifier","start":875,"end":878,"name":"val"},"kind":"init"}]}},{"type":"ObjectExpression","start":883,"end":885,"properties":[]}],"optional":false}}],"optional":false}],"optional":false}}]}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","start":895,"end":4401}]},"code":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","customTransformCache":false,"dependencies":["rxjs","rxjs/operators"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","originalSourcemap":{"version":3,"file":"combine-latest-to-object.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/rxjs-ops/combine-latest-to-object.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,42],[36,0,0,48],[42,0,0,54],[43,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[12,0,1,11],[14,0,1,13],[23,0,1,22],[25,0,1,24],[28,0,1,27],[30,0,1,29],[36,0,1,35],[52,0,1,51],[53,0,1,52]],[[0,0,13,0],[6,0,13,6],[9,0,13,9],[12,0,13,12],[15,0,13,18],[17,0,13,20],[18,0,13,21],[21,0,13,24],[22,0,13,28],[26,0,13,32],[27,0,13,33],[28,0,13,34]],[[0,0,15,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[7,0,35,7],[13,0,35,13],[34,0,35,34],[37,0,35,37],[38,0,39,4],[49,0,39,20],[51,0,39,40],[53,0,39,42]],[[4,0,40,2],[10,0,40,8],[14,0,40,12],[17,0,40,15],[23,0,40,21],[24,0,40,22],[28,0,40,26],[29,0,40,27],[40,0,40,38],[41,0,40,39],[42,0,40,40]],[[4,0,42,2],[11,0,42,9],[24,0,42,22],[25,0,43,4],[29,0,43,8],[30,0,43,9],[33,0,43,12],[34,0,43,13],[35,0,43,14],[36,0,43,15],[38,0,43,17]],[[8,0,44,6],[14,0,44,12],[17,0,44,15],[20,0,44,18],[31,0,44,29],[32,0,44,30],[33,0,44,31],[34,0,44,32],[35,0,44,33]],[[8,0,46,6],[15,0,46,13],[20,0,46,18],[21,0,46,19],[28,0,46,26],[29,0,46,27],[32,0,46,30],[33,0,46,31]],[[12,0,47,8],[13,0,47,9],[14,0,47,10],[17,0,47,13],[18,0,47,14],[19,0,47,15],[20,0,47,16],[21,0,47,17],[25,0,47,21],[26,0,47,22],[35,0,47,31],[36,0,47,32],[39,0,47,35],[40,0,47,36],[41,0,47,37],[42,0,47,38],[43,0,47,39],[44,0,47,40]],[[12,0,48,8],[13,0,48,9],[14,0,48,10],[17,0,48,13],[18,0,48,14],[22,0,48,18],[23,0,48,20],[26,0,48,23],[28,0,48,25],[29,0,48,26],[30,0,48,27]],[[4,0,49,4],[5,0,49,5],[6,0,49,6],[7,0,50,3],[8,0,50,4],[12,0,50,8],[13,0,51,4],[16,0,51,7],[17,0,51,8],[18,0,51,9],[19,0,51,10],[21,0,51,12],[22,0,51,13],[23,0,51,14],[24,0,51,15],[30,0,51,21],[31,0,51,22],[32,0,51,23],[35,0,51,26],[37,0,51,28],[40,0,51,31],[42,0,51,33],[43,0,51,34],[45,0,51,36],[47,0,51,38],[48,0,51,39],[49,0,51,40],[51,0,51,42],[54,0,51,45],[57,0,51,48],[59,0,51,50],[60,0,51,51],[64,0,51,55],[65,0,51,56],[66,0,51,57],[67,0,51,58],[68,0,51,59],[70,0,51,61],[73,0,51,64],[75,0,51,66],[76,0,51,67],[78,0,51,69],[80,0,51,71],[81,0,51,72],[82,0,51,73],[83,0,52,3],[84,0,52,4]],[[0,0,53,0],[1,0,53,1],[2,0,53,2]]],"sourcesContent":["import { combineLatest, noop, Observable } from 'rxjs';\r\nimport {map, startWith, tap } from 'rxjs/operators';\r\n\r\nexport interface OperatorDict<X> {\r\n  [key: string]: Observable<X> | [Observable<X>, X];\r\n}\r\n\r\n/**\r\n * Extracts the type `T` of an `Observable<T>`\r\n */\r\nexport type ExtractObservableType<A> = A extends Observable<infer B> ? B : never;\r\n\r\n\r\nconst nop = <T>() => tap<T>(noop);\r\n\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = <\r\n  TIn extends OperatorDict<any>, TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K]> }\r\n  // TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K] extends Array<any> ? TIn[K][0] : TIn[K]> }\r\n\r\n  >(observables: TIn): Observable<TOut> => {\r\n  const keys = Object.keys(observables);\r\n\r\n  return combineLatest(\r\n    keys.map(k => {\r\n      const obs = observables[k];\r\n\r\n      return Array.isArray(obs)\r\n        ? obs[0].pipe(startWith(obs[1]))\r\n        : obs.pipe( nop());\r\n    }),\r\n  ).pipe(\r\n    map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {}))\r\n  );\r\n};\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5840,"body":[{"type":"ImportDeclaration","start":0,"end":28,"specifiers":[{"type":"ImportSpecifier","start":9,"end":13,"imported":{"type":"Identifier","start":9,"end":13,"name":"from"},"local":{"type":"Identifier","start":9,"end":13,"name":"from"}}],"source":{"type":"Literal","start":21,"end":27,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":30,"end":68,"specifiers":[{"type":"ImportSpecifier","start":39,"end":43,"imported":{"type":"Identifier","start":39,"end":43,"name":"take"},"local":{"type":"Identifier","start":39,"end":43,"name":"take"}}],"source":{"type":"Literal","start":51,"end":67,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":70,"end":176,"specifiers":[{"type":"ImportSpecifier","start":79,"end":85,"imported":{"type":"Identifier","start":79,"end":85,"name":"addDoc"},"local":{"type":"Identifier","start":79,"end":85,"name":"addDoc"}},{"type":"ImportSpecifier","start":87,"end":96,"imported":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"},"local":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"}},{"type":"ImportSpecifier","start":98,"end":104,"imported":{"type":"Identifier","start":98,"end":104,"name":"getDoc"},"local":{"type":"Identifier","start":98,"end":104,"name":"getDoc"}},{"type":"ImportSpecifier","start":106,"end":113,"imported":{"type":"Identifier","start":106,"end":113,"name":"getDocs"},"local":{"type":"Identifier","start":106,"end":113,"name":"getDocs"}},{"type":"ImportSpecifier","start":115,"end":127,"imported":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"},"local":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"}},{"type":"ImportSpecifier","start":129,"end":135,"imported":{"type":"Identifier","start":129,"end":135,"name":"setDoc"},"local":{"type":"Identifier","start":129,"end":135,"name":"setDoc"}},{"type":"ImportSpecifier","start":137,"end":146,"imported":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"},"local":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"}}],"source":{"type":"Literal","start":155,"end":175,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":178,"end":1156,"declaration":{"type":"ClassDeclaration","start":185,"end":1156,"id":{"type":"Identifier","start":191,"end":207,"name":"FirestoreWrapper"},"superClass":null,"body":{"type":"ClassBody","start":208,"end":1156,"body":[{"type":"MethodDefinition","start":334,"end":408,"static":false,"computed":false,"key":{"type":"Identifier","start":334,"end":345,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":345,"end":408,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":346,"end":357,"name":"firebaseApp"}],"body":{"type":"BlockStatement","start":359,"end":408,"body":[{"type":"ExpressionStatement","start":370,"end":401,"expression":{"type":"AssignmentExpression","start":370,"end":400,"operator":"=","left":{"type":"MemberExpression","start":370,"end":386,"object":{"type":"ThisExpression","start":370,"end":374},"property":{"type":"Identifier","start":375,"end":386,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":389,"end":400,"name":"firebaseApp"}}}]}}},{"type":"MethodDefinition","start":414,"end":486,"static":false,"computed":false,"key":{"type":"Identifier","start":418,"end":427,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":427,"end":486,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":430,"end":486,"body":[{"type":"ReturnStatement","start":441,"end":479,"argument":{"type":"CallExpression","start":448,"end":478,"callee":{"type":"Identifier","start":448,"end":460,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":461,"end":477,"object":{"type":"ThisExpression","start":461,"end":465},"property":{"type":"Identifier","start":466,"end":477,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":504,"end":562,"static":false,"computed":false,"key":{"type":"Identifier","start":504,"end":507,"name":"doc"},"kind":"method","value":{"type":"FunctionExpression","start":507,"end":562,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":508,"end":514,"name":"docRef"}],"body":{"type":"BlockStatement","start":516,"end":562,"body":[{"type":"ReturnStatement","start":527,"end":555,"argument":{"type":"CallExpression","start":534,"end":554,"callee":{"type":"Identifier","start":534,"end":538,"name":"from"},"arguments":[{"type":"CallExpression","start":539,"end":553,"callee":{"type":"Identifier","start":539,"end":545,"name":"getDoc"},"arguments":[{"type":"Identifier","start":546,"end":552,"name":"docRef"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":568,"end":666,"static":false,"computed":false,"key":{"type":"Identifier","start":568,"end":571,"name":"add"},"kind":"method","value":{"type":"FunctionExpression","start":571,"end":666,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":572,"end":585,"name":"collectionRef"},{"type":"Identifier","start":587,"end":591,"name":"data"}],"body":{"type":"BlockStatement","start":593,"end":666,"body":[{"type":"ReturnStatement","start":604,"end":659,"argument":{"type":"CallExpression","start":611,"end":658,"callee":{"type":"MemberExpression","start":611,"end":649,"object":{"type":"CallExpression","start":611,"end":644,"callee":{"type":"Identifier","start":611,"end":615,"name":"from"},"arguments":[{"type":"CallExpression","start":616,"end":643,"callee":{"type":"Identifier","start":616,"end":622,"name":"addDoc"},"arguments":[{"type":"Identifier","start":623,"end":636,"name":"collectionRef"},{"type":"Identifier","start":638,"end":642,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":645,"end":649,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":650,"end":657,"callee":{"type":"Identifier","start":650,"end":654,"name":"take"},"arguments":[{"type":"Literal","start":655,"end":656,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":672,"end":902,"static":false,"computed":false,"key":{"type":"Identifier","start":672,"end":675,"name":"set"},"kind":"method","value":{"type":"FunctionExpression","start":675,"end":902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":676,"end":682,"name":"docRef"},{"type":"Identifier","start":684,"end":688,"name":"data"},{"type":"Identifier","start":690,"end":697,"name":"options"}],"body":{"type":"BlockStatement","start":699,"end":902,"body":[{"type":"IfStatement","start":710,"end":895,"test":{"type":"Identifier","start":714,"end":721,"name":"options"},"consequent":{"type":"BlockStatement","start":723,"end":806,"body":[{"type":"ReturnStatement","start":738,"end":795,"argument":{"type":"CallExpression","start":745,"end":794,"callee":{"type":"MemberExpression","start":745,"end":785,"object":{"type":"CallExpression","start":745,"end":780,"callee":{"type":"Identifier","start":745,"end":749,"name":"from"},"arguments":[{"type":"CallExpression","start":750,"end":779,"callee":{"type":"Identifier","start":750,"end":756,"name":"setDoc"},"arguments":[{"type":"Identifier","start":757,"end":763,"name":"docRef"},{"type":"Identifier","start":765,"end":769,"name":"data"},{"type":"Identifier","start":771,"end":778,"name":"options"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":781,"end":785,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":786,"end":793,"callee":{"type":"Identifier","start":786,"end":790,"name":"take"},"arguments":[{"type":"Literal","start":791,"end":792,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":821,"end":895,"body":[{"type":"ReturnStatement","start":836,"end":884,"argument":{"type":"CallExpression","start":843,"end":883,"callee":{"type":"MemberExpression","start":843,"end":874,"object":{"type":"CallExpression","start":843,"end":869,"callee":{"type":"Identifier","start":843,"end":847,"name":"from"},"arguments":[{"type":"CallExpression","start":848,"end":868,"callee":{"type":"Identifier","start":848,"end":854,"name":"setDoc"},"arguments":[{"type":"Identifier","start":855,"end":861,"name":"docRef"},{"type":"Identifier","start":863,"end":867,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":870,"end":874,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":875,"end":882,"callee":{"type":"Identifier","start":875,"end":879,"name":"take"},"arguments":[{"type":"Literal","start":880,"end":881,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":908,"end":986,"static":false,"computed":false,"key":{"type":"Identifier","start":908,"end":914,"name":"delete"},"kind":"method","value":{"type":"FunctionExpression","start":914,"end":986,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":915,"end":921,"name":"docRef"}],"body":{"type":"BlockStatement","start":923,"end":986,"body":[{"type":"ReturnStatement","start":934,"end":979,"argument":{"type":"CallExpression","start":941,"end":978,"callee":{"type":"MemberExpression","start":941,"end":969,"object":{"type":"CallExpression","start":941,"end":964,"callee":{"type":"Identifier","start":941,"end":945,"name":"from"},"arguments":[{"type":"CallExpression","start":946,"end":963,"callee":{"type":"Identifier","start":946,"end":955,"name":"deleteDoc"},"arguments":[{"type":"Identifier","start":956,"end":962,"name":"docRef"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":965,"end":969,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":970,"end":977,"callee":{"type":"Identifier","start":970,"end":974,"name":"take"},"arguments":[{"type":"Literal","start":975,"end":976,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":992,"end":1091,"static":false,"computed":false,"key":{"type":"Identifier","start":992,"end":998,"name":"update"},"kind":"method","value":{"type":"FunctionExpression","start":998,"end":1091,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":999,"end":1005,"name":"docRef"},{"type":"Identifier","start":1007,"end":1011,"name":"data"},{"type":"Identifier","start":1013,"end":1020,"name":"options"}],"body":{"type":"BlockStatement","start":1022,"end":1091,"body":[{"type":"ReturnStatement","start":1033,"end":1084,"argument":{"type":"CallExpression","start":1040,"end":1083,"callee":{"type":"MemberExpression","start":1040,"end":1074,"object":{"type":"CallExpression","start":1040,"end":1069,"callee":{"type":"Identifier","start":1040,"end":1044,"name":"from"},"arguments":[{"type":"CallExpression","start":1045,"end":1068,"callee":{"type":"Identifier","start":1045,"end":1054,"name":"updateDoc"},"arguments":[{"type":"Identifier","start":1055,"end":1061,"name":"docRef"},{"type":"Identifier","start":1063,"end":1067,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1070,"end":1074,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1075,"end":1082,"callee":{"type":"Identifier","start":1075,"end":1079,"name":"take"},"arguments":[{"type":"Literal","start":1080,"end":1081,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1097,"end":1153,"static":false,"computed":false,"key":{"type":"Identifier","start":1097,"end":1107,"name":"collection"},"kind":"method","value":{"type":"FunctionExpression","start":1107,"end":1153,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1108,"end":1109,"name":"q"}],"body":{"type":"BlockStatement","start":1111,"end":1153,"body":[{"type":"ReturnStatement","start":1122,"end":1146,"argument":{"type":"CallExpression","start":1129,"end":1145,"callee":{"type":"Identifier","start":1129,"end":1133,"name":"from"},"arguments":[{"type":"CallExpression","start":1134,"end":1144,"callee":{"type":"Identifier","start":1134,"end":1141,"name":"getDocs"},"arguments":[{"type":"Identifier","start":1142,"end":1143,"name":"q"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","start":1158,"end":5840}]},"code":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-wrapper.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-wrapper.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[13,0,0,12],[15,0,0,25],[21,0,0,31],[27,0,0,37],[28,0,0,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[13,0,2,12],[15,0,2,13],[21,0,2,19],[37,0,2,35],[38,0,2,36]],[[0,0,4,0],[7,0,4,7],[9,0,5,2],[15,0,5,8],[17,0,7,2],[26,0,7,11],[28,0,12,2],[34,0,12,8],[36,0,13,2],[43,0,13,9],[45,0,14,2],[57,0,14,14],[59,0,17,2],[65,0,17,8],[67,0,20,2],[76,0,20,11],[79,0,21,1],[85,0,21,7],[105,0,21,27],[106,0,21,28]],[[0,0,24,0],[6,0,24,6],[13,0,24,13],[29,0,24,29]],[[4,0,25,2]],[],[],[[7,0,28,5]],[[4,0,30,2],[16,0,30,21],[27,0,30,45]],[[8,0,30,21],[24,0,30,32],[27,0,30,21],[38,0,30,32],[39,0,30,45]],[[4,0,31,2],[5,0,31,3]],[[4,0,33,2],[8,0,33,6],[17,0,33,15]],[[8,0,34,4],[15,0,34,11],[27,0,34,23],[28,0,34,24],[32,0,34,28],[33,0,34,29],[44,0,34,40],[45,0,34,41],[46,0,34,42]],[[4,0,35,2],[5,0,35,3]],[[4,0,37,2],[10,0,37,8]],[[4,0,38,9],[7,0,38,12],[8,0,38,31],[14,0,38,59]],[[8,0,39,4],[15,0,39,11],[19,0,39,15],[20,0,39,16],[26,0,39,22],[27,0,39,23],[33,0,39,29],[34,0,39,30],[35,0,39,31],[36,0,39,32]],[[4,0,40,2],[5,0,40,3]],[[4,0,42,9],[7,0,42,12],[8,0,42,16],[21,0,42,53],[23,0,42,55],[27,0,42,62]],[[8,0,43,4],[15,0,43,11],[19,0,43,15],[20,0,43,16],[26,0,43,22],[27,0,43,23],[40,0,43,36],[42,0,43,38],[46,0,43,42],[47,0,43,43],[48,0,43,44],[49,0,43,45],[53,0,43,49],[54,0,44,6],[58,0,44,10],[59,0,44,11],[60,0,44,12],[61,0,44,13],[62,0,45,5],[63,0,45,6]],[[4,0,46,2],[5,0,46,3]],[[4,0,48,9],[7,0,48,12],[8,0,48,16],[14,0,48,44],[16,0,48,46],[20,0,48,53],[22,0,48,55],[29,0,48,75]],[[8,0,50,4],[12,0,50,8],[19,0,50,15],[21,0,50,17]],[[12,0,51,6],[19,0,51,13],[23,0,51,17],[24,0,51,18],[30,0,51,24],[31,0,51,25],[37,0,51,31],[39,0,51,33],[43,0,51,37],[45,0,51,39],[52,0,51,46],[53,0,51,47],[54,0,51,48],[55,0,51,49],[59,0,51,53],[60,0,52,8],[64,0,52,12],[65,0,52,13],[66,0,52,14],[67,0,52,15],[68,0,53,7],[69,0,53,8]],[[9,0,54,5]],[[13,0,54,11]],[[12,0,55,6],[19,0,55,13],[23,0,55,17],[24,0,55,18],[30,0,55,24],[31,0,55,25],[37,0,55,31],[39,0,55,33],[43,0,55,37],[44,0,55,38],[45,0,55,39],[46,0,55,40],[50,0,55,44],[51,0,56,8],[55,0,56,12],[56,0,56,13],[57,0,56,14],[58,0,56,15],[59,0,57,7],[60,0,57,8]],[[9,0,58,5]],[[4,0,59,2],[5,0,59,3]],[[4,0,61,2],[10,0,61,8],[11,0,61,12],[17,0,61,40]],[[8,0,62,4],[15,0,62,11],[19,0,62,15],[20,0,62,16],[29,0,62,25],[30,0,62,26],[36,0,62,32],[37,0,62,33],[38,0,62,34],[39,0,62,35],[43,0,62,39],[44,0,63,6],[48,0,63,10],[49,0,63,11],[50,0,63,12],[51,0,63,13],[52,0,64,5],[53,0,64,6]],[[4,0,65,2],[5,0,65,3]],[[4,0,67,2],[10,0,67,8],[11,0,67,12],[17,0,67,40],[19,0,67,42],[23,0,67,70],[25,0,67,72],[32,0,67,92]],[[8,0,68,4],[15,0,68,11],[19,0,68,15],[20,0,68,16],[29,0,68,25],[30,0,68,38],[36,0,68,44],[38,0,68,46],[42,0,68,50],[43,0,68,51],[44,0,68,52],[45,0,68,53],[49,0,68,57],[50,0,69,6],[54,0,69,10],[55,0,69,11],[56,0,69,12],[57,0,69,13],[58,0,70,5],[59,0,70,6]],[[4,0,71,2],[5,0,71,3]],[[4,0,73,9],[14,0,73,19],[15,0,73,23],[16,0,73,34]],[[8,0,74,4],[15,0,74,11],[19,0,74,15],[20,0,74,16],[27,0,74,23],[28,0,74,24],[29,0,74,25],[30,0,74,26],[31,0,74,27],[32,0,74,28]],[[4,0,75,2],[5,0,75,3]],[[1,0,77,1]]],"sourcesContent":["import {from, Observable} from 'rxjs';\r\nimport {BaseFirestoreWrapper} from './interfaces';\r\nimport {take} from 'rxjs/operators';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {\r\n  addDoc,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  Query,\r\n  QuerySnapshot,\r\n  setDoc,\r\n  SetOptions,\r\n  UpdateData,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\n\r\n\r\nexport class FirestoreWrapper implements BaseFirestoreWrapper {\r\n  /**\r\n   * Uses firebase/firestore directly\r\n   * Simply makes the returned Promises into Observables\r\n   */\r\n\r\n  constructor(public firebaseApp: FirebaseApp) {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return getFirestore(this.firebaseApp);\r\n  }\r\n\r\n  // doc\r\n  public doc<T = DocumentData>(docRef: DocumentReference<T>): Observable<DocumentSnapshot<T>> {\r\n    return from(getDoc(docRef));\r\n  }\r\n\r\n  public add<T>(collectionRef: CollectionReference<T>, data: T): Observable<DocumentReference<T>> {\r\n    return from(addDoc(collectionRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public set<A>(docRef: DocumentReference<A>, data: A, options?: SetOptions): Observable<void> {\r\n\r\n    if (options) {\r\n      return from(setDoc(docRef, data, options)).pipe(\r\n        take(1)\r\n      );\r\n    } else {\r\n      return from(setDoc(docRef, data)).pipe(\r\n        take(1)\r\n      );\r\n    }\r\n  }\r\n\r\n  delete<T>(docRef: DocumentReference<T>): Observable<void> {\r\n    return from(deleteDoc(docRef)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  update<T>(docRef: DocumentReference<T>, data: UpdateData<Partial<T>>, options?: SetOptions): Observable<void> {\r\n    return from(updateDoc<Partial<T>>(docRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public collection<T>(q: Query<T>): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs(q));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1853,"body":[{"type":"ImportDeclaration","start":0,"end":55,"specifiers":[{"type":"ImportSpecifier","start":9,"end":25,"imported":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"},"local":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"}}],"source":{"type":"Literal","start":33,"end":54,"value":"./firestore-wrapper","raw":"'./firestore-wrapper'"}},{"type":"ImportDeclaration","start":57,"end":114,"specifiers":[{"type":"ImportSpecifier","start":66,"end":83,"imported":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"},"local":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"}}],"source":{"type":"Literal","start":91,"end":113,"value":"./firestore-extended","raw":"'./firestore-extended'"}},{"type":"ExportNamedDeclaration","start":286,"end":469,"declaration":{"type":"ClassDeclaration","start":293,"end":469,"id":{"type":"Identifier","start":299,"end":311,"name":"FirestoreExt"},"superClass":{"type":"Identifier","start":320,"end":337,"name":"FirestoreExtended"},"body":{"type":"ClassBody","start":338,"end":469,"body":[{"type":"MethodDefinition","start":345,"end":466,"static":false,"computed":false,"key":{"type":"Identifier","start":345,"end":356,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":356,"end":466,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":357,"end":368,"name":"firebaseApp"},{"type":"AssignmentPattern","start":370,"end":391,"left":{"type":"Identifier","start":370,"end":382,"name":"defaultDocId"},"right":{"type":"Literal","start":385,"end":391,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":393,"end":466,"body":[{"type":"ExpressionStatement","start":404,"end":459,"expression":{"type":"CallExpression","start":404,"end":458,"callee":{"type":"Super","start":404,"end":409},"arguments":[{"type":"NewExpression","start":410,"end":443,"callee":{"type":"Identifier","start":414,"end":430,"name":"FirestoreWrapper"},"arguments":[{"type":"Identifier","start":431,"end":442,"name":"firebaseApp"}]},{"type":"Identifier","start":445,"end":457,"name":"defaultDocId"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","start":471,"end":1853}]},"code":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"firestore-extended.class.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.class.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,8],[25,0,1,24],[27,0,1,25],[33,0,1,31],[54,0,1,52],[55,0,1,53]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,26],[34,0,2,32],[56,0,2,54],[57,0,2,55]],[[0,0,4,0]],[],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[25,0,8,26],[34,0,8,34],[51,0,8,51]],[[4,0,9,2],[16,0,9,14],[27,0,9,38],[29,0,9,40],[44,0,9,63],[50,0,9,69]],[[8,0,10,4],[13,0,10,9],[14,0,10,10],[18,0,10,14],[34,0,10,30],[35,0,10,31],[46,0,10,42],[47,0,10,43],[49,0,10,45],[61,0,10,57],[62,0,10,58],[63,0,10,59]],[[4,0,11,2],[5,0,11,3]],[[1,0,12,1]]],"sourcesContent":["import {FirebaseApp} from 'firebase/app';\r\nimport {FirestoreWrapper} from './firestore-wrapper';\r\nimport {FirestoreExtended} from './firestore-extended';\r\n\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n  constructor(firebaseApp: FirebaseApp, defaultDocId: string = 'data') {\r\n    super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n  }\r\n}\r\n"]},"resolvedIds":{"./firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1954,"body":[{"type":"ExportNamedDeclaration","start":96,"end":128,"declaration":{"type":"ClassDeclaration","start":103,"end":128,"id":{"type":"Identifier","start":109,"end":123,"name":"FirebaseConfig"},"superClass":null,"body":{"type":"ClassBody","start":124,"end":128,"body":[]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":218,"end":330,"declaration":{"type":"VariableDeclaration","start":225,"end":330,"declarations":[{"type":"VariableDeclarator","start":231,"end":329,"id":{"type":"Identifier","start":231,"end":253,"name":"FIRESTORE_USE_EMULATOR"},"init":{"type":"ObjectExpression","start":256,"end":329,"properties":[{"type":"Property","start":291,"end":308,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":291,"end":295,"name":"host"},"value":{"type":"Literal","start":297,"end":308,"value":"localhost","raw":"'localhost'"},"kind":"init"},{"type":"Property","start":315,"end":325,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":315,"end":319,"name":"port"},"value":{"type":"Literal","start":321,"end":325,"value":8080,"raw":"8080"},"kind":"init"}]}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","start":464,"end":1954}]},"code":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"originalCode":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/config.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[27,0,3,27]],[[1,0,5,1]],[[0,0,13,0],[86,0,13,86]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[35,0,15,35],[38,0,15,63]],[[4,0,16,2],[26,0,16,24]],[[4,0,17,2],[8,0,17,6],[10,0,17,8],[21,0,17,19]],[[4,0,18,2],[8,0,18,6],[10,0,18,8],[14,0,18,12]],[[1,0,19,1],[2,0,19,2]],[[0,0,22,0],[43,0,22,43]],[[0,0,23,0],[26,0,23,26]],[[0,0,24,0],[26,0,24,26]],[[0,0,25,0],[23,0,25,23]],[[0,0,26,0],[4,0,26,4]]],"sourcesContent":["// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\n\r\nexport class FirebaseConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FirestoreEmulatorConfig {\r\n  // useEmulator: boolean;\r\n  host: string;\r\n  port: number;\r\n}\r\n\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\n\r\nexport const FIRESTORE_USE_EMULATOR: FirestoreEmulatorConfig = {\r\n  // useEmulator: false,\r\n  host: 'localhost',\r\n  port: 8080,\r\n};\r\n\r\n\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5093,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}},{"type":"ImportSpecifier","start":19,"end":27,"imported":{"type":"Identifier","start":19,"end":27,"name":"Optional"},"local":{"type":"Identifier","start":19,"end":27,"name":"Optional"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"},"local":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":110,"specifiers":[{"type":"ImportSpecifier","start":72,"end":84,"imported":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"},"local":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"}}],"source":{"type":"Literal","start":92,"end":109,"value":"@angular/common","raw":"'@angular/common'"}},{"type":"ImportDeclaration","start":112,"end":154,"specifiers":[{"type":"ImportSpecifier","start":121,"end":135,"imported":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"},"local":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"}}],"source":{"type":"Literal","start":143,"end":153,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":156,"end":192,"specifiers":[{"type":"ImportNamespaceSpecifier","start":163,"end":170,"local":{"type":"Identifier","start":168,"end":170,"name":"i0"}}],"source":{"type":"Literal","start":176,"end":191,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":194,"end":1127,"declaration":{"type":"ClassDeclaration","start":201,"end":1127,"id":{"type":"Identifier","start":207,"end":224,"name":"NgxFirebaseModule"},"superClass":null,"body":{"type":"ClassBody","start":225,"end":1127,"body":[{"type":"MethodDefinition","start":726,"end":911,"static":false,"computed":false,"key":{"type":"Identifier","start":726,"end":737,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":737,"end":911,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":738,"end":750,"name":"parentModule"}],"body":{"type":"BlockStatement","start":752,"end":911,"body":[{"type":"IfStatement","start":763,"end":904,"test":{"type":"Identifier","start":767,"end":779,"name":"parentModule"},"consequent":{"type":"BlockStatement","start":781,"end":904,"body":[{"type":"ThrowStatement","start":796,"end":893,"argument":{"type":"NewExpression","start":802,"end":892,"callee":{"type":"Identifier","start":806,"end":811,"name":"Error"},"arguments":[{"type":"Literal","start":812,"end":891,"value":"NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only","raw":"'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":917,"end":1124,"static":true,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"forRoot"},"kind":"method","value":{"type":"FunctionExpression","start":931,"end":1124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":932,"end":938,"name":"config"}],"body":{"type":"BlockStatement","start":940,"end":1124,"body":[{"type":"ReturnStatement","start":951,"end":1117,"argument":{"type":"ObjectExpression","start":958,"end":1116,"properties":[{"type":"Property","start":973,"end":1000,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":973,"end":981,"name":"ngModule"},"value":{"type":"Identifier","start":983,"end":1000,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1015,"end":1105,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1024,"name":"providers"},"value":{"type":"ArrayExpression","start":1026,"end":1105,"elements":[{"type":"ObjectExpression","start":1045,"end":1090,"properties":[{"type":"Property","start":1047,"end":1070,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"provide"},"value":{"type":"Identifier","start":1056,"end":1070,"name":"FirebaseConfig"},"kind":"init"},{"type":"Property","start":1072,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1072,"end":1080,"name":"useValue"},"value":{"type":"Identifier","start":1082,"end":1088,"name":"config"},"kind":"init"}]}]},"kind":"init"}]}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1129,"end":1367,"expression":{"type":"AssignmentExpression","start":1129,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1129,"end":1151,"object":{"type":"Identifier","start":1129,"end":1146,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1147,"end":1151,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1154,"end":1366,"callee":{"type":"MemberExpression","start":1154,"end":1175,"object":{"type":"Identifier","start":1154,"end":1156,"name":"i0"},"property":{"type":"Identifier","start":1157,"end":1175,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1176,"end":1365,"properties":[{"type":"Property","start":1178,"end":1198,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1178,"end":1188,"name":"minVersion"},"value":{"type":"Literal","start":1190,"end":1198,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1200,"end":1217,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1200,"end":1207,"name":"version"},"value":{"type":"Literal","start":1209,"end":1217,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1219,"end":1231,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1219,"end":1227,"name":"ngImport"},"value":{"type":"Identifier","start":1229,"end":1231,"name":"i0"},"kind":"init"},{"type":"Property","start":1233,"end":1256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1233,"end":1237,"name":"type"},"value":{"type":"Identifier","start":1239,"end":1256,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1258,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1258,"end":1262,"name":"deps"},"value":{"type":"ArrayExpression","start":1264,"end":1326,"elements":[{"type":"ObjectExpression","start":1265,"end":1325,"properties":[{"type":"Property","start":1267,"end":1291,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1267,"end":1272,"name":"token"},"value":{"type":"Identifier","start":1274,"end":1291,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1293,"end":1307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1301,"name":"optional"},"value":{"type":"Literal","start":1303,"end":1307,"value":true,"raw":"true"},"kind":"init"},{"type":"Property","start":1309,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1309,"end":1317,"name":"skipSelf"},"value":{"type":"Literal","start":1319,"end":1323,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1328,"end":1363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1328,"end":1334,"name":"target"},"value":{"type":"MemberExpression","start":1336,"end":1363,"object":{"type":"MemberExpression","start":1336,"end":1354,"object":{"type":"Identifier","start":1336,"end":1338,"name":"i0"},"property":{"type":"Identifier","start":1339,"end":1354,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1355,"end":1363,"name":"NgModule"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1369,"end":1526,"expression":{"type":"AssignmentExpression","start":1369,"end":1525,"operator":"=","left":{"type":"MemberExpression","start":1369,"end":1391,"object":{"type":"Identifier","start":1369,"end":1386,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1387,"end":1391,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1416,"object":{"type":"Identifier","start":1394,"end":1396,"name":"i0"},"property":{"type":"Identifier","start":1397,"end":1416,"name":"ɵɵngDeclareNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1417,"end":1524,"properties":[{"type":"Property","start":1419,"end":1439,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1419,"end":1429,"name":"minVersion"},"value":{"type":"Literal","start":1431,"end":1439,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1441,"end":1458,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1441,"end":1448,"name":"version"},"value":{"type":"Literal","start":1450,"end":1458,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1460,"end":1472,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1460,"end":1468,"name":"ngImport"},"value":{"type":"Identifier","start":1470,"end":1472,"name":"i0"},"kind":"init"},{"type":"Property","start":1474,"end":1497,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1474,"end":1478,"name":"type"},"value":{"type":"Identifier","start":1480,"end":1497,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1499,"end":1522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1499,"end":1506,"name":"imports"},"value":{"type":"ArrayExpression","start":1508,"end":1522,"elements":[{"type":"Identifier","start":1509,"end":1521,"name":"CommonModule"}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1711,"expression":{"type":"AssignmentExpression","start":1528,"end":1710,"operator":"=","left":{"type":"MemberExpression","start":1528,"end":1550,"object":{"type":"Identifier","start":1528,"end":1545,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1546,"end":1550,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1553,"end":1710,"callee":{"type":"MemberExpression","start":1553,"end":1575,"object":{"type":"Identifier","start":1553,"end":1555,"name":"i0"},"property":{"type":"Identifier","start":1556,"end":1575,"name":"ɵɵngDeclareInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1576,"end":1709,"properties":[{"type":"Property","start":1578,"end":1598,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1578,"end":1588,"name":"minVersion"},"value":{"type":"Literal","start":1590,"end":1598,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1600,"end":1617,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1600,"end":1607,"name":"version"},"value":{"type":"Literal","start":1609,"end":1617,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1619,"end":1631,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1619,"end":1627,"name":"ngImport"},"value":{"type":"Identifier","start":1629,"end":1631,"name":"i0"},"kind":"init"},{"type":"Property","start":1633,"end":1656,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1633,"end":1637,"name":"type"},"value":{"type":"Identifier","start":1639,"end":1656,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1658,"end":1707,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1658,"end":1665,"name":"imports"},"value":{"type":"ArrayExpression","start":1667,"end":1707,"elements":[{"type":"ArrayExpression","start":1668,"end":1706,"elements":[{"type":"Identifier","start":1683,"end":1695,"name":"CommonModule"}]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1713,"end":2257,"expression":{"type":"CallExpression","start":1713,"end":2256,"callee":{"type":"MemberExpression","start":1713,"end":1740,"object":{"type":"Identifier","start":1713,"end":1715,"name":"i0"},"property":{"type":"Identifier","start":1716,"end":1740,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1741,"end":2255,"properties":[{"type":"Property","start":1743,"end":1763,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1743,"end":1753,"name":"minVersion"},"value":{"type":"Literal","start":1755,"end":1763,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1765,"end":1782,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1765,"end":1772,"name":"version"},"value":{"type":"Literal","start":1774,"end":1782,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1784,"end":1796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1792,"name":"ngImport"},"value":{"type":"Identifier","start":1794,"end":1796,"name":"i0"},"kind":"init"},{"type":"Property","start":1798,"end":1821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1798,"end":1802,"name":"type"},"value":{"type":"Identifier","start":1804,"end":1821,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1823,"end":2052,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1833,"name":"decorators"},"value":{"type":"ArrayExpression","start":1835,"end":2052,"elements":[{"type":"ObjectExpression","start":1836,"end":2051,"properties":[{"type":"Property","start":1851,"end":1865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1851,"end":1855,"name":"type"},"value":{"type":"Identifier","start":1857,"end":1865,"name":"NgModule"},"kind":"init"},{"type":"Property","start":1880,"end":2040,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1880,"end":1884,"name":"args"},"value":{"type":"ArrayExpression","start":1886,"end":2040,"elements":[{"type":"ObjectExpression","start":1887,"end":2039,"properties":[{"type":"Property","start":1910,"end":1926,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1922,"name":"declarations"},"value":{"type":"ArrayExpression","start":1924,"end":1926,"elements":[]},"kind":"init"},{"type":"Property","start":1949,"end":2020,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1949,"end":1956,"name":"imports"},"value":{"type":"ArrayExpression","start":1958,"end":2020,"elements":[{"type":"Identifier","start":1985,"end":1997,"name":"CommonModule"}]},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":2054,"end":2253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2054,"end":2068,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":2070,"end":2253,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2082,"end":2253,"body":[{"type":"ReturnStatement","start":2084,"end":2251,"argument":{"type":"ArrayExpression","start":2091,"end":2250,"elements":[{"type":"ObjectExpression","start":2092,"end":2249,"properties":[{"type":"Property","start":2094,"end":2117,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2094,"end":2098,"name":"type"},"value":{"type":"Identifier","start":2100,"end":2117,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":2119,"end":2247,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2119,"end":2129,"name":"decorators"},"value":{"type":"ArrayExpression","start":2131,"end":2247,"elements":[{"type":"ObjectExpression","start":2132,"end":2188,"properties":[{"type":"Property","start":2155,"end":2169,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2155,"end":2159,"name":"type"},"value":{"type":"Identifier","start":2161,"end":2169,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2190,"end":2246,"properties":[{"type":"Property","start":2213,"end":2227,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2213,"end":2217,"name":"type"},"value":{"type":"Identifier","start":2219,"end":2227,"name":"SkipSelf"},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","start":2259,"end":5093}]},"code":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","customTransformCache":false,"dependencies":["@angular/core","@angular/common","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","originalSourcemap":{"version":3,"file":"ngx-firebase.module.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,29],[17,0,0,37],[19,0,0,39],[27,0,0,47],[29,0,0,49],[37,0,0,57],[39,0,0,58],[45,0,0,64],[60,0,0,79],[61,0,0,80]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[21,0,1,20],[23,0,1,21],[29,0,1,27],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[23,0,2,22],[25,0,2,23],[31,0,2,29],[41,0,2,39],[42,0,2,40]],[],[[0,0,13,0],[6,0,13,6],[13,0,13,13],[30,0,13,30]],[[4,0,14,2]],[],[],[],[],[],[[7,0,20,5]],[[4,0,21,2],[16,0,21,38],[28,0,21,70]],[[8,0,22,4],[12,0,22,8],[24,0,22,20],[26,0,22,22]],[[12,0,23,6],[18,0,23,12],[22,0,23,16],[27,0,23,21],[28,0,24,8],[107,0,24,87],[108,0,24,88],[109,0,24,89]],[[9,0,25,5]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2],[10,0,28,8],[11,0,28,9],[18,0,28,16],[19,0,28,17],[25,0,28,40]],[[8,0,29,4],[15,0,29,11]],[[12,0,30,6],[20,0,30,14],[22,0,30,16],[39,0,30,33]],[[12,0,31,6],[21,0,31,15],[23,0,31,17]],[[16,0,32,8],[18,0,32,9],[25,0,32,16],[27,0,32,18],[41,0,32,32],[43,0,32,34],[51,0,32,42],[53,0,32,44],[59,0,32,50],[61,0,32,51]],[[13,0,33,7]],[[9,0,34,5],[10,0,34,6]],[[4,0,35,2],[5,0,35,3]],[],[[110,0,13,13],[127,0,13,30],[145,0,21,53],[162,0,21,70]],[[111,0,13,13],[128,0,13,30],[140,0,8,4],[152,0,8,16]],[[111,0,13,13],[128,0,13,30],[140,0,7,11]],[[12,0,8,4],[24,0,8,16]],[[9,0,9,3]],[[91,0,13,13],[108,0,13,30]],[[18,0,5,1],[26,0,5,9]],[[19,0,5,10]],[[20,0,6,2],[32,0,6,14],[34,0,6,16],[36,0,6,18]],[[20,0,7,2],[27,0,7,9],[29,0,7,11]],[[24,0,8,4],[36,0,8,16]],[[21,0,9,3]],[[17,0,10,1]],[[58,0,21,53],[75,0,21,70]],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[34,0,21,35]]],"sourcesContent":["import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseConfig} from './config';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\n\nexport class NgxFirebaseModule {\n  /**\n   * To be used as an Angular Module to inject the FirebaseConfig\n   * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\n   * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\n   * additional connections.\n   * The purpose is simply to make sure that we only create a single Firebase App and a single connection\n   */\n  constructor(@Optional() @SkipSelf() parentModule?: NgxFirebaseModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config?: FirebaseConfig): ModuleWithProviders<NgxFirebaseModule> {\n    return {\n      ngModule: NgxFirebaseModule,\n      providers: [\n        {provide: FirebaseConfig, useValue: config}\n      ]\n    };\n  }\n\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@angular/common":{"external":true,"id":"@angular/common","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5555,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"Inject"},"local":{"type":"Identifier","start":9,"end":15,"name":"Inject"}},{"type":"ImportSpecifier","start":17,"end":27,"imported":{"type":"Identifier","start":17,"end":27,"name":"Injectable"},"local":{"type":"Identifier","start":17,"end":27,"name":"Injectable"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"Optional"},"local":{"type":"Identifier","start":29,"end":37,"name":"Optional"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":113,"specifiers":[{"type":"ImportSpecifier","start":72,"end":94,"imported":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"},"local":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"}}],"source":{"type":"Literal","start":102,"end":112,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":115,"end":170,"specifiers":[{"type":"ImportDefaultSpecifier","start":122,"end":130,"local":{"type":"Identifier","start":122,"end":130,"name":"firebase"}},{"type":"ImportSpecifier","start":134,"end":147,"imported":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"},"local":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"}}],"source":{"type":"Literal","start":155,"end":169,"value":"firebase/app","raw":"'firebase/app'"}},{"type":"ImportDeclaration","start":172,"end":248,"specifiers":[{"type":"ImportSpecifier","start":181,"end":205,"imported":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"},"local":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"}},{"type":"ImportSpecifier","start":207,"end":219,"imported":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"},"local":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"}}],"source":{"type":"Literal","start":227,"end":247,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":250,"end":286,"specifiers":[{"type":"ImportNamespaceSpecifier","start":257,"end":264,"local":{"type":"Identifier","start":262,"end":264,"name":"i0"}}],"source":{"type":"Literal","start":270,"end":285,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":288,"end":319,"specifiers":[{"type":"ImportNamespaceSpecifier","start":295,"end":302,"local":{"type":"Identifier","start":300,"end":302,"name":"i1"}}],"source":{"type":"Literal","start":308,"end":318,"value":"./config","raw":"\"./config\""}},{"type":"ExportNamedDeclaration","start":321,"end":1144,"declaration":{"type":"ClassDeclaration","start":328,"end":1144,"id":{"type":"Identifier","start":334,"end":352,"name":"NgxFirebaseService"},"superClass":null,"body":{"type":"ClassBody","start":353,"end":1144,"body":[{"type":"MethodDefinition","start":360,"end":1141,"static":false,"computed":false,"key":{"type":"Identifier","start":360,"end":371,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":371,"end":1141,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":372,"end":378,"name":"config"},{"type":"Identifier","start":380,"end":394,"name":"emulatorConfig"}],"body":{"type":"BlockStatement","start":396,"end":1141,"body":[{"type":"ExpressionStatement","start":407,"end":444,"expression":{"type":"AssignmentExpression","start":407,"end":443,"operator":"=","left":{"type":"MemberExpression","start":407,"end":426,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":426,"name":"emulatorConfig"},"computed":false,"optional":false},"right":{"type":"Identifier","start":429,"end":443,"name":"emulatorConfig"}}},{"type":"IfStatement","start":454,"end":865,"test":{"type":"UnaryExpression","start":458,"end":484,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":459,"end":484,"object":{"type":"CallExpression","start":459,"end":477,"callee":{"type":"MemberExpression","start":459,"end":475,"object":{"type":"Identifier","start":459,"end":467,"name":"firebase"},"property":{"type":"Identifier","start":468,"end":475,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":478,"end":484,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":486,"end":743,"body":[{"type":"IfStatement","start":501,"end":732,"test":{"type":"Identifier","start":505,"end":511,"name":"config"},"consequent":{"type":"BlockStatement","start":513,"end":588,"body":[{"type":"ExpressionStatement","start":532,"end":573,"expression":{"type":"AssignmentExpression","start":532,"end":572,"operator":"=","left":{"type":"MemberExpression","start":532,"end":548,"object":{"type":"ThisExpression","start":532,"end":536},"property":{"type":"Identifier","start":537,"end":548,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":551,"end":572,"callee":{"type":"Identifier","start":551,"end":564,"name":"initializeApp"},"arguments":[{"type":"Identifier","start":565,"end":571,"name":"config"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":607,"end":732,"body":[{"type":"ThrowStatement","start":626,"end":717,"argument":{"type":"NewExpression","start":632,"end":716,"callee":{"type":"Identifier","start":636,"end":641,"name":"Error"},"arguments":[{"type":"Literal","start":642,"end":715,"value":"No previous Firebase App initialized so please provide a FirebaseConfig","raw":"'No previous Firebase App initialized so please provide a FirebaseConfig'"}]}}]}}]},"alternate":{"type":"BlockStatement","start":758,"end":865,"body":[{"type":"ExpressionStatement","start":773,"end":814,"expression":{"type":"AssignmentExpression","start":773,"end":813,"operator":"=","left":{"type":"MemberExpression","start":773,"end":789,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":789,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":792,"end":813,"object":{"type":"CallExpression","start":792,"end":810,"callee":{"type":"MemberExpression","start":792,"end":808,"object":{"type":"Identifier","start":792,"end":800,"name":"firebase"},"property":{"type":"Identifier","start":801,"end":808,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Literal","start":811,"end":812,"value":0,"raw":"0"},"computed":true,"optional":false}}}]}},{"type":"IfStatement","start":875,"end":1134,"test":{"type":"Identifier","start":879,"end":893,"name":"emulatorConfig"},"consequent":{"type":"BlockStatement","start":895,"end":1134,"body":[{"type":"ExpressionStatement","start":910,"end":1009,"expression":{"type":"CallExpression","start":910,"end":1008,"callee":{"type":"Identifier","start":910,"end":934,"name":"connectFirestoreEmulator"},"arguments":[{"type":"CallExpression","start":935,"end":965,"callee":{"type":"Identifier","start":935,"end":947,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":948,"end":964,"object":{"type":"ThisExpression","start":948,"end":952},"property":{"type":"Identifier","start":953,"end":964,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false},{"type":"MemberExpression","start":967,"end":986,"object":{"type":"Identifier","start":967,"end":981,"name":"emulatorConfig"},"property":{"type":"Identifier","start":982,"end":986,"name":"host"},"computed":false,"optional":false},{"type":"MemberExpression","start":988,"end":1007,"object":{"type":"Identifier","start":988,"end":1002,"name":"emulatorConfig"},"property":{"type":"Identifier","start":1003,"end":1007,"name":"port"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1146,"end":1423,"expression":{"type":"AssignmentExpression","start":1146,"end":1422,"operator":"=","left":{"type":"MemberExpression","start":1146,"end":1169,"object":{"type":"Identifier","start":1146,"end":1164,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1165,"end":1169,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1172,"end":1422,"callee":{"type":"MemberExpression","start":1172,"end":1193,"object":{"type":"Identifier","start":1172,"end":1174,"name":"i0"},"property":{"type":"Identifier","start":1175,"end":1193,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1194,"end":1421,"properties":[{"type":"Property","start":1196,"end":1216,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1196,"end":1206,"name":"minVersion"},"value":{"type":"Literal","start":1208,"end":1216,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1218,"end":1235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1218,"end":1225,"name":"version"},"value":{"type":"Literal","start":1227,"end":1235,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1237,"end":1249,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1237,"end":1245,"name":"ngImport"},"value":{"type":"Identifier","start":1247,"end":1249,"name":"i0"},"kind":"init"},{"type":"Property","start":1251,"end":1275,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1251,"end":1255,"name":"type"},"value":{"type":"Identifier","start":1257,"end":1275,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1277,"end":1380,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1277,"end":1281,"name":"deps"},"value":{"type":"ArrayExpression","start":1283,"end":1380,"elements":[{"type":"ObjectExpression","start":1284,"end":1328,"properties":[{"type":"Property","start":1286,"end":1310,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1286,"end":1291,"name":"token"},"value":{"type":"MemberExpression","start":1293,"end":1310,"object":{"type":"Identifier","start":1293,"end":1295,"name":"i1"},"property":{"type":"Identifier","start":1296,"end":1310,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1312,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1312,"end":1320,"name":"optional"},"value":{"type":"Literal","start":1322,"end":1326,"value":true,"raw":"true"},"kind":"init"}]},{"type":"ObjectExpression","start":1330,"end":1379,"properties":[{"type":"Property","start":1332,"end":1361,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1332,"end":1337,"name":"token"},"value":{"type":"Identifier","start":1339,"end":1361,"name":"FIRESTORE_USE_EMULATOR"},"kind":"init"},{"type":"Property","start":1363,"end":1377,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1363,"end":1371,"name":"optional"},"value":{"type":"Literal","start":1373,"end":1377,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1382,"end":1419,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1382,"end":1388,"name":"target"},"value":{"type":"MemberExpression","start":1390,"end":1419,"object":{"type":"MemberExpression","start":1390,"end":1408,"object":{"type":"Identifier","start":1390,"end":1392,"name":"i0"},"property":{"type":"Identifier","start":1393,"end":1408,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1409,"end":1419,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1425,"end":1582,"expression":{"type":"AssignmentExpression","start":1425,"end":1581,"operator":"=","left":{"type":"MemberExpression","start":1425,"end":1449,"object":{"type":"Identifier","start":1425,"end":1443,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1444,"end":1449,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1452,"end":1581,"callee":{"type":"MemberExpression","start":1452,"end":1476,"object":{"type":"Identifier","start":1452,"end":1454,"name":"i0"},"property":{"type":"Identifier","start":1455,"end":1476,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1477,"end":1580,"properties":[{"type":"Property","start":1479,"end":1499,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1479,"end":1489,"name":"minVersion"},"value":{"type":"Literal","start":1491,"end":1499,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1501,"end":1518,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1501,"end":1508,"name":"version"},"value":{"type":"Literal","start":1510,"end":1518,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1520,"end":1532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1520,"end":1528,"name":"ngImport"},"value":{"type":"Identifier","start":1530,"end":1532,"name":"i0"},"kind":"init"},{"type":"Property","start":1534,"end":1558,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1534,"end":1538,"name":"type"},"value":{"type":"Identifier","start":1540,"end":1558,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1560,"end":1578,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1560,"end":1570,"name":"providedIn"},"value":{"type":"Literal","start":1572,"end":1578,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1584,"end":2183,"expression":{"type":"CallExpression","start":1584,"end":2182,"callee":{"type":"MemberExpression","start":1584,"end":1611,"object":{"type":"Identifier","start":1584,"end":1586,"name":"i0"},"property":{"type":"Identifier","start":1587,"end":1611,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1612,"end":2181,"properties":[{"type":"Property","start":1614,"end":1634,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1614,"end":1624,"name":"minVersion"},"value":{"type":"Literal","start":1626,"end":1634,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1636,"end":1653,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1636,"end":1643,"name":"version"},"value":{"type":"Literal","start":1645,"end":1653,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1655,"end":1667,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1655,"end":1663,"name":"ngImport"},"value":{"type":"Identifier","start":1665,"end":1667,"name":"i0"},"kind":"init"},{"type":"Property","start":1669,"end":1693,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1669,"end":1673,"name":"type"},"value":{"type":"Identifier","start":1675,"end":1693,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1695,"end":1834,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1695,"end":1705,"name":"decorators"},"value":{"type":"ArrayExpression","start":1707,"end":1834,"elements":[{"type":"ObjectExpression","start":1708,"end":1833,"properties":[{"type":"Property","start":1723,"end":1739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1723,"end":1727,"name":"type"},"value":{"type":"Identifier","start":1729,"end":1739,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1754,"end":1822,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1754,"end":1758,"name":"args"},"value":{"type":"ArrayExpression","start":1760,"end":1822,"elements":[{"type":"ObjectExpression","start":1761,"end":1821,"properties":[{"type":"Property","start":1784,"end":1802,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1794,"name":"providedIn"},"value":{"type":"Literal","start":1796,"end":1802,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1836,"end":2179,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1836,"end":1850,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1852,"end":2179,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2179,"body":[{"type":"ReturnStatement","start":1866,"end":2177,"argument":{"type":"ArrayExpression","start":1873,"end":2176,"elements":[{"type":"ObjectExpression","start":1874,"end":1973,"properties":[{"type":"Property","start":1876,"end":1899,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1876,"end":1880,"name":"type"},"value":{"type":"MemberExpression","start":1882,"end":1899,"object":{"type":"Identifier","start":1882,"end":1884,"name":"i1"},"property":{"type":"Identifier","start":1885,"end":1899,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1901,"end":1971,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1901,"end":1911,"name":"decorators"},"value":{"type":"ArrayExpression","start":1913,"end":1971,"elements":[{"type":"ObjectExpression","start":1914,"end":1970,"properties":[{"type":"Property","start":1937,"end":1951,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1937,"end":1941,"name":"type"},"value":{"type":"Identifier","start":1943,"end":1951,"name":"Optional"},"kind":"init"}]}]},"kind":"init"}]},{"type":"ObjectExpression","start":1975,"end":2175,"properties":[{"type":"Property","start":1977,"end":1992,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1977,"end":1981,"name":"type"},"value":{"type":"Identifier","start":1983,"end":1992,"name":"undefined"},"kind":"init"},{"type":"Property","start":1994,"end":2173,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1994,"end":2004,"name":"decorators"},"value":{"type":"ArrayExpression","start":2006,"end":2173,"elements":[{"type":"ObjectExpression","start":2007,"end":2063,"properties":[{"type":"Property","start":2030,"end":2044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2030,"end":2034,"name":"type"},"value":{"type":"Identifier","start":2036,"end":2044,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2065,"end":2172,"properties":[{"type":"Property","start":2088,"end":2100,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2088,"end":2092,"name":"type"},"value":{"type":"Identifier","start":2094,"end":2100,"name":"Inject"},"kind":"init"},{"type":"Property","start":2123,"end":2153,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2123,"end":2127,"name":"args"},"value":{"type":"ArrayExpression","start":2129,"end":2153,"elements":[{"type":"Identifier","start":2130,"end":2152,"name":"FIRESTORE_USE_EMULATOR"}]},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","start":2185,"end":5555}]},"code":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","firebase/app","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firebase.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,16],[27,0,0,26],[29,0,0,28],[37,0,0,36],[39,0,0,37],[45,0,0,43],[60,0,0,58],[61,0,0,59]],[[0,0,2,0],[7,0,2,7],[9,0,2,24],[31,0,2,46],[33,0,2,72],[39,0,2,78],[49,0,2,88],[50,0,2,89]],[[0,0,3,0],[7,0,3,7],[15,0,3,15],[17,0,3,17],[19,0,3,31],[32,0,3,44],[34,0,3,45],[40,0,3,51],[54,0,3,65],[55,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[33,0,4,32],[35,0,4,34],[47,0,4,46],[49,0,4,48],[55,0,4,54],[75,0,4,74],[76,0,4,75]],[],[],[[0,0,11,0],[6,0,11,6],[13,0,11,13],[31,0,11,31]],[[4,0,20,2],[16,0,20,26],[22,0,20,49],[24,0,21,65],[38,0,21,105]],[[8,0,21,65],[27,0,21,79],[30,0,21,65],[44,0,21,79],[45,0,21,105]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[22,0,23,18],[29,0,23,25],[31,0,23,27],[32,0,23,28],[38,0,23,34],[40,0,23,36]],[[12,0,24,6],[16,0,24,10],[22,0,24,16],[24,0,24,18]],[[16,0,25,8],[20,0,25,12],[21,0,25,13],[32,0,25,24],[35,0,25,27],[48,0,25,40],[49,0,25,41],[55,0,25,47],[56,0,25,48],[57,0,25,49]],[[13,0,26,7]],[[17,0,26,13]],[[16,0,27,8],[22,0,27,14],[26,0,27,18],[31,0,27,23],[32,0,27,24],[105,0,27,97],[106,0,27,98],[107,0,27,98]],[[13,0,28,7]],[[9,0,30,5]],[[13,0,30,11]],[[12,0,31,6],[16,0,31,10],[17,0,31,11],[28,0,31,22],[31,0,31,25],[39,0,31,33],[40,0,31,34],[47,0,31,41],[49,0,31,43],[50,0,31,44],[51,0,31,45],[52,0,31,46],[53,0,31,47],[54,0,31,48],[93,0,31,87]],[[9,0,32,5]],[[8,0,34,4],[12,0,34,8],[26,0,34,22],[28,0,34,24]],[[12,0,35,6],[36,0,35,30],[37,0,35,31],[49,0,35,43],[50,0,35,44],[54,0,35,48],[55,0,35,49],[66,0,35,60],[67,0,35,61],[69,0,35,63],[83,0,35,77],[84,0,35,78],[88,0,35,82],[90,0,35,84],[104,0,35,98],[105,0,35,99],[109,0,35,103],[110,0,35,104],[111,0,35,105],[112,0,35,106],[117,0,35,111]],[[12,0,36,6],[106,0,36,100]],[[9,0,37,5]],[[4,0,38,2],[5,0,38,3]],[],[[111,0,11,13],[129,0,11,31],[193,0,21,34],[215,0,21,56]],[[115,0,11,13],[133,0,11,31],[147,0,8,14],[153,0,8,20]],[[91,0,11,13],[109,0,11,31]],[[18,0,7,1],[28,0,7,11]],[[19,0,7,12]],[[20,0,8,2],[30,0,8,12],[32,0,8,14],[38,0,8,20]],[[17,0,9,1]],[],[[26,0,20,15],[34,0,20,23]],[],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[32,0,21,33]],[[27,0,21,34],[49,0,21,56]]],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\n\nimport {FirebaseConfig, FIRESTORE_USE_EMULATOR, FirestoreEmulatorConfig} from './config';\nimport firebase, {FirebaseApp, initializeApp} from 'firebase/app';\nimport {connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxFirebaseService {\n  /**\n   * Service that holds the Firebase App\n   * Inject this service into any other service that requires the Firebase App\n   *\n   * For example NgxFireStoreExtendedService injects this service\n   */\n  public firebaseApp: FirebaseApp;\n\n  constructor(@Optional() config?: FirebaseConfig,\n              @Optional() @Inject(FIRESTORE_USE_EMULATOR) public emulatorConfig?: FirestoreEmulatorConfig) {\n\n    if (!firebase.getApps().length) {\n      if (config) {\n        this.firebaseApp = initializeApp(config);\n      } else {\n        throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig')\n      }\n\n    } else {\n      this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\n    }\n\n    if (emulatorConfig) {\n      connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\n      // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\n    }\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/app":{"external":true,"id":"firebase/app","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3116,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"Injectable"},"local":{"type":"Identifier","start":9,"end":19,"name":"Injectable"}}],"source":{"type":"Literal","start":27,"end":42,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":45,"end":104,"specifiers":[{"type":"ImportSpecifier","start":54,"end":66,"imported":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"},"local":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"}}],"source":{"type":"Literal","start":74,"end":103,"value":"../firestore-extended.class","raw":"'../firestore-extended.class'"}},{"type":"ImportDeclaration","start":106,"end":142,"specifiers":[{"type":"ImportNamespaceSpecifier","start":113,"end":120,"local":{"type":"Identifier","start":118,"end":120,"name":"i0"}}],"source":{"type":"Literal","start":126,"end":141,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":144,"end":189,"specifiers":[{"type":"ImportNamespaceSpecifier","start":151,"end":158,"local":{"type":"Identifier","start":156,"end":158,"name":"i1"}}],"source":{"type":"Literal","start":164,"end":188,"value":"./ngx-firebase.service","raw":"\"./ngx-firebase.service\""}},{"type":"ExportNamedDeclaration","start":191,"end":581,"declaration":{"type":"ClassDeclaration","start":198,"end":581,"id":{"type":"Identifier","start":204,"end":231,"name":"NgxFirestoreExtendedService"},"superClass":null,"body":{"type":"ClassBody","start":232,"end":581,"body":[{"type":"MethodDefinition","start":239,"end":458,"static":false,"computed":false,"key":{"type":"Identifier","start":239,"end":250,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":250,"end":458,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":251,"end":269,"name":"ngxFirebaseService"}],"body":{"type":"BlockStatement","start":271,"end":458,"body":[{"type":"ExpressionStatement","start":282,"end":327,"expression":{"type":"AssignmentExpression","start":282,"end":326,"operator":"=","left":{"type":"MemberExpression","start":282,"end":305,"object":{"type":"ThisExpression","start":282,"end":286},"property":{"type":"Identifier","start":287,"end":305,"name":"ngxFirebaseService"},"computed":false,"optional":false},"right":{"type":"Identifier","start":308,"end":326,"name":"ngxFirebaseService"}}},{"type":"ExpressionStatement","start":337,"end":401,"expression":{"type":"AssignmentExpression","start":337,"end":400,"operator":"=","left":{"type":"MemberExpression","start":337,"end":349,"object":{"type":"ThisExpression","start":337,"end":341},"property":{"type":"Identifier","start":342,"end":349,"name":"fireExt"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":352,"end":400,"callee":{"type":"Identifier","start":356,"end":368,"name":"FirestoreExt"},"arguments":[{"type":"MemberExpression","start":369,"end":399,"object":{"type":"Identifier","start":369,"end":387,"name":"ngxFirebaseService"},"property":{"type":"Identifier","start":388,"end":399,"name":"firebaseApp"},"computed":false,"optional":false}]}}}]}}},{"type":"MethodDefinition","start":464,"end":578,"static":false,"computed":false,"key":{"type":"Identifier","start":468,"end":479,"name":"firebaseApp"},"kind":"get","value":{"type":"FunctionExpression","start":479,"end":578,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":482,"end":578,"body":[{"type":"ReturnStatement","start":528,"end":571,"argument":{"type":"MemberExpression","start":535,"end":570,"object":{"type":"MemberExpression","start":535,"end":558,"object":{"type":"ThisExpression","start":535,"end":539},"property":{"type":"Identifier","start":540,"end":558,"name":"ngxFirebaseService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":559,"end":570,"name":"firebaseApp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":583,"end":815,"expression":{"type":"AssignmentExpression","start":583,"end":814,"operator":"=","left":{"type":"MemberExpression","start":583,"end":615,"object":{"type":"Identifier","start":583,"end":610,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":611,"end":615,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":618,"end":814,"callee":{"type":"MemberExpression","start":618,"end":639,"object":{"type":"Identifier","start":618,"end":620,"name":"i0"},"property":{"type":"Identifier","start":621,"end":639,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":640,"end":813,"properties":[{"type":"Property","start":642,"end":662,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":642,"end":652,"name":"minVersion"},"value":{"type":"Literal","start":654,"end":662,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":664,"end":681,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":664,"end":671,"name":"version"},"value":{"type":"Literal","start":673,"end":681,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":683,"end":695,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":683,"end":691,"name":"ngImport"},"value":{"type":"Identifier","start":693,"end":695,"name":"i0"},"kind":"init"},{"type":"Property","start":697,"end":730,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":697,"end":701,"name":"type"},"value":{"type":"Identifier","start":703,"end":730,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":732,"end":772,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":732,"end":736,"name":"deps"},"value":{"type":"ArrayExpression","start":738,"end":772,"elements":[{"type":"ObjectExpression","start":739,"end":771,"properties":[{"type":"Property","start":741,"end":769,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":741,"end":746,"name":"token"},"value":{"type":"MemberExpression","start":748,"end":769,"object":{"type":"Identifier","start":748,"end":750,"name":"i1"},"property":{"type":"Identifier","start":751,"end":769,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":774,"end":811,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":774,"end":780,"name":"target"},"value":{"type":"MemberExpression","start":782,"end":811,"object":{"type":"MemberExpression","start":782,"end":800,"object":{"type":"Identifier","start":782,"end":784,"name":"i0"},"property":{"type":"Identifier","start":785,"end":800,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":801,"end":811,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":817,"end":992,"expression":{"type":"AssignmentExpression","start":817,"end":991,"operator":"=","left":{"type":"MemberExpression","start":817,"end":850,"object":{"type":"Identifier","start":817,"end":844,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":845,"end":850,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":853,"end":991,"callee":{"type":"MemberExpression","start":853,"end":877,"object":{"type":"Identifier","start":853,"end":855,"name":"i0"},"property":{"type":"Identifier","start":856,"end":877,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":878,"end":990,"properties":[{"type":"Property","start":880,"end":900,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":880,"end":890,"name":"minVersion"},"value":{"type":"Literal","start":892,"end":900,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":902,"end":919,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":902,"end":909,"name":"version"},"value":{"type":"Literal","start":911,"end":919,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":921,"end":933,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":921,"end":929,"name":"ngImport"},"value":{"type":"Identifier","start":931,"end":933,"name":"i0"},"kind":"init"},{"type":"Property","start":935,"end":968,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":935,"end":939,"name":"type"},"value":{"type":"Identifier","start":941,"end":968,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":970,"end":988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":970,"end":980,"name":"providedIn"},"value":{"type":"Literal","start":982,"end":988,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":994,"end":1332,"expression":{"type":"CallExpression","start":994,"end":1331,"callee":{"type":"MemberExpression","start":994,"end":1021,"object":{"type":"Identifier","start":994,"end":996,"name":"i0"},"property":{"type":"Identifier","start":997,"end":1021,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1022,"end":1330,"properties":[{"type":"Property","start":1024,"end":1044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1024,"end":1034,"name":"minVersion"},"value":{"type":"Literal","start":1036,"end":1044,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1046,"end":1063,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1046,"end":1053,"name":"version"},"value":{"type":"Literal","start":1055,"end":1063,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1065,"end":1077,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1065,"end":1073,"name":"ngImport"},"value":{"type":"Identifier","start":1075,"end":1077,"name":"i0"},"kind":"init"},{"type":"Property","start":1079,"end":1112,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1079,"end":1083,"name":"type"},"value":{"type":"Identifier","start":1085,"end":1112,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":1114,"end":1253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1114,"end":1124,"name":"decorators"},"value":{"type":"ArrayExpression","start":1126,"end":1253,"elements":[{"type":"ObjectExpression","start":1127,"end":1252,"properties":[{"type":"Property","start":1142,"end":1158,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1142,"end":1146,"name":"type"},"value":{"type":"Identifier","start":1148,"end":1158,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1173,"end":1241,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1173,"end":1177,"name":"args"},"value":{"type":"ArrayExpression","start":1179,"end":1241,"elements":[{"type":"ObjectExpression","start":1180,"end":1240,"properties":[{"type":"Property","start":1203,"end":1221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1203,"end":1213,"name":"providedIn"},"value":{"type":"Literal","start":1215,"end":1221,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1255,"end":1328,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1255,"end":1269,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1271,"end":1328,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1283,"end":1328,"body":[{"type":"ReturnStatement","start":1285,"end":1326,"argument":{"type":"ArrayExpression","start":1292,"end":1325,"elements":[{"type":"ObjectExpression","start":1293,"end":1324,"properties":[{"type":"Property","start":1295,"end":1322,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1295,"end":1299,"name":"type"},"value":{"type":"MemberExpression","start":1301,"end":1322,"object":{"type":"Identifier","start":1301,"end":1303,"name":"i1"},"property":{"type":"Identifier","start":1304,"end":1322,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","start":1334,"end":3116}]},"code":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firestore-extended.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firestore-extended.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[19,0,0,18],[21,0,0,19],[27,0,0,25],[42,0,0,40],[43,0,0,41]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[58,0,4,56],[59,0,4,57]],[],[],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[40,0,9,40]],[[4,0,13,2],[16,0,13,22],[34,0,13,60]],[[8,0,13,22],[31,0,13,40],[34,0,13,22],[52,0,13,40],[53,0,13,60]],[[8,0,14,4],[12,0,14,8],[13,0,14,9],[20,0,14,16],[23,0,14,19],[27,0,14,23],[39,0,14,35],[40,0,14,36],[58,0,14,54],[59,0,14,55],[70,0,14,66],[71,0,14,67],[72,0,14,68],[73,0,14,70],[122,0,14,119]],[[4,0,15,2],[5,0,15,3]],[[4,0,17,2],[8,0,17,6],[19,0,17,17]],[[8,0,18,4],[33,0,18,29]],[[8,0,19,4],[15,0,19,11],[19,0,19,15],[20,0,19,16],[38,0,19,34],[39,0,19,35],[50,0,19,46],[51,0,19,47]],[[4,0,20,2],[5,0,20,3]],[],[[120,0,9,13],[147,0,9,40]],[[124,0,9,13],[151,0,9,40],[165,0,7,14],[171,0,7,20]],[[91,0,9,13],[118,0,9,40]],[[18,0,6,1],[28,0,6,11]],[[19,0,6,12]],[[20,0,7,2],[30,0,7,12],[32,0,7,14],[38,0,7,20]],[[17,0,8,1]]],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {NgxFirebaseService} from './ngx-firebase.service';\nimport {FirebaseApp} from 'firebase/app';\nimport {FirestoreExt} from '../firestore-extended.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFirestoreExtendedService {\n\n  public fireExt: FirestoreExt;\n\n  constructor(private ngxFirebaseService: NgxFirebaseService) {\n    this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp);  /* inject Firebase App from NgxFirebaseService */\n  }\n\n  get firebaseApp(): FirebaseApp {\n    /** Convenience getter */\n    return this.ngxFirebaseService.firebaseApp;\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2524,"body":[{"type":"ExportAllDeclaration","start":81,"end":124,"exported":null,"source":{"type":"Literal","start":95,"end":123,"value":"./lib/models/firestoreItem","raw":"'./lib/models/firestoreItem'"}},{"type":"ExportAllDeclaration","start":126,"end":167,"exported":null,"source":{"type":"Literal","start":140,"end":166,"value":"./lib/firestore-extended","raw":"'./lib/firestore-extended'"}},{"type":"ExportAllDeclaration","start":169,"end":212,"exported":null,"source":{"type":"Literal","start":183,"end":211,"value":"./lib/sub-collection-query","raw":"'./lib/sub-collection-query'"}},{"type":"ExportAllDeclaration","start":214,"end":258,"exported":null,"source":{"type":"Literal","start":228,"end":257,"value":"./lib/sub-collection-writer","raw":"'./lib/sub-collection-writer'"}},{"type":"ExportAllDeclaration","start":260,"end":290,"exported":null,"source":{"type":"Literal","start":274,"end":289,"value":"./lib/helpers","raw":"'./lib/helpers'"}},{"type":"ExportAllDeclaration","start":292,"end":325,"exported":null,"source":{"type":"Literal","start":306,"end":324,"value":"./lib/interfaces","raw":"'./lib/interfaces'"}},{"type":"ExportAllDeclaration","start":351,"end":407,"exported":null,"source":{"type":"Literal","start":365,"end":406,"value":"./lib/rxjs-ops/combine-latest-to-object","raw":"'./lib/rxjs-ops/combine-latest-to-object'"}},{"type":"ExportAllDeclaration","start":449,"end":496,"exported":null,"source":{"type":"Literal","start":463,"end":495,"value":"./lib/firestore-extended.class","raw":"'./lib/firestore-extended.class'"}},{"type":"ExportAllDeclaration","start":498,"end":538,"exported":null,"source":{"type":"Literal","start":512,"end":537,"value":"./lib/firestore-wrapper","raw":"'./lib/firestore-wrapper'"}},{"type":"ExportAllDeclaration","start":563,"end":596,"exported":null,"source":{"type":"Literal","start":577,"end":595,"value":"./lib/ngx/config","raw":"'./lib/ngx/config'"}},{"type":"ExportAllDeclaration","start":598,"end":644,"exported":null,"source":{"type":"Literal","start":612,"end":643,"value":"./lib/ngx/ngx-firebase.module","raw":"'./lib/ngx/ngx-firebase.module'"}},{"type":"ExportAllDeclaration","start":646,"end":693,"exported":null,"source":{"type":"Literal","start":660,"end":692,"value":"./lib/ngx/ngx-firebase.service","raw":"'./lib/ngx/ngx-firebase.service'"}},{"type":"ExportAllDeclaration","start":695,"end":752,"exported":null,"source":{"type":"Literal","start":709,"end":751,"value":"./lib/ngx/ngx-firestore-extended.service","raw":"'./lib/ngx/ngx-firestore-extended.service'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","start":754,"end":2524}]},"code":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[22,0,3,22]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,11,0],[22,0,11,22]],[[0,0,12,0],[14,0,12,14],[55,0,12,55],[56,0,12,56]],[[0,0,14,0],[38,0,14,38]],[[0,0,15,0],[14,0,15,14],[46,0,15,46],[47,0,15,47]],[[0,0,16,0],[14,0,16,14],[39,0,16,39],[40,0,16,40]],[[0,0,18,0],[21,0,18,21]],[[0,0,19,0],[14,0,19,14],[32,0,19,32],[33,0,19,33]],[[0,0,20,0],[14,0,20,14],[45,0,20,45],[46,0,20,46]],[[0,0,21,0],[14,0,21,14],[46,0,21,46],[47,0,21,47]],[[0,0,22,0],[14,0,22,14],[56,0,22,56],[57,0,22,57]]],"sourcesContent":["/*\n * Public API Surface of firestore-extended.ts\n */\n/* Base Api exports */\nexport * from './lib/models/firestoreItem';\nexport * from './lib/firestore-extended';\nexport * from './lib/sub-collection-query';\nexport * from './lib/sub-collection-writer';\nexport * from './lib/helpers';\nexport * from './lib/interfaces';\n\n/* Helper functions */\nexport * from './lib/rxjs-ops/combine-latest-to-object';\n\n/* Wrappers and Convenience Classes */\nexport * from './lib/firestore-extended.class';\nexport * from './lib/firestore-wrapper';\n\n/* Angular Exports */\nexport * from './lib/ngx/config';\nexport * from './lib/ngx/ngx-firebase.module';\nexport * from './lib/ngx/ngx-firebase.service';\nexport * from './lib/ngx/ngx-firestore-extended.service';\n\n"]},"resolvedIds":{"./lib/firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-query":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-writer":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/interfaces":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/models/firestoreItem":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/rxjs-ops/combine-latest-to-object":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.module":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firestore-extended.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":532,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","start":82,"end":532}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{}}}