{"modules":[{"ast":{"type":"Program","start":0,"end":4432,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","start":12,"end":4302},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/models/module.js.map","start":4304,"end":4432}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/models/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[4290,0,1,4290]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11740,"body":[{"type":"ImportDeclaration","start":0,"end":53,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"collection"},"local":{"type":"Identifier","start":9,"end":19,"name":"collection"}},{"type":"ImportSpecifier","start":21,"end":24,"imported":{"type":"Identifier","start":21,"end":24,"name":"doc"},"local":{"type":"Identifier","start":21,"end":24,"name":"doc"}}],"source":{"type":"Literal","start":32,"end":52,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":156,"end":463,"declaration":{"type":"FunctionDeclaration","start":163,"end":463,"id":{"type":"Identifier","start":172,"end":186,"name":"getRefFromPath"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":187,"end":191,"name":"path"},{"type":"Identifier","start":193,"end":202,"name":"firestore"}],"body":{"type":"BlockStatement","start":204,"end":463,"body":[{"type":"VariableDeclaration","start":211,"end":260,"declarations":[{"type":"VariableDeclarator","start":217,"end":259,"id":{"type":"Identifier","start":217,"end":234,"name":"pathSegmentAmount"},"init":{"type":"MemberExpression","start":237,"end":259,"object":{"type":"CallExpression","start":237,"end":252,"callee":{"type":"MemberExpression","start":237,"end":247,"object":{"type":"Identifier","start":237,"end":241,"name":"path"},"property":{"type":"Identifier","start":242,"end":247,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":248,"end":251,"value":"/","raw":"'/'"}],"optional":false},"property":{"type":"Identifier","start":253,"end":259,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":266,"end":460,"test":{"type":"BinaryExpression","start":270,"end":297,"left":{"type":"BinaryExpression","start":270,"end":291,"left":{"type":"Identifier","start":270,"end":287,"name":"pathSegmentAmount"},"operator":"%","right":{"type":"Literal","start":290,"end":291,"value":2,"raw":"2"}},"operator":"===","right":{"type":"Literal","start":296,"end":297,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":299,"end":370,"body":[{"type":"ReturnStatement","start":335,"end":363,"argument":{"type":"CallExpression","start":342,"end":362,"callee":{"type":"Identifier","start":342,"end":345,"name":"doc"},"arguments":[{"type":"Identifier","start":346,"end":355,"name":"firestore"},{"type":"Identifier","start":357,"end":361,"name":"path"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":381,"end":460,"body":[{"type":"ReturnStatement","start":418,"end":453,"argument":{"type":"CallExpression","start":425,"end":452,"callee":{"type":"Identifier","start":425,"end":435,"name":"collection"},"arguments":[{"type":"Identifier","start":436,"end":445,"name":"firestore"},{"type":"Identifier","start":447,"end":451,"name":"path"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":465,"end":653,"declaration":{"type":"FunctionDeclaration","start":472,"end":653,"id":{"type":"Identifier","start":481,"end":497,"name":"getSubCollection"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":498,"end":504,"name":"docRef"},{"type":"Identifier","start":506,"end":520,"name":"collectionName"}],"body":{"type":"BlockStatement","start":522,"end":653,"body":[{"type":"VariableDeclaration","start":529,"end":592,"declarations":[{"type":"VariableDeclarator","start":535,"end":591,"id":{"type":"Identifier","start":535,"end":549,"name":"collectionPath"},"init":{"type":"CallExpression","start":552,"end":591,"callee":{"type":"MemberExpression","start":552,"end":570,"object":{"type":"MemberExpression","start":552,"end":563,"object":{"type":"Identifier","start":552,"end":558,"name":"docRef"},"property":{"type":"Identifier","start":559,"end":563,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":564,"end":570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":571,"end":574,"value":"/","raw":"'/'"},{"type":"Identifier","start":576,"end":590,"name":"collectionName"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":598,"end":650,"argument":{"type":"CallExpression","start":605,"end":649,"callee":{"type":"Identifier","start":605,"end":615,"name":"collection"},"arguments":[{"type":"MemberExpression","start":616,"end":632,"object":{"type":"Identifier","start":616,"end":622,"name":"docRef"},"property":{"type":"Identifier","start":623,"end":632,"name":"firestore"},"computed":false,"optional":false},{"type":"Identifier","start":634,"end":648,"name":"collectionPath"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":655,"end":776,"declaration":{"type":"FunctionDeclaration","start":662,"end":776,"id":{"type":"Identifier","start":671,"end":686,"name":"getDocRefWithId"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":687,"end":700,"name":"collectionRef"},{"type":"Identifier","start":702,"end":704,"name":"id"}],"body":{"type":"BlockStatement","start":706,"end":776,"body":[{"type":"ReturnStatement","start":713,"end":773,"argument":{"type":"CallExpression","start":720,"end":772,"callee":{"type":"Identifier","start":720,"end":723,"name":"doc"},"arguments":[{"type":"MemberExpression","start":724,"end":747,"object":{"type":"Identifier","start":724,"end":737,"name":"collectionRef"},"property":{"type":"Identifier","start":738,"end":747,"name":"firestore"},"computed":false,"optional":false},{"type":"MemberExpression","start":749,"end":767,"object":{"type":"Identifier","start":749,"end":762,"name":"collectionRef"},"property":{"type":"Identifier","start":763,"end":767,"name":"path"},"computed":false,"optional":false},{"type":"Identifier","start":769,"end":771,"name":"id"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":961,"end":1260,"declaration":{"type":"FunctionDeclaration","start":968,"end":1260,"id":{"type":"Identifier","start":977,"end":990,"name":"addDataToItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":991,"end":995,"name":"item"},{"type":"Identifier","start":997,"end":1006,"name":"dataToAdd"},{"type":"AssignmentPattern","start":1008,"end":1023,"left":{"type":"Identifier","start":1008,"end":1015,"name":"inplace"},"right":{"type":"Literal","start":1018,"end":1023,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":1025,"end":1260,"body":[{"type":"IfStatement","start":1032,"end":1257,"test":{"type":"Identifier","start":1036,"end":1043,"name":"inplace"},"consequent":{"type":"BlockStatement","start":1045,"end":1171,"body":[{"type":"ExpressionStatement","start":1056,"end":1142,"expression":{"type":"CallExpression","start":1056,"end":1141,"callee":{"type":"MemberExpression","start":1056,"end":1089,"object":{"type":"CallExpression","start":1056,"end":1081,"callee":{"type":"MemberExpression","start":1056,"end":1070,"object":{"type":"Identifier","start":1056,"end":1062,"name":"Object"},"property":{"type":"Identifier","start":1063,"end":1070,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1071,"end":1080,"name":"dataToAdd"}],"optional":false},"property":{"type":"Identifier","start":1082,"end":1089,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1090,"end":1140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"ArrayPattern","start":1091,"end":1097,"elements":[{"type":"Identifier","start":1092,"end":1093,"name":"k"},{"type":"Identifier","start":1095,"end":1096,"name":"v"}]}],"body":{"type":"BlockStatement","start":1102,"end":1140,"body":[{"type":"ExpressionStatement","start":1117,"end":1129,"expression":{"type":"AssignmentExpression","start":1117,"end":1128,"operator":"=","left":{"type":"MemberExpression","start":1117,"end":1124,"object":{"type":"Identifier","start":1117,"end":1121,"name":"item"},"property":{"type":"Identifier","start":1122,"end":1123,"name":"k"},"computed":true,"optional":false},"right":{"type":"Identifier","start":1127,"end":1128,"name":"v"}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1152,"end":1164,"argument":{"type":"Identifier","start":1159,"end":1163,"name":"item"}}]},"alternate":{"type":"BlockStatement","start":1182,"end":1257,"body":[{"type":"ReturnStatement","start":1193,"end":1250,"argument":{"type":"CallExpression","start":1200,"end":1249,"callee":{"type":"MemberExpression","start":1200,"end":1213,"object":{"type":"Identifier","start":1200,"end":1206,"name":"Object"},"property":{"type":"Identifier","start":1207,"end":1213,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1214,"end":1237,"callee":{"type":"MemberExpression","start":1214,"end":1227,"object":{"type":"Identifier","start":1214,"end":1220,"name":"Object"},"property":{"type":"Identifier","start":1221,"end":1227,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1228,"end":1230,"properties":[]},{"type":"Identifier","start":1232,"end":1236,"name":"item"}],"optional":false},{"type":"Identifier","start":1239,"end":1248,"name":"dataToAdd"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1579,"end":1831,"declaration":{"type":"FunctionDeclaration","start":1586,"end":1831,"id":{"type":"Identifier","start":1595,"end":1609,"name":"addCreatedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1610,"end":1614,"name":"item"},{"type":"AssignmentPattern","start":1616,"end":1631,"left":{"type":"Identifier","start":1616,"end":1623,"name":"inplace"},"right":{"type":"Literal","start":1626,"end":1631,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":1633,"end":1657,"left":{"type":"Identifier","start":1633,"end":1644,"name":"createdDate"},"right":{"type":"NewExpression","start":1647,"end":1657,"callee":{"type":"Identifier","start":1651,"end":1655,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":1659,"end":1831,"body":[{"type":"IfStatement","start":1712,"end":1769,"test":{"type":"BinaryExpression","start":1716,"end":1737,"left":{"type":"Literal","start":1716,"end":1729,"value":"createdDate","raw":"'createdDate'"},"operator":"in","right":{"type":"Identifier","start":1733,"end":1737,"name":"item"}},"consequent":{"type":"BlockStatement","start":1739,"end":1769,"body":[{"type":"ReturnStatement","start":1750,"end":1762,"argument":{"type":"Identifier","start":1757,"end":1761,"name":"item"}}]},"alternate":null},{"type":"ReturnStatement","start":1775,"end":1828,"argument":{"type":"CallExpression","start":1782,"end":1827,"callee":{"type":"Identifier","start":1782,"end":1795,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":1796,"end":1800,"name":"item"},{"type":"ObjectExpression","start":1802,"end":1817,"properties":[{"type":"Property","start":1804,"end":1815,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":1804,"end":1815,"name":"createdDate"},"kind":"init","value":{"type":"Identifier","start":1804,"end":1815,"name":"createdDate"}}]},{"type":"Identifier","start":1819,"end":1826,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2086,"end":2232,"declaration":{"type":"FunctionDeclaration","start":2093,"end":2232,"id":{"type":"Identifier","start":2102,"end":2117,"name":"addModifiedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2118,"end":2122,"name":"item"},{"type":"AssignmentPattern","start":2124,"end":2139,"left":{"type":"Identifier","start":2124,"end":2131,"name":"inplace"},"right":{"type":"Literal","start":2134,"end":2139,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":2141,"end":2166,"left":{"type":"Identifier","start":2141,"end":2153,"name":"modifiedDate"},"right":{"type":"NewExpression","start":2156,"end":2166,"callee":{"type":"Identifier","start":2160,"end":2164,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":2168,"end":2232,"body":[{"type":"ReturnStatement","start":2175,"end":2229,"argument":{"type":"CallExpression","start":2182,"end":2228,"callee":{"type":"Identifier","start":2182,"end":2195,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2196,"end":2200,"name":"item"},{"type":"ObjectExpression","start":2202,"end":2218,"properties":[{"type":"Property","start":2204,"end":2216,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2204,"end":2216,"name":"modifiedDate"},"kind":"init","value":{"type":"Identifier","start":2204,"end":2216,"name":"modifiedDate"}}]},{"type":"Identifier","start":2220,"end":2227,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2452,"end":2576,"declaration":{"type":"FunctionDeclaration","start":2459,"end":2576,"id":{"type":"Identifier","start":2468,"end":2480,"name":"addCreatedBy"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2481,"end":2485,"name":"item"},{"type":"Identifier","start":2487,"end":2496,"name":"createdBy"},{"type":"AssignmentPattern","start":2498,"end":2513,"left":{"type":"Identifier","start":2498,"end":2505,"name":"inplace"},"right":{"type":"Literal","start":2508,"end":2513,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":2515,"end":2576,"body":[{"type":"ReturnStatement","start":2522,"end":2573,"argument":{"type":"CallExpression","start":2529,"end":2572,"callee":{"type":"Identifier","start":2529,"end":2542,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2543,"end":2547,"name":"item"},{"type":"ObjectExpression","start":2549,"end":2562,"properties":[{"type":"Property","start":2551,"end":2560,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2551,"end":2560,"name":"createdBy"},"kind":"init","value":{"type":"Identifier","start":2551,"end":2560,"name":"createdBy"}}]},{"type":"Identifier","start":2564,"end":2571,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2847,"end":3229,"declaration":{"type":"FunctionDeclaration","start":2854,"end":3229,"id":{"type":"Identifier","start":2863,"end":2885,"name":"convertTimestampToDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2886,"end":2890,"name":"item"}],"body":{"type":"BlockStatement","start":2892,"end":3229,"body":[{"type":"IfStatement","start":2899,"end":3048,"test":{"type":"CallExpression","start":2903,"end":2937,"callee":{"type":"MemberExpression","start":2903,"end":2922,"object":{"type":"Identifier","start":2903,"end":2907,"name":"item"},"property":{"type":"Identifier","start":2908,"end":2922,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2923,"end":2936,"value":"createdDate","raw":"'createdDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2939,"end":3048,"body":[{"type":"ExpressionStatement","start":2950,"end":2986,"expression":{"type":"AssignmentExpression","start":2950,"end":2985,"operator":"=","left":{"type":"MemberExpression","start":2950,"end":2966,"object":{"type":"Identifier","start":2950,"end":2954,"name":"item"},"property":{"type":"Identifier","start":2955,"end":2966,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2969,"end":2985,"object":{"type":"Identifier","start":2969,"end":2973,"name":"item"},"property":{"type":"Identifier","start":2974,"end":2985,"name":"createdDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2996,"end":3041,"expression":{"type":"AssignmentExpression","start":2996,"end":3040,"operator":"=","left":{"type":"MemberExpression","start":2996,"end":3012,"object":{"type":"Identifier","start":2996,"end":3000,"name":"item"},"property":{"type":"Identifier","start":3001,"end":3012,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3015,"end":3040,"callee":{"type":"MemberExpression","start":3015,"end":3038,"object":{"type":"MemberExpression","start":3015,"end":3031,"object":{"type":"Identifier","start":3015,"end":3019,"name":"item"},"property":{"type":"Identifier","start":3020,"end":3031,"name":"createdDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3032,"end":3038,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":3054,"end":3208,"test":{"type":"CallExpression","start":3058,"end":3093,"callee":{"type":"MemberExpression","start":3058,"end":3077,"object":{"type":"Identifier","start":3058,"end":3062,"name":"item"},"property":{"type":"Identifier","start":3063,"end":3077,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3078,"end":3092,"value":"modifiedDate","raw":"'modifiedDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3095,"end":3208,"body":[{"type":"ExpressionStatement","start":3106,"end":3144,"expression":{"type":"AssignmentExpression","start":3106,"end":3143,"operator":"=","left":{"type":"MemberExpression","start":3106,"end":3123,"object":{"type":"Identifier","start":3106,"end":3110,"name":"item"},"property":{"type":"Identifier","start":3111,"end":3123,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":3126,"end":3143,"object":{"type":"Identifier","start":3126,"end":3130,"name":"item"},"property":{"type":"Identifier","start":3131,"end":3143,"name":"modifiedDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":3154,"end":3201,"expression":{"type":"AssignmentExpression","start":3154,"end":3200,"operator":"=","left":{"type":"MemberExpression","start":3154,"end":3171,"object":{"type":"Identifier","start":3154,"end":3158,"name":"item"},"property":{"type":"Identifier","start":3159,"end":3171,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3174,"end":3200,"callee":{"type":"MemberExpression","start":3174,"end":3198,"object":{"type":"MemberExpression","start":3174,"end":3191,"object":{"type":"Identifier","start":3174,"end":3178,"name":"item"},"property":{"type":"Identifier","start":3179,"end":3191,"name":"modifiedDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3192,"end":3198,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":3214,"end":3226,"argument":{"type":"Identifier","start":3221,"end":3225,"name":"item"}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":3231,"end":11617},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":11619,"end":11740}]},"code":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, item), dataToAdd);\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/helpers.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,1,2],[19,0,1,12],[21,0,3,2],[24,0,3,5],[26,0,8,1],[32,0,8,7],[52,0,8,27],[53,0,8,28]],[[0,0,10,0],[99,0,10,99]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[30,0,11,30],[31,0,11,34],[35,0,11,46],[37,0,11,48],[46,0,11,68]],[[4,0,12,2],[10,0,12,8],[27,0,12,25],[30,0,12,36],[34,0,12,40],[35,0,12,41],[40,0,12,46],[41,0,12,47],[44,0,12,50],[45,0,12,51],[46,0,12,52],[52,0,12,58],[53,0,12,59]],[[4,0,13,2],[8,0,13,6],[25,0,13,23],[28,0,13,26],[29,0,13,27],[34,0,13,32],[35,0,13,33],[37,0,13,35],[39,0,13,37],[63,0,13,61]],[[8,0,14,4],[15,0,14,11],[18,0,14,14],[19,0,14,15],[28,0,14,24],[30,0,14,26],[34,0,14,30],[35,0,14,55],[36,0,14,56]],[[5,0,15,3]],[[9,0,15,9],[11,0,15,11],[36,0,15,36]],[[8,0,16,4],[15,0,16,11],[25,0,16,21],[26,0,16,22],[35,0,16,31],[37,0,16,33],[41,0,16,37],[42,0,16,64],[43,0,16,65]],[[5,0,17,3]],[[0,0,18,0],[1,0,18,1]],[[0,0,20,0],[6,0,20,6],[16,0,20,16],[32,0,20,32],[33,0,20,81],[39,0,20,109],[41,0,20,111],[55,0,20,133]],[[4,0,21,2],[10,0,21,8],[24,0,21,22],[27,0,21,33],[33,0,21,39],[34,0,21,40],[38,0,21,44],[39,0,21,45],[45,0,21,51],[46,0,21,52],[49,0,21,55],[51,0,21,57],[65,0,21,71],[66,0,21,72],[67,0,21,73]],[[4,0,22,2],[11,0,22,9],[21,0,22,19],[22,0,22,20],[28,0,22,26],[29,0,22,27],[38,0,22,36],[40,0,22,38],[54,0,22,52],[55,0,22,79],[56,0,22,80]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0],[6,0,25,6],[16,0,25,16],[31,0,25,31],[32,0,25,56],[45,0,25,93],[47,0,25,95],[49,0,25,105]],[[4,0,26,2],[11,0,26,9],[14,0,26,12],[15,0,26,13],[28,0,26,26],[29,0,26,27],[38,0,26,36],[40,0,26,38],[53,0,26,51],[54,0,26,52],[58,0,26,56],[60,0,26,58],[62,0,26,60],[63,0,26,85],[64,0,26,86]],[[0,0,27,0],[1,0,27,1]],[[0,0,29,0]],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[29,0,35,29],[30,0,36,2],[34,0,36,9],[36,0,36,11],[45,0,36,46],[47,0,36,48],[54,0,36,55],[57,0,36,58],[62,0,36,63]],[[4,0,38,2],[8,0,38,6],[15,0,38,13],[17,0,38,15]],[[8,0,39,4],[14,0,39,10],[15,0,39,11],[22,0,39,18],[23,0,39,19],[32,0,39,28],[33,0,39,29],[34,0,39,30],[41,0,39,37],[42,0,39,38],[43,0,39,39],[44,0,39,40],[45,0,39,41],[47,0,39,43],[48,0,39,44],[49,0,39,45],[51,0,39,47],[53,0,39,49]],[[12,0,40,7],[16,0,40,40],[17,0,40,41],[18,0,40,42],[19,0,40,43],[22,0,40,46],[23,0,40,47],[24,0,40,48]],[[8,0,41,4],[9,0,41,5],[10,0,41,6],[11,0,41,7]],[[8,0,42,4],[15,0,42,11],[19,0,42,15],[20,0,42,16]],[[5,0,43,3]],[[9,0,43,9]],[[8,0,44,4],[15,0,44,11],[17,0,44,12],[20,0,44,15],[24,0,44,19],[26,0,44,21],[29,0,44,24],[38,0,44,33],[40,0,44,34],[41,0,44,35]],[[5,0,45,3]],[[0,0,46,0],[1,0,46,1]],[[0,0,48,0]],[],[],[],[],[],[[3,0,54,3]],[[0,0,55,0],[6,0,55,6],[16,0,55,16],[30,0,55,30],[31,0,55,34],[35,0,55,41],[37,0,55,43],[44,0,55,50],[47,0,55,53],[52,0,55,58],[54,0,55,60],[68,0,55,80],[72,0,55,84],[76,0,55,88],[78,0,55,90]],[[4,0,56,2],[44,0,56,42]],[[4,0,57,2],[8,0,57,6],[21,0,57,19],[25,0,57,23],[29,0,57,27],[31,0,57,29]],[[8,0,58,4],[15,0,58,11],[19,0,58,15],[20,0,58,16]],[[5,0,59,3]],[[4,0,61,2],[11,0,61,9],[24,0,61,22],[25,0,61,23],[29,0,61,27],[31,0,61,29],[33,0,61,30],[44,0,61,41],[46,0,61,42],[48,0,61,44],[55,0,61,51],[56,0,61,52],[57,0,61,53]],[[0,0,62,0],[1,0,62,1]],[[0,0,64,0]],[],[],[],[],[],[[3,0,70,3]],[[0,0,71,0],[6,0,71,6],[16,0,71,16],[31,0,71,31],[32,0,71,35],[36,0,71,42],[38,0,71,44],[45,0,71,51],[48,0,71,54],[53,0,71,59],[55,0,71,61],[70,0,71,82],[74,0,71,86],[78,0,71,90],[80,0,71,92]],[[4,0,72,2],[11,0,72,9],[24,0,72,22],[25,0,72,23],[29,0,72,27],[31,0,72,29],[33,0,72,30],[45,0,72,42],[47,0,72,43],[49,0,72,45],[56,0,72,52],[57,0,72,53],[58,0,72,54]],[[0,0,73,0],[1,0,73,1]],[[0,0,75,0]],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[16,0,82,16],[28,0,82,28],[29,0,82,32],[33,0,82,39],[35,0,82,41],[44,0,82,76],[46,0,82,78],[53,0,82,85],[56,0,82,88],[61,0,82,93]],[[4,0,84,2],[11,0,84,9],[24,0,84,22],[25,0,84,23],[29,0,84,27],[31,0,84,29],[33,0,84,30],[42,0,84,39],[44,0,84,40],[46,0,84,42],[53,0,84,49],[54,0,84,50],[55,0,84,51]],[[0,0,85,0],[1,0,85,1]],[[0,0,88,0]],[],[],[],[],[],[],[],[[3,0,96,3]],[[0,0,98,0],[6,0,98,6],[16,0,98,16],[38,0,98,38],[39,0,98,92],[43,0,98,99]],[[4,0,99,2],[8,0,99,6],[12,0,99,10],[13,0,99,11],[27,0,99,25],[28,0,99,26],[41,0,99,39],[42,0,99,40],[44,0,99,42]],[[8,0,100,4],[12,0,100,8],[13,0,100,9],[24,0,100,20],[27,0,100,23],[31,0,100,27],[32,0,100,28],[43,0,100,60],[44,0,100,61]],[[8,0,101,4],[12,0,101,8],[13,0,101,9],[24,0,101,20],[27,0,101,23],[31,0,101,27],[32,0,101,28],[43,0,101,39],[44,0,101,40],[50,0,101,46],[52,0,101,48],[53,0,101,49]],[[5,0,102,3]],[[4,0,103,2],[8,0,103,6],[12,0,103,10],[13,0,103,11],[27,0,103,25],[28,0,103,26],[42,0,103,40],[43,0,103,41],[45,0,103,43]],[[8,0,104,4],[12,0,104,8],[13,0,104,9],[25,0,104,21],[28,0,104,24],[32,0,104,28],[33,0,104,29],[45,0,104,62],[46,0,104,63]],[[8,0,105,4],[12,0,105,8],[13,0,105,9],[25,0,105,21],[28,0,105,24],[32,0,105,28],[33,0,105,29],[45,0,105,41],[46,0,105,42],[52,0,105,48],[54,0,105,50],[55,0,105,51]],[[5,0,106,3]],[[4,0,108,2],[11,0,108,9],[15,0,108,13],[16,0,108,14]],[[0,0,109,0],[1,0,109,1]]],"sourcesContent":["import {\r\n  collection,\r\n  CollectionReference,\r\n  doc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  Firestore,\r\n  Timestamp as FirebaseTimestamp\r\n} from 'firebase/firestore';\r\n\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath<A>(path: string, firestore: Firestore): DocumentReference<A> | CollectionReference<A> {\r\n  const pathSegmentAmount: number = path.split('/').length;\r\n  if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n    return doc(firestore, path) as DocumentReference<A>;\r\n  } else { // odd meaning collection\r\n    return collection(firestore, path) as CollectionReference<A>;\r\n  }\r\n}\r\n\r\nexport function getSubCollection<T extends DocumentData, A extends DocumentData>(docRef: DocumentReference<T>, collectionName: string): CollectionReference<A> {\r\n  const collectionPath: string = docRef.path.concat('/', collectionName);\r\n  return collection(docRef.firestore, collectionPath) as CollectionReference<A>;\r\n}\r\n\r\nexport function getDocRefWithId<T extends DocumentData>(collectionRef: CollectionReference<T>, id: string): DocumentReference<T> {\r\n  return doc(collectionRef.firestore, collectionRef.path, id) as DocumentReference<T>;\r\n}\r\n\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem<A extends { [field: string]: any }>(\r\n  item: A, dataToAdd: { [field: string]: any }, inplace = false): A {\r\n\r\n  if (inplace) {\r\n    Object.entries(dataToAdd).forEach(([k, v]) => {\r\n      (item as { [field: string]: any })[k] = v;\r\n    });\r\n    return item;\r\n  } else {\r\n    return {...item, ...dataToAdd};\r\n  }\r\n}\r\n\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate<A>(item: A, inplace = false, createdDate: Date = new Date()): A {\r\n  // do not overwrite previous createdDate\r\n  if ('createdDate' in item) {\r\n    return item;\r\n  }\r\n\r\n  return addDataToItem(item, {createdDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate<A>(item: A, inplace = false, modifiedDate: Date = new Date()): A {\r\n  return addDataToItem(item, {modifiedDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy<A>(item: A, createdBy: { [field: string]: any }, inplace = false): A {\r\n\r\n  return addDataToItem(item, {createdBy}, inplace);\r\n}\r\n\r\n\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\n\r\nexport function convertTimestampToDate<A extends { createdDate?: any, modifiedDate?: any }>(item: A): A {\r\n  if (item.hasOwnProperty('createdDate')) {\r\n    item.createdDate = item.createdDate as FirebaseTimestamp;\r\n    item.createdDate = item.createdDate.toDate();\r\n  }\r\n  if (item.hasOwnProperty('modifiedDate')) {\r\n    item.modifiedDate = item.modifiedDate as FirebaseTimestamp;\r\n    item.modifiedDate = item.modifiedDate.toDate();\r\n  }\r\n\r\n  return item;\r\n}\r\n"]},"resolvedIds":{"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[19,0,0,19],[21,0,0,21],[24,0,0,24],[26,0,0,26],[32,0,0,32],[52,0,0,52],[53,0,0,53]],[[0,0,1,0],[99,0,1,99]],[[0,0,2,0],[6,0,2,6],[16,0,2,16],[30,0,2,30],[31,0,2,31],[35,0,2,35],[37,0,2,37],[46,0,2,46]],[[4,0,3,4],[10,0,3,10],[27,0,3,27],[30,0,3,30],[34,0,3,34],[35,0,3,35],[40,0,3,40],[41,0,3,41],[44,0,3,44],[45,0,3,45],[46,0,3,46],[52,0,3,52],[53,0,3,53]],[[4,0,4,4],[8,0,4,8],[25,0,4,25],[28,0,4,28],[29,0,4,29],[34,0,4,34],[35,0,4,35],[37,0,4,37],[39,0,4,39],[63,0,4,63]],[[8,0,5,8],[15,0,5,15],[18,0,5,18],[19,0,5,19],[28,0,5,28],[30,0,5,30],[34,0,5,34],[35,0,5,35],[36,0,5,36]],[[5,0,6,5]],[[9,0,7,9],[11,0,7,11],[36,0,7,36]],[[8,0,8,8],[15,0,8,15],[25,0,8,25],[26,0,8,26],[35,0,8,35],[37,0,8,37],[41,0,8,41],[42,0,8,42],[43,0,8,43]],[[5,0,9,5]],[[0,0,10,0],[1,0,10,1]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[32,0,11,32],[33,0,11,33],[39,0,11,39],[41,0,11,41],[55,0,11,55]],[[4,0,12,4],[10,0,12,10],[24,0,12,24],[27,0,12,27],[33,0,12,33],[34,0,12,34],[38,0,12,38],[39,0,12,39],[45,0,12,45],[46,0,12,46],[49,0,12,49],[51,0,12,51],[65,0,12,65],[66,0,12,66],[67,0,12,67]],[[4,0,13,4],[11,0,13,11],[21,0,13,21],[22,0,13,22],[28,0,13,28],[29,0,13,29],[38,0,13,38],[40,0,13,40],[54,0,13,54],[55,0,13,55],[56,0,13,56]],[[0,0,14,0],[1,0,14,1]],[[0,0,15,0],[6,0,15,6],[16,0,15,16],[31,0,15,31],[32,0,15,32],[45,0,15,45],[47,0,15,47],[49,0,15,49]],[[4,0,16,4],[11,0,16,11],[14,0,16,14],[15,0,16,15],[28,0,16,28],[29,0,16,29],[38,0,16,38],[40,0,16,40],[53,0,16,53],[54,0,16,54],[58,0,16,58],[60,0,16,60],[62,0,16,62],[63,0,16,63],[64,0,16,64]],[[0,0,17,0],[1,0,17,1]],[[0,0,18,0]],[],[],[],[],[[3,0,23,3]],[[0,0,24,0],[6,0,24,6],[16,0,24,16],[29,0,24,29],[30,0,24,30],[34,0,24,34],[36,0,24,36],[45,0,24,45],[47,0,24,47],[54,0,24,54],[57,0,24,57],[62,0,24,62]],[[4,0,25,4],[8,0,25,8],[15,0,25,15],[17,0,25,17]],[[8,0,26,8],[14,0,26,14],[15,0,26,15],[22,0,26,22],[23,0,26,23],[32,0,26,32],[33,0,26,33],[34,0,26,34],[41,0,26,41],[42,0,26,42],[43,0,26,43],[44,0,26,44],[45,0,26,45],[47,0,26,47],[48,0,26,48],[49,0,26,49],[51,0,26,51],[53,0,26,53]],[[12,0,27,12],[16,0,27,16],[17,0,27,17],[18,0,27,18],[19,0,27,19],[22,0,27,22],[23,0,27,23],[24,0,27,24]],[[8,0,28,8],[9,0,28,9],[10,0,28,10],[11,0,28,11]],[[8,0,29,8],[15,0,29,15],[19,0,29,19],[20,0,29,20]],[[5,0,30,5]],[[9,0,31,9]],[[8,0,32,8],[47,0,32,20],[51,0,32,24],[54,0,32,29],[63,0,32,38],[65,0,32,41]],[[5,0,33,5]],[[0,0,34,0],[1,0,34,1]],[[0,0,35,0]],[],[],[],[],[],[[3,0,41,3]],[[0,0,42,0],[6,0,42,6],[16,0,42,16],[30,0,42,30],[31,0,42,31],[35,0,42,35],[37,0,42,37],[44,0,42,44],[47,0,42,47],[52,0,42,52],[54,0,42,54],[65,0,42,65],[68,0,42,68],[72,0,42,72],[76,0,42,76],[78,0,42,78]],[[4,0,43,4],[44,0,43,44]],[[4,0,44,4],[8,0,44,8],[21,0,44,21],[25,0,44,25],[29,0,44,29],[31,0,44,31]],[[8,0,45,8],[15,0,45,15],[19,0,45,19],[20,0,45,20]],[[5,0,46,5]],[[4,0,47,4],[11,0,47,11],[24,0,47,24],[25,0,47,25],[29,0,47,29],[31,0,47,31],[33,0,47,33],[44,0,47,44],[46,0,47,46],[48,0,47,48],[55,0,47,55],[56,0,47,56],[57,0,47,57]],[[0,0,48,0],[1,0,48,1]],[[0,0,49,0]],[],[],[],[],[],[[3,0,55,3]],[[0,0,56,0],[6,0,56,6],[16,0,56,16],[31,0,56,31],[32,0,56,32],[36,0,56,36],[38,0,56,38],[45,0,56,45],[48,0,56,48],[53,0,56,53],[55,0,56,55],[67,0,56,67],[70,0,56,70],[74,0,56,74],[78,0,56,78],[80,0,56,80]],[[4,0,57,4],[11,0,57,11],[24,0,57,24],[25,0,57,25],[29,0,57,29],[31,0,57,31],[33,0,57,33],[45,0,57,45],[47,0,57,47],[49,0,57,49],[56,0,57,56],[57,0,57,57],[58,0,57,58]],[[0,0,58,0],[1,0,58,1]],[[0,0,59,0]],[],[],[],[],[],[[3,0,65,3]],[[0,0,66,0],[6,0,66,6],[16,0,66,16],[28,0,66,28],[29,0,66,29],[33,0,66,33],[35,0,66,35],[44,0,66,44],[46,0,66,46],[53,0,66,53],[56,0,66,56],[61,0,66,61]],[[4,0,67,4],[11,0,67,11],[24,0,67,24],[25,0,67,25],[29,0,67,29],[31,0,67,31],[33,0,67,33],[42,0,67,42],[44,0,67,44],[46,0,67,46],[53,0,67,53],[54,0,67,54],[55,0,67,55]],[[0,0,68,0],[1,0,68,1]],[[0,0,69,0]],[],[],[],[],[],[],[],[[3,0,77,3]],[[0,0,78,0],[6,0,78,6],[16,0,78,16],[38,0,78,38],[39,0,78,39],[43,0,78,43]],[[4,0,79,4],[8,0,79,8],[12,0,79,12],[13,0,79,13],[27,0,79,27],[28,0,79,28],[41,0,79,41],[42,0,79,42],[44,0,79,44]],[[8,0,80,8],[12,0,80,12],[13,0,80,13],[24,0,80,24],[27,0,80,27],[31,0,80,31],[32,0,80,32],[43,0,80,43],[44,0,80,44]],[[8,0,81,8],[12,0,81,12],[13,0,81,13],[24,0,81,24],[27,0,81,27],[31,0,81,31],[32,0,81,32],[43,0,81,43],[44,0,81,44],[50,0,81,50],[52,0,81,52],[53,0,81,53]],[[5,0,82,5]],[[4,0,83,4],[8,0,83,8],[12,0,83,12],[13,0,83,13],[27,0,83,27],[28,0,83,28],[42,0,83,42],[43,0,83,43],[45,0,83,45]],[[8,0,84,8],[12,0,84,12],[13,0,84,13],[25,0,84,25],[28,0,84,28],[32,0,84,32],[33,0,84,33],[45,0,84,45],[46,0,84,46]],[[8,0,85,8],[12,0,85,12],[13,0,85,13],[25,0,85,25],[28,0,85,28],[32,0,85,32],[33,0,85,33],[45,0,85,45],[46,0,85,46],[52,0,85,52],[54,0,85,54],[55,0,85,55]],[[5,0,86,5]],[[4,0,87,4],[11,0,87,11],[15,0,87,15],[16,0,87,16]],[[0,0,88,0],[1,0,88,1]],[[0,0,89,0],[8386,0,89,8386]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8103,"body":[{"type":"ExportNamedDeclaration","start":430,"end":835,"declaration":{"type":"FunctionDeclaration","start":437,"end":835,"id":{"type":"Identifier","start":446,"end":461,"name":"moveItemInArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":462,"end":467,"name":"array"},{"type":"Identifier","start":469,"end":478,"name":"fromIndex"},{"type":"Identifier","start":480,"end":487,"name":"toIndex"}],"body":{"type":"BlockStatement","start":489,"end":835,"body":[{"type":"VariableDeclaration","start":496,"end":544,"declarations":[{"type":"VariableDeclarator","start":502,"end":543,"id":{"type":"Identifier","start":502,"end":506,"name":"from"},"init":{"type":"CallExpression","start":509,"end":543,"callee":{"type":"Identifier","start":509,"end":514,"name":"clamp"},"arguments":[{"type":"Identifier","start":515,"end":524,"name":"fromIndex"},{"type":"BinaryExpression","start":526,"end":542,"left":{"type":"MemberExpression","start":526,"end":538,"object":{"type":"Identifier","start":526,"end":531,"name":"array"},"property":{"type":"Identifier","start":532,"end":538,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":541,"end":542,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":550,"end":594,"declarations":[{"type":"VariableDeclarator","start":556,"end":593,"id":{"type":"Identifier","start":556,"end":558,"name":"to"},"init":{"type":"CallExpression","start":561,"end":593,"callee":{"type":"Identifier","start":561,"end":566,"name":"clamp"},"arguments":[{"type":"Identifier","start":567,"end":574,"name":"toIndex"},{"type":"BinaryExpression","start":576,"end":592,"left":{"type":"MemberExpression","start":576,"end":588,"object":{"type":"Identifier","start":576,"end":581,"name":"array"},"property":{"type":"Identifier","start":582,"end":588,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":591,"end":592,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":600,"end":642,"test":{"type":"BinaryExpression","start":604,"end":615,"left":{"type":"Identifier","start":604,"end":608,"name":"from"},"operator":"===","right":{"type":"Identifier","start":613,"end":615,"name":"to"}},"consequent":{"type":"BlockStatement","start":617,"end":642,"body":[{"type":"ReturnStatement","start":628,"end":635,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":648,"end":675,"declarations":[{"type":"VariableDeclarator","start":654,"end":674,"id":{"type":"Identifier","start":654,"end":660,"name":"target"},"init":{"type":"MemberExpression","start":663,"end":674,"object":{"type":"Identifier","start":663,"end":668,"name":"array"},"property":{"type":"Identifier","start":669,"end":673,"name":"from"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":681,"end":714,"declarations":[{"type":"VariableDeclarator","start":687,"end":713,"id":{"type":"Identifier","start":687,"end":692,"name":"delta"},"init":{"type":"ConditionalExpression","start":695,"end":713,"test":{"type":"BinaryExpression","start":695,"end":704,"left":{"type":"Identifier","start":695,"end":697,"name":"to"},"operator":"<","right":{"type":"Identifier","start":700,"end":704,"name":"from"}},"consequent":{"type":"UnaryExpression","start":707,"end":709,"operator":"-","prefix":true,"argument":{"type":"Literal","start":708,"end":709,"value":1,"raw":"1"}},"alternate":{"type":"Literal","start":712,"end":713,"value":1,"raw":"1"}}}],"kind":"const"},{"type":"ForStatement","start":720,"end":807,"init":{"type":"VariableDeclaration","start":725,"end":737,"declarations":[{"type":"VariableDeclarator","start":729,"end":737,"id":{"type":"Identifier","start":729,"end":730,"name":"i"},"init":{"type":"Identifier","start":733,"end":737,"name":"from"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":739,"end":747,"left":{"type":"Identifier","start":739,"end":740,"name":"i"},"operator":"!==","right":{"type":"Identifier","start":745,"end":747,"name":"to"}},"update":{"type":"AssignmentExpression","start":749,"end":759,"operator":"+=","left":{"type":"Identifier","start":749,"end":750,"name":"i"},"right":{"type":"Identifier","start":754,"end":759,"name":"delta"}},"body":{"type":"BlockStatement","start":761,"end":807,"body":[{"type":"ExpressionStatement","start":772,"end":800,"expression":{"type":"AssignmentExpression","start":772,"end":799,"operator":"=","left":{"type":"MemberExpression","start":772,"end":780,"object":{"type":"Identifier","start":772,"end":777,"name":"array"},"property":{"type":"Identifier","start":778,"end":779,"name":"i"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":783,"end":799,"object":{"type":"Identifier","start":783,"end":788,"name":"array"},"property":{"type":"BinaryExpression","start":789,"end":798,"left":{"type":"Identifier","start":789,"end":790,"name":"i"},"operator":"+","right":{"type":"Identifier","start":793,"end":798,"name":"delta"}},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":813,"end":832,"expression":{"type":"AssignmentExpression","start":813,"end":831,"operator":"=","left":{"type":"MemberExpression","start":813,"end":822,"object":{"type":"Identifier","start":813,"end":818,"name":"array"},"property":{"type":"Identifier","start":819,"end":821,"name":"to"},"computed":true,"optional":false},"right":{"type":"Identifier","start":825,"end":831,"name":"target"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1134,"end":1454,"declaration":{"type":"FunctionDeclaration","start":1141,"end":1454,"id":{"type":"Identifier","start":1150,"end":1167,"name":"transferArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1168,"end":1180,"name":"currentArray"},{"type":"Identifier","start":1182,"end":1193,"name":"targetArray"},{"type":"Identifier","start":1195,"end":1207,"name":"currentIndex"},{"type":"Identifier","start":1209,"end":1220,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1222,"end":1454,"body":[{"type":"VariableDeclaration","start":1229,"end":1287,"declarations":[{"type":"VariableDeclarator","start":1235,"end":1286,"id":{"type":"Identifier","start":1235,"end":1239,"name":"from"},"init":{"type":"CallExpression","start":1242,"end":1286,"callee":{"type":"Identifier","start":1242,"end":1247,"name":"clamp"},"arguments":[{"type":"Identifier","start":1248,"end":1260,"name":"currentIndex"},{"type":"BinaryExpression","start":1262,"end":1285,"left":{"type":"MemberExpression","start":1262,"end":1281,"object":{"type":"Identifier","start":1262,"end":1274,"name":"currentArray"},"property":{"type":"Identifier","start":1275,"end":1281,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":1284,"end":1285,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1293,"end":1343,"declarations":[{"type":"VariableDeclarator","start":1299,"end":1342,"id":{"type":"Identifier","start":1299,"end":1301,"name":"to"},"init":{"type":"CallExpression","start":1304,"end":1342,"callee":{"type":"Identifier","start":1304,"end":1309,"name":"clamp"},"arguments":[{"type":"Identifier","start":1310,"end":1321,"name":"targetIndex"},{"type":"MemberExpression","start":1323,"end":1341,"object":{"type":"Identifier","start":1323,"end":1334,"name":"targetArray"},"property":{"type":"Identifier","start":1335,"end":1341,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1349,"end":1451,"test":{"type":"MemberExpression","start":1353,"end":1372,"object":{"type":"Identifier","start":1353,"end":1365,"name":"currentArray"},"property":{"type":"Identifier","start":1366,"end":1372,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1374,"end":1451,"body":[{"type":"ExpressionStatement","start":1385,"end":1444,"expression":{"type":"CallExpression","start":1385,"end":1443,"callee":{"type":"MemberExpression","start":1385,"end":1403,"object":{"type":"Identifier","start":1385,"end":1396,"name":"targetArray"},"property":{"type":"Identifier","start":1397,"end":1403,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1404,"end":1406,"name":"to"},{"type":"Literal","start":1408,"end":1409,"value":0,"raw":"0"},{"type":"MemberExpression","start":1411,"end":1442,"object":{"type":"CallExpression","start":1411,"end":1439,"callee":{"type":"MemberExpression","start":1411,"end":1430,"object":{"type":"Identifier","start":1411,"end":1423,"name":"currentArray"},"property":{"type":"Identifier","start":1424,"end":1430,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1431,"end":1435,"name":"from"},{"type":"Literal","start":1437,"end":1438,"value":1,"raw":"1"}],"optional":false},"property":{"type":"Literal","start":1440,"end":1441,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1813,"end":2060,"declaration":{"type":"FunctionDeclaration","start":1820,"end":2060,"id":{"type":"Identifier","start":1829,"end":1842,"name":"copyArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1855,"name":"currentArray"},{"type":"Identifier","start":1857,"end":1868,"name":"targetArray"},{"type":"Identifier","start":1870,"end":1882,"name":"currentIndex"},{"type":"Identifier","start":1884,"end":1895,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1897,"end":2060,"body":[{"type":"VariableDeclaration","start":1904,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1910,"end":1953,"id":{"type":"Identifier","start":1910,"end":1912,"name":"to"},"init":{"type":"CallExpression","start":1915,"end":1953,"callee":{"type":"Identifier","start":1915,"end":1920,"name":"clamp"},"arguments":[{"type":"Identifier","start":1921,"end":1932,"name":"targetIndex"},{"type":"MemberExpression","start":1934,"end":1952,"object":{"type":"Identifier","start":1934,"end":1945,"name":"targetArray"},"property":{"type":"Identifier","start":1946,"end":1952,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1960,"end":2057,"test":{"type":"MemberExpression","start":1964,"end":1983,"object":{"type":"Identifier","start":1964,"end":1976,"name":"currentArray"},"property":{"type":"Identifier","start":1977,"end":1983,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1985,"end":2057,"body":[{"type":"ExpressionStatement","start":1996,"end":2050,"expression":{"type":"CallExpression","start":1996,"end":2049,"callee":{"type":"MemberExpression","start":1996,"end":2014,"object":{"type":"Identifier","start":1996,"end":2007,"name":"targetArray"},"property":{"type":"Identifier","start":2008,"end":2014,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2015,"end":2017,"name":"to"},{"type":"Literal","start":2019,"end":2020,"value":0,"raw":"0"},{"type":"MemberExpression","start":2022,"end":2048,"object":{"type":"Identifier","start":2022,"end":2034,"name":"currentArray"},"property":{"type":"Identifier","start":2035,"end":2047,"name":"currentIndex"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"FunctionDeclaration","start":2114,"end":2192,"id":{"type":"Identifier","start":2123,"end":2128,"name":"clamp"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2129,"end":2134,"name":"value"},{"type":"Identifier","start":2136,"end":2139,"name":"max"}],"body":{"type":"BlockStatement","start":2141,"end":2192,"body":[{"type":"ReturnStatement","start":2148,"end":2189,"argument":{"type":"CallExpression","start":2155,"end":2188,"callee":{"type":"MemberExpression","start":2155,"end":2163,"object":{"type":"Identifier","start":2155,"end":2159,"name":"Math"},"property":{"type":"Identifier","start":2160,"end":2163,"name":"max"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2164,"end":2165,"value":0,"raw":"0"},{"type":"CallExpression","start":2167,"end":2187,"callee":{"type":"MemberExpression","start":2167,"end":2175,"object":{"type":"Identifier","start":2167,"end":2171,"name":"Math"},"property":{"type":"Identifier","start":2172,"end":2175,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2176,"end":2179,"name":"max"},{"type":"Identifier","start":2181,"end":2186,"name":"value"}],"optional":false}],"optional":false}}]}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","start":2194,"end":7980},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":7982,"end":8103}]},"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"drag-utils.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/drag-utils.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,8,0]],[],[],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[31,0,14,31],[32,0,14,41],[37,0,14,51],[39,0,14,53],[48,0,14,70],[50,0,14,72],[57,0,14,87]],[[4,0,15,2],[10,0,15,8],[14,0,15,12],[17,0,15,15],[22,0,15,20],[23,0,15,21],[32,0,15,30],[34,0,15,32],[39,0,15,37],[40,0,15,38],[46,0,15,44],[49,0,15,47],[50,0,15,48],[51,0,15,49],[52,0,15,50]],[[4,0,16,2],[10,0,16,8],[12,0,16,10],[15,0,16,13],[20,0,16,18],[21,0,16,19],[28,0,16,26],[30,0,16,28],[35,0,16,33],[36,0,16,34],[42,0,16,40],[45,0,16,43],[46,0,16,44],[47,0,16,45],[48,0,16,46]],[[4,0,18,2],[8,0,18,6],[12,0,18,10],[17,0,18,15],[19,0,18,17],[21,0,18,19]],[[8,0,19,4],[15,0,19,11]],[[5,0,20,3]],[[4,0,22,2],[10,0,22,8],[16,0,22,14],[19,0,22,17],[24,0,22,22],[25,0,22,23],[29,0,22,27],[30,0,22,28],[31,0,22,29]],[[4,0,23,2],[10,0,23,8],[15,0,23,13],[18,0,23,16],[20,0,23,18],[23,0,23,21],[27,0,23,25],[28,0,23,26],[29,0,23,27],[30,0,23,28],[31,0,23,29],[32,0,23,30],[33,0,23,31],[34,0,23,32],[35,0,23,33],[36,0,23,34],[37,0,23,35]],[[4,0,25,2],[9,0,25,7],[13,0,25,11],[14,0,25,12],[17,0,25,15],[21,0,25,19],[23,0,25,21],[24,0,25,22],[29,0,25,27],[31,0,25,29],[33,0,25,31],[34,0,25,32],[38,0,25,36],[43,0,25,41],[45,0,25,43]],[[8,0,26,4],[13,0,26,9],[14,0,26,10],[15,0,26,11],[16,0,26,12],[19,0,26,15],[24,0,26,20],[25,0,26,21],[26,0,26,22],[29,0,26,25],[34,0,26,30],[35,0,26,31],[36,0,26,32]],[[5,0,27,3]],[[4,0,29,2],[9,0,29,7],[10,0,29,8],[12,0,29,10],[13,0,29,11],[16,0,29,14],[22,0,29,20],[23,0,29,21]],[[0,0,30,0],[1,0,30,1]],[[0,0,33,0]],[],[],[],[],[],[[3,0,39,3]],[[0,0,40,0],[6,0,40,6],[16,0,40,16],[33,0,40,33],[34,0,40,43],[46,0,40,60],[48,0,41,43],[59,0,41,59],[61,0,42,43],[73,0,42,63],[75,0,43,43],[86,0,43,62]],[[4,0,44,2],[10,0,44,8],[14,0,44,12],[17,0,44,15],[22,0,44,20],[23,0,44,21],[35,0,44,33],[37,0,44,35],[49,0,44,47],[50,0,44,48],[56,0,44,54],[59,0,44,57],[60,0,44,58],[61,0,44,59],[62,0,44,60]],[[4,0,45,2],[10,0,45,8],[12,0,45,10],[15,0,45,13],[20,0,45,18],[21,0,45,19],[32,0,45,30],[34,0,45,32],[45,0,45,43],[46,0,45,44],[52,0,45,50],[53,0,45,51],[54,0,45,52]],[[4,0,47,2],[8,0,47,6],[20,0,47,18],[21,0,47,19],[27,0,47,25],[29,0,47,27]],[[8,0,48,4],[19,0,48,15],[20,0,48,16],[26,0,48,22],[27,0,48,23],[29,0,48,25],[31,0,48,27],[32,0,48,28],[34,0,48,30],[46,0,48,42],[47,0,48,43],[53,0,48,49],[54,0,48,50],[58,0,48,54],[60,0,48,56],[61,0,48,57],[62,0,48,58],[63,0,48,59],[64,0,48,60],[65,0,48,61],[66,0,48,62],[67,0,48,63]],[[5,0,49,3]],[[0,0,50,0],[1,0,50,1]],[[0,0,52,0]],[],[],[],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[16,0,61,16],[29,0,61,29],[30,0,61,39],[42,0,61,56],[44,0,62,39],[55,0,62,55],[57,0,63,39],[69,0,63,59],[71,0,64,39],[82,0,64,58]],[[4,0,65,2],[10,0,65,8],[12,0,65,10],[15,0,65,13],[20,0,65,18],[21,0,65,19],[32,0,65,30],[34,0,65,32],[45,0,65,43],[46,0,65,44],[52,0,65,50],[53,0,65,51],[54,0,65,52]],[[4,0,67,2],[8,0,67,6],[20,0,67,18],[21,0,67,19],[27,0,67,25],[29,0,67,27]],[[8,0,68,4],[19,0,68,15],[20,0,68,16],[26,0,68,22],[27,0,68,23],[29,0,68,25],[31,0,68,27],[32,0,68,28],[34,0,68,30],[46,0,68,42],[47,0,68,43],[59,0,68,55],[60,0,68,56],[61,0,68,57],[62,0,68,58]],[[5,0,69,3]],[[0,0,70,0],[1,0,70,1]],[[0,0,72,0],[50,0,72,50]],[[0,0,73,0],[9,0,73,9],[14,0,73,14],[15,0,73,15],[20,0,73,28],[22,0,73,30],[25,0,73,41]],[[4,0,74,2],[11,0,74,9],[15,0,74,13],[16,0,74,14],[19,0,74,17],[20,0,74,18],[21,0,74,19],[23,0,74,21],[27,0,74,25],[28,0,74,26],[31,0,74,29],[32,0,74,30],[35,0,74,33],[37,0,74,35],[42,0,74,40],[43,0,74,41],[44,0,74,42],[45,0,74,43]],[[0,0,75,0],[1,0,75,1]]],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\r\n  const from = clamp(fromIndex, array.length - 1);\r\n  const to = clamp(toIndex, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n}\r\n\r\n\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem<T = any>(currentArray: T[],\r\n                                           targetArray: T[],\r\n                                           currentIndex: number,\r\n                                           targetIndex: number): void {\r\n  const from = clamp(currentIndex, currentArray.length - 1);\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n  }\r\n}\r\n\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem<T = any>(currentArray: T[],\r\n                                       targetArray: T[],\r\n                                       currentIndex: number,\r\n                                       targetIndex: number): void {\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray[currentIndex]);\r\n  }\r\n}\r\n\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value: number, max: number): number {\r\n  return Math.max(0, Math.min(max, value));\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,7,0]],[],[],[],[],[[3,0,12,3]],[[0,0,13,0],[6,0,13,6],[16,0,13,16],[31,0,13,31],[32,0,13,32],[37,0,13,37],[39,0,13,39],[48,0,13,48],[50,0,13,50],[57,0,13,57]],[[4,0,14,4],[10,0,14,10],[14,0,14,14],[17,0,14,17],[22,0,14,22],[23,0,14,23],[32,0,14,32],[34,0,14,34],[39,0,14,39],[40,0,14,40],[46,0,14,46],[49,0,14,49],[50,0,14,50],[51,0,14,51],[52,0,14,52]],[[4,0,15,4],[10,0,15,10],[12,0,15,12],[15,0,15,15],[20,0,15,20],[21,0,15,21],[28,0,15,28],[30,0,15,30],[35,0,15,35],[36,0,15,36],[42,0,15,42],[45,0,15,45],[46,0,15,46],[47,0,15,47],[48,0,15,48]],[[4,0,16,4],[8,0,16,8],[12,0,16,12],[17,0,16,17],[19,0,16,19],[21,0,16,21]],[[8,0,17,8],[15,0,17,15]],[[5,0,18,5]],[[4,0,19,4],[10,0,19,10],[16,0,19,16],[19,0,19,19],[24,0,19,24],[25,0,19,25],[29,0,19,29],[30,0,19,30],[31,0,19,31]],[[4,0,20,4],[10,0,20,10],[15,0,20,15],[18,0,20,18],[20,0,20,20],[23,0,20,23],[27,0,20,27],[28,0,20,28],[29,0,20,29],[30,0,20,30],[31,0,20,31],[32,0,20,32],[33,0,20,33],[34,0,20,34],[35,0,20,35],[36,0,20,36],[37,0,20,37]],[[4,0,21,4],[9,0,21,9],[13,0,21,13],[14,0,21,14],[17,0,21,17],[21,0,21,21],[23,0,21,23],[24,0,21,24],[29,0,21,29],[31,0,21,31],[33,0,21,33],[34,0,21,34],[38,0,21,38],[43,0,21,43],[45,0,21,45]],[[8,0,22,8],[13,0,22,13],[14,0,22,14],[15,0,22,15],[16,0,22,16],[19,0,22,19],[24,0,22,24],[25,0,22,25],[26,0,22,26],[29,0,22,29],[34,0,22,34],[35,0,22,35],[36,0,22,36]],[[5,0,23,5]],[[4,0,24,4],[9,0,24,9],[10,0,24,10],[12,0,24,12],[13,0,24,13],[16,0,24,16],[22,0,24,22],[23,0,24,23]],[[0,0,25,0],[1,0,25,1]],[[0,0,26,0]],[],[],[],[],[],[[3,0,32,3]],[[0,0,33,0],[6,0,33,6],[16,0,33,16],[33,0,33,33],[34,0,33,34],[46,0,33,46],[48,0,33,48],[59,0,33,59],[61,0,33,61],[73,0,33,73],[75,0,33,75],[86,0,33,86]],[[4,0,34,4],[10,0,34,10],[14,0,34,14],[17,0,34,17],[22,0,34,22],[23,0,34,23],[35,0,34,35],[37,0,34,37],[49,0,34,49],[50,0,34,50],[56,0,34,56],[59,0,34,59],[60,0,34,60],[61,0,34,61],[62,0,34,62]],[[4,0,35,4],[10,0,35,10],[12,0,35,12],[15,0,35,15],[20,0,35,20],[21,0,35,21],[32,0,35,32],[34,0,35,34],[45,0,35,45],[46,0,35,46],[52,0,35,52],[53,0,35,53],[54,0,35,54]],[[4,0,36,4],[8,0,36,8],[20,0,36,20],[21,0,36,21],[27,0,36,27],[29,0,36,29]],[[8,0,37,8],[19,0,37,19],[20,0,37,20],[26,0,37,26],[27,0,37,27],[29,0,37,29],[31,0,37,31],[32,0,37,32],[34,0,37,34],[46,0,37,46],[47,0,37,47],[53,0,37,53],[54,0,37,54],[58,0,37,58],[60,0,37,60],[61,0,37,61],[62,0,37,62],[63,0,37,63],[64,0,37,64],[65,0,37,65],[66,0,37,66],[67,0,37,67]],[[5,0,38,5]],[[0,0,39,0],[1,0,39,1]],[[0,0,40,0]],[],[],[],[],[],[],[],[[3,0,48,3]],[[0,0,49,0],[6,0,49,6],[16,0,49,16],[29,0,49,29],[30,0,49,30],[42,0,49,42],[44,0,49,44],[55,0,49,55],[57,0,49,57],[69,0,49,69],[71,0,49,71],[82,0,49,82]],[[4,0,50,4],[10,0,50,10],[12,0,50,12],[15,0,50,15],[20,0,50,20],[21,0,50,21],[32,0,50,32],[34,0,50,34],[45,0,50,45],[46,0,50,46],[52,0,50,52],[53,0,50,53],[54,0,50,54]],[[4,0,51,4],[8,0,51,8],[20,0,51,20],[21,0,51,21],[27,0,51,27],[29,0,51,29]],[[8,0,52,8],[19,0,52,19],[20,0,52,20],[26,0,52,26],[27,0,52,27],[29,0,52,29],[31,0,52,31],[32,0,52,32],[34,0,52,34],[46,0,52,46],[47,0,52,47],[59,0,52,59],[60,0,52,60],[61,0,52,61],[62,0,52,62]],[[5,0,53,5]],[[0,0,54,0],[1,0,54,1]],[[0,0,55,0],[50,0,55,50]],[[0,0,56,0],[9,0,56,9],[14,0,56,14],[15,0,56,15],[20,0,56,20],[22,0,56,22],[25,0,56,25]],[[4,0,57,4],[11,0,57,11],[15,0,57,15],[16,0,57,16],[19,0,57,19],[20,0,57,20],[21,0,57,21],[23,0,57,23],[27,0,57,27],[28,0,57,28],[31,0,57,31],[32,0,57,32],[35,0,57,35],[37,0,57,37],[42,0,57,42],[43,0,57,43],[44,0,57,44],[45,0,57,45]],[[0,0,58,0],[1,0,58,1]],[[0,0,59,0],[5786,0,59,5786]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":17832,"body":[{"type":"ImportDeclaration","start":0,"end":28,"specifiers":[{"type":"ImportSpecifier","start":9,"end":13,"imported":{"type":"Identifier","start":9,"end":13,"name":"from"},"local":{"type":"Identifier","start":9,"end":13,"name":"from"}}],"source":{"type":"Literal","start":21,"end":27,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":30,"end":68,"specifiers":[{"type":"ImportSpecifier","start":39,"end":43,"imported":{"type":"Identifier","start":39,"end":43,"name":"take"},"local":{"type":"Identifier","start":39,"end":43,"name":"take"}}],"source":{"type":"Literal","start":51,"end":67,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":70,"end":270,"specifiers":[{"type":"ImportSpecifier","start":79,"end":85,"imported":{"type":"Identifier","start":79,"end":85,"name":"addDoc"},"local":{"type":"Identifier","start":79,"end":85,"name":"addDoc"}},{"type":"ImportSpecifier","start":87,"end":97,"imported":{"type":"Identifier","start":87,"end":97,"name":"collection"},"local":{"type":"Identifier","start":87,"end":97,"name":"collection"}},{"type":"ImportSpecifier","start":99,"end":108,"imported":{"type":"Identifier","start":99,"end":108,"name":"deleteDoc"},"local":{"type":"Identifier","start":99,"end":108,"name":"deleteDoc"}},{"type":"ImportSpecifier","start":110,"end":115,"imported":{"type":"Identifier","start":110,"end":115,"name":"endAt"},"local":{"type":"Identifier","start":110,"end":115,"name":"endAt"}},{"type":"ImportSpecifier","start":117,"end":126,"imported":{"type":"Identifier","start":117,"end":126,"name":"endBefore"},"local":{"type":"Identifier","start":117,"end":126,"name":"endBefore"}},{"type":"ImportSpecifier","start":128,"end":134,"imported":{"type":"Identifier","start":128,"end":134,"name":"getDoc"},"local":{"type":"Identifier","start":128,"end":134,"name":"getDoc"}},{"type":"ImportSpecifier","start":136,"end":143,"imported":{"type":"Identifier","start":136,"end":143,"name":"getDocs"},"local":{"type":"Identifier","start":136,"end":143,"name":"getDocs"}},{"type":"ImportSpecifier","start":145,"end":157,"imported":{"type":"Identifier","start":145,"end":157,"name":"getFirestore"},"local":{"type":"Identifier","start":145,"end":157,"name":"getFirestore"}},{"type":"ImportSpecifier","start":159,"end":164,"imported":{"type":"Identifier","start":159,"end":164,"name":"limit"},"local":{"type":"Identifier","start":159,"end":164,"name":"limit"}},{"type":"ImportSpecifier","start":166,"end":177,"imported":{"type":"Identifier","start":166,"end":177,"name":"limitToLast"},"local":{"type":"Identifier","start":166,"end":177,"name":"limitToLast"}},{"type":"ImportSpecifier","start":179,"end":186,"imported":{"type":"Identifier","start":179,"end":186,"name":"orderBy"},"local":{"type":"Identifier","start":179,"end":186,"name":"orderBy"}},{"type":"ImportSpecifier","start":188,"end":193,"imported":{"type":"Identifier","start":188,"end":193,"name":"query"},"local":{"type":"Identifier","start":188,"end":193,"name":"query"}},{"type":"ImportSpecifier","start":195,"end":201,"imported":{"type":"Identifier","start":195,"end":201,"name":"setDoc"},"local":{"type":"Identifier","start":195,"end":201,"name":"setDoc"}},{"type":"ImportSpecifier","start":203,"end":213,"imported":{"type":"Identifier","start":203,"end":213,"name":"startAfter"},"local":{"type":"Identifier","start":203,"end":213,"name":"startAfter"}},{"type":"ImportSpecifier","start":215,"end":222,"imported":{"type":"Identifier","start":215,"end":222,"name":"startAt"},"local":{"type":"Identifier","start":215,"end":222,"name":"startAt"}},{"type":"ImportSpecifier","start":224,"end":233,"imported":{"type":"Identifier","start":224,"end":233,"name":"updateDoc"},"local":{"type":"Identifier","start":224,"end":233,"name":"updateDoc"}},{"type":"ImportSpecifier","start":235,"end":240,"imported":{"type":"Identifier","start":235,"end":240,"name":"where"},"local":{"type":"Identifier","start":235,"end":240,"name":"where"}}],"source":{"type":"Literal","start":249,"end":269,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":272,"end":1298,"declaration":{"type":"ClassDeclaration","start":279,"end":1298,"id":{"type":"Identifier","start":285,"end":308,"name":"FirestoreWrapper"},"superClass":null,"body":{"type":"ClassBody","start":309,"end":1298,"body":[{"type":"MethodDefinition","start":476,"end":550,"static":false,"computed":false,"key":{"type":"Identifier","start":476,"end":487,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":487,"end":550,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":488,"end":499,"name":"firebaseApp"}],"body":{"type":"BlockStatement","start":501,"end":550,"body":[{"type":"ExpressionStatement","start":512,"end":543,"expression":{"type":"AssignmentExpression","start":512,"end":542,"operator":"=","left":{"type":"MemberExpression","start":512,"end":528,"object":{"type":"ThisExpression","start":512,"end":516},"property":{"type":"Identifier","start":517,"end":528,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":531,"end":542,"name":"firebaseApp"}}}]}}},{"type":"MethodDefinition","start":556,"end":628,"static":false,"computed":false,"key":{"type":"Identifier","start":560,"end":569,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":569,"end":628,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":572,"end":628,"body":[{"type":"ReturnStatement","start":583,"end":621,"argument":{"type":"CallExpression","start":590,"end":620,"callee":{"type":"Identifier","start":590,"end":602,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":603,"end":619,"object":{"type":"ThisExpression","start":603,"end":607},"property":{"type":"Identifier","start":608,"end":619,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":646,"end":704,"static":false,"computed":false,"key":{"type":"Identifier","start":646,"end":649,"name":"doc"},"kind":"method","value":{"type":"FunctionExpression","start":649,"end":704,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":650,"end":656,"name":"docRef"}],"body":{"type":"BlockStatement","start":658,"end":704,"body":[{"type":"ReturnStatement","start":669,"end":697,"argument":{"type":"CallExpression","start":676,"end":696,"callee":{"type":"Identifier","start":676,"end":680,"name":"from"},"arguments":[{"type":"CallExpression","start":681,"end":695,"callee":{"type":"Identifier","start":681,"end":687,"name":"getDoc"},"arguments":[{"type":"Identifier","start":688,"end":694,"name":"docRef"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":710,"end":808,"static":false,"computed":false,"key":{"type":"Identifier","start":710,"end":713,"name":"add"},"kind":"method","value":{"type":"FunctionExpression","start":713,"end":808,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":714,"end":727,"name":"collectionRef"},{"type":"Identifier","start":729,"end":733,"name":"data"}],"body":{"type":"BlockStatement","start":735,"end":808,"body":[{"type":"ReturnStatement","start":746,"end":801,"argument":{"type":"CallExpression","start":753,"end":800,"callee":{"type":"MemberExpression","start":753,"end":791,"object":{"type":"CallExpression","start":753,"end":786,"callee":{"type":"Identifier","start":753,"end":757,"name":"from"},"arguments":[{"type":"CallExpression","start":758,"end":785,"callee":{"type":"Identifier","start":758,"end":764,"name":"addDoc"},"arguments":[{"type":"Identifier","start":765,"end":778,"name":"collectionRef"},{"type":"Identifier","start":780,"end":784,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":787,"end":791,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":792,"end":799,"callee":{"type":"Identifier","start":792,"end":796,"name":"take"},"arguments":[{"type":"Literal","start":797,"end":798,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":814,"end":1044,"static":false,"computed":false,"key":{"type":"Identifier","start":814,"end":817,"name":"set"},"kind":"method","value":{"type":"FunctionExpression","start":817,"end":1044,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":818,"end":824,"name":"docRef"},{"type":"Identifier","start":826,"end":830,"name":"data"},{"type":"Identifier","start":832,"end":839,"name":"options"}],"body":{"type":"BlockStatement","start":841,"end":1044,"body":[{"type":"IfStatement","start":852,"end":1037,"test":{"type":"Identifier","start":856,"end":863,"name":"options"},"consequent":{"type":"BlockStatement","start":865,"end":948,"body":[{"type":"ReturnStatement","start":880,"end":937,"argument":{"type":"CallExpression","start":887,"end":936,"callee":{"type":"MemberExpression","start":887,"end":927,"object":{"type":"CallExpression","start":887,"end":922,"callee":{"type":"Identifier","start":887,"end":891,"name":"from"},"arguments":[{"type":"CallExpression","start":892,"end":921,"callee":{"type":"Identifier","start":892,"end":898,"name":"setDoc"},"arguments":[{"type":"Identifier","start":899,"end":905,"name":"docRef"},{"type":"Identifier","start":907,"end":911,"name":"data"},{"type":"Identifier","start":913,"end":920,"name":"options"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":923,"end":927,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":928,"end":935,"callee":{"type":"Identifier","start":928,"end":932,"name":"take"},"arguments":[{"type":"Literal","start":933,"end":934,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":963,"end":1037,"body":[{"type":"ReturnStatement","start":978,"end":1026,"argument":{"type":"CallExpression","start":985,"end":1025,"callee":{"type":"MemberExpression","start":985,"end":1016,"object":{"type":"CallExpression","start":985,"end":1011,"callee":{"type":"Identifier","start":985,"end":989,"name":"from"},"arguments":[{"type":"CallExpression","start":990,"end":1010,"callee":{"type":"Identifier","start":990,"end":996,"name":"setDoc"},"arguments":[{"type":"Identifier","start":997,"end":1003,"name":"docRef"},{"type":"Identifier","start":1005,"end":1009,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1012,"end":1016,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1017,"end":1024,"callee":{"type":"Identifier","start":1017,"end":1021,"name":"take"},"arguments":[{"type":"Literal","start":1022,"end":1023,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":1050,"end":1128,"static":false,"computed":false,"key":{"type":"Identifier","start":1050,"end":1056,"name":"delete"},"kind":"method","value":{"type":"FunctionExpression","start":1056,"end":1128,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1057,"end":1063,"name":"docRef"}],"body":{"type":"BlockStatement","start":1065,"end":1128,"body":[{"type":"ReturnStatement","start":1076,"end":1121,"argument":{"type":"CallExpression","start":1083,"end":1120,"callee":{"type":"MemberExpression","start":1083,"end":1111,"object":{"type":"CallExpression","start":1083,"end":1106,"callee":{"type":"Identifier","start":1083,"end":1087,"name":"from"},"arguments":[{"type":"CallExpression","start":1088,"end":1105,"callee":{"type":"Identifier","start":1088,"end":1097,"name":"deleteDoc"},"arguments":[{"type":"Identifier","start":1098,"end":1104,"name":"docRef"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1107,"end":1111,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1112,"end":1119,"callee":{"type":"Identifier","start":1112,"end":1116,"name":"take"},"arguments":[{"type":"Literal","start":1117,"end":1118,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1134,"end":1233,"static":false,"computed":false,"key":{"type":"Identifier","start":1134,"end":1140,"name":"update"},"kind":"method","value":{"type":"FunctionExpression","start":1140,"end":1233,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1141,"end":1147,"name":"docRef"},{"type":"Identifier","start":1149,"end":1153,"name":"data"},{"type":"Identifier","start":1155,"end":1162,"name":"options"}],"body":{"type":"BlockStatement","start":1164,"end":1233,"body":[{"type":"ReturnStatement","start":1175,"end":1226,"argument":{"type":"CallExpression","start":1182,"end":1225,"callee":{"type":"MemberExpression","start":1182,"end":1216,"object":{"type":"CallExpression","start":1182,"end":1211,"callee":{"type":"Identifier","start":1182,"end":1186,"name":"from"},"arguments":[{"type":"CallExpression","start":1187,"end":1210,"callee":{"type":"Identifier","start":1187,"end":1196,"name":"updateDoc"},"arguments":[{"type":"Identifier","start":1197,"end":1203,"name":"docRef"},{"type":"Identifier","start":1205,"end":1209,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1212,"end":1216,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1217,"end":1224,"callee":{"type":"Identifier","start":1217,"end":1221,"name":"take"},"arguments":[{"type":"Literal","start":1222,"end":1223,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1239,"end":1295,"static":false,"computed":false,"key":{"type":"Identifier","start":1239,"end":1249,"name":"collection"},"kind":"method","value":{"type":"FunctionExpression","start":1249,"end":1295,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1250,"end":1251,"name":"q"}],"body":{"type":"BlockStatement","start":1253,"end":1295,"body":[{"type":"ReturnStatement","start":1264,"end":1288,"argument":{"type":"CallExpression","start":1271,"end":1287,"callee":{"type":"Identifier","start":1271,"end":1275,"name":"from"},"arguments":[{"type":"CallExpression","start":1276,"end":1286,"callee":{"type":"Identifier","start":1276,"end":1283,"name":"getDocs"},"arguments":[{"type":"Identifier","start":1284,"end":1285,"name":"q"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1980,"end":4201,"declaration":{"type":"ClassDeclaration","start":1987,"end":4201,"id":{"type":"Identifier","start":1993,"end":2007,"name":"QueryContainer"},"superClass":null,"body":{"type":"ClassBody","start":2008,"end":4201,"body":[{"type":"MethodDefinition","start":2015,"end":2102,"static":false,"computed":false,"key":{"type":"Identifier","start":2015,"end":2026,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":2026,"end":2102,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2027,"end":2030,"name":"ref"}],"body":{"type":"BlockStatement","start":2032,"end":2102,"body":[{"type":"ExpressionStatement","start":2043,"end":2058,"expression":{"type":"AssignmentExpression","start":2043,"end":2057,"operator":"=","left":{"type":"MemberExpression","start":2043,"end":2051,"object":{"type":"ThisExpression","start":2043,"end":2047},"property":{"type":"Identifier","start":2048,"end":2051,"name":"ref"},"computed":false,"optional":false},"right":{"type":"Identifier","start":2054,"end":2057,"name":"ref"}}},{"type":"ExpressionStatement","start":2068,"end":2095,"expression":{"type":"AssignmentExpression","start":2068,"end":2094,"operator":"=","left":{"type":"MemberExpression","start":2068,"end":2089,"object":{"type":"ThisExpression","start":2068,"end":2072},"property":{"type":"Identifier","start":2073,"end":2089,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2092,"end":2094,"elements":[]}}}]}}},{"type":"MethodDefinition","start":2165,"end":2287,"static":true,"computed":false,"key":{"type":"Identifier","start":2172,"end":2180,"name":"fromPath"},"kind":"method","value":{"type":"FunctionExpression","start":2180,"end":2287,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2181,"end":2190,"name":"firestore"},{"type":"Identifier","start":2192,"end":2196,"name":"path"}],"body":{"type":"BlockStatement","start":2198,"end":2287,"body":[{"type":"VariableDeclaration","start":2209,"end":2249,"declarations":[{"type":"VariableDeclarator","start":2215,"end":2248,"id":{"type":"Identifier","start":2215,"end":2218,"name":"ref"},"init":{"type":"CallExpression","start":2221,"end":2248,"callee":{"type":"Identifier","start":2221,"end":2231,"name":"collection"},"arguments":[{"type":"Identifier","start":2232,"end":2241,"name":"firestore"},{"type":"Identifier","start":2243,"end":2247,"name":"path"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2259,"end":2280,"argument":{"type":"NewExpression","start":2266,"end":2279,"callee":{"type":"ThisExpression","start":2270,"end":2274},"arguments":[{"type":"Identifier","start":2275,"end":2278,"name":"ref"}]}}]}}},{"type":"MethodDefinition","start":2354,"end":2433,"static":false,"computed":false,"key":{"type":"Identifier","start":2358,"end":2363,"name":"query"},"kind":"get","value":{"type":"FunctionExpression","start":2363,"end":2433,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2366,"end":2433,"body":[{"type":"ReturnStatement","start":2377,"end":2426,"argument":{"type":"CallExpression","start":2384,"end":2425,"callee":{"type":"Identifier","start":2384,"end":2389,"name":"query"},"arguments":[{"type":"MemberExpression","start":2390,"end":2398,"object":{"type":"ThisExpression","start":2390,"end":2394},"property":{"type":"Identifier","start":2395,"end":2398,"name":"ref"},"computed":false,"optional":false},{"type":"SpreadElement","start":2400,"end":2424,"argument":{"type":"MemberExpression","start":2403,"end":2424,"object":{"type":"ThisExpression","start":2403,"end":2407},"property":{"type":"Identifier","start":2408,"end":2424,"name":"queryConstraints"},"computed":false,"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":2531,"end":2593,"static":false,"computed":false,"key":{"type":"Identifier","start":2531,"end":2539,"name":"getDocs$"},"kind":"method","value":{"type":"FunctionExpression","start":2539,"end":2593,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2542,"end":2593,"body":[{"type":"ReturnStatement","start":2553,"end":2586,"argument":{"type":"CallExpression","start":2560,"end":2585,"callee":{"type":"Identifier","start":2560,"end":2564,"name":"from"},"arguments":[{"type":"CallExpression","start":2565,"end":2584,"callee":{"type":"Identifier","start":2565,"end":2572,"name":"getDocs"},"arguments":[{"type":"MemberExpression","start":2573,"end":2583,"object":{"type":"ThisExpression","start":2573,"end":2577},"property":{"type":"Identifier","start":2578,"end":2583,"name":"query"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2599,"end":2729,"static":false,"computed":false,"key":{"type":"Identifier","start":2599,"end":2604,"name":"where"},"kind":"method","value":{"type":"FunctionExpression","start":2604,"end":2729,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2605,"end":2614,"name":"fieldPath"},{"type":"Identifier","start":2616,"end":2621,"name":"opStr"},{"type":"Identifier","start":2623,"end":2628,"name":"value"}],"body":{"type":"BlockStatement","start":2630,"end":2729,"body":[{"type":"ExpressionStatement","start":2641,"end":2700,"expression":{"type":"CallExpression","start":2641,"end":2699,"callee":{"type":"MemberExpression","start":2641,"end":2667,"object":{"type":"MemberExpression","start":2641,"end":2662,"object":{"type":"ThisExpression","start":2641,"end":2645},"property":{"type":"Identifier","start":2646,"end":2662,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2663,"end":2667,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2668,"end":2698,"callee":{"type":"Identifier","start":2668,"end":2673,"name":"where"},"arguments":[{"type":"Identifier","start":2674,"end":2683,"name":"fieldPath"},{"type":"Identifier","start":2685,"end":2690,"name":"opStr"},{"type":"Identifier","start":2692,"end":2697,"name":"value"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2710,"end":2722,"argument":{"type":"ThisExpression","start":2717,"end":2721}}]}}},{"type":"MethodDefinition","start":2735,"end":2869,"static":false,"computed":false,"key":{"type":"Identifier","start":2735,"end":2742,"name":"orderBy"},"kind":"method","value":{"type":"FunctionExpression","start":2742,"end":2869,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2743,"end":2752,"name":"fieldPath"},{"type":"Identifier","start":2754,"end":2766,"name":"directionStr"}],"body":{"type":"BlockStatement","start":2768,"end":2869,"body":[{"type":"ExpressionStatement","start":2779,"end":2840,"expression":{"type":"CallExpression","start":2779,"end":2839,"callee":{"type":"MemberExpression","start":2779,"end":2805,"object":{"type":"MemberExpression","start":2779,"end":2800,"object":{"type":"ThisExpression","start":2779,"end":2783},"property":{"type":"Identifier","start":2784,"end":2800,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2801,"end":2805,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2806,"end":2838,"callee":{"type":"Identifier","start":2806,"end":2813,"name":"orderBy"},"arguments":[{"type":"Identifier","start":2814,"end":2823,"name":"fieldPath"},{"type":"Identifier","start":2825,"end":2837,"name":"directionStr"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2850,"end":2862,"argument":{"type":"ThisExpression","start":2857,"end":2861}}]}}},{"type":"MethodDefinition","start":2875,"end":2971,"static":false,"computed":false,"key":{"type":"Identifier","start":2875,"end":2880,"name":"limit"},"kind":"method","value":{"type":"FunctionExpression","start":2880,"end":2971,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2881,"end":2887,"name":"_limit"}],"body":{"type":"BlockStatement","start":2889,"end":2971,"body":[{"type":"ExpressionStatement","start":2900,"end":2942,"expression":{"type":"CallExpression","start":2900,"end":2941,"callee":{"type":"MemberExpression","start":2900,"end":2926,"object":{"type":"MemberExpression","start":2900,"end":2921,"object":{"type":"ThisExpression","start":2900,"end":2904},"property":{"type":"Identifier","start":2905,"end":2921,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2922,"end":2926,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2927,"end":2940,"callee":{"type":"Identifier","start":2927,"end":2932,"name":"limit"},"arguments":[{"type":"Identifier","start":2933,"end":2939,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2952,"end":2964,"argument":{"type":"ThisExpression","start":2959,"end":2963}}]}}},{"type":"MethodDefinition","start":2977,"end":3085,"static":false,"computed":false,"key":{"type":"Identifier","start":2977,"end":2988,"name":"limitToLast"},"kind":"method","value":{"type":"FunctionExpression","start":2988,"end":3085,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2989,"end":2995,"name":"_limit"}],"body":{"type":"BlockStatement","start":2997,"end":3085,"body":[{"type":"ExpressionStatement","start":3008,"end":3056,"expression":{"type":"CallExpression","start":3008,"end":3055,"callee":{"type":"MemberExpression","start":3008,"end":3034,"object":{"type":"MemberExpression","start":3008,"end":3029,"object":{"type":"ThisExpression","start":3008,"end":3012},"property":{"type":"Identifier","start":3013,"end":3029,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3030,"end":3034,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3035,"end":3054,"callee":{"type":"Identifier","start":3035,"end":3046,"name":"limitToLast"},"arguments":[{"type":"Identifier","start":3047,"end":3053,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":3066,"end":3078,"argument":{"type":"ThisExpression","start":3073,"end":3077}}]}}},{"type":"MethodDefinition","start":3091,"end":3361,"static":false,"computed":false,"key":{"type":"Identifier","start":3091,"end":3098,"name":"startAt"},"kind":"method","value":{"type":"FunctionExpression","start":3098,"end":3361,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3099,"end":3107,"name":"snapshot"},{"type":"RestElement","start":3109,"end":3123,"argument":{"type":"Identifier","start":3112,"end":3123,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3125,"end":3361,"body":[{"type":"IfStatement","start":3136,"end":3332,"test":{"type":"Identifier","start":3140,"end":3148,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3150,"end":3222,"body":[{"type":"ExpressionStatement","start":3165,"end":3211,"expression":{"type":"CallExpression","start":3165,"end":3210,"callee":{"type":"MemberExpression","start":3165,"end":3191,"object":{"type":"MemberExpression","start":3165,"end":3186,"object":{"type":"ThisExpression","start":3165,"end":3169},"property":{"type":"Identifier","start":3170,"end":3186,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3187,"end":3191,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3192,"end":3209,"callee":{"type":"Identifier","start":3192,"end":3199,"name":"startAt"},"arguments":[{"type":"Identifier","start":3200,"end":3208,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3237,"end":3332,"test":{"type":"Identifier","start":3241,"end":3252,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":3254,"end":3332,"body":[{"type":"ExpressionStatement","start":3269,"end":3321,"expression":{"type":"CallExpression","start":3269,"end":3320,"callee":{"type":"MemberExpression","start":3269,"end":3295,"object":{"type":"MemberExpression","start":3269,"end":3290,"object":{"type":"ThisExpression","start":3269,"end":3273},"property":{"type":"Identifier","start":3274,"end":3290,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3291,"end":3295,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3296,"end":3319,"callee":{"type":"Identifier","start":3296,"end":3303,"name":"startAt"},"arguments":[{"type":"SpreadElement","start":3304,"end":3318,"argument":{"type":"Identifier","start":3307,"end":3318,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":3342,"end":3354,"argument":{"type":"ThisExpression","start":3349,"end":3353}}]}}},{"type":"MethodDefinition","start":3367,"end":3646,"static":false,"computed":false,"key":{"type":"Identifier","start":3367,"end":3377,"name":"startAfter"},"kind":"method","value":{"type":"FunctionExpression","start":3377,"end":3646,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3378,"end":3386,"name":"snapshot"},{"type":"RestElement","start":3388,"end":3402,"argument":{"type":"Identifier","start":3391,"end":3402,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3404,"end":3646,"body":[{"type":"IfStatement","start":3415,"end":3617,"test":{"type":"Identifier","start":3419,"end":3427,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3429,"end":3504,"body":[{"type":"ExpressionStatement","start":3444,"end":3493,"expression":{"type":"CallExpression","start":3444,"end":3492,"callee":{"type":"MemberExpression","start":3444,"end":3470,"object":{"type":"MemberExpression","start":3444,"end":3465,"object":{"type":"ThisExpression","start":3444,"end":3448},"property":{"type":"Identifier","start":3449,"end":3465,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3466,"end":3470,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3471,"end":3491,"callee":{"type":"Identifier","start":3471,"end":3481,"name":"startAfter"},"arguments":[{"type":"Identifier","start":3482,"end":3490,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3519,"end":3617,"test":{"type":"Identifier","start":3523,"end":3534,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":3536,"end":3617,"body":[{"type":"ExpressionStatement","start":3551,"end":3606,"expression":{"type":"CallExpression","start":3551,"end":3605,"callee":{"type":"MemberExpression","start":3551,"end":3577,"object":{"type":"MemberExpression","start":3551,"end":3572,"object":{"type":"ThisExpression","start":3551,"end":3555},"property":{"type":"Identifier","start":3556,"end":3572,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3573,"end":3577,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3578,"end":3604,"callee":{"type":"Identifier","start":3578,"end":3588,"name":"startAfter"},"arguments":[{"type":"SpreadElement","start":3589,"end":3603,"argument":{"type":"Identifier","start":3592,"end":3603,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":3627,"end":3639,"argument":{"type":"ThisExpression","start":3634,"end":3638}}]}}},{"type":"MethodDefinition","start":3652,"end":3916,"static":false,"computed":false,"key":{"type":"Identifier","start":3652,"end":3657,"name":"endAt"},"kind":"method","value":{"type":"FunctionExpression","start":3657,"end":3916,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3658,"end":3666,"name":"snapshot"},{"type":"RestElement","start":3668,"end":3682,"argument":{"type":"Identifier","start":3671,"end":3682,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3684,"end":3916,"body":[{"type":"IfStatement","start":3695,"end":3887,"test":{"type":"Identifier","start":3699,"end":3707,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3709,"end":3779,"body":[{"type":"ExpressionStatement","start":3724,"end":3768,"expression":{"type":"CallExpression","start":3724,"end":3767,"callee":{"type":"MemberExpression","start":3724,"end":3750,"object":{"type":"MemberExpression","start":3724,"end":3745,"object":{"type":"ThisExpression","start":3724,"end":3728},"property":{"type":"Identifier","start":3729,"end":3745,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3746,"end":3750,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3751,"end":3766,"callee":{"type":"Identifier","start":3751,"end":3756,"name":"endAt"},"arguments":[{"type":"Identifier","start":3757,"end":3765,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3794,"end":3887,"test":{"type":"Identifier","start":3798,"end":3809,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":3811,"end":3887,"body":[{"type":"ExpressionStatement","start":3826,"end":3876,"expression":{"type":"CallExpression","start":3826,"end":3875,"callee":{"type":"MemberExpression","start":3826,"end":3852,"object":{"type":"MemberExpression","start":3826,"end":3847,"object":{"type":"ThisExpression","start":3826,"end":3830},"property":{"type":"Identifier","start":3831,"end":3847,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3848,"end":3852,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3853,"end":3874,"callee":{"type":"Identifier","start":3853,"end":3858,"name":"endAt"},"arguments":[{"type":"SpreadElement","start":3859,"end":3873,"argument":{"type":"Identifier","start":3862,"end":3873,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":3897,"end":3909,"argument":{"type":"ThisExpression","start":3904,"end":3908}}]}}},{"type":"MethodDefinition","start":3922,"end":4198,"static":false,"computed":false,"key":{"type":"Identifier","start":3922,"end":3931,"name":"endBefore"},"kind":"method","value":{"type":"FunctionExpression","start":3931,"end":4198,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3932,"end":3940,"name":"snapshot"},{"type":"RestElement","start":3942,"end":3956,"argument":{"type":"Identifier","start":3945,"end":3956,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":3958,"end":4198,"body":[{"type":"IfStatement","start":3969,"end":4169,"test":{"type":"Identifier","start":3973,"end":3981,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":3983,"end":4057,"body":[{"type":"ExpressionStatement","start":3998,"end":4046,"expression":{"type":"CallExpression","start":3998,"end":4045,"callee":{"type":"MemberExpression","start":3998,"end":4024,"object":{"type":"MemberExpression","start":3998,"end":4019,"object":{"type":"ThisExpression","start":3998,"end":4002},"property":{"type":"Identifier","start":4003,"end":4019,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4020,"end":4024,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4025,"end":4044,"callee":{"type":"Identifier","start":4025,"end":4034,"name":"endBefore"},"arguments":[{"type":"Identifier","start":4035,"end":4043,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":4072,"end":4169,"test":{"type":"Identifier","start":4076,"end":4087,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":4089,"end":4169,"body":[{"type":"ExpressionStatement","start":4104,"end":4158,"expression":{"type":"CallExpression","start":4104,"end":4157,"callee":{"type":"MemberExpression","start":4104,"end":4130,"object":{"type":"MemberExpression","start":4104,"end":4125,"object":{"type":"ThisExpression","start":4104,"end":4108},"property":{"type":"Identifier","start":4109,"end":4125,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4126,"end":4130,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4131,"end":4156,"callee":{"type":"Identifier","start":4131,"end":4140,"name":"endBefore"},"arguments":[{"type":"SpreadElement","start":4141,"end":4155,"argument":{"type":"Identifier","start":4144,"end":4155,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":4179,"end":4191,"argument":{"type":"ThisExpression","start":4186,"end":4190}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":4203,"end":17709},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":17711,"end":17832}]},"code":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, collection, deleteDoc, endAt, endBefore, getDoc, getDocs, getFirestore, limit, limitToLast, orderBy, query, setDoc, startAfter, startAt, updateDoc, where, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Stop gap until I figure this out..it seems I do not need rxfire anymore but can instead use firebase directly...one less library..woo\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQtd3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLElBQUksRUFBYSxNQUFNLE1BQU0sQ0FBQztBQUV0QyxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEMsT0FBTyxFQUNMLE1BQU0sRUFDTixVQUFVLEVBRVYsU0FBUyxFQUlULEtBQUssRUFDTCxTQUFTLEVBRVQsTUFBTSxFQUNOLE9BQU8sRUFDUCxZQUFZLEVBQ1osS0FBSyxFQUNMLFdBQVcsRUFDWCxPQUFPLEVBQ1AsS0FBSyxFQUdMLE1BQU0sRUFFTixVQUFVLEVBQ1YsT0FBTyxFQUVQLFNBQVMsRUFDVCxLQUFLLEdBQ04sTUFBTSxvQkFBb0IsQ0FBQztBQUk1QixNQUFNLE9BQU8sdUJBQXVCO0lBQ2xDOztPQUVHO0lBRUgsWUFBbUIsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7SUFDM0MsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sWUFBWSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsTUFBTTtJQUNDLEdBQUcsQ0FBbUIsTUFBNEI7UUFDdkQsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVNLEdBQUcsQ0FBSSxhQUFxQyxFQUFFLElBQU87UUFDMUQsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDM0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7SUFDSixDQUFDO0lBRU0sR0FBRyxDQUFJLE1BQTRCLEVBQUUsSUFBTyxFQUFFLE9BQW9CO1FBRXZFLElBQUksT0FBTyxFQUFFO1lBQ1gsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQzdDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO1NBQ0g7YUFBTTtZQUNMLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ3BDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO1NBQ0g7SUFDSCxDQUFDO0lBR0QsTUFBTSxDQUFJLE1BQTRCO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDakMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFJLE1BQTRCLEVBQUUsSUFBNEIsRUFBRSxPQUFvQjtRQUN4RixPQUFPLElBQUksQ0FBQyxTQUFTLENBQWEsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNuRCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxVQUFVLENBQUksQ0FBVztRQUM5QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixDQUFDO0NBR0Y7QUFFRDs7Ozs7Ozs7Ozs7OztHQWFHO0FBQ0gsTUFBTSxPQUFPLGNBQWM7SUFJekIsWUFBbUIsR0FBMkI7UUFBM0IsUUFBRyxHQUFILEdBQUcsQ0FBd0I7UUFGdkMscUJBQWdCLEdBQXNCLEVBQUUsQ0FBQztJQUdoRCxDQUFDO0lBRUQsbURBQW1EO0lBQ25ELE1BQU0sQ0FBQyxRQUFRLENBQUksU0FBb0IsRUFBRSxJQUFZO1FBQ25ELE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUEyQixDQUFDO1FBQ2xFLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVELHVEQUF1RDtJQUN2RCxJQUFJLEtBQUs7UUFDUCxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELHNGQUFzRjtJQUN0RixRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxLQUFLLENBQUMsU0FBNkIsRUFBRSxLQUFvQixFQUFFLEtBQWM7UUFDdkUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELE9BQU8sQ0FBQyxTQUE2QixFQUFFLFlBQStCO1FBQ3BFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQzdELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELEtBQUssQ0FBQyxNQUFjO1FBQ2xCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDMUMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsV0FBVyxDQUFDLE1BQWM7UUFDeEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNoRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFLRCxPQUFPLENBQUMsUUFBb0MsRUFBRSxHQUFHLFdBQXNCO1FBQ3JFLElBQUksUUFBUSxFQUFFO1lBQ1osSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztTQUMvQzthQUFNLElBQUksV0FBVyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztTQUNyRDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELFVBQVUsQ0FBQyxRQUFvQyxFQUFFLEdBQUcsV0FBc0I7UUFDeEUsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQ2xEO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ3hEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsS0FBSyxDQUFDLFFBQW9DLEVBQUUsR0FBRyxXQUFzQjtRQUNuRSxJQUFJLFFBQVEsRUFBRTtZQUNaLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7U0FDN0M7YUFBTSxJQUFJLFdBQVcsRUFBRTtZQUN0QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUM7U0FDbkQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFLRCxTQUFTLENBQUMsUUFBb0MsRUFBRSxHQUFHLFdBQXNCO1FBQ3ZFLElBQUksUUFBUSxFQUFFO1lBQ1osSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztTQUNqRDthQUFNLElBQUksV0FBVyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztTQUN2RDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtmcm9tLCBPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHtGaXJlc3RvcmVXcmFwcGVyfSBmcm9tICcuL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQge3Rha2V9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtcclxuICBhZGREb2MsXHJcbiAgY29sbGVjdGlvbixcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBlbmRBdCxcclxuICBlbmRCZWZvcmUsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIGdldERvYyxcclxuICBnZXREb2NzLFxyXG4gIGdldEZpcmVzdG9yZSxcclxuICBsaW1pdCxcclxuICBsaW1pdFRvTGFzdCxcclxuICBvcmRlckJ5LFxyXG4gIHF1ZXJ5LFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgc3RhcnRBZnRlcixcclxuICBzdGFydEF0LFxyXG4gIFVwZGF0ZURhdGEsXHJcbiAgdXBkYXRlRG9jLFxyXG4gIHdoZXJlLFxyXG59IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbmltcG9ydCB7RmllbGRQYXRoLCBPcmRlckJ5RGlyZWN0aW9uLCBRdWVyeUNvbnN0cmFpbnQsIFdoZXJlRmlsdGVyT3B9IGZyb20gJ0BmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkV3JhcHBlciBpbXBsZW1lbnRzIEZpcmVzdG9yZVdyYXBwZXIge1xyXG4gIC8qKlxyXG4gICAqIFN0b3AgZ2FwIHVudGlsIEkgZmlndXJlIHRoaXMgb3V0Li5pdCBzZWVtcyBJIGRvIG5vdCBuZWVkIHJ4ZmlyZSBhbnltb3JlIGJ1dCBjYW4gaW5zdGVhZCB1c2UgZmlyZWJhc2UgZGlyZWN0bHkuLi5vbmUgbGVzcyBsaWJyYXJ5Li53b29cclxuICAgKi9cclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCkge1xyXG4gIH1cclxuXHJcbiAgZ2V0IGZpcmVzdG9yZSgpOiBGaXJlc3RvcmUge1xyXG4gICAgcmV0dXJuIGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKTtcclxuICB9XHJcblxyXG4gIC8vIGRvY1xyXG4gIHB1YmxpYyBkb2M8VCA9IERvY3VtZW50RGF0YT4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj4ge1xyXG4gICAgcmV0dXJuIGZyb20oZ2V0RG9jKGRvY1JlZikpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj4ge1xyXG4gICAgcmV0dXJuIGZyb20oYWRkRG9jKGNvbGxlY3Rpb25SZWYsIGRhdGEpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldDxBPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPEE+LCBkYXRhOiBBLCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIHJldHVybiBmcm9tKHNldERvYyhkb2NSZWYsIGRhdGEsIG9wdGlvbnMpKS5waXBlKFxyXG4gICAgICAgIHRha2UoMSlcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBmcm9tKHNldERvYyhkb2NSZWYsIGRhdGEpKS5waXBlKFxyXG4gICAgICAgIHRha2UoMSlcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD4ge1xyXG4gICAgcmV0dXJuIGZyb20oZGVsZXRlRG9jKGRvY1JlZikpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKHVwZGF0ZURvYzxQYXJ0aWFsPFQ+Pihkb2NSZWYsIGRhdGEpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbGxlY3Rpb248VD4ocTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+IHtcclxuICAgIHJldHVybiBmcm9tKGdldERvY3MocSkpO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG4vKipcclxuICogRmlyZWJhc2UgdmVyc2lvbiA5IGNoYW5nZWQgdGhlIHF1ZXJ5IHN5bnRheFxyXG4gKiBUaGUgbmV3IHN5bnRheCBicm9rZW4gdGhlIGFiaWxpdHkgdG8gY2hhaW4gcXVlcmllcyBsaWtlIHRoaXM6XHJcbiAqXHJcbiAqIGNvbGxlY3Rpb25SZWYud2hlcmUoJ2ZvbycsICc9PScsIDEyMykubGltaXQoMTApLi5yZXR1cm5zIHRoZSBjb2xsZWN0aW9uIHJlZlxyXG4gKlxyXG4gKiBub3cgaW5zdGVhZCB5b3UgbXVzdCB3cml0ZSBpdCBsaWtlIHRoaXMsIHF1ZXJ5KGNvbGxlY3Rpb25SZWYsIHdoZXJlKCdmb28nLCAnPT0nLCAxMjMpLCBsaW1pdCgxMCkpLi4ucmV0dXJucyBhIFF1ZXJ5XHJcbiAqXHJcbiAqIHdoaWNoIGlzIHVnbHkgYW5kIG1ha2UgeW91IGxvb3NlIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHdhcyBwcmVzZW50IGluIHRoZSBjb2xsZWN0aW9uUmVmIHNpbmNlIGEgUXVlcnkgaXMgcmV0dXJuZWQgaW5zdGVhZCxcclxuICogd2hpY2ggaG9sZHMgbGVzcyBpbmZvcm1hdGlvbiB0aGFuIGEgQ29sbGVjdGlvblJlZmVyZW5jZS5cclxuICpcclxuICogVGhpcyBDb250YWluZXIgaXMgbWVhbnQgdG8gYWxsb3cgeW91IHRvIGNoYWluIHF1ZXJpZXMsIGxpa2UgYmVmb3JlIHZlcnNpb24gOSBhbmQgYWxzbyByZXRhaW4gdGhlIGluZm9ybWF0aW9uIGluXHJcbiAqIHRoZSBvcmlnaW5hbCBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUXVlcnlDb250YWluZXI8VD4ge1xyXG5cclxuICBwdWJsaWMgcXVlcnlDb25zdHJhaW50czogUXVlcnlDb25zdHJhaW50W10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikge1xyXG4gIH1cclxuXHJcbiAgLyoqIGZhY3RvcnkgbWV0aG9kIHRvIGNyZWF0ZSBjb250YWluZXIgZnJvbSBwYXRoICovXHJcbiAgc3RhdGljIGZyb21QYXRoPFQ+KGZpcmVzdG9yZTogRmlyZXN0b3JlLCBwYXRoOiBzdHJpbmcpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICBjb25zdCByZWYgPSBjb2xsZWN0aW9uKGZpcmVzdG9yZSwgcGF0aCkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPjtcclxuICAgIHJldHVybiBuZXcgdGhpcyhyZWYpO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJldHVybnMgdGhlIHF1ZXJ5IHdpdGggYWxsIHRoZSBxdWVyeSBjb25zdHJhaW50cyAqL1xyXG4gIGdldCBxdWVyeSgpOiBRdWVyeTxUPiB7XHJcbiAgICByZXR1cm4gcXVlcnkodGhpcy5yZWYsIC4uLnRoaXMucXVlcnlDb25zdHJhaW50cyk7XHJcbiAgfVxyXG5cclxuICAvKiogQ2FsbHMgdGhlIGZpcmViYXNlIGdldERvY3MoKSBtZXRob2QgYW5kIGxpc3RlbnMgZm9yIHRoZSBkb2N1bWVudHMgaW4gdGhlIHF1ZXJ5LiAqL1xyXG4gIGdldERvY3MkKCk6IE9ic2VydmFibGU8UXVlcnlTbmFwc2hvdDxUPj4ge1xyXG4gICAgcmV0dXJuIGZyb20oZ2V0RG9jczxUPih0aGlzLnF1ZXJ5KSk7XHJcbiAgfVxyXG5cclxuICB3aGVyZShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgb3BTdHI6IFdoZXJlRmlsdGVyT3AsIHZhbHVlOiB1bmtub3duKTogUXVlcnlDb250YWluZXI8VD4ge1xyXG4gICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2god2hlcmUoZmllbGRQYXRoLCBvcFN0ciwgdmFsdWUpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgb3JkZXJCeShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgZGlyZWN0aW9uU3RyPzogT3JkZXJCeURpcmVjdGlvbik6IFF1ZXJ5Q29udGFpbmVyPFQ+IHtcclxuICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKG9yZGVyQnkoZmllbGRQYXRoLCBkaXJlY3Rpb25TdHIpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXQoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXRUb0xhc3QoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdFRvTGFzdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgc3RhcnRBdCguLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuICBzdGFydEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIHN0YXJ0QXQoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+LCAuLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD4geyAvLyBpbXBsZW1lbnRhdGlvblxyXG4gICAgaWYgKHNuYXBzaG90KSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKHN0YXJ0QXQoc25hcHNob3QpKTtcclxuICAgIH0gZWxzZSBpZiAoZmllbGRWYWx1ZXMpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIHN0YXJ0QWZ0ZXIoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+KTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuXHJcbiAgc3RhcnRBZnRlcihzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBZnRlcihzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGVuZEF0KC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPiwgLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+IHsgLy8gaW1wbGVtZW50YXRpb25cclxuICAgIGlmIChzbmFwc2hvdCkge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdChzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBlbmRCZWZvcmUoLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcbiAgZW5kQmVmb3JlKHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEJlZm9yZShzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goZW5kQmVmb3JlKHNuYXBzaG90KSk7XHJcbiAgICB9IGVsc2UgaWYgKGZpZWxkVmFsdWVzKSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKGVuZEJlZm9yZSguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, collection, deleteDoc, endAt, endBefore, getDoc, getDocs, getFirestore, limit, limitToLast, orderBy, query, setDoc, startAfter, startAt, updateDoc, where, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Stop gap until I figure this out..it seems I do not need rxfire anymore but can instead use firebase directly...one less library..woo\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firebase-extended-wrapper.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-wrapper.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[13,0,0,12],[15,0,0,25],[21,0,0,31],[27,0,0,37],[28,0,0,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[13,0,2,12],[15,0,2,13],[21,0,2,19],[37,0,2,35],[38,0,2,36]],[[0,0,4,0],[7,0,4,7],[9,0,5,2],[15,0,5,8],[17,0,6,2],[27,0,6,12],[29,0,8,2],[38,0,8,11],[40,0,12,2],[45,0,12,7],[47,0,13,2],[56,0,13,11],[58,0,15,2],[64,0,15,8],[66,0,16,2],[73,0,16,9],[75,0,17,2],[87,0,17,14],[89,0,18,2],[94,0,18,7],[96,0,19,2],[107,0,19,13],[109,0,20,2],[116,0,20,9],[118,0,21,2],[123,0,21,7],[125,0,24,2],[131,0,24,8],[133,0,26,2],[143,0,26,12],[145,0,27,2],[152,0,27,9],[154,0,29,2],[163,0,29,11],[165,0,30,2],[170,0,30,7],[173,0,31,1],[179,0,31,7],[199,0,31,27],[200,0,31,28]],[[0,0,35,0],[6,0,35,6],[13,0,35,13],[36,0,35,36]],[[4,0,36,2]],[],[[7,0,38,5]],[[4,0,40,2],[16,0,40,21],[27,0,40,45]],[[8,0,40,21],[24,0,40,32],[27,0,40,21],[38,0,40,32],[39,0,40,45]],[[4,0,41,2],[5,0,41,3]],[[4,0,43,2],[8,0,43,6],[17,0,43,15]],[[8,0,44,4],[15,0,44,11],[27,0,44,23],[28,0,44,24],[32,0,44,28],[33,0,44,29],[44,0,44,40],[45,0,44,41],[46,0,44,42]],[[4,0,45,2],[5,0,45,3]],[[4,0,47,2],[10,0,47,8]],[[4,0,48,9],[7,0,48,12],[8,0,48,31],[14,0,48,59]],[[8,0,49,4],[15,0,49,11],[19,0,49,15],[20,0,49,16],[26,0,49,22],[27,0,49,23],[33,0,49,29],[34,0,49,30],[35,0,49,31],[36,0,49,32]],[[4,0,50,2],[5,0,50,3]],[[4,0,52,9],[7,0,52,12],[8,0,52,16],[21,0,52,53],[23,0,52,55],[27,0,52,62]],[[8,0,53,4],[15,0,53,11],[19,0,53,15],[20,0,53,16],[26,0,53,22],[27,0,53,23],[40,0,53,36],[42,0,53,38],[46,0,53,42],[47,0,53,43],[48,0,53,44],[49,0,53,45],[53,0,53,49],[54,0,54,6],[58,0,54,10],[59,0,54,11],[60,0,54,12],[61,0,54,13],[62,0,55,5],[63,0,55,6]],[[4,0,56,2],[5,0,56,3]],[[4,0,58,9],[7,0,58,12],[8,0,58,16],[14,0,58,44],[16,0,58,46],[20,0,58,53],[22,0,58,55],[29,0,58,75]],[[8,0,60,4],[12,0,60,8],[19,0,60,15],[21,0,60,17]],[[12,0,61,6],[19,0,61,13],[23,0,61,17],[24,0,61,18],[30,0,61,24],[31,0,61,25],[37,0,61,31],[39,0,61,33],[43,0,61,37],[45,0,61,39],[52,0,61,46],[53,0,61,47],[54,0,61,48],[55,0,61,49],[59,0,61,53],[60,0,62,8],[64,0,62,12],[65,0,62,13],[66,0,62,14],[67,0,62,15],[68,0,63,7],[69,0,63,8]],[[9,0,64,5]],[[13,0,64,11]],[[12,0,65,6],[19,0,65,13],[23,0,65,17],[24,0,65,18],[30,0,65,24],[31,0,65,25],[37,0,65,31],[39,0,65,33],[43,0,65,37],[44,0,65,38],[45,0,65,39],[46,0,65,40],[50,0,65,44],[51,0,66,8],[55,0,66,12],[56,0,66,13],[57,0,66,14],[58,0,66,15],[59,0,67,7],[60,0,67,8]],[[9,0,68,5]],[[4,0,69,2],[5,0,69,3]],[[4,0,72,2],[10,0,72,8],[11,0,72,12],[17,0,72,40]],[[8,0,73,4],[15,0,73,11],[19,0,73,15],[20,0,73,16],[29,0,73,25],[30,0,73,26],[36,0,73,32],[37,0,73,33],[38,0,73,34],[39,0,73,35],[43,0,73,39],[44,0,74,6],[48,0,74,10],[49,0,74,11],[50,0,74,12],[51,0,74,13],[52,0,75,5],[53,0,75,6]],[[4,0,76,2],[5,0,76,3]],[[4,0,78,2],[10,0,78,8],[11,0,78,12],[17,0,78,40],[19,0,78,42],[23,0,78,70],[25,0,78,72],[32,0,78,92]],[[8,0,79,4],[15,0,79,11],[19,0,79,15],[20,0,79,16],[29,0,79,25],[30,0,79,38],[36,0,79,44],[38,0,79,46],[42,0,79,50],[43,0,79,51],[44,0,79,52],[45,0,79,53],[49,0,79,57],[50,0,80,6],[54,0,80,10],[55,0,80,11],[56,0,80,12],[57,0,80,13],[58,0,81,5],[59,0,81,6]],[[4,0,82,2],[5,0,82,3]],[[4,0,84,9],[14,0,84,19],[15,0,84,23],[16,0,84,34]],[[8,0,85,4],[15,0,85,11],[19,0,85,15],[20,0,85,16],[27,0,85,23],[28,0,85,24],[29,0,85,25],[30,0,85,26],[31,0,85,27],[32,0,85,28]],[[4,0,86,2],[5,0,86,3]],[[1,0,89,1]],[[0,0,91,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,104,3]],[[0,0,105,0],[6,0,105,6],[13,0,105,13],[27,0,105,27]],[[4,0,109,2],[16,0,109,21],[19,0,109,48]],[[8,0,109,21],[16,0,109,24],[19,0,109,21],[22,0,109,24],[23,0,109,48]],[[8,0,107,9],[29,0,107,25],[32,0,107,47],[34,0,107,49],[35,0,107,50]],[[4,0,110,2],[5,0,110,3]],[[4,0,112,2],[55,0,112,53]],[[4,0,113,2],[10,0,113,8],[11,0,113,9],[19,0,113,17],[20,0,113,21],[29,0,113,41],[31,0,113,43],[35,0,113,55]],[[8,0,114,4],[14,0,114,10],[17,0,114,13],[20,0,114,16],[30,0,114,26],[31,0,114,27],[40,0,114,36],[42,0,114,38],[46,0,114,42],[47,0,114,69],[48,0,114,70]],[[8,0,115,4],[15,0,115,11],[19,0,115,15],[23,0,115,19],[24,0,115,20],[27,0,115,23],[28,0,115,24],[29,0,115,25]],[[4,0,116,2],[5,0,116,3]],[[4,0,118,2],[59,0,118,57]],[[4,0,119,2],[8,0,119,6],[13,0,119,11]],[[8,0,120,4],[15,0,120,11],[20,0,120,16],[21,0,120,17],[25,0,120,21],[26,0,120,22],[29,0,120,25],[31,0,120,27],[34,0,120,30],[38,0,120,34],[39,0,120,35],[55,0,120,51],[56,0,120,52],[57,0,120,53]],[[4,0,121,2],[5,0,121,3]],[[4,0,123,2],[90,0,123,88]],[[4,0,124,2],[12,0,124,10]],[[8,0,125,4],[15,0,125,11],[19,0,125,15],[20,0,125,16],[27,0,125,23],[28,0,125,27],[32,0,125,31],[33,0,125,32],[38,0,125,37],[39,0,125,38],[40,0,125,39],[41,0,125,40]],[[4,0,126,2],[5,0,126,3]],[[4,0,128,2],[9,0,128,7],[10,0,128,8],[19,0,128,37],[21,0,128,39],[26,0,128,59],[28,0,128,61],[33,0,128,75]],[[8,0,129,4],[12,0,129,8],[13,0,129,9],[29,0,129,25],[30,0,129,26],[34,0,129,30],[35,0,129,31],[40,0,129,36],[41,0,129,37],[50,0,129,46],[52,0,129,48],[57,0,129,53],[59,0,129,55],[64,0,129,60],[65,0,129,61],[66,0,129,62],[67,0,129,63]],[[8,0,130,4],[15,0,130,11],[19,0,130,15],[20,0,130,16]],[[4,0,131,2],[5,0,131,3]],[[4,0,133,2],[11,0,133,9],[12,0,133,10],[21,0,133,39],[23,0,133,41],[35,0,133,72]],[[8,0,134,4],[12,0,134,8],[13,0,134,9],[29,0,134,25],[30,0,134,26],[34,0,134,30],[35,0,134,31],[42,0,134,38],[43,0,134,39],[52,0,134,48],[54,0,134,50],[66,0,134,62],[67,0,134,63],[68,0,134,64],[69,0,134,65]],[[8,0,135,4],[15,0,135,11],[19,0,135,15],[20,0,135,16]],[[4,0,136,2],[5,0,136,3]],[[4,0,138,2],[9,0,138,7],[10,0,138,8],[16,0,138,22]],[[8,0,139,4],[12,0,139,8],[13,0,139,9],[29,0,139,25],[30,0,139,26],[34,0,139,30],[35,0,139,31],[40,0,139,36],[41,0,139,37],[47,0,139,43],[48,0,139,44],[49,0,139,45],[50,0,139,46]],[[8,0,140,4],[15,0,140,11],[19,0,140,15],[20,0,140,16]],[[4,0,141,2],[5,0,141,3]],[[4,0,143,2],[15,0,143,13],[16,0,143,14],[22,0,143,28]],[[8,0,144,4],[12,0,144,8],[13,0,144,9],[29,0,144,25],[30,0,144,26],[34,0,144,30],[35,0,144,31],[46,0,144,42],[47,0,144,43],[53,0,144,49],[54,0,144,50],[55,0,144,51],[56,0,144,52]],[[8,0,145,4],[15,0,145,11],[19,0,145,15],[20,0,145,16]],[[4,0,146,2],[5,0,146,3]],[[4,0,151,2],[11,0,151,9],[12,0,151,10],[20,0,151,46],[22,0,151,48],[25,0,151,51],[36,0,151,73]],[[8,0,152,4],[12,0,152,8],[20,0,152,16],[22,0,152,18]],[[12,0,153,6],[16,0,153,10],[17,0,153,11],[33,0,153,27],[34,0,153,28],[38,0,153,32],[39,0,153,33],[46,0,153,40],[47,0,153,41],[55,0,153,49],[56,0,153,50],[57,0,153,51],[58,0,153,52]],[[9,0,154,5]],[[13,0,154,11],[17,0,154,15],[28,0,154,26],[30,0,154,28]],[[12,0,155,6],[16,0,155,10],[17,0,155,11],[33,0,155,27],[34,0,155,28],[38,0,155,32],[39,0,155,33],[46,0,155,40],[47,0,155,41],[50,0,155,44],[61,0,155,55],[62,0,155,56],[63,0,155,57],[64,0,155,58]],[[9,0,156,5]],[[8,0,157,4],[15,0,157,11],[19,0,157,15],[20,0,157,16]],[[4,0,158,2],[5,0,158,3]],[[4,0,163,2],[14,0,163,12],[15,0,163,13],[23,0,163,49],[25,0,163,51],[28,0,163,54],[39,0,163,76]],[[8,0,164,4],[12,0,164,8],[20,0,164,16],[22,0,164,18]],[[12,0,165,6],[16,0,165,10],[17,0,165,11],[33,0,165,27],[34,0,165,28],[38,0,165,32],[39,0,165,33],[49,0,165,43],[50,0,165,44],[58,0,165,52],[59,0,165,53],[60,0,165,54],[61,0,165,55]],[[9,0,166,5]],[[13,0,166,11],[17,0,166,15],[28,0,166,26],[30,0,166,28]],[[12,0,167,6],[16,0,167,10],[17,0,167,11],[33,0,167,27],[34,0,167,28],[38,0,167,32],[39,0,167,33],[49,0,167,43],[50,0,167,44],[53,0,167,47],[64,0,167,58],[65,0,167,59],[66,0,167,60],[67,0,167,61]],[[9,0,168,5]],[[8,0,169,4],[15,0,169,11],[19,0,169,15],[20,0,169,16]],[[4,0,170,2],[5,0,170,3]],[[4,0,175,2],[9,0,175,7],[10,0,175,8],[18,0,175,44],[20,0,175,46],[23,0,175,49],[34,0,175,71]],[[8,0,176,4],[12,0,176,8],[20,0,176,16],[22,0,176,18]],[[12,0,177,6],[16,0,177,10],[17,0,177,11],[33,0,177,27],[34,0,177,28],[38,0,177,32],[39,0,177,33],[44,0,177,38],[45,0,177,39],[53,0,177,47],[54,0,177,48],[55,0,177,49],[56,0,177,50]],[[9,0,178,5]],[[13,0,178,11],[17,0,178,15],[28,0,178,26],[30,0,178,28]],[[12,0,179,6],[16,0,179,10],[17,0,179,11],[33,0,179,27],[34,0,179,28],[38,0,179,32],[39,0,179,33],[44,0,179,38],[45,0,179,39],[48,0,179,42],[59,0,179,53],[60,0,179,54],[61,0,179,55],[62,0,179,56]],[[9,0,180,5]],[[8,0,181,4],[15,0,181,11],[19,0,181,15],[20,0,181,16]],[[4,0,182,2],[5,0,182,3]],[[4,0,187,2],[13,0,187,11],[14,0,187,12],[22,0,187,48],[24,0,187,50],[27,0,187,53],[38,0,187,75]],[[8,0,188,4],[12,0,188,8],[20,0,188,16],[22,0,188,18]],[[12,0,189,6],[16,0,189,10],[17,0,189,11],[33,0,189,27],[34,0,189,28],[38,0,189,32],[39,0,189,33],[48,0,189,42],[49,0,189,43],[57,0,189,51],[58,0,189,52],[59,0,189,53],[60,0,189,54]],[[9,0,190,5]],[[13,0,190,11],[17,0,190,15],[28,0,190,26],[30,0,190,28]],[[12,0,191,6],[16,0,191,10],[17,0,191,11],[33,0,191,27],[34,0,191,28],[38,0,191,32],[39,0,191,33],[48,0,191,42],[49,0,191,43],[52,0,191,46],[63,0,191,57],[64,0,191,58],[65,0,191,59],[66,0,191,60]],[[9,0,192,5]],[[8,0,193,4],[15,0,193,11],[19,0,193,15],[20,0,193,16]],[[4,0,194,2],[5,0,194,3]],[[1,0,196,1]]],"sourcesContent":["import {from, Observable} from 'rxjs';\r\nimport {FirestoreWrapper} from './interfaces';\r\nimport {take} from 'rxjs/operators';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  endAt,\r\n  endBefore,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  limit,\r\n  limitToLast,\r\n  orderBy,\r\n  query,\r\n  Query,\r\n  QuerySnapshot,\r\n  setDoc,\r\n  SetOptions,\r\n  startAfter,\r\n  startAt,\r\n  UpdateData,\r\n  updateDoc,\r\n  where,\r\n} from 'firebase/firestore';\r\nimport {FieldPath, OrderByDirection, QueryConstraint, WhereFilterOp} from '@firebase/firestore';\r\n\r\n\r\nexport class FirestoreWrapper implements FirestoreWrapper {\r\n  /**\r\n   * Stop gap until I figure this out..it seems I do not need rxfire anymore but can instead use firebase directly...one less library..woo\r\n   */\r\n\r\n  constructor(public firebaseApp: FirebaseApp) {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return getFirestore(this.firebaseApp);\r\n  }\r\n\r\n  // doc\r\n  public doc<T = DocumentData>(docRef: DocumentReference<T>): Observable<DocumentSnapshot<T>> {\r\n    return from(getDoc(docRef));\r\n  }\r\n\r\n  public add<T>(collectionRef: CollectionReference<T>, data: T): Observable<DocumentReference<T>> {\r\n    return from(addDoc(collectionRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public set<A>(docRef: DocumentReference<A>, data: A, options?: SetOptions): Observable<void> {\r\n\r\n    if (options) {\r\n      return from(setDoc(docRef, data, options)).pipe(\r\n        take(1)\r\n      );\r\n    } else {\r\n      return from(setDoc(docRef, data)).pipe(\r\n        take(1)\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  delete<T>(docRef: DocumentReference<T>): Observable<void> {\r\n    return from(deleteDoc(docRef)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  update<T>(docRef: DocumentReference<T>, data: UpdateData<Partial<T>>, options?: SetOptions): Observable<void> {\r\n    return from(updateDoc<Partial<T>>(docRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public collection<T>(q: Query<T>): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs(q));\r\n  }\r\n\r\n\r\n}\r\n\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer<T> {\r\n\r\n  public queryConstraints: QueryConstraint[] = [];\r\n\r\n  constructor(public ref: CollectionReference<T>) {\r\n  }\r\n\r\n  /** factory method to create container from path */\r\n  static fromPath<T>(firestore: Firestore, path: string): QueryContainer<T> {\r\n    const ref = collection(firestore, path) as CollectionReference<T>;\r\n    return new this(ref);\r\n  }\r\n\r\n  /** Returns the query with all the query constraints */\r\n  get query(): Query<T> {\r\n    return query(this.ref, ...this.queryConstraints);\r\n  }\r\n\r\n  /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n  getDocs$(): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs<T>(this.query));\r\n  }\r\n\r\n  where(fieldPath: string | FieldPath, opStr: WhereFilterOp, value: unknown): QueryContainer<T> {\r\n    this.queryConstraints.push(where(fieldPath, opStr, value));\r\n    return this;\r\n  }\r\n\r\n  orderBy(fieldPath: string | FieldPath, directionStr?: OrderByDirection): QueryContainer<T> {\r\n    this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n    return this;\r\n  }\r\n\r\n  limit(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limit(_limit));\r\n    return this;\r\n  }\r\n\r\n  limitToLast(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limitToLast(_limit));\r\n    return this;\r\n  }\r\n\r\n  startAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  startAfter(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAfter(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAfter(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endBefore(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endBefore(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endBefore(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[13,0,0,13],[15,0,0,15],[21,0,0,21],[27,0,0,27],[28,0,0,28]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[13,0,1,13],[15,0,1,15],[21,0,1,21],[37,0,1,37],[38,0,1,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[15,0,2,15],[17,0,2,17],[27,0,2,27],[29,0,2,29],[38,0,2,38],[40,0,2,40],[45,0,2,45],[47,0,2,47],[56,0,2,56],[58,0,2,58],[64,0,2,64],[66,0,2,66],[73,0,2,73],[75,0,2,75],[87,0,2,87],[89,0,2,89],[94,0,2,94],[96,0,2,96],[107,0,2,107],[109,0,2,109],[116,0,2,116],[118,0,2,118],[123,0,2,123],[125,0,2,125],[131,0,2,131],[133,0,2,133],[143,0,2,143],[145,0,2,145],[152,0,2,152],[154,0,2,154],[163,0,2,163],[165,0,2,165],[170,0,2,170],[173,0,2,173],[179,0,2,179],[199,0,2,199],[200,0,2,200]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[36,0,3,36]],[[4,0,4,4]],[],[[7,0,6,7]],[[4,0,7,4],[16,0,7,16],[27,0,7,27]],[[8,0,8,8],[12,0,8,12],[13,0,8,13],[24,0,8,24],[27,0,8,27],[38,0,8,38],[39,0,8,39]],[[4,0,9,4],[5,0,9,5]],[[4,0,10,4],[8,0,10,8],[17,0,10,17]],[[8,0,11,8],[15,0,11,15],[27,0,11,27],[28,0,11,28],[32,0,11,32],[33,0,11,33],[44,0,11,44],[45,0,11,45],[46,0,11,46]],[[4,0,12,4],[5,0,12,5]],[[4,0,13,4],[10,0,13,10]],[[4,0,14,4],[7,0,14,7],[8,0,14,8],[14,0,14,14]],[[8,0,15,8],[15,0,15,15],[19,0,15,19],[20,0,15,20],[26,0,15,26],[27,0,15,27],[33,0,15,33],[34,0,15,34],[35,0,15,35],[36,0,15,36]],[[4,0,16,4],[5,0,16,5]],[[4,0,17,4],[7,0,17,7],[8,0,17,8],[21,0,17,21],[23,0,17,23],[27,0,17,27]],[[8,0,18,8],[15,0,18,15],[19,0,18,19],[20,0,18,20],[26,0,18,26],[27,0,18,27],[40,0,18,40],[42,0,18,42],[46,0,18,46],[47,0,18,47],[48,0,18,48],[49,0,18,49],[53,0,18,53],[54,0,18,54],[58,0,18,58],[59,0,18,59],[60,0,18,60],[61,0,18,61],[62,0,18,62],[63,0,18,63]],[[4,0,19,4],[5,0,19,5]],[[4,0,20,4],[7,0,20,7],[8,0,20,8],[14,0,20,14],[16,0,20,16],[20,0,20,20],[22,0,20,22],[29,0,20,29]],[[8,0,21,8],[12,0,21,12],[19,0,21,19],[21,0,21,21]],[[12,0,22,12],[19,0,22,19],[23,0,22,23],[24,0,22,24],[30,0,22,30],[31,0,22,31],[37,0,22,37],[39,0,22,39],[43,0,22,43],[45,0,22,45],[52,0,22,52],[53,0,22,53],[54,0,22,54],[55,0,22,55],[59,0,22,59],[60,0,22,60],[64,0,22,64],[65,0,22,65],[66,0,22,66],[67,0,22,67],[68,0,22,68],[69,0,22,69]],[[9,0,23,9]],[[13,0,24,13]],[[12,0,25,12],[19,0,25,19],[23,0,25,23],[24,0,25,24],[30,0,25,30],[31,0,25,31],[37,0,25,37],[39,0,25,39],[43,0,25,43],[44,0,25,44],[45,0,25,45],[46,0,25,46],[50,0,25,50],[51,0,25,51],[55,0,25,55],[56,0,25,56],[57,0,25,57],[58,0,25,58],[59,0,25,59],[60,0,25,60]],[[9,0,26,9]],[[4,0,27,4],[5,0,27,5]],[[4,0,28,4],[10,0,28,10],[11,0,28,11],[17,0,28,17]],[[8,0,29,8],[15,0,29,15],[19,0,29,19],[20,0,29,20],[29,0,29,29],[30,0,29,30],[36,0,29,36],[37,0,29,37],[38,0,29,38],[39,0,29,39],[43,0,29,43],[44,0,29,44],[48,0,29,48],[49,0,29,49],[50,0,29,50],[51,0,29,51],[52,0,29,52],[53,0,29,53]],[[4,0,30,4],[5,0,30,5]],[[4,0,31,4],[10,0,31,10],[11,0,31,11],[17,0,31,17],[19,0,31,19],[23,0,31,23],[25,0,31,25],[32,0,31,32]],[[8,0,32,8],[15,0,32,15],[19,0,32,19],[20,0,32,20],[29,0,32,29],[30,0,32,30],[36,0,32,36],[38,0,32,38],[42,0,32,42],[43,0,32,43],[44,0,32,44],[45,0,32,45],[49,0,32,49],[50,0,32,50],[54,0,32,54],[55,0,32,55],[56,0,32,56],[57,0,32,57],[58,0,32,58],[59,0,32,59]],[[4,0,33,4],[5,0,33,5]],[[4,0,34,4],[14,0,34,14],[15,0,34,15],[16,0,34,16]],[[8,0,35,8],[15,0,35,15],[19,0,35,19],[20,0,35,20],[27,0,35,27],[28,0,35,28],[29,0,35,29],[30,0,35,30],[31,0,35,31],[32,0,35,32]],[[4,0,36,4],[5,0,36,5]],[[1,0,37,1]],[[0,0,38,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,51,3]],[[0,0,52,0],[6,0,52,6],[13,0,52,13],[27,0,52,27]],[[4,0,53,4],[16,0,53,16],[19,0,53,19]],[[8,0,54,8],[12,0,54,12],[13,0,54,13],[16,0,54,16],[19,0,54,19],[22,0,54,22],[23,0,54,23]],[[8,0,55,8],[12,0,55,12],[13,0,55,13],[29,0,55,29],[32,0,55,32],[34,0,55,34],[35,0,55,35]],[[4,0,56,4],[5,0,56,5]],[[4,0,57,4],[55,0,57,55]],[[4,0,58,4],[10,0,58,10],[11,0,58,11],[19,0,58,19],[20,0,58,20],[29,0,58,29],[31,0,58,31],[35,0,58,35]],[[8,0,59,8],[14,0,59,14],[17,0,59,17],[20,0,59,20],[30,0,59,30],[31,0,59,31],[40,0,59,40],[42,0,59,42],[46,0,59,46],[47,0,59,47],[48,0,59,48]],[[8,0,60,8],[15,0,60,15],[19,0,60,19],[23,0,60,23],[24,0,60,24],[27,0,60,27],[28,0,60,28],[29,0,60,29]],[[4,0,61,4],[5,0,61,5]],[[4,0,62,4],[59,0,62,59]],[[4,0,63,4],[8,0,63,8],[13,0,63,13]],[[8,0,64,8],[15,0,64,15],[20,0,64,20],[21,0,64,21],[25,0,64,25],[26,0,64,26],[29,0,64,29],[31,0,64,31],[34,0,64,34],[38,0,64,38],[39,0,64,39],[55,0,64,55],[56,0,64,56],[57,0,64,57]],[[4,0,65,4],[5,0,65,5]],[[4,0,66,4],[90,0,66,90]],[[4,0,67,4],[12,0,67,12]],[[8,0,68,8],[15,0,68,15],[19,0,68,19],[20,0,68,20],[27,0,68,27],[28,0,68,28],[32,0,68,32],[33,0,68,33],[38,0,68,38],[39,0,68,39],[40,0,68,40],[41,0,68,41]],[[4,0,69,4],[5,0,69,5]],[[4,0,70,4],[9,0,70,9],[10,0,70,10],[19,0,70,19],[21,0,70,21],[26,0,70,26],[28,0,70,28],[33,0,70,33]],[[8,0,71,8],[12,0,71,12],[13,0,71,13],[29,0,71,29],[30,0,71,30],[34,0,71,34],[35,0,71,35],[40,0,71,40],[41,0,71,41],[50,0,71,50],[52,0,71,52],[57,0,71,57],[59,0,71,59],[64,0,71,64],[65,0,71,65],[66,0,71,66],[67,0,71,67]],[[8,0,72,8],[15,0,72,15],[19,0,72,19],[20,0,72,20]],[[4,0,73,4],[5,0,73,5]],[[4,0,74,4],[11,0,74,11],[12,0,74,12],[21,0,74,21],[23,0,74,23],[35,0,74,35]],[[8,0,75,8],[12,0,75,12],[13,0,75,13],[29,0,75,29],[30,0,75,30],[34,0,75,34],[35,0,75,35],[42,0,75,42],[43,0,75,43],[52,0,75,52],[54,0,75,54],[66,0,75,66],[67,0,75,67],[68,0,75,68],[69,0,75,69]],[[8,0,76,8],[15,0,76,15],[19,0,76,19],[20,0,76,20]],[[4,0,77,4],[5,0,77,5]],[[4,0,78,4],[9,0,78,9],[10,0,78,10],[16,0,78,16]],[[8,0,79,8],[12,0,79,12],[13,0,79,13],[29,0,79,29],[30,0,79,30],[34,0,79,34],[35,0,79,35],[40,0,79,40],[41,0,79,41],[47,0,79,47],[48,0,79,48],[49,0,79,49],[50,0,79,50]],[[8,0,80,8],[15,0,80,15],[19,0,80,19],[20,0,80,20]],[[4,0,81,4],[5,0,81,5]],[[4,0,82,4],[15,0,82,15],[16,0,82,16],[22,0,82,22]],[[8,0,83,8],[12,0,83,12],[13,0,83,13],[29,0,83,29],[30,0,83,30],[34,0,83,34],[35,0,83,35],[46,0,83,46],[47,0,83,47],[53,0,83,53],[54,0,83,54],[55,0,83,55],[56,0,83,56]],[[8,0,84,8],[15,0,84,15],[19,0,84,19],[20,0,84,20]],[[4,0,85,4],[5,0,85,5]],[[4,0,86,4],[11,0,86,11],[12,0,86,12],[20,0,86,20],[22,0,86,22],[25,0,86,25],[36,0,86,36]],[[8,0,87,8],[12,0,87,12],[20,0,87,20],[22,0,87,22]],[[12,0,88,12],[16,0,88,16],[17,0,88,17],[33,0,88,33],[34,0,88,34],[38,0,88,38],[39,0,88,39],[46,0,88,46],[47,0,88,47],[55,0,88,55],[56,0,88,56],[57,0,88,57],[58,0,88,58]],[[9,0,89,9]],[[13,0,90,13],[17,0,90,17],[28,0,90,28],[30,0,90,30]],[[12,0,91,12],[16,0,91,16],[17,0,91,17],[33,0,91,33],[34,0,91,34],[38,0,91,38],[39,0,91,39],[46,0,91,46],[47,0,91,47],[50,0,91,50],[61,0,91,61],[62,0,91,62],[63,0,91,63],[64,0,91,64]],[[9,0,92,9]],[[8,0,93,8],[15,0,93,15],[19,0,93,19],[20,0,93,20]],[[4,0,94,4],[5,0,94,5]],[[4,0,95,4],[14,0,95,14],[15,0,95,15],[23,0,95,23],[25,0,95,25],[28,0,95,28],[39,0,95,39]],[[8,0,96,8],[12,0,96,12],[20,0,96,20],[22,0,96,22]],[[12,0,97,12],[16,0,97,16],[17,0,97,17],[33,0,97,33],[34,0,97,34],[38,0,97,38],[39,0,97,39],[49,0,97,49],[50,0,97,50],[58,0,97,58],[59,0,97,59],[60,0,97,60],[61,0,97,61]],[[9,0,98,9]],[[13,0,99,13],[17,0,99,17],[28,0,99,28],[30,0,99,30]],[[12,0,100,12],[16,0,100,16],[17,0,100,17],[33,0,100,33],[34,0,100,34],[38,0,100,38],[39,0,100,39],[49,0,100,49],[50,0,100,50],[53,0,100,53],[64,0,100,64],[65,0,100,65],[66,0,100,66],[67,0,100,67]],[[9,0,101,9]],[[8,0,102,8],[15,0,102,15],[19,0,102,19],[20,0,102,20]],[[4,0,103,4],[5,0,103,5]],[[4,0,104,4],[9,0,104,9],[10,0,104,10],[18,0,104,18],[20,0,104,20],[23,0,104,23],[34,0,104,34]],[[8,0,105,8],[12,0,105,12],[20,0,105,20],[22,0,105,22]],[[12,0,106,12],[16,0,106,16],[17,0,106,17],[33,0,106,33],[34,0,106,34],[38,0,106,38],[39,0,106,39],[44,0,106,44],[45,0,106,45],[53,0,106,53],[54,0,106,54],[55,0,106,55],[56,0,106,56]],[[9,0,107,9]],[[13,0,108,13],[17,0,108,17],[28,0,108,28],[30,0,108,30]],[[12,0,109,12],[16,0,109,16],[17,0,109,17],[33,0,109,33],[34,0,109,34],[38,0,109,38],[39,0,109,39],[44,0,109,44],[45,0,109,45],[48,0,109,48],[59,0,109,59],[60,0,109,60],[61,0,109,61],[62,0,109,62]],[[9,0,110,9]],[[8,0,111,8],[15,0,111,15],[19,0,111,19],[20,0,111,20]],[[4,0,112,4],[5,0,112,5]],[[4,0,113,4],[13,0,113,13],[14,0,113,14],[22,0,113,22],[24,0,113,24],[27,0,113,27],[38,0,113,38]],[[8,0,114,8],[12,0,114,12],[20,0,114,20],[22,0,114,22]],[[12,0,115,12],[16,0,115,16],[17,0,115,17],[33,0,115,33],[34,0,115,34],[38,0,115,38],[39,0,115,39],[48,0,115,48],[49,0,115,49],[57,0,115,57],[58,0,115,58],[59,0,115,59],[60,0,115,60]],[[9,0,116,9]],[[13,0,117,13],[17,0,117,17],[28,0,117,28],[30,0,117,30]],[[12,0,118,12],[16,0,118,16],[17,0,118,17],[33,0,118,33],[34,0,118,34],[38,0,118,38],[39,0,118,39],[48,0,118,48],[49,0,118,49],[52,0,118,52],[63,0,118,63],[64,0,118,64],[65,0,118,65],[66,0,118,66]],[[9,0,119,9]],[[8,0,120,8],[15,0,120,15],[19,0,120,19],[20,0,120,20]],[[4,0,121,4],[5,0,121,5]],[[1,0,122,1]],[[0,0,123,0],[13506,0,123,13506]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":180283,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":32,"imported":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"},"local":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"}},{"type":"ImportSpecifier","start":34,"end":38,"imported":{"type":"Identifier","start":34,"end":38,"name":"from"},"local":{"type":"Identifier","start":34,"end":38,"name":"from"}},{"type":"ImportSpecifier","start":40,"end":42,"imported":{"type":"Identifier","start":40,"end":42,"name":"of"},"local":{"type":"Identifier","start":40,"end":42,"name":"of"}}],"source":{"type":"Literal","start":50,"end":56,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":59,"end":148,"specifiers":[{"type":"ImportSpecifier","start":68,"end":78,"imported":{"type":"Identifier","start":68,"end":78,"name":"catchError"},"local":{"type":"Identifier","start":68,"end":78,"name":"catchError"}},{"type":"ImportSpecifier","start":80,"end":86,"imported":{"type":"Identifier","start":80,"end":86,"name":"filter"},"local":{"type":"Identifier","start":80,"end":86,"name":"filter"}},{"type":"ImportSpecifier","start":88,"end":91,"imported":{"type":"Identifier","start":88,"end":91,"name":"map"},"local":{"type":"Identifier","start":88,"end":91,"name":"map"}},{"type":"ImportSpecifier","start":93,"end":101,"imported":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"},"local":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"}},{"type":"ImportSpecifier","start":103,"end":112,"imported":{"type":"Identifier","start":103,"end":112,"name":"switchMap"},"local":{"type":"Identifier","start":103,"end":112,"name":"switchMap"}},{"type":"ImportSpecifier","start":114,"end":118,"imported":{"type":"Identifier","start":114,"end":118,"name":"take"},"local":{"type":"Identifier","start":114,"end":118,"name":"take"}},{"type":"ImportSpecifier","start":120,"end":123,"imported":{"type":"Identifier","start":120,"end":123,"name":"tap"},"local":{"type":"Identifier","start":120,"end":123,"name":"tap"}}],"source":{"type":"Literal","start":131,"end":147,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":150,"end":217,"specifiers":[{"type":"ImportSpecifier","start":159,"end":176,"imported":{"type":"Identifier","start":159,"end":176,"name":"DocumentReference"},"local":{"type":"Identifier","start":159,"end":176,"name":"DocumentReference"}},{"type":"ImportSpecifier","start":178,"end":188,"imported":{"type":"Identifier","start":178,"end":188,"name":"writeBatch"},"local":{"type":"Identifier","start":178,"end":188,"name":"writeBatch"}}],"source":{"type":"Literal","start":196,"end":216,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":219,"end":369,"specifiers":[{"type":"ImportSpecifier","start":228,"end":242,"imported":{"type":"Identifier","start":228,"end":242,"name":"addCreatedDate"},"local":{"type":"Identifier","start":228,"end":242,"name":"addCreatedDate"}},{"type":"ImportSpecifier","start":244,"end":257,"imported":{"type":"Identifier","start":244,"end":257,"name":"addDataToItem"},"local":{"type":"Identifier","start":244,"end":257,"name":"addDataToItem"}},{"type":"ImportSpecifier","start":259,"end":274,"imported":{"type":"Identifier","start":259,"end":274,"name":"addModifiedDate"},"local":{"type":"Identifier","start":259,"end":274,"name":"addModifiedDate"}},{"type":"ImportSpecifier","start":276,"end":298,"imported":{"type":"Identifier","start":276,"end":298,"name":"convertTimestampToDate"},"local":{"type":"Identifier","start":276,"end":298,"name":"convertTimestampToDate"}},{"type":"ImportSpecifier","start":300,"end":315,"imported":{"type":"Identifier","start":300,"end":315,"name":"getDocRefWithId"},"local":{"type":"Identifier","start":300,"end":315,"name":"getDocRefWithId"}},{"type":"ImportSpecifier","start":317,"end":331,"imported":{"type":"Identifier","start":317,"end":331,"name":"getRefFromPath"},"local":{"type":"Identifier","start":317,"end":331,"name":"getRefFromPath"}},{"type":"ImportSpecifier","start":333,"end":349,"imported":{"type":"Identifier","start":333,"end":349,"name":"getSubCollection"},"local":{"type":"Identifier","start":333,"end":349,"name":"getSubCollection"}}],"source":{"type":"Literal","start":357,"end":368,"value":"./helpers","raw":"'./helpers'"}},{"type":"ImportDeclaration","start":371,"end":437,"specifiers":[{"type":"ImportSpecifier","start":380,"end":395,"imported":{"type":"Identifier","start":380,"end":395,"name":"moveItemInArray"},"local":{"type":"Identifier","start":380,"end":395,"name":"moveItemInArray"}},{"type":"ImportSpecifier","start":397,"end":414,"imported":{"type":"Identifier","start":397,"end":414,"name":"transferArrayItem"},"local":{"type":"Identifier","start":397,"end":414,"name":"transferArrayItem"}}],"source":{"type":"Literal","start":422,"end":436,"value":"./drag-utils","raw":"'./drag-utils'"}},{"type":"ImportDeclaration","start":439,"end":500,"specifiers":[{"type":"ImportSpecifier","start":448,"end":462,"imported":{"type":"Identifier","start":448,"end":462,"name":"QueryContainer"},"local":{"type":"Identifier","start":448,"end":462,"name":"QueryContainer"}}],"source":{"type":"Literal","start":470,"end":499,"value":"./firebase-extended-wrapper","raw":"'./firebase-extended-wrapper'"}},{"type":"ExportNamedDeclaration","start":579,"end":608,"declaration":{"type":"VariableDeclaration","start":586,"end":608,"declarations":[{"type":"VariableDeclarator","start":590,"end":607,"id":{"type":"Identifier","start":590,"end":607,"name":"DocNotExistAction"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":610,"end":1288,"expression":{"type":"CallExpression","start":610,"end":1287,"callee":{"type":"FunctionExpression","start":611,"end":1239,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":621,"end":638,"name":"DocNotExistAction"}],"body":{"type":"BlockStatement","start":640,"end":1239,"body":[{"type":"ExpressionStatement","start":681,"end":753,"expression":{"type":"AssignmentExpression","start":681,"end":752,"operator":"=","left":{"type":"MemberExpression","start":681,"end":736,"object":{"type":"Identifier","start":681,"end":698,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":699,"end":735,"operator":"=","left":{"type":"MemberExpression","start":699,"end":731,"object":{"type":"Identifier","start":699,"end":716,"name":"DocNotExistAction"},"property":{"type":"Literal","start":717,"end":730,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""},"computed":true,"optional":false},"right":{"type":"Literal","start":734,"end":735,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":739,"end":752,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""}}},{"type":"ExpressionStatement","start":878,"end":966,"expression":{"type":"AssignmentExpression","start":878,"end":965,"operator":"=","left":{"type":"MemberExpression","start":878,"end":941,"object":{"type":"Identifier","start":878,"end":895,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":896,"end":940,"operator":"=","left":{"type":"MemberExpression","start":896,"end":936,"object":{"type":"Identifier","start":896,"end":913,"name":"DocNotExistAction"},"property":{"type":"Literal","start":914,"end":935,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""},"computed":true,"optional":false},"right":{"type":"Literal","start":939,"end":940,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":944,"end":965,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""}}},{"type":"ExpressionStatement","start":1025,"end":1087,"expression":{"type":"AssignmentExpression","start":1025,"end":1086,"operator":"=","left":{"type":"MemberExpression","start":1025,"end":1075,"object":{"type":"Identifier","start":1025,"end":1042,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1043,"end":1074,"operator":"=","left":{"type":"MemberExpression","start":1043,"end":1070,"object":{"type":"Identifier","start":1043,"end":1060,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1061,"end":1069,"value":"FILTER","raw":"\"FILTER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1073,"end":1074,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1078,"end":1086,"value":"FILTER","raw":"\"FILTER\""}}},{"type":"ExpressionStatement","start":1148,"end":1236,"expression":{"type":"AssignmentExpression","start":1148,"end":1235,"operator":"=","left":{"type":"MemberExpression","start":1148,"end":1211,"object":{"type":"Identifier","start":1148,"end":1165,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1166,"end":1210,"operator":"=","left":{"type":"MemberExpression","start":1166,"end":1206,"object":{"type":"Identifier","start":1166,"end":1183,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1184,"end":1205,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1209,"end":1210,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1214,"end":1235,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""}}}]}},"arguments":[{"type":"LogicalExpression","start":1241,"end":1286,"left":{"type":"Identifier","start":1241,"end":1258,"name":"DocNotExistAction"},"operator":"||","right":{"type":"AssignmentExpression","start":1263,"end":1285,"operator":"=","left":{"type":"Identifier","start":1263,"end":1280,"name":"DocNotExistAction"},"right":{"type":"ObjectExpression","start":1283,"end":1285,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":1328,"end":54968,"declaration":{"type":"ClassDeclaration","start":1335,"end":54968,"id":{"type":"Identifier","start":1341,"end":1358,"name":"FirestoreExtended"},"superClass":null,"body":{"type":"ClassBody","start":1359,"end":54968,"body":[{"type":"MethodDefinition","start":1642,"end":1755,"static":false,"computed":false,"key":{"type":"Identifier","start":1642,"end":1653,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1653,"end":1755,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1654,"end":1656,"name":"fs"},{"type":"AssignmentPattern","start":1658,"end":1679,"left":{"type":"Identifier","start":1658,"end":1670,"name":"defaultDocId"},"right":{"type":"Literal","start":1673,"end":1679,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":1681,"end":1755,"body":[{"type":"ExpressionStatement","start":1692,"end":1705,"expression":{"type":"AssignmentExpression","start":1692,"end":1704,"operator":"=","left":{"type":"MemberExpression","start":1692,"end":1699,"object":{"type":"ThisExpression","start":1692,"end":1696},"property":{"type":"Identifier","start":1697,"end":1699,"name":"fs"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1702,"end":1704,"name":"fs"}}},{"type":"ExpressionStatement","start":1715,"end":1748,"expression":{"type":"AssignmentExpression","start":1715,"end":1747,"operator":"=","left":{"type":"MemberExpression","start":1715,"end":1732,"object":{"type":"ThisExpression","start":1715,"end":1719},"property":{"type":"Identifier","start":1720,"end":1732,"name":"defaultDocId"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1735,"end":1747,"name":"defaultDocId"}}}]}}},{"type":"MethodDefinition","start":2881,"end":3123,"static":false,"computed":false,"key":{"type":"Identifier","start":2881,"end":2894,"name":"listenForDoc$"},"kind":"method","value":{"type":"FunctionExpression","start":2894,"end":3123,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2895,"end":2901,"name":"docRef"},{"type":"AssignmentPattern","start":2903,"end":2928,"left":{"type":"Identifier","start":2903,"end":2923,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":2926,"end":2928,"elements":[]}},{"type":"AssignmentPattern","start":2930,"end":2986,"left":{"type":"Identifier","start":2930,"end":2946,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":2949,"end":2986,"object":{"type":"Identifier","start":2949,"end":2966,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":2967,"end":2986,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":2988,"end":3123,"body":[{"type":"ReturnStatement","start":2999,"end":3116,"argument":{"type":"CallExpression","start":3006,"end":3115,"callee":{"type":"MemberExpression","start":3006,"end":3096,"object":{"type":"CallExpression","start":3006,"end":3091,"callee":{"type":"MemberExpression","start":3006,"end":3043,"object":{"type":"ThisExpression","start":3006,"end":3010},"property":{"type":"Identifier","start":3011,"end":3043,"name":"listenForDocDeepRecursiveHelper$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3044,"end":3050,"name":"docRef"},{"type":"Identifier","start":3052,"end":3072,"name":"subCollectionQueries"},{"type":"Identifier","start":3074,"end":3090,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":3092,"end":3096,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3097,"end":3114,"callee":{"type":"Identifier","start":3097,"end":3100,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3101,"end":3113,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3101,"end":3105,"name":"data"}],"body":{"type":"Identifier","start":3109,"end":3113,"name":"data"}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4768,"end":5702,"static":false,"computed":false,"key":{"type":"Identifier","start":4768,"end":4788,"name":"listenForCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":4788,"end":5702,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4789,"end":4802,"name":"collectionRef"},{"type":"AssignmentPattern","start":4804,"end":4829,"left":{"type":"Identifier","start":4804,"end":4824,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":4827,"end":4829,"elements":[]}}],"body":{"type":"BlockStatement","start":4831,"end":5702,"body":[{"type":"ReturnStatement","start":5006,"end":5695,"argument":{"type":"CallExpression","start":5013,"end":5694,"callee":{"type":"MemberExpression","start":5013,"end":5064,"object":{"type":"CallExpression","start":5013,"end":5059,"callee":{"type":"MemberExpression","start":5013,"end":5044,"object":{"type":"ThisExpression","start":5013,"end":5017},"property":{"type":"Identifier","start":5018,"end":5044,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5045,"end":5058,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":5060,"end":5064,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5065,"end":5693,"callee":{"type":"Identifier","start":5065,"end":5073,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":5074,"end":5692,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5075,"end":5080,"name":"items"}],"body":{"type":"BlockStatement","start":5085,"end":5692,"body":[{"type":"IfStatement","start":5100,"end":5189,"test":{"type":"LogicalExpression","start":5104,"end":5139,"left":{"type":"BinaryExpression","start":5104,"end":5117,"left":{"type":"Identifier","start":5104,"end":5109,"name":"items"},"operator":"==","right":{"type":"Literal","start":5113,"end":5117,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":5121,"end":5139,"left":{"type":"MemberExpression","start":5121,"end":5133,"object":{"type":"Identifier","start":5121,"end":5126,"name":"items"},"property":{"type":"Identifier","start":5127,"end":5133,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5138,"end":5139,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":5141,"end":5189,"body":[{"type":"ReturnStatement","start":5160,"end":5174,"argument":{"type":"CallExpression","start":5167,"end":5173,"callee":{"type":"Identifier","start":5167,"end":5169,"name":"of"},"arguments":[{"type":"ArrayExpression","start":5170,"end":5172,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5203,"end":5292,"test":{"type":"BinaryExpression","start":5207,"end":5239,"left":{"type":"MemberExpression","start":5207,"end":5234,"object":{"type":"Identifier","start":5207,"end":5227,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":5228,"end":5234,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":5238,"end":5239,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5241,"end":5292,"body":[{"type":"ReturnStatement","start":5260,"end":5277,"argument":{"type":"CallExpression","start":5267,"end":5276,"callee":{"type":"Identifier","start":5267,"end":5269,"name":"of"},"arguments":[{"type":"Identifier","start":5270,"end":5275,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":5306,"end":5337,"declarations":[{"type":"VariableDeclarator","start":5312,"end":5336,"id":{"type":"Identifier","start":5312,"end":5331,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":5334,"end":5336,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":5351,"end":5557,"expression":{"type":"CallExpression","start":5351,"end":5556,"callee":{"type":"MemberExpression","start":5351,"end":5364,"object":{"type":"Identifier","start":5351,"end":5356,"name":"items"},"property":{"type":"Identifier","start":5357,"end":5364,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5365,"end":5555,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5365,"end":5369,"name":"item"}],"body":{"type":"BlockStatement","start":5373,"end":5555,"body":[{"type":"VariableDeclaration","start":5392,"end":5477,"declarations":[{"type":"VariableDeclarator","start":5398,"end":5476,"id":{"type":"Identifier","start":5398,"end":5416,"name":"collectionListener"},"init":{"type":"CallExpression","start":5419,"end":5476,"callee":{"type":"MemberExpression","start":5419,"end":5448,"object":{"type":"ThisExpression","start":5419,"end":5423},"property":{"type":"Identifier","start":5424,"end":5448,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5449,"end":5453,"name":"item"},{"type":"Identifier","start":5455,"end":5475,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5495,"end":5540,"expression":{"type":"CallExpression","start":5495,"end":5539,"callee":{"type":"MemberExpression","start":5495,"end":5519,"object":{"type":"Identifier","start":5495,"end":5514,"name":"collectionListeners"},"property":{"type":"Identifier","start":5515,"end":5519,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5520,"end":5538,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":5639,"end":5681,"argument":{"type":"CallExpression","start":5646,"end":5680,"callee":{"type":"Identifier","start":5646,"end":5659,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":5660,"end":5679,"name":"collectionListeners"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5853,"end":7465,"static":false,"computed":false,"key":{"type":"Identifier","start":5853,"end":5884,"name":"listenForCollectionRecursively$"},"kind":"method","value":{"type":"FunctionExpression","start":5884,"end":7465,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5885,"end":5899,"name":"collectionPath"},{"type":"Identifier","start":5901,"end":5914,"name":"collectionKey"},{"type":"Identifier","start":5916,"end":5924,"name":"orderKey"}],"body":{"type":"BlockStatement","start":5926,"end":7465,"body":[{"type":"VariableDeclaration","start":5937,"end":6009,"declarations":[{"type":"VariableDeclarator","start":5943,"end":6008,"id":{"type":"Identifier","start":5943,"end":5956,"name":"collectionRef"},"init":{"type":"CallExpression","start":5959,"end":6008,"callee":{"type":"Identifier","start":5959,"end":5973,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":5974,"end":5988,"name":"collectionPath"},{"type":"MemberExpression","start":5990,"end":6007,"object":{"type":"MemberExpression","start":5990,"end":5997,"object":{"type":"ThisExpression","start":5990,"end":5994},"property":{"type":"Identifier","start":5995,"end":5997,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5998,"end":6007,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6019,"end":6077,"declarations":[{"type":"VariableDeclarator","start":6025,"end":6076,"id":{"type":"Identifier","start":6025,"end":6040,"name":"collectionQuery"},"init":{"type":"NewExpression","start":6043,"end":6076,"callee":{"type":"Identifier","start":6047,"end":6061,"name":"QueryContainer"},"arguments":[{"type":"Identifier","start":6062,"end":6075,"name":"collectionRef"}]}}],"kind":"const"},{"type":"IfStatement","start":6087,"end":6169,"test":{"type":"BinaryExpression","start":6091,"end":6107,"left":{"type":"Identifier","start":6091,"end":6099,"name":"orderKey"},"operator":"!=","right":{"type":"Literal","start":6103,"end":6107,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6109,"end":6169,"body":[{"type":"ExpressionStatement","start":6124,"end":6158,"expression":{"type":"CallExpression","start":6124,"end":6157,"callee":{"type":"MemberExpression","start":6124,"end":6147,"object":{"type":"Identifier","start":6124,"end":6139,"name":"collectionQuery"},"property":{"type":"Identifier","start":6140,"end":6147,"name":"orderBy"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6148,"end":6156,"name":"orderKey"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6179,"end":7458,"argument":{"type":"CallExpression","start":6186,"end":7457,"callee":{"type":"MemberExpression","start":6186,"end":6237,"object":{"type":"CallExpression","start":6186,"end":6232,"callee":{"type":"MemberExpression","start":6186,"end":6217,"object":{"type":"ThisExpression","start":6186,"end":6190},"property":{"type":"Identifier","start":6191,"end":6217,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6218,"end":6231,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":6233,"end":6237,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6238,"end":7456,"callee":{"type":"Identifier","start":6238,"end":6246,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":6247,"end":7455,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6248,"end":6253,"name":"items"}],"body":{"type":"BlockStatement","start":6258,"end":7455,"body":[{"type":"IfStatement","start":6273,"end":6344,"test":{"type":"BinaryExpression","start":6277,"end":6294,"left":{"type":"MemberExpression","start":6277,"end":6289,"object":{"type":"Identifier","start":6277,"end":6282,"name":"items"},"property":{"type":"Identifier","start":6283,"end":6289,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6293,"end":6294,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6296,"end":6344,"body":[{"type":"ReturnStatement","start":6315,"end":6329,"argument":{"type":"CallExpression","start":6322,"end":6328,"callee":{"type":"Identifier","start":6322,"end":6324,"name":"of"},"arguments":[{"type":"ArrayExpression","start":6325,"end":6327,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":6490,"end":6514,"declarations":[{"type":"VariableDeclarator","start":6496,"end":6513,"id":{"type":"Identifier","start":6496,"end":6508,"name":"nextLevelObs"},"init":{"type":"ArrayExpression","start":6511,"end":6513,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":6528,"end":7360,"await":false,"left":{"type":"VariableDeclaration","start":6533,"end":6543,"declarations":[{"type":"VariableDeclarator","start":6539,"end":6543,"id":{"type":"Identifier","start":6539,"end":6543,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":6547,"end":6552,"name":"items"},"body":{"type":"BlockStatement","start":6554,"end":7360,"body":[{"type":"VariableDeclaration","start":6695,"end":6776,"declarations":[{"type":"VariableDeclarator","start":6701,"end":6775,"id":{"type":"Identifier","start":6701,"end":6714,"name":"nextLevelPath"},"init":{"type":"CallExpression","start":6717,"end":6775,"callee":{"type":"MemberExpression","start":6717,"end":6755,"object":{"type":"MemberExpression","start":6717,"end":6748,"object":{"type":"MemberExpression","start":6717,"end":6743,"object":{"type":"MemberExpression","start":6717,"end":6739,"object":{"type":"Identifier","start":6717,"end":6721,"name":"item"},"property":{"type":"Identifier","start":6722,"end":6739,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6740,"end":6743,"name":"ref"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6744,"end":6748,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6749,"end":6755,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6756,"end":6759,"value":"/","raw":"'/'"},{"type":"Identifier","start":6761,"end":6774,"name":"collectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6814,"end":7292,"declarations":[{"type":"VariableDeclarator","start":6820,"end":7291,"id":{"type":"Identifier","start":6820,"end":6835,"name":"nextLevelItems$"},"init":{"type":"CallExpression","start":6838,"end":7291,"callee":{"type":"MemberExpression","start":6838,"end":6919,"object":{"type":"CallExpression","start":6838,"end":6914,"callee":{"type":"MemberExpression","start":6838,"end":6874,"object":{"type":"ThisExpression","start":6838,"end":6842},"property":{"type":"Identifier","start":6843,"end":6874,"name":"listenForCollectionRecursively$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6875,"end":6888,"name":"nextLevelPath"},{"type":"Identifier","start":6890,"end":6903,"name":"collectionKey"},{"type":"Identifier","start":6905,"end":6913,"name":"orderKey"}],"optional":false},"property":{"type":"Identifier","start":6915,"end":6919,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6920,"end":7290,"callee":{"type":"Identifier","start":6920,"end":6923,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":6924,"end":7289,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6925,"end":6939,"name":"nextLevelItems"}],"body":{"type":"BlockStatement","start":6944,"end":7289,"body":[{"type":"IfStatement","start":6967,"end":7239,"test":{"type":"BinaryExpression","start":6971,"end":6996,"left":{"type":"MemberExpression","start":6971,"end":6992,"object":{"type":"Identifier","start":6971,"end":6985,"name":"nextLevelItems"},"property":{"type":"Identifier","start":6986,"end":6992,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":6995,"end":6996,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6998,"end":7131,"body":[{"type":"ReturnStatement","start":7025,"end":7108,"argument":{"type":"CallExpression","start":7032,"end":7107,"callee":{"type":"MemberExpression","start":7032,"end":7045,"object":{"type":"Identifier","start":7032,"end":7038,"name":"Object"},"property":{"type":"Identifier","start":7039,"end":7045,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7046,"end":7069,"callee":{"type":"MemberExpression","start":7046,"end":7059,"object":{"type":"Identifier","start":7046,"end":7052,"name":"Object"},"property":{"type":"Identifier","start":7053,"end":7059,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":7060,"end":7062,"properties":[]},{"type":"Identifier","start":7064,"end":7068,"name":"item"}],"optional":false},{"type":"ObjectExpression","start":7071,"end":7106,"properties":[{"type":"Property","start":7073,"end":7104,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":7074,"end":7087,"name":"collectionKey"},"value":{"type":"Identifier","start":7090,"end":7104,"name":"nextLevelItems"},"kind":"init"}]}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":7158,"end":7239,"body":[{"type":"ReturnStatement","start":7185,"end":7216,"argument":{"type":"CallExpression","start":7192,"end":7215,"callee":{"type":"MemberExpression","start":7192,"end":7205,"object":{"type":"Identifier","start":7192,"end":7198,"name":"Object"},"property":{"type":"Identifier","start":7199,"end":7205,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":7206,"end":7208,"properties":[]},{"type":"Identifier","start":7210,"end":7214,"name":"item"}],"optional":false}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7310,"end":7345,"expression":{"type":"CallExpression","start":7310,"end":7344,"callee":{"type":"MemberExpression","start":7310,"end":7327,"object":{"type":"Identifier","start":7310,"end":7322,"name":"nextLevelObs"},"property":{"type":"Identifier","start":7323,"end":7327,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7328,"end":7343,"name":"nextLevelItems$"}],"optional":false}}]}},{"type":"ReturnStatement","start":7374,"end":7444,"argument":{"type":"CallExpression","start":7381,"end":7443,"callee":{"type":"MemberExpression","start":7381,"end":7413,"object":{"type":"CallExpression","start":7381,"end":7408,"callee":{"type":"Identifier","start":7381,"end":7394,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":7395,"end":7407,"name":"nextLevelObs"}],"optional":false},"property":{"type":"Identifier","start":7409,"end":7413,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7414,"end":7442,"callee":{"type":"Identifier","start":7414,"end":7417,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":7418,"end":7441,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":7418,"end":7421,"name":"val"}],"body":{"type":"CallExpression","start":7425,"end":7441,"callee":{"type":"MemberExpression","start":7425,"end":7436,"object":{"type":"Identifier","start":7425,"end":7432,"name":"console"},"property":{"type":"Identifier","start":7433,"end":7436,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7437,"end":7440,"name":"val"}],"optional":false}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":8099,"end":15021,"static":false,"computed":false,"key":{"type":"Identifier","start":8099,"end":8103,"name":"add$"},"kind":"method","value":{"type":"FunctionExpression","start":8103,"end":15021,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8104,"end":8108,"name":"data"},{"type":"Identifier","start":8110,"end":8123,"name":"collectionRef"},{"type":"AssignmentPattern","start":8125,"end":8150,"left":{"type":"Identifier","start":8125,"end":8145,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":8148,"end":8150,"elements":[]}},{"type":"AssignmentPattern","start":8152,"end":8169,"left":{"type":"Identifier","start":8152,"end":8162,"name":"isAddDates"},"right":{"type":"Literal","start":8165,"end":8169,"value":true,"raw":"true"}},{"type":"Identifier","start":8171,"end":8176,"name":"docId"}],"body":{"type":"BlockStatement","start":8178,"end":15021,"body":[{"type":"IfStatement","start":8189,"end":8647,"test":{"type":"LogicalExpression","start":8193,"end":8256,"left":{"type":"LogicalExpression","start":8193,"end":8221,"left":{"type":"CallExpression","start":8193,"end":8212,"callee":{"type":"MemberExpression","start":8193,"end":8206,"object":{"type":"Identifier","start":8193,"end":8198,"name":"Array"},"property":{"type":"Identifier","start":8199,"end":8206,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8207,"end":8211,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":8216,"end":8221,"name":"docId"}},"operator":"&&","right":{"type":"BinaryExpression","start":8225,"end":8256,"left":{"type":"MemberExpression","start":8225,"end":8252,"object":{"type":"Identifier","start":8225,"end":8245,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":8246,"end":8252,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":8255,"end":8256,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":8258,"end":8647,"body":[{"type":"VariableDeclaration","start":8273,"end":8610,"declarations":[{"type":"VariableDeclarator","start":8279,"end":8609,"id":{"type":"Identifier","start":8279,"end":8284,"name":"error"},"init":{"type":"ObjectExpression","start":8287,"end":8609,"properties":[{"type":"Property","start":8306,"end":8330,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8306,"end":8310,"name":"name"},"value":{"type":"Literal","start":8312,"end":8330,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":8349,"end":8364,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8349,"end":8353,"name":"code"},"value":{"type":"Literal","start":8355,"end":8364,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":8383,"end":8480,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8383,"end":8390,"name":"message"},"value":{"type":"Literal","start":8392,"end":8480,"value":"Cannot have both docId and subCollectionWriters at the same time when data is an array","raw":"'Cannot have both docId and subCollectionWriters at the same time when data is an array'"},"kind":"init"},{"type":"Property","start":8499,"end":8508,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8499,"end":8504,"name":"stack"},"value":{"type":"Literal","start":8506,"end":8508,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":8527,"end":8531,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8527,"end":8531,"name":"data"},"kind":"init","value":{"type":"Identifier","start":8527,"end":8531,"name":"data"}},{"type":"Property","start":8550,"end":8570,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8550,"end":8570,"name":"subCollectionWriters"},"kind":"init","value":{"type":"Identifier","start":8550,"end":8570,"name":"subCollectionWriters"}},{"type":"Property","start":8589,"end":8594,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8589,"end":8594,"name":"docId"},"kind":"init","value":{"type":"Identifier","start":8589,"end":8594,"name":"docId"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":8624,"end":8636,"argument":{"type":"Identifier","start":8630,"end":8635,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":8657,"end":8672,"declarations":[{"type":"VariableDeclarator","start":8661,"end":8671,"id":{"type":"Identifier","start":8661,"end":8671,"name":"currentDoc"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8682,"end":8706,"declarations":[{"type":"VariableDeclarator","start":8686,"end":8705,"id":{"type":"Identifier","start":8686,"end":8700,"name":"subCollections"},"init":{"type":"ObjectExpression","start":8703,"end":8705,"properties":[]}}],"kind":"let"},{"type":"IfStatement","start":9036,"end":9339,"test":{"type":"LogicalExpression","start":9040,"end":9068,"left":{"type":"CallExpression","start":9040,"end":9059,"callee":{"type":"MemberExpression","start":9040,"end":9053,"object":{"type":"Identifier","start":9040,"end":9045,"name":"Array"},"property":{"type":"Identifier","start":9046,"end":9053,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9054,"end":9058,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":9063,"end":9068,"name":"docId"}},"consequent":{"type":"BlockStatement","start":9070,"end":9114,"body":[{"type":"ExpressionStatement","start":9085,"end":9103,"expression":{"type":"AssignmentExpression","start":9085,"end":9102,"operator":"=","left":{"type":"Identifier","start":9085,"end":9095,"name":"currentDoc"},"right":{"type":"Identifier","start":9098,"end":9102,"name":"data"}}}]},"alternate":{"type":"BlockStatement","start":9129,"end":9339,"body":[{"type":"VariableDeclaration","start":9144,"end":9232,"declarations":[{"type":"VariableDeclarator","start":9150,"end":9231,"id":{"type":"Identifier","start":9150,"end":9155,"name":"split"},"init":{"type":"CallExpression","start":9158,"end":9231,"callee":{"type":"MemberExpression","start":9158,"end":9203,"object":{"type":"ThisExpression","start":9158,"end":9162},"property":{"type":"Identifier","start":9163,"end":9203,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9204,"end":9208,"name":"data"},{"type":"Identifier","start":9210,"end":9230,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9246,"end":9276,"expression":{"type":"AssignmentExpression","start":9246,"end":9275,"operator":"=","left":{"type":"Identifier","start":9246,"end":9256,"name":"currentDoc"},"right":{"type":"MemberExpression","start":9259,"end":9275,"object":{"type":"Identifier","start":9259,"end":9264,"name":"split"},"property":{"type":"Identifier","start":9265,"end":9275,"name":"currentDoc"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":9290,"end":9328,"expression":{"type":"AssignmentExpression","start":9290,"end":9327,"operator":"=","left":{"type":"Identifier","start":9290,"end":9304,"name":"subCollections"},"right":{"type":"MemberExpression","start":9307,"end":9327,"object":{"type":"Identifier","start":9307,"end":9312,"name":"split"},"property":{"type":"Identifier","start":9313,"end":9327,"name":"subCollections"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":9349,"end":15014,"argument":{"type":"CallExpression","start":9356,"end":15013,"callee":{"type":"MemberExpression","start":9356,"end":14971,"object":{"type":"CallExpression","start":9356,"end":14966,"callee":{"type":"MemberExpression","start":9356,"end":9422,"object":{"type":"CallExpression","start":9356,"end":9417,"callee":{"type":"MemberExpression","start":9356,"end":9371,"object":{"type":"ThisExpression","start":9356,"end":9360},"property":{"type":"Identifier","start":9361,"end":9371,"name":"addSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9372,"end":9382,"name":"currentDoc"},{"type":"Identifier","start":9384,"end":9397,"name":"collectionRef"},{"type":"Identifier","start":9399,"end":9409,"name":"isAddDates"},{"type":"Identifier","start":9411,"end":9416,"name":"docId"}],"optional":false},"property":{"type":"Identifier","start":9418,"end":9422,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9471,"end":14965,"callee":{"type":"Identifier","start":9471,"end":9479,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":9480,"end":14964,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9481,"end":9492,"name":"currentData"}],"body":{"type":"BlockStatement","start":9497,"end":14964,"body":[{"type":"VariableDeclaration","start":9512,"end":9523,"declarations":[{"type":"VariableDeclarator","start":9516,"end":9518,"id":{"type":"Identifier","start":9516,"end":9518,"name":"_a"},"init":null},{"type":"VariableDeclarator","start":9520,"end":9522,"id":{"type":"Identifier","start":9520,"end":9522,"name":"_b"},"init":null}],"kind":"var"},{"type":"VariableDeclaration","start":9537,"end":9559,"declarations":[{"type":"VariableDeclarator","start":9543,"end":9558,"id":{"type":"Identifier","start":9543,"end":9553,"name":"subWriters"},"init":{"type":"ArrayExpression","start":9556,"end":9558,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":9573,"end":12996,"await":false,"left":{"type":"VariableDeclaration","start":9578,"end":9622,"declarations":[{"type":"VariableDeclarator","start":9584,"end":9622,"id":{"type":"ArrayPattern","start":9584,"end":9622,"elements":[{"type":"Identifier","start":9585,"end":9601,"name":"subCollectionKey"},{"type":"Identifier","start":9603,"end":9621,"name":"subCollectionValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":9626,"end":9656,"callee":{"type":"MemberExpression","start":9626,"end":9640,"object":{"type":"Identifier","start":9626,"end":9632,"name":"Object"},"property":{"type":"Identifier","start":9633,"end":9640,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9641,"end":9655,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":9658,"end":12996,"body":[{"type":"VariableDeclaration","start":9677,"end":9705,"declarations":[{"type":"VariableDeclarator","start":9681,"end":9704,"id":{"type":"Identifier","start":9681,"end":9704,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":9763,"end":9776,"declarations":[{"type":"VariableDeclarator","start":9767,"end":9775,"id":{"type":"Identifier","start":9767,"end":9775,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9794,"end":10180,"test":{"type":"Identifier","start":9798,"end":9818,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":9820,"end":10180,"body":[{"type":"ExpressionStatement","start":9843,"end":10003,"expression":{"type":"AssignmentExpression","start":9843,"end":10002,"operator":"=","left":{"type":"Identifier","start":9843,"end":9866,"name":"subSubCollectionWriters"},"right":{"type":"ConditionalExpression","start":9869,"end":10002,"test":{"type":"LogicalExpression","start":9869,"end":9973,"left":{"type":"BinaryExpression","start":9869,"end":9956,"left":{"type":"AssignmentExpression","start":9870,"end":9946,"operator":"=","left":{"type":"Identifier","start":9870,"end":9872,"name":"_a"},"right":{"type":"CallExpression","start":9875,"end":9946,"callee":{"type":"MemberExpression","start":9875,"end":9900,"object":{"type":"Identifier","start":9875,"end":9895,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":9896,"end":9900,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9901,"end":9945,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":9901,"end":9908,"name":"subColl"}],"body":{"type":"BinaryExpression","start":9912,"end":9945,"left":{"type":"MemberExpression","start":9912,"end":9924,"object":{"type":"Identifier","start":9912,"end":9919,"name":"subColl"},"property":{"type":"Identifier","start":9920,"end":9924,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":9929,"end":9945,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":9952,"end":9956,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":9960,"end":9973,"left":{"type":"Identifier","start":9960,"end":9962,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":9967,"end":9973,"operator":"void","prefix":true,"argument":{"type":"Literal","start":9972,"end":9973,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":9976,"end":9982,"operator":"void","prefix":true,"argument":{"type":"Literal","start":9981,"end":9982,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":9985,"end":10002,"object":{"type":"Identifier","start":9985,"end":9987,"name":"_a"},"property":{"type":"Identifier","start":9988,"end":10002,"name":"subCollections"},"computed":false,"optional":false}}}},{"type":"ExpressionStatement","start":10025,"end":10161,"expression":{"type":"AssignmentExpression","start":10025,"end":10160,"operator":"=","left":{"type":"Identifier","start":10025,"end":10033,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":10036,"end":10160,"test":{"type":"LogicalExpression","start":10036,"end":10140,"left":{"type":"BinaryExpression","start":10036,"end":10123,"left":{"type":"AssignmentExpression","start":10037,"end":10113,"operator":"=","left":{"type":"Identifier","start":10037,"end":10039,"name":"_b"},"right":{"type":"CallExpression","start":10042,"end":10113,"callee":{"type":"MemberExpression","start":10042,"end":10067,"object":{"type":"Identifier","start":10042,"end":10062,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10063,"end":10067,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10068,"end":10112,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10068,"end":10075,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10079,"end":10112,"left":{"type":"MemberExpression","start":10079,"end":10091,"object":{"type":"Identifier","start":10079,"end":10086,"name":"subColl"},"property":{"type":"Identifier","start":10087,"end":10091,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10096,"end":10112,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":10119,"end":10123,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":10127,"end":10140,"left":{"type":"Identifier","start":10127,"end":10129,"name":"_b"},"operator":"===","right":{"type":"UnaryExpression","start":10134,"end":10140,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10139,"end":10140,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":10143,"end":10149,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10148,"end":10149,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":10152,"end":10160,"object":{"type":"Identifier","start":10152,"end":10154,"name":"_b"},"property":{"type":"Identifier","start":10155,"end":10160,"name":"docId"},"computed":false,"optional":false}}}}]},"alternate":null},{"type":"VariableDeclaration","start":10198,"end":10293,"declarations":[{"type":"VariableDeclarator","start":10204,"end":10292,"id":{"type":"Identifier","start":10204,"end":10220,"name":"subCollectionRef"},"init":{"type":"CallExpression","start":10223,"end":10292,"callee":{"type":"Identifier","start":10223,"end":10239,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":10240,"end":10273,"object":{"type":"MemberExpression","start":10240,"end":10269,"object":{"type":"Identifier","start":10240,"end":10251,"name":"currentData"},"property":{"type":"Identifier","start":10252,"end":10269,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10270,"end":10273,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":10275,"end":10291,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10718,"end":12981,"test":{"type":"CallExpression","start":10722,"end":10755,"callee":{"type":"MemberExpression","start":10722,"end":10735,"object":{"type":"Identifier","start":10722,"end":10727,"name":"Array"},"property":{"type":"Identifier","start":10728,"end":10735,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10736,"end":10754,"name":"subCollectionValue"}],"optional":false},"consequent":{"type":"BlockStatement","start":10757,"end":12296,"body":[{"type":"IfStatement","start":10780,"end":12277,"test":{"type":"BinaryExpression","start":10784,"end":10806,"left":{"type":"Identifier","start":10784,"end":10792,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":10797,"end":10806,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":10808,"end":11438,"body":[{"type":"VariableDeclaration","start":11011,"end":11362,"declarations":[{"type":"VariableDeclarator","start":11017,"end":11361,"id":{"type":"Identifier","start":11017,"end":11026,"name":"subWriter"},"init":{"type":"CallExpression","start":11029,"end":11361,"callee":{"type":"MemberExpression","start":11029,"end":11128,"object":{"type":"CallExpression","start":11029,"end":11123,"callee":{"type":"MemberExpression","start":11029,"end":11038,"object":{"type":"ThisExpression","start":11029,"end":11033},"property":{"type":"Identifier","start":11034,"end":11038,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11039,"end":11057,"name":"subCollectionValue"},{"type":"Identifier","start":11059,"end":11075,"name":"subCollectionRef"},{"type":"Identifier","start":11077,"end":11100,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11102,"end":11112,"name":"isAddDates"},{"type":"Identifier","start":11114,"end":11122,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":11124,"end":11128,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11129,"end":11360,"callee":{"type":"Identifier","start":11129,"end":11132,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11133,"end":11359,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11133,"end":11137,"name":"item"}],"body":{"type":"BlockStatement","start":11141,"end":11359,"body":[{"type":"ReturnStatement","start":11226,"end":11272,"argument":{"type":"ObjectExpression","start":11233,"end":11271,"properties":[{"type":"Property","start":11235,"end":11256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11235,"end":11238,"name":"key"},"value":{"type":"Identifier","start":11240,"end":11256,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11258,"end":11269,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11258,"end":11263,"name":"value"},"value":{"type":"Identifier","start":11265,"end":11269,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11388,"end":11415,"expression":{"type":"CallExpression","start":11388,"end":11414,"callee":{"type":"MemberExpression","start":11388,"end":11403,"object":{"type":"Identifier","start":11388,"end":11398,"name":"subWriters"},"property":{"type":"Identifier","start":11399,"end":11403,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11404,"end":11413,"name":"subWriter"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11465,"end":12277,"body":[{"type":"ExpressionStatement","start":11562,"end":12254,"expression":{"type":"CallExpression","start":11562,"end":12253,"callee":{"type":"MemberExpression","start":11562,"end":11588,"object":{"type":"Identifier","start":11562,"end":11580,"name":"subCollectionValue"},"property":{"type":"Identifier","start":11581,"end":11588,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11589,"end":12252,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11590,"end":11600,"name":"arrayValue"}],"body":{"type":"BlockStatement","start":11605,"end":12252,"body":[{"type":"VariableDeclaration","start":11752,"end":12168,"declarations":[{"type":"VariableDeclarator","start":11758,"end":12167,"id":{"type":"Identifier","start":11758,"end":11767,"name":"subWriter"},"init":{"type":"CallExpression","start":11770,"end":12167,"callee":{"type":"MemberExpression","start":11770,"end":11851,"object":{"type":"CallExpression","start":11770,"end":11846,"callee":{"type":"MemberExpression","start":11770,"end":11779,"object":{"type":"ThisExpression","start":11770,"end":11774},"property":{"type":"Identifier","start":11775,"end":11779,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11780,"end":11790,"name":"arrayValue"},{"type":"Identifier","start":11792,"end":11808,"name":"subCollectionRef"},{"type":"Identifier","start":11810,"end":11833,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11835,"end":11845,"name":"isAddDates"}],"optional":false},"property":{"type":"Identifier","start":11847,"end":11851,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11852,"end":12166,"callee":{"type":"Identifier","start":11852,"end":11855,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11856,"end":12165,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11856,"end":11860,"name":"item"}],"body":{"type":"BlockStatement","start":11864,"end":12165,"body":[{"type":"ReturnStatement","start":12086,"end":12134,"argument":{"type":"ObjectExpression","start":12093,"end":12133,"properties":[{"type":"Property","start":12095,"end":12116,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12095,"end":12098,"name":"key"},"value":{"type":"Identifier","start":12100,"end":12116,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12118,"end":12131,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12118,"end":12123,"name":"value"},"value":{"type":"ArrayExpression","start":12125,"end":12131,"elements":[{"type":"Identifier","start":12126,"end":12130,"name":"item"}]},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12198,"end":12225,"expression":{"type":"CallExpression","start":12198,"end":12224,"callee":{"type":"MemberExpression","start":12198,"end":12213,"object":{"type":"Identifier","start":12198,"end":12208,"name":"subWriters"},"property":{"type":"Identifier","start":12209,"end":12213,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12214,"end":12223,"name":"subWriter"}],"optional":false}}]}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":12319,"end":12981,"body":[{"type":"ExpressionStatement","start":12379,"end":12444,"expression":{"type":"AssignmentExpression","start":12379,"end":12443,"operator":"=","left":{"type":"Identifier","start":12379,"end":12387,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":12390,"end":12443,"test":{"type":"BinaryExpression","start":12390,"end":12412,"left":{"type":"Identifier","start":12390,"end":12398,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":12403,"end":12412,"name":"undefined"}},"consequent":{"type":"Identifier","start":12415,"end":12423,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":12426,"end":12443,"object":{"type":"ThisExpression","start":12426,"end":12430},"property":{"type":"Identifier","start":12431,"end":12443,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":12574,"end":12913,"declarations":[{"type":"VariableDeclarator","start":12580,"end":12912,"id":{"type":"Identifier","start":12580,"end":12589,"name":"subWriter"},"init":{"type":"CallExpression","start":12592,"end":12912,"callee":{"type":"MemberExpression","start":12592,"end":12691,"object":{"type":"CallExpression","start":12592,"end":12686,"callee":{"type":"MemberExpression","start":12592,"end":12601,"object":{"type":"ThisExpression","start":12592,"end":12596},"property":{"type":"Identifier","start":12597,"end":12601,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12602,"end":12620,"name":"subCollectionValue"},{"type":"Identifier","start":12622,"end":12638,"name":"subCollectionRef"},{"type":"Identifier","start":12640,"end":12663,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12665,"end":12675,"name":"isAddDates"},{"type":"Identifier","start":12677,"end":12685,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":12687,"end":12691,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12692,"end":12911,"callee":{"type":"Identifier","start":12692,"end":12695,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12696,"end":12910,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12696,"end":12700,"name":"item"}],"body":{"type":"BlockStatement","start":12704,"end":12910,"body":[{"type":"ReturnStatement","start":12781,"end":12827,"argument":{"type":"ObjectExpression","start":12788,"end":12826,"properties":[{"type":"Property","start":12790,"end":12811,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12790,"end":12793,"name":"key"},"value":{"type":"Identifier","start":12795,"end":12811,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12813,"end":12824,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12813,"end":12818,"name":"value"},"value":{"type":"Identifier","start":12820,"end":12824,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12935,"end":12962,"expression":{"type":"CallExpression","start":12935,"end":12961,"callee":{"type":"MemberExpression","start":12935,"end":12950,"object":{"type":"Identifier","start":12935,"end":12945,"name":"subWriters"},"property":{"type":"Identifier","start":12946,"end":12950,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12951,"end":12960,"name":"subWriter"}],"optional":false}}]}}]}},{"type":"IfStatement","start":13033,"end":14953,"test":{"type":"BinaryExpression","start":13037,"end":13058,"left":{"type":"MemberExpression","start":13037,"end":13054,"object":{"type":"Identifier","start":13037,"end":13047,"name":"subWriters"},"property":{"type":"Identifier","start":13048,"end":13054,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":13057,"end":13058,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":13060,"end":14877,"body":[{"type":"ReturnStatement","start":13243,"end":14862,"argument":{"type":"CallExpression","start":13250,"end":14861,"callee":{"type":"MemberExpression","start":13250,"end":13280,"object":{"type":"CallExpression","start":13250,"end":13275,"callee":{"type":"Identifier","start":13250,"end":13263,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":13264,"end":13274,"name":"subWriters"}],"optional":false},"property":{"type":"Identifier","start":13276,"end":13280,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13669,"end":14644,"callee":{"type":"Identifier","start":13669,"end":13672,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":13673,"end":14643,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13674,"end":13682,"name":"docDatas"}],"body":{"type":"BlockStatement","start":13687,"end":14643,"body":[{"type":"VariableDeclaration","start":13710,"end":13733,"declarations":[{"type":"VariableDeclarator","start":13716,"end":13732,"id":{"type":"Identifier","start":13716,"end":13727,"name":"groupedData"},"init":{"type":"ObjectExpression","start":13730,"end":13732,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13755,"end":14583,"expression":{"type":"CallExpression","start":13755,"end":14582,"callee":{"type":"MemberExpression","start":13755,"end":13771,"object":{"type":"Identifier","start":13755,"end":13763,"name":"docDatas"},"property":{"type":"Identifier","start":13764,"end":13771,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13772,"end":14581,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13773,"end":13776,"name":"doc"}],"body":{"type":"BlockStatement","start":13781,"end":14581,"body":[{"type":"VariableDeclaration","start":13808,"end":13828,"declarations":[{"type":"VariableDeclarator","start":13814,"end":13827,"id":{"type":"Identifier","start":13814,"end":13817,"name":"key"},"init":{"type":"MemberExpression","start":13820,"end":13827,"object":{"type":"Identifier","start":13820,"end":13823,"name":"doc"},"property":{"type":"Identifier","start":13824,"end":13827,"name":"key"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":13854,"end":13878,"declarations":[{"type":"VariableDeclarator","start":13860,"end":13877,"id":{"type":"Identifier","start":13860,"end":13865,"name":"value"},"init":{"type":"MemberExpression","start":13868,"end":13877,"object":{"type":"Identifier","start":13868,"end":13871,"name":"doc"},"property":{"type":"Identifier","start":13872,"end":13877,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":14071,"end":14558,"test":{"type":"LogicalExpression","start":14075,"end":14141,"left":{"type":"CallExpression","start":14075,"end":14106,"callee":{"type":"MemberExpression","start":14075,"end":14101,"object":{"type":"Identifier","start":14075,"end":14086,"name":"groupedData"},"property":{"type":"Identifier","start":14087,"end":14101,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14102,"end":14105,"name":"key"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":14110,"end":14141,"callee":{"type":"MemberExpression","start":14110,"end":14123,"object":{"type":"Identifier","start":14110,"end":14115,"name":"Array"},"property":{"type":"Identifier","start":14116,"end":14123,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14124,"end":14140,"object":{"type":"Identifier","start":14124,"end":14135,"name":"groupedData"},"property":{"type":"Identifier","start":14136,"end":14139,"name":"key"},"computed":true,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":14143,"end":14401,"body":[{"type":"ExpressionStatement","start":14342,"end":14374,"expression":{"type":"CallExpression","start":14342,"end":14373,"callee":{"type":"MemberExpression","start":14342,"end":14363,"object":{"type":"MemberExpression","start":14342,"end":14358,"object":{"type":"Identifier","start":14342,"end":14353,"name":"groupedData"},"property":{"type":"Identifier","start":14354,"end":14357,"name":"key"},"computed":true,"optional":false},"property":{"type":"Identifier","start":14359,"end":14363,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14364,"end":14372,"object":{"type":"Identifier","start":14364,"end":14369,"name":"value"},"property":{"type":"Literal","start":14370,"end":14371,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14432,"end":14558,"body":[{"type":"ExpressionStatement","start":14506,"end":14531,"expression":{"type":"AssignmentExpression","start":14506,"end":14530,"operator":"=","left":{"type":"MemberExpression","start":14506,"end":14522,"object":{"type":"Identifier","start":14506,"end":14517,"name":"groupedData"},"property":{"type":"Identifier","start":14518,"end":14521,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":14525,"end":14530,"name":"value"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":14605,"end":14624,"argument":{"type":"Identifier","start":14612,"end":14623,"name":"groupedData"}}]}}],"optional":false},{"type":"CallExpression","start":14730,"end":14860,"callee":{"type":"Identifier","start":14730,"end":14733,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":14734,"end":14859,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14735,"end":14746,"name":"groupedData"}],"body":{"type":"BlockStatement","start":14751,"end":14859,"body":[{"type":"ReturnStatement","start":14774,"end":14840,"argument":{"type":"CallExpression","start":14781,"end":14839,"callee":{"type":"MemberExpression","start":14781,"end":14794,"object":{"type":"Identifier","start":14781,"end":14787,"name":"Object"},"property":{"type":"Identifier","start":14788,"end":14794,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":14795,"end":14825,"callee":{"type":"MemberExpression","start":14795,"end":14808,"object":{"type":"Identifier","start":14795,"end":14801,"name":"Object"},"property":{"type":"Identifier","start":14802,"end":14808,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":14809,"end":14811,"properties":[]},{"type":"Identifier","start":14813,"end":14824,"name":"currentData"}],"optional":false},{"type":"Identifier","start":14827,"end":14838,"name":"groupedData"}],"optional":false}}]}}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14896,"end":14953,"body":[{"type":"ReturnStatement","start":14915,"end":14938,"argument":{"type":"CallExpression","start":14922,"end":14937,"callee":{"type":"Identifier","start":14922,"end":14924,"name":"of"},"arguments":[{"type":"Identifier","start":14925,"end":14936,"name":"currentData"}],"optional":false}}]}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":14967,"end":14971,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15005,"end":15012,"callee":{"type":"Identifier","start":15005,"end":15009,"name":"take"},"arguments":[{"type":"Literal","start":15010,"end":15011,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":15756,"end":16209,"static":false,"computed":false,"key":{"type":"Identifier","start":15756,"end":15763,"name":"update$"},"kind":"method","value":{"type":"FunctionExpression","start":15763,"end":16209,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15764,"end":15768,"name":"data"},{"type":"Identifier","start":15770,"end":15776,"name":"docRef"},{"type":"AssignmentPattern","start":15778,"end":15803,"left":{"type":"Identifier","start":15778,"end":15798,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":15801,"end":15803,"elements":[]}},{"type":"AssignmentPattern","start":15805,"end":15829,"left":{"type":"Identifier","start":15805,"end":15822,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":15825,"end":15829,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":15831,"end":16209,"body":[{"type":"IfStatement","start":15842,"end":16052,"test":{"type":"LogicalExpression","start":15846,"end":15911,"left":{"type":"BinaryExpression","start":15846,"end":15874,"left":{"type":"Identifier","start":15846,"end":15866,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":15870,"end":15874,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":15878,"end":15911,"left":{"type":"MemberExpression","start":15878,"end":15905,"object":{"type":"Identifier","start":15878,"end":15898,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":15899,"end":15905,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":15910,"end":15911,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":15913,"end":16052,"body":[{"type":"ReturnStatement","start":15928,"end":15987,"argument":{"type":"CallExpression","start":15935,"end":15986,"callee":{"type":"MemberExpression","start":15935,"end":15953,"object":{"type":"ThisExpression","start":15935,"end":15939},"property":{"type":"Identifier","start":15940,"end":15953,"name":"updateSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15954,"end":15958,"name":"data"},{"type":"Identifier","start":15960,"end":15966,"name":"docRef"},{"type":"Identifier","start":15968,"end":15985,"name":"isAddModifiedDate"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":16062,"end":16160,"declarations":[{"type":"VariableDeclarator","start":16068,"end":16159,"id":{"type":"Identifier","start":16068,"end":16073,"name":"batch"},"init":{"type":"CallExpression","start":16076,"end":16159,"callee":{"type":"MemberExpression","start":16076,"end":16104,"object":{"type":"ThisExpression","start":16076,"end":16080},"property":{"type":"Identifier","start":16081,"end":16104,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16105,"end":16109,"name":"data"},{"type":"Identifier","start":16111,"end":16117,"name":"docRef"},{"type":"Identifier","start":16119,"end":16139,"name":"subCollectionWriters"},{"type":"Identifier","start":16141,"end":16158,"name":"isAddModifiedDate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":16170,"end":16202,"argument":{"type":"CallExpression","start":16177,"end":16201,"callee":{"type":"MemberExpression","start":16177,"end":16194,"object":{"type":"ThisExpression","start":16177,"end":16181},"property":{"type":"Identifier","start":16182,"end":16194,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16195,"end":16200,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16486,"end":16902,"static":false,"computed":false,"key":{"type":"Identifier","start":16486,"end":16501,"name":"updateMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":16501,"end":16902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16502,"end":16509,"name":"docRefs"},{"type":"Identifier","start":16511,"end":16515,"name":"data"},{"type":"AssignmentPattern","start":16517,"end":16541,"left":{"type":"Identifier","start":16517,"end":16534,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16537,"end":16541,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16543,"end":16902,"body":[{"type":"VariableDeclaration","start":16621,"end":16665,"declarations":[{"type":"VariableDeclarator","start":16627,"end":16664,"id":{"type":"Identifier","start":16627,"end":16632,"name":"batch"},"init":{"type":"CallExpression","start":16635,"end":16664,"callee":{"type":"Identifier","start":16635,"end":16645,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":16646,"end":16663,"object":{"type":"MemberExpression","start":16646,"end":16653,"object":{"type":"ThisExpression","start":16646,"end":16650},"property":{"type":"Identifier","start":16651,"end":16653,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16654,"end":16663,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":16675,"end":16760,"test":{"type":"Identifier","start":16679,"end":16696,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":16698,"end":16760,"body":[{"type":"ExpressionStatement","start":16713,"end":16749,"expression":{"type":"AssignmentExpression","start":16713,"end":16748,"operator":"=","left":{"type":"Identifier","start":16713,"end":16717,"name":"data"},"right":{"type":"CallExpression","start":16720,"end":16748,"callee":{"type":"Identifier","start":16720,"end":16735,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":16736,"end":16740,"name":"data"},{"type":"Literal","start":16742,"end":16747,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":16770,"end":16853,"expression":{"type":"CallExpression","start":16770,"end":16852,"callee":{"type":"MemberExpression","start":16770,"end":16785,"object":{"type":"Identifier","start":16770,"end":16777,"name":"docRefs"},"property":{"type":"Identifier","start":16778,"end":16785,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16786,"end":16851,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16787,"end":16793,"name":"docRef"}],"body":{"type":"BlockStatement","start":16798,"end":16851,"body":[{"type":"ExpressionStatement","start":16813,"end":16840,"expression":{"type":"CallExpression","start":16813,"end":16839,"callee":{"type":"MemberExpression","start":16813,"end":16825,"object":{"type":"Identifier","start":16813,"end":16818,"name":"batch"},"property":{"type":"Identifier","start":16819,"end":16825,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16826,"end":16832,"name":"docRef"},{"type":"Identifier","start":16834,"end":16838,"name":"data"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":16863,"end":16895,"argument":{"type":"CallExpression","start":16870,"end":16894,"callee":{"type":"MemberExpression","start":16870,"end":16887,"object":{"type":"ThisExpression","start":16870,"end":16874},"property":{"type":"Identifier","start":16875,"end":16887,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16888,"end":16893,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":17501,"end":18378,"static":false,"computed":false,"key":{"type":"Identifier","start":17501,"end":17513,"name":"changeDocId$"},"kind":"method","value":{"type":"FunctionExpression","start":17513,"end":18378,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17514,"end":17520,"name":"docRef"},{"type":"Identifier","start":17522,"end":17527,"name":"newId"},{"type":"AssignmentPattern","start":17529,"end":17554,"left":{"type":"Identifier","start":17529,"end":17549,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":17552,"end":17554,"elements":[]}},{"type":"Identifier","start":17556,"end":17576,"name":"subCollectionWriters"}],"body":{"type":"BlockStatement","start":17578,"end":18378,"body":[{"type":"IfStatement","start":17589,"end":17693,"test":{"type":"BinaryExpression","start":17593,"end":17621,"left":{"type":"Identifier","start":17593,"end":17613,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":17617,"end":17621,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":17623,"end":17693,"body":[{"type":"ExpressionStatement","start":17638,"end":17682,"expression":{"type":"AssignmentExpression","start":17638,"end":17681,"operator":"=","left":{"type":"Identifier","start":17638,"end":17658,"name":"subCollectionWriters"},"right":{"type":"Identifier","start":17661,"end":17681,"name":"subCollectionQueries"}}}]},"alternate":null},{"type":"VariableDeclaration","start":17703,"end":17739,"declarations":[{"type":"VariableDeclarator","start":17709,"end":17738,"id":{"type":"Identifier","start":17709,"end":17722,"name":"collectionRef"},"init":{"type":"MemberExpression","start":17725,"end":17738,"object":{"type":"Identifier","start":17725,"end":17731,"name":"docRef"},"property":{"type":"Identifier","start":17732,"end":17738,"name":"parent"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":17749,"end":18371,"argument":{"type":"CallExpression","start":17756,"end":18370,"callee":{"type":"MemberExpression","start":17756,"end":17809,"object":{"type":"CallExpression","start":17756,"end":17804,"callee":{"type":"MemberExpression","start":17756,"end":17774,"object":{"type":"ThisExpression","start":17756,"end":17760},"property":{"type":"Identifier","start":17761,"end":17774,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17775,"end":17781,"name":"docRef"},{"type":"Identifier","start":17783,"end":17803,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17805,"end":17809,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17843,"end":17850,"callee":{"type":"Identifier","start":17843,"end":17847,"name":"take"},"arguments":[{"type":"Literal","start":17848,"end":17849,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":17852,"end":17925,"callee":{"type":"Identifier","start":17852,"end":17855,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":17856,"end":17924,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":17857,"end":17864,"name":"oldData"}],"body":{"type":"CallExpression","start":17869,"end":17924,"callee":{"type":"MemberExpression","start":17869,"end":17893,"object":{"type":"ThisExpression","start":17869,"end":17873},"property":{"type":"Identifier","start":17874,"end":17893,"name":"cleanExtrasFromData"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17894,"end":17901,"name":"oldData"},{"type":"Identifier","start":17903,"end":17923,"name":"subCollectionWriters"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":17927,"end":18242,"callee":{"type":"Identifier","start":17927,"end":17936,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":17937,"end":18241,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17938,"end":17945,"name":"oldData"}],"body":{"type":"BlockStatement","start":17950,"end":18241,"body":[{"type":"ReturnStatement","start":17965,"end":18230,"argument":{"type":"CallExpression","start":17972,"end":18229,"callee":{"type":"MemberExpression","start":17972,"end":18046,"object":{"type":"CallExpression","start":17972,"end":18041,"callee":{"type":"MemberExpression","start":17972,"end":17981,"object":{"type":"ThisExpression","start":17972,"end":17976},"property":{"type":"Identifier","start":17977,"end":17981,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17982,"end":17989,"name":"oldData"},{"type":"Identifier","start":17991,"end":18004,"name":"collectionRef"},{"type":"Identifier","start":18006,"end":18026,"name":"subCollectionWriters"},{"type":"Literal","start":18028,"end":18033,"value":false,"raw":"false"},{"type":"Identifier","start":18035,"end":18040,"name":"newId"}],"optional":false},"property":{"type":"Identifier","start":18042,"end":18046,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18074,"end":18228,"callee":{"type":"Identifier","start":18074,"end":18082,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18083,"end":18227,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18083,"end":18090,"name":"newData"}],"body":{"type":"BlockStatement","start":18094,"end":18227,"body":[{"type":"ReturnStatement","start":18113,"end":18212,"argument":{"type":"CallExpression","start":18120,"end":18211,"callee":{"type":"MemberExpression","start":18120,"end":18167,"object":{"type":"CallExpression","start":18120,"end":18162,"callee":{"type":"MemberExpression","start":18120,"end":18132,"object":{"type":"ThisExpression","start":18120,"end":18124},"property":{"type":"Identifier","start":18125,"end":18132,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18133,"end":18139,"name":"docRef"},{"type":"Identifier","start":18141,"end":18161,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":18163,"end":18167,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18168,"end":18186,"callee":{"type":"Identifier","start":18168,"end":18171,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":18172,"end":18185,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"Identifier","start":18178,"end":18185,"name":"newData"}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":18244,"end":18360,"callee":{"type":"Identifier","start":18244,"end":18254,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":18255,"end":18359,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18255,"end":18258,"name":"err"}],"body":{"type":"BlockStatement","start":18262,"end":18359,"body":[{"type":"ExpressionStatement","start":18277,"end":18324,"expression":{"type":"CallExpression","start":18277,"end":18323,"callee":{"type":"MemberExpression","start":18277,"end":18288,"object":{"type":"Identifier","start":18277,"end":18284,"name":"console"},"property":{"type":"Identifier","start":18285,"end":18288,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":18289,"end":18322,"left":{"type":"Literal","start":18289,"end":18316,"value":"Failed to Change Doc Id: ","raw":"'Failed to Change Doc Id: '"},"operator":"+","right":{"type":"Identifier","start":18319,"end":18322,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":18338,"end":18348,"argument":{"type":"Identifier","start":18344,"end":18347,"name":"err"}}]}}],"optional":false},{"type":"CallExpression","start":18362,"end":18369,"callee":{"type":"Identifier","start":18362,"end":18366,"name":"take"},"arguments":[{"type":"Literal","start":18367,"end":18368,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":19003,"end":19785,"static":false,"computed":false,"key":{"type":"Identifier","start":19003,"end":19019,"name":"moveItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":19019,"end":19785,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":19020,"end":19025,"name":"items"},{"type":"Identifier","start":19027,"end":19036,"name":"fromIndex"},{"type":"Identifier","start":19038,"end":19045,"name":"toIndex"},{"type":"AssignmentPattern","start":19047,"end":19062,"left":{"type":"Identifier","start":19047,"end":19054,"name":"useCopy"},"right":{"type":"Literal","start":19057,"end":19062,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":19064,"end":19785,"body":[{"type":"VariableDeclaration","start":19075,"end":19082,"declarations":[{"type":"VariableDeclarator","start":19079,"end":19081,"id":{"type":"Identifier","start":19079,"end":19081,"name":"_a"},"init":null}],"kind":"var"},{"type":"IfStatement","start":19092,"end":19251,"test":{"type":"LogicalExpression","start":19096,"end":19178,"left":{"type":"LogicalExpression","start":19096,"end":19157,"left":{"type":"LogicalExpression","start":19096,"end":19132,"left":{"type":"BinaryExpression","start":19096,"end":19113,"left":{"type":"Identifier","start":19096,"end":19105,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":19109,"end":19113,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19117,"end":19132,"left":{"type":"Identifier","start":19117,"end":19124,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":19128,"end":19132,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":19136,"end":19157,"left":{"type":"Identifier","start":19136,"end":19145,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":19150,"end":19157,"name":"toIndex"}}},"operator":"||","right":{"type":"BinaryExpression","start":19161,"end":19178,"left":{"type":"MemberExpression","start":19161,"end":19173,"object":{"type":"Identifier","start":19161,"end":19166,"name":"items"},"property":{"type":"Identifier","start":19167,"end":19173,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":19177,"end":19178,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":19180,"end":19251,"body":[{"type":"ReturnStatement","start":19228,"end":19240,"argument":{"type":"CallExpression","start":19235,"end":19239,"callee":{"type":"Identifier","start":19235,"end":19237,"name":"of"},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":19261,"end":19637,"test":{"type":"BinaryExpression","start":19265,"end":19348,"left":{"type":"ConditionalExpression","start":19266,"end":19339,"test":{"type":"LogicalExpression","start":19266,"end":19307,"left":{"type":"BinaryExpression","start":19266,"end":19290,"left":{"type":"AssignmentExpression","start":19267,"end":19280,"operator":"=","left":{"type":"Identifier","start":19267,"end":19269,"name":"_a"},"right":{"type":"MemberExpression","start":19272,"end":19280,"object":{"type":"Identifier","start":19272,"end":19277,"name":"items"},"property":{"type":"Literal","start":19278,"end":19279,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"===","right":{"type":"Literal","start":19286,"end":19290,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19294,"end":19307,"left":{"type":"Identifier","start":19294,"end":19296,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":19301,"end":19307,"operator":"void","prefix":true,"argument":{"type":"Literal","start":19306,"end":19307,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":19310,"end":19316,"operator":"void","prefix":true,"argument":{"type":"Literal","start":19315,"end":19316,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":19319,"end":19339,"object":{"type":"Identifier","start":19319,"end":19321,"name":"_a"},"property":{"type":"Identifier","start":19322,"end":19339,"name":"firestoreMetadata"},"computed":false,"optional":false}},"operator":"==","right":{"type":"Literal","start":19344,"end":19348,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":19350,"end":19637,"body":[{"type":"VariableDeclaration","start":19365,"end":19600,"declarations":[{"type":"VariableDeclarator","start":19371,"end":19599,"id":{"type":"Identifier","start":19371,"end":19376,"name":"error"},"init":{"type":"ObjectExpression","start":19379,"end":19599,"properties":[{"type":"Property","start":19398,"end":19422,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19398,"end":19402,"name":"name"},"value":{"type":"Literal","start":19404,"end":19422,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":19441,"end":19456,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19441,"end":19445,"name":"code"},"value":{"type":"Literal","start":19447,"end":19456,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":19475,"end":19583,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19475,"end":19482,"name":"message"},"value":{"type":"Literal","start":19484,"end":19583,"value":"The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata","raw":"'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata'"},"kind":"init"}]}}],"kind":"const"},{"type":"ThrowStatement","start":19614,"end":19626,"argument":{"type":"Identifier","start":19620,"end":19625,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":19647,"end":19736,"declarations":[{"type":"VariableDeclarator","start":19653,"end":19735,"id":{"type":"Identifier","start":19653,"end":19658,"name":"batch"},"init":{"type":"CallExpression","start":19661,"end":19735,"callee":{"type":"MemberExpression","start":19661,"end":19699,"object":{"type":"ThisExpression","start":19661,"end":19665},"property":{"type":"Identifier","start":19666,"end":19699,"name":"getBatchFromMoveItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19700,"end":19705,"name":"items"},{"type":"Identifier","start":19707,"end":19716,"name":"fromIndex"},{"type":"Identifier","start":19718,"end":19725,"name":"toIndex"},{"type":"Identifier","start":19727,"end":19734,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":19746,"end":19778,"argument":{"type":"CallExpression","start":19753,"end":19777,"callee":{"type":"MemberExpression","start":19753,"end":19770,"object":{"type":"ThisExpression","start":19753,"end":19757},"property":{"type":"Identifier","start":19758,"end":19770,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19771,"end":19776,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":20156,"end":21214,"static":false,"computed":false,"key":{"type":"Identifier","start":20156,"end":20189,"name":"getBatchFromMoveItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":20189,"end":21214,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20190,"end":20195,"name":"items"},{"type":"Identifier","start":20197,"end":20206,"name":"fromIndex"},{"type":"Identifier","start":20208,"end":20215,"name":"toIndex"},{"type":"AssignmentPattern","start":20217,"end":20232,"left":{"type":"Identifier","start":20217,"end":20224,"name":"useCopy"},"right":{"type":"Literal","start":20227,"end":20232,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":20234,"end":21214,"body":[{"type":"VariableDeclaration","start":20245,"end":20294,"declarations":[{"type":"VariableDeclarator","start":20251,"end":20293,"id":{"type":"Identifier","start":20251,"end":20262,"name":"lowestIndex"},"init":{"type":"CallExpression","start":20265,"end":20293,"callee":{"type":"MemberExpression","start":20265,"end":20273,"object":{"type":"Identifier","start":20265,"end":20269,"name":"Math"},"property":{"type":"Identifier","start":20270,"end":20273,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20274,"end":20283,"name":"fromIndex"},{"type":"Identifier","start":20285,"end":20292,"name":"toIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20304,"end":20348,"declarations":[{"type":"VariableDeclarator","start":20310,"end":20347,"id":{"type":"Identifier","start":20310,"end":20315,"name":"batch"},"init":{"type":"CallExpression","start":20318,"end":20347,"callee":{"type":"Identifier","start":20318,"end":20328,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":20329,"end":20346,"object":{"type":"MemberExpression","start":20329,"end":20336,"object":{"type":"ThisExpression","start":20329,"end":20333},"property":{"type":"Identifier","start":20334,"end":20336,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20337,"end":20346,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20358,"end":20497,"test":{"type":"LogicalExpression","start":20362,"end":20423,"left":{"type":"LogicalExpression","start":20362,"end":20398,"left":{"type":"BinaryExpression","start":20362,"end":20379,"left":{"type":"Identifier","start":20362,"end":20371,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":20375,"end":20379,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":20383,"end":20398,"left":{"type":"Identifier","start":20383,"end":20390,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":20394,"end":20398,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":20402,"end":20423,"left":{"type":"Identifier","start":20402,"end":20411,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":20416,"end":20423,"name":"toIndex"}}},"consequent":{"type":"BlockStatement","start":20425,"end":20497,"body":[{"type":"ReturnStatement","start":20473,"end":20486,"argument":{"type":"Identifier","start":20480,"end":20485,"name":"batch"}}]},"alternate":null},{"type":"VariableDeclaration","start":20507,"end":20521,"declarations":[{"type":"VariableDeclarator","start":20511,"end":20520,"id":{"type":"Identifier","start":20511,"end":20520,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":20531,"end":20666,"test":{"type":"Identifier","start":20535,"end":20542,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":20544,"end":20607,"body":[{"type":"ExpressionStatement","start":20559,"end":20596,"expression":{"type":"AssignmentExpression","start":20559,"end":20595,"operator":"=","left":{"type":"Identifier","start":20559,"end":20568,"name":"usedItems"},"right":{"type":"CallExpression","start":20571,"end":20595,"callee":{"type":"MemberExpression","start":20571,"end":20584,"object":{"type":"Identifier","start":20571,"end":20577,"name":"Object"},"property":{"type":"Identifier","start":20578,"end":20584,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":20585,"end":20587,"elements":[]},{"type":"Identifier","start":20589,"end":20594,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":20622,"end":20666,"body":[{"type":"ExpressionStatement","start":20637,"end":20655,"expression":{"type":"AssignmentExpression","start":20637,"end":20654,"operator":"=","left":{"type":"Identifier","start":20637,"end":20646,"name":"usedItems"},"right":{"type":"Identifier","start":20649,"end":20654,"name":"items"}}}]}},{"type":"ExpressionStatement","start":20676,"end":20723,"expression":{"type":"CallExpression","start":20676,"end":20722,"callee":{"type":"Identifier","start":20676,"end":20691,"name":"moveItemInArray"},"arguments":[{"type":"Identifier","start":20692,"end":20701,"name":"usedItems"},{"type":"Identifier","start":20703,"end":20712,"name":"fromIndex"},{"type":"Identifier","start":20714,"end":20721,"name":"toIndex"}],"optional":false}},{"type":"VariableDeclaration","start":20733,"end":20788,"declarations":[{"type":"VariableDeclarator","start":20739,"end":20787,"id":{"type":"Identifier","start":20739,"end":20756,"name":"listSliceToUpdate"},"init":{"type":"CallExpression","start":20759,"end":20787,"callee":{"type":"MemberExpression","start":20759,"end":20774,"object":{"type":"Identifier","start":20759,"end":20768,"name":"usedItems"},"property":{"type":"Identifier","start":20769,"end":20774,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20775,"end":20786,"name":"lowestIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20798,"end":20818,"declarations":[{"type":"VariableDeclarator","start":20802,"end":20817,"id":{"type":"Identifier","start":20802,"end":20803,"name":"i"},"init":{"type":"Identifier","start":20806,"end":20817,"name":"lowestIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":20828,"end":21184,"await":false,"left":{"type":"VariableDeclaration","start":20833,"end":20843,"declarations":[{"type":"VariableDeclarator","start":20839,"end":20843,"id":{"type":"Identifier","start":20839,"end":20843,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":20847,"end":20864,"name":"listSliceToUpdate"},"body":{"type":"BlockStatement","start":20866,"end":21184,"body":[{"type":"IfStatement","start":20881,"end":21020,"test":{"type":"UnaryExpression","start":20885,"end":20893,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":20886,"end":20893,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":20895,"end":21020,"body":[{"type":"ExpressionStatement","start":20990,"end":21005,"expression":{"type":"AssignmentExpression","start":20990,"end":21004,"operator":"=","left":{"type":"MemberExpression","start":20990,"end":21000,"object":{"type":"Identifier","start":20990,"end":20994,"name":"item"},"property":{"type":"Identifier","start":20995,"end":21000,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":21003,"end":21004,"name":"i"}}}]},"alternate":null},{"type":"VariableDeclaration","start":21034,"end":21109,"declarations":[{"type":"VariableDeclarator","start":21040,"end":21108,"id":{"type":"Identifier","start":21040,"end":21043,"name":"ref"},"init":{"type":"CallExpression","start":21046,"end":21108,"callee":{"type":"Identifier","start":21046,"end":21060,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":21061,"end":21088,"object":{"type":"MemberExpression","start":21061,"end":21083,"object":{"type":"Identifier","start":21061,"end":21065,"name":"item"},"property":{"type":"Identifier","start":21066,"end":21083,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21084,"end":21088,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":21090,"end":21107,"object":{"type":"MemberExpression","start":21090,"end":21097,"object":{"type":"ThisExpression","start":21090,"end":21094},"property":{"type":"Identifier","start":21095,"end":21097,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21098,"end":21107,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":21123,"end":21155,"expression":{"type":"CallExpression","start":21123,"end":21154,"callee":{"type":"MemberExpression","start":21123,"end":21135,"object":{"type":"Identifier","start":21123,"end":21128,"name":"batch"},"property":{"type":"Identifier","start":21129,"end":21135,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":21136,"end":21139,"name":"ref"},{"type":"ObjectExpression","start":21141,"end":21153,"properties":[{"type":"Property","start":21143,"end":21151,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":21143,"end":21148,"name":"index"},"value":{"type":"Identifier","start":21150,"end":21151,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":21169,"end":21173,"expression":{"type":"UpdateExpression","start":21169,"end":21172,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":21169,"end":21170,"name":"i"}}}]}},{"type":"ReturnStatement","start":21194,"end":21207,"argument":{"type":"Identifier","start":21201,"end":21206,"name":"batch"}}]}}},{"type":"MethodDefinition","start":21549,"end":22478,"static":false,"computed":false,"key":{"type":"Identifier","start":21549,"end":21574,"name":"deleteIndexedItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":21574,"end":22478,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21575,"end":21580,"name":"items"},{"type":"Identifier","start":21582,"end":21595,"name":"indexToDelete"},{"type":"AssignmentPattern","start":21597,"end":21622,"left":{"type":"Identifier","start":21597,"end":21617,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":21620,"end":21622,"elements":[]}},{"type":"AssignmentPattern","start":21624,"end":21639,"left":{"type":"Identifier","start":21624,"end":21631,"name":"useCopy"},"right":{"type":"Literal","start":21634,"end":21639,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":21641,"end":22478,"body":[{"type":"VariableDeclaration","start":21652,"end":21666,"declarations":[{"type":"VariableDeclarator","start":21656,"end":21665,"id":{"type":"Identifier","start":21656,"end":21665,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":21676,"end":21811,"test":{"type":"Identifier","start":21680,"end":21687,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":21689,"end":21752,"body":[{"type":"ExpressionStatement","start":21704,"end":21741,"expression":{"type":"AssignmentExpression","start":21704,"end":21740,"operator":"=","left":{"type":"Identifier","start":21704,"end":21713,"name":"usedItems"},"right":{"type":"CallExpression","start":21716,"end":21740,"callee":{"type":"MemberExpression","start":21716,"end":21729,"object":{"type":"Identifier","start":21716,"end":21722,"name":"Object"},"property":{"type":"Identifier","start":21723,"end":21729,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":21730,"end":21732,"elements":[]},{"type":"Identifier","start":21734,"end":21739,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":21767,"end":21811,"body":[{"type":"ExpressionStatement","start":21782,"end":21800,"expression":{"type":"AssignmentExpression","start":21782,"end":21799,"operator":"=","left":{"type":"Identifier","start":21782,"end":21791,"name":"usedItems"},"right":{"type":"Identifier","start":21794,"end":21799,"name":"items"}}}]}},{"type":"VariableDeclaration","start":21821,"end":21867,"declarations":[{"type":"VariableDeclarator","start":21827,"end":21866,"id":{"type":"Identifier","start":21827,"end":21839,"name":"itemToDelete"},"init":{"type":"MemberExpression","start":21842,"end":21866,"object":{"type":"Identifier","start":21842,"end":21851,"name":"usedItems"},"property":{"type":"Identifier","start":21852,"end":21865,"name":"indexToDelete"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":21961,"end":22471,"argument":{"type":"CallExpression","start":21968,"end":22470,"callee":{"type":"MemberExpression","start":21968,"end":22051,"object":{"type":"CallExpression","start":21968,"end":22046,"callee":{"type":"MemberExpression","start":21968,"end":21988,"object":{"type":"ThisExpression","start":21968,"end":21972},"property":{"type":"Identifier","start":21973,"end":21988,"name":"getDeleteBatch$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":21989,"end":22023,"object":{"type":"MemberExpression","start":21989,"end":22019,"object":{"type":"Identifier","start":21989,"end":22001,"name":"itemToDelete"},"property":{"type":"Identifier","start":22002,"end":22019,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":22020,"end":22023,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":22025,"end":22045,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":22047,"end":22051,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":22052,"end":22421,"callee":{"type":"Identifier","start":22052,"end":22055,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":22056,"end":22420,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22057,"end":22062,"name":"batch"}],"body":{"type":"BlockStatement","start":22067,"end":22420,"body":[{"type":"ExpressionStatement","start":22185,"end":22220,"expression":{"type":"CallExpression","start":22185,"end":22219,"callee":{"type":"MemberExpression","start":22185,"end":22199,"object":{"type":"Identifier","start":22185,"end":22194,"name":"usedItems"},"property":{"type":"Identifier","start":22195,"end":22199,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22200,"end":22218,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22200,"end":22204,"name":"item"}],"body":{"type":"MemberExpression","start":22208,"end":22218,"object":{"type":"Identifier","start":22208,"end":22212,"name":"item"},"property":{"type":"Identifier","start":22213,"end":22218,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"ExpressionStatement","start":22272,"end":22307,"expression":{"type":"CallExpression","start":22272,"end":22306,"callee":{"type":"MemberExpression","start":22272,"end":22288,"object":{"type":"Identifier","start":22272,"end":22281,"name":"usedItems"},"property":{"type":"Identifier","start":22282,"end":22288,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22289,"end":22302,"name":"indexToDelete"},{"type":"Literal","start":22304,"end":22305,"value":1,"raw":"1"}],"optional":false}},{"type":"ExpressionStatement","start":22321,"end":22382,"expression":{"type":"CallExpression","start":22321,"end":22381,"callee":{"type":"MemberExpression","start":22321,"end":22363,"object":{"type":"ThisExpression","start":22321,"end":22325},"property":{"type":"Identifier","start":22326,"end":22363,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22364,"end":22373,"name":"usedItems"},{"type":"Identifier","start":22375,"end":22380,"name":"batch"}],"optional":false}},{"type":"ReturnStatement","start":22396,"end":22409,"argument":{"type":"Identifier","start":22403,"end":22408,"name":"batch"}}]}}],"optional":false},{"type":"CallExpression","start":22423,"end":22469,"callee":{"type":"Identifier","start":22423,"end":22432,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":22433,"end":22468,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22434,"end":22439,"name":"batch"}],"body":{"type":"CallExpression","start":22444,"end":22468,"callee":{"type":"MemberExpression","start":22444,"end":22461,"object":{"type":"ThisExpression","start":22444,"end":22448},"property":{"type":"Identifier","start":22449,"end":22461,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22462,"end":22467,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":22821,"end":24489,"static":false,"computed":false,"key":{"type":"Identifier","start":22821,"end":22847,"name":"deleteIndexedItemsInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":22847,"end":24489,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22848,"end":22853,"name":"items"},{"type":"Identifier","start":22855,"end":22870,"name":"indicesToDelete"},{"type":"AssignmentPattern","start":22872,"end":22897,"left":{"type":"Identifier","start":22872,"end":22892,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":22895,"end":22897,"elements":[]}},{"type":"AssignmentPattern","start":22899,"end":22914,"left":{"type":"Identifier","start":22899,"end":22906,"name":"useCopy"},"right":{"type":"Literal","start":22909,"end":22914,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":22916,"end":24489,"body":[{"type":"VariableDeclaration","start":22927,"end":22941,"declarations":[{"type":"VariableDeclarator","start":22931,"end":22940,"id":{"type":"Identifier","start":22931,"end":22940,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":22951,"end":23086,"test":{"type":"Identifier","start":22955,"end":22962,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":22964,"end":23027,"body":[{"type":"ExpressionStatement","start":22979,"end":23016,"expression":{"type":"AssignmentExpression","start":22979,"end":23015,"operator":"=","left":{"type":"Identifier","start":22979,"end":22988,"name":"usedItems"},"right":{"type":"CallExpression","start":22991,"end":23015,"callee":{"type":"MemberExpression","start":22991,"end":23004,"object":{"type":"Identifier","start":22991,"end":22997,"name":"Object"},"property":{"type":"Identifier","start":22998,"end":23004,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":23005,"end":23007,"elements":[]},{"type":"Identifier","start":23009,"end":23014,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":23042,"end":23086,"body":[{"type":"ExpressionStatement","start":23057,"end":23075,"expression":{"type":"AssignmentExpression","start":23057,"end":23074,"operator":"=","left":{"type":"Identifier","start":23057,"end":23066,"name":"usedItems"},"right":{"type":"Identifier","start":23069,"end":23074,"name":"items"}}}]}},{"type":"ExpressionStatement","start":23096,"end":23131,"expression":{"type":"CallExpression","start":23096,"end":23130,"callee":{"type":"MemberExpression","start":23096,"end":23110,"object":{"type":"Identifier","start":23096,"end":23105,"name":"usedItems"},"property":{"type":"Identifier","start":23106,"end":23110,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23111,"end":23129,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23111,"end":23115,"name":"item"}],"body":{"type":"MemberExpression","start":23119,"end":23129,"object":{"type":"Identifier","start":23119,"end":23123,"name":"item"},"property":{"type":"Identifier","start":23124,"end":23129,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"VariableDeclaration","start":23179,"end":23315,"declarations":[{"type":"VariableDeclarator","start":23185,"end":23314,"id":{"type":"Identifier","start":23185,"end":23198,"name":"itemsToDelete"},"init":{"type":"CallExpression","start":23201,"end":23314,"callee":{"type":"MemberExpression","start":23201,"end":23217,"object":{"type":"Identifier","start":23201,"end":23210,"name":"usedItems"},"property":{"type":"Identifier","start":23211,"end":23217,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23218,"end":23313,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23219,"end":23223,"name":"item"},{"type":"Identifier","start":23225,"end":23226,"name":"i"}],"body":{"type":"BlockStatement","start":23231,"end":23313,"body":[{"type":"ReturnStatement","start":23246,"end":23302,"argument":{"type":"BinaryExpression","start":23253,"end":23301,"left":{"type":"CallExpression","start":23253,"end":23294,"callee":{"type":"MemberExpression","start":23253,"end":23278,"object":{"type":"Identifier","start":23253,"end":23268,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23269,"end":23278,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23279,"end":23293,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23279,"end":23281,"name":"_i"}],"body":{"type":"BinaryExpression","start":23285,"end":23293,"left":{"type":"Identifier","start":23285,"end":23287,"name":"_i"},"operator":"===","right":{"type":"Identifier","start":23292,"end":23293,"name":"i"}}}],"optional":false},"operator":"!==","right":{"type":"UnaryExpression","start":23299,"end":23301,"operator":"-","prefix":true,"argument":{"type":"Literal","start":23300,"end":23301,"value":1,"raw":"1"}}}}]}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23443,"end":23466,"expression":{"type":"CallExpression","start":23443,"end":23465,"callee":{"type":"MemberExpression","start":23443,"end":23463,"object":{"type":"Identifier","start":23443,"end":23458,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23459,"end":23463,"name":"sort"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ForStatement","start":23476,"end":23596,"init":{"type":"VariableDeclaration","start":23481,"end":23515,"declarations":[{"type":"VariableDeclarator","start":23485,"end":23515,"id":{"type":"Identifier","start":23485,"end":23486,"name":"i"},"init":{"type":"BinaryExpression","start":23489,"end":23515,"left":{"type":"MemberExpression","start":23489,"end":23511,"object":{"type":"Identifier","start":23489,"end":23504,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23505,"end":23511,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":23514,"end":23515,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":23517,"end":23523,"left":{"type":"Identifier","start":23517,"end":23518,"name":"i"},"operator":">=","right":{"type":"Literal","start":23522,"end":23523,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":23525,"end":23528,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":23525,"end":23526,"name":"i"}},"body":{"type":"BlockStatement","start":23530,"end":23596,"body":[{"type":"ExpressionStatement","start":23545,"end":23585,"expression":{"type":"CallExpression","start":23545,"end":23584,"callee":{"type":"MemberExpression","start":23545,"end":23561,"object":{"type":"Identifier","start":23545,"end":23554,"name":"usedItems"},"property":{"type":"Identifier","start":23555,"end":23561,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23562,"end":23580,"object":{"type":"Identifier","start":23562,"end":23577,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23578,"end":23579,"name":"i"},"computed":true,"optional":false},{"type":"Literal","start":23582,"end":23583,"value":1,"raw":"1"}],"optional":false}}]}},{"type":"VariableDeclaration","start":23606,"end":23629,"declarations":[{"type":"VariableDeclarator","start":23612,"end":23628,"id":{"type":"Identifier","start":23612,"end":23623,"name":"docRefsObs$"},"init":{"type":"ArrayExpression","start":23626,"end":23628,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":23732,"end":23952,"expression":{"type":"CallExpression","start":23732,"end":23951,"callee":{"type":"MemberExpression","start":23732,"end":23753,"object":{"type":"Identifier","start":23732,"end":23745,"name":"itemsToDelete"},"property":{"type":"Identifier","start":23746,"end":23753,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23754,"end":23950,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23754,"end":23766,"name":"itemToDelete"}],"body":{"type":"BlockStatement","start":23770,"end":23950,"body":[{"type":"VariableDeclaration","start":23785,"end":23902,"declarations":[{"type":"VariableDeclarator","start":23791,"end":23901,"id":{"type":"Identifier","start":23791,"end":23795,"name":"obs$"},"init":{"type":"CallExpression","start":23798,"end":23901,"callee":{"type":"MemberExpression","start":23798,"end":23892,"object":{"type":"CallExpression","start":23798,"end":23887,"callee":{"type":"MemberExpression","start":23798,"end":23829,"object":{"type":"ThisExpression","start":23798,"end":23802},"property":{"type":"Identifier","start":23803,"end":23829,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23830,"end":23864,"object":{"type":"MemberExpression","start":23830,"end":23860,"object":{"type":"Identifier","start":23830,"end":23842,"name":"itemToDelete"},"property":{"type":"Identifier","start":23843,"end":23860,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":23861,"end":23864,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":23866,"end":23886,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":23888,"end":23892,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23893,"end":23900,"callee":{"type":"Identifier","start":23893,"end":23897,"name":"take"},"arguments":[{"type":"Literal","start":23898,"end":23899,"value":1,"raw":"1"}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23916,"end":23939,"expression":{"type":"CallExpression","start":23916,"end":23938,"callee":{"type":"MemberExpression","start":23916,"end":23932,"object":{"type":"Identifier","start":23916,"end":23927,"name":"docRefsObs$"},"property":{"type":"Identifier","start":23928,"end":23932,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23933,"end":23937,"name":"obs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":23962,"end":24482,"argument":{"type":"CallExpression","start":23969,"end":24481,"callee":{"type":"MemberExpression","start":23969,"end":23995,"object":{"type":"CallExpression","start":23969,"end":23990,"callee":{"type":"Identifier","start":23969,"end":23977,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":23978,"end":23989,"name":"docRefsObs$"}],"optional":false},"property":{"type":"Identifier","start":23991,"end":23995,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23996,"end":24003,"callee":{"type":"Identifier","start":23996,"end":24000,"name":"take"},"arguments":[{"type":"Literal","start":24001,"end":24002,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":24005,"end":24292,"callee":{"type":"Identifier","start":24005,"end":24008,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24009,"end":24291,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24010,"end":24023,"name":"listOfDocRefs"}],"body":{"type":"BlockStatement","start":24028,"end":24291,"body":[{"type":"VariableDeclaration","start":24123,"end":24140,"declarations":[{"type":"VariableDeclarator","start":24127,"end":24139,"id":{"type":"Identifier","start":24127,"end":24134,"name":"docRefs"},"init":{"type":"ArrayExpression","start":24137,"end":24139,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":24154,"end":24251,"expression":{"type":"CallExpression","start":24154,"end":24250,"callee":{"type":"MemberExpression","start":24154,"end":24175,"object":{"type":"Identifier","start":24154,"end":24167,"name":"listOfDocRefs"},"property":{"type":"Identifier","start":24168,"end":24175,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24176,"end":24249,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24176,"end":24180,"name":"refs"}],"body":{"type":"BlockStatement","start":24184,"end":24249,"body":[{"type":"ExpressionStatement","start":24203,"end":24234,"expression":{"type":"AssignmentExpression","start":24203,"end":24233,"operator":"=","left":{"type":"Identifier","start":24203,"end":24210,"name":"docRefs"},"right":{"type":"CallExpression","start":24213,"end":24233,"callee":{"type":"MemberExpression","start":24213,"end":24227,"object":{"type":"Identifier","start":24213,"end":24220,"name":"docRefs"},"property":{"type":"Identifier","start":24221,"end":24227,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24228,"end":24232,"name":"refs"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":24265,"end":24280,"argument":{"type":"Identifier","start":24272,"end":24279,"name":"docRefs"}}]}}],"optional":false},{"type":"CallExpression","start":24294,"end":24354,"callee":{"type":"Identifier","start":24294,"end":24297,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24298,"end":24353,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24299,"end":24306,"name":"docRefs"}],"body":{"type":"CallExpression","start":24311,"end":24353,"callee":{"type":"MemberExpression","start":24311,"end":24344,"object":{"type":"ThisExpression","start":24311,"end":24315},"property":{"type":"Identifier","start":24316,"end":24344,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24345,"end":24352,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24356,"end":24432,"callee":{"type":"Identifier","start":24356,"end":24359,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24360,"end":24431,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24361,"end":24366,"name":"batch"}],"body":{"type":"CallExpression","start":24371,"end":24431,"callee":{"type":"MemberExpression","start":24371,"end":24413,"object":{"type":"ThisExpression","start":24371,"end":24375},"property":{"type":"Identifier","start":24376,"end":24413,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24414,"end":24423,"name":"usedItems"},{"type":"Identifier","start":24425,"end":24430,"name":"batch"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24434,"end":24480,"callee":{"type":"Identifier","start":24434,"end":24443,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":24444,"end":24479,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24445,"end":24450,"name":"batch"}],"body":{"type":"CallExpression","start":24455,"end":24479,"callee":{"type":"MemberExpression","start":24455,"end":24472,"object":{"type":"ThisExpression","start":24455,"end":24459},"property":{"type":"Identifier","start":24460,"end":24472,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24473,"end":24478,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":24829,"end":25308,"static":false,"computed":false,"key":{"type":"Identifier","start":24829,"end":24866,"name":"getBatchFromUpdateIndexFromListOfDocs"},"kind":"method","value":{"type":"FunctionExpression","start":24866,"end":25308,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24867,"end":24872,"name":"items"},{"type":"AssignmentPattern","start":24874,"end":24911,"left":{"type":"Identifier","start":24874,"end":24879,"name":"batch"},"right":{"type":"CallExpression","start":24882,"end":24911,"callee":{"type":"Identifier","start":24882,"end":24892,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":24893,"end":24910,"object":{"type":"MemberExpression","start":24893,"end":24900,"object":{"type":"ThisExpression","start":24893,"end":24897},"property":{"type":"Identifier","start":24898,"end":24900,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24901,"end":24910,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":24913,"end":25308,"body":[{"type":"ExpressionStatement","start":24924,"end":25278,"expression":{"type":"CallExpression","start":24924,"end":25277,"callee":{"type":"MemberExpression","start":24924,"end":24937,"object":{"type":"Identifier","start":24924,"end":24929,"name":"items"},"property":{"type":"Identifier","start":24930,"end":24937,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24938,"end":25276,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24939,"end":24943,"name":"item"},{"type":"Identifier","start":24945,"end":24950,"name":"index"}],"body":{"type":"BlockStatement","start":24955,"end":25276,"body":[{"type":"IfStatement","start":24970,"end":25265,"test":{"type":"BinaryExpression","start":24974,"end":24994,"left":{"type":"MemberExpression","start":24974,"end":24984,"object":{"type":"Identifier","start":24974,"end":24978,"name":"item"},"property":{"type":"Identifier","start":24979,"end":24984,"name":"index"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":24989,"end":24994,"name":"index"}},"consequent":{"type":"BlockStatement","start":24996,"end":25265,"body":[{"type":"ExpressionStatement","start":25015,"end":25034,"expression":{"type":"AssignmentExpression","start":25015,"end":25033,"operator":"=","left":{"type":"MemberExpression","start":25015,"end":25025,"object":{"type":"Identifier","start":25015,"end":25019,"name":"item"},"property":{"type":"Identifier","start":25020,"end":25025,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":25028,"end":25033,"name":"index"}}},{"type":"VariableDeclaration","start":25128,"end":25203,"declarations":[{"type":"VariableDeclarator","start":25134,"end":25202,"id":{"type":"Identifier","start":25134,"end":25137,"name":"ref"},"init":{"type":"CallExpression","start":25140,"end":25202,"callee":{"type":"Identifier","start":25140,"end":25154,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":25155,"end":25182,"object":{"type":"MemberExpression","start":25155,"end":25177,"object":{"type":"Identifier","start":25155,"end":25159,"name":"item"},"property":{"type":"Identifier","start":25160,"end":25177,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25178,"end":25182,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":25184,"end":25201,"object":{"type":"MemberExpression","start":25184,"end":25191,"object":{"type":"ThisExpression","start":25184,"end":25188},"property":{"type":"Identifier","start":25189,"end":25191,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25192,"end":25201,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":25221,"end":25250,"expression":{"type":"CallExpression","start":25221,"end":25249,"callee":{"type":"MemberExpression","start":25221,"end":25233,"object":{"type":"Identifier","start":25221,"end":25226,"name":"batch"},"property":{"type":"Identifier","start":25227,"end":25233,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25234,"end":25237,"name":"ref"},{"type":"ObjectExpression","start":25239,"end":25248,"properties":[{"type":"Property","start":25241,"end":25246,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":25241,"end":25246,"name":"index"},"kind":"init","value":{"type":"Identifier","start":25241,"end":25246,"name":"index"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":25288,"end":25301,"argument":{"type":"Identifier","start":25295,"end":25300,"name":"batch"}}]}}},{"type":"MethodDefinition","start":25314,"end":25774,"static":false,"computed":false,"key":{"type":"Identifier","start":25314,"end":25339,"name":"transferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25339,"end":25774,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25340,"end":25353,"name":"previousArray"},{"type":"Identifier","start":25355,"end":25367,"name":"currentArray"},{"type":"Identifier","start":25369,"end":25382,"name":"previousIndex"},{"type":"Identifier","start":25384,"end":25396,"name":"currentIndex"},{"type":"Identifier","start":25398,"end":25414,"name":"currentArrayName"},{"type":"Identifier","start":25416,"end":25447,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":25449,"end":25487,"left":{"type":"Identifier","start":25449,"end":25480,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":25483,"end":25487,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":25489,"end":25504,"left":{"type":"Identifier","start":25489,"end":25496,"name":"useCopy"},"right":{"type":"Literal","start":25499,"end":25504,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":25506,"end":25774,"body":[{"type":"VariableDeclaration","start":25517,"end":25725,"declarations":[{"type":"VariableDeclarator","start":25523,"end":25724,"id":{"type":"Identifier","start":25523,"end":25528,"name":"batch"},"init":{"type":"CallExpression","start":25531,"end":25724,"callee":{"type":"MemberExpression","start":25531,"end":25573,"object":{"type":"ThisExpression","start":25531,"end":25535},"property":{"type":"Identifier","start":25536,"end":25573,"name":"getBatchFromTransferItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25574,"end":25587,"name":"previousArray"},{"type":"Identifier","start":25589,"end":25601,"name":"currentArray"},{"type":"Identifier","start":25603,"end":25616,"name":"previousIndex"},{"type":"Identifier","start":25618,"end":25630,"name":"currentIndex"},{"type":"Identifier","start":25632,"end":25648,"name":"currentArrayName"},{"type":"Identifier","start":25650,"end":25681,"name":"additionalDataUpdateOnMovedItem"},{"type":"Identifier","start":25683,"end":25714,"name":"isUpdateModifiedDateOnMovedItem"},{"type":"Identifier","start":25716,"end":25723,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":25735,"end":25767,"argument":{"type":"CallExpression","start":25742,"end":25766,"callee":{"type":"MemberExpression","start":25742,"end":25759,"object":{"type":"ThisExpression","start":25742,"end":25746},"property":{"type":"Identifier","start":25747,"end":25759,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25760,"end":25765,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":26080,"end":26475,"static":false,"computed":false,"key":{"type":"Identifier","start":26080,"end":26087,"name":"delete$"},"kind":"method","value":{"type":"FunctionExpression","start":26087,"end":26475,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26088,"end":26094,"name":"docRef"},{"type":"AssignmentPattern","start":26096,"end":26121,"left":{"type":"Identifier","start":26096,"end":26116,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26119,"end":26121,"elements":[]}}],"body":{"type":"BlockStatement","start":26123,"end":26475,"body":[{"type":"IfStatement","start":26134,"end":26317,"test":{"type":"LogicalExpression","start":26138,"end":26203,"left":{"type":"BinaryExpression","start":26138,"end":26166,"left":{"type":"Identifier","start":26138,"end":26158,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26162,"end":26166,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26170,"end":26203,"left":{"type":"MemberExpression","start":26170,"end":26197,"object":{"type":"Identifier","start":26170,"end":26190,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26191,"end":26197,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26202,"end":26203,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26205,"end":26317,"body":[{"type":"ReturnStatement","start":26276,"end":26306,"argument":{"type":"CallExpression","start":26283,"end":26305,"callee":{"type":"MemberExpression","start":26283,"end":26297,"object":{"type":"MemberExpression","start":26283,"end":26290,"object":{"type":"ThisExpression","start":26283,"end":26287},"property":{"type":"Identifier","start":26288,"end":26290,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26291,"end":26297,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26298,"end":26304,"name":"docRef"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26327,"end":26468,"argument":{"type":"CallExpression","start":26334,"end":26467,"callee":{"type":"MemberExpression","start":26334,"end":26400,"object":{"type":"CallExpression","start":26334,"end":26395,"callee":{"type":"MemberExpression","start":26334,"end":26365,"object":{"type":"ThisExpression","start":26334,"end":26338},"property":{"type":"Identifier","start":26339,"end":26365,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26366,"end":26372,"name":"docRef"},{"type":"Identifier","start":26374,"end":26394,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26396,"end":26400,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26401,"end":26466,"callee":{"type":"Identifier","start":26401,"end":26410,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":26411,"end":26465,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26412,"end":26422,"name":"docRefList"}],"body":{"type":"CallExpression","start":26427,"end":26465,"callee":{"type":"MemberExpression","start":26427,"end":26453,"object":{"type":"ThisExpression","start":26427,"end":26431},"property":{"type":"Identifier","start":26432,"end":26453,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26454,"end":26464,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":26807,"end":27275,"static":false,"computed":false,"key":{"type":"Identifier","start":26807,"end":26822,"name":"getDeleteBatch$"},"kind":"method","value":{"type":"FunctionExpression","start":26822,"end":27275,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26823,"end":26829,"name":"docRef"},{"type":"AssignmentPattern","start":26831,"end":26856,"left":{"type":"Identifier","start":26831,"end":26851,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26854,"end":26856,"elements":[]}},{"type":"AssignmentPattern","start":26858,"end":26895,"left":{"type":"Identifier","start":26858,"end":26863,"name":"batch"},"right":{"type":"CallExpression","start":26866,"end":26895,"callee":{"type":"Identifier","start":26866,"end":26876,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":26877,"end":26894,"object":{"type":"MemberExpression","start":26877,"end":26884,"object":{"type":"ThisExpression","start":26877,"end":26881},"property":{"type":"Identifier","start":26882,"end":26884,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26885,"end":26894,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":26897,"end":27275,"body":[{"type":"IfStatement","start":26908,"end":27113,"test":{"type":"LogicalExpression","start":26912,"end":26977,"left":{"type":"BinaryExpression","start":26912,"end":26940,"left":{"type":"Identifier","start":26912,"end":26932,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26936,"end":26940,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26944,"end":26977,"left":{"type":"MemberExpression","start":26944,"end":26971,"object":{"type":"Identifier","start":26944,"end":26964,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26965,"end":26971,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26976,"end":26977,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26979,"end":27113,"body":[{"type":"ExpressionStatement","start":27050,"end":27071,"expression":{"type":"CallExpression","start":27050,"end":27070,"callee":{"type":"MemberExpression","start":27050,"end":27062,"object":{"type":"Identifier","start":27050,"end":27055,"name":"batch"},"property":{"type":"Identifier","start":27056,"end":27062,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27063,"end":27069,"name":"docRef"}],"optional":false}},{"type":"ReturnStatement","start":27085,"end":27102,"argument":{"type":"CallExpression","start":27092,"end":27101,"callee":{"type":"Identifier","start":27092,"end":27094,"name":"of"},"arguments":[{"type":"Identifier","start":27095,"end":27100,"name":"batch"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":27123,"end":27268,"argument":{"type":"CallExpression","start":27130,"end":27267,"callee":{"type":"MemberExpression","start":27130,"end":27196,"object":{"type":"CallExpression","start":27130,"end":27191,"callee":{"type":"MemberExpression","start":27130,"end":27161,"object":{"type":"ThisExpression","start":27130,"end":27134},"property":{"type":"Identifier","start":27135,"end":27161,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27162,"end":27168,"name":"docRef"},{"type":"Identifier","start":27170,"end":27190,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":27192,"end":27196,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":27197,"end":27257,"callee":{"type":"Identifier","start":27197,"end":27200,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":27201,"end":27256,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27202,"end":27209,"name":"docRefs"}],"body":{"type":"CallExpression","start":27214,"end":27256,"callee":{"type":"MemberExpression","start":27214,"end":27247,"object":{"type":"ThisExpression","start":27214,"end":27218},"property":{"type":"Identifier","start":27219,"end":27247,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27248,"end":27255,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":27259,"end":27266,"callee":{"type":"Identifier","start":27259,"end":27263,"name":"take"},"arguments":[{"type":"Literal","start":27264,"end":27265,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27281,"end":27463,"static":false,"computed":false,"key":{"type":"Identifier","start":27281,"end":27303,"name":"deleteMultipleByPaths$"},"kind":"method","value":{"type":"FunctionExpression","start":27303,"end":27463,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27304,"end":27312,"name":"docPaths"}],"body":{"type":"BlockStatement","start":27314,"end":27463,"body":[{"type":"VariableDeclaration","start":27325,"end":27403,"declarations":[{"type":"VariableDeclarator","start":27331,"end":27402,"id":{"type":"Identifier","start":27331,"end":27338,"name":"docRefs"},"init":{"type":"CallExpression","start":27341,"end":27402,"callee":{"type":"MemberExpression","start":27341,"end":27353,"object":{"type":"Identifier","start":27341,"end":27349,"name":"docPaths"},"property":{"type":"Identifier","start":27350,"end":27353,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27354,"end":27401,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27354,"end":27358,"name":"path"}],"body":{"type":"CallExpression","start":27362,"end":27401,"callee":{"type":"Identifier","start":27362,"end":27376,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":27377,"end":27381,"name":"path"},{"type":"MemberExpression","start":27383,"end":27400,"object":{"type":"MemberExpression","start":27383,"end":27390,"object":{"type":"ThisExpression","start":27383,"end":27387},"property":{"type":"Identifier","start":27388,"end":27390,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27391,"end":27400,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":27413,"end":27456,"argument":{"type":"CallExpression","start":27420,"end":27455,"callee":{"type":"MemberExpression","start":27420,"end":27446,"object":{"type":"ThisExpression","start":27420,"end":27424},"property":{"type":"Identifier","start":27425,"end":27446,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27447,"end":27454,"name":"docRefs"}],"optional":false}}]}}},{"type":"MethodDefinition","start":27739,"end":28618,"static":false,"computed":false,"key":{"type":"Identifier","start":27739,"end":27754,"name":"deleteMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":27754,"end":28618,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27755,"end":27762,"name":"docRefs"},{"type":"AssignmentPattern","start":27764,"end":27789,"left":{"type":"Identifier","start":27764,"end":27784,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27787,"end":27789,"elements":[]}}],"body":{"type":"BlockStatement","start":27791,"end":28618,"body":[{"type":"IfStatement","start":27802,"end":27942,"test":{"type":"LogicalExpression","start":27806,"end":27871,"left":{"type":"BinaryExpression","start":27806,"end":27834,"left":{"type":"Identifier","start":27806,"end":27826,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27830,"end":27834,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27838,"end":27871,"left":{"type":"MemberExpression","start":27838,"end":27865,"object":{"type":"Identifier","start":27838,"end":27858,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":27859,"end":27865,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":27870,"end":27871,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":27873,"end":27942,"body":[{"type":"ReturnStatement","start":27888,"end":27931,"argument":{"type":"CallExpression","start":27895,"end":27930,"callee":{"type":"MemberExpression","start":27895,"end":27921,"object":{"type":"ThisExpression","start":27895,"end":27899},"property":{"type":"Identifier","start":27900,"end":27921,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27922,"end":27929,"name":"docRefs"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":27952,"end":27976,"declarations":[{"type":"VariableDeclarator","start":27958,"end":27975,"id":{"type":"Identifier","start":27958,"end":27970,"name":"deepDocRefs$"},"init":{"type":"ArrayExpression","start":27973,"end":27975,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":27986,"end":28161,"expression":{"type":"CallExpression","start":27986,"end":28160,"callee":{"type":"MemberExpression","start":27986,"end":28001,"object":{"type":"Identifier","start":27986,"end":27993,"name":"docRefs"},"property":{"type":"Identifier","start":27994,"end":28001,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28002,"end":28159,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28002,"end":28008,"name":"docRef"}],"body":{"type":"BlockStatement","start":28012,"end":28159,"body":[{"type":"VariableDeclaration","start":28027,"end":28106,"declarations":[{"type":"VariableDeclarator","start":28033,"end":28105,"id":{"type":"Identifier","start":28033,"end":28041,"name":"docRefs$"},"init":{"type":"CallExpression","start":28044,"end":28105,"callee":{"type":"MemberExpression","start":28044,"end":28075,"object":{"type":"ThisExpression","start":28044,"end":28048},"property":{"type":"Identifier","start":28049,"end":28075,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28076,"end":28082,"name":"docRef"},{"type":"Identifier","start":28084,"end":28104,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":28120,"end":28148,"expression":{"type":"CallExpression","start":28120,"end":28147,"callee":{"type":"MemberExpression","start":28120,"end":28137,"object":{"type":"Identifier","start":28120,"end":28132,"name":"deepDocRefs$"},"property":{"type":"Identifier","start":28133,"end":28137,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28138,"end":28146,"name":"docRefs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":28171,"end":28611,"argument":{"type":"CallExpression","start":28178,"end":28610,"callee":{"type":"MemberExpression","start":28178,"end":28210,"object":{"type":"CallExpression","start":28178,"end":28205,"callee":{"type":"Identifier","start":28178,"end":28191,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":28192,"end":28204,"name":"deepDocRefs$"}],"optional":false},"property":{"type":"Identifier","start":28206,"end":28210,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28267,"end":28486,"callee":{"type":"Identifier","start":28267,"end":28270,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":28271,"end":28485,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28272,"end":28277,"name":"lists"}],"body":{"type":"BlockStatement","start":28282,"end":28485,"body":[{"type":"VariableDeclaration","start":28297,"end":28321,"declarations":[{"type":"VariableDeclarator","start":28301,"end":28320,"id":{"type":"Identifier","start":28301,"end":28315,"name":"mainDocRefList"},"init":{"type":"ArrayExpression","start":28318,"end":28320,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":28335,"end":28438,"expression":{"type":"CallExpression","start":28335,"end":28437,"callee":{"type":"MemberExpression","start":28335,"end":28348,"object":{"type":"Identifier","start":28335,"end":28340,"name":"lists"},"property":{"type":"Identifier","start":28341,"end":28348,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28349,"end":28436,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28349,"end":28353,"name":"list"}],"body":{"type":"BlockStatement","start":28357,"end":28436,"body":[{"type":"ExpressionStatement","start":28376,"end":28421,"expression":{"type":"AssignmentExpression","start":28376,"end":28420,"operator":"=","left":{"type":"Identifier","start":28376,"end":28390,"name":"mainDocRefList"},"right":{"type":"CallExpression","start":28393,"end":28420,"callee":{"type":"MemberExpression","start":28393,"end":28414,"object":{"type":"Identifier","start":28393,"end":28407,"name":"mainDocRefList"},"property":{"type":"Identifier","start":28408,"end":28414,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28415,"end":28419,"name":"list"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":28452,"end":28474,"argument":{"type":"Identifier","start":28459,"end":28473,"name":"mainDocRefList"}}]}}],"optional":false},{"type":"CallExpression","start":28544,"end":28609,"callee":{"type":"Identifier","start":28544,"end":28553,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28554,"end":28608,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28555,"end":28565,"name":"docRefList"}],"body":{"type":"CallExpression","start":28570,"end":28608,"callee":{"type":"MemberExpression","start":28570,"end":28596,"object":{"type":"ThisExpression","start":28570,"end":28574},"property":{"type":"Identifier","start":28575,"end":28596,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28597,"end":28607,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":28956,"end":29195,"static":false,"computed":false,"key":{"type":"Identifier","start":28956,"end":28973,"name":"deleteCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":28973,"end":29195,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28974,"end":28987,"name":"collectionRef"},{"type":"AssignmentPattern","start":28989,"end":29014,"left":{"type":"Identifier","start":28989,"end":29009,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29012,"end":29014,"elements":[]}}],"body":{"type":"BlockStatement","start":29016,"end":29195,"body":[{"type":"ReturnStatement","start":29027,"end":29188,"argument":{"type":"CallExpression","start":29034,"end":29187,"callee":{"type":"MemberExpression","start":29034,"end":29178,"object":{"type":"CallExpression","start":29034,"end":29173,"callee":{"type":"MemberExpression","start":29034,"end":29120,"object":{"type":"CallExpression","start":29034,"end":29115,"callee":{"type":"MemberExpression","start":29034,"end":29078,"object":{"type":"ThisExpression","start":29034,"end":29038},"property":{"type":"Identifier","start":29039,"end":29078,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29079,"end":29092,"name":"collectionRef"},{"type":"Identifier","start":29094,"end":29114,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":29116,"end":29120,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29121,"end":29172,"callee":{"type":"Identifier","start":29121,"end":29130,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":29131,"end":29171,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":29131,"end":29138,"name":"docRefs"}],"body":{"type":"CallExpression","start":29142,"end":29171,"callee":{"type":"MemberExpression","start":29142,"end":29162,"object":{"type":"ThisExpression","start":29142,"end":29146},"property":{"type":"Identifier","start":29147,"end":29162,"name":"deleteMultiple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29163,"end":29170,"name":"docRefs"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":29174,"end":29178,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29179,"end":29186,"callee":{"type":"Identifier","start":29179,"end":29183,"name":"take"},"arguments":[{"type":"Literal","start":29184,"end":29185,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29619,"end":29808,"static":false,"computed":false,"key":{"type":"Identifier","start":29619,"end":29635,"name":"deleteDocByPath$"},"kind":"method","value":{"type":"FunctionExpression","start":29635,"end":29808,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29636,"end":29643,"name":"docPath"},{"type":"AssignmentPattern","start":29645,"end":29670,"left":{"type":"Identifier","start":29645,"end":29665,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29668,"end":29670,"elements":[]}}],"body":{"type":"BlockStatement","start":29672,"end":29808,"body":[{"type":"VariableDeclaration","start":29683,"end":29741,"declarations":[{"type":"VariableDeclarator","start":29689,"end":29740,"id":{"type":"Identifier","start":29689,"end":29695,"name":"docRef"},"init":{"type":"CallExpression","start":29698,"end":29740,"callee":{"type":"Identifier","start":29698,"end":29712,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":29713,"end":29720,"name":"docPath"},{"type":"MemberExpression","start":29722,"end":29739,"object":{"type":"MemberExpression","start":29722,"end":29729,"object":{"type":"ThisExpression","start":29722,"end":29726},"property":{"type":"Identifier","start":29727,"end":29729,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":29730,"end":29739,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":29751,"end":29801,"argument":{"type":"CallExpression","start":29758,"end":29800,"callee":{"type":"MemberExpression","start":29758,"end":29770,"object":{"type":"ThisExpression","start":29758,"end":29762},"property":{"type":"Identifier","start":29763,"end":29770,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29771,"end":29777,"name":"docRef"},{"type":"Identifier","start":29779,"end":29799,"name":"subCollectionQueries"}],"optional":false}}]}}},{"type":"MethodDefinition","start":30162,"end":30613,"static":false,"computed":false,"key":{"type":"Identifier","start":30162,"end":30173,"name":"deleteItem$"},"kind":"method","value":{"type":"FunctionExpression","start":30173,"end":30613,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30174,"end":30178,"name":"item"},{"type":"AssignmentPattern","start":30180,"end":30205,"left":{"type":"Identifier","start":30180,"end":30200,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":30203,"end":30205,"elements":[]}}],"body":{"type":"BlockStatement","start":30207,"end":30613,"body":[{"type":"VariableDeclaration","start":30218,"end":30297,"declarations":[{"type":"VariableDeclarator","start":30224,"end":30296,"id":{"type":"Identifier","start":30224,"end":30231,"name":"docRefs"},"init":{"type":"CallExpression","start":30234,"end":30296,"callee":{"type":"MemberExpression","start":30234,"end":30268,"object":{"type":"ThisExpression","start":30234,"end":30238},"property":{"type":"Identifier","start":30239,"end":30268,"name":"getDocumentReferencesFromItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30269,"end":30273,"name":"item"},{"type":"Identifier","start":30275,"end":30295,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":30307,"end":30606,"argument":{"type":"CallExpression","start":30314,"end":30605,"callee":{"type":"MemberExpression","start":30314,"end":30354,"object":{"type":"CallExpression","start":30314,"end":30349,"callee":{"type":"MemberExpression","start":30314,"end":30340,"object":{"type":"ThisExpression","start":30314,"end":30318},"property":{"type":"Identifier","start":30319,"end":30340,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30341,"end":30348,"name":"docRefs"}],"optional":false},"property":{"type":"Identifier","start":30350,"end":30354,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30597,"end":30604,"callee":{"type":"Identifier","start":30597,"end":30601,"name":"take"},"arguments":[{"type":"Literal","start":30602,"end":30603,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":30619,"end":31281,"static":false,"computed":false,"key":{"type":"Identifier","start":30619,"end":30638,"name":"cleanExtrasFromData"},"kind":"method","value":{"type":"FunctionExpression","start":30638,"end":31281,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30639,"end":30643,"name":"data"},{"type":"AssignmentPattern","start":30645,"end":30670,"left":{"type":"Identifier","start":30645,"end":30665,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":30668,"end":30670,"elements":[]}},{"type":"AssignmentPattern","start":30672,"end":30701,"left":{"type":"Identifier","start":30672,"end":30696,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":30699,"end":30701,"elements":[]}}],"body":{"type":"BlockStatement","start":30703,"end":31281,"body":[{"type":"IfStatement","start":30857,"end":31274,"test":{"type":"CallExpression","start":30861,"end":30880,"callee":{"type":"MemberExpression","start":30861,"end":30874,"object":{"type":"Identifier","start":30861,"end":30866,"name":"Array"},"property":{"type":"Identifier","start":30867,"end":30874,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30875,"end":30879,"name":"data"}],"optional":false},"consequent":{"type":"BlockStatement","start":30882,"end":31135,"body":[{"type":"VariableDeclaration","start":30897,"end":30919,"declarations":[{"type":"VariableDeclarator","start":30903,"end":30918,"id":{"type":"Identifier","start":30903,"end":30913,"name":"cleanDatas"},"init":{"type":"ArrayExpression","start":30916,"end":30918,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":30933,"end":31092,"expression":{"type":"CallExpression","start":30933,"end":31091,"callee":{"type":"MemberExpression","start":30933,"end":30945,"object":{"type":"Identifier","start":30933,"end":30937,"name":"data"},"property":{"type":"Identifier","start":30938,"end":30945,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":30946,"end":31090,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30946,"end":30947,"name":"d"}],"body":{"type":"BlockStatement","start":30951,"end":31090,"body":[{"type":"ExpressionStatement","start":30970,"end":31075,"expression":{"type":"CallExpression","start":30970,"end":31074,"callee":{"type":"MemberExpression","start":30970,"end":30985,"object":{"type":"Identifier","start":30970,"end":30980,"name":"cleanDatas"},"property":{"type":"Identifier","start":30981,"end":30985,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30986,"end":31073,"callee":{"type":"MemberExpression","start":30986,"end":31022,"object":{"type":"ThisExpression","start":30986,"end":30990},"property":{"type":"Identifier","start":30991,"end":31022,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31023,"end":31024,"name":"d"},{"type":"Identifier","start":31026,"end":31046,"name":"subCollectionWriters"},{"type":"Identifier","start":31048,"end":31072,"name":"additionalFieldsToRemove"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":31106,"end":31124,"argument":{"type":"Identifier","start":31113,"end":31123,"name":"cleanDatas"}}]},"alternate":{"type":"BlockStatement","start":31150,"end":31274,"body":[{"type":"ReturnStatement","start":31165,"end":31263,"argument":{"type":"CallExpression","start":31172,"end":31262,"callee":{"type":"MemberExpression","start":31172,"end":31208,"object":{"type":"ThisExpression","start":31172,"end":31176},"property":{"type":"Identifier","start":31177,"end":31208,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31209,"end":31213,"name":"data"},{"type":"Identifier","start":31215,"end":31235,"name":"subCollectionWriters"},{"type":"Identifier","start":31237,"end":31261,"name":"additionalFieldsToRemove"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":31814,"end":33462,"static":false,"computed":false,"key":{"type":"Identifier","start":31814,"end":31833,"name":"listenForDocSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":31833,"end":33462,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31834,"end":31840,"name":"docRef"},{"type":"AssignmentPattern","start":31842,"end":31898,"left":{"type":"Identifier","start":31842,"end":31858,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":31861,"end":31898,"object":{"type":"Identifier","start":31861,"end":31878,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":31879,"end":31898,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":31900,"end":33462,"body":[{"type":"ReturnStatement","start":31911,"end":33455,"argument":{"type":"CallExpression","start":31918,"end":33454,"callee":{"type":"MemberExpression","start":31918,"end":31942,"object":{"type":"CallExpression","start":31918,"end":31937,"callee":{"type":"MemberExpression","start":31918,"end":31929,"object":{"type":"MemberExpression","start":31918,"end":31925,"object":{"type":"ThisExpression","start":31918,"end":31922},"property":{"type":"Identifier","start":31923,"end":31925,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":31926,"end":31929,"name":"doc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31930,"end":31936,"name":"docRef"}],"optional":false},"property":{"type":"Identifier","start":31938,"end":31942,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":31943,"end":32389,"callee":{"type":"Identifier","start":31943,"end":31946,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":31947,"end":32388,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31948,"end":31956,"name":"snapshot"}],"body":{"type":"BlockStatement","start":31961,"end":32388,"body":[{"type":"IfStatement","start":31976,"end":32377,"test":{"type":"LogicalExpression","start":31980,"end":32058,"left":{"type":"UnaryExpression","start":31980,"end":31996,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":31981,"end":31996,"object":{"type":"Identifier","start":31981,"end":31989,"name":"snapshot"},"property":{"type":"Identifier","start":31990,"end":31996,"name":"exists"},"computed":false,"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":32000,"end":32058,"left":{"type":"Identifier","start":32000,"end":32016,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32021,"end":32058,"object":{"type":"Identifier","start":32021,"end":32038,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32039,"end":32058,"name":"THROW_DOC_NOT_FOUND"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32060,"end":32377,"body":[{"type":"VariableDeclaration","start":32079,"end":32332,"declarations":[{"type":"VariableDeclarator","start":32085,"end":32331,"id":{"type":"Identifier","start":32085,"end":32090,"name":"error"},"init":{"type":"ObjectExpression","start":32093,"end":32331,"properties":[{"type":"Property","start":32116,"end":32140,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32116,"end":32120,"name":"name"},"value":{"type":"Literal","start":32122,"end":32140,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":32163,"end":32180,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32163,"end":32167,"name":"code"},"value":{"type":"Literal","start":32169,"end":32180,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":32203,"end":32283,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32203,"end":32210,"name":"message"},"value":{"type":"Literal","start":32212,"end":32283,"value":"Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND","raw":"'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND'"},"kind":"init"},{"type":"Property","start":32306,"end":32312,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32306,"end":32312,"name":"docRef"},"kind":"init","value":{"type":"Identifier","start":32306,"end":32312,"name":"docRef"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":32350,"end":32362,"argument":{"type":"Identifier","start":32356,"end":32361,"name":"error"}}]},"alternate":null}]}}],"optional":false},{"type":"CallExpression","start":32391,"end":32516,"callee":{"type":"Identifier","start":32391,"end":32397,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":32398,"end":32515,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32399,"end":32407,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32412,"end":32515,"body":[{"type":"ReturnStatement","start":32427,"end":32504,"argument":{"type":"UnaryExpression","start":32434,"end":32503,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":32436,"end":32502,"left":{"type":"CallExpression","start":32436,"end":32453,"callee":{"type":"MemberExpression","start":32436,"end":32451,"object":{"type":"Identifier","start":32436,"end":32444,"name":"snapshot"},"property":{"type":"Identifier","start":32445,"end":32451,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":32457,"end":32502,"left":{"type":"Identifier","start":32457,"end":32473,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32478,"end":32502,"object":{"type":"Identifier","start":32478,"end":32495,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32496,"end":32502,"name":"FILTER"},"computed":false,"optional":false}}}}}]}}],"optional":false},{"type":"CallExpression","start":32518,"end":33257,"callee":{"type":"Identifier","start":32518,"end":32521,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32522,"end":33256,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32523,"end":32531,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32536,"end":33256,"body":[{"type":"IfStatement","start":32551,"end":33219,"test":{"type":"LogicalExpression","start":32555,"end":32632,"left":{"type":"MemberExpression","start":32555,"end":32570,"object":{"type":"Identifier","start":32555,"end":32563,"name":"snapshot"},"property":{"type":"Identifier","start":32564,"end":32570,"name":"exists"},"computed":false,"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":32574,"end":32632,"left":{"type":"Identifier","start":32574,"end":32590,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32595,"end":32632,"object":{"type":"Identifier","start":32595,"end":32612,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32613,"end":32632,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32634,"end":33074,"body":[{"type":"VariableDeclaration","start":32653,"end":32682,"declarations":[{"type":"VariableDeclarator","start":32659,"end":32681,"id":{"type":"Identifier","start":32659,"end":32663,"name":"data"},"init":{"type":"CallExpression","start":32666,"end":32681,"callee":{"type":"MemberExpression","start":32666,"end":32679,"object":{"type":"Identifier","start":32666,"end":32674,"name":"snapshot"},"property":{"type":"Identifier","start":32675,"end":32679,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":32700,"end":32972,"declarations":[{"type":"VariableDeclarator","start":32706,"end":32971,"id":{"type":"Identifier","start":32706,"end":32723,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":32726,"end":32971,"properties":[{"type":"Property","start":32749,"end":32764,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32749,"end":32751,"name":"id"},"value":{"type":"MemberExpression","start":32753,"end":32764,"object":{"type":"Identifier","start":32753,"end":32761,"name":"snapshot"},"property":{"type":"Identifier","start":32762,"end":32764,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32787,"end":32804,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32787,"end":32790,"name":"ref"},"value":{"type":"MemberExpression","start":32792,"end":32804,"object":{"type":"Identifier","start":32792,"end":32800,"name":"snapshot"},"property":{"type":"Identifier","start":32801,"end":32804,"name":"ref"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32827,"end":32844,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32827,"end":32831,"name":"path"},"value":{"type":"MemberExpression","start":32833,"end":32844,"object":{"type":"Identifier","start":32833,"end":32839,"name":"docRef"},"property":{"type":"Identifier","start":32840,"end":32844,"name":"path"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32867,"end":32894,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32867,"end":32875,"name":"isExists"},"value":{"type":"CallExpression","start":32877,"end":32894,"callee":{"type":"MemberExpression","start":32877,"end":32892,"object":{"type":"Identifier","start":32877,"end":32885,"name":"snapshot"},"property":{"type":"Identifier","start":32886,"end":32892,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":32917,"end":32952,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32917,"end":32933,"name":"snapshotMetadata"},"value":{"type":"MemberExpression","start":32935,"end":32952,"object":{"type":"Identifier","start":32935,"end":32943,"name":"snapshot"},"property":{"type":"Identifier","start":32944,"end":32952,"name":"metadata"},"computed":false,"optional":false},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":32990,"end":33059,"argument":{"type":"CallExpression","start":32997,"end":33058,"callee":{"type":"MemberExpression","start":32997,"end":33010,"object":{"type":"Identifier","start":32997,"end":33003,"name":"Object"},"property":{"type":"Identifier","start":33004,"end":33010,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":33011,"end":33034,"callee":{"type":"MemberExpression","start":33011,"end":33024,"object":{"type":"Identifier","start":33011,"end":33017,"name":"Object"},"property":{"type":"Identifier","start":33018,"end":33024,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":33025,"end":33027,"properties":[]},{"type":"Identifier","start":33029,"end":33033,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":33036,"end":33057,"properties":[{"type":"Property","start":33038,"end":33055,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":33038,"end":33055,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":33038,"end":33055,"name":"firestoreMetadata"}}]}],"optional":false}}]},"alternate":{"type":"IfStatement","start":33093,"end":33219,"test":{"type":"BinaryExpression","start":33097,"end":33147,"left":{"type":"Identifier","start":33097,"end":33113,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":33118,"end":33147,"object":{"type":"Identifier","start":33118,"end":33135,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":33136,"end":33147,"name":"RETURN_NULL"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":33149,"end":33219,"body":[{"type":"ReturnStatement","start":33192,"end":33204,"argument":{"type":"Literal","start":33199,"end":33203,"value":null,"raw":"null"}}]},"alternate":null}},{"type":"ReturnStatement","start":33233,"end":33245,"argument":{"type":"Literal","start":33240,"end":33244,"value":null,"raw":"null"}}]}}],"optional":false},{"type":"CallExpression","start":33259,"end":33453,"callee":{"type":"Identifier","start":33259,"end":33262,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33263,"end":33452,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33264,"end":33268,"name":"data"}],"body":{"type":"BlockStatement","start":33273,"end":33452,"body":[{"type":"IfStatement","start":33288,"end":33441,"test":{"type":"BinaryExpression","start":33292,"end":33304,"left":{"type":"Identifier","start":33292,"end":33296,"name":"data"},"operator":"!=","right":{"type":"Literal","start":33300,"end":33304,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":33306,"end":33376,"body":[{"type":"ReturnStatement","start":33325,"end":33361,"argument":{"type":"CallExpression","start":33332,"end":33360,"callee":{"type":"Identifier","start":33332,"end":33354,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":33355,"end":33359,"name":"data"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":33395,"end":33441,"body":[{"type":"ReturnStatement","start":33414,"end":33426,"argument":{"type":"Identifier","start":33421,"end":33425,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":33853,"end":34872,"static":false,"computed":false,"key":{"type":"Identifier","start":33853,"end":33879,"name":"listenForCollectionSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":33879,"end":34872,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33880,"end":33893,"name":"collectionRef"}],"body":{"type":"BlockStatement","start":33895,"end":34872,"body":[{"type":"ReturnStatement","start":34070,"end":34865,"argument":{"type":"CallExpression","start":34077,"end":34864,"callee":{"type":"MemberExpression","start":34077,"end":34115,"object":{"type":"CallExpression","start":34077,"end":34110,"callee":{"type":"MemberExpression","start":34077,"end":34095,"object":{"type":"MemberExpression","start":34077,"end":34084,"object":{"type":"ThisExpression","start":34077,"end":34081},"property":{"type":"Identifier","start":34082,"end":34084,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34085,"end":34095,"name":"collection"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":34096,"end":34109,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":34111,"end":34115,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":34116,"end":34745,"callee":{"type":"Identifier","start":34116,"end":34119,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34120,"end":34744,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34121,"end":34125,"name":"snap"}],"body":{"type":"BlockStatement","start":34130,"end":34744,"body":[{"type":"ReturnStatement","start":34145,"end":34733,"argument":{"type":"CallExpression","start":34152,"end":34732,"callee":{"type":"MemberExpression","start":34152,"end":34165,"object":{"type":"MemberExpression","start":34152,"end":34161,"object":{"type":"Identifier","start":34152,"end":34156,"name":"snap"},"property":{"type":"Identifier","start":34157,"end":34161,"name":"docs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34162,"end":34165,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34166,"end":34731,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34166,"end":34174,"name":"snapshot"}],"body":{"type":"BlockStatement","start":34178,"end":34731,"body":[{"type":"VariableDeclaration","start":34197,"end":34226,"declarations":[{"type":"VariableDeclarator","start":34203,"end":34225,"id":{"type":"Identifier","start":34203,"end":34207,"name":"data"},"init":{"type":"CallExpression","start":34210,"end":34225,"callee":{"type":"MemberExpression","start":34210,"end":34223,"object":{"type":"Identifier","start":34210,"end":34218,"name":"snapshot"},"property":{"type":"Identifier","start":34219,"end":34223,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34244,"end":34267,"declarations":[{"type":"VariableDeclarator","start":34250,"end":34266,"id":{"type":"Identifier","start":34250,"end":34252,"name":"id"},"init":{"type":"MemberExpression","start":34255,"end":34266,"object":{"type":"Identifier","start":34255,"end":34263,"name":"snapshot"},"property":{"type":"Identifier","start":34264,"end":34266,"name":"id"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34285,"end":34310,"declarations":[{"type":"VariableDeclarator","start":34291,"end":34309,"id":{"type":"Identifier","start":34291,"end":34294,"name":"ref"},"init":{"type":"MemberExpression","start":34297,"end":34309,"object":{"type":"Identifier","start":34297,"end":34305,"name":"snapshot"},"property":{"type":"Identifier","start":34306,"end":34309,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34328,"end":34350,"declarations":[{"type":"VariableDeclarator","start":34334,"end":34349,"id":{"type":"Identifier","start":34334,"end":34338,"name":"path"},"init":{"type":"MemberExpression","start":34341,"end":34349,"object":{"type":"Identifier","start":34341,"end":34344,"name":"ref"},"property":{"type":"Identifier","start":34345,"end":34349,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34368,"end":34411,"declarations":[{"type":"VariableDeclarator","start":34374,"end":34410,"id":{"type":"Identifier","start":34374,"end":34390,"name":"snapshotMetadata"},"init":{"type":"MemberExpression","start":34393,"end":34410,"object":{"type":"Identifier","start":34393,"end":34401,"name":"snapshot"},"property":{"type":"Identifier","start":34402,"end":34410,"name":"metadata"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34429,"end":34629,"declarations":[{"type":"VariableDeclarator","start":34435,"end":34628,"id":{"type":"Identifier","start":34435,"end":34452,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":34455,"end":34628,"properties":[{"type":"Property","start":34478,"end":34480,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34478,"end":34480,"name":"id"},"kind":"init","value":{"type":"Identifier","start":34478,"end":34480,"name":"id"}},{"type":"Property","start":34503,"end":34507,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34503,"end":34507,"name":"path"},"kind":"init","value":{"type":"Identifier","start":34503,"end":34507,"name":"path"}},{"type":"Property","start":34530,"end":34533,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34530,"end":34533,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":34530,"end":34533,"name":"ref"}},{"type":"Property","start":34556,"end":34572,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34556,"end":34572,"name":"snapshotMetadata"},"kind":"init","value":{"type":"Identifier","start":34556,"end":34572,"name":"snapshotMetadata"}},{"type":"Property","start":34595,"end":34609,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":34595,"end":34603,"name":"isExists"},"value":{"type":"Literal","start":34605,"end":34609,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":34647,"end":34716,"argument":{"type":"CallExpression","start":34654,"end":34715,"callee":{"type":"MemberExpression","start":34654,"end":34667,"object":{"type":"Identifier","start":34654,"end":34660,"name":"Object"},"property":{"type":"Identifier","start":34661,"end":34667,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":34668,"end":34691,"callee":{"type":"MemberExpression","start":34668,"end":34681,"object":{"type":"Identifier","start":34668,"end":34674,"name":"Object"},"property":{"type":"Identifier","start":34675,"end":34681,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":34682,"end":34684,"properties":[]},{"type":"Identifier","start":34686,"end":34690,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":34693,"end":34714,"properties":[{"type":"Property","start":34695,"end":34712,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34695,"end":34712,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":34695,"end":34712,"name":"firestoreMetadata"}}]}],"optional":false}}]}}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":34747,"end":34863,"callee":{"type":"Identifier","start":34747,"end":34750,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34751,"end":34862,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":34752,"end":34757,"name":"datas"}],"body":{"type":"CallExpression","start":34762,"end":34862,"callee":{"type":"MemberExpression","start":34762,"end":34771,"object":{"type":"Identifier","start":34762,"end":34767,"name":"datas"},"property":{"type":"Identifier","start":34768,"end":34771,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34772,"end":34861,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34772,"end":34776,"name":"data"}],"body":{"type":"BlockStatement","start":34780,"end":34861,"body":[{"type":"ExpressionStatement","start":34795,"end":34824,"expression":{"type":"CallExpression","start":34795,"end":34823,"callee":{"type":"Identifier","start":34795,"end":34817,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":34818,"end":34822,"name":"data"}],"optional":false}},{"type":"ReturnStatement","start":34838,"end":34850,"argument":{"type":"Identifier","start":34845,"end":34849,"name":"data"}}]}}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":35154,"end":38623,"static":false,"computed":false,"key":{"type":"Identifier","start":35154,"end":35178,"name":"listenForCollectionsDeep"},"kind":"method","value":{"type":"FunctionExpression","start":35178,"end":38623,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35179,"end":35183,"name":"item"},{"type":"AssignmentPattern","start":35185,"end":35210,"left":{"type":"Identifier","start":35185,"end":35205,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":35208,"end":35210,"elements":[]}}],"body":{"type":"BlockStatement","start":35212,"end":38623,"body":[{"type":"IfStatement","start":35223,"end":35285,"test":{"type":"BinaryExpression","start":35227,"end":35239,"left":{"type":"Identifier","start":35227,"end":35231,"name":"item"},"operator":"==","right":{"type":"Literal","start":35235,"end":35239,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":35241,"end":35285,"body":[{"type":"ReturnStatement","start":35256,"end":35274,"argument":{"type":"CallExpression","start":35263,"end":35273,"callee":{"type":"Identifier","start":35263,"end":35265,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35266,"end":35272,"elements":[{"type":"Identifier","start":35267,"end":35271,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":35295,"end":35377,"test":{"type":"BinaryExpression","start":35299,"end":35331,"left":{"type":"MemberExpression","start":35299,"end":35326,"object":{"type":"Identifier","start":35299,"end":35319,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35320,"end":35326,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":35330,"end":35331,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":35333,"end":35377,"body":[{"type":"ReturnStatement","start":35348,"end":35366,"argument":{"type":"CallExpression","start":35355,"end":35365,"callee":{"type":"Identifier","start":35355,"end":35357,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35358,"end":35364,"elements":[{"type":"Identifier","start":35359,"end":35363,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":35387,"end":35418,"declarations":[{"type":"VariableDeclarator","start":35393,"end":35417,"id":{"type":"Identifier","start":35393,"end":35412,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":35415,"end":35417,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":35521,"end":38000,"expression":{"type":"CallExpression","start":35521,"end":37999,"callee":{"type":"MemberExpression","start":35521,"end":35549,"object":{"type":"Identifier","start":35521,"end":35541,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35542,"end":35549,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":35550,"end":37998,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35550,"end":35568,"name":"subCollectionQuery"}],"body":{"type":"BlockStatement","start":35572,"end":37998,"body":[{"type":"VariableDeclaration","start":35587,"end":35677,"declarations":[{"type":"VariableDeclarator","start":35591,"end":35676,"id":{"type":"Identifier","start":35591,"end":35604,"name":"collectionRef"},"init":{"type":"CallExpression","start":35607,"end":35676,"callee":{"type":"Identifier","start":35607,"end":35623,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":35624,"end":35650,"object":{"type":"MemberExpression","start":35624,"end":35646,"object":{"type":"Identifier","start":35624,"end":35628,"name":"item"},"property":{"type":"Identifier","start":35629,"end":35646,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":35647,"end":35650,"name":"ref"},"computed":false,"optional":false},{"type":"MemberExpression","start":35652,"end":35675,"object":{"type":"Identifier","start":35652,"end":35670,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35671,"end":35675,"name":"name"},"computed":false,"optional":false}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":35691,"end":35815,"test":{"type":"MemberExpression","start":35695,"end":35721,"object":{"type":"Identifier","start":35695,"end":35713,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35714,"end":35721,"name":"queryFn"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":35723,"end":35815,"body":[{"type":"ExpressionStatement","start":35742,"end":35800,"expression":{"type":"AssignmentExpression","start":35742,"end":35799,"operator":"=","left":{"type":"Identifier","start":35742,"end":35755,"name":"collectionRef"},"right":{"type":"CallExpression","start":35758,"end":35799,"callee":{"type":"MemberExpression","start":35758,"end":35784,"object":{"type":"Identifier","start":35758,"end":35776,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35777,"end":35784,"name":"queryFn"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":35785,"end":35798,"name":"collectionRef"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":35829,"end":37928,"declarations":[{"type":"VariableDeclarator","start":35835,"end":37927,"id":{"type":"Identifier","start":35835,"end":35853,"name":"collectionListener"},"init":{"type":"CallExpression","start":35856,"end":37927,"callee":{"type":"MemberExpression","start":35856,"end":35907,"object":{"type":"CallExpression","start":35856,"end":35902,"callee":{"type":"MemberExpression","start":35856,"end":35887,"object":{"type":"ThisExpression","start":35856,"end":35860},"property":{"type":"Identifier","start":35861,"end":35887,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":35888,"end":35901,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":35903,"end":35907,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":36322,"end":37140,"callee":{"type":"Identifier","start":36322,"end":36330,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":36331,"end":37139,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36332,"end":36337,"name":"items"}],"body":{"type":"BlockStatement","start":36342,"end":37139,"body":[{"type":"IfStatement","start":36361,"end":36460,"test":{"type":"UnaryExpression","start":36365,"end":36399,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":36366,"end":36399,"object":{"type":"Identifier","start":36366,"end":36384,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36385,"end":36399,"name":"subCollections"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":36401,"end":36460,"body":[{"type":"ReturnStatement","start":36424,"end":36441,"argument":{"type":"CallExpression","start":36431,"end":36440,"callee":{"type":"Identifier","start":36431,"end":36433,"name":"of"},"arguments":[{"type":"Identifier","start":36434,"end":36439,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":36478,"end":36502,"declarations":[{"type":"VariableDeclarator","start":36484,"end":36501,"id":{"type":"Identifier","start":36484,"end":36496,"name":"docListeners"},"init":{"type":"ArrayExpression","start":36499,"end":36501,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":36520,"end":36557,"expression":{"type":"AssignmentExpression","start":36520,"end":36556,"operator":"=","left":{"type":"Identifier","start":36520,"end":36525,"name":"items"},"right":{"type":"CallExpression","start":36528,"end":36556,"callee":{"type":"MemberExpression","start":36528,"end":36540,"object":{"type":"Identifier","start":36528,"end":36533,"name":"items"},"property":{"type":"Identifier","start":36534,"end":36540,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36541,"end":36555,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":36541,"end":36542,"name":"d"}],"body":{"type":"BinaryExpression","start":36546,"end":36555,"left":{"type":"Identifier","start":36546,"end":36547,"name":"d"},"operator":"!=","right":{"type":"Literal","start":36551,"end":36555,"value":null,"raw":"null"}}}],"optional":false}}},{"type":"ExpressionStatement","start":36605,"end":36843,"expression":{"type":"CallExpression","start":36605,"end":36842,"callee":{"type":"MemberExpression","start":36605,"end":36618,"object":{"type":"Identifier","start":36605,"end":36610,"name":"items"},"property":{"type":"Identifier","start":36611,"end":36618,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36619,"end":36841,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36620,"end":36627,"name":"subItem"}],"body":{"type":"BlockStatement","start":36632,"end":36841,"body":[{"type":"VariableDeclaration","start":36655,"end":36759,"declarations":[{"type":"VariableDeclarator","start":36661,"end":36758,"id":{"type":"Identifier","start":36661,"end":36682,"name":"subDocAndCollections$"},"init":{"type":"CallExpression","start":36685,"end":36758,"callee":{"type":"MemberExpression","start":36685,"end":36714,"object":{"type":"ThisExpression","start":36685,"end":36689},"property":{"type":"Identifier","start":36690,"end":36714,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36715,"end":36722,"name":"subItem"},{"type":"MemberExpression","start":36724,"end":36757,"object":{"type":"Identifier","start":36724,"end":36742,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36743,"end":36757,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":36781,"end":36822,"expression":{"type":"CallExpression","start":36781,"end":36821,"callee":{"type":"MemberExpression","start":36781,"end":36798,"object":{"type":"Identifier","start":36781,"end":36793,"name":"docListeners"},"property":{"type":"Identifier","start":36794,"end":36798,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36799,"end":36820,"name":"subDocAndCollections$"}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":36861,"end":36947,"test":{"type":"BinaryExpression","start":36865,"end":36889,"left":{"type":"MemberExpression","start":36865,"end":36884,"object":{"type":"Identifier","start":36865,"end":36877,"name":"docListeners"},"property":{"type":"Identifier","start":36878,"end":36884,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":36888,"end":36889,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":36891,"end":36947,"body":[{"type":"ReturnStatement","start":36914,"end":36928,"argument":{"type":"CallExpression","start":36921,"end":36927,"callee":{"type":"Identifier","start":36921,"end":36923,"name":"of"},"arguments":[{"type":"ArrayExpression","start":36924,"end":36926,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":37015,"end":37124,"argument":{"type":"CallExpression","start":37022,"end":37123,"callee":{"type":"MemberExpression","start":37022,"end":37054,"object":{"type":"CallExpression","start":37022,"end":37049,"callee":{"type":"Identifier","start":37022,"end":37035,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":37036,"end":37048,"name":"docListeners"}],"optional":false},"property":{"type":"Identifier","start":37050,"end":37054,"name":"pipe"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":37493,"end":37926,"callee":{"type":"Identifier","start":37493,"end":37496,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37497,"end":37925,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37498,"end":37503,"name":"items"}],"body":{"type":"BlockStatement","start":37508,"end":37925,"body":[{"type":"VariableDeclaration","start":37527,"end":37627,"declarations":[{"type":"VariableDeclarator","start":37533,"end":37626,"id":{"type":"Identifier","start":37533,"end":37538,"name":"docId"},"init":{"type":"ConditionalExpression","start":37541,"end":37626,"test":{"type":"BinaryExpression","start":37541,"end":37579,"left":{"type":"MemberExpression","start":37541,"end":37565,"object":{"type":"Identifier","start":37541,"end":37559,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37560,"end":37565,"name":"docId"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":37570,"end":37579,"name":"undefined"}},"consequent":{"type":"MemberExpression","start":37582,"end":37606,"object":{"type":"Identifier","start":37582,"end":37600,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37601,"end":37606,"name":"docId"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":37609,"end":37626,"object":{"type":"ThisExpression","start":37609,"end":37613},"property":{"type":"Identifier","start":37614,"end":37626,"name":"defaultDocId"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":37645,"end":37910,"test":{"type":"LogicalExpression","start":37649,"end":37710,"left":{"type":"BinaryExpression","start":37649,"end":37667,"left":{"type":"MemberExpression","start":37649,"end":37661,"object":{"type":"Identifier","start":37649,"end":37654,"name":"items"},"property":{"type":"Identifier","start":37655,"end":37661,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":37666,"end":37667,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":37671,"end":37710,"left":{"type":"MemberExpression","start":37671,"end":37700,"object":{"type":"MemberExpression","start":37671,"end":37697,"object":{"type":"MemberExpression","start":37671,"end":37679,"object":{"type":"Identifier","start":37671,"end":37676,"name":"items"},"property":{"type":"Literal","start":37677,"end":37678,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":37680,"end":37697,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":37698,"end":37700,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":37705,"end":37710,"name":"docId"}}},"consequent":{"type":"BlockStatement","start":37712,"end":37801,"body":[{"type":"ReturnStatement","start":37735,"end":37782,"argument":{"type":"ObjectExpression","start":37742,"end":37781,"properties":[{"type":"Property","start":37744,"end":37779,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37745,"end":37768,"object":{"type":"Identifier","start":37745,"end":37763,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37764,"end":37768,"name":"name"},"computed":false,"optional":false},"value":{"type":"MemberExpression","start":37771,"end":37779,"object":{"type":"Identifier","start":37771,"end":37776,"name":"items"},"property":{"type":"Literal","start":37777,"end":37778,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":37824,"end":37910,"body":[{"type":"ReturnStatement","start":37847,"end":37891,"argument":{"type":"ObjectExpression","start":37854,"end":37890,"properties":[{"type":"Property","start":37856,"end":37888,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37857,"end":37880,"object":{"type":"Identifier","start":37857,"end":37875,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37876,"end":37880,"name":"name"},"computed":false,"optional":false},"value":{"type":"Identifier","start":37883,"end":37888,"name":"items"},"kind":"init"}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":37942,"end":37987,"expression":{"type":"CallExpression","start":37942,"end":37986,"callee":{"type":"MemberExpression","start":37942,"end":37966,"object":{"type":"Identifier","start":37942,"end":37961,"name":"collectionListeners"},"property":{"type":"Identifier","start":37962,"end":37966,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":37967,"end":37985,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":38096,"end":38616,"argument":{"type":"CallExpression","start":38103,"end":38615,"callee":{"type":"MemberExpression","start":38103,"end":38142,"object":{"type":"CallExpression","start":38103,"end":38137,"callee":{"type":"Identifier","start":38103,"end":38116,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":38117,"end":38136,"name":"collectionListeners"}],"optional":false},"property":{"type":"Identifier","start":38138,"end":38142,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38143,"end":38519,"callee":{"type":"Identifier","start":38143,"end":38146,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38147,"end":38518,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38148,"end":38163,"name":"collectionDatas"}],"body":{"type":"BlockStatement","start":38168,"end":38518,"body":[{"type":"VariableDeclaration","start":38226,"end":38246,"declarations":[{"type":"VariableDeclarator","start":38232,"end":38245,"id":{"type":"Identifier","start":38232,"end":38240,"name":"datasMap"},"init":{"type":"ObjectExpression","start":38243,"end":38245,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":38260,"end":38477,"expression":{"type":"CallExpression","start":38260,"end":38476,"callee":{"type":"MemberExpression","start":38260,"end":38283,"object":{"type":"Identifier","start":38260,"end":38275,"name":"collectionDatas"},"property":{"type":"Identifier","start":38276,"end":38283,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":38284,"end":38475,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38285,"end":38295,"name":"collection"}],"body":{"type":"BlockStatement","start":38300,"end":38475,"body":[{"type":"ForOfStatement","start":38319,"end":38460,"await":false,"left":{"type":"VariableDeclaration","start":38324,"end":38353,"declarations":[{"type":"VariableDeclarator","start":38330,"end":38353,"id":{"type":"ArrayPattern","start":38330,"end":38353,"elements":[{"type":"Identifier","start":38331,"end":38345,"name":"collectionName"},{"type":"Identifier","start":38347,"end":38352,"name":"items"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":38357,"end":38383,"callee":{"type":"MemberExpression","start":38357,"end":38371,"object":{"type":"Identifier","start":38357,"end":38363,"name":"Object"},"property":{"type":"Identifier","start":38364,"end":38371,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38372,"end":38382,"name":"collection"}],"optional":false},"body":{"type":"BlockStatement","start":38385,"end":38460,"body":[{"type":"ExpressionStatement","start":38408,"end":38441,"expression":{"type":"AssignmentExpression","start":38408,"end":38440,"operator":"=","left":{"type":"MemberExpression","start":38408,"end":38432,"object":{"type":"Identifier","start":38408,"end":38416,"name":"datasMap"},"property":{"type":"Identifier","start":38417,"end":38431,"name":"collectionName"},"computed":true,"optional":false},"right":{"type":"Identifier","start":38435,"end":38440,"name":"items"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":38491,"end":38507,"argument":{"type":"Identifier","start":38498,"end":38506,"name":"datasMap"}}]}}],"optional":false},{"type":"CallExpression","start":38521,"end":38614,"callee":{"type":"Identifier","start":38521,"end":38524,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38525,"end":38613,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38526,"end":38530,"name":"data"}],"body":{"type":"BlockStatement","start":38535,"end":38613,"body":[{"type":"ReturnStatement","start":38550,"end":38602,"argument":{"type":"CallExpression","start":38557,"end":38601,"callee":{"type":"MemberExpression","start":38557,"end":38570,"object":{"type":"Identifier","start":38557,"end":38563,"name":"Object"},"property":{"type":"Identifier","start":38564,"end":38570,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38571,"end":38594,"callee":{"type":"MemberExpression","start":38571,"end":38584,"object":{"type":"Identifier","start":38571,"end":38577,"name":"Object"},"property":{"type":"Identifier","start":38578,"end":38584,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":38585,"end":38587,"properties":[]},{"type":"Identifier","start":38589,"end":38593,"name":"item"}],"optional":false},{"type":"Identifier","start":38596,"end":38600,"name":"data"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":38738,"end":39270,"static":false,"computed":false,"key":{"type":"Identifier","start":38738,"end":38770,"name":"listenForDocDeepRecursiveHelper$"},"kind":"method","value":{"type":"FunctionExpression","start":38770,"end":39270,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38771,"end":38777,"name":"docRef"},{"type":"AssignmentPattern","start":38779,"end":38804,"left":{"type":"Identifier","start":38779,"end":38799,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":38802,"end":38804,"elements":[]}},{"type":"AssignmentPattern","start":38806,"end":38854,"left":{"type":"Identifier","start":38806,"end":38822,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":38825,"end":38854,"object":{"type":"Identifier","start":38825,"end":38842,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":38843,"end":38854,"name":"RETURN_NULL"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":38856,"end":39270,"body":[{"type":"ReturnStatement","start":38902,"end":39263,"argument":{"type":"CallExpression","start":38909,"end":39262,"callee":{"type":"MemberExpression","start":38909,"end":38964,"object":{"type":"CallExpression","start":38909,"end":38959,"callee":{"type":"MemberExpression","start":38909,"end":38933,"object":{"type":"ThisExpression","start":38909,"end":38913},"property":{"type":"Identifier","start":38914,"end":38933,"name":"listenForDocSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38934,"end":38940,"name":"docRef"},{"type":"Identifier","start":38942,"end":38958,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":38960,"end":38964,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38965,"end":39261,"callee":{"type":"Identifier","start":38965,"end":38973,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":38974,"end":39260,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38975,"end":38979,"name":"item"}],"body":{"type":"BlockStatement","start":38984,"end":39260,"body":[{"type":"IfStatement","start":38999,"end":39068,"test":{"type":"BinaryExpression","start":39003,"end":39016,"left":{"type":"Identifier","start":39003,"end":39007,"name":"item"},"operator":"===","right":{"type":"Literal","start":39012,"end":39016,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":39018,"end":39068,"body":[{"type":"ReturnStatement","start":39037,"end":39053,"argument":{"type":"CallExpression","start":39044,"end":39052,"callee":{"type":"Identifier","start":39044,"end":39046,"name":"of"},"arguments":[{"type":"Identifier","start":39047,"end":39051,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":39082,"end":39170,"test":{"type":"BinaryExpression","start":39086,"end":39118,"left":{"type":"MemberExpression","start":39086,"end":39113,"object":{"type":"Identifier","start":39086,"end":39106,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":39107,"end":39113,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":39117,"end":39118,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":39120,"end":39170,"body":[{"type":"ReturnStatement","start":39139,"end":39155,"argument":{"type":"CallExpression","start":39146,"end":39154,"callee":{"type":"Identifier","start":39146,"end":39148,"name":"of"},"arguments":[{"type":"Identifier","start":39149,"end":39153,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":39184,"end":39249,"argument":{"type":"CallExpression","start":39191,"end":39248,"callee":{"type":"MemberExpression","start":39191,"end":39220,"object":{"type":"ThisExpression","start":39191,"end":39195},"property":{"type":"Identifier","start":39196,"end":39220,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39221,"end":39225,"name":"item"},{"type":"Identifier","start":39227,"end":39247,"name":"subCollectionQueries"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":39961,"end":41904,"static":false,"computed":false,"key":{"type":"Identifier","start":39961,"end":39971,"name":"addSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":39971,"end":41904,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39972,"end":39976,"name":"data"},{"type":"Identifier","start":39978,"end":39991,"name":"collectionRef"},{"type":"AssignmentPattern","start":39993,"end":40010,"left":{"type":"Identifier","start":39993,"end":40003,"name":"isAddDates"},"right":{"type":"Literal","start":40006,"end":40010,"value":true,"raw":"true"}},{"type":"Identifier","start":40012,"end":40014,"name":"id"}],"body":{"type":"BlockStatement","start":40016,"end":41904,"body":[{"type":"VariableDeclaration","start":40087,"end":40096,"declarations":[{"type":"VariableDeclarator","start":40091,"end":40095,"id":{"type":"Identifier","start":40091,"end":40095,"name":"res$"},"init":null}],"kind":"let"},{"type":"IfStatement","start":40106,"end":40283,"test":{"type":"Identifier","start":40110,"end":40120,"name":"isAddDates"},"consequent":{"type":"BlockStatement","start":40122,"end":40283,"body":[{"type":"VariableDeclaration","start":40137,"end":40161,"declarations":[{"type":"VariableDeclarator","start":40143,"end":40160,"id":{"type":"Identifier","start":40143,"end":40147,"name":"date"},"init":{"type":"NewExpression","start":40150,"end":40160,"callee":{"type":"Identifier","start":40154,"end":40158,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":40175,"end":40216,"expression":{"type":"AssignmentExpression","start":40175,"end":40215,"operator":"=","left":{"type":"Identifier","start":40175,"end":40179,"name":"data"},"right":{"type":"CallExpression","start":40182,"end":40215,"callee":{"type":"Identifier","start":40182,"end":40196,"name":"addCreatedDate"},"arguments":[{"type":"Identifier","start":40197,"end":40201,"name":"data"},{"type":"Literal","start":40203,"end":40208,"value":false,"raw":"false"},{"type":"Identifier","start":40210,"end":40214,"name":"date"}],"optional":false}}},{"type":"ExpressionStatement","start":40230,"end":40272,"expression":{"type":"AssignmentExpression","start":40230,"end":40271,"operator":"=","left":{"type":"Identifier","start":40230,"end":40234,"name":"data"},"right":{"type":"CallExpression","start":40237,"end":40271,"callee":{"type":"Identifier","start":40237,"end":40252,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":40253,"end":40257,"name":"data"},{"type":"Literal","start":40259,"end":40264,"value":false,"raw":"false"},{"type":"Identifier","start":40266,"end":40270,"name":"date"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":40293,"end":40519,"test":{"type":"BinaryExpression","start":40297,"end":40313,"left":{"type":"Identifier","start":40297,"end":40299,"name":"id"},"operator":"!==","right":{"type":"Identifier","start":40304,"end":40313,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":40315,"end":40438,"body":[{"type":"VariableDeclaration","start":40330,"end":40380,"declarations":[{"type":"VariableDeclarator","start":40336,"end":40379,"id":{"type":"Identifier","start":40336,"end":40342,"name":"docRef"},"init":{"type":"CallExpression","start":40345,"end":40379,"callee":{"type":"Identifier","start":40345,"end":40360,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":40361,"end":40374,"name":"collectionRef"},{"type":"Identifier","start":40376,"end":40378,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":40394,"end":40427,"expression":{"type":"AssignmentExpression","start":40394,"end":40426,"operator":"=","left":{"type":"Identifier","start":40394,"end":40398,"name":"res$"},"right":{"type":"CallExpression","start":40401,"end":40426,"callee":{"type":"MemberExpression","start":40401,"end":40412,"object":{"type":"MemberExpression","start":40401,"end":40408,"object":{"type":"ThisExpression","start":40401,"end":40405},"property":{"type":"Identifier","start":40406,"end":40408,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40409,"end":40412,"name":"set"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40413,"end":40419,"name":"docRef"},{"type":"Identifier","start":40421,"end":40425,"name":"data"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":40453,"end":40519,"body":[{"type":"ExpressionStatement","start":40468,"end":40508,"expression":{"type":"AssignmentExpression","start":40468,"end":40507,"operator":"=","left":{"type":"Identifier","start":40468,"end":40472,"name":"res$"},"right":{"type":"CallExpression","start":40475,"end":40507,"callee":{"type":"MemberExpression","start":40475,"end":40486,"object":{"type":"MemberExpression","start":40475,"end":40482,"object":{"type":"ThisExpression","start":40475,"end":40479},"property":{"type":"Identifier","start":40480,"end":40482,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40483,"end":40486,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40487,"end":40500,"name":"collectionRef"},{"type":"Identifier","start":40502,"end":40506,"name":"data"}],"optional":false}}}]}},{"type":"ExpressionStatement","start":40769,"end":41861,"expression":{"type":"AssignmentExpression","start":40769,"end":41860,"operator":"=","left":{"type":"Identifier","start":40769,"end":40773,"name":"res$"},"right":{"type":"CallExpression","start":40776,"end":41860,"callee":{"type":"MemberExpression","start":40776,"end":40785,"object":{"type":"Identifier","start":40776,"end":40780,"name":"res$"},"property":{"type":"Identifier","start":40781,"end":40785,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":40961,"end":41859,"callee":{"type":"Identifier","start":40961,"end":40964,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":40965,"end":41858,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":40966,"end":40969,"name":"ref"}],"body":{"type":"BlockStatement","start":40974,"end":41858,"body":[{"type":"IfStatement","start":40989,"end":41847,"test":{"type":"LogicalExpression","start":40993,"end":41016,"left":{"type":"BinaryExpression","start":40993,"end":41009,"left":{"type":"Identifier","start":40993,"end":40995,"name":"id"},"operator":"===","right":{"type":"Identifier","start":41000,"end":41009,"name":"undefined"}},"operator":"&&","right":{"type":"Identifier","start":41013,"end":41016,"name":"ref"}},"consequent":{"type":"BlockStatement","start":41018,"end":41348,"body":[{"type":"VariableDeclaration","start":41037,"end":41059,"declarations":[{"type":"VariableDeclarator","start":41043,"end":41058,"id":{"type":"Identifier","start":41043,"end":41047,"name":"path"},"init":{"type":"MemberExpression","start":41050,"end":41058,"object":{"type":"Identifier","start":41050,"end":41053,"name":"ref"},"property":{"type":"Identifier","start":41054,"end":41058,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":41077,"end":41246,"declarations":[{"type":"VariableDeclarator","start":41083,"end":41245,"id":{"type":"Identifier","start":41083,"end":41100,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41103,"end":41245,"properties":[{"type":"Property","start":41126,"end":41136,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41126,"end":41128,"name":"id"},"value":{"type":"MemberExpression","start":41130,"end":41136,"object":{"type":"Identifier","start":41130,"end":41133,"name":"ref"},"property":{"type":"Identifier","start":41134,"end":41136,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":41159,"end":41163,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41159,"end":41163,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41159,"end":41163,"name":"path"}},{"type":"Property","start":41186,"end":41189,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41186,"end":41189,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41186,"end":41189,"name":"ref"}},{"type":"Property","start":41212,"end":41226,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41212,"end":41220,"name":"isExists"},"value":{"type":"Literal","start":41222,"end":41226,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41264,"end":41333,"argument":{"type":"CallExpression","start":41271,"end":41332,"callee":{"type":"MemberExpression","start":41271,"end":41284,"object":{"type":"Identifier","start":41271,"end":41277,"name":"Object"},"property":{"type":"Identifier","start":41278,"end":41284,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41285,"end":41308,"callee":{"type":"MemberExpression","start":41285,"end":41298,"object":{"type":"Identifier","start":41285,"end":41291,"name":"Object"},"property":{"type":"Identifier","start":41292,"end":41298,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":41299,"end":41301,"properties":[]},{"type":"Identifier","start":41303,"end":41307,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":41310,"end":41331,"properties":[{"type":"Property","start":41312,"end":41329,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41312,"end":41329,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41312,"end":41329,"name":"firestoreMetadata"}}]}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":41367,"end":41847,"body":[{"type":"VariableDeclaration","start":41455,"end":41498,"declarations":[{"type":"VariableDeclarator","start":41461,"end":41497,"id":{"type":"Identifier","start":41461,"end":41465,"name":"path"},"init":{"type":"BinaryExpression","start":41468,"end":41497,"left":{"type":"BinaryExpression","start":41468,"end":41492,"left":{"type":"MemberExpression","start":41468,"end":41486,"object":{"type":"Identifier","start":41468,"end":41481,"name":"collectionRef"},"property":{"type":"Identifier","start":41482,"end":41486,"name":"path"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":41489,"end":41492,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":41495,"end":41497,"name":"id"}}}],"kind":"const"},{"type":"ExpressionStatement","start":41516,"end":41562,"expression":{"type":"AssignmentExpression","start":41516,"end":41561,"operator":"=","left":{"type":"Identifier","start":41516,"end":41519,"name":"ref"},"right":{"type":"CallExpression","start":41522,"end":41561,"callee":{"type":"Identifier","start":41522,"end":41536,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":41537,"end":41541,"name":"path"},{"type":"MemberExpression","start":41543,"end":41560,"object":{"type":"MemberExpression","start":41543,"end":41550,"object":{"type":"ThisExpression","start":41543,"end":41547},"property":{"type":"Identifier","start":41548,"end":41550,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":41551,"end":41560,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":41580,"end":41745,"declarations":[{"type":"VariableDeclarator","start":41586,"end":41744,"id":{"type":"Identifier","start":41586,"end":41603,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41606,"end":41744,"properties":[{"type":"Property","start":41629,"end":41635,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41629,"end":41631,"name":"id"},"value":{"type":"Identifier","start":41633,"end":41635,"name":"id"},"kind":"init"},{"type":"Property","start":41658,"end":41661,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41658,"end":41661,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41658,"end":41661,"name":"ref"}},{"type":"Property","start":41684,"end":41688,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41684,"end":41688,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41684,"end":41688,"name":"path"}},{"type":"Property","start":41711,"end":41725,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41711,"end":41719,"name":"isExists"},"value":{"type":"Literal","start":41721,"end":41725,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41763,"end":41832,"argument":{"type":"CallExpression","start":41770,"end":41831,"callee":{"type":"MemberExpression","start":41770,"end":41783,"object":{"type":"Identifier","start":41770,"end":41776,"name":"Object"},"property":{"type":"Identifier","start":41777,"end":41783,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41784,"end":41807,"callee":{"type":"MemberExpression","start":41784,"end":41797,"object":{"type":"Identifier","start":41784,"end":41790,"name":"Object"},"property":{"type":"Identifier","start":41791,"end":41797,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":41798,"end":41800,"properties":[]},{"type":"Identifier","start":41802,"end":41806,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":41809,"end":41830,"properties":[{"type":"Property","start":41811,"end":41828,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41811,"end":41828,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41811,"end":41828,"name":"firestoreMetadata"}}]}],"optional":false}}]}}]}}],"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":41871,"end":41897,"argument":{"type":"CallExpression","start":41878,"end":41896,"callee":{"type":"MemberExpression","start":41878,"end":41887,"object":{"type":"Identifier","start":41878,"end":41882,"name":"res$"},"property":{"type":"Identifier","start":41883,"end":41887,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41888,"end":41895,"callee":{"type":"Identifier","start":41888,"end":41892,"name":"take"},"arguments":[{"type":"Literal","start":41893,"end":41894,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":41986,"end":42189,"static":false,"computed":false,"key":{"type":"Identifier","start":41986,"end":41999,"name":"updateSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":41999,"end":42189,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42000,"end":42004,"name":"data"},{"type":"Identifier","start":42006,"end":42012,"name":"docRef"},{"type":"AssignmentPattern","start":42014,"end":42038,"left":{"type":"Identifier","start":42014,"end":42031,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42034,"end":42038,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":42040,"end":42189,"body":[{"type":"IfStatement","start":42051,"end":42136,"test":{"type":"Identifier","start":42055,"end":42072,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42074,"end":42136,"body":[{"type":"ExpressionStatement","start":42089,"end":42125,"expression":{"type":"AssignmentExpression","start":42089,"end":42124,"operator":"=","left":{"type":"Identifier","start":42089,"end":42093,"name":"data"},"right":{"type":"CallExpression","start":42096,"end":42124,"callee":{"type":"Identifier","start":42096,"end":42111,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42112,"end":42116,"name":"data"},{"type":"Literal","start":42118,"end":42123,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":42146,"end":42182,"argument":{"type":"CallExpression","start":42153,"end":42181,"callee":{"type":"MemberExpression","start":42153,"end":42167,"object":{"type":"MemberExpression","start":42153,"end":42160,"object":{"type":"ThisExpression","start":42153,"end":42157},"property":{"type":"Identifier","start":42158,"end":42160,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42161,"end":42167,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42168,"end":42174,"name":"docRef"},{"type":"Identifier","start":42176,"end":42180,"name":"data"}],"optional":false}}]}}},{"type":"MethodDefinition","start":42266,"end":43984,"static":false,"computed":false,"key":{"type":"Identifier","start":42266,"end":42289,"name":"updateDeepToBatchHelper"},"kind":"method","value":{"type":"FunctionExpression","start":42289,"end":43984,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42290,"end":42294,"name":"data"},{"type":"Identifier","start":42296,"end":42302,"name":"docRef"},{"type":"AssignmentPattern","start":42304,"end":42329,"left":{"type":"Identifier","start":42304,"end":42324,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":42327,"end":42329,"elements":[]}},{"type":"AssignmentPattern","start":42331,"end":42355,"left":{"type":"Identifier","start":42331,"end":42348,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42351,"end":42355,"value":true,"raw":"true"}},{"type":"Identifier","start":42357,"end":42362,"name":"batch"}],"body":{"type":"BlockStatement","start":42364,"end":43984,"body":[{"type":"VariableDeclaration","start":42375,"end":42386,"declarations":[{"type":"VariableDeclarator","start":42379,"end":42381,"id":{"type":"Identifier","start":42379,"end":42381,"name":"_a"},"init":null},{"type":"VariableDeclarator","start":42383,"end":42385,"id":{"type":"Identifier","start":42383,"end":42385,"name":"_b"},"init":null}],"kind":"var"},{"type":"IfStatement","start":42396,"end":42485,"test":{"type":"BinaryExpression","start":42400,"end":42419,"left":{"type":"Identifier","start":42400,"end":42405,"name":"batch"},"operator":"===","right":{"type":"Identifier","start":42410,"end":42419,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":42421,"end":42485,"body":[{"type":"ExpressionStatement","start":42436,"end":42474,"expression":{"type":"AssignmentExpression","start":42436,"end":42473,"operator":"=","left":{"type":"Identifier","start":42436,"end":42441,"name":"batch"},"right":{"type":"CallExpression","start":42444,"end":42473,"callee":{"type":"Identifier","start":42444,"end":42454,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":42455,"end":42472,"object":{"type":"MemberExpression","start":42455,"end":42462,"object":{"type":"ThisExpression","start":42455,"end":42459},"property":{"type":"Identifier","start":42460,"end":42462,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42463,"end":42472,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":42495,"end":42580,"test":{"type":"Identifier","start":42499,"end":42516,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42518,"end":42580,"body":[{"type":"ExpressionStatement","start":42533,"end":42569,"expression":{"type":"AssignmentExpression","start":42533,"end":42568,"operator":"=","left":{"type":"Identifier","start":42533,"end":42537,"name":"data"},"right":{"type":"CallExpression","start":42540,"end":42568,"callee":{"type":"Identifier","start":42540,"end":42555,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42556,"end":42560,"name":"data"},{"type":"Literal","start":42562,"end":42567,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":42590,"end":42678,"declarations":[{"type":"VariableDeclarator","start":42596,"end":42677,"id":{"type":"Identifier","start":42596,"end":42601,"name":"split"},"init":{"type":"CallExpression","start":42604,"end":42677,"callee":{"type":"MemberExpression","start":42604,"end":42649,"object":{"type":"ThisExpression","start":42604,"end":42608},"property":{"type":"Identifier","start":42609,"end":42649,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42650,"end":42654,"name":"data"},{"type":"Identifier","start":42656,"end":42676,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42688,"end":42724,"declarations":[{"type":"VariableDeclarator","start":42694,"end":42723,"id":{"type":"Identifier","start":42694,"end":42704,"name":"currentDoc"},"init":{"type":"MemberExpression","start":42707,"end":42723,"object":{"type":"Identifier","start":42707,"end":42712,"name":"split"},"property":{"type":"Identifier","start":42713,"end":42723,"name":"currentDoc"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42734,"end":42778,"declarations":[{"type":"VariableDeclarator","start":42740,"end":42777,"id":{"type":"Identifier","start":42740,"end":42754,"name":"subCollections"},"init":{"type":"MemberExpression","start":42757,"end":42777,"object":{"type":"Identifier","start":42757,"end":42762,"name":"split"},"property":{"type":"Identifier","start":42763,"end":42777,"name":"subCollections"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":42841,"end":42874,"expression":{"type":"CallExpression","start":42841,"end":42873,"callee":{"type":"MemberExpression","start":42841,"end":42853,"object":{"type":"Identifier","start":42841,"end":42846,"name":"batch"},"property":{"type":"Identifier","start":42847,"end":42853,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42854,"end":42860,"name":"docRef"},{"type":"Identifier","start":42862,"end":42872,"name":"currentDoc"}],"optional":false}},{"type":"ForOfStatement","start":42884,"end":43954,"await":false,"left":{"type":"VariableDeclaration","start":42889,"end":42932,"declarations":[{"type":"VariableDeclarator","start":42895,"end":42932,"id":{"type":"ArrayPattern","start":42895,"end":42932,"elements":[{"type":"Identifier","start":42896,"end":42912,"name":"subCollectionKey"},{"type":"Identifier","start":42914,"end":42931,"name":"subDocUpdateValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":42936,"end":42966,"callee":{"type":"MemberExpression","start":42936,"end":42950,"object":{"type":"Identifier","start":42936,"end":42942,"name":"Object"},"property":{"type":"Identifier","start":42943,"end":42950,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42951,"end":42965,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":42968,"end":43954,"body":[{"type":"VariableDeclaration","start":42983,"end":43011,"declarations":[{"type":"VariableDeclarator","start":42987,"end":43010,"id":{"type":"Identifier","start":42987,"end":43010,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":43065,"end":43078,"declarations":[{"type":"VariableDeclarator","start":43069,"end":43077,"id":{"type":"Identifier","start":43069,"end":43077,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":43092,"end":43466,"test":{"type":"Identifier","start":43096,"end":43116,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":43118,"end":43466,"body":[{"type":"ExpressionStatement","start":43137,"end":43297,"expression":{"type":"AssignmentExpression","start":43137,"end":43296,"operator":"=","left":{"type":"Identifier","start":43137,"end":43160,"name":"subSubCollectionWriters"},"right":{"type":"ConditionalExpression","start":43163,"end":43296,"test":{"type":"LogicalExpression","start":43163,"end":43267,"left":{"type":"BinaryExpression","start":43163,"end":43250,"left":{"type":"AssignmentExpression","start":43164,"end":43240,"operator":"=","left":{"type":"Identifier","start":43164,"end":43166,"name":"_a"},"right":{"type":"CallExpression","start":43169,"end":43240,"callee":{"type":"MemberExpression","start":43169,"end":43194,"object":{"type":"Identifier","start":43169,"end":43189,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43190,"end":43194,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43195,"end":43239,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43195,"end":43202,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43206,"end":43239,"left":{"type":"MemberExpression","start":43206,"end":43218,"object":{"type":"Identifier","start":43206,"end":43213,"name":"subColl"},"property":{"type":"Identifier","start":43214,"end":43218,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43223,"end":43239,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":43246,"end":43250,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":43254,"end":43267,"left":{"type":"Identifier","start":43254,"end":43256,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":43261,"end":43267,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43266,"end":43267,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":43270,"end":43276,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43275,"end":43276,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":43279,"end":43296,"object":{"type":"Identifier","start":43279,"end":43281,"name":"_a"},"property":{"type":"Identifier","start":43282,"end":43296,"name":"subCollections"},"computed":false,"optional":false}}}},{"type":"ExpressionStatement","start":43315,"end":43451,"expression":{"type":"AssignmentExpression","start":43315,"end":43450,"operator":"=","left":{"type":"Identifier","start":43315,"end":43323,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43326,"end":43450,"test":{"type":"LogicalExpression","start":43326,"end":43430,"left":{"type":"BinaryExpression","start":43326,"end":43413,"left":{"type":"AssignmentExpression","start":43327,"end":43403,"operator":"=","left":{"type":"Identifier","start":43327,"end":43329,"name":"_b"},"right":{"type":"CallExpression","start":43332,"end":43403,"callee":{"type":"MemberExpression","start":43332,"end":43357,"object":{"type":"Identifier","start":43332,"end":43352,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43353,"end":43357,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43358,"end":43402,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43358,"end":43365,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43369,"end":43402,"left":{"type":"MemberExpression","start":43369,"end":43381,"object":{"type":"Identifier","start":43369,"end":43376,"name":"subColl"},"property":{"type":"Identifier","start":43377,"end":43381,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43386,"end":43402,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":43409,"end":43413,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":43417,"end":43430,"left":{"type":"Identifier","start":43417,"end":43419,"name":"_b"},"operator":"===","right":{"type":"UnaryExpression","start":43424,"end":43430,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43429,"end":43430,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":43433,"end":43439,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43438,"end":43439,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":43442,"end":43450,"object":{"type":"Identifier","start":43442,"end":43444,"name":"_b"},"property":{"type":"Identifier","start":43445,"end":43450,"name":"docId"},"computed":false,"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":43480,"end":43545,"expression":{"type":"AssignmentExpression","start":43480,"end":43544,"operator":"=","left":{"type":"Identifier","start":43480,"end":43488,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43491,"end":43544,"test":{"type":"BinaryExpression","start":43491,"end":43513,"left":{"type":"Identifier","start":43491,"end":43499,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":43504,"end":43513,"name":"undefined"}},"consequent":{"type":"Identifier","start":43516,"end":43524,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":43527,"end":43544,"object":{"type":"ThisExpression","start":43527,"end":43531},"property":{"type":"Identifier","start":43532,"end":43544,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":43675,"end":43740,"declarations":[{"type":"VariableDeclarator","start":43681,"end":43739,"id":{"type":"Identifier","start":43681,"end":43694,"name":"subCollection"},"init":{"type":"CallExpression","start":43697,"end":43739,"callee":{"type":"Identifier","start":43697,"end":43713,"name":"getSubCollection"},"arguments":[{"type":"Identifier","start":43714,"end":43720,"name":"docRef"},{"type":"Identifier","start":43722,"end":43738,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43754,"end":43812,"declarations":[{"type":"VariableDeclarator","start":43760,"end":43811,"id":{"type":"Identifier","start":43760,"end":43768,"name":"subDocFs"},"init":{"type":"CallExpression","start":43771,"end":43811,"callee":{"type":"Identifier","start":43771,"end":43786,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":43787,"end":43800,"name":"subCollection"},{"type":"Identifier","start":43802,"end":43810,"name":"subDocId"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":43826,"end":43943,"expression":{"type":"AssignmentExpression","start":43826,"end":43942,"operator":"=","left":{"type":"Identifier","start":43826,"end":43831,"name":"batch"},"right":{"type":"CallExpression","start":43834,"end":43942,"callee":{"type":"MemberExpression","start":43834,"end":43862,"object":{"type":"ThisExpression","start":43834,"end":43838},"property":{"type":"Identifier","start":43839,"end":43862,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43863,"end":43880,"name":"subDocUpdateValue"},{"type":"Identifier","start":43882,"end":43890,"name":"subDocFs"},{"type":"Identifier","start":43892,"end":43915,"name":"subSubCollectionWriters"},{"type":"Identifier","start":43917,"end":43934,"name":"isAddModifiedDate"},{"type":"Identifier","start":43936,"end":43941,"name":"batch"}],"optional":false}}}]}},{"type":"ReturnStatement","start":43964,"end":43977,"argument":{"type":"Identifier","start":43971,"end":43976,"name":"batch"}}]}}},{"type":"MethodDefinition","start":44455,"end":46673,"static":false,"computed":false,"key":{"type":"Identifier","start":44455,"end":44492,"name":"getBatchFromTransferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":44492,"end":46673,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":44493,"end":44506,"name":"previousArray"},{"type":"Identifier","start":44508,"end":44520,"name":"currentArray"},{"type":"Identifier","start":44522,"end":44535,"name":"previousIndex"},{"type":"Identifier","start":44537,"end":44549,"name":"currentIndex"},{"type":"Identifier","start":44551,"end":44567,"name":"currentArrayName"},{"type":"Identifier","start":44569,"end":44600,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":44602,"end":44640,"left":{"type":"Identifier","start":44602,"end":44633,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":44636,"end":44640,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":44642,"end":44657,"left":{"type":"Identifier","start":44642,"end":44649,"name":"useCopy"},"right":{"type":"Literal","start":44652,"end":44657,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":44659,"end":46673,"body":[{"type":"VariableDeclaration","start":44670,"end":44692,"declarations":[{"type":"VariableDeclarator","start":44674,"end":44691,"id":{"type":"Identifier","start":44674,"end":44691,"name":"usedPreviousArray"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":44702,"end":44723,"declarations":[{"type":"VariableDeclarator","start":44706,"end":44722,"id":{"type":"Identifier","start":44706,"end":44722,"name":"usedCurrentArray"},"init":null}],"kind":"let"},{"type":"IfStatement","start":44733,"end":45011,"test":{"type":"Identifier","start":44737,"end":44744,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":44746,"end":44890,"body":[{"type":"ExpressionStatement","start":44761,"end":44814,"expression":{"type":"AssignmentExpression","start":44761,"end":44813,"operator":"=","left":{"type":"Identifier","start":44761,"end":44778,"name":"usedPreviousArray"},"right":{"type":"CallExpression","start":44781,"end":44813,"callee":{"type":"MemberExpression","start":44781,"end":44794,"object":{"type":"Identifier","start":44781,"end":44787,"name":"Object"},"property":{"type":"Identifier","start":44788,"end":44794,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44795,"end":44797,"elements":[]},{"type":"Identifier","start":44799,"end":44812,"name":"previousArray"}],"optional":false}}},{"type":"ExpressionStatement","start":44828,"end":44879,"expression":{"type":"AssignmentExpression","start":44828,"end":44878,"operator":"=","left":{"type":"Identifier","start":44828,"end":44844,"name":"usedCurrentArray"},"right":{"type":"CallExpression","start":44847,"end":44878,"callee":{"type":"MemberExpression","start":44847,"end":44860,"object":{"type":"Identifier","start":44847,"end":44853,"name":"Object"},"property":{"type":"Identifier","start":44854,"end":44860,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44861,"end":44863,"elements":[]},{"type":"Identifier","start":44865,"end":44877,"name":"currentArray"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":44905,"end":45011,"body":[{"type":"ExpressionStatement","start":44920,"end":44954,"expression":{"type":"AssignmentExpression","start":44920,"end":44953,"operator":"=","left":{"type":"Identifier","start":44920,"end":44937,"name":"usedPreviousArray"},"right":{"type":"Identifier","start":44940,"end":44953,"name":"previousArray"}}},{"type":"ExpressionStatement","start":44968,"end":45000,"expression":{"type":"AssignmentExpression","start":44968,"end":44999,"operator":"=","left":{"type":"Identifier","start":44968,"end":44984,"name":"usedCurrentArray"},"right":{"type":"Identifier","start":44987,"end":44999,"name":"currentArray"}}}]}},{"type":"ExpressionStatement","start":45021,"end":45105,"expression":{"type":"CallExpression","start":45021,"end":45104,"callee":{"type":"Identifier","start":45021,"end":45038,"name":"transferArrayItem"},"arguments":[{"type":"Identifier","start":45039,"end":45056,"name":"usedPreviousArray"},{"type":"Identifier","start":45058,"end":45074,"name":"usedCurrentArray"},{"type":"Identifier","start":45076,"end":45089,"name":"previousIndex"},{"type":"Identifier","start":45091,"end":45103,"name":"currentIndex"}],"optional":false}},{"type":"VariableDeclaration","start":45115,"end":45159,"declarations":[{"type":"VariableDeclarator","start":45121,"end":45158,"id":{"type":"Identifier","start":45121,"end":45126,"name":"batch"},"init":{"type":"CallExpression","start":45129,"end":45158,"callee":{"type":"Identifier","start":45129,"end":45139,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":45140,"end":45157,"object":{"type":"MemberExpression","start":45140,"end":45147,"object":{"type":"ThisExpression","start":45140,"end":45144},"property":{"type":"Identifier","start":45145,"end":45147,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45148,"end":45157,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45169,"end":45908,"test":{"type":"BinaryExpression","start":45173,"end":45218,"left":{"type":"Identifier","start":45173,"end":45204,"name":"additionalDataUpdateOnMovedItem"},"operator":"!==","right":{"type":"Identifier","start":45209,"end":45218,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":45220,"end":45908,"body":[{"type":"VariableDeclaration","start":45235,"end":45284,"declarations":[{"type":"VariableDeclarator","start":45241,"end":45283,"id":{"type":"Identifier","start":45241,"end":45250,"name":"movedItem"},"init":{"type":"MemberExpression","start":45253,"end":45283,"object":{"type":"Identifier","start":45253,"end":45269,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45270,"end":45282,"name":"currentIndex"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45298,"end":45351,"declarations":[{"type":"VariableDeclarator","start":45304,"end":45350,"id":{"type":"Identifier","start":45304,"end":45316,"name":"movedItemRef"},"init":{"type":"MemberExpression","start":45319,"end":45350,"object":{"type":"MemberExpression","start":45319,"end":45346,"object":{"type":"Identifier","start":45319,"end":45328,"name":"movedItem"},"property":{"type":"Identifier","start":45329,"end":45346,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45347,"end":45350,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45365,"end":45477,"declarations":[{"type":"VariableDeclarator","start":45371,"end":45476,"id":{"type":"Identifier","start":45371,"end":45375,"name":"data"},"init":{"type":"CallExpression","start":45378,"end":45476,"callee":{"type":"MemberExpression","start":45378,"end":45391,"object":{"type":"Identifier","start":45378,"end":45384,"name":"Object"},"property":{"type":"Identifier","start":45385,"end":45391,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":45392,"end":45442,"callee":{"type":"MemberExpression","start":45392,"end":45405,"object":{"type":"Identifier","start":45392,"end":45398,"name":"Object"},"property":{"type":"Identifier","start":45399,"end":45405,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":45406,"end":45408,"properties":[]},{"type":"Identifier","start":45410,"end":45441,"name":"additionalDataUpdateOnMovedItem"}],"optional":false},{"type":"ObjectExpression","start":45444,"end":45475,"properties":[{"type":"Property","start":45446,"end":45473,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45446,"end":45455,"name":"groupName"},"value":{"type":"Identifier","start":45457,"end":45473,"name":"currentArrayName"},"kind":"init"}]}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45491,"end":45576,"test":{"type":"UnaryExpression","start":45495,"end":45503,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45496,"end":45503,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45505,"end":45576,"body":[{"type":"ExpressionStatement","start":45524,"end":45561,"expression":{"type":"CallExpression","start":45524,"end":45560,"callee":{"type":"Identifier","start":45524,"end":45537,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":45538,"end":45547,"name":"movedItem"},{"type":"Identifier","start":45549,"end":45553,"name":"data"},{"type":"Literal","start":45555,"end":45559,"value":true,"raw":"true"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":45590,"end":45850,"test":{"type":"Identifier","start":45594,"end":45625,"name":"isUpdateModifiedDateOnMovedItem"},"consequent":{"type":"BlockStatement","start":45627,"end":45850,"body":[{"type":"VariableDeclaration","start":45646,"end":45670,"declarations":[{"type":"VariableDeclarator","start":45652,"end":45669,"id":{"type":"Identifier","start":45652,"end":45656,"name":"date"},"init":{"type":"NewExpression","start":45659,"end":45669,"callee":{"type":"Identifier","start":45663,"end":45667,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":45688,"end":45722,"expression":{"type":"CallExpression","start":45688,"end":45721,"callee":{"type":"Identifier","start":45688,"end":45703,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45704,"end":45708,"name":"data"},{"type":"Literal","start":45710,"end":45714,"value":true,"raw":"true"},{"type":"Identifier","start":45716,"end":45720,"name":"date"}],"optional":false}},{"type":"IfStatement","start":45740,"end":45835,"test":{"type":"UnaryExpression","start":45744,"end":45752,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45745,"end":45752,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45754,"end":45835,"body":[{"type":"ExpressionStatement","start":45777,"end":45816,"expression":{"type":"CallExpression","start":45777,"end":45815,"callee":{"type":"Identifier","start":45777,"end":45792,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45793,"end":45802,"name":"movedItem"},{"type":"Literal","start":45804,"end":45808,"value":true,"raw":"true"},{"type":"Identifier","start":45810,"end":45814,"name":"date"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":45864,"end":45897,"expression":{"type":"CallExpression","start":45864,"end":45896,"callee":{"type":"MemberExpression","start":45864,"end":45876,"object":{"type":"Identifier","start":45864,"end":45869,"name":"batch"},"property":{"type":"Identifier","start":45870,"end":45876,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45877,"end":45889,"name":"movedItemRef"},{"type":"Identifier","start":45891,"end":45895,"name":"data"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":45918,"end":45989,"declarations":[{"type":"VariableDeclarator","start":45924,"end":45988,"id":{"type":"Identifier","start":45924,"end":45949,"name":"currentArraySliceToUpdate"},"init":{"type":"CallExpression","start":45952,"end":45988,"callee":{"type":"MemberExpression","start":45952,"end":45974,"object":{"type":"Identifier","start":45952,"end":45968,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45969,"end":45974,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45975,"end":45987,"name":"currentIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45999,"end":46020,"declarations":[{"type":"VariableDeclarator","start":46003,"end":46019,"id":{"type":"Identifier","start":46003,"end":46004,"name":"i"},"init":{"type":"Identifier","start":46007,"end":46019,"name":"currentIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":46030,"end":46279,"await":false,"left":{"type":"VariableDeclaration","start":46035,"end":46045,"declarations":[{"type":"VariableDeclarator","start":46041,"end":46045,"id":{"type":"Identifier","start":46041,"end":46045,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46049,"end":46074,"name":"currentArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46076,"end":46279,"body":[{"type":"ExpressionStatement","start":46118,"end":46173,"expression":{"type":"CallExpression","start":46118,"end":46172,"callee":{"type":"MemberExpression","start":46118,"end":46130,"object":{"type":"Identifier","start":46118,"end":46123,"name":"batch"},"property":{"type":"Identifier","start":46124,"end":46130,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46131,"end":46157,"object":{"type":"MemberExpression","start":46131,"end":46153,"object":{"type":"Identifier","start":46131,"end":46135,"name":"item"},"property":{"type":"Identifier","start":46136,"end":46153,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46154,"end":46157,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46159,"end":46171,"properties":[{"type":"Property","start":46161,"end":46169,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46161,"end":46166,"name":"index"},"value":{"type":"Identifier","start":46168,"end":46169,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46187,"end":46250,"test":{"type":"UnaryExpression","start":46191,"end":46199,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46192,"end":46199,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46201,"end":46250,"body":[{"type":"ExpressionStatement","start":46220,"end":46235,"expression":{"type":"AssignmentExpression","start":46220,"end":46234,"operator":"=","left":{"type":"MemberExpression","start":46220,"end":46230,"object":{"type":"Identifier","start":46220,"end":46224,"name":"item"},"property":{"type":"Identifier","start":46225,"end":46230,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46233,"end":46234,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46264,"end":46268,"expression":{"type":"UpdateExpression","start":46264,"end":46267,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46264,"end":46265,"name":"i"}}}]}},{"type":"VariableDeclaration","start":46289,"end":46359,"declarations":[{"type":"VariableDeclarator","start":46295,"end":46358,"id":{"type":"Identifier","start":46295,"end":46317,"name":"prevArraySliceToUpdate"},"init":{"type":"CallExpression","start":46320,"end":46358,"callee":{"type":"MemberExpression","start":46320,"end":46343,"object":{"type":"Identifier","start":46320,"end":46337,"name":"usedPreviousArray"},"property":{"type":"Identifier","start":46338,"end":46343,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46344,"end":46357,"name":"previousIndex"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":46369,"end":46387,"expression":{"type":"AssignmentExpression","start":46369,"end":46386,"operator":"=","left":{"type":"Identifier","start":46369,"end":46370,"name":"i"},"right":{"type":"Identifier","start":46373,"end":46386,"name":"previousIndex"}}},{"type":"ForOfStatement","start":46397,"end":46643,"await":false,"left":{"type":"VariableDeclaration","start":46402,"end":46412,"declarations":[{"type":"VariableDeclarator","start":46408,"end":46412,"id":{"type":"Identifier","start":46408,"end":46412,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46416,"end":46438,"name":"prevArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46440,"end":46643,"body":[{"type":"ExpressionStatement","start":46482,"end":46537,"expression":{"type":"CallExpression","start":46482,"end":46536,"callee":{"type":"MemberExpression","start":46482,"end":46494,"object":{"type":"Identifier","start":46482,"end":46487,"name":"batch"},"property":{"type":"Identifier","start":46488,"end":46494,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46495,"end":46521,"object":{"type":"MemberExpression","start":46495,"end":46517,"object":{"type":"Identifier","start":46495,"end":46499,"name":"item"},"property":{"type":"Identifier","start":46500,"end":46517,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46518,"end":46521,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46523,"end":46535,"properties":[{"type":"Property","start":46525,"end":46533,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46525,"end":46530,"name":"index"},"value":{"type":"Identifier","start":46532,"end":46533,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46551,"end":46614,"test":{"type":"UnaryExpression","start":46555,"end":46563,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46556,"end":46563,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46565,"end":46614,"body":[{"type":"ExpressionStatement","start":46584,"end":46599,"expression":{"type":"AssignmentExpression","start":46584,"end":46598,"operator":"=","left":{"type":"MemberExpression","start":46584,"end":46594,"object":{"type":"Identifier","start":46584,"end":46588,"name":"item"},"property":{"type":"Identifier","start":46589,"end":46594,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46597,"end":46598,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46628,"end":46632,"expression":{"type":"UpdateExpression","start":46628,"end":46631,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46628,"end":46629,"name":"i"}}}]}},{"type":"ReturnStatement","start":46653,"end":46666,"argument":{"type":"Identifier","start":46660,"end":46665,"name":"batch"}}]}}},{"type":"MethodDefinition","start":46806,"end":46954,"static":false,"computed":false,"key":{"type":"Identifier","start":46806,"end":46827,"name":"deleteMultipleSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":46827,"end":46954,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46828,"end":46835,"name":"docRefs"}],"body":{"type":"BlockStatement","start":46837,"end":46954,"body":[{"type":"VariableDeclaration","start":46848,"end":46905,"declarations":[{"type":"VariableDeclarator","start":46854,"end":46904,"id":{"type":"Identifier","start":46854,"end":46859,"name":"batch"},"init":{"type":"CallExpression","start":46862,"end":46904,"callee":{"type":"MemberExpression","start":46862,"end":46895,"object":{"type":"ThisExpression","start":46862,"end":46866},"property":{"type":"Identifier","start":46867,"end":46895,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46896,"end":46903,"name":"docRefs"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":46915,"end":46947,"argument":{"type":"CallExpression","start":46922,"end":46946,"callee":{"type":"MemberExpression","start":46922,"end":46939,"object":{"type":"ThisExpression","start":46922,"end":46926},"property":{"type":"Identifier","start":46927,"end":46939,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46940,"end":46945,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":46960,"end":47155,"static":false,"computed":false,"key":{"type":"Identifier","start":46960,"end":46988,"name":"getDeleteMultipleSimpleBatch"},"kind":"method","value":{"type":"FunctionExpression","start":46988,"end":47155,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46989,"end":46996,"name":"docRefs"},{"type":"AssignmentPattern","start":46998,"end":47035,"left":{"type":"Identifier","start":46998,"end":47003,"name":"batch"},"right":{"type":"CallExpression","start":47006,"end":47035,"callee":{"type":"Identifier","start":47006,"end":47016,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":47017,"end":47034,"object":{"type":"MemberExpression","start":47017,"end":47024,"object":{"type":"ThisExpression","start":47017,"end":47021},"property":{"type":"Identifier","start":47022,"end":47024,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":47025,"end":47034,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":47037,"end":47155,"body":[{"type":"ExpressionStatement","start":47048,"end":47125,"expression":{"type":"CallExpression","start":47048,"end":47124,"callee":{"type":"MemberExpression","start":47048,"end":47063,"object":{"type":"Identifier","start":47048,"end":47055,"name":"docRefs"},"property":{"type":"Identifier","start":47056,"end":47063,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47064,"end":47123,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47065,"end":47071,"name":"docRef"}],"body":{"type":"BlockStatement","start":47076,"end":47123,"body":[{"type":"ExpressionStatement","start":47091,"end":47112,"expression":{"type":"CallExpression","start":47091,"end":47111,"callee":{"type":"MemberExpression","start":47091,"end":47103,"object":{"type":"Identifier","start":47091,"end":47096,"name":"batch"},"property":{"type":"Identifier","start":47097,"end":47103,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47104,"end":47110,"name":"docRef"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":47135,"end":47148,"argument":{"type":"Identifier","start":47142,"end":47147,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47442,"end":49121,"static":false,"computed":false,"key":{"type":"Identifier","start":47442,"end":47473,"name":"removeDataExtrasRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":47473,"end":49121,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47474,"end":47480,"name":"dbItem"},{"type":"AssignmentPattern","start":47482,"end":47507,"left":{"type":"Identifier","start":47482,"end":47502,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":47505,"end":47507,"elements":[]}},{"type":"AssignmentPattern","start":47509,"end":47538,"left":{"type":"Identifier","start":47509,"end":47533,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":47536,"end":47538,"elements":[]}}],"body":{"type":"BlockStatement","start":47540,"end":49121,"body":[{"type":"VariableDeclaration","start":47648,"end":47730,"declarations":[{"type":"VariableDeclarator","start":47654,"end":47729,"id":{"type":"Identifier","start":47654,"end":47672,"name":"extraPropertyNames"},"init":{"type":"CallExpression","start":47675,"end":47729,"callee":{"type":"MemberExpression","start":47675,"end":47703,"object":{"type":"ArrayExpression","start":47675,"end":47696,"elements":[{"type":"Literal","start":47676,"end":47695,"value":"firestoreMetadata","raw":"'firestoreMetadata'"}]},"property":{"type":"Identifier","start":47697,"end":47703,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47704,"end":47728,"name":"additionalFieldsToRemove"}],"optional":false}}],"kind":"const"},{"type":"ForOfStatement","start":47776,"end":47887,"await":false,"left":{"type":"VariableDeclaration","start":47781,"end":47804,"declarations":[{"type":"VariableDeclarator","start":47787,"end":47804,"id":{"type":"Identifier","start":47787,"end":47804,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":47808,"end":47826,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":47828,"end":47887,"body":[{"type":"ExpressionStatement","start":47843,"end":47876,"expression":{"type":"UnaryExpression","start":47843,"end":47875,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":47850,"end":47875,"object":{"type":"Identifier","start":47850,"end":47856,"name":"dbItem"},"property":{"type":"Identifier","start":47857,"end":47874,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":47897,"end":49090,"expression":{"type":"CallExpression","start":47897,"end":49089,"callee":{"type":"MemberExpression","start":47897,"end":47925,"object":{"type":"Identifier","start":47897,"end":47917,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":47918,"end":47925,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47926,"end":49088,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47926,"end":47929,"name":"col"}],"body":{"type":"BlockStatement","start":47933,"end":49088,"body":[{"type":"IfStatement","start":47948,"end":49077,"test":{"type":"CallExpression","start":47952,"end":47983,"callee":{"type":"MemberExpression","start":47952,"end":47965,"object":{"type":"Identifier","start":47952,"end":47957,"name":"Array"},"property":{"type":"Identifier","start":47958,"end":47965,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":47966,"end":47982,"object":{"type":"Identifier","start":47966,"end":47972,"name":"dbItem"},"property":{"type":"MemberExpression","start":47973,"end":47981,"object":{"type":"Identifier","start":47973,"end":47976,"name":"col"},"property":{"type":"Identifier","start":47977,"end":47981,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":47985,"end":48613,"body":[{"type":"VariableDeclaration","start":48058,"end":48088,"declarations":[{"type":"VariableDeclarator","start":48064,"end":48087,"id":{"type":"Identifier","start":48064,"end":48068,"name":"docs"},"init":{"type":"MemberExpression","start":48071,"end":48087,"object":{"type":"Identifier","start":48071,"end":48077,"name":"dbItem"},"property":{"type":"MemberExpression","start":48078,"end":48086,"object":{"type":"Identifier","start":48078,"end":48081,"name":"col"},"property":{"type":"Identifier","start":48082,"end":48086,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":48106,"end":48598,"expression":{"type":"CallExpression","start":48106,"end":48597,"callee":{"type":"MemberExpression","start":48106,"end":48118,"object":{"type":"Identifier","start":48106,"end":48110,"name":"docs"},"property":{"type":"Identifier","start":48111,"end":48118,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":48119,"end":48596,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48120,"end":48121,"name":"d"},{"type":"Identifier","start":48123,"end":48124,"name":"i"}],"body":{"type":"BlockStatement","start":48129,"end":48596,"body":[{"type":"IfStatement","start":48152,"end":48577,"test":{"type":"MemberExpression","start":48156,"end":48174,"object":{"type":"Identifier","start":48156,"end":48159,"name":"col"},"property":{"type":"Identifier","start":48160,"end":48174,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48176,"end":48312,"body":[{"type":"ExpressionStatement","start":48203,"end":48289,"expression":{"type":"CallExpression","start":48203,"end":48288,"callee":{"type":"MemberExpression","start":48203,"end":48239,"object":{"type":"ThisExpression","start":48203,"end":48207},"property":{"type":"Identifier","start":48208,"end":48239,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48240,"end":48241,"name":"d"},{"type":"MemberExpression","start":48243,"end":48261,"object":{"type":"Identifier","start":48243,"end":48246,"name":"col"},"property":{"type":"Identifier","start":48247,"end":48261,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48263,"end":48287,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48339,"end":48577,"body":[{"type":"ForOfStatement","start":48398,"end":48554,"await":false,"left":{"type":"VariableDeclaration","start":48403,"end":48426,"declarations":[{"type":"VariableDeclarator","start":48409,"end":48426,"id":{"type":"Identifier","start":48409,"end":48426,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48430,"end":48448,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48450,"end":48554,"body":[{"type":"ExpressionStatement","start":48481,"end":48527,"expression":{"type":"UnaryExpression","start":48481,"end":48526,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48488,"end":48526,"object":{"type":"MemberExpression","start":48488,"end":48507,"object":{"type":"MemberExpression","start":48488,"end":48504,"object":{"type":"Identifier","start":48488,"end":48494,"name":"dbItem"},"property":{"type":"MemberExpression","start":48495,"end":48503,"object":{"type":"Identifier","start":48495,"end":48498,"name":"col"},"property":{"type":"Identifier","start":48499,"end":48503,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48505,"end":48506,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":48508,"end":48525,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48632,"end":49077,"body":[{"type":"IfStatement","start":48685,"end":49062,"test":{"type":"MemberExpression","start":48689,"end":48707,"object":{"type":"Identifier","start":48689,"end":48692,"name":"col"},"property":{"type":"Identifier","start":48693,"end":48707,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48709,"end":48852,"body":[{"type":"ExpressionStatement","start":48732,"end":48833,"expression":{"type":"CallExpression","start":48732,"end":48832,"callee":{"type":"MemberExpression","start":48732,"end":48768,"object":{"type":"ThisExpression","start":48732,"end":48736},"property":{"type":"Identifier","start":48737,"end":48768,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":48769,"end":48785,"object":{"type":"Identifier","start":48769,"end":48775,"name":"dbItem"},"property":{"type":"MemberExpression","start":48776,"end":48784,"object":{"type":"Identifier","start":48776,"end":48779,"name":"col"},"property":{"type":"Identifier","start":48780,"end":48784,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},{"type":"MemberExpression","start":48787,"end":48805,"object":{"type":"Identifier","start":48787,"end":48790,"name":"col"},"property":{"type":"Identifier","start":48791,"end":48805,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48807,"end":48831,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48875,"end":49062,"body":[{"type":"ForOfStatement","start":48898,"end":49043,"await":false,"left":{"type":"VariableDeclaration","start":48903,"end":48926,"declarations":[{"type":"VariableDeclarator","start":48909,"end":48926,"id":{"type":"Identifier","start":48909,"end":48926,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48930,"end":48948,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48950,"end":49043,"body":[{"type":"ExpressionStatement","start":48977,"end":49020,"expression":{"type":"UnaryExpression","start":48977,"end":49019,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48984,"end":49019,"object":{"type":"MemberExpression","start":48984,"end":49000,"object":{"type":"Identifier","start":48984,"end":48990,"name":"dbItem"},"property":{"type":"MemberExpression","start":48991,"end":48999,"object":{"type":"Identifier","start":48991,"end":48994,"name":"col"},"property":{"type":"Identifier","start":48995,"end":48999,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":49001,"end":49018,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":49100,"end":49114,"argument":{"type":"Identifier","start":49107,"end":49113,"name":"dbItem"}}]}}},{"type":"MethodDefinition","start":49447,"end":49803,"static":false,"computed":false,"key":{"type":"Identifier","start":49447,"end":49473,"name":"getDocumentReferencesDeep$"},"kind":"method","value":{"type":"FunctionExpression","start":49473,"end":49803,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49474,"end":49477,"name":"ref"},{"type":"AssignmentPattern","start":49479,"end":49504,"left":{"type":"Identifier","start":49479,"end":49499,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49502,"end":49504,"elements":[]}}],"body":{"type":"BlockStatement","start":49506,"end":49803,"body":[{"type":"IfStatement","start":49517,"end":49796,"test":{"type":"BinaryExpression","start":49521,"end":49553,"left":{"type":"Identifier","start":49521,"end":49524,"name":"ref"},"operator":"instanceof","right":{"type":"Identifier","start":49536,"end":49553,"name":"DocumentReference"}},"consequent":{"type":"BlockStatement","start":49555,"end":49653,"body":[{"type":"ReturnStatement","start":49570,"end":49642,"argument":{"type":"CallExpression","start":49577,"end":49641,"callee":{"type":"MemberExpression","start":49577,"end":49614,"object":{"type":"ThisExpression","start":49577,"end":49581},"property":{"type":"Identifier","start":49582,"end":49614,"name":"getDocumentReferencesFromDocRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49615,"end":49618,"name":"ref"},{"type":"Identifier","start":49620,"end":49640,"name":"subCollectionQueries"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49668,"end":49796,"body":[{"type":"ReturnStatement","start":49706,"end":49785,"argument":{"type":"CallExpression","start":49713,"end":49784,"callee":{"type":"MemberExpression","start":49713,"end":49757,"object":{"type":"ThisExpression","start":49713,"end":49717},"property":{"type":"Identifier","start":49718,"end":49757,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49758,"end":49761,"name":"ref"},{"type":"Identifier","start":49763,"end":49783,"name":"subCollectionQueries"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":49809,"end":50244,"static":false,"computed":false,"key":{"type":"Identifier","start":49809,"end":49841,"name":"getDocumentReferencesFromDocRef$"},"kind":"method","value":{"type":"FunctionExpression","start":49841,"end":50244,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49842,"end":49848,"name":"docRef"},{"type":"AssignmentPattern","start":49850,"end":49875,"left":{"type":"Identifier","start":49850,"end":49870,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49873,"end":49875,"elements":[]}}],"body":{"type":"BlockStatement","start":49877,"end":50244,"body":[{"type":"ReturnStatement","start":49888,"end":50237,"argument":{"type":"CallExpression","start":49895,"end":50236,"callee":{"type":"MemberExpression","start":49895,"end":49948,"object":{"type":"CallExpression","start":49895,"end":49943,"callee":{"type":"MemberExpression","start":49895,"end":49913,"object":{"type":"ThisExpression","start":49895,"end":49899},"property":{"type":"Identifier","start":49900,"end":49913,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49914,"end":49920,"name":"docRef"},{"type":"Identifier","start":49922,"end":49942,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":49944,"end":49948,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":49949,"end":49956,"callee":{"type":"Identifier","start":49949,"end":49953,"name":"take"},"arguments":[{"type":"Literal","start":49954,"end":49955,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":49958,"end":50039,"callee":{"type":"Identifier","start":49958,"end":49961,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":49962,"end":50038,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":49962,"end":49966,"name":"item"}],"body":{"type":"CallExpression","start":49970,"end":50038,"callee":{"type":"MemberExpression","start":49970,"end":50010,"object":{"type":"ThisExpression","start":49970,"end":49974},"property":{"type":"Identifier","start":49975,"end":50010,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50011,"end":50015,"name":"item"},{"type":"Identifier","start":50017,"end":50037,"name":"subCollectionQueries"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":50103,"end":50235,"callee":{"type":"Identifier","start":50103,"end":50106,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50107,"end":50234,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50108,"end":50116,"name":"pathList"}],"body":{"type":"BlockStatement","start":50121,"end":50234,"body":[{"type":"ReturnStatement","start":50136,"end":50223,"argument":{"type":"CallExpression","start":50143,"end":50222,"callee":{"type":"MemberExpression","start":50143,"end":50173,"object":{"type":"Identifier","start":50143,"end":50151,"name":"pathList"},"property":{"type":"Identifier","start":50170,"end":50173,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50174,"end":50221,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50174,"end":50178,"name":"path"}],"body":{"type":"CallExpression","start":50182,"end":50221,"callee":{"type":"Identifier","start":50182,"end":50196,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50197,"end":50201,"name":"path"},{"type":"MemberExpression","start":50203,"end":50220,"object":{"type":"MemberExpression","start":50203,"end":50210,"object":{"type":"ThisExpression","start":50203,"end":50207},"property":{"type":"Identifier","start":50208,"end":50210,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50211,"end":50220,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":50250,"end":51066,"static":false,"computed":false,"key":{"type":"Identifier","start":50250,"end":50289,"name":"getDocumentReferencesFromCollectionRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50289,"end":51066,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50290,"end":50303,"name":"collectionRef"},{"type":"AssignmentPattern","start":50305,"end":50330,"left":{"type":"Identifier","start":50305,"end":50325,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50328,"end":50330,"elements":[]}}],"body":{"type":"BlockStatement","start":50332,"end":51066,"body":[{"type":"ReturnStatement","start":50343,"end":51059,"argument":{"type":"CallExpression","start":50350,"end":51058,"callee":{"type":"MemberExpression","start":50350,"end":50401,"object":{"type":"CallExpression","start":50350,"end":50396,"callee":{"type":"MemberExpression","start":50350,"end":50381,"object":{"type":"ThisExpression","start":50350,"end":50354},"property":{"type":"Identifier","start":50355,"end":50381,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50382,"end":50395,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":50397,"end":50401,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50435,"end":50442,"callee":{"type":"Identifier","start":50435,"end":50439,"name":"take"},"arguments":[{"type":"Literal","start":50440,"end":50441,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50444,"end":50674,"callee":{"type":"Identifier","start":50444,"end":50452,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":50453,"end":50673,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50454,"end":50459,"name":"items"}],"body":{"type":"BlockStatement","start":50464,"end":50673,"body":[{"type":"VariableDeclaration","start":50479,"end":50496,"declarations":[{"type":"VariableDeclarator","start":50483,"end":50495,"id":{"type":"Identifier","start":50483,"end":50495,"name":"docListeners"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":50510,"end":50613,"expression":{"type":"AssignmentExpression","start":50510,"end":50612,"operator":"=","left":{"type":"Identifier","start":50510,"end":50522,"name":"docListeners"},"right":{"type":"CallExpression","start":50525,"end":50612,"callee":{"type":"MemberExpression","start":50525,"end":50534,"object":{"type":"Identifier","start":50525,"end":50530,"name":"items"},"property":{"type":"Identifier","start":50531,"end":50534,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50535,"end":50611,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50535,"end":50539,"name":"item"}],"body":{"type":"CallExpression","start":50543,"end":50611,"callee":{"type":"MemberExpression","start":50543,"end":50561,"object":{"type":"ThisExpression","start":50543,"end":50547},"property":{"type":"Identifier","start":50548,"end":50561,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":50562,"end":50588,"object":{"type":"MemberExpression","start":50562,"end":50584,"object":{"type":"Identifier","start":50562,"end":50566,"name":"item"},"property":{"type":"Identifier","start":50567,"end":50584,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50585,"end":50588,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":50590,"end":50610,"name":"subCollectionQueries"}],"optional":false}}],"optional":false}}},{"type":"ReturnStatement","start":50627,"end":50662,"argument":{"type":"CallExpression","start":50634,"end":50661,"callee":{"type":"Identifier","start":50634,"end":50647,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":50648,"end":50660,"name":"docListeners"}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":50676,"end":50923,"callee":{"type":"Identifier","start":50676,"end":50679,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50680,"end":50922,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50681,"end":50686,"name":"items"}],"body":{"type":"BlockStatement","start":50691,"end":50922,"body":[{"type":"VariableDeclaration","start":50706,"end":50721,"declarations":[{"type":"VariableDeclarator","start":50710,"end":50720,"id":{"type":"Identifier","start":50710,"end":50715,"name":"paths"},"init":{"type":"ArrayExpression","start":50718,"end":50720,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":50735,"end":50884,"expression":{"type":"CallExpression","start":50735,"end":50883,"callee":{"type":"MemberExpression","start":50735,"end":50748,"object":{"type":"Identifier","start":50735,"end":50740,"name":"items"},"property":{"type":"Identifier","start":50741,"end":50748,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50749,"end":50882,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50749,"end":50753,"name":"item"}],"body":{"type":"BlockStatement","start":50757,"end":50882,"body":[{"type":"ExpressionStatement","start":50776,"end":50867,"expression":{"type":"AssignmentExpression","start":50776,"end":50866,"operator":"=","left":{"type":"Identifier","start":50776,"end":50781,"name":"paths"},"right":{"type":"CallExpression","start":50784,"end":50866,"callee":{"type":"MemberExpression","start":50784,"end":50796,"object":{"type":"Identifier","start":50784,"end":50789,"name":"paths"},"property":{"type":"Identifier","start":50790,"end":50796,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50797,"end":50865,"callee":{"type":"MemberExpression","start":50797,"end":50837,"object":{"type":"ThisExpression","start":50797,"end":50801},"property":{"type":"Identifier","start":50802,"end":50837,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50838,"end":50842,"name":"item"},{"type":"Identifier","start":50844,"end":50864,"name":"subCollectionQueries"}],"optional":false}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":50898,"end":50911,"argument":{"type":"Identifier","start":50905,"end":50910,"name":"paths"}}]}}],"optional":false},{"type":"CallExpression","start":50925,"end":51057,"callee":{"type":"Identifier","start":50925,"end":50928,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50929,"end":51056,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50930,"end":50938,"name":"pathList"}],"body":{"type":"BlockStatement","start":50943,"end":51056,"body":[{"type":"ReturnStatement","start":50958,"end":51045,"argument":{"type":"CallExpression","start":50965,"end":51044,"callee":{"type":"MemberExpression","start":50965,"end":50995,"object":{"type":"Identifier","start":50965,"end":50973,"name":"pathList"},"property":{"type":"Identifier","start":50992,"end":50995,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50996,"end":51043,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50996,"end":51000,"name":"path"}],"body":{"type":"CallExpression","start":51004,"end":51043,"callee":{"type":"Identifier","start":51004,"end":51018,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51019,"end":51023,"name":"path"},{"type":"MemberExpression","start":51025,"end":51042,"object":{"type":"MemberExpression","start":51025,"end":51032,"object":{"type":"ThisExpression","start":51025,"end":51029},"property":{"type":"Identifier","start":51030,"end":51032,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51033,"end":51042,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":51472,"end":51712,"static":false,"computed":false,"key":{"type":"Identifier","start":51472,"end":51501,"name":"getDocumentReferencesFromItem"},"kind":"method","value":{"type":"FunctionExpression","start":51501,"end":51712,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51502,"end":51506,"name":"item"},{"type":"AssignmentPattern","start":51508,"end":51533,"left":{"type":"Identifier","start":51508,"end":51528,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51531,"end":51533,"elements":[]}}],"body":{"type":"BlockStatement","start":51535,"end":51712,"body":[{"type":"VariableDeclaration","start":51546,"end":51629,"declarations":[{"type":"VariableDeclarator","start":51552,"end":51628,"id":{"type":"Identifier","start":51552,"end":51557,"name":"paths"},"init":{"type":"CallExpression","start":51560,"end":51628,"callee":{"type":"MemberExpression","start":51560,"end":51600,"object":{"type":"ThisExpression","start":51560,"end":51564},"property":{"type":"Identifier","start":51565,"end":51600,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51601,"end":51605,"name":"item"},{"type":"Identifier","start":51607,"end":51627,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":51639,"end":51705,"argument":{"type":"CallExpression","start":51646,"end":51704,"callee":{"type":"MemberExpression","start":51646,"end":51655,"object":{"type":"Identifier","start":51646,"end":51651,"name":"paths"},"property":{"type":"Identifier","start":51652,"end":51655,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51656,"end":51703,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":51656,"end":51660,"name":"path"}],"body":{"type":"CallExpression","start":51664,"end":51703,"callee":{"type":"Identifier","start":51664,"end":51678,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51679,"end":51683,"name":"path"},{"type":"MemberExpression","start":51685,"end":51702,"object":{"type":"MemberExpression","start":51685,"end":51692,"object":{"type":"ThisExpression","start":51685,"end":51689},"property":{"type":"Identifier","start":51690,"end":51692,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51693,"end":51702,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":51812,"end":53400,"static":false,"computed":false,"key":{"type":"Identifier","start":51812,"end":51847,"name":"getPathsFromItemDeepRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":51847,"end":53400,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51848,"end":51852,"name":"item"},{"type":"AssignmentPattern","start":51854,"end":51879,"left":{"type":"Identifier","start":51854,"end":51874,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51877,"end":51879,"elements":[]}}],"body":{"type":"BlockStatement","start":51881,"end":53400,"body":[{"type":"IfStatement","start":51892,"end":52026,"test":{"type":"LogicalExpression","start":51896,"end":51961,"left":{"type":"BinaryExpression","start":51896,"end":51924,"left":{"type":"Identifier","start":51896,"end":51916,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":51920,"end":51924,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":51928,"end":51961,"left":{"type":"MemberExpression","start":51928,"end":51955,"object":{"type":"Identifier","start":51928,"end":51948,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":51949,"end":51955,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":51960,"end":51961,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":51963,"end":52026,"body":[{"type":"ReturnStatement","start":51978,"end":52015,"argument":{"type":"ArrayExpression","start":51985,"end":52014,"elements":[{"type":"MemberExpression","start":51986,"end":52013,"object":{"type":"MemberExpression","start":51986,"end":52008,"object":{"type":"Identifier","start":51986,"end":51990,"name":"item"},"property":{"type":"Identifier","start":51991,"end":52008,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52009,"end":52013,"name":"path"},"computed":false,"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":52036,"end":52054,"declarations":[{"type":"VariableDeclarator","start":52040,"end":52053,"id":{"type":"Identifier","start":52040,"end":52048,"name":"pathList"},"init":{"type":"ArrayExpression","start":52051,"end":52053,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":52064,"end":52107,"expression":{"type":"CallExpression","start":52064,"end":52106,"callee":{"type":"MemberExpression","start":52064,"end":52077,"object":{"type":"Identifier","start":52064,"end":52072,"name":"pathList"},"property":{"type":"Identifier","start":52073,"end":52077,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52078,"end":52105,"object":{"type":"MemberExpression","start":52078,"end":52100,"object":{"type":"Identifier","start":52078,"end":52082,"name":"item"},"property":{"type":"Identifier","start":52083,"end":52100,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52101,"end":52105,"name":"path"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":52117,"end":53367,"expression":{"type":"CallExpression","start":52117,"end":53366,"callee":{"type":"MemberExpression","start":52117,"end":52145,"object":{"type":"Identifier","start":52117,"end":52137,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":52138,"end":52145,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52146,"end":53365,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52146,"end":52149,"name":"col"}],"body":{"type":"BlockStatement","start":52153,"end":53365,"body":[{"type":"IfStatement","start":52168,"end":53354,"test":{"type":"LogicalExpression","start":52172,"end":52215,"left":{"type":"CallExpression","start":52172,"end":52201,"callee":{"type":"MemberExpression","start":52172,"end":52185,"object":{"type":"Identifier","start":52172,"end":52177,"name":"Array"},"property":{"type":"Identifier","start":52178,"end":52185,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52186,"end":52200,"object":{"type":"Identifier","start":52186,"end":52190,"name":"item"},"property":{"type":"MemberExpression","start":52191,"end":52199,"object":{"type":"Identifier","start":52191,"end":52194,"name":"col"},"property":{"type":"Identifier","start":52195,"end":52199,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":52205,"end":52215,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":52206,"end":52215,"object":{"type":"Identifier","start":52206,"end":52209,"name":"col"},"property":{"type":"Identifier","start":52210,"end":52215,"name":"docId"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52217,"end":52753,"body":[{"type":"VariableDeclaration","start":52327,"end":52356,"declarations":[{"type":"VariableDeclarator","start":52333,"end":52355,"id":{"type":"Identifier","start":52333,"end":52338,"name":"items"},"init":{"type":"MemberExpression","start":52341,"end":52355,"object":{"type":"Identifier","start":52341,"end":52345,"name":"item"},"property":{"type":"MemberExpression","start":52346,"end":52354,"object":{"type":"Identifier","start":52346,"end":52349,"name":"col"},"property":{"type":"Identifier","start":52350,"end":52354,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":52374,"end":52738,"expression":{"type":"CallExpression","start":52374,"end":52737,"callee":{"type":"MemberExpression","start":52374,"end":52387,"object":{"type":"Identifier","start":52374,"end":52379,"name":"items"},"property":{"type":"Identifier","start":52380,"end":52387,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52388,"end":52736,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52388,"end":52395,"name":"subItem"}],"body":{"type":"BlockStatement","start":52399,"end":52736,"body":[{"type":"IfStatement","start":52422,"end":52717,"test":{"type":"MemberExpression","start":52426,"end":52444,"object":{"type":"Identifier","start":52426,"end":52429,"name":"col"},"property":{"type":"Identifier","start":52430,"end":52444,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52446,"end":52594,"body":[{"type":"ExpressionStatement","start":52473,"end":52571,"expression":{"type":"AssignmentExpression","start":52473,"end":52570,"operator":"=","left":{"type":"Identifier","start":52473,"end":52481,"name":"pathList"},"right":{"type":"CallExpression","start":52484,"end":52570,"callee":{"type":"MemberExpression","start":52484,"end":52499,"object":{"type":"Identifier","start":52484,"end":52492,"name":"pathList"},"property":{"type":"Identifier","start":52493,"end":52499,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52500,"end":52569,"callee":{"type":"MemberExpression","start":52500,"end":52540,"object":{"type":"ThisExpression","start":52500,"end":52504},"property":{"type":"Identifier","start":52505,"end":52540,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52541,"end":52548,"name":"subItem"},{"type":"MemberExpression","start":52550,"end":52568,"object":{"type":"Identifier","start":52550,"end":52553,"name":"col"},"property":{"type":"Identifier","start":52554,"end":52568,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52621,"end":52717,"body":[{"type":"ExpressionStatement","start":52648,"end":52694,"expression":{"type":"CallExpression","start":52648,"end":52693,"callee":{"type":"MemberExpression","start":52648,"end":52661,"object":{"type":"Identifier","start":52648,"end":52656,"name":"pathList"},"property":{"type":"Identifier","start":52657,"end":52661,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52662,"end":52692,"object":{"type":"MemberExpression","start":52662,"end":52687,"object":{"type":"Identifier","start":52662,"end":52669,"name":"subItem"},"property":{"type":"Identifier","start":52670,"end":52687,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52688,"end":52692,"name":"path"},"computed":false,"optional":false}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":52772,"end":53354,"body":[{"type":"IfStatement","start":52825,"end":53339,"test":{"type":"MemberExpression","start":52829,"end":52847,"object":{"type":"Identifier","start":52829,"end":52832,"name":"col"},"property":{"type":"Identifier","start":52833,"end":52847,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52849,"end":52986,"body":[{"type":"ExpressionStatement","start":52872,"end":52967,"expression":{"type":"AssignmentExpression","start":52872,"end":52966,"operator":"=","left":{"type":"Identifier","start":52872,"end":52880,"name":"pathList"},"right":{"type":"CallExpression","start":52883,"end":52966,"callee":{"type":"MemberExpression","start":52883,"end":52898,"object":{"type":"Identifier","start":52883,"end":52891,"name":"pathList"},"property":{"type":"Identifier","start":52892,"end":52898,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52899,"end":52965,"callee":{"type":"MemberExpression","start":52899,"end":52939,"object":{"type":"ThisExpression","start":52899,"end":52903},"property":{"type":"Identifier","start":52904,"end":52939,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52940,"end":52944,"name":"item"},{"type":"MemberExpression","start":52946,"end":52964,"object":{"type":"Identifier","start":52946,"end":52949,"name":"col"},"property":{"type":"Identifier","start":52950,"end":52964,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":53009,"end":53339,"body":[{"type":"VariableDeclaration","start":53032,"end":53063,"declarations":[{"type":"VariableDeclarator","start":53038,"end":53062,"id":{"type":"Identifier","start":53038,"end":53045,"name":"subItem"},"init":{"type":"MemberExpression","start":53048,"end":53062,"object":{"type":"Identifier","start":53048,"end":53052,"name":"item"},"property":{"type":"MemberExpression","start":53053,"end":53061,"object":{"type":"Identifier","start":53053,"end":53056,"name":"col"},"property":{"type":"Identifier","start":53057,"end":53061,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":53085,"end":53241,"test":{"type":"LogicalExpression","start":53089,"end":53143,"left":{"type":"BinaryExpression","start":53089,"end":53104,"left":{"type":"Identifier","start":53089,"end":53096,"name":"subItem"},"operator":"!=","right":{"type":"Literal","start":53100,"end":53104,"value":null,"raw":"null"}},"operator":"&&","right":{"type":"BinaryExpression","start":53108,"end":53143,"left":{"type":"Literal","start":53108,"end":53114,"value":"path","raw":"'path'"},"operator":"in","right":{"type":"MemberExpression","start":53118,"end":53143,"object":{"type":"Identifier","start":53118,"end":53125,"name":"subItem"},"property":{"type":"Identifier","start":53126,"end":53143,"name":"firestoreMetadata"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":53145,"end":53241,"body":[{"type":"ExpressionStatement","start":53172,"end":53218,"expression":{"type":"CallExpression","start":53172,"end":53217,"callee":{"type":"MemberExpression","start":53172,"end":53185,"object":{"type":"Identifier","start":53172,"end":53180,"name":"pathList"},"property":{"type":"Identifier","start":53181,"end":53185,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53186,"end":53216,"object":{"type":"MemberExpression","start":53186,"end":53211,"object":{"type":"Identifier","start":53186,"end":53193,"name":"subItem"},"property":{"type":"Identifier","start":53194,"end":53211,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53212,"end":53216,"name":"path"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":53377,"end":53393,"argument":{"type":"Identifier","start":53384,"end":53392,"name":"pathList"}}]}}},{"type":"MethodDefinition","start":53581,"end":54606,"static":false,"computed":false,"key":{"type":"Identifier","start":53581,"end":53621,"name":"splitDataIntoCurrentDocAndSubCollections"},"kind":"method","value":{"type":"FunctionExpression","start":53621,"end":54606,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":53622,"end":53626,"name":"data"},{"type":"AssignmentPattern","start":53628,"end":53653,"left":{"type":"Identifier","start":53628,"end":53648,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":53651,"end":53653,"elements":[]}}],"body":{"type":"BlockStatement","start":53655,"end":54606,"body":[{"type":"VariableDeclaration","start":53729,"end":53749,"declarations":[{"type":"VariableDeclarator","start":53733,"end":53748,"id":{"type":"Identifier","start":53733,"end":53743,"name":"currentDoc"},"init":{"type":"ObjectExpression","start":53746,"end":53748,"properties":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":53759,"end":53785,"declarations":[{"type":"VariableDeclarator","start":53765,"end":53784,"id":{"type":"Identifier","start":53765,"end":53779,"name":"subCollections"},"init":{"type":"ObjectExpression","start":53782,"end":53784,"properties":[]}}],"kind":"const"},{"type":"ForOfStatement","start":53945,"end":54516,"await":false,"left":{"type":"VariableDeclaration","start":53950,"end":53968,"declarations":[{"type":"VariableDeclarator","start":53956,"end":53968,"id":{"type":"ArrayPattern","start":53956,"end":53968,"elements":[{"type":"Identifier","start":53957,"end":53960,"name":"key"},{"type":"Identifier","start":53962,"end":53967,"name":"value"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":53972,"end":53992,"callee":{"type":"MemberExpression","start":53972,"end":53986,"object":{"type":"Identifier","start":53972,"end":53978,"name":"Object"},"property":{"type":"Identifier","start":53979,"end":53986,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53987,"end":53991,"name":"data"}],"optional":false},"body":{"type":"BlockStatement","start":53994,"end":54516,"body":[{"type":"IfStatement","start":54050,"end":54505,"test":{"type":"LogicalExpression","start":54054,"end":54109,"left":{"type":"Identifier","start":54054,"end":54074,"name":"subCollectionWriters"},"operator":"&&","right":{"type":"BinaryExpression","start":54078,"end":54109,"left":{"type":"MemberExpression","start":54078,"end":54105,"object":{"type":"Identifier","start":54078,"end":54098,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54099,"end":54105,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":54108,"end":54109,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":54111,"end":54434,"body":[{"type":"VariableDeclaration","start":54130,"end":54217,"declarations":[{"type":"VariableDeclarator","start":54136,"end":54216,"id":{"type":"Identifier","start":54136,"end":54155,"name":"subCollectionWriter"},"init":{"type":"CallExpression","start":54158,"end":54216,"callee":{"type":"MemberExpression","start":54158,"end":54183,"object":{"type":"Identifier","start":54158,"end":54178,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54179,"end":54183,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":54184,"end":54215,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":54184,"end":54191,"name":"subColl"}],"body":{"type":"BinaryExpression","start":54195,"end":54215,"left":{"type":"MemberExpression","start":54195,"end":54207,"object":{"type":"Identifier","start":54195,"end":54202,"name":"subColl"},"property":{"type":"Identifier","start":54203,"end":54207,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":54212,"end":54215,"name":"key"}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":54235,"end":54419,"test":{"type":"Identifier","start":54239,"end":54258,"name":"subCollectionWriter"},"consequent":{"type":"BlockStatement","start":54260,"end":54330,"body":[{"type":"ExpressionStatement","start":54283,"end":54311,"expression":{"type":"AssignmentExpression","start":54283,"end":54310,"operator":"=","left":{"type":"MemberExpression","start":54283,"end":54302,"object":{"type":"Identifier","start":54283,"end":54297,"name":"subCollections"},"property":{"type":"Identifier","start":54298,"end":54301,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54305,"end":54310,"name":"value"}}}]},"alternate":{"type":"BlockStatement","start":54353,"end":54419,"body":[{"type":"ExpressionStatement","start":54376,"end":54400,"expression":{"type":"AssignmentExpression","start":54376,"end":54399,"operator":"=","left":{"type":"MemberExpression","start":54376,"end":54391,"object":{"type":"Identifier","start":54376,"end":54386,"name":"currentDoc"},"property":{"type":"Identifier","start":54387,"end":54390,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54394,"end":54399,"name":"value"}}}]}}]},"alternate":{"type":"BlockStatement","start":54453,"end":54505,"body":[{"type":"ExpressionStatement","start":54472,"end":54490,"expression":{"type":"AssignmentExpression","start":54472,"end":54489,"operator":"=","left":{"type":"Identifier","start":54472,"end":54482,"name":"currentDoc"},"right":{"type":"Identifier","start":54485,"end":54489,"name":"data"}}}]}}]}},{"type":"ReturnStatement","start":54526,"end":54599,"argument":{"type":"ObjectExpression","start":54533,"end":54598,"properties":[{"type":"Property","start":54548,"end":54558,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54548,"end":54558,"name":"currentDoc"},"kind":"init","value":{"type":"Identifier","start":54548,"end":54558,"name":"currentDoc"}},{"type":"Property","start":54573,"end":54587,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54573,"end":54587,"name":"subCollections"},"kind":"init","value":{"type":"Identifier","start":54573,"end":54587,"name":"subCollections"}}]}}]}}},{"type":"MethodDefinition","start":54885,"end":54965,"static":false,"computed":false,"key":{"type":"Identifier","start":54885,"end":54897,"name":"batchCommit$"},"kind":"method","value":{"type":"FunctionExpression","start":54897,"end":54965,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":54898,"end":54903,"name":"batch"}],"body":{"type":"BlockStatement","start":54905,"end":54965,"body":[{"type":"ReturnStatement","start":54916,"end":54958,"argument":{"type":"CallExpression","start":54923,"end":54957,"callee":{"type":"MemberExpression","start":54923,"end":54948,"object":{"type":"CallExpression","start":54923,"end":54943,"callee":{"type":"Identifier","start":54923,"end":54927,"name":"from"},"arguments":[{"type":"CallExpression","start":54928,"end":54942,"callee":{"type":"MemberExpression","start":54928,"end":54940,"object":{"type":"Identifier","start":54928,"end":54933,"name":"batch"},"property":{"type":"Identifier","start":54934,"end":54940,"name":"commit"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"property":{"type":"Identifier","start":54944,"end":54948,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":54949,"end":54956,"callee":{"type":"Identifier","start":54949,"end":54953,"name":"take"},"arguments":[{"type":"Literal","start":54954,"end":54955,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":54970,"end":180160},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":180162,"end":180283}]},"code":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { DocumentReference, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\nimport { QueryContainer } from './firebase-extended-wrapper';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(collectionRef, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        const collectionRef = getRefFromPath(collectionPath, this.fs.firestore);\r\n        const collectionQuery = new QueryContainer(collectionRef);\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return Object.assign(Object.assign({}, item), { [collectionKey]: nextLevelItems });\r\n                    }\r\n                    else {\r\n                        return Object.assign({}, item);\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            var _a, _b;\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = (_a = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _a === void 0 ? void 0 : _a.subCollections;\r\n                    subDocId = (_b = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _b === void 0 ? void 0 : _b.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return Object.assign(Object.assign({}, currentData), groupedData);\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        var _a;\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.firestoreMetadata) == null) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in revese so as to not change the indices,\r\n        // the indicies to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subcollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns Writebatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            if (snapshot.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(collectionRef) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(collectionRef).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            let collectionRef = getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name);\r\n            if (subCollectionQuery.queryFn) {\r\n                collectionRef = subCollectionQuery.queryFn(collectionRef);\r\n            }\r\n            const collectionListener = this.listenForCollectionSimple$(collectionRef).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collection) => {\r\n                for (const [collectionName, items] of Object.entries(collection)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return Object.assign(Object.assign({}, item), data);\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        var _a, _b;\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = (_a = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _a === void 0 ? void 0 : _a.subCollections;\r\n                subDocId = (_b = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _b === void 0 ? void 0 : _b.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = Object.assign(Object.assign({}, additionalDataUpdateOnMovedItem), { groupName: currentArrayName });\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { DocumentReference, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\nimport { QueryContainer } from './firebase-extended-wrapper';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(collectionRef, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        const collectionRef = getRefFromPath(collectionPath, this.fs.firestore);\r\n        const collectionQuery = new QueryContainer(collectionRef);\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'FirebaseErrorExt',\r\n                code: 'unknown',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in revese so as to not change the indices,\r\n        // the indicies to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subcollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns Writebatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            if (snapshot.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param collectionRef the collectionRef which will be listened to\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(collectionRef) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(collectionRef).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            let collectionRef = getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name);\r\n            if (subCollectionQuery.queryFn) {\r\n                collectionRef = subCollectionQuery.queryFn(collectionRef);\r\n            }\r\n            const collectionListener = this.listenForCollectionSimple$(collectionRef).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collection) => {\r\n                for (const [collectionName, items] of Object.entries(collection)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,23],[32,0,0,31],[34,0,0,33],[38,0,0,37],[40,0,0,51],[42,0,0,53],[44,0,0,54],[50,0,0,60],[56,0,0,66],[57,0,0,67]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,20],[27,0,2,26],[29,0,2,28],[32,0,2,31],[34,0,2,33],[42,0,2,41],[44,0,2,43],[53,0,2,52],[55,0,2,54],[59,0,2,58],[61,0,2,60],[64,0,2,63],[66,0,2,64],[72,0,2,70],[88,0,2,86],[89,0,2,87]],[[0,0,3,0],[7,0,3,7],[9,0,6,2],[26,0,6,19],[28,0,9,2],[38,0,9,12],[40,0,11,1],[46,0,11,7],[66,0,11,27],[67,0,11,28]],[[0,0,13,0],[7,0,13,7],[9,0,14,2],[23,0,14,16],[25,0,15,2],[38,0,15,15],[40,0,16,2],[55,0,16,17],[57,0,17,2],[79,0,17,24],[81,0,18,2],[96,0,18,17],[98,0,19,2],[112,0,19,16],[114,0,20,2],[130,0,20,18],[132,0,21,1],[138,0,21,7],[149,0,21,18],[150,0,21,19]],[[0,0,26,0],[7,0,26,7],[9,0,26,8],[24,0,26,23],[26,0,26,25],[43,0,26,42],[45,0,26,43],[51,0,26,49],[65,0,26,63],[66,0,26,64]],[[0,0,27,0],[7,0,27,7],[9,0,27,8],[23,0,27,22],[25,0,27,23],[31,0,27,29],[60,0,27,58],[61,0,27,59]],[[0,0,29,0]],[],[[3,0,31,3]],[[0,0,32,0],[6,0,32,6],[7,0,32,0],[11,0,32,12],[28,0,44,1]],[[0,0,32,0],[11,0,32,12],[28,0,32,29]],[[4,0,33,2],[32,0,33,30]],[[4,0,34,2],[75,0,34,13],[76,0,34,13]],[[4,0,36,2],[117,0,36,115]],[[4,0,37,2],[91,0,37,21],[92,0,37,21]],[[4,0,39,2],[51,0,39,49]],[[4,0,40,2],[65,0,40,8],[66,0,40,8]],[[4,0,42,2],[53,0,42,51]],[[4,0,43,2],[91,0,43,21],[92,0,43,21]],[[0,0,44,0],[1,0,44,1],[3,0,32,12],[20,0,32,29],[25,0,32,12],[42,0,32,29],[50,0,44,1]],[[0,0,55,0]],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[13,0,61,13],[30,0,61,30]],[[4,0,63,2]],[],[],[],[],[[7,0,68,5]],[[4,0,69,2],[16,0,69,22],[18,0,69,42],[20,0,69,51],[35,0,69,74],[41,0,69,80]],[[8,0,69,22],[15,0,69,24],[18,0,69,22],[20,0,69,24],[21,0,69,42]],[[8,0,69,51],[25,0,69,63],[28,0,69,51],[40,0,69,63],[41,0,69,80]],[[4,0,70,2],[5,0,70,3]],[[4,0,72,2],[43,0,72,41]],[[4,0,74,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,102,5]],[[4,0,103,9],[17,0,103,22],[18,0,104,4],[24,0,104,29],[26,0,105,4],[49,0,105,49],[51,0,105,51],[53,0,106,4],[72,0,106,42],[89,0,106,59],[90,0,106,60],[109,0,106,79]],[[8,0,108,4],[15,0,108,11],[19,0,108,15],[20,0,108,16],[52,0,108,48],[53,0,108,49],[59,0,108,55],[61,0,108,57],[81,0,108,77],[83,0,108,79],[99,0,108,95],[100,0,108,96],[101,0,108,97],[105,0,108,101],[106,0,109,6],[109,0,109,9],[110,0,109,10],[114,0,109,14],[115,0,109,15],[117,0,109,17],[118,0,109,18],[122,0,109,37],[123,0,109,38],[124,0,110,5],[125,0,110,6]],[[4,0,111,2],[5,0,111,3]],[[4,0,113,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,144,5]],[[4,0,145,9],[24,0,145,29],[25,0,146,4],[38,0,146,41],[40,0,147,4],[63,0,147,49],[65,0,147,51]],[[8,0,148,4]],[],[],[[11,0,151,7]],[[8,0,152,4],[15,0,152,11],[19,0,152,15],[20,0,152,16],[46,0,152,42],[47,0,152,46],[60,0,152,59],[61,0,152,60],[62,0,152,61],[66,0,152,65],[67,0,153,6],[75,0,153,14],[76,0,153,15],[77,0,153,16],[82,0,153,37],[84,0,153,39],[86,0,153,41]],[[12,0,155,8],[16,0,155,12],[21,0,155,17],[25,0,155,21],[29,0,155,25],[33,0,155,29],[38,0,155,34],[39,0,155,35],[45,0,155,41],[50,0,155,46],[51,0,155,47],[53,0,155,49]],[[16,0,156,10],[23,0,156,17],[25,0,156,19],[26,0,156,20],[28,0,156,22],[29,0,156,23],[30,0,156,24]],[[13,0,157,9]],[[12,0,158,8],[16,0,158,12],[36,0,158,32],[37,0,158,33],[43,0,158,39],[47,0,158,43],[48,0,158,44],[50,0,158,46]],[[16,0,159,10],[23,0,159,17],[25,0,159,19],[26,0,159,20],[31,0,159,25],[32,0,159,26],[33,0,159,27]],[[13,0,160,9]],[[12,0,162,8],[18,0,162,14],[37,0,162,33],[40,0,162,60],[42,0,162,62],[43,0,162,63]],[[12,0,164,8],[17,0,164,13],[18,0,164,14],[25,0,164,21],[26,0,164,22],[30,0,164,26],[31,0,164,27],[33,0,164,29]],[[16,0,166,10],[22,0,166,16],[40,0,166,34],[43,0,166,37],[47,0,166,41],[48,0,166,42],[72,0,166,66],[73,0,166,67],[77,0,166,71],[79,0,166,73],[99,0,166,93],[100,0,166,94],[101,0,166,95]],[[16,0,168,10],[35,0,168,29],[36,0,168,30],[40,0,168,34],[41,0,168,35],[59,0,168,53],[60,0,168,54],[61,0,168,55]],[[12,0,169,8],[13,0,169,9],[14,0,169,10],[15,0,169,11]],[[12,0,171,8],[66,0,171,62]],[[12,0,172,8],[19,0,172,15],[32,0,172,28],[33,0,172,29],[52,0,172,48],[53,0,172,49],[54,0,172,50]],[[8,0,173,6],[9,0,173,7],[10,0,173,8],[11,0,174,5],[12,0,174,6]],[[4,0,175,2],[5,0,175,3]],[[4,0,177,2]],[],[[7,0,179,5]],[[4,0,180,9],[35,0,180,40],[36,0,181,4],[50,0,181,26],[52,0,182,4],[65,0,182,25],[67,0,183,4],[75,0,183,21]],[[8,0,185,4],[14,0,185,10],[27,0,185,23],[30,0,185,26],[44,0,185,40],[45,0,185,41],[59,0,185,55],[61,0,185,57],[65,0,185,61],[66,0,185,62],[68,0,185,64],[69,0,185,65],[78,0,185,74],[79,0,185,101],[80,0,185,102]],[[8,0,186,4],[14,0,186,10],[29,0,186,25],[32,0,186,28],[36,0,186,32],[50,0,186,46],[51,0,186,50],[64,0,186,63],[65,0,186,64],[66,0,186,65]],[[8,0,187,4],[12,0,187,8],[20,0,187,16],[24,0,187,20],[28,0,187,24],[30,0,187,26]],[[12,0,188,6],[27,0,188,21],[28,0,188,22],[35,0,188,29],[36,0,188,30],[44,0,188,38],[45,0,188,39],[46,0,188,40]],[[9,0,189,5]],[[8,0,191,4],[15,0,191,11],[19,0,191,15],[20,0,191,16],[46,0,191,42],[47,0,191,46],[60,0,191,59],[61,0,191,60],[62,0,191,61],[66,0,191,65],[67,0,192,6],[75,0,192,14],[76,0,192,15],[77,0,192,16],[82,0,192,36],[84,0,192,38],[86,0,192,40]],[[12,0,194,8],[16,0,194,12],[21,0,194,17],[22,0,194,18],[28,0,194,24],[32,0,194,28],[33,0,194,29],[35,0,194,31]],[[16,0,195,10],[23,0,195,17],[25,0,195,19],[26,0,195,20],[28,0,195,22],[29,0,195,23],[30,0,195,24]],[[13,0,196,9],[14,0,196,10],[78,0,196,74]],[[12,0,198,8],[65,0,198,61]],[[12,0,200,8],[18,0,200,14],[30,0,200,26],[33,0,200,61],[35,0,200,63],[36,0,200,64]],[[12,0,202,8],[17,0,202,13],[23,0,202,19],[27,0,202,23],[31,0,202,27],[36,0,202,32],[38,0,202,34]],[[16,0,204,10],[120,0,204,114]],[[16,0,205,10],[22,0,205,16],[35,0,205,29],[38,0,205,32],[42,0,205,36],[43,0,205,37],[60,0,205,54],[61,0,205,55],[64,0,205,58],[65,0,205,59],[69,0,205,63],[70,0,205,64],[76,0,205,70],[77,0,205,71],[80,0,205,74],[82,0,205,76],[95,0,205,89],[96,0,205,90],[97,0,205,91],[98,0,205,93],[117,0,205,112]],[[16,0,207,10],[22,0,207,16],[37,0,207,31],[40,0,207,34],[44,0,207,38],[45,0,207,39],[76,0,207,70],[77,0,207,71],[90,0,207,84],[92,0,207,86],[105,0,207,99],[107,0,207,101],[115,0,207,109],[116,0,207,110],[117,0,207,111],[121,0,207,115],[122,0,208,12],[125,0,208,15],[126,0,208,16],[127,0,208,17],[141,0,208,51],[143,0,208,53],[145,0,208,55]],[[20,0,209,14],[24,0,209,18],[38,0,209,32],[39,0,209,33],[45,0,209,39],[48,0,209,42],[49,0,209,43],[51,0,209,45]],[[24,0,210,16],[31,0,210,23],[33,0,210,24],[36,0,210,27],[40,0,210,31],[42,0,210,33],[43,0,210,34],[56,0,210,47],[57,0,210,48],[59,0,210,50],[73,0,210,64],[75,0,210,80],[76,0,210,81]],[[21,0,211,15]],[[25,0,211,21]],[[24,0,212,16],[31,0,212,23],[33,0,212,24],[36,0,212,27],[40,0,212,31],[42,0,212,47],[43,0,212,48]],[[21,0,213,15],[22,0,213,17],[52,0,213,47]],[[16,0,214,12],[17,0,214,13],[18,0,214,14],[19,0,215,11],[20,0,215,12]],[[16,0,216,10],[28,0,216,22],[29,0,216,23],[33,0,216,27],[34,0,216,28],[49,0,216,43],[50,0,216,44],[51,0,216,45]],[[13,0,217,9]],[[12,0,219,8],[19,0,219,15],[32,0,219,28],[33,0,219,29],[45,0,219,41],[46,0,219,42],[47,0,219,43],[51,0,219,47],[52,0,220,10],[55,0,220,13],[56,0,220,14],[59,0,220,17],[60,0,220,18],[62,0,220,20],[63,0,220,21],[70,0,220,28],[71,0,220,29],[74,0,220,32],[75,0,220,33],[78,0,220,36],[79,0,220,37],[80,0,220,38],[81,0,221,9],[82,0,221,10]],[[8,0,222,6],[9,0,222,7],[10,0,222,8],[11,0,223,5],[12,0,223,6]],[[4,0,224,2],[5,0,224,3]],[[4,0,226,2],[39,0,226,37]],[[4,0,228,2]],[],[],[],[],[],[],[],[[7,0,236,5]],[[4,0,237,9],[8,0,237,13],[9,0,238,4],[13,0,238,11],[15,0,239,4],[28,0,239,41],[30,0,240,4],[53,0,240,50],[55,0,240,52],[57,0,241,4],[70,0,241,26],[74,0,241,30],[76,0,242,4],[81,0,242,18]],[[8,0,244,4],[12,0,244,8],[17,0,244,13],[18,0,244,14],[25,0,244,21],[26,0,244,22],[30,0,244,26],[31,0,244,27],[35,0,244,31],[40,0,244,36],[44,0,244,40],[64,0,244,60],[65,0,244,61],[71,0,244,67],[74,0,244,70],[75,0,244,71],[77,0,244,73]],[[12,0,245,6],[18,0,245,12],[23,0,245,17],[26,0,245,39]],[[16,0,246,8],[20,0,246,12],[22,0,246,14],[40,0,246,32]],[[16,0,247,8],[20,0,247,12],[22,0,247,14],[31,0,247,23]],[[16,0,248,8],[23,0,248,15],[25,0,248,17],[113,0,248,105]],[[16,0,249,8],[21,0,249,13],[23,0,249,15],[25,0,249,17]],[[16,0,250,8],[20,0,250,12]],[[16,0,251,8],[36,0,251,28]],[[16,0,252,8],[21,0,252,13]],[[13,0,253,7],[14,0,253,8]],[[12,0,255,6],[18,0,255,12],[23,0,255,17],[24,0,255,18]],[[9,0,256,5]],[[8,0,258,4],[12,0,258,8],[22,0,258,18],[23,0,258,19]],[[8,0,259,4],[12,0,259,8],[26,0,259,22],[29,0,259,52],[31,0,259,54],[32,0,259,55]],[[8,0,261,4]],[],[],[[10,0,264,6]],[[8,0,265,4],[12,0,265,8],[17,0,265,13],[18,0,265,14],[25,0,265,21],[26,0,265,22],[30,0,265,26],[31,0,265,27],[35,0,265,31],[40,0,265,36],[42,0,265,38]],[[12,0,266,6],[22,0,266,16],[25,0,266,19],[29,0,266,23],[30,0,266,24]],[[9,0,267,5]],[[13,0,267,11]],[[12,0,268,6],[18,0,268,12],[23,0,268,17],[26,0,268,20],[30,0,268,24],[31,0,268,25],[71,0,268,65],[72,0,268,66],[76,0,268,70],[78,0,268,72],[98,0,268,92],[99,0,268,93],[100,0,268,94]],[[12,0,269,6],[22,0,269,16],[25,0,269,19],[30,0,269,24],[31,0,269,25],[41,0,269,35],[42,0,269,36]],[[12,0,270,6],[26,0,270,20],[29,0,270,23],[34,0,270,28],[35,0,270,29],[49,0,270,43],[50,0,270,44]],[[9,0,271,5]],[[8,0,273,4],[15,0,273,11],[19,0,273,15],[20,0,273,16],[30,0,273,26],[31,0,273,30],[41,0,273,45],[43,0,273,47],[56,0,273,60],[58,0,273,62],[68,0,273,72],[70,0,273,74],[75,0,273,79],[76,0,273,80],[77,0,273,81],[81,0,273,85]],[[8,0,274,6],[36,0,274,34]],[[8,0,275,6],[16,0,275,14],[17,0,275,15],[18,0,275,16],[29,0,275,40],[31,0,275,42],[33,0,275,44]],[[12,0,277,8],[18,0,277,14],[28,0,277,24],[31,0,277,51],[33,0,277,53],[34,0,277,54]],[[12,0,279,8],[17,0,279,13],[23,0,279,19],[24,0,279,20],[40,0,279,36],[42,0,279,38],[60,0,279,56],[61,0,279,57],[65,0,279,61],[71,0,279,67],[72,0,279,68],[79,0,279,75],[80,0,279,76],[94,0,279,90],[95,0,279,91],[97,0,279,93]],[[16,0,280,10],[20,0,280,14],[43,0,280,72],[44,0,280,73],[45,0,280,74],[84,0,280,113]],[[16,0,281,10],[20,0,281,14],[28,0,281,42],[29,0,281,43]],[[16,0,283,10],[20,0,283,14],[40,0,283,34],[42,0,283,36]],[[20,0,284,12],[43,0,284,35],[46,0,284,38],[66,0,284,58],[67,0,284,59],[71,0,284,63],[72,0,284,64],[79,0,284,71],[80,0,284,72],[82,0,284,74],[83,0,284,75],[90,0,284,82],[91,0,284,83],[95,0,284,87],[100,0,284,92],[116,0,284,108],[117,0,284,109],[119,0,284,111],[133,0,284,125],[134,0,284,126]],[[20,0,285,12],[28,0,285,20],[31,0,285,23],[51,0,285,43],[52,0,285,44],[56,0,285,48],[57,0,285,49],[64,0,285,56],[65,0,285,57],[67,0,285,59],[68,0,285,60],[75,0,285,67],[76,0,285,68],[80,0,285,72],[85,0,285,77],[101,0,285,93],[102,0,285,94],[104,0,285,96],[109,0,285,101],[110,0,285,102]],[[17,0,286,11]],[[16,0,288,10],[22,0,288,16],[38,0,288,32],[41,0,288,56],[57,0,288,72],[58,0,288,73],[69,0,288,84],[70,0,288,85],[87,0,288,102],[88,0,288,103],[91,0,288,106],[93,0,288,108],[109,0,288,124],[110,0,288,125],[111,0,288,126]],[[16,0,290,10]],[],[],[[139,0,293,133]],[[16,0,294,10],[20,0,294,14],[25,0,294,19],[26,0,294,20],[33,0,294,27],[34,0,294,28],[52,0,294,46],[53,0,294,47],[55,0,294,49]],[[20,0,295,12],[24,0,295,16],[32,0,295,24],[37,0,295,29],[46,0,295,38],[48,0,295,40],[50,0,295,42],[113,0,295,105]],[[24,0,297,14],[110,0,297,100]],[[24,0,298,14],[30,0,298,20],[39,0,298,29],[42,0,298,32],[46,0,298,36],[47,0,298,37],[51,0,298,41],[52,0,298,42],[70,0,298,60],[72,0,298,62],[88,0,298,78],[90,0,298,80],[113,0,298,103],[115,0,298,105],[125,0,298,115],[127,0,298,117],[135,0,298,125],[136,0,298,126],[137,0,298,127],[141,0,298,131],[142,0,299,16],[145,0,299,19],[146,0,299,20],[150,0,299,24],[151,0,299,25],[153,0,299,27]],[[28,0,300,18],[52,0,300,42]],[[28,0,301,18],[35,0,301,25],[37,0,301,26],[40,0,301,29],[42,0,301,31],[58,0,301,47],[60,0,301,49],[65,0,301,54],[67,0,301,56],[71,0,301,60],[73,0,301,61],[74,0,301,62],[75,0,301,63],[134,0,301,122]],[[24,0,302,16],[25,0,302,17],[26,0,302,18],[27,0,303,15],[28,0,303,16]],[[24,0,304,14],[34,0,304,24],[35,0,304,25],[39,0,304,29],[40,0,304,30],[49,0,304,39],[50,0,304,40],[51,0,304,41]],[[21,0,306,13]],[[25,0,306,19],[27,0,306,21],[96,0,306,90]],[[24,0,307,14],[42,0,307,32],[43,0,307,33],[50,0,307,40],[51,0,307,41],[52,0,307,42],[62,0,307,66],[64,0,307,68],[66,0,307,70]],[[28,0,309,16],[114,0,309,102]],[[28,0,310,16],[34,0,310,22],[43,0,310,31],[46,0,310,34],[50,0,310,38],[51,0,310,39],[55,0,310,43],[56,0,310,44],[66,0,310,54],[68,0,310,56],[84,0,310,72],[86,0,310,74],[109,0,310,97],[111,0,310,99],[121,0,310,109],[122,0,310,110],[123,0,310,111],[127,0,310,115],[128,0,311,18],[131,0,311,21],[132,0,311,22],[136,0,311,26],[137,0,311,27],[139,0,311,29]],[[32,0,312,20],[58,0,312,46]],[[32,0,313,20],[125,0,313,113]],[[32,0,314,20],[39,0,314,27],[41,0,314,28],[44,0,314,31],[46,0,314,33],[62,0,314,49],[64,0,314,51],[69,0,314,56],[71,0,314,58],[72,0,314,59],[76,0,314,63],[77,0,314,64],[79,0,314,65],[80,0,314,66]],[[28,0,315,18],[29,0,315,19],[30,0,315,20],[31,0,316,17],[32,0,316,18]],[[28,0,318,16],[38,0,318,26],[39,0,318,27],[43,0,318,31],[44,0,318,32],[53,0,318,41],[54,0,318,42],[55,0,318,43]],[[24,0,319,14],[25,0,319,15],[26,0,319,16],[27,0,319,17]],[[21,0,320,13]],[[17,0,321,11]],[[21,0,321,17],[23,0,321,19],[59,0,321,55]],[[20,0,322,12],[28,0,322,20],[31,0,322,23],[39,0,322,31],[44,0,322,36],[53,0,322,45],[54,0,322,46],[55,0,322,47],[56,0,322,48],[64,0,322,56],[65,0,322,57],[66,0,322,58],[67,0,322,59],[71,0,322,63],[72,0,322,64],[84,0,322,76],[85,0,322,77]],[[20,0,324,12],[106,0,324,98]],[[20,0,325,12],[26,0,325,18],[35,0,325,27],[38,0,325,30],[42,0,325,34],[43,0,325,35],[47,0,325,39],[48,0,325,40],[66,0,325,58],[68,0,325,60],[84,0,325,76],[86,0,325,78],[109,0,325,101],[111,0,325,103],[121,0,325,113],[123,0,325,115],[131,0,325,123],[132,0,325,124],[133,0,325,125],[137,0,325,129],[138,0,326,14],[141,0,326,17],[142,0,326,18],[146,0,326,22],[147,0,326,23],[149,0,326,25]],[[24,0,327,16],[48,0,327,40]],[[24,0,328,16],[31,0,328,23],[33,0,328,24],[36,0,328,27],[38,0,328,29],[54,0,328,45],[56,0,328,47],[61,0,328,52],[63,0,328,54],[67,0,328,58],[69,0,328,59],[70,0,328,60],[71,0,328,61],[130,0,328,120]],[[20,0,329,14],[21,0,329,15],[22,0,329,16],[23,0,330,13],[24,0,330,14]],[[20,0,332,12],[30,0,332,22],[31,0,332,23],[35,0,332,27],[36,0,332,28],[45,0,332,37],[46,0,332,38],[47,0,332,39]],[[17,0,333,11]],[[13,0,334,9],[14,0,334,10],[36,0,334,32]],[[12,0,336,8],[16,0,336,12],[26,0,336,22],[27,0,336,23],[33,0,336,29],[36,0,336,32],[37,0,336,33],[39,0,336,35],[41,0,336,37],[113,0,336,109]],[[16,0,338,10],[89,0,338,83]],[[16,0,339,10],[23,0,339,17],[36,0,339,30],[37,0,339,31],[47,0,339,41],[48,0,339,42],[49,0,339,43],[53,0,339,47]],[[16,0,340,12],[48,0,340,44]],[[16,0,342,12],[139,0,342,135]],[[16,0,343,12],[141,0,343,137]],[[16,0,344,12],[34,0,344,30]],[[16,0,346,12],[19,0,346,15],[20,0,346,16],[21,0,346,17],[29,0,346,49],[31,0,346,51],[33,0,346,53]],[[20,0,347,14],[26,0,347,20],[37,0,347,31],[40,0,347,34],[42,0,347,36],[43,0,347,37]],[[20,0,349,14],[28,0,349,22],[29,0,349,23],[36,0,349,30],[37,0,349,31],[38,0,349,32],[41,0,349,61],[43,0,349,63],[45,0,349,65]],[[24,0,351,16],[30,0,351,22],[33,0,351,25],[36,0,351,28],[39,0,351,31],[40,0,351,32],[43,0,351,35],[44,0,351,36]],[[24,0,352,16],[30,0,352,22],[35,0,352,27],[38,0,352,30],[41,0,352,33],[42,0,352,34],[47,0,352,39],[48,0,352,40]],[[24,0,354,16],[126,0,354,118]],[[24,0,355,16],[37,0,355,29]],[[24,0,356,16],[28,0,356,20],[39,0,356,31],[40,0,356,32],[54,0,356,46],[55,0,356,47],[58,0,356,50],[59,0,356,51],[63,0,356,55],[68,0,356,60],[69,0,356,61],[76,0,356,68],[77,0,356,69],[88,0,356,80],[89,0,356,81],[92,0,356,84],[93,0,356,85],[94,0,356,86],[96,0,356,88]],[[28,0,357,18],[123,0,357,113]],[[28,0,358,18],[41,0,358,31]],[[28,0,359,19],[39,0,359,30],[40,0,359,31],[43,0,359,34],[44,0,359,50],[45,0,359,51],[49,0,359,55],[50,0,359,56],[55,0,359,61],[56,0,359,62],[57,0,359,63],[58,0,359,64],[59,0,359,65],[60,0,359,66]],[[25,0,360,17]],[[29,0,360,23]],[[28,0,361,18],[41,0,361,31]],[[28,0,362,18],[39,0,362,29],[40,0,362,30],[43,0,362,33],[44,0,362,34],[47,0,362,37],[52,0,362,42],[53,0,362,43]],[[25,0,363,17]],[[20,0,364,14],[21,0,364,15],[22,0,364,16],[23,0,364,17]],[[20,0,366,14],[27,0,366,21],[38,0,366,37],[39,0,366,38]],[[16,0,367,12],[17,0,367,13],[18,0,367,14]],[[16,0,369,12],[64,0,369,60]],[[16,0,371,12],[19,0,371,15],[20,0,371,16],[21,0,371,17],[32,0,371,31],[34,0,371,33],[36,0,371,35]],[[20,0,372,14],[27,0,372,21],[29,0,372,22],[32,0,372,25],[43,0,372,36],[45,0,372,38],[48,0,372,41],[59,0,372,52],[61,0,372,58],[62,0,372,59]],[[16,0,373,12],[17,0,373,13],[18,0,373,14],[19,0,375,11],[20,0,375,12]],[[13,0,376,9]],[[17,0,376,15]],[[16,0,377,10],[23,0,377,17],[25,0,377,19],[26,0,377,20],[37,0,377,31],[38,0,377,32],[39,0,377,33]],[[13,0,378,9]],[[8,0,379,6],[9,0,379,7],[10,0,379,8],[11,0,380,5],[12,0,380,6],[16,0,380,10]],[[8,0,381,6],[21,0,381,19]],[[8,0,382,6],[12,0,382,10],[13,0,382,11],[14,0,382,12],[15,0,382,13],[16,0,383,5],[17,0,383,6]],[[4,0,384,2],[5,0,384,3]],[[4,0,386,2],[41,0,386,39]],[[4,0,388,2]],[],[],[],[],[],[],[],[],[],[[7,0,398,5]],[[4,0,399,9],[11,0,399,16],[12,0,399,53],[16,0,399,69],[18,0,400,53],[24,0,400,78],[26,0,401,53],[49,0,401,99],[51,0,401,101],[53,0,402,53],[73,0,402,82],[77,0,402,86]],[[8,0,404,4],[12,0,404,8],[32,0,404,28],[36,0,404,32],[40,0,404,36],[44,0,404,40],[64,0,404,60],[65,0,404,61],[71,0,404,67],[76,0,404,72],[77,0,404,73],[79,0,404,75]],[[12,0,405,6],[19,0,405,13],[23,0,405,17],[24,0,405,18],[37,0,405,31],[38,0,405,32],[42,0,405,36],[44,0,405,38],[50,0,405,44],[52,0,405,46],[69,0,405,63],[70,0,405,64],[71,0,405,65],[72,0,405,66],[125,0,405,119]],[[9,0,406,5]],[[8,0,408,4],[14,0,408,10],[19,0,408,15],[22,0,408,18],[26,0,408,22],[27,0,408,23],[50,0,408,46],[51,0,408,47],[55,0,408,51],[57,0,408,53],[63,0,408,59],[65,0,408,61],[85,0,408,81],[87,0,408,83],[104,0,408,100],[105,0,408,101],[106,0,408,102]],[[8,0,409,4],[15,0,409,11],[19,0,409,15],[20,0,409,16],[32,0,409,28],[33,0,409,29],[38,0,409,34],[39,0,409,35],[40,0,409,36]],[[4,0,410,2],[5,0,410,3]],[[4,0,412,2]],[],[],[],[],[],[[7,0,418,5]],[[4,0,419,9],[19,0,419,24],[20,0,419,28],[27,0,419,56],[29,0,419,58],[33,0,419,65],[35,0,419,67],[55,0,419,96],[59,0,419,100]],[[8,0,420,4],[65,0,420,61]],[[8,0,421,4],[14,0,421,10],[19,0,421,15],[22,0,421,30],[32,0,421,40],[33,0,421,41],[37,0,421,45],[38,0,421,46],[40,0,421,48],[41,0,421,49],[50,0,421,58],[51,0,421,59],[52,0,421,60]],[[8,0,423,4],[12,0,423,8],[29,0,423,25],[31,0,423,27]],[[12,0,424,6],[16,0,424,10],[19,0,424,13],[34,0,424,28],[35,0,424,29],[39,0,424,33],[41,0,424,35],[46,0,424,40],[47,0,424,41],[48,0,424,42]],[[9,0,425,5]],[[8,0,427,4],[15,0,427,11],[16,0,427,12],[23,0,427,19],[24,0,427,20],[25,0,427,21],[31,0,427,27],[33,0,427,29],[35,0,427,31]],[[12,0,428,6],[17,0,428,11],[18,0,428,12],[24,0,428,18],[25,0,428,19],[31,0,428,25],[33,0,428,27],[37,0,428,31],[38,0,428,32],[39,0,428,33]],[[8,0,429,4],[9,0,429,5],[10,0,429,6],[11,0,429,7]],[[8,0,431,4],[15,0,431,11],[19,0,431,15],[20,0,431,16],[32,0,431,28],[33,0,431,29],[38,0,431,34],[39,0,431,35],[40,0,431,36]],[[4,0,432,2],[5,0,432,3]],[[4,0,435,2]],[],[],[],[],[],[],[],[],[[7,0,444,5]],[[4,0,445,9],[16,0,445,21],[17,0,445,25],[23,0,445,50],[25,0,446,25],[30,0,446,38],[32,0,447,25],[55,0,447,70],[57,0,447,72],[59,0,448,25],[79,0,448,69]],[[8,0,450,4],[12,0,450,8],[32,0,450,28],[36,0,450,32],[40,0,450,36],[42,0,450,38]],[[12,0,451,6],[32,0,451,26],[35,0,451,29],[55,0,451,74],[56,0,451,75]],[[9,0,452,5]],[[8,0,454,4],[14,0,454,10],[27,0,454,23],[30,0,454,47],[36,0,454,53],[37,0,454,54],[43,0,454,60],[44,0,454,61]],[[8,0,456,4],[15,0,456,11],[19,0,456,15],[20,0,456,16],[33,0,456,29],[34,0,456,30],[40,0,456,36],[42,0,456,38],[62,0,456,58],[63,0,456,59],[64,0,456,60],[68,0,456,64]],[[8,0,457,6],[21,0,457,19]],[[8,0,458,6],[12,0,458,10],[13,0,458,11],[14,0,458,12],[15,0,458,13],[17,0,459,6],[20,0,459,9],[21,0,459,10],[22,0,459,11],[29,0,459,21],[31,0,459,23],[33,0,459,25],[34,0,459,26],[38,0,459,30],[39,0,459,31],[58,0,459,50],[59,0,459,51],[66,0,459,58],[68,0,459,60],[88,0,459,80],[89,0,459,81],[90,0,459,82],[92,0,460,6],[101,0,460,15],[102,0,460,16],[103,0,460,17],[110,0,460,27],[112,0,460,29],[114,0,460,31]],[[12,0,461,8],[19,0,461,15],[23,0,461,19],[24,0,461,20],[28,0,461,24],[29,0,461,25],[36,0,461,32],[38,0,461,34],[51,0,461,47],[53,0,461,49],[73,0,461,69],[75,0,461,71],[80,0,461,76],[82,0,461,78],[87,0,461,83],[88,0,461,84],[89,0,461,85],[93,0,461,89],[94,0,461,91],[120,0,461,117],[121,0,462,10],[129,0,462,18],[130,0,462,19],[137,0,462,26],[138,0,462,27],[140,0,462,29]],[[16,0,463,12],[23,0,463,19],[27,0,463,23],[28,0,463,24],[35,0,463,31],[36,0,463,32],[42,0,463,38],[44,0,463,40],[64,0,463,60],[65,0,463,61],[66,0,463,62],[70,0,463,66],[71,0,464,14],[74,0,464,17],[75,0,464,18],[78,0,464,21],[80,0,464,23],[81,0,464,24],[88,0,464,31],[89,0,464,32],[90,0,464,33],[113,0,464,56],[114,0,465,13],[115,0,465,14]],[[12,0,466,10],[13,0,466,11],[14,0,466,12],[15,0,467,9],[16,0,467,10]],[[8,0,468,6],[9,0,468,7],[10,0,468,8],[12,0,469,6],[22,0,469,16],[23,0,469,17],[26,0,469,20],[27,0,469,21],[29,0,469,23]],[[12,0,470,8],[19,0,470,15],[20,0,470,16],[23,0,470,19],[24,0,470,20],[51,0,470,47],[54,0,470,50],[57,0,470,53],[58,0,470,54],[59,0,470,55]],[[12,0,471,8],[18,0,471,14],[21,0,471,17],[22,0,471,18]],[[8,0,472,6],[9,0,472,7],[10,0,472,8],[12,0,473,6],[16,0,473,10],[17,0,473,11],[18,0,473,12],[19,0,473,13],[20,0,474,5],[21,0,474,6]],[[4,0,476,2],[5,0,476,3]],[[4,0,478,2],[28,0,478,26]],[[4,0,481,2]],[],[],[],[],[],[],[],[],[[7,0,490,5]],[[4,0,491,9],[20,0,491,25],[21,0,491,55],[26,0,491,80],[28,0,492,55],[37,0,492,72],[39,0,493,55],[46,0,493,70],[48,0,494,55],[55,0,494,62],[58,0,494,65],[63,0,494,70]],[[8,0,496,4],[12,0,496,8],[21,0,496,17],[25,0,496,21],[29,0,496,25],[33,0,496,29],[40,0,496,36],[44,0,496,40],[48,0,496,44],[52,0,496,48],[61,0,496,57],[66,0,496,62],[73,0,496,69],[77,0,496,73],[82,0,496,78],[83,0,496,79],[89,0,496,85],[93,0,496,89],[94,0,496,90],[96,0,496,92],[98,0,496,94],[130,0,496,126]],[[12,0,497,6],[19,0,497,13],[21,0,497,15],[23,0,497,17],[24,0,497,18]],[[9,0,498,5]],[[8,0,500,4],[12,0,500,8],[17,0,500,13],[18,0,500,14],[19,0,500,15],[20,0,500,16],[22,0,500,18],[39,0,500,35],[43,0,500,39],[47,0,500,43],[49,0,500,45]],[[12,0,501,6],[18,0,501,12],[23,0,501,17],[26,0,501,39]],[[16,0,502,8],[20,0,502,12],[22,0,502,14],[40,0,502,32]],[[16,0,503,8],[20,0,503,12],[22,0,503,14],[31,0,503,23]],[[16,0,504,8],[23,0,504,15],[25,0,504,17],[124,0,504,116]],[[13,0,505,7],[14,0,505,8]],[[12,0,506,6],[18,0,506,12],[23,0,506,17],[24,0,506,18]],[[9,0,507,5]],[[8,0,509,4],[14,0,509,10],[19,0,509,15],[22,0,509,18],[26,0,509,22],[27,0,509,23],[60,0,509,56],[61,0,509,57],[66,0,509,62],[68,0,509,64],[77,0,509,73],[79,0,509,75],[86,0,509,82],[88,0,509,84],[95,0,509,91],[96,0,509,92],[97,0,509,93]],[[8,0,511,4],[15,0,511,11],[19,0,511,15],[20,0,511,16],[32,0,511,28],[33,0,511,29],[38,0,511,34],[39,0,511,35],[40,0,511,36]],[[4,0,512,2],[5,0,512,3]],[[4,0,514,2]],[],[],[],[],[],[],[],[],[[7,0,523,5]],[[4,0,524,12],[37,0,524,45],[38,0,524,75],[43,0,524,100],[45,0,525,75],[54,0,525,92],[56,0,526,75],[63,0,526,90],[65,0,527,75],[72,0,527,82],[75,0,527,85],[80,0,527,90]],[[8,0,529,4],[14,0,529,10],[25,0,529,21],[28,0,529,24],[32,0,529,28],[33,0,529,29],[36,0,529,32],[37,0,529,33],[46,0,529,42],[48,0,529,44],[55,0,529,51],[56,0,529,52],[57,0,529,53]],[[8,0,530,4],[14,0,530,10],[19,0,530,15],[22,0,530,30],[32,0,530,40],[33,0,530,41],[37,0,530,45],[38,0,530,46],[40,0,530,48],[41,0,530,49],[50,0,530,58],[51,0,530,59],[52,0,530,60]],[[8,0,532,4],[12,0,532,8],[21,0,532,17],[25,0,532,21],[29,0,532,25],[33,0,532,29],[40,0,532,36],[44,0,532,40],[48,0,532,44],[52,0,532,48],[61,0,532,57],[66,0,532,62],[73,0,532,69],[75,0,532,71],[77,0,532,73],[109,0,532,105]],[[12,0,533,6],[19,0,533,13],[24,0,533,18],[25,0,533,19]],[[9,0,534,5]],[[8,0,536,4],[12,0,536,8],[21,0,536,37],[22,0,536,38]],[[8,0,538,4],[12,0,538,8],[19,0,538,15],[21,0,538,17]],[[12,0,539,6],[21,0,539,15],[24,0,539,18],[30,0,539,24],[31,0,539,25],[37,0,539,31],[38,0,539,32],[40,0,539,34],[42,0,539,36],[47,0,539,41],[48,0,539,42],[49,0,539,43]],[[9,0,540,5]],[[13,0,540,11]],[[12,0,541,6],[21,0,541,15],[24,0,541,18],[29,0,541,23],[30,0,541,24]],[[9,0,542,5]],[[8,0,544,4],[23,0,544,19],[24,0,544,23],[33,0,544,32],[35,0,544,34],[44,0,544,43],[46,0,544,45],[53,0,544,52],[54,0,544,53],[55,0,544,54]],[[8,0,546,4],[14,0,546,10],[31,0,546,27],[34,0,546,50],[43,0,546,59],[44,0,546,60],[49,0,546,65],[50,0,546,66],[61,0,546,77],[62,0,546,78],[63,0,546,79]],[[8,0,548,4],[12,0,548,8],[13,0,548,9],[16,0,548,12],[27,0,548,23],[28,0,548,24]],[[8,0,549,4],[13,0,549,9],[19,0,549,15],[23,0,549,19],[27,0,549,23],[44,0,549,40],[46,0,549,42]],[[12,0,550,6],[16,0,550,10],[17,0,550,11],[24,0,550,18],[26,0,550,20],[28,0,550,22],[103,0,550,97]],[[16,0,551,8],[20,0,551,12],[21,0,551,13],[26,0,551,18],[29,0,551,21],[30,0,551,22],[31,0,551,23]],[[13,0,552,7]],[[12,0,553,6],[18,0,553,12],[21,0,553,15],[24,0,553,18],[38,0,553,32],[39,0,553,33],[43,0,553,37],[44,0,553,38],[61,0,553,55],[62,0,553,56],[66,0,553,60],[68,0,553,62],[72,0,553,66],[73,0,553,67],[75,0,553,69],[76,0,553,70],[85,0,553,79],[86,0,553,101],[87,0,553,102]],[[12,0,554,6],[17,0,554,11],[18,0,554,12],[24,0,554,18],[25,0,554,19],[28,0,554,22],[30,0,554,24],[32,0,554,25],[37,0,554,30],[39,0,554,32],[40,0,554,33],[42,0,554,34],[43,0,554,35],[44,0,554,36]],[[12,0,555,6],[13,0,555,7],[15,0,555,9],[16,0,555,10]],[[9,0,556,5]],[[8,0,558,4],[15,0,558,11],[20,0,558,16],[21,0,558,17]],[[4,0,559,2],[5,0,559,3]],[[4,0,561,2]],[],[],[],[],[],[],[[7,0,568,5]],[[4,0,569,9],[29,0,569,34],[30,0,569,64],[35,0,569,89],[37,0,570,64],[50,0,570,85],[52,0,571,64],[75,0,571,109],[77,0,571,111],[79,0,572,64],[89,0,572,83],[94,0,572,88]],[[8,0,574,4],[12,0,574,8],[21,0,574,37],[22,0,574,38]],[[8,0,576,4],[12,0,576,8],[19,0,576,15],[21,0,576,17]],[[12,0,577,6],[21,0,577,15],[24,0,577,18],[30,0,577,24],[31,0,577,25],[37,0,577,31],[38,0,577,32],[40,0,577,34],[42,0,577,36],[47,0,577,41],[48,0,577,42],[49,0,577,43]],[[9,0,578,5]],[[13,0,578,11]],[[12,0,579,6],[21,0,579,15],[24,0,579,18],[29,0,579,23],[30,0,579,24]],[[9,0,580,5]],[[8,0,582,4],[14,0,582,10],[26,0,582,22],[29,0,582,25],[38,0,582,34],[39,0,582,35],[52,0,582,48],[53,0,582,49],[54,0,582,50]],[[8,0,584,4],[82,0,584,78]],[[8,0,585,4],[15,0,585,11],[19,0,585,15],[20,0,585,16],[35,0,585,31],[36,0,585,32],[48,0,585,44],[49,0,585,45],[66,0,585,62],[67,0,585,63],[70,0,585,66],[72,0,585,68],[92,0,585,88],[93,0,585,89],[94,0,585,90],[98,0,585,94],[99,0,586,6],[102,0,586,9],[103,0,586,10],[104,0,586,11],[109,0,586,16],[111,0,586,18],[113,0,586,20]],[[12,0,587,8],[101,0,587,97]],[[12,0,588,8],[21,0,588,17],[22,0,588,18],[26,0,588,22],[27,0,588,23],[31,0,588,27],[32,0,588,28],[34,0,588,30],[35,0,588,31],[39,0,588,35],[40,0,588,36],[45,0,588,41],[46,0,588,42],[47,0,588,43],[48,0,588,44],[85,0,588,81]],[[12,0,589,8],[21,0,589,17],[22,0,589,18],[28,0,589,24],[29,0,589,25],[42,0,589,38],[44,0,589,40],[45,0,589,41],[46,0,589,42],[47,0,589,43]],[[12,0,591,8],[16,0,591,12],[17,0,591,13],[54,0,591,50],[55,0,591,54],[64,0,591,63],[66,0,591,65],[71,0,591,70],[72,0,591,71],[73,0,591,72]],[[12,0,593,8],[19,0,593,15],[24,0,593,20],[25,0,593,21]],[[8,0,594,6],[9,0,594,7],[10,0,594,8],[12,0,596,6],[21,0,596,15],[22,0,596,16],[23,0,596,17],[28,0,596,22],[30,0,596,24],[32,0,596,26],[33,0,596,27],[37,0,596,31],[38,0,596,32],[50,0,596,44],[51,0,596,45],[56,0,596,50],[57,0,596,51],[58,0,596,52],[59,0,597,5],[60,0,597,6]],[[4,0,598,2],[5,0,598,3]],[[4,0,600,2]],[],[],[],[],[],[],[[7,0,607,5]],[[4,0,608,9],[30,0,608,35],[31,0,608,65],[36,0,608,90],[38,0,609,65],[53,0,609,90],[55,0,610,65],[78,0,610,110],[80,0,610,112],[82,0,611,65],[92,0,611,84],[97,0,611,89]],[[8,0,613,4],[12,0,613,8],[21,0,613,37],[22,0,613,38]],[[8,0,615,4],[12,0,615,8],[19,0,615,15],[21,0,615,17]],[[12,0,616,6],[21,0,616,15],[24,0,616,18],[30,0,616,24],[31,0,616,25],[37,0,616,31],[38,0,616,32],[40,0,616,34],[42,0,616,36],[47,0,616,41],[48,0,616,42],[49,0,616,43]],[[9,0,617,5]],[[13,0,617,11]],[[12,0,618,6],[21,0,618,15],[24,0,618,18],[29,0,618,23],[30,0,618,24]],[[9,0,619,5]],[[8,0,621,4],[17,0,621,13],[18,0,621,14],[22,0,621,18],[23,0,621,19],[27,0,621,23],[28,0,621,24],[30,0,621,26],[31,0,621,27],[35,0,621,31],[36,0,621,32],[41,0,621,37],[42,0,621,38],[43,0,621,39],[44,0,621,40],[81,0,621,77]],[[8,0,623,4],[14,0,623,10],[27,0,623,23],[30,0,623,26],[39,0,623,35],[40,0,623,36],[46,0,623,42],[47,0,623,43],[48,0,623,44],[52,0,623,48],[54,0,623,50],[55,0,623,51],[57,0,623,53],[59,0,623,55]],[[12,0,624,6],[19,0,624,13],[34,0,624,28],[35,0,624,29],[44,0,624,38],[45,0,624,39],[47,0,624,41],[48,0,624,42],[50,0,624,44],[51,0,624,45],[53,0,624,47],[58,0,624,52],[59,0,624,53],[60,0,624,54],[65,0,624,59],[66,0,624,60],[67,0,624,61],[68,0,624,62]],[[8,0,625,4],[9,0,625,5],[10,0,625,6],[11,0,625,7]],[[8,0,627,4],[61,0,627,57]],[[8,0,628,4],[53,0,628,49]],[[8,0,629,4],[23,0,629,19],[24,0,629,20],[28,0,629,24],[30,0,629,26],[31,0,629,27]],[[8,0,630,4],[13,0,630,9],[17,0,630,13],[18,0,630,14],[21,0,630,17],[36,0,630,32],[37,0,630,33],[43,0,630,39],[46,0,630,42],[47,0,630,43],[49,0,630,45],[50,0,630,46],[54,0,630,50],[55,0,630,51],[57,0,630,53],[58,0,630,54],[60,0,630,56],[62,0,630,58]],[[12,0,631,6],[21,0,631,15],[22,0,631,16],[28,0,631,22],[29,0,631,23],[44,0,631,38],[45,0,631,39],[46,0,631,40],[47,0,631,41],[49,0,631,43],[50,0,631,44],[51,0,631,45],[52,0,631,46]],[[9,0,632,5]],[[8,0,634,4],[14,0,634,10],[25,0,634,21],[28,0,634,59],[30,0,634,61],[31,0,634,62]],[[8,0,636,4],[91,0,636,87]],[[8,0,637,4],[21,0,637,17],[22,0,637,18],[29,0,637,25],[30,0,637,26],[42,0,637,38],[43,0,637,39],[45,0,637,41]],[[12,0,639,6],[18,0,639,12],[22,0,639,16],[25,0,639,19],[29,0,639,23],[30,0,639,24],[56,0,639,50],[57,0,639,51],[69,0,639,63],[70,0,639,64],[87,0,639,81],[88,0,639,82],[91,0,639,85],[93,0,639,87],[113,0,639,107],[114,0,639,108],[115,0,639,109],[119,0,639,113],[120,0,640,8],[124,0,640,12],[125,0,640,13],[126,0,640,14],[127,0,640,15],[128,0,641,7],[129,0,641,8]],[[12,0,642,6],[23,0,642,17],[24,0,642,18],[28,0,642,22],[29,0,642,23],[33,0,642,27],[34,0,642,28],[35,0,642,29]],[[8,0,643,4],[9,0,643,5],[10,0,643,6],[11,0,643,7]],[[8,0,646,4],[15,0,646,11],[23,0,646,19],[24,0,646,20],[35,0,646,31],[36,0,646,32],[37,0,646,33],[41,0,646,37],[42,0,647,6],[46,0,647,10],[47,0,647,11],[48,0,647,12],[49,0,647,13],[51,0,648,6],[54,0,648,9],[55,0,648,10],[56,0,648,11],[69,0,648,24],[71,0,648,26],[73,0,648,28]],[[12,0,649,8],[78,0,649,74]],[[12,0,650,8],[16,0,650,12],[23,0,650,19],[26,0,650,43],[28,0,650,45],[29,0,650,46]],[[12,0,652,8],[25,0,652,21],[26,0,652,22],[33,0,652,29],[34,0,652,30],[38,0,652,34],[39,0,652,35],[41,0,652,37]],[[16,0,653,10],[23,0,653,17],[26,0,653,20],[33,0,653,27],[34,0,653,28],[40,0,653,34],[41,0,653,35],[45,0,653,39],[46,0,653,40],[47,0,653,41]],[[12,0,654,8],[13,0,654,9],[14,0,654,10],[15,0,654,11]],[[12,0,656,8],[19,0,656,15],[26,0,656,22],[27,0,656,23]],[[8,0,657,6],[9,0,657,7],[10,0,657,8],[12,0,658,6],[15,0,658,9],[16,0,658,10],[17,0,658,11],[24,0,658,53],[26,0,658,55],[28,0,658,57],[29,0,658,58],[33,0,658,62],[34,0,658,63],[62,0,658,91],[63,0,658,92],[70,0,658,99],[71,0,658,100],[72,0,658,101],[74,0,659,6],[77,0,659,9],[78,0,659,10],[79,0,659,11],[84,0,659,28],[86,0,659,30],[88,0,659,32],[89,0,659,33],[93,0,659,37],[94,0,659,38],[131,0,659,75],[132,0,659,79],[141,0,659,88],[143,0,659,90],[148,0,659,95],[149,0,659,96],[150,0,659,97],[152,0,660,6],[161,0,660,15],[162,0,660,16],[163,0,660,17],[168,0,660,22],[170,0,660,24],[172,0,660,26],[173,0,660,27],[177,0,660,31],[178,0,660,32],[190,0,660,44],[191,0,660,45],[196,0,660,50],[197,0,660,51],[198,0,660,52],[199,0,661,5],[200,0,661,6]],[[4,0,662,2],[5,0,662,3]],[[4,0,664,2]],[],[],[],[],[],[],[],[[7,0,672,5]],[[4,0,673,12],[41,0,673,49],[42,0,674,4],[47,0,674,29],[49,0,675,4],[57,0,675,24],[67,0,675,34],[68,0,675,35],[72,0,675,39],[73,0,675,40],[75,0,675,42],[76,0,675,43],[85,0,675,52],[86,0,675,53]],[[8,0,678,4],[13,0,678,9],[14,0,678,10],[21,0,678,17],[22,0,678,18],[23,0,678,19],[27,0,678,23],[29,0,678,25],[34,0,678,30],[36,0,678,32],[38,0,678,34]],[[12,0,679,6],[16,0,679,10],[20,0,679,14],[21,0,679,15],[26,0,679,20],[31,0,679,25],[36,0,679,30],[38,0,679,32]],[[16,0,680,8],[20,0,680,12],[21,0,680,13],[26,0,680,18],[29,0,680,21],[34,0,680,26],[35,0,680,27],[36,0,680,28],[111,0,680,103]],[[16,0,681,8],[22,0,681,14],[25,0,681,17],[28,0,681,20],[42,0,681,34],[43,0,681,35],[47,0,681,39],[48,0,681,40],[65,0,681,57],[66,0,681,58],[70,0,681,62],[72,0,681,64],[76,0,681,68],[77,0,681,69],[79,0,681,71],[80,0,681,72],[89,0,681,81],[90,0,681,103],[91,0,681,104]],[[16,0,682,8],[21,0,682,13],[22,0,682,14],[28,0,682,20],[29,0,682,21],[32,0,682,24],[34,0,682,26],[36,0,682,27],[41,0,682,32],[43,0,682,33],[44,0,682,34],[45,0,682,35]],[[13,0,683,7]],[[8,0,684,4],[9,0,684,5],[10,0,684,6],[11,0,684,7]],[[8,0,686,4],[15,0,686,11],[20,0,686,16],[21,0,686,17]],[[4,0,687,2],[5,0,687,3]],[[4,0,689,9],[29,0,689,34],[30,0,690,4],[43,0,690,37],[45,0,691,4],[57,0,691,36],[59,0,692,4],[72,0,692,25],[74,0,693,4],[86,0,693,24],[88,0,694,4],[104,0,694,28],[106,0,695,4],[137,0,695,60],[139,0,696,4],[170,0,696,35],[173,0,696,38],[177,0,696,42],[179,0,697,4],[186,0,697,11],[189,0,697,14],[194,0,697,19]],[[8,0,699,4],[14,0,699,10],[19,0,699,15],[22,0,699,30],[26,0,699,34],[27,0,699,35],[64,0,699,72],[65,0,699,73],[78,0,699,86],[80,0,700,6],[92,0,700,18],[94,0,701,6],[107,0,701,19],[109,0,702,6],[121,0,702,18],[123,0,703,6],[139,0,703,22],[141,0,704,6],[172,0,704,37],[174,0,705,6],[205,0,705,37],[207,0,706,6],[214,0,706,13],[215,0,706,14],[216,0,706,15]],[[8,0,708,4],[15,0,708,11],[19,0,708,15],[20,0,708,16],[32,0,708,28],[33,0,708,29],[38,0,708,34],[39,0,708,35],[40,0,708,36]],[[4,0,709,2],[5,0,709,3]],[[4,0,712,2],[43,0,712,41]],[[4,0,714,2]],[],[],[],[],[[7,0,719,5]],[[4,0,720,9],[11,0,720,16],[12,0,720,17],[18,0,720,42],[20,0,720,44],[43,0,720,89],[45,0,720,91]],[[8,0,722,4],[12,0,722,8],[32,0,722,28],[36,0,722,32],[40,0,722,36],[44,0,722,40],[64,0,722,60],[65,0,722,61],[71,0,722,67],[76,0,722,72],[77,0,722,73],[79,0,722,75]],[[12,0,723,6],[54,0,723,48]],[[12,0,724,6],[19,0,724,13],[23,0,724,17],[24,0,724,18],[26,0,724,20],[27,0,724,21],[33,0,724,27],[34,0,724,28],[40,0,724,34],[41,0,724,35],[42,0,724,36]],[[9,0,725,5]],[[8,0,727,4],[15,0,727,11],[19,0,727,15],[20,0,727,16],[46,0,727,42],[47,0,727,43],[53,0,727,49],[55,0,727,51],[75,0,727,71],[76,0,727,72],[77,0,727,73],[81,0,727,77],[82,0,728,6],[91,0,728,15],[92,0,728,16],[93,0,728,17],[103,0,728,62],[105,0,728,64],[107,0,728,66],[108,0,728,67],[112,0,728,71],[113,0,728,72],[134,0,728,93],[135,0,728,94],[145,0,728,104],[146,0,728,105],[147,0,728,106],[148,0,733,5],[149,0,733,6]],[[4,0,734,2],[5,0,734,3]],[[4,0,736,2]],[],[],[],[],[],[[7,0,742,5]],[[4,0,743,9],[19,0,743,24],[20,0,743,25],[26,0,743,50],[28,0,744,25],[51,0,744,70],[53,0,744,72],[55,0,745,25],[63,0,745,45],[73,0,745,55],[74,0,745,56],[78,0,745,60],[79,0,745,61],[81,0,745,63],[82,0,745,64],[91,0,745,73],[92,0,745,74]],[[8,0,747,4],[12,0,747,8],[32,0,747,28],[36,0,747,32],[40,0,747,36],[44,0,747,40],[64,0,747,60],[65,0,747,61],[71,0,747,67],[76,0,747,72],[77,0,747,73],[79,0,747,75]],[[12,0,748,6],[54,0,748,48]],[[12,0,749,6],[17,0,749,11],[18,0,749,12],[24,0,749,18],[25,0,749,19],[31,0,749,25],[32,0,749,26],[33,0,749,27]],[[12,0,750,6],[19,0,750,13],[21,0,750,15],[22,0,750,16],[27,0,750,21],[28,0,750,22],[29,0,750,23]],[[9,0,751,5]],[[8,0,753,4],[15,0,753,11],[19,0,753,15],[20,0,753,16],[46,0,753,42],[47,0,753,43],[53,0,753,49],[55,0,753,51],[75,0,753,71],[76,0,753,72],[77,0,753,73],[81,0,753,77],[82,0,754,6],[85,0,754,9],[86,0,754,10],[87,0,754,11],[94,0,754,53],[96,0,754,55],[98,0,754,57],[99,0,754,58],[103,0,754,62],[104,0,754,63],[132,0,754,91],[133,0,754,92],[140,0,754,99],[141,0,754,100],[142,0,754,101],[144,0,755,6],[148,0,755,10],[149,0,755,11],[150,0,755,12],[151,0,755,13],[152,0,756,5],[153,0,756,6]],[[4,0,757,2],[5,0,757,3]],[[4,0,759,9],[26,0,759,31],[27,0,759,32],[35,0,759,50]],[[8,0,760,4],[14,0,760,10],[21,0,760,17],[24,0,761,6],[32,0,761,14],[33,0,761,15],[36,0,761,18],[37,0,761,19],[41,0,761,23],[42,0,761,24],[44,0,761,26],[45,0,761,27],[59,0,761,41],[60,0,761,42],[64,0,761,46],[66,0,761,48],[70,0,761,52],[71,0,761,53],[73,0,761,55],[74,0,761,56],[83,0,761,65],[84,0,761,87],[85,0,761,88],[86,0,761,89]],[[8,0,763,4],[15,0,763,11],[19,0,763,15],[20,0,763,16],[41,0,763,37],[42,0,763,38],[49,0,763,45],[50,0,763,46],[51,0,763,47]],[[4,0,764,2],[5,0,764,3]],[[4,0,766,2]],[],[],[],[],[[7,0,771,5]],[[4,0,772,9],[19,0,772,24],[20,0,772,25],[27,0,772,53],[29,0,772,55],[52,0,772,100],[54,0,772,102]],[[8,0,774,4],[12,0,774,8],[32,0,774,28],[36,0,774,32],[40,0,774,36],[44,0,774,40],[64,0,774,60],[65,0,774,61],[71,0,774,67],[76,0,774,72],[77,0,774,73],[79,0,774,75]],[[12,0,775,6],[19,0,775,13],[23,0,775,17],[24,0,775,18],[45,0,775,39],[46,0,775,40],[53,0,775,47],[54,0,775,48],[55,0,775,49]],[[9,0,776,5]],[[8,0,778,4],[14,0,778,10],[26,0,778,22],[29,0,778,49],[31,0,778,51],[32,0,778,52]],[[8,0,780,4],[15,0,780,11],[16,0,780,12],[23,0,780,19],[24,0,780,20],[30,0,780,26],[31,0,780,27],[33,0,780,29]],[[12,0,781,6],[18,0,781,12],[26,0,781,20],[29,0,781,23],[33,0,781,27],[34,0,781,28],[60,0,781,54],[61,0,781,55],[67,0,781,61],[69,0,781,63],[89,0,781,83],[90,0,781,84],[91,0,781,85]],[[12,0,782,6],[24,0,782,18],[25,0,782,19],[29,0,782,23],[30,0,782,24],[38,0,782,32],[39,0,782,33],[40,0,782,34]],[[8,0,783,4],[9,0,783,5],[10,0,783,6],[11,0,783,7]],[[8,0,785,4],[15,0,785,11],[28,0,785,24],[29,0,785,25],[41,0,785,37],[42,0,785,38],[43,0,785,39],[47,0,785,43]],[[8,0,786,6],[44,0,786,42]],[[8,0,787,6],[11,0,787,9],[12,0,787,10],[13,0,787,11],[18,0,787,23],[20,0,787,25],[22,0,787,27]],[[12,0,788,8],[16,0,788,12],[30,0,788,26],[33,0,788,50],[35,0,788,52],[36,0,788,53]],[[12,0,789,8],[17,0,789,13],[18,0,789,14],[25,0,789,21],[26,0,789,22],[30,0,789,26],[31,0,789,27],[33,0,789,29]],[[16,0,790,10],[30,0,790,24],[33,0,790,27],[47,0,790,41],[48,0,790,42],[54,0,790,48],[55,0,790,49],[59,0,790,53],[60,0,790,54],[61,0,790,55]],[[12,0,791,8],[13,0,791,9],[14,0,791,10],[15,0,791,11]],[[12,0,792,8],[19,0,792,15],[33,0,792,29],[34,0,792,30]],[[8,0,793,6],[9,0,793,7],[10,0,793,8]],[[8,0,794,6],[44,0,794,42]],[[8,0,795,6],[17,0,795,15],[18,0,795,16],[19,0,795,17],[29,0,795,48],[31,0,795,50],[33,0,795,52],[34,0,795,53],[38,0,795,57],[39,0,795,58],[60,0,795,79],[61,0,795,80],[71,0,795,90],[72,0,795,91],[73,0,795,92],[74,0,800,5],[75,0,800,6]],[[4,0,801,2],[5,0,801,3]],[[4,0,803,2]],[],[],[],[],[],[],[[7,0,810,5]],[[4,0,811,9],[21,0,811,26],[22,0,811,27],[35,0,811,61],[37,0,811,63],[60,0,811,108],[62,0,811,110]],[[8,0,812,4],[15,0,812,11],[19,0,812,15],[20,0,812,16],[59,0,812,55],[60,0,812,56],[73,0,812,69],[75,0,812,71],[95,0,812,91],[96,0,812,92],[97,0,812,93],[101,0,812,97],[102,0,813,6],[111,0,813,15],[112,0,813,16],[119,0,813,23],[120,0,813,24],[122,0,813,26],[123,0,813,27],[127,0,813,31],[128,0,813,32],[143,0,813,47],[144,0,813,48],[151,0,813,55],[152,0,813,56],[153,0,813,57],[154,0,814,5],[155,0,814,6],[159,0,814,10],[160,0,815,6],[164,0,815,10],[165,0,815,11],[166,0,815,12],[167,0,815,13],[168,0,816,5],[169,0,816,6]],[[4,0,817,2],[5,0,817,3]],[[4,0,820,2]],[],[],[],[],[],[[7,0,826,5]],[[4,0,827,9],[20,0,827,25],[21,0,827,26],[28,0,827,41],[30,0,827,43],[53,0,827,88],[55,0,827,90]],[[8,0,828,4],[14,0,828,10],[20,0,828,16],[23,0,828,19],[37,0,828,33],[38,0,828,34],[45,0,828,41],[47,0,828,43],[51,0,828,47],[52,0,828,48],[54,0,828,50],[55,0,828,51],[64,0,828,60],[65,0,828,82],[66,0,828,83]],[[8,0,829,4],[15,0,829,11],[19,0,829,15],[20,0,829,16],[27,0,829,23],[28,0,829,24],[34,0,829,30],[36,0,829,32],[56,0,829,52],[57,0,829,53],[58,0,829,54]],[[4,0,830,2],[5,0,830,3]],[[4,0,832,2]],[],[],[],[],[],[],[[7,0,839,5]],[[4,0,840,9],[15,0,840,20],[16,0,840,24],[20,0,840,41],[22,0,840,43],[45,0,840,88],[47,0,840,90]],[[8,0,842,4],[14,0,842,10],[21,0,842,17],[24,0,842,20],[28,0,842,24],[29,0,842,25],[58,0,842,54],[59,0,842,55],[63,0,842,59],[65,0,842,61],[85,0,842,81],[86,0,842,82],[87,0,842,83]],[[8,0,844,4],[15,0,844,11],[19,0,844,15],[20,0,844,16],[41,0,844,37],[42,0,844,38],[49,0,844,45],[50,0,844,46],[51,0,844,47],[55,0,844,51]],[[8,0,845,6],[105,0,845,103]],[[8,0,846,6],[73,0,846,71]],[[8,0,847,6],[32,0,847,30]],[[8,0,848,6],[14,0,848,12]],[[8,0,849,6],[12,0,849,10],[13,0,849,11],[14,0,849,12],[15,0,849,13],[16,0,850,5],[17,0,850,6]],[[4,0,851,2],[5,0,851,3]],[[4,0,876,9],[23,0,876,28],[24,0,876,32],[28,0,876,80],[30,0,877,32],[53,0,877,78],[55,0,877,80],[57,0,878,32],[84,0,878,69],[86,0,878,71]],[[8,0,880,4],[99,0,880,95]],[[8,0,881,4],[40,0,881,36]],[[8,0,883,4],[12,0,883,8],[17,0,883,13],[18,0,883,14],[25,0,883,21],[26,0,883,22],[30,0,883,26],[31,0,883,27],[33,0,883,29]],[[12,0,885,6],[18,0,885,12],[28,0,885,22],[31,0,885,35],[33,0,885,37],[34,0,885,38]],[[12,0,887,6],[16,0,887,10],[17,0,887,11],[24,0,887,18],[25,0,887,19],[26,0,887,20],[27,0,887,21],[29,0,887,23]],[[16,0,888,8],[26,0,888,18],[27,0,888,19],[31,0,888,23],[32,0,889,10],[36,0,889,14],[37,0,889,15],[68,0,889,46],[69,0,889,47],[70,0,889,48],[72,0,889,50],[92,0,889,70],[94,0,889,72],[118,0,889,96],[119,0,889,102],[120,0,890,9],[121,0,890,10]],[[12,0,891,6],[13,0,891,7],[14,0,891,8],[15,0,891,9]],[[12,0,893,6],[19,0,893,13],[29,0,893,23],[30,0,893,24]],[[9,0,895,5]],[[13,0,895,11]],[[12,0,896,6],[19,0,896,13],[23,0,896,17],[24,0,896,18],[55,0,896,49],[56,0,896,50],[60,0,896,54],[62,0,896,56],[82,0,896,76],[84,0,896,78],[108,0,896,102],[109,0,896,108],[110,0,896,109]],[[9,0,897,5]],[[4,0,898,2],[5,0,898,3]],[[4,0,901,2],[54,0,901,52]],[[4,0,903,2]],[],[],[],[],[],[],[],[[7,0,911,5]],[[4,0,912,12],[23,0,912,31],[24,0,912,35],[30,0,912,65],[32,0,913,35],[51,0,913,73],[68,0,913,90],[69,0,913,91],[88,0,913,110]],[[8,0,916,4],[15,0,916,11],[19,0,916,15],[20,0,916,16],[22,0,916,18],[23,0,916,19],[26,0,916,22],[27,0,916,23],[33,0,916,29],[34,0,916,30],[35,0,916,31],[39,0,916,35],[40,0,917,6],[43,0,917,9],[44,0,917,10],[45,0,917,11],[53,0,917,37],[55,0,917,39],[57,0,917,41]],[[12,0,918,8],[16,0,918,12],[17,0,918,13],[25,0,918,21],[26,0,918,22],[32,0,918,28],[36,0,918,32],[52,0,918,48],[57,0,918,53],[74,0,918,70],[75,0,918,71],[94,0,918,90],[96,0,918,92]],[[16,0,919,10],[22,0,919,16],[27,0,919,21],[30,0,919,43]],[[20,0,920,12],[24,0,920,16],[26,0,920,18],[44,0,920,36]],[[20,0,921,12],[24,0,921,16],[26,0,921,18],[37,0,921,29]],[[20,0,922,12],[27,0,922,19],[29,0,922,21],[100,0,922,92]],[[20,0,923,12],[26,0,923,18]],[[17,0,924,11],[18,0,924,12]],[[16,0,925,10],[22,0,925,16],[27,0,925,21],[28,0,925,22]],[[13,0,926,9]],[[8,0,927,6],[9,0,927,7],[10,0,927,8],[12,0,929,6],[18,0,929,12],[19,0,929,13],[20,0,929,14],[28,0,929,40],[30,0,929,42],[32,0,929,44]],[[12,0,930,8],[19,0,930,15],[20,0,930,16],[21,0,930,17],[29,0,930,25],[30,0,930,26],[36,0,930,32],[38,0,930,34],[42,0,930,38],[58,0,930,54],[63,0,930,59],[80,0,930,76],[81,0,930,77],[87,0,930,83],[88,0,930,84],[89,0,930,85]],[[8,0,931,6],[9,0,931,7],[10,0,931,8],[12,0,933,6],[15,0,933,9],[16,0,933,10],[17,0,933,11],[25,0,933,37],[27,0,933,39],[29,0,933,41]],[[12,0,935,8],[16,0,935,12],[24,0,935,20],[25,0,935,21],[31,0,935,27],[35,0,935,31],[51,0,935,47],[56,0,935,52],[73,0,935,69],[74,0,935,70],[93,0,935,89],[95,0,935,91]],[[16,0,936,10],[22,0,936,16],[26,0,936,20],[29,0,936,23],[37,0,936,31],[38,0,936,32],[42,0,936,36],[44,0,936,43],[45,0,936,44]],[[16,0,938,10],[22,0,938,16],[39,0,938,33],[42,0,938,58]],[[20,0,939,12],[22,0,939,14],[24,0,939,16],[32,0,939,24],[33,0,939,25],[35,0,939,27]],[[20,0,940,12],[23,0,940,15],[25,0,940,17],[33,0,940,25],[34,0,940,26],[37,0,940,53]],[[20,0,941,12],[24,0,941,16],[26,0,941,18],[32,0,941,24],[33,0,941,25],[37,0,941,29]],[[20,0,942,12],[28,0,942,20],[30,0,942,22],[38,0,942,30],[39,0,942,31],[45,0,942,37],[47,0,942,39]],[[20,0,943,12],[36,0,943,28],[38,0,943,30],[46,0,943,38],[47,0,943,39],[55,0,943,47]],[[17,0,944,11],[18,0,944,12]],[[16,0,946,10],[23,0,946,17],[25,0,946,18],[28,0,946,21],[32,0,946,25],[34,0,946,27],[51,0,946,44],[53,0,946,60],[54,0,946,61]],[[13,0,948,9]],[[17,0,948,15],[21,0,948,19],[37,0,948,35],[42,0,948,40],[59,0,948,57],[60,0,948,58],[71,0,948,69],[73,0,948,71],[75,0,948,73],[98,0,948,96]],[[16,0,949,10],[23,0,949,17],[27,0,949,21],[28,0,949,22]],[[13,0,950,9]],[[12,0,951,8],[19,0,951,15],[23,0,951,19],[24,0,951,20]],[[8,0,952,6],[9,0,952,7],[10,0,952,8],[12,0,953,6],[15,0,953,9],[16,0,953,10],[17,0,953,11],[21,0,953,15],[23,0,953,17],[25,0,953,19]],[[12,0,954,8],[16,0,954,12],[20,0,954,16],[24,0,954,20],[28,0,954,24],[30,0,954,26]],[[16,0,955,10],[23,0,955,17],[45,0,955,39],[46,0,955,40],[50,0,955,60],[51,0,955,61],[52,0,955,62]],[[13,0,956,9]],[[17,0,956,15]],[[16,0,957,10],[23,0,957,17],[27,0,957,21],[28,0,957,22]],[[13,0,958,9]],[[8,0,959,6],[9,0,959,7],[10,0,959,8],[11,0,960,32],[12,0,960,33]],[[4,0,961,2],[5,0,961,3]],[[4,0,963,2]],[],[],[],[],[],[],[[7,0,970,5]],[[4,0,971,12],[30,0,971,38],[31,0,971,42],[44,0,971,81]],[[8,0,972,4]],[],[],[[11,0,975,7]],[[8,0,976,4],[15,0,976,11],[19,0,976,15],[20,0,976,16],[22,0,976,18],[23,0,976,19],[33,0,976,29],[34,0,976,30],[47,0,976,43],[48,0,976,44],[49,0,976,45],[53,0,976,49],[54,0,977,6],[57,0,977,9],[58,0,977,10],[59,0,977,11],[63,0,977,33],[65,0,977,35],[67,0,977,37]],[[12,0,978,8],[19,0,978,15],[23,0,978,19],[24,0,978,20],[28,0,978,24],[29,0,978,25],[32,0,978,28],[33,0,978,29],[41,0,978,37],[42,0,978,38],[44,0,978,40]],[[16,0,979,10],[22,0,979,16],[26,0,979,20],[29,0,979,23],[37,0,979,31],[38,0,979,32],[42,0,979,36],[44,0,979,43],[45,0,979,44]],[[16,0,981,10],[22,0,981,16],[24,0,981,18],[27,0,981,21],[35,0,981,29],[36,0,981,30],[38,0,981,32],[39,0,981,33]],[[16,0,982,10],[22,0,982,16],[25,0,982,19],[28,0,982,22],[36,0,982,30],[37,0,982,31],[40,0,982,58],[41,0,982,59]],[[16,0,983,10],[22,0,983,16],[26,0,983,20],[29,0,983,23],[32,0,983,26],[33,0,983,27],[37,0,983,31],[38,0,983,32]],[[16,0,984,10],[22,0,984,16],[38,0,984,32],[41,0,984,35],[49,0,984,43],[50,0,984,44],[58,0,984,52],[59,0,984,53]],[[16,0,986,10],[22,0,986,16],[39,0,986,33],[42,0,986,58]],[[20,0,987,12],[22,0,987,14]],[[20,0,988,12],[24,0,988,16]],[[20,0,989,12],[23,0,989,15]],[[20,0,990,12],[36,0,990,28]],[[20,0,991,12],[28,0,991,20],[30,0,991,22],[34,0,991,26]],[[17,0,992,11],[18,0,992,12]],[[16,0,994,10],[23,0,994,17],[25,0,994,18],[28,0,994,21],[32,0,994,25],[34,0,994,27],[51,0,994,44],[53,0,994,60],[54,0,994,61]],[[12,0,995,8],[13,0,995,9],[14,0,995,10],[15,0,995,11]],[[8,0,996,6],[9,0,996,7],[10,0,996,8],[12,0,997,6],[15,0,997,9],[16,0,997,10],[17,0,997,11],[22,0,997,36],[24,0,997,38],[26,0,997,40],[27,0,997,41],[32,0,997,46],[33,0,997,47],[36,0,997,50],[37,0,997,51],[41,0,997,55],[42,0,997,56],[44,0,997,58]],[[12,0,998,8],[34,0,998,30],[35,0,998,31],[39,0,998,35],[40,0,998,36],[41,0,998,37]],[[12,0,999,8],[19,0,999,15],[23,0,999,19],[24,0,999,20]],[[8,0,1000,6],[9,0,1000,7],[10,0,1000,8],[11,0,1000,9],[12,0,1001,39],[13,0,1001,40]],[[4,0,1002,2],[5,0,1002,3]],[[4,0,1004,2]],[],[],[],[],[],[],[],[[7,0,1012,5]],[[4,0,1013,12],[28,0,1013,36],[29,0,1014,4],[33,0,1014,21],[35,0,1015,4],[58,0,1015,49],[60,0,1015,51]],[[8,0,1017,4],[12,0,1017,8],[16,0,1017,12],[20,0,1017,16],[24,0,1017,20],[26,0,1017,22]],[[12,0,1018,6],[19,0,1018,13],[21,0,1018,15],[22,0,1018,16],[23,0,1018,17],[27,0,1018,21],[28,0,1018,22],[29,0,1018,23],[30,0,1018,24]],[[9,0,1019,5]],[[8,0,1020,4],[12,0,1020,8],[32,0,1020,28],[33,0,1020,29],[39,0,1020,35],[43,0,1020,39],[44,0,1020,40],[46,0,1020,42]],[[12,0,1021,6],[19,0,1021,13],[21,0,1021,15],[22,0,1021,16],[23,0,1021,17],[27,0,1021,21],[28,0,1021,22],[29,0,1021,23],[30,0,1021,24]],[[9,0,1022,5]],[[8,0,1024,4],[14,0,1024,10],[33,0,1024,29],[36,0,1024,56],[38,0,1024,58],[39,0,1024,59]],[[8,0,1026,4],[91,0,1026,87]],[[8,0,1027,4],[28,0,1027,24],[29,0,1027,25],[36,0,1027,32],[37,0,1027,33],[55,0,1027,51],[56,0,1027,52],[58,0,1027,54]],[[12,0,1029,6],[16,0,1029,10],[29,0,1029,23],[32,0,1029,26],[48,0,1029,42],[49,0,1029,43],[53,0,1029,47],[54,0,1029,48],[71,0,1029,65],[72,0,1029,66],[75,0,1029,69],[77,0,1029,71],[95,0,1029,89],[96,0,1029,90],[100,0,1029,94],[101,0,1029,95],[102,0,1029,96]],[[12,0,1030,6],[16,0,1030,10],[34,0,1030,28],[35,0,1030,29],[42,0,1030,36],[44,0,1030,38]],[[16,0,1031,8],[29,0,1031,21],[32,0,1031,24],[50,0,1031,42],[51,0,1031,43],[58,0,1031,50],[59,0,1031,51],[72,0,1031,64],[73,0,1031,88],[74,0,1031,89]],[[13,0,1032,7]],[[12,0,1034,6],[18,0,1034,12],[36,0,1034,30],[39,0,1034,33],[43,0,1034,37],[44,0,1034,38],[70,0,1034,64],[71,0,1034,65],[84,0,1034,78],[85,0,1034,79],[86,0,1034,80],[90,0,1034,84]],[[12,0,1035,8],[115,0,1035,111]],[[12,0,1036,8],[54,0,1036,50]],[[12,0,1037,8],[40,0,1037,36]],[[12,0,1038,8],[44,0,1038,40]],[[12,0,1039,8],[58,0,1039,54]],[[12,0,1040,8],[77,0,1040,73]],[[12,0,1041,8],[20,0,1041,16],[21,0,1041,17],[22,0,1041,18],[27,0,1041,39],[29,0,1041,41],[31,0,1041,43]],[[16,0,1043,10],[20,0,1043,14],[21,0,1043,15],[39,0,1043,33],[40,0,1043,34],[54,0,1043,48],[56,0,1043,50]],[[20,0,1044,12],[27,0,1044,19],[29,0,1044,21],[30,0,1044,22],[35,0,1044,27],[36,0,1044,28],[37,0,1044,29]],[[17,0,1045,11]],[[16,0,1047,10],[22,0,1047,16],[34,0,1047,28],[37,0,1047,55],[39,0,1047,57],[40,0,1047,58]],[[16,0,1049,10],[21,0,1049,15],[24,0,1049,18],[29,0,1049,23],[30,0,1049,24],[36,0,1049,30],[37,0,1049,31],[38,0,1049,32],[39,0,1049,33],[41,0,1049,35],[42,0,1049,36],[43,0,1049,37],[47,0,1049,41],[51,0,1049,45],[52,0,1049,46],[53,0,1049,47],[54,0,1049,48],[83,0,1049,77]],[[16,0,1051,10],[21,0,1051,15],[22,0,1051,16],[29,0,1051,23],[30,0,1051,24],[31,0,1051,25],[38,0,1051,46],[40,0,1051,48],[42,0,1051,50]],[[20,0,1052,12],[26,0,1052,18],[47,0,1052,39],[50,0,1052,42],[54,0,1052,46],[55,0,1052,47],[79,0,1052,71],[80,0,1052,72],[87,0,1052,79],[89,0,1052,81],[107,0,1052,99],[108,0,1052,100],[122,0,1052,114],[123,0,1052,115],[124,0,1052,116]],[[20,0,1053,12],[32,0,1053,24],[33,0,1053,25],[37,0,1053,29],[38,0,1053,30],[59,0,1053,51],[60,0,1053,52],[61,0,1053,53]],[[16,0,1054,10],[17,0,1054,11],[18,0,1054,12],[19,0,1054,13]],[[16,0,1056,10],[20,0,1056,14],[32,0,1056,26],[33,0,1056,27],[39,0,1056,33],[43,0,1056,37],[44,0,1056,38],[46,0,1056,40]],[[20,0,1057,12],[27,0,1057,19],[29,0,1057,21],[30,0,1057,22],[32,0,1057,24],[33,0,1057,25],[34,0,1057,26]],[[17,0,1058,11],[18,0,1058,12],[67,0,1058,61]],[[16,0,1060,10],[23,0,1060,17],[36,0,1060,30],[37,0,1060,31],[49,0,1060,43],[50,0,1060,44],[51,0,1060,45],[55,0,1060,49]],[[16,0,1061,12],[47,0,1061,43]],[[17,0,1062,11],[18,0,1062,12]],[[12,0,1063,8],[13,0,1063,9],[14,0,1063,10],[16,0,1063,12],[51,0,1063,47]],[[12,0,1064,8]],[],[[66,0,1066,62]],[[12,0,1067,8],[15,0,1067,11],[16,0,1067,12],[17,0,1067,13],[22,0,1067,34],[24,0,1067,36],[26,0,1067,38]],[[16,0,1068,10],[22,0,1068,16],[27,0,1068,21],[30,0,1068,24],[48,0,1068,42],[49,0,1068,43],[54,0,1068,48],[59,0,1068,53],[68,0,1068,62],[69,0,1068,63],[70,0,1068,64],[71,0,1068,65],[89,0,1068,83],[90,0,1068,84],[95,0,1068,89],[96,0,1068,90],[97,0,1068,91],[98,0,1068,92],[102,0,1068,96],[103,0,1068,97],[115,0,1068,109],[116,0,1068,110]],[[16,0,1070,10],[20,0,1070,14],[25,0,1070,19],[26,0,1070,20],[32,0,1070,26],[37,0,1070,31],[38,0,1070,32],[42,0,1070,36],[47,0,1070,41],[48,0,1070,42],[49,0,1070,43],[50,0,1070,44],[51,0,1070,45],[68,0,1070,62],[69,0,1070,63],[71,0,1070,65],[76,0,1070,70],[81,0,1070,75],[83,0,1070,77]],[[20,0,1071,12],[27,0,1071,19],[29,0,1071,20],[30,0,1071,21],[48,0,1071,39],[49,0,1071,40],[53,0,1071,44],[54,0,1071,45],[56,0,1071,47],[61,0,1071,52],[62,0,1071,53],[63,0,1071,54],[64,0,1071,55],[66,0,1071,56],[67,0,1071,57]],[[17,0,1072,11]],[[21,0,1072,17]],[[20,0,1073,12],[27,0,1073,19],[29,0,1073,20],[30,0,1073,21],[48,0,1073,39],[49,0,1073,40],[53,0,1073,44],[54,0,1073,45],[56,0,1073,47],[61,0,1073,52],[63,0,1073,53],[64,0,1073,54]],[[17,0,1074,11]],[[12,0,1075,8],[13,0,1075,9],[14,0,1075,10],[15,0,1077,7],[16,0,1077,8]],[[12,0,1079,6],[31,0,1079,25],[32,0,1079,26],[36,0,1079,30],[37,0,1079,31],[55,0,1079,49],[56,0,1079,50],[57,0,1079,51]],[[8,0,1080,4],[9,0,1080,5],[10,0,1080,6],[11,0,1080,7]],[[8,0,1082,4],[61,0,1082,57]],[[8,0,1083,4],[21,0,1083,17]],[[8,0,1084,4],[15,0,1084,11],[28,0,1084,24],[29,0,1084,25],[48,0,1084,44],[49,0,1084,45],[50,0,1084,46],[54,0,1084,50],[55,0,1085,6],[58,0,1085,9],[59,0,1085,10],[60,0,1085,11],[75,0,1085,85],[77,0,1085,87],[79,0,1085,89]],[[12,0,1086,8],[41,0,1086,37]],[[12,0,1087,8],[18,0,1087,14],[26,0,1087,22],[29,0,1087,51],[31,0,1087,53],[32,0,1087,54]],[[12,0,1089,8],[27,0,1089,23],[28,0,1089,24],[35,0,1089,31],[36,0,1089,32],[37,0,1089,33],[47,0,1089,43],[49,0,1089,45],[51,0,1089,47]],[[16,0,1091,10],[21,0,1091,15],[27,0,1091,21],[28,0,1091,22],[42,0,1091,36],[44,0,1091,38],[49,0,1091,43],[50,0,1091,44],[54,0,1091,48],[60,0,1091,54],[61,0,1091,55],[68,0,1091,62],[69,0,1091,63],[79,0,1091,73],[80,0,1091,74],[82,0,1091,76]],[[20,0,1092,12],[28,0,1092,20],[29,0,1092,21],[43,0,1092,35],[44,0,1092,36],[47,0,1092,39],[52,0,1092,44],[53,0,1092,45]],[[17,0,1093,11]],[[12,0,1094,8],[13,0,1094,9],[14,0,1094,10],[15,0,1094,11]],[[12,0,1095,8],[19,0,1095,15],[27,0,1095,23],[28,0,1095,24]],[[8,0,1096,6],[9,0,1096,7],[10,0,1096,8],[12,0,1098,6],[15,0,1098,9],[16,0,1098,10],[17,0,1098,11],[21,0,1098,29],[23,0,1098,31],[25,0,1098,33]],[[12,0,1099,8],[19,0,1099,15],[21,0,1099,16],[24,0,1099,19],[28,0,1099,23],[30,0,1099,25],[33,0,1099,28],[37,0,1099,32],[39,0,1099,48],[40,0,1099,49]],[[8,0,1100,6],[9,0,1100,7],[10,0,1100,8],[11,0,1101,5],[12,0,1101,6]],[[4,0,1102,2],[5,0,1102,3]],[[4,0,1104,2]],[],[[7,0,1106,5]],[[4,0,1107,12],[36,0,1107,44],[37,0,1108,4],[43,0,1108,29],[45,0,1109,4],[68,0,1109,49],[70,0,1109,51],[72,0,1110,4],[91,0,1110,42],[108,0,1110,59],[109,0,1110,60],[120,0,1110,71]],[[8,0,1112,4],[33,0,1112,29]],[[8,0,1113,4],[15,0,1113,11],[19,0,1113,15],[20,0,1113,16],[39,0,1113,35],[40,0,1113,39],[46,0,1113,45],[48,0,1113,47],[64,0,1113,63],[65,0,1113,64],[66,0,1113,65],[70,0,1113,69],[71,0,1114,6],[79,0,1114,14],[80,0,1114,15],[81,0,1114,16],[85,0,1114,34],[87,0,1114,36],[89,0,1114,38]],[[12,0,1116,8],[16,0,1116,12],[20,0,1116,16],[25,0,1116,21],[29,0,1116,25],[31,0,1116,27]],[[16,0,1117,10],[23,0,1117,17],[25,0,1117,19],[26,0,1117,20],[30,0,1117,24],[31,0,1117,25],[32,0,1117,26]],[[13,0,1118,9]],[[12,0,1119,8],[16,0,1119,12],[36,0,1119,32],[37,0,1119,33],[43,0,1119,39],[47,0,1119,43],[48,0,1119,44],[50,0,1119,46]],[[16,0,1120,10],[23,0,1120,17],[25,0,1120,19],[26,0,1120,20],[30,0,1120,24],[31,0,1120,25],[32,0,1120,26]],[[13,0,1121,9]],[[12,0,1123,8],[19,0,1123,15],[23,0,1123,19],[24,0,1123,20],[48,0,1123,44],[49,0,1123,45],[53,0,1123,49],[55,0,1123,51],[75,0,1123,71],[76,0,1123,72],[77,0,1123,73]],[[8,0,1124,6],[9,0,1124,7],[10,0,1124,8],[11,0,1125,5],[12,0,1125,6]],[[4,0,1126,2],[5,0,1126,3]],[[4,0,1128,2]],[],[],[],[],[],[],[],[],[],[],[[7,0,1139,5]],[[4,0,1140,12],[14,0,1140,22],[15,0,1140,26],[19,0,1140,33],[21,0,1140,35],[34,0,1140,72],[36,0,1140,74],[49,0,1140,96],[53,0,1140,100],[55,0,1140,102],[57,0,1140,113]],[[8,0,1143,4],[58,0,1143,54]],[[8,0,1145,4],[12,0,1145,8],[16,0,1145,29],[17,0,1145,30]],[[8,0,1147,4],[12,0,1147,8],[22,0,1147,18],[24,0,1147,20]],[[12,0,1148,6],[18,0,1148,12],[22,0,1148,16],[25,0,1148,19],[29,0,1148,23],[33,0,1148,27],[35,0,1148,29],[36,0,1148,30]],[[12,0,1149,6],[16,0,1149,10],[19,0,1149,13],[33,0,1149,27],[34,0,1149,28],[38,0,1149,32],[40,0,1149,34],[45,0,1149,39],[47,0,1149,41],[51,0,1149,45],[52,0,1149,46],[53,0,1149,47]],[[12,0,1150,6],[16,0,1150,10],[19,0,1150,13],[34,0,1150,28],[35,0,1150,29],[39,0,1150,33],[41,0,1150,35],[46,0,1150,40],[48,0,1150,42],[52,0,1150,46],[53,0,1150,47],[54,0,1150,48]],[[9,0,1151,5]],[[8,0,1153,4],[12,0,1153,8],[14,0,1153,10],[19,0,1153,15],[28,0,1153,24],[30,0,1153,26]],[[12,0,1154,6],[18,0,1154,12],[24,0,1154,18],[27,0,1154,40],[42,0,1154,55],[43,0,1154,56],[56,0,1154,69],[58,0,1154,71],[60,0,1154,73],[61,0,1154,74],[62,0,1154,75]],[[12,0,1155,6],[16,0,1155,10],[19,0,1155,13],[23,0,1155,17],[24,0,1155,18],[26,0,1155,20],[27,0,1155,21],[30,0,1155,24],[31,0,1155,25],[37,0,1155,31],[39,0,1155,33],[43,0,1155,37],[44,0,1155,38],[45,0,1155,39]],[[9,0,1156,5]],[[13,0,1156,11]],[[12,0,1157,6],[16,0,1157,10],[19,0,1157,13],[23,0,1157,17],[24,0,1157,18],[26,0,1157,20],[27,0,1157,21],[30,0,1157,24],[31,0,1157,28],[44,0,1157,41],[46,0,1157,43],[50,0,1157,47],[51,0,1157,48],[52,0,1157,49]],[[9,0,1158,5]],[[8,0,1160,4],[51,0,1160,47]],[[8,0,1161,4],[38,0,1161,34]],[[8,0,1162,4],[114,0,1162,110]],[[8,0,1163,4],[15,0,1163,11]],[[8,0,1164,4],[12,0,1164,8]],[[8,0,1166,4],[12,0,1166,8],[15,0,1166,11],[19,0,1166,15],[20,0,1166,16],[24,0,1166,20]],[[8,0,1167,6],[79,0,1167,77]],[[8,0,1168,6],[40,0,1168,38]],[[8,0,1169,6],[40,0,1169,38]],[[8,0,1170,6],[11,0,1170,9],[12,0,1170,10],[13,0,1170,11],[16,0,1170,48],[18,0,1170,50],[20,0,1170,52]],[[12,0,1171,8],[16,0,1171,12],[18,0,1171,14],[23,0,1171,19],[32,0,1171,28],[36,0,1171,32],[39,0,1171,35],[41,0,1171,37]],[[16,0,1173,10],[22,0,1173,16],[26,0,1173,20],[29,0,1173,23],[32,0,1173,26],[33,0,1173,27],[37,0,1173,31],[38,0,1173,32]],[[16,0,1175,10],[22,0,1175,16],[39,0,1175,33],[42,0,1175,58]],[[20,0,1176,12],[22,0,1176,14],[24,0,1176,16],[27,0,1176,19],[28,0,1176,20],[30,0,1176,22]],[[20,0,1177,12],[24,0,1177,16]],[[20,0,1178,12],[23,0,1178,15]],[[20,0,1179,12],[28,0,1179,20],[30,0,1179,22],[34,0,1179,26]],[[17,0,1180,11],[18,0,1180,12]],[[16,0,1182,10],[23,0,1182,17],[25,0,1182,18],[28,0,1182,21],[32,0,1182,25],[34,0,1182,27],[51,0,1182,44],[53,0,1182,60],[54,0,1182,61]],[[13,0,1184,9]],[[17,0,1184,15],[19,0,1184,17],[87,0,1184,85]],[[16,0,1185,10],[22,0,1185,16],[26,0,1185,20],[29,0,1185,23],[42,0,1185,36],[43,0,1185,37],[47,0,1185,41],[50,0,1185,44],[53,0,1185,47],[56,0,1185,50],[58,0,1185,52],[59,0,1185,53]],[[16,0,1186,10],[19,0,1186,13],[22,0,1186,16],[36,0,1186,30],[37,0,1186,31],[41,0,1186,35],[43,0,1186,37],[47,0,1186,41],[48,0,1186,42],[50,0,1186,44],[51,0,1186,45],[60,0,1186,54],[61,0,1186,79],[62,0,1186,80]],[[16,0,1188,10],[22,0,1188,16],[39,0,1188,33],[42,0,1188,58]],[[20,0,1189,12],[22,0,1189,14],[24,0,1189,16],[26,0,1189,28]],[[20,0,1190,12],[23,0,1190,15]],[[20,0,1191,12],[24,0,1191,16]],[[20,0,1192,12],[28,0,1192,20],[30,0,1192,22],[34,0,1192,26]],[[17,0,1193,11],[18,0,1193,12]],[[16,0,1195,10],[23,0,1195,17],[25,0,1195,18],[28,0,1195,21],[32,0,1195,25],[34,0,1195,27],[51,0,1195,44],[53,0,1195,60],[54,0,1195,61]],[[13,0,1196,9]],[[8,0,1197,6],[9,0,1197,7],[10,0,1197,8],[11,0,1198,5],[12,0,1198,6]],[[8,0,1200,4],[15,0,1200,11],[19,0,1200,15],[20,0,1200,16],[24,0,1200,20],[25,0,1201,6],[29,0,1201,10],[30,0,1201,11],[31,0,1201,12],[32,0,1201,13],[33,0,1202,5],[34,0,1202,6]],[[4,0,1203,2],[5,0,1203,3]],[[4,0,1205,2],[74,0,1205,72]],[[4,0,1206,12],[17,0,1206,25],[18,0,1206,29],[22,0,1206,36],[24,0,1206,38],[30,0,1206,63],[32,0,1206,65],[52,0,1206,94],[56,0,1206,98]],[[8,0,1208,4],[12,0,1208,8],[29,0,1208,25],[31,0,1208,27]],[[12,0,1209,6],[16,0,1209,10],[19,0,1209,13],[34,0,1209,28],[35,0,1209,29],[39,0,1209,33],[41,0,1209,35],[46,0,1209,40],[47,0,1209,41],[48,0,1209,42]],[[9,0,1210,5]],[[8,0,1211,4],[15,0,1211,11],[19,0,1211,15],[20,0,1211,16],[22,0,1211,18],[23,0,1211,19],[29,0,1211,25],[30,0,1211,26],[36,0,1211,32],[38,0,1211,34],[42,0,1211,38],[43,0,1211,39],[44,0,1211,40]],[[4,0,1212,2],[5,0,1212,3]],[[4,0,1214,2]],[],[[7,0,1216,5]],[[4,0,1217,12],[27,0,1217,35],[28,0,1217,39],[32,0,1217,46],[34,0,1218,39],[40,0,1218,64],[42,0,1219,39],[65,0,1219,85],[67,0,1219,87],[69,0,1220,39],[89,0,1220,68],[93,0,1220,72],[95,0,1221,39],[100,0,1221,57]],[[8,0,1223,4],[12,0,1223,8],[17,0,1223,13],[22,0,1223,18],[31,0,1223,27],[33,0,1223,29]],[[12,0,1224,6],[17,0,1224,11],[20,0,1224,14],[30,0,1224,24],[31,0,1224,25],[35,0,1224,29],[36,0,1224,30],[38,0,1224,32],[39,0,1224,33],[48,0,1224,42],[49,0,1224,43],[50,0,1224,44]],[[9,0,1225,5]],[[8,0,1227,4],[12,0,1227,8],[29,0,1227,25],[31,0,1227,27]],[[12,0,1228,6],[16,0,1228,10],[19,0,1228,13],[34,0,1228,28],[35,0,1228,29],[39,0,1228,33],[41,0,1228,35],[46,0,1228,40],[47,0,1228,41],[48,0,1228,42]],[[9,0,1229,5]],[[8,0,1231,4],[14,0,1231,10],[19,0,1231,15],[22,0,1231,18],[26,0,1231,22],[27,0,1231,23],[67,0,1231,63],[68,0,1231,64],[72,0,1231,68],[74,0,1231,70],[94,0,1231,90],[95,0,1231,91],[96,0,1231,92]],[[8,0,1232,4],[14,0,1232,10],[24,0,1232,20],[27,0,1232,23],[32,0,1232,28],[33,0,1232,29],[43,0,1232,39],[44,0,1232,40]],[[8,0,1233,4],[14,0,1233,10],[28,0,1233,24],[31,0,1233,27],[36,0,1233,32],[37,0,1233,33],[51,0,1233,47],[52,0,1233,48]],[[8,0,1235,4],[51,0,1235,47]],[[8,0,1236,4],[13,0,1236,9],[14,0,1236,10],[20,0,1236,16],[21,0,1236,17],[27,0,1236,23],[29,0,1236,25],[39,0,1236,35],[40,0,1236,36],[41,0,1236,37]],[[8,0,1238,4],[13,0,1238,9],[19,0,1238,15],[20,0,1238,16],[36,0,1238,32],[38,0,1238,34],[55,0,1238,51],[56,0,1238,52],[60,0,1238,56],[66,0,1238,62],[67,0,1238,63],[74,0,1238,70],[75,0,1238,71],[89,0,1238,85],[90,0,1238,86],[92,0,1238,88]],[[12,0,1240,6],[16,0,1240,10],[39,0,1240,68],[40,0,1240,69],[41,0,1240,70],[80,0,1240,109]],[[12,0,1241,6],[16,0,1241,10],[24,0,1241,38],[25,0,1241,39]],[[12,0,1243,6],[16,0,1243,10],[36,0,1243,30],[38,0,1243,32]],[[16,0,1244,8],[39,0,1244,31],[42,0,1244,34],[62,0,1244,54],[63,0,1244,55],[67,0,1244,59],[68,0,1244,60],[75,0,1244,67],[76,0,1244,68],[78,0,1244,70],[79,0,1244,71],[86,0,1244,78],[87,0,1244,79],[91,0,1244,83],[96,0,1244,88],[112,0,1244,104],[113,0,1244,105],[115,0,1244,107],[129,0,1244,121],[130,0,1244,122]],[[16,0,1245,8],[24,0,1245,16],[27,0,1245,19],[47,0,1245,39],[48,0,1245,40],[52,0,1245,44],[53,0,1245,45],[60,0,1245,52],[61,0,1245,53],[63,0,1245,55],[64,0,1245,56],[71,0,1245,63],[72,0,1245,64],[76,0,1245,68],[81,0,1245,73],[97,0,1245,89],[98,0,1245,90],[100,0,1245,92],[105,0,1245,97],[106,0,1245,98]],[[13,0,1246,7]],[[12,0,1248,6],[20,0,1248,14],[23,0,1248,17],[31,0,1248,25],[36,0,1248,30],[45,0,1248,39],[46,0,1248,40],[47,0,1248,41],[48,0,1248,42],[56,0,1248,50],[57,0,1248,51],[58,0,1248,52],[59,0,1248,53],[63,0,1248,57],[64,0,1248,58],[76,0,1248,70],[77,0,1248,71],[78,0,1248,72],[109,0,1248,103]],[[12,0,1250,6],[82,0,1250,76]],[[12,0,1251,6],[18,0,1251,12],[31,0,1251,25],[34,0,1251,28],[50,0,1251,44],[51,0,1251,45],[57,0,1251,51],[59,0,1251,53],[75,0,1251,69],[76,0,1251,70],[77,0,1251,71]],[[12,0,1252,6],[18,0,1252,12],[26,0,1252,20],[29,0,1252,23],[44,0,1252,38],[45,0,1252,39],[58,0,1252,52],[60,0,1252,54],[68,0,1252,62],[69,0,1252,63],[70,0,1252,64]],[[12,0,1254,6],[17,0,1254,11],[20,0,1254,14],[24,0,1254,18],[25,0,1254,19],[48,0,1254,42],[49,0,1254,43],[66,0,1254,60],[68,0,1254,62],[76,0,1254,70],[78,0,1254,72],[101,0,1254,95],[103,0,1254,97],[120,0,1254,114],[122,0,1254,116],[127,0,1254,121],[128,0,1254,122],[129,0,1254,123]],[[9,0,1255,5]],[[8,0,1257,4],[15,0,1257,11],[20,0,1257,16],[21,0,1257,17]],[[4,0,1258,2],[5,0,1258,3]],[[4,0,1260,2]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,1273,5]],[[4,0,1274,12],[41,0,1274,49],[42,0,1275,4],[55,0,1275,37],[57,0,1276,4],[69,0,1276,36],[71,0,1277,4],[84,0,1277,25],[86,0,1278,4],[98,0,1278,24],[100,0,1279,4],[116,0,1279,28],[118,0,1280,4],[149,0,1280,60],[151,0,1281,4],[182,0,1281,35],[185,0,1281,38],[189,0,1281,42],[191,0,1282,4],[198,0,1282,11],[201,0,1282,14],[206,0,1282,19]],[[8,0,1284,4],[12,0,1284,8],[29,0,1284,45],[30,0,1284,46]],[[8,0,1285,4],[12,0,1285,8],[28,0,1285,44],[29,0,1285,45]],[[8,0,1286,4],[12,0,1286,8],[19,0,1286,15],[21,0,1286,17]],[[12,0,1287,6],[29,0,1287,23],[32,0,1287,26],[38,0,1287,32],[39,0,1287,33],[45,0,1287,39],[46,0,1287,40],[48,0,1287,42],[50,0,1287,44],[63,0,1287,57],[64,0,1287,58],[65,0,1287,59]],[[12,0,1288,6],[28,0,1288,22],[31,0,1288,25],[37,0,1288,31],[38,0,1288,32],[44,0,1288,38],[45,0,1288,39],[47,0,1288,41],[49,0,1288,43],[61,0,1288,55],[62,0,1288,56],[63,0,1288,57]],[[9,0,1289,5]],[[13,0,1289,11]],[[12,0,1290,6],[29,0,1290,23],[32,0,1290,26],[45,0,1290,39],[46,0,1290,40]],[[12,0,1291,6],[28,0,1291,22],[31,0,1291,25],[43,0,1291,37],[44,0,1291,38]],[[9,0,1292,5]],[[8,0,1294,4],[25,0,1294,21],[26,0,1294,22],[43,0,1294,39],[45,0,1294,41],[61,0,1294,57],[63,0,1294,59],[76,0,1294,72],[78,0,1294,74],[90,0,1294,86],[91,0,1294,87],[92,0,1294,88]],[[8,0,1296,4],[14,0,1296,10],[19,0,1296,15],[22,0,1296,30],[32,0,1296,40],[33,0,1296,41],[37,0,1296,45],[38,0,1296,46],[40,0,1296,48],[41,0,1296,49],[50,0,1296,58],[51,0,1296,59],[52,0,1296,60]],[[8,0,1298,4],[12,0,1298,8],[43,0,1298,39],[48,0,1298,44],[57,0,1298,53],[59,0,1298,55]],[[12,0,1299,6],[18,0,1299,12],[27,0,1299,21],[30,0,1299,24],[46,0,1299,40],[47,0,1299,41],[59,0,1299,53],[60,0,1299,54],[61,0,1299,55]],[[12,0,1300,6],[18,0,1300,12],[30,0,1300,24],[33,0,1300,27],[42,0,1300,36],[43,0,1300,37],[60,0,1300,54],[61,0,1300,55],[64,0,1300,58],[65,0,1300,59]],[[12,0,1302,6],[18,0,1302,12],[22,0,1302,16],[25,0,1302,19],[27,0,1302,20],[30,0,1302,23],[61,0,1302,54],[63,0,1302,56],[72,0,1302,65],[74,0,1302,67],[90,0,1302,83],[92,0,1302,84],[93,0,1302,85]],[[12,0,1304,6],[16,0,1304,10],[17,0,1304,11],[24,0,1304,18],[26,0,1304,20]],[[16,0,1305,8],[29,0,1305,21],[30,0,1305,22],[39,0,1305,31],[41,0,1305,33],[45,0,1305,37],[47,0,1305,39],[51,0,1305,43],[52,0,1305,44],[53,0,1305,45]],[[13,0,1306,7]],[[12,0,1308,6],[16,0,1308,10],[47,0,1308,41],[49,0,1308,43]],[[16,0,1309,8],[22,0,1309,14],[26,0,1309,18],[29,0,1309,21],[33,0,1309,25],[37,0,1309,29],[39,0,1309,31],[40,0,1309,32]],[[16,0,1310,8],[31,0,1310,23],[32,0,1310,24],[36,0,1310,28],[38,0,1310,30],[42,0,1310,34],[44,0,1310,36],[48,0,1310,40],[49,0,1310,41],[50,0,1310,42]],[[16,0,1312,8],[20,0,1312,12],[21,0,1312,13],[28,0,1312,20],[30,0,1312,22]],[[20,0,1313,10],[35,0,1313,25],[36,0,1313,26],[45,0,1313,35],[47,0,1313,37],[51,0,1313,41],[53,0,1313,43],[57,0,1313,47],[58,0,1313,48],[59,0,1313,49]],[[17,0,1314,9]],[[13,0,1315,7]],[[12,0,1316,6],[17,0,1316,11],[18,0,1316,12],[24,0,1316,18],[25,0,1316,19],[37,0,1316,31],[39,0,1316,33],[43,0,1316,37],[44,0,1316,38],[45,0,1316,39]],[[9,0,1317,5]],[[8,0,1319,4],[14,0,1319,10],[39,0,1319,35],[42,0,1319,58],[58,0,1319,74],[59,0,1319,75],[64,0,1319,80],[65,0,1319,81],[77,0,1319,93],[78,0,1319,94],[79,0,1319,95]],[[8,0,1320,4],[12,0,1320,8],[13,0,1320,9],[16,0,1320,12],[28,0,1320,24],[29,0,1320,25]],[[8,0,1321,4],[13,0,1321,9],[19,0,1321,15],[23,0,1321,19],[27,0,1321,23],[52,0,1321,48],[54,0,1321,50]],[[12,0,1322,6],[25,0,1322,19]],[[12,0,1323,6],[17,0,1323,11],[18,0,1323,12],[24,0,1323,18],[25,0,1323,19],[29,0,1323,23],[30,0,1323,24],[47,0,1323,41],[48,0,1323,42],[51,0,1323,45],[53,0,1323,47],[55,0,1323,48],[60,0,1323,53],[62,0,1323,55],[63,0,1323,56],[65,0,1323,57],[66,0,1323,58],[67,0,1323,59]],[[12,0,1325,6],[16,0,1325,10],[17,0,1325,11],[24,0,1325,18],[26,0,1325,20]],[[16,0,1326,8],[20,0,1326,12],[21,0,1326,13],[26,0,1326,18],[29,0,1326,21],[30,0,1326,22],[31,0,1326,23]],[[13,0,1327,7]],[[12,0,1329,6],[13,0,1329,7],[15,0,1329,9],[16,0,1329,10]],[[9,0,1330,5]],[[8,0,1332,4],[14,0,1332,10],[36,0,1332,32],[39,0,1332,55],[56,0,1332,72],[57,0,1332,73],[62,0,1332,78],[63,0,1332,79],[76,0,1332,92],[77,0,1332,93],[78,0,1332,94]],[[8,0,1333,4],[9,0,1333,5],[12,0,1333,8],[25,0,1333,21],[26,0,1333,22]],[[8,0,1334,4],[13,0,1334,9],[19,0,1334,15],[23,0,1334,19],[27,0,1334,23],[49,0,1334,45],[51,0,1334,47]],[[12,0,1335,6],[25,0,1335,19]],[[12,0,1336,6],[17,0,1336,11],[18,0,1336,12],[24,0,1336,18],[25,0,1336,19],[29,0,1336,23],[30,0,1336,24],[47,0,1336,41],[48,0,1336,42],[51,0,1336,45],[53,0,1336,47],[55,0,1336,48],[60,0,1336,53],[62,0,1336,55],[63,0,1336,56],[65,0,1336,57],[66,0,1336,58],[67,0,1336,59]],[[12,0,1338,6],[16,0,1338,10],[17,0,1338,11],[24,0,1338,18],[26,0,1338,20]],[[16,0,1339,8],[20,0,1339,12],[21,0,1339,13],[26,0,1339,18],[29,0,1339,21],[30,0,1339,22],[31,0,1339,23]],[[13,0,1340,7]],[[12,0,1342,6],[13,0,1342,7],[15,0,1342,9],[16,0,1342,10]],[[9,0,1343,5]],[[8,0,1345,4],[15,0,1345,11],[20,0,1345,16],[21,0,1345,17]],[[4,0,1346,2],[5,0,1346,3]],[[4,0,1349,2]],[],[],[],[[7,0,1353,5]],[[4,0,1354,12],[25,0,1354,33],[26,0,1354,34],[33,0,1354,62]],[[8,0,1356,4],[14,0,1356,10],[19,0,1356,15],[22,0,1356,18],[26,0,1356,22],[27,0,1356,23],[55,0,1356,51],[56,0,1356,52],[63,0,1356,59],[64,0,1356,60],[65,0,1356,61]],[[8,0,1358,4],[15,0,1358,11],[19,0,1358,15],[20,0,1358,16],[32,0,1358,28],[33,0,1358,29],[38,0,1358,34],[39,0,1358,35],[40,0,1358,36]],[[4,0,1359,2],[5,0,1359,3]],[[4,0,1361,12],[32,0,1361,40],[33,0,1361,41],[40,0,1361,69],[42,0,1361,71],[50,0,1361,91],[60,0,1361,101],[61,0,1361,102],[65,0,1361,106],[66,0,1361,107],[68,0,1361,109],[69,0,1361,110],[78,0,1361,119],[79,0,1361,120]],[[8,0,1363,4],[15,0,1363,11],[16,0,1363,12],[23,0,1363,19],[24,0,1363,20],[25,0,1363,21],[31,0,1363,27],[33,0,1363,29],[35,0,1363,31]],[[12,0,1364,6],[17,0,1364,11],[18,0,1364,12],[24,0,1364,18],[25,0,1364,19],[31,0,1364,25],[32,0,1364,26],[33,0,1364,27]],[[8,0,1365,4],[9,0,1365,5],[10,0,1365,6],[11,0,1365,7]],[[8,0,1367,4],[15,0,1367,11],[20,0,1367,16],[21,0,1367,17]],[[4,0,1368,2],[5,0,1368,3]],[[4,0,1370,2]],[],[],[],[],[],[[7,0,1376,5]],[[4,0,1377,12],[35,0,1377,43],[36,0,1377,47],[42,0,1377,71],[44,0,1378,47],[67,0,1378,93],[69,0,1378,95],[71,0,1379,47],[98,0,1379,84],[100,0,1379,86]],[[8,0,1381,4],[95,0,1381,91]],[[8,0,1382,4],[14,0,1382,10],[32,0,1382,28],[35,0,1382,41],[36,0,1382,42],[55,0,1382,61],[56,0,1382,62],[57,0,1382,63],[63,0,1382,69],[64,0,1382,70],[88,0,1382,94],[89,0,1382,95],[90,0,1382,96]],[[8,0,1384,4],[34,0,1384,30]],[[8,0,1385,4],[13,0,1385,9],[19,0,1385,15],[36,0,1385,32],[40,0,1385,36],[58,0,1385,54],[60,0,1385,56]],[[12,0,1386,6],[19,0,1386,13],[25,0,1386,19],[26,0,1386,20],[43,0,1386,37],[44,0,1386,38],[45,0,1386,39]],[[9,0,1387,5]],[[8,0,1389,4],[28,0,1389,24],[29,0,1389,25],[36,0,1389,32],[37,0,1389,33],[40,0,1389,36],[41,0,1389,37],[43,0,1389,39]],[[12,0,1390,6],[16,0,1390,10],[21,0,1390,15],[22,0,1390,16],[29,0,1390,23],[30,0,1390,24],[36,0,1390,30],[37,0,1390,31],[40,0,1390,34],[41,0,1390,35],[45,0,1390,39],[46,0,1390,40],[47,0,1390,41],[49,0,1390,43],[51,0,1390,45],[104,0,1390,98]],[[16,0,1392,8],[22,0,1392,14],[26,0,1392,18],[29,0,1392,36],[35,0,1392,42],[36,0,1392,43],[39,0,1392,46],[40,0,1392,47],[44,0,1392,51],[45,0,1392,52],[46,0,1392,53]],[[16,0,1393,8],[20,0,1393,12],[21,0,1393,13],[28,0,1393,20],[29,0,1393,21],[30,0,1393,22],[31,0,1393,23],[33,0,1393,25],[34,0,1393,26],[36,0,1393,28],[38,0,1393,30]],[[20,0,1395,10],[24,0,1395,14],[27,0,1395,17],[28,0,1395,18],[42,0,1395,32],[44,0,1395,34]],[[24,0,1396,12],[28,0,1396,16],[29,0,1396,17],[60,0,1396,48],[61,0,1396,49],[62,0,1396,50],[64,0,1396,52],[67,0,1396,55],[68,0,1396,56],[82,0,1396,70],[84,0,1396,72],[108,0,1396,96],[109,0,1396,97],[110,0,1396,98]],[[21,0,1397,11]],[[25,0,1397,17]],[[24,0,1398,12],[30,0,1398,18]],[[24,0,1399,12],[29,0,1399,17],[35,0,1399,23],[52,0,1399,40],[56,0,1399,44],[74,0,1399,62],[76,0,1399,64]],[[28,0,1400,14],[35,0,1400,21],[41,0,1400,27],[42,0,1400,28],[45,0,1400,31],[46,0,1400,32],[50,0,1400,36],[51,0,1400,37],[52,0,1400,38],[53,0,1400,39],[54,0,1400,40],[55,0,1400,41],[72,0,1400,58],[73,0,1400,59],[74,0,1400,60]],[[25,0,1401,13]],[[21,0,1402,11]],[[16,0,1403,8],[17,0,1403,9],[18,0,1403,10],[19,0,1403,11]],[[13,0,1405,7]],[[17,0,1405,13],[19,0,1405,15],[52,0,1405,48]],[[16,0,1407,8],[20,0,1407,12],[23,0,1407,15],[24,0,1407,16],[38,0,1407,30],[40,0,1407,32]],[[20,0,1408,10],[24,0,1408,14],[25,0,1408,15],[56,0,1408,46],[57,0,1408,47],[63,0,1408,53],[64,0,1408,54],[67,0,1408,57],[68,0,1408,58],[72,0,1408,62],[73,0,1408,63],[75,0,1408,65],[78,0,1408,68],[79,0,1408,69],[93,0,1408,83],[95,0,1408,85],[119,0,1408,109],[120,0,1408,110],[121,0,1408,111]],[[17,0,1409,9]],[[21,0,1409,15]],[[20,0,1410,10],[25,0,1410,15],[31,0,1410,21],[48,0,1410,38],[52,0,1410,42],[70,0,1410,60],[72,0,1410,62]],[[24,0,1411,12],[31,0,1411,19],[37,0,1411,25],[38,0,1411,26],[41,0,1411,29],[42,0,1411,30],[46,0,1411,34],[47,0,1411,35],[48,0,1411,36],[65,0,1411,53],[66,0,1411,54],[67,0,1411,55]],[[21,0,1412,11]],[[17,0,1413,9]],[[13,0,1415,7]],[[8,0,1416,4],[9,0,1416,5],[10,0,1416,6],[11,0,1416,7]],[[8,0,1418,4],[15,0,1418,11],[21,0,1418,17],[22,0,1418,18]],[[4,0,1420,2],[5,0,1420,3]],[[4,0,1422,2]],[],[],[],[],[[7,0,1427,5]],[[4,0,1428,12],[30,0,1428,38],[31,0,1428,39],[34,0,1428,83],[36,0,1429,39],[59,0,1429,84],[61,0,1429,86]],[[8,0,1432,4],[12,0,1432,8],[15,0,1432,11],[27,0,1432,23],[44,0,1432,40],[46,0,1432,42]],[[12,0,1433,6],[19,0,1433,13],[23,0,1433,17],[24,0,1433,18],[56,0,1433,50],[57,0,1433,51],[60,0,1433,54],[62,0,1433,56],[82,0,1433,76],[83,0,1433,77],[84,0,1433,78]],[[9,0,1434,5]],[[13,0,1434,11],[15,0,1434,13],[37,0,1434,35]],[[12,0,1435,6],[19,0,1435,13],[23,0,1435,17],[24,0,1435,18],[63,0,1435,57],[64,0,1435,58],[67,0,1435,61],[69,0,1435,63],[89,0,1435,83],[90,0,1435,84],[91,0,1435,85]],[[9,0,1436,5]],[[4,0,1437,2],[5,0,1437,3]],[[4,0,1439,12],[36,0,1439,44],[37,0,1439,45],[43,0,1439,70],[45,0,1440,45],[68,0,1440,90],[70,0,1440,92]],[[8,0,1443,4],[15,0,1443,11],[19,0,1443,15],[20,0,1443,16],[33,0,1443,29],[34,0,1443,30],[40,0,1443,36],[42,0,1443,38],[62,0,1443,58],[63,0,1443,59],[64,0,1443,60],[68,0,1443,64],[69,0,1444,6],[73,0,1444,10],[74,0,1444,11],[75,0,1444,12],[76,0,1444,13],[78,0,1445,6],[81,0,1445,9],[82,0,1445,10],[86,0,1445,14],[87,0,1445,15],[89,0,1445,17],[90,0,1445,18],[94,0,1445,22],[95,0,1445,23],[130,0,1445,58],[131,0,1445,59],[135,0,1445,63],[137,0,1445,65],[157,0,1445,85],[158,0,1445,86],[159,0,1445,87]],[[8,0,1446,6],[50,0,1446,48]],[[8,0,1447,6],[11,0,1447,9],[12,0,1447,10],[13,0,1447,11],[21,0,1447,29],[23,0,1447,31],[25,0,1447,33]],[[12,0,1448,8],[19,0,1448,15],[27,0,1448,23]],[[17,0,1449,11],[20,0,1449,14],[21,0,1449,15],[25,0,1449,19],[26,0,1449,20],[28,0,1449,22],[29,0,1449,23],[43,0,1449,37],[44,0,1449,38],[48,0,1449,42],[50,0,1449,44],[54,0,1449,48],[55,0,1449,49],[57,0,1449,51],[58,0,1449,52],[67,0,1449,61],[68,0,1449,83],[69,0,1449,84],[70,0,1449,85]],[[8,0,1450,6],[9,0,1450,7],[10,0,1450,8],[11,0,1452,5],[12,0,1452,6]],[[4,0,1453,2],[5,0,1453,3]],[[4,0,1455,12],[43,0,1455,51],[44,0,1455,52],[57,0,1455,86],[59,0,1456,52],[82,0,1456,97],[84,0,1456,99]],[[8,0,1459,4],[15,0,1459,11],[19,0,1459,15],[20,0,1459,16],[46,0,1459,42],[47,0,1459,43],[60,0,1459,56],[61,0,1459,57],[62,0,1459,58],[66,0,1459,62]],[[8,0,1460,6],[21,0,1460,19]],[[8,0,1461,6],[12,0,1461,10],[13,0,1461,11],[14,0,1461,12],[15,0,1461,13],[17,0,1462,6],[25,0,1462,14],[26,0,1462,15],[27,0,1462,16],[32,0,1462,37],[34,0,1462,39],[36,0,1462,41]],[[12,0,1463,8],[16,0,1463,12],[28,0,1463,48],[29,0,1463,49]],[[12,0,1464,8],[24,0,1464,20],[27,0,1464,23],[32,0,1464,28],[33,0,1464,29],[36,0,1464,32],[37,0,1464,33],[41,0,1464,37],[42,0,1464,38],[44,0,1464,40],[45,0,1464,41],[49,0,1464,45],[50,0,1464,46],[63,0,1464,59],[64,0,1464,60],[68,0,1464,64],[69,0,1464,65],[86,0,1464,82],[87,0,1464,83],[90,0,1464,86],[92,0,1464,88],[112,0,1464,108],[113,0,1464,109],[114,0,1464,110],[115,0,1464,111]],[[12,0,1465,8],[19,0,1465,15],[32,0,1465,28],[33,0,1465,29],[45,0,1465,41],[46,0,1465,42],[47,0,1465,43]],[[8,0,1466,6],[9,0,1466,7],[10,0,1466,8],[12,0,1467,6],[15,0,1467,9],[16,0,1467,10],[17,0,1467,11],[22,0,1467,32],[24,0,1467,34],[26,0,1467,36]],[[12,0,1469,8],[16,0,1469,12],[21,0,1469,17],[24,0,1469,30],[26,0,1469,32],[27,0,1469,33]],[[12,0,1471,8],[17,0,1471,13],[18,0,1471,14],[25,0,1471,21],[26,0,1471,22],[30,0,1471,26],[31,0,1471,27],[33,0,1471,29]],[[16,0,1472,10],[21,0,1472,15],[24,0,1472,18],[29,0,1472,23],[30,0,1472,24],[36,0,1472,30],[37,0,1472,31],[41,0,1472,35],[42,0,1472,36],[77,0,1472,71],[78,0,1472,72],[82,0,1472,76],[84,0,1472,78],[104,0,1472,98],[105,0,1472,99],[106,0,1472,100],[107,0,1472,101]],[[12,0,1473,8],[13,0,1473,9],[14,0,1473,10],[15,0,1473,11]],[[12,0,1474,8],[19,0,1474,15],[24,0,1474,20],[25,0,1474,21]],[[8,0,1475,6],[9,0,1475,7],[10,0,1475,8],[12,0,1476,6],[15,0,1476,9],[16,0,1476,10],[17,0,1476,11],[25,0,1476,29],[27,0,1476,31],[29,0,1476,33]],[[12,0,1477,8],[19,0,1477,15],[27,0,1477,23]],[[17,0,1478,11],[20,0,1478,14],[21,0,1478,15],[25,0,1478,19],[26,0,1478,20],[28,0,1478,22],[29,0,1478,23],[43,0,1478,37],[44,0,1478,38],[48,0,1478,42],[50,0,1478,44],[54,0,1478,48],[55,0,1478,49],[57,0,1478,51],[58,0,1478,52],[67,0,1478,61],[68,0,1478,83],[69,0,1478,84],[70,0,1478,85]],[[8,0,1479,6],[9,0,1479,7],[10,0,1479,8],[11,0,1480,5],[12,0,1480,6]],[[4,0,1481,2],[5,0,1481,3]],[[4,0,1483,2]],[],[],[],[],[],[],[[7,0,1490,5]],[[4,0,1491,12],[33,0,1491,41],[34,0,1492,4],[38,0,1492,21],[40,0,1493,4],[63,0,1493,49],[65,0,1493,51]],[[8,0,1495,4],[14,0,1495,10],[19,0,1495,15],[22,0,1495,18],[26,0,1495,22],[27,0,1495,23],[62,0,1495,58],[63,0,1495,59],[67,0,1495,63],[69,0,1495,65],[89,0,1495,85],[90,0,1495,86],[91,0,1495,87]],[[8,0,1496,4],[15,0,1496,11],[20,0,1496,16],[21,0,1496,17],[24,0,1496,20],[25,0,1496,21],[29,0,1496,25],[30,0,1496,26],[32,0,1496,28],[33,0,1496,29],[47,0,1496,43],[48,0,1496,44],[52,0,1496,48],[54,0,1496,50],[58,0,1496,54],[59,0,1496,55],[61,0,1496,57],[62,0,1496,58],[71,0,1496,67],[72,0,1496,89],[73,0,1496,90],[74,0,1496,91]],[[4,0,1497,2],[5,0,1497,3]],[[4,0,1499,2]],[],[[7,0,1501,5]],[[4,0,1502,12],[39,0,1502,47],[40,0,1502,51],[44,0,1502,68],[46,0,1503,51],[69,0,1503,96],[71,0,1503,98]],[[8,0,1505,4],[12,0,1505,8],[32,0,1505,28],[36,0,1505,32],[40,0,1505,36],[44,0,1505,40],[64,0,1505,60],[65,0,1505,61],[71,0,1505,67],[76,0,1505,72],[77,0,1505,73],[79,0,1505,75]],[[12,0,1506,6],[19,0,1506,13],[20,0,1506,14],[24,0,1506,18],[25,0,1506,19],[42,0,1506,36],[43,0,1506,37],[47,0,1506,41],[48,0,1506,42],[49,0,1506,43]],[[9,0,1507,5]],[[8,0,1508,4],[12,0,1508,8],[20,0,1508,16],[23,0,1508,29],[25,0,1508,31],[26,0,1508,32]],[[8,0,1509,4],[16,0,1509,12],[17,0,1509,13],[21,0,1509,17],[22,0,1509,18],[26,0,1509,22],[27,0,1509,23],[44,0,1509,40],[45,0,1509,41],[49,0,1509,45],[50,0,1509,46],[51,0,1509,47]],[[8,0,1511,4],[28,0,1511,24],[29,0,1511,25],[36,0,1511,32],[37,0,1511,33],[40,0,1511,36],[41,0,1511,37],[43,0,1511,39]],[[12,0,1512,6],[16,0,1512,10],[21,0,1512,15],[22,0,1512,16],[29,0,1512,23],[30,0,1512,25],[34,0,1512,46],[35,0,1512,47],[38,0,1512,50],[39,0,1512,51],[43,0,1512,55],[44,0,1512,56],[45,0,1512,57],[49,0,1512,61],[50,0,1512,62],[53,0,1512,65],[54,0,1512,66],[59,0,1512,71],[61,0,1512,73]],[[16,0,1513,8],[89,0,1513,81]],[[16,0,1515,8],[22,0,1515,14],[27,0,1515,19],[30,0,1515,39],[34,0,1515,60],[35,0,1515,61],[38,0,1515,64],[39,0,1515,65],[43,0,1515,69],[44,0,1515,70],[45,0,1515,71]],[[16,0,1516,8],[21,0,1516,13],[22,0,1516,14],[29,0,1516,21],[30,0,1516,22],[37,0,1516,29],[38,0,1516,30],[40,0,1516,32]],[[20,0,1518,10],[24,0,1518,14],[27,0,1518,17],[28,0,1518,18],[42,0,1518,32],[44,0,1518,34]],[[24,0,1519,12],[32,0,1519,20],[35,0,1519,23],[43,0,1519,31],[44,0,1519,32],[50,0,1519,38],[51,0,1519,39],[55,0,1519,43],[56,0,1519,44],[91,0,1519,79],[92,0,1519,80],[99,0,1519,87],[101,0,1519,89],[104,0,1519,92],[105,0,1519,93],[119,0,1519,107],[120,0,1519,108],[121,0,1519,109],[122,0,1519,110]],[[21,0,1520,11]],[[25,0,1520,17]],[[24,0,1521,12],[32,0,1521,20],[33,0,1521,21],[37,0,1521,25],[38,0,1521,26],[45,0,1521,33],[46,0,1521,34],[63,0,1521,51],[64,0,1521,52],[68,0,1521,56],[69,0,1521,57],[70,0,1521,58]],[[21,0,1522,11]],[[16,0,1523,8],[17,0,1523,9],[18,0,1523,10],[19,0,1523,11]],[[13,0,1525,7]],[[17,0,1525,13],[19,0,1525,15],[52,0,1525,48]],[[16,0,1527,8],[20,0,1527,12],[23,0,1527,15],[24,0,1527,16],[38,0,1527,30],[40,0,1527,32]],[[20,0,1528,10],[28,0,1528,18],[31,0,1528,21],[39,0,1528,29],[40,0,1528,30],[46,0,1528,36],[47,0,1528,37],[51,0,1528,41],[52,0,1528,42],[87,0,1528,77],[88,0,1528,78],[92,0,1528,82],[94,0,1528,84],[97,0,1528,87],[98,0,1528,88],[112,0,1528,102],[113,0,1528,103],[114,0,1528,104],[115,0,1528,105]],[[17,0,1529,9]],[[21,0,1529,15]],[[20,0,1530,10],[26,0,1530,16],[33,0,1530,23],[36,0,1530,28],[40,0,1530,49],[41,0,1530,50],[44,0,1530,53],[45,0,1530,54],[49,0,1530,58],[50,0,1530,76],[51,0,1530,77]],[[20,0,1531,10],[24,0,1531,14],[31,0,1531,21],[35,0,1531,25],[39,0,1531,29],[43,0,1531,33],[49,0,1531,39],[53,0,1531,43],[60,0,1531,50],[61,0,1531,51],[78,0,1531,68],[80,0,1531,70]],[[24,0,1532,12],[32,0,1532,20],[33,0,1532,21],[37,0,1532,25],[38,0,1532,26],[45,0,1532,33],[46,0,1532,34],[63,0,1532,51],[64,0,1532,52],[68,0,1532,56],[69,0,1532,57],[70,0,1532,58]],[[21,0,1533,11]],[[20,0,1534,10],[77,0,1534,67]],[[17,0,1535,9]],[[13,0,1537,7]],[[8,0,1538,4],[9,0,1538,5],[10,0,1538,6],[11,0,1538,7]],[[8,0,1540,4],[15,0,1540,11],[23,0,1540,19],[24,0,1540,20]],[[4,0,1541,2],[5,0,1541,3]],[[4,0,1543,2]],[],[],[[7,0,1546,5]],[[4,0,1547,12],[44,0,1547,52],[45,0,1548,4],[49,0,1548,11],[51,0,1549,4],[74,0,1549,50],[76,0,1549,52]],[[8,0,1551,4],[61,0,1551,57]],[[8,0,1552,4],[12,0,1552,8],[22,0,1552,18],[25,0,1552,48],[27,0,1552,50],[28,0,1552,51]],[[8,0,1553,4],[14,0,1553,10],[28,0,1553,24],[31,0,1553,54],[33,0,1553,56],[34,0,1553,57]],[[8,0,1555,4],[116,0,1555,112]],[[8,0,1557,4],[30,0,1557,26]],[[8,0,1558,4],[13,0,1558,9],[19,0,1558,15],[20,0,1558,16],[23,0,1558,19],[25,0,1558,21],[30,0,1558,26],[31,0,1558,27],[35,0,1558,31],[41,0,1558,37],[42,0,1558,38],[49,0,1558,45],[50,0,1558,46],[54,0,1558,50],[55,0,1558,51],[57,0,1558,53]],[[12,0,1559,6],[39,0,1559,33]],[[12,0,1560,6],[16,0,1560,10],[36,0,1560,30],[40,0,1560,34],[60,0,1560,54],[61,0,1560,55],[67,0,1560,61],[70,0,1560,64],[71,0,1560,65],[73,0,1560,67]],[[16,0,1561,8],[22,0,1561,14],[41,0,1561,33],[44,0,1561,69],[64,0,1561,89],[65,0,1561,90],[69,0,1561,94],[70,0,1561,95],[77,0,1561,102],[78,0,1561,103],[80,0,1561,105],[81,0,1561,106],[88,0,1561,113],[89,0,1561,114],[93,0,1561,118],[98,0,1561,123],[101,0,1561,126],[102,0,1561,127],[103,0,1561,128]],[[16,0,1563,8],[20,0,1563,12],[39,0,1563,31],[41,0,1563,33]],[[20,0,1564,10],[34,0,1564,24],[35,0,1564,25],[38,0,1564,28],[39,0,1564,29],[42,0,1564,32],[47,0,1564,37],[48,0,1564,38]],[[17,0,1565,9]],[[21,0,1565,15]],[[20,0,1566,10],[30,0,1566,20],[31,0,1566,21],[34,0,1566,24],[35,0,1566,25],[38,0,1566,28],[43,0,1566,33],[44,0,1566,34]],[[17,0,1567,9]],[[13,0,1568,7]],[[17,0,1568,13]],[[16,0,1569,8],[26,0,1569,18],[29,0,1569,21],[33,0,1569,25],[34,0,1569,26]],[[13,0,1570,7]],[[9,0,1571,5]],[[8,0,1574,4],[15,0,1574,11]],[[12,0,1575,6],[22,0,1575,16]],[[12,0,1576,6],[26,0,1576,20]],[[9,0,1577,37],[10,0,1577,38]],[[4,0,1578,2],[5,0,1578,3]],[[4,0,1580,2]],[],[],[],[],[],[],[[7,0,1587,5]],[[4,0,1588,12],[16,0,1588,24],[17,0,1588,25],[22,0,1588,42]],[[8,0,1589,4],[15,0,1589,11],[19,0,1589,15],[20,0,1589,16],[25,0,1589,21],[26,0,1589,22],[32,0,1589,28],[34,0,1589,30],[35,0,1589,31],[36,0,1589,32],[40,0,1589,36],[41,0,1590,6],[45,0,1590,10],[46,0,1590,11],[47,0,1590,12],[48,0,1590,13],[49,0,1591,5],[50,0,1591,6]],[[4,0,1592,2],[5,0,1592,3]],[[1,0,1593,1]]],"sourcesContent":["import {combineLatest, forkJoin, from, Observable, of} from 'rxjs';\r\n\r\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\r\nimport {\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  QuerySnapshot,\r\n  writeBatch,\r\n  WriteBatch\r\n} from 'firebase/firestore';\r\n\r\nimport {\r\n  addCreatedDate,\r\n  addDataToItem,\r\n  addModifiedDate,\r\n  convertTimestampToDate,\r\n  getDocRefWithId,\r\n  getRefFromPath,\r\n  getSubCollection\r\n} from './helpers';\r\nimport {SubCollectionQuery} from './sub-collection-query';\r\nimport {FirestoreErrorExt, FirestoreWrapper} from './interfaces';\r\nimport {FireItem, FirestoreItem, FirestoreMetadata} from './models/firestoreItem';\r\nimport {SubCollectionWriter} from './sub-collection-writer';\r\nimport {moveItemInArray, transferArrayItem} from './drag-utils';\r\nimport {QueryContainer} from './firebase-extended-wrapper';\r\n\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport enum DocNotExistAction {\r\n  /** returns a null object */\r\n  RETURN_NULL,\r\n\r\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n  RETURN_ALL_BUT_DATA,\r\n\r\n  /** do not return at all until it does exist */\r\n  FILTER,\r\n\r\n  /** return doc not found error 'doc_not_found' */\r\n  THROW_DOC_NOT_FOUND,\r\n}\r\n\r\n/** Used internally */\r\ninterface CurrentDocSubCollectionSplit {\r\n  /** contains the document that is considered the current */\r\n  currentDoc: FireItem<{}>;\r\n  /** sub collections of current document */\r\n  subCollections: { [index: string]: any };\r\n}\r\n\r\n\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n\r\n  /**\r\n   * Constructor for AngularFirestoreWrapper\r\n   *\r\n   * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n   * @param defaultDocId The default name given to a subCollection document when no name is given\r\n   */\r\n  constructor(private fs: FirestoreWrapper, public defaultDocId: string = 'data') {\r\n  }\r\n\r\n  /* ----------  LISTEN -------------- */\r\n\r\n  /**\r\n   *\r\n   * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n   *\r\n   * Triggers for any change in any document that is listened to.\r\n   *\r\n   *\r\n   * E.x:\r\n   *      const subCollectionQueries: SubCollectionQuery[] = [\r\n   *         { name: 'data' },\r\n   *         { name: 'secure' },\r\n   *         { name: 'variants' },\r\n   *         { name: 'images',\r\n   *           queryFn: ref => ref.orderBy('index'),\r\n   *           collectionWithNames: [\r\n   *             { name: 'secure'}\r\n   *           ]\r\n   *         },\r\n   *     ];\r\n   *\r\n   *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n   *\r\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n   * All logic is in listenForDocDeepRecursiveHelper$.\r\n   *\r\n   * @param docRef - a docRef with potential queryFn\r\n   * @param subCollectionQueries - see example\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  public listenForDoc$<T = FirestoreItem | DocumentData>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA): Observable<FireItem<T>> {\r\n\r\n    return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(\r\n      map(data => data as FireItem<T>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n   *\r\n   * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n   * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n   *\r\n   *\r\n   *    Example usage.\r\n   *\r\n   *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n   *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n   *\r\n   *    constructor(private ngFireStore: AngularFirestore) {\r\n   *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n   *    }\r\n   *\r\n   *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n   *    }\r\n   *\r\n   *    If you do not wish to listen for changes and only care about getting the values once\r\n   *\r\n   *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n   *          take(1)\r\n   *        );\r\n   *    }\r\n   *\r\n   * @param collectionRef the collectionRef which will be listened to\r\n   * @param subCollectionQueries\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   */\r\n  public listenForCollection$<T = FirestoreItem | DocumentData>(\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.listenForCollectionSimple$<T>(collectionRef).pipe(\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n\r\n        if (items == null || items.length === 0) {\r\n          return of([]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(items);\r\n        }\r\n\r\n        const collectionListeners: Array<Observable<any>> = [];\r\n\r\n        items.forEach(item => {\r\n\r\n          const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n\r\n          collectionListeners.push(collectionListener);\r\n        });\r\n\r\n        /* Finally return the combined collection listeners */\r\n        return combineLatest(collectionListeners);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n   */\r\n  public listenForCollectionRecursively$<T = FirestoreItem | DocumentData>(\r\n    collectionPath: string,\r\n    collectionKey: string,\r\n    orderKey?: string): Observable<any> {\r\n\r\n    const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n    const collectionQuery = new QueryContainer<T>(collectionRef);\r\n    if (orderKey != null) {\r\n      collectionQuery.orderBy(orderKey);\r\n    }\r\n\r\n    return this.listenForCollectionSimple$<T>(collectionRef).pipe(\r\n      mergeMap((items: FireItem<T>[]) => {\r\n\r\n        if (items.length <= 0) {\r\n          return of([]);\r\n        } // TODO  perhaps make this throw an error so that we can skip it\r\n\r\n        // if (items.length <= 0) { throwError('No more '); }\r\n\r\n        const nextLevelObs: Array<Observable<FireItem<T>>> = [];\r\n\r\n        for (const item of items) {\r\n\r\n          // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n          const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey);  // one level deeper\r\n\r\n          const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(\r\n            map((nextLevelItems: Array<FireItem<T>>) => {\r\n              if (nextLevelItems.length > 0) {\r\n                return {...item, [collectionKey]: nextLevelItems} as FireItem<T>;\r\n              } else {\r\n                return {...item} as FireItem<T>;\r\n              }  // dont include an empty array\r\n            }),\r\n          );\r\n          nextLevelObs.push(nextLevelItems$);\r\n        }\r\n\r\n        return combineLatest(nextLevelObs).pipe(\r\n          tap(val => console.log(val))\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /* ---------- ADD -------------- */\r\n\r\n  /**\r\n   * Add document to firestore and split it up into sub collection.\r\n   *\r\n   * @param data the data to be saved\r\n   * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n   * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n   * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n   * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n   */\r\n  public add$<T = FirestoreItem>(\r\n    data: T,\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionWriters: SubCollectionWriter[] = [],\r\n    isAddDates: boolean = true,\r\n    docId?: string): Observable<FireItem<T>> {\r\n\r\n    if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'FirebaseErrorExt',\r\n        code: 'unknown',\r\n        message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n        stack: '',\r\n        data,\r\n        subCollectionWriters,\r\n        docId\r\n      };\r\n\r\n      throw error;\r\n    }\r\n\r\n    let currentDoc;\r\n    let subCollections: { [index: string]: any; } = {};\r\n\r\n    /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n    * Each item in the array will be saved as a map with the key being the array index\r\n    * We still want the return value of this function to be as an array non as a map\r\n    */\r\n    if (Array.isArray(data) && docId) {\r\n      currentDoc = data;\r\n    } else {\r\n      const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n      currentDoc = split.currentDoc;\r\n      subCollections = split.subCollections;\r\n    }\r\n\r\n    return this.addSimple$<T>(currentDoc as T, collectionRef, isAddDates, docId).pipe(\r\n      /* Add Sub/sub collections*/\r\n      mergeMap((currentData: FireItem<T>) => {\r\n\r\n        const subWriters: Array<Observable<any>> = [];\r\n\r\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n          let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n          let subDocId: string | undefined;\r\n\r\n          if (subCollectionWriters) {\r\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n          }\r\n\r\n          const subCollectionRef: CollectionReference = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n\r\n          /* Handle array and object differently\r\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n          * If a docId is given we should save it using that docId under a single doc.\r\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n          if (Array.isArray(subCollectionValue)) {\r\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n\r\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n              const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n                map(item => {\r\n                  // return {[key]: item};\r\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n                })\r\n              );\r\n              subWriters.push(subWriter);\r\n\r\n            } else { /* docId is undefined so we save each object in the array separate */\r\n              subCollectionValue.forEach((arrayValue: FireItem<{}>) => {\r\n\r\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(\r\n                  map(item => {\r\n                    // return {[key]: [item]};\r\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                    return {key: subCollectionKey, value: [item]};\r\n                  })\r\n                );\r\n\r\n                subWriters.push(subWriter);\r\n              });\r\n            }\r\n          } else { /* Not an array so a single Object*/\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n\r\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n            const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n              map(item => {\r\n                // return {[key]: item};\r\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n              })\r\n            );\r\n\r\n            subWriters.push(subWriter);\r\n          }\r\n        } /* end of iteration */\r\n\r\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n\r\n          /* the pipe only matters for the return value not for writing the data */\r\n          return combineLatest(subWriters).pipe(\r\n            // tap(sub => console.log(sub)),\r\n\r\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n            // TODO firestore.\r\n\r\n            map((docDatas: Array<Map<string, []>>) => { /* List of sub docs*/\r\n              const groupedData = {};\r\n\r\n              docDatas.forEach((doc: { [index: string]: any }) => { /* iterate over each doc */\r\n\r\n                const key = doc.key;\r\n                const value = doc.value;\r\n\r\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                // @ts-ignore\r\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                  // @ts-ignore\r\n                  (groupedData[key] as Array<any>).push(value[0]);\r\n                } else {\r\n                  // @ts-ignore\r\n                  groupedData[key] = value;\r\n                }\r\n              });\r\n\r\n              return groupedData as T;\r\n            }),\r\n\r\n            // tap(groupedData => console.log(groupedData)),\r\n\r\n            map((groupedData: T) => {\r\n              return {...currentData, ...groupedData} as T;\r\n            }),\r\n            // tap(d => console.log(d)),\r\n          );\r\n        } else {\r\n          return of(currentData);\r\n        }\r\n      })\r\n    ).pipe(\r\n      // @ts-ignore\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /* ----------  EDIT -------------- */\r\n\r\n  /**\r\n   * Update document and child documents\r\n   *\r\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n   * so its possible to introduce spelling mistakes on attributes and so forth\r\n   *\r\n   * @param data the data that is to be added or updated { [field: string]: any }\r\n   * @param docRef DocumentReference to be updated\r\n   * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n   * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n   */\r\n  public update$<A extends { [field: string]: any }>(data: Partial<A>,\r\n                                                     docRef: DocumentReference,\r\n                                                     subCollectionWriters: SubCollectionWriter[] = [],\r\n                                                     isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n      return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n    }\r\n\r\n    const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Update/ add data to the firestore documents\r\n   *\r\n   * @param docRefs list of DocumentReference to be have their data updated\r\n   * @param data data to add/update\r\n   * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n   */\r\n  public updateMultiple$<A>(docRefs: DocumentReference[], data: A, isAddModifiedDate: boolean = true): Observable<void> {\r\n    // const batch = this.fs.firebaseApp.firestore().batch();\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.update(docRef, data);\r\n    });\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /**\r\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n   * and then delete the old doc.\r\n   * returns the new doc once the delete is done.\r\n   *\r\n   * @param docRef DocumentReference to have its id changed\r\n   * @param newId the new id\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n   */\r\n  public changeDocId$<T>(docRef: DocumentReference,\r\n                         newId: string,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         subCollectionWriters?: SubCollectionWriter[]): Observable<FireItem<T>> {\r\n\r\n    if (subCollectionWriters == null) {\r\n      subCollectionWriters = subCollectionQueries as SubCollectionWriter[];\r\n    }\r\n\r\n    const collectionRef: CollectionReference = docRef.parent;\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      map((oldData: T) => this.cleanExtrasFromData(oldData, subCollectionWriters)),\r\n      switchMap((oldData: T) => {\r\n        return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe( /* add the data under id*/\r\n          mergeMap(newData => { /* delete the old doc */\r\n            return this.delete$(docRef, subCollectionQueries).pipe(\r\n              map(() => newData) /* keep the new data */\r\n            );\r\n          }),\r\n        );\r\n      }),\r\n      catchError(err => {\r\n        console.log('Failed to Change Doc Id: ' + err);\r\n        throw err;\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n  /* Move Item in Array */\r\n\r\n\r\n  /**\r\n   * Moved item within the same list so we need to update the index of all items in the list;\r\n   * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n   * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   */\r\n  public moveItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                       fromIndex: number,\r\n                                                       toIndex: number,\r\n                                                       useCopy = false): Observable<void> {\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n      return of();\r\n    }\r\n\r\n    if (items[0]?.firestoreMetadata == null) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'FirebaseErrorExt',\r\n        code: 'unknown',\r\n        message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n      };\r\n      throw error;\r\n    }\r\n\r\n    const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n   * Not called directly.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   * @protected\r\n   */\r\n  protected getBatchFromMoveItemInIndexedDocs<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                           fromIndex: number,\r\n                                                                           toIndex: number,\r\n                                                                           useCopy = false): WriteBatch {\r\n\r\n    const lowestIndex = Math.min(fromIndex, toIndex);\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n      return batch;\r\n    }\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    moveItemInArray<A>(usedItems, fromIndex, toIndex);\r\n\r\n    const listSliceToUpdate: Array<FireItem<A>> = usedItems.slice(lowestIndex);\r\n\r\n    let i = lowestIndex;\r\n    for (const item of listSliceToUpdate) {\r\n      if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n        item.index = i;\r\n      }\r\n      const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n      batch.update(ref, {index: i});\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indexToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                indexToDelete: number,\r\n                                                                subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    const itemToDelete = usedItems[indexToDelete];\r\n\r\n    // get the delete batch that also contains any sub collections of the item\r\n    return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n      map((batch) => {\r\n        // sort and remove the item from the usedItems and then add the update index to the batch\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        usedItems.splice(indexToDelete, 1);\r\n\r\n        this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch);\r\n\r\n        return batch;\r\n      }),\r\n\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indicesToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemsInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                 indicesToDelete: number[],\r\n                                                                 subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                 useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    usedItems.sort(item => item.index); // make sure array is sorted by index\r\n\r\n    const itemsToDelete = usedItems.filter((item, i) => {\r\n      return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n    });\r\n\r\n    // iterate in revese so as to not change the indices,\r\n    // the indicies to delete must also be sorted\r\n    indicesToDelete.sort();\r\n    for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n      usedItems.splice(indicesToDelete[i], 1);\r\n    }\r\n\r\n    const docRefsObs$: Observable<DocumentReference[]>[] = [];\r\n\r\n    // get the docRefs for items to be deleted including the ones in the subcollections\r\n    itemsToDelete.forEach(itemToDelete => {\r\n\r\n      const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n        take(1)\r\n      );\r\n      docRefsObs$.push(obs$);\r\n    });\r\n\r\n\r\n    return forkJoin(docRefsObs$).pipe(\r\n      take(1),\r\n      map((listOfDocRefs) => {\r\n        // concat all the separate docRefs lists into one array of docRefs\r\n        let docRefs: DocumentReference[] = [];\r\n\r\n        listOfDocRefs.forEach(refs => {\r\n          docRefs = docRefs.concat(refs);\r\n        });\r\n\r\n        return docRefs;\r\n      }),\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      map((batch: WriteBatch) => this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch)),\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Run this on collections with a fixed order using an index: number attribute;\r\n   * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n   * Basically needs to be run after a delete\r\n   *\r\n   * @param items\r\n   * @param batch\r\n   * @protected\r\n   */\r\n  protected getBatchFromUpdateIndexFromListOfDocs<A extends { index: number }>(\r\n    items: Array<FireItem<A>>,\r\n    batch: WriteBatch = writeBatch(this.fs.firestore)\r\n  ): WriteBatch {\r\n\r\n    items.forEach((item, index) => {\r\n      if (item.index !== index) {\r\n        item.index = index; // this is just so that the given array's index is also updated immediately\r\n        const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n        batch.update(ref, {index});\r\n      }\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  public transferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): Observable<void> {\r\n\r\n    const batch: WriteBatch = this.getBatchFromTransferItemInIndexedDocs(previousArray,\r\n      currentArray,\r\n      previousIndex,\r\n      currentIndex,\r\n      currentArrayName,\r\n      additionalDataUpdateOnMovedItem,\r\n      isUpdateModifiedDateOnMovedItem,\r\n      useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /* ----------  DELETE -------------- */\r\n\r\n  /**\r\n   * Delete Document and child documents\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public delete$(docRef: DocumentReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<void> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      return this.fs.delete(docRef);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      switchMap((docRefList: DocumentReference<DocumentData>[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(); }\r\n      //   else { throw err; }\r\n      // }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns Writebatch that is set to delete Document and child documents of given docRef\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param batch\r\n   */\r\n  public getDeleteBatch$(docRef: DocumentReference,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         batch: WriteBatch = writeBatch(this.fs.firestore)): Observable<WriteBatch> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      batch.delete(docRef);\r\n      return of(batch);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public deleteMultipleByPaths$(docPaths: string[]): Observable<any> {\r\n    const docRefs: DocumentReference[] =\r\n      docPaths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n\r\n    return this.deleteMultipleSimple$(docRefs);\r\n  }\r\n\r\n  /**\r\n   * Delete Documents and child documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteMultiple$(docRefs: DocumentReference[], subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n\r\n    const deepDocRefs$: Array<Observable<any>> = [];\r\n\r\n    docRefs.forEach(docRef => {\r\n      const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n      deepDocRefs$.push(docRefs$);\r\n    });\r\n\r\n    return combineLatest(deepDocRefs$).pipe(\r\n      // tap(lists => console.log(lists)),\r\n      map((lists: any[]) => {\r\n        let mainDocRefList: DocumentReference[] = [];\r\n        lists.forEach(list => {\r\n          mainDocRefList = mainDocRefList.concat(list);\r\n        });\r\n        return mainDocRefList;\r\n      }),\r\n      // tap(lists => console.log(lists)),\r\n      switchMap((docRefList: DocumentReference[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete all documents and sub collections as specified in subCollectionQueries.\r\n   * Not very efficient and causes a lot of db reads.\r\n   * If possible use the firebase CLI or the console instead when deleting large collections.\r\n   *\r\n   * @param collectionRef\r\n   * @param subCollectionQueries\r\n   */\r\n  public deleteCollection$(collectionRef: CollectionReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(\r\n      switchMap(docRefs => this.deleteMultiple$(docRefs))\r\n    ).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete firestore document by path\r\n   * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n   *\r\n   * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteDocByPath$(docPath: string, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    const docRef = getRefFromPath(docPath, this.fs.firestore) as DocumentReference;\r\n    return this.delete$(docRef, subCollectionQueries);\r\n  }\r\n\r\n  /**\r\n   * Delete document by FirestoreItem\r\n   *\r\n   * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n   *\r\n   * @param item FirestoreItem to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteItem$<T>(item: FireItem<T>, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n\r\n    return this.deleteMultipleSimple$(docRefs).pipe(\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /* ---- OTHER ---- */\r\n\r\n  /**\r\n   * clean FirestoreBaseItem properties from the data.\r\n   * Usually done if you wish to save the data to firestore, since some FirestoreBaseItem properties are of non allowed types.\r\n   *\r\n   * Goes through each level and removes DbItemExtras\r\n   * In case you wish to save the data\r\n   *\r\n   * @param data data to be cleaned, either single item or an array of items\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to locate them\r\n   * @param additionalFieldsToRemove\r\n   */\r\n\r\n  cleanExtrasFromData<T>(data: T & DocumentData,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): T;\r\n\r\n  cleanExtrasFromData<T>(datas: Array<T & DocumentData>,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): Array<T>;\r\n\r\n  public cleanExtrasFromData<T>(data: T & DocumentData | Array<T & DocumentData>,\r\n                                subCollectionWriters: SubCollectionWriter[] = [],\r\n                                additionalFieldsToRemove: string[] = []): T | Array<T> {\r\n\r\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n    // const dataToBeCleaned = data;\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n      const cleanDatas: Array<T> = [];\r\n\r\n      data.forEach(d => {\r\n        cleanDatas.push(\r\n          this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove) as T\r\n        );\r\n      });\r\n\r\n      return cleanDatas;\r\n\r\n    } else {\r\n      return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove) as T;\r\n    }\r\n  }\r\n\r\n\r\n  /* ----------  PROTECTED METHODS -------------- */\r\n\r\n  /**\r\n   * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n   * and also allows for to choose action to take when document does not exist\r\n   *\r\n   * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n   *\r\n   * @param docRef DocumentReference that will be listened to\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  protected listenForDocSimple$<T>(docRef: DocumentReference<any>,\r\n                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA\r\n  ): Observable<FireItem<T>> {\r\n\r\n    return this.fs.doc(docRef).pipe(\r\n      tap((snapshot: DocumentSnapshot) => {\r\n        if (!snapshot.exists && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n          const error: FirestoreErrorExt = {\r\n            name: 'FirebaseErrorExt',\r\n            code: 'not-found',\r\n            message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n            docRef\r\n          };\r\n          throw error;\r\n        }\r\n      }),\r\n\r\n      filter((snapshot: DocumentSnapshot) => {\r\n        return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n      }),\r\n\r\n      map((snapshot: DocumentSnapshot) => {\r\n\r\n        if (snapshot.exists || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n          const data = snapshot.data() as T;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: snapshot.id,\r\n            ref: snapshot.ref as DocumentReference<T>,\r\n            path: docRef.path,\r\n            isExists: snapshot.exists(),\r\n            snapshotMetadata: snapshot.metadata\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n          return null;\r\n        }\r\n        return null;\r\n      }),\r\n      map((data) => {\r\n        if (data != null) {\r\n          return convertTimestampToDate(data as FireItem<{}>);\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    ) as Observable<FireItem<T>>;\r\n  }\r\n\r\n  /**\r\n   * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n   * Used internally, please use listenForCollection$() instead.\r\n   *\r\n   * @param collectionRef the collectionRef which will be listened to\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   * @protected\r\n   */\r\n  protected listenForCollectionSimple$<T>(collectionRef: CollectionReference<any>): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.fs.collection(collectionRef).pipe(\r\n      map((snap: QuerySnapshot<T>) => {\r\n        return snap.docs.map(snapshot => {\r\n          const data = snapshot.data() as T;\r\n\r\n          const id = snapshot.id;\r\n          const ref = snapshot.ref as DocumentReference<T>;\r\n          const path = ref.path;\r\n          const snapshotMetadata = snapshot.metadata;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id,\r\n            path,\r\n            ref,\r\n            snapshotMetadata,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        });\r\n      }),\r\n      map((datas: Array<FireItem<T>>) => datas.map(data => {\r\n        convertTimestampToDate(data);\r\n        return data;\r\n      }))\r\n    ) as Observable<Array<FireItem<T>>>;\r\n  }\r\n\r\n  /**\r\n   * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n   *\r\n   * Please use listenForDoc or listenForCollection.\r\n   *\r\n   * @param item\r\n   * @param subCollectionQueries\r\n   * @protected\r\n   */\r\n  protected listenForCollectionsDeep<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<FireItem<T>[]> {\r\n\r\n    if (item == null) {\r\n      return of([item]);\r\n    }\r\n    if (subCollectionQueries.length <= 0) {\r\n      return of([item]);\r\n    }\r\n\r\n    const collectionListeners: Array<Observable<any>> = [];\r\n\r\n    /* Iterate over each sub collection we have given and create collection listeners*/\r\n    subCollectionQueries.forEach(subCollectionQuery => {\r\n\r\n      let collectionRef = getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name);\r\n      if (subCollectionQuery.queryFn) {\r\n        collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      }\r\n\r\n      const collectionListener = this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n        /* Uncomment to see data on each update */\r\n        // tap(d => console.log(d)),\r\n        // filter(docs => docs != null),\r\n        /* Listen For and Add any Potential Sub Docs*/\r\n        // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n        mergeMap((items: FireItem<{}>[]) => {\r\n\r\n          if (!subCollectionQuery.subCollections) {\r\n            return of(items);\r\n          }\r\n\r\n          const docListeners: Array<Observable<any>> = [];\r\n\r\n          items = items.filter(d => d != null); // filter out potential nulls\r\n\r\n          items.forEach((subItem: FireItem<{}>) => {\r\n            const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n            docListeners.push(subDocAndCollections$);\r\n          });\r\n\r\n          if (docListeners.length <= 0) {\r\n            return of([]);\r\n          } /* subCollectionQuery is empty or doesnt exist */\r\n\r\n          return combineLatest(docListeners).pipe(\r\n            // tap(val => console.log(val))\r\n          );\r\n        }), /* End of Listening for sub docs */\r\n        /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n        and we only care about the data. So we remove the array and just make it one object with the\r\n        subCollectionQuery name as key and docs[0] as value */\r\n        map((items: FireItem<{}>[]) => {\r\n          const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n\r\n          if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n            return {[subCollectionQuery.name]: items[0]};\r\n          } else {\r\n            return {[subCollectionQuery.name]: items};\r\n          }\r\n        }),\r\n        // tap(d => console.log(d)),\r\n      );\r\n\r\n      collectionListeners.push(collectionListener);\r\n    });\r\n\r\n    /* Finally return the combined collection listeners*/\r\n    // @ts-ignore\r\n    return combineLatest(collectionListeners).pipe(\r\n      map((collectionDatas: { [collectionkName: string]: FireItem<FireItem<{}>>[] }[]) => {\r\n        // map((collectionDatas) => {\r\n        const datasMap: { [field: string]: any } = {};\r\n\r\n        collectionDatas.forEach((collection) => {\r\n\r\n          for (const [collectionName, items] of Object.entries(collection)) {\r\n            datasMap[collectionName] = items;\r\n          }\r\n        });\r\n        return datasMap;\r\n      }),\r\n\r\n      map((data: DocumentData) => {\r\n        return {...item, ...data} as FireItem<T>;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n   */\r\n  protected listenForDocDeepRecursiveHelper$<T>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable<any> {\r\n\r\n    /* Listen for the docFs*/\r\n    return this.listenForDocSimple$<T>(docRef, actionIfNotExist).pipe(\r\n      mergeMap((item: FireItem<{}>) => {\r\n\r\n        if (item === null) {\r\n          return of(item);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(item);\r\n        }\r\n\r\n        return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A replacement/extension to the AngularFirestoreCollection.add.\r\n   * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n   * the data with the added properties in FirebaseDbItem\r\n   *\r\n   * Used internally\r\n   *\r\n   * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n   * @param collectionRef the CollectionReference where the document should be added\r\n   * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n   * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n   */\r\n  protected addSimple$<T>(data: T, collectionRef: CollectionReference<T>, isAddDates: boolean = true, id?: string):\r\n    Observable<FireItem<T>> {\r\n\r\n    // let dataToBeSaved: A = Object.assign({}, data);\r\n\r\n    let res$: Observable<any>;\r\n\r\n    if (isAddDates) {\r\n      const date = new Date();\r\n      data = addCreatedDate(data, false, date);\r\n      data = addModifiedDate(data, false, date);\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      const docRef: DocumentReference = getDocRefWithId(collectionRef, id);\r\n      res$ = this.fs.set(docRef, data);\r\n    } else {\r\n      res$ = this.fs.add<T>(collectionRef, data);\r\n    }\r\n\r\n    // if (Array.isArray(data) && isAddDates) {\r\n    //   data = data.map(item => {\r\n    //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n    //   })\r\n    // }\r\n\r\n    res$ = res$.pipe(\r\n      // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n      // tap(ref => console.log(ref)),\r\n      // tap(() => console.log(data)),\r\n      map((ref: DocumentReference<T> | undefined) => {\r\n        if (id === undefined && ref) {\r\n\r\n          const path = ref.path;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: ref.id,\r\n            path,\r\n            ref,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else { // if id is defined it means we used docRef.set and ref is undefined\r\n          const path = collectionRef.path + '/' + id;\r\n          ref = getRefFromPath(path, this.fs.firestore) as DocumentReference<T>;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: id as string,\r\n            ref,\r\n            path,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return res$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /** Used internally for updates that doesn't affect child documents */\r\n  protected updateSimple$<A>(data: A, docRef: DocumentReference, isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n    return this.fs.update(docRef, data);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, used by update deep\r\n   */\r\n  protected updateDeepToBatchHelper<A>(data: A,\r\n                                       docRef: DocumentReference,\r\n                                       subCollectionWriters: SubCollectionWriter[] = [],\r\n                                       isAddModifiedDate: boolean = true,\r\n                                       batch?: WriteBatch): WriteBatch {\r\n\r\n    if (batch === undefined) {\r\n      batch = writeBatch(this.fs.firestore);\r\n    }\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n    const currentDoc = split.currentDoc;\r\n    const subCollections = split.subCollections;\r\n\r\n    // console.log(currentDoc, subCollections);\r\n    batch.update(docRef, currentDoc);\r\n\r\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n\r\n      let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n      let subDocId: string | undefined;\r\n\r\n      if (subCollectionWriters) {\r\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n      }\r\n\r\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n\r\n      // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n      const subCollection = getSubCollection(docRef, subCollectionKey);\r\n      const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n\r\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n   * have an index value and a groupName.\r\n   *\r\n   * @param previousArray\r\n   * @param currentArray\r\n   * @param previousIndex\r\n   * @param currentIndex\r\n   * @param currentArrayName\r\n   * @param additionalDataUpdateOnMovedItem\r\n   * @param isUpdateModifiedDateOnMovedItem\r\n   * @param useCopy\r\n   * @protected\r\n   */\r\n  protected getBatchFromTransferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): WriteBatch {\r\n\r\n    let usedPreviousArray: Array<FireItem<A>>;\r\n    let usedCurrentArray: Array<FireItem<A>>;\r\n    if (useCopy) {\r\n      usedPreviousArray = Object.assign([], previousArray);\r\n      usedCurrentArray = Object.assign([], currentArray);\r\n    } else {\r\n      usedPreviousArray = previousArray;\r\n      usedCurrentArray = currentArray;\r\n    }\r\n\r\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (additionalDataUpdateOnMovedItem !== undefined) {\r\n      const movedItem = usedCurrentArray[currentIndex];\r\n      const movedItemRef = movedItem.firestoreMetadata.ref;\r\n\r\n      const data = {...additionalDataUpdateOnMovedItem, groupName: currentArrayName};\r\n\r\n      if (!useCopy) {\r\n        addDataToItem(movedItem, data, true);\r\n      }\r\n\r\n      if (isUpdateModifiedDateOnMovedItem) {\r\n        const date = new Date();\r\n        addModifiedDate(data, true, date);\r\n\r\n        if (!useCopy) {\r\n          addModifiedDate(movedItem, true, date);\r\n        }\r\n      }\r\n      batch.update(movedItemRef, data);\r\n    }\r\n\r\n    const currentArraySliceToUpdate: Array<FireItem<A>> = usedCurrentArray.slice(currentIndex);\r\n    let i = currentIndex;\r\n    for (const item of currentArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    const prevArraySliceToUpdate: Array<FireItem<A>> = usedPreviousArray.slice(previousIndex);\r\n    i = previousIndex;\r\n    for (const item of prevArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete Documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   */\r\n  protected deleteMultipleSimple$(docRefs: DocumentReference[]): Observable<void> {\r\n\r\n    const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  protected getDeleteMultipleSimpleBatch(docRefs: DocumentReference[], batch: WriteBatch = writeBatch(this.fs.firestore)): WriteBatch {\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.delete(docRef);\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n   *\r\n   * @param dbItem the data to be cleaned\r\n   * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n   * @param additionalFieldsToRemove\r\n   */\r\n  protected removeDataExtrasRecursiveHelper<T>(dbItem: T & DocumentData,\r\n                                               subCollectionWriters: SubCollectionWriter[] = [],\r\n                                               additionalFieldsToRemove: string[] = []): T {\r\n\r\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n    const extraPropertyNames: string[] = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n\r\n    /* Current level delete */\r\n    for (const extraPropertyName of extraPropertyNames) {\r\n      delete dbItem[extraPropertyName];\r\n    }\r\n\r\n    subCollectionWriters.forEach(col => {\r\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n\r\n        const docs: FireItem<T>[] = dbItem[col.name];\r\n        docs.forEach((d, i) => {\r\n\r\n          if (col.subCollections) {\r\n            this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n          } else {\r\n            /*  */\r\n            for (const extraPropertyName of extraPropertyNames) {\r\n              delete dbItem[col.name][i][extraPropertyName];\r\n            }\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n        } else {\r\n          for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[col.name][extraPropertyName];\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return dbItem;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n   * Mainly used to delete a docFs and its sub docs\r\n   * @param ref: DocumentReference | CollectionReference\r\n   * @param subCollectionQueries: SubCollectionQuery[]\r\n   */\r\n  protected getDocumentReferencesDeep$(ref: DocumentReference | CollectionReference,\r\n                                       subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    if (ref instanceof DocumentReference) {\r\n      return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n    } else { // CollectionReference\r\n      return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n    }\r\n  }\r\n\r\n  protected getDocumentReferencesFromDocRef$(docRef: DocumentReference,\r\n                                             subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      take(1),\r\n      map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)),\r\n      // tap(pathList => console.log(pathList)),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n      // tap(item => console.log(item)),\r\n    );\r\n  }\r\n\r\n  protected getDocumentReferencesFromCollectionRef$(collectionRef: CollectionReference,\r\n                                                    subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForCollectionSimple$(collectionRef).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n        let docListeners: Array<Observable<any>>;\r\n        docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n        return combineLatest(docListeners);\r\n      }),\r\n      map((items: FireItem<{}>[]) => {\r\n\r\n        let paths: string[] = [];\r\n\r\n        items.forEach(item => {\r\n          paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n        });\r\n        return paths;\r\n      }),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n   * including child documents using SubCollectionQueries\r\n   *\r\n   * Internal use\r\n   * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n   * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  protected getDocumentReferencesFromItem<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): DocumentReference[] {\r\n\r\n    const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n    return paths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n   */\r\n  protected getPathsFromItemDeepRecursiveHelper<T>(item: FireItem<T>,\r\n                                                   subCollectionQueries: SubCollectionQuery[] = []): string[] {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return [item.firestoreMetadata.path];\r\n    }\r\n    let pathList: string[] = [];\r\n    pathList.push(item.firestoreMetadata.path);\r\n\r\n    subCollectionQueries.forEach(col => {\r\n      if (Array.isArray((item as DocumentData)[col.name]) && !col.docId) {\r\n        /* property is array and not using docId so will contain multiple docs */\r\n\r\n        const items: FireItem<{}>[] = (item as DocumentData)[col.name];\r\n        items.forEach(subItem => {\r\n\r\n          if (col.subCollections) {\r\n            pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n          } else {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n        } else {\r\n          const subItem = ((item as DocumentData)[col.name] as FireItem<{}>);\r\n          if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n          // const path = (dbItem[col.name] as FirestoreItem).path;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return pathList;\r\n  }\r\n\r\n  /**\r\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n   * Only goes one sub level deep;\r\n   */\r\n  protected splitDataIntoCurrentDocAndSubCollections<T>(\r\n    data: T,\r\n    subCollectionWriters: SubCollectionWriter[] = []): CurrentDocSubCollectionSplit {\r\n\r\n    /* Split data into current doc and sub collections */\r\n    let currentDoc: { [index: string]: any; } = {};\r\n    const subCollections: { [index: string]: any; } = {};\r\n\r\n    /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n\r\n    // not array so object\r\n    for (const [key, value] of Object.entries(data)) {\r\n      // console.log(key, value);\r\n      if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n        const subCollectionWriter: SubCollectionWriter | undefined = subCollectionWriters.find(subColl => subColl.name === key);\r\n\r\n        if (subCollectionWriter) {\r\n          subCollections[key] = value;\r\n        } else {\r\n          currentDoc[key] = value;\r\n        }\r\n      } else {\r\n        currentDoc = data;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      currentDoc,\r\n      subCollections\r\n    } as CurrentDocSubCollectionSplit;\r\n  }\r\n\r\n  /**\r\n   * Turn a batch into an Observable instead of Promise.\r\n   *\r\n   * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n   * everything else.\r\n   *\r\n   * This method turns it into an observable\r\n   */\r\n  protected batchCommit$(batch: WriteBatch): Observable<void> {\r\n    return from(batch.commit()).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firebase-extended-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./drag-utils":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[32,0,0,32],[34,0,0,34],[38,0,0,38],[40,0,0,40],[42,0,0,42],[44,0,0,44],[50,0,0,50],[56,0,0,56],[57,0,0,57]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[19,0,1,19],[21,0,1,21],[27,0,1,27],[29,0,1,29],[32,0,1,32],[34,0,1,34],[42,0,1,42],[44,0,1,44],[53,0,1,53],[55,0,1,55],[59,0,1,59],[61,0,1,61],[64,0,1,64],[66,0,1,66],[72,0,1,72],[88,0,1,88],[89,0,1,89]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[26,0,2,26],[28,0,2,28],[38,0,2,38],[40,0,2,40],[46,0,2,46],[66,0,2,66],[67,0,2,67]],[[0,0,3,0],[7,0,3,7],[9,0,3,9],[23,0,3,23],[25,0,3,25],[38,0,3,38],[40,0,3,40],[55,0,3,55],[57,0,3,57],[79,0,3,79],[81,0,3,81],[96,0,3,96],[98,0,3,98],[112,0,3,112],[114,0,3,114],[130,0,3,130],[132,0,3,132],[138,0,3,138],[149,0,3,149],[150,0,3,150]],[[0,0,4,0],[7,0,4,7],[9,0,4,9],[24,0,4,24],[26,0,4,26],[43,0,4,43],[45,0,4,45],[51,0,4,51],[65,0,4,65],[66,0,4,66]],[[0,0,5,0],[7,0,5,7],[9,0,5,9],[23,0,5,23],[25,0,5,25],[31,0,5,31],[60,0,5,60],[61,0,5,61]],[[0,0,6,0]],[],[[3,0,8,3]],[[0,0,9,0],[6,0,9,6],[7,0,9,7],[11,0,9,11],[28,0,9,28],[29,0,9,29]],[[0,0,10,0],[1,0,10,1],[11,0,10,11],[28,0,10,28]],[[4,0,11,4],[32,0,11,32]],[[4,0,12,4],[21,0,12,21],[22,0,12,22],[39,0,12,39],[40,0,12,40],[53,0,12,53],[54,0,12,54],[57,0,12,57],[58,0,12,58],[59,0,12,59],[62,0,12,62],[75,0,12,75],[76,0,12,76]],[[4,0,13,4],[117,0,13,117]],[[4,0,14,4],[21,0,14,21],[22,0,14,22],[39,0,14,39],[40,0,14,40],[61,0,14,61],[62,0,14,62],[65,0,14,65],[66,0,14,66],[67,0,14,67],[70,0,14,70],[91,0,14,91],[92,0,14,92]],[[4,0,15,4],[51,0,15,51]],[[4,0,16,4],[21,0,16,21],[22,0,16,22],[39,0,16,39],[40,0,16,40],[48,0,16,48],[49,0,16,49],[52,0,16,52],[53,0,16,53],[54,0,16,54],[57,0,16,57],[65,0,16,65],[66,0,16,66]],[[4,0,17,4],[53,0,17,53]],[[4,0,18,4],[21,0,18,21],[22,0,18,22],[39,0,18,39],[40,0,18,40],[61,0,18,61],[62,0,18,62],[65,0,18,65],[66,0,18,66],[67,0,18,67],[70,0,18,70],[91,0,18,91],[92,0,18,92]],[[0,0,19,0],[1,0,19,1],[2,0,19,2],[3,0,19,3],[20,0,19,20],[24,0,19,24],[25,0,19,25],[42,0,19,42],[45,0,19,45],[47,0,19,47],[48,0,19,48],[49,0,19,49],[50,0,19,50]],[[0,0,20,0]],[],[],[],[],[[3,0,25,3]],[[0,0,26,0],[6,0,26,6],[13,0,26,13],[30,0,26,30]],[[4,0,27,4]],[],[],[],[],[[7,0,32,7]],[[4,0,33,4],[16,0,33,16],[18,0,33,18],[20,0,33,20],[32,0,33,32],[35,0,33,35],[41,0,33,41]],[[8,0,34,8],[12,0,34,12],[13,0,34,13],[15,0,34,15],[18,0,34,18],[20,0,34,20],[21,0,34,21]],[[8,0,35,8],[12,0,35,12],[13,0,35,13],[25,0,35,25],[28,0,35,28],[40,0,35,40],[41,0,35,41]],[[4,0,36,4],[5,0,36,5]],[[4,0,37,4],[43,0,37,43]],[[4,0,38,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,66,7]],[[4,0,67,4],[17,0,67,17],[18,0,67,18],[24,0,67,24],[26,0,67,26],[46,0,67,46],[49,0,67,49],[51,0,67,51],[53,0,67,53],[69,0,67,69],[72,0,67,72],[89,0,67,89],[90,0,67,90],[109,0,67,109]],[[8,0,68,8],[15,0,68,15],[19,0,68,19],[20,0,68,20],[52,0,68,52],[53,0,68,53],[59,0,68,59],[61,0,68,61],[81,0,68,81],[83,0,68,83],[99,0,68,99],[100,0,68,100],[101,0,68,101],[105,0,68,105],[106,0,68,106],[109,0,68,109],[110,0,68,110],[114,0,68,114],[115,0,68,115],[117,0,68,117],[118,0,68,118],[122,0,68,122],[123,0,68,123],[124,0,68,124],[125,0,68,125]],[[4,0,69,4],[5,0,69,5]],[[4,0,70,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,101,7]],[[4,0,102,4],[24,0,102,24],[25,0,102,25],[38,0,102,38],[40,0,102,40],[60,0,102,60],[63,0,102,63],[65,0,102,65]],[[8,0,103,8]],[],[],[[11,0,106,11]],[[8,0,107,8],[15,0,107,15],[19,0,107,19],[20,0,107,20],[46,0,107,46],[47,0,107,47],[60,0,107,60],[61,0,107,61],[62,0,107,62],[66,0,107,66],[67,0,107,67],[75,0,107,75],[76,0,107,76],[77,0,107,77],[82,0,107,82],[84,0,107,84],[86,0,107,86]],[[12,0,108,12],[16,0,108,16],[21,0,108,21],[25,0,108,25],[29,0,108,29],[33,0,108,33],[38,0,108,38],[39,0,108,39],[45,0,108,45],[50,0,108,50],[51,0,108,51],[53,0,108,53]],[[16,0,109,16],[23,0,109,23],[25,0,109,25],[26,0,109,26],[28,0,109,28],[29,0,109,29],[30,0,109,30]],[[13,0,110,13]],[[12,0,111,12],[16,0,111,16],[36,0,111,36],[37,0,111,37],[43,0,111,43],[47,0,111,47],[48,0,111,48],[50,0,111,50]],[[16,0,112,16],[23,0,112,23],[25,0,112,25],[26,0,112,26],[31,0,112,31],[32,0,112,32],[33,0,112,33]],[[13,0,113,13]],[[12,0,114,12],[18,0,114,18],[37,0,114,37],[40,0,114,40],[42,0,114,42],[43,0,114,43]],[[12,0,115,12],[17,0,115,17],[18,0,115,18],[25,0,115,25],[26,0,115,26],[30,0,115,30],[31,0,115,31],[33,0,115,33]],[[16,0,116,16],[22,0,116,22],[40,0,116,40],[43,0,116,43],[47,0,116,47],[48,0,116,48],[72,0,116,72],[73,0,116,73],[77,0,116,77],[79,0,116,79],[99,0,116,99],[100,0,116,100],[101,0,116,101]],[[16,0,117,16],[35,0,117,35],[36,0,117,36],[40,0,117,40],[41,0,117,41],[59,0,117,59],[60,0,117,60],[61,0,117,61]],[[12,0,118,12],[13,0,118,13],[14,0,118,14],[15,0,118,15]],[[12,0,119,12],[66,0,119,66]],[[12,0,120,12],[19,0,120,19],[32,0,120,32],[33,0,120,33],[52,0,120,52],[53,0,120,53],[54,0,120,54]],[[8,0,121,8],[9,0,121,9],[10,0,121,10],[11,0,121,11],[12,0,121,12]],[[4,0,122,4],[5,0,122,5]],[[4,0,123,4]],[],[[7,0,125,7]],[[4,0,126,4],[35,0,126,35],[36,0,126,36],[50,0,126,50],[52,0,126,52],[65,0,126,65],[67,0,126,67],[75,0,126,75]],[[8,0,127,8],[14,0,127,14],[27,0,127,27],[30,0,127,30],[44,0,127,44],[45,0,127,45],[59,0,127,59],[61,0,127,61],[65,0,127,65],[66,0,127,66],[68,0,127,68],[69,0,127,69],[78,0,127,78],[79,0,127,79],[80,0,127,80]],[[8,0,128,8],[14,0,128,14],[29,0,128,29],[32,0,128,32],[36,0,128,36],[50,0,128,50],[51,0,128,51],[64,0,128,64],[65,0,128,65],[66,0,128,66]],[[8,0,129,8],[12,0,129,12],[20,0,129,20],[24,0,129,24],[28,0,129,28],[30,0,129,30]],[[12,0,130,12],[27,0,130,27],[28,0,130,28],[35,0,130,35],[36,0,130,36],[44,0,130,44],[45,0,130,45],[46,0,130,46]],[[9,0,131,9]],[[8,0,132,8],[15,0,132,15],[19,0,132,19],[20,0,132,20],[46,0,132,46],[47,0,132,47],[60,0,132,60],[61,0,132,61],[62,0,132,62],[66,0,132,66],[67,0,132,67],[75,0,132,75],[76,0,132,76],[77,0,132,77],[82,0,132,82],[84,0,132,84],[86,0,132,86]],[[12,0,133,12],[16,0,133,16],[21,0,133,21],[22,0,133,22],[28,0,133,28],[32,0,133,32],[33,0,133,33],[35,0,133,35]],[[16,0,134,16],[23,0,134,23],[25,0,134,25],[26,0,134,26],[28,0,134,28],[29,0,134,29],[30,0,134,30]],[[13,0,135,13],[14,0,135,14],[78,0,135,78]],[[12,0,136,12],[65,0,136,65]],[[12,0,137,12],[18,0,137,18],[30,0,137,30],[33,0,137,33],[35,0,137,35],[36,0,137,36]],[[12,0,138,12],[17,0,138,17],[23,0,138,23],[27,0,138,27],[31,0,138,31],[36,0,138,36],[38,0,138,38]],[[16,0,139,16],[120,0,139,120]],[[16,0,140,16],[22,0,140,22],[35,0,140,35],[38,0,140,38],[42,0,140,42],[43,0,140,43],[60,0,140,60],[61,0,140,61],[64,0,140,64],[65,0,140,65],[69,0,140,69],[70,0,140,70],[76,0,140,76],[77,0,140,77],[80,0,140,80],[82,0,140,82],[95,0,140,95],[96,0,140,96],[97,0,140,97],[98,0,140,98],[117,0,140,117]],[[16,0,141,16],[22,0,141,22],[37,0,141,37],[40,0,141,40],[44,0,141,44],[45,0,141,45],[76,0,141,76],[77,0,141,77],[90,0,141,90],[92,0,141,92],[105,0,141,105],[107,0,141,107],[115,0,141,115],[116,0,141,116],[117,0,141,117],[121,0,141,121],[122,0,141,122],[125,0,141,125],[126,0,141,126],[127,0,141,127],[141,0,141,141],[143,0,141,143],[145,0,141,145]],[[20,0,142,20],[24,0,142,24],[38,0,142,38],[39,0,142,39],[45,0,142,45],[48,0,142,48],[49,0,142,49],[51,0,142,51]],[[24,0,143,24],[63,0,143,36],[67,0,143,40],[72,0,143,42],[73,0,143,43],[86,0,143,56],[87,0,143,57],[89,0,143,59],[103,0,143,73],[107,0,143,76]],[[21,0,144,21]],[[25,0,145,25]],[[24,0,146,24],[49,0,146,36],[53,0,146,40],[55,0,146,43]],[[21,0,147,21],[22,0,147,22],[52,0,147,52]],[[16,0,148,16],[17,0,148,17],[18,0,148,18],[19,0,148,19],[20,0,148,20]],[[16,0,149,16],[28,0,149,28],[29,0,149,29],[33,0,149,33],[34,0,149,34],[49,0,149,49],[50,0,149,50],[51,0,149,51]],[[13,0,150,13]],[[12,0,151,12],[19,0,151,19],[32,0,151,32],[33,0,151,33],[45,0,151,45],[46,0,151,46],[47,0,151,47],[51,0,151,51],[52,0,151,52],[55,0,151,55],[56,0,151,56],[59,0,151,59],[60,0,151,60],[62,0,151,62],[63,0,151,63],[70,0,151,70],[71,0,151,71],[74,0,151,74],[75,0,151,75],[78,0,151,78],[79,0,151,79],[80,0,151,80],[81,0,151,81],[82,0,151,82]],[[8,0,152,8],[9,0,152,9],[10,0,152,10],[11,0,152,11],[12,0,152,12]],[[4,0,153,4],[5,0,153,5]],[[4,0,154,4],[39,0,154,39]],[[4,0,155,4]],[],[],[],[],[],[],[],[[7,0,163,7]],[[4,0,164,4],[8,0,164,8],[9,0,164,9],[13,0,164,13],[15,0,164,15],[28,0,164,28],[30,0,164,30],[50,0,164,50],[53,0,164,53],[55,0,164,55],[57,0,164,57],[67,0,164,67],[70,0,164,70],[74,0,164,74],[76,0,164,76],[81,0,164,81]],[[8,0,165,8],[12,0,165,12],[17,0,165,17],[18,0,165,18],[25,0,165,25],[26,0,165,26],[30,0,165,30],[31,0,165,31],[35,0,165,35],[40,0,165,40],[44,0,165,44],[64,0,165,64],[65,0,165,65],[71,0,165,71],[74,0,165,74],[75,0,165,75],[77,0,165,77]],[[12,0,166,12],[18,0,166,18],[23,0,166,23],[26,0,166,26]],[[16,0,167,16],[20,0,167,20],[22,0,167,22],[40,0,167,40]],[[16,0,168,16],[20,0,168,20],[22,0,168,22],[31,0,168,31]],[[16,0,169,16],[23,0,169,23],[25,0,169,25],[113,0,169,113]],[[16,0,170,16],[21,0,170,21],[23,0,170,23],[25,0,170,25]],[[16,0,171,16],[20,0,171,20]],[[16,0,172,16],[36,0,172,36]],[[16,0,173,16],[21,0,173,21]],[[13,0,174,13],[14,0,174,14]],[[12,0,175,12],[18,0,175,18],[23,0,175,23],[24,0,175,24]],[[9,0,176,9]],[[8,0,177,8],[12,0,177,12],[22,0,177,22],[23,0,177,23]],[[8,0,178,8],[12,0,178,12],[26,0,178,26],[29,0,178,29],[31,0,178,31],[32,0,178,32]],[[8,0,179,8]],[],[],[[10,0,182,10]],[[8,0,183,8],[12,0,183,12],[17,0,183,17],[18,0,183,18],[25,0,183,25],[26,0,183,26],[30,0,183,30],[31,0,183,31],[35,0,183,35],[40,0,183,40],[42,0,183,42]],[[12,0,184,12],[22,0,184,22],[25,0,184,25],[29,0,184,29],[30,0,184,30]],[[9,0,185,9]],[[13,0,186,13]],[[12,0,187,12],[18,0,187,18],[23,0,187,23],[26,0,187,26],[30,0,187,30],[31,0,187,31],[71,0,187,71],[72,0,187,72],[76,0,187,76],[78,0,187,78],[98,0,187,98],[99,0,187,99],[100,0,187,100]],[[12,0,188,12],[22,0,188,22],[25,0,188,25],[30,0,188,30],[31,0,188,31],[41,0,188,41],[42,0,188,42]],[[12,0,189,12],[26,0,189,26],[29,0,189,29],[34,0,189,34],[35,0,189,35],[49,0,189,49],[50,0,189,50]],[[9,0,190,9]],[[8,0,191,8],[15,0,191,15],[19,0,191,19],[20,0,191,20],[30,0,191,30],[31,0,191,31],[41,0,191,41],[43,0,191,43],[56,0,191,56],[58,0,191,58],[68,0,191,68],[70,0,191,70],[75,0,191,75],[76,0,191,76],[77,0,191,77],[81,0,191,81]],[[8,0,192,8],[36,0,192,36]],[[8,0,193,8],[16,0,193,16],[17,0,193,17],[18,0,193,18],[29,0,193,29],[31,0,193,31],[33,0,193,33]],[],[[12,0,194,12],[18,0,194,18],[28,0,194,28],[31,0,194,31],[33,0,194,33],[34,0,194,34]],[[12,0,195,12],[17,0,195,17],[23,0,195,23],[24,0,195,24],[40,0,195,40],[42,0,195,42],[60,0,195,60],[61,0,195,61],[65,0,195,65],[71,0,195,71],[72,0,195,72],[79,0,195,79],[80,0,195,80],[94,0,195,94],[95,0,195,95],[97,0,195,97]],[[16,0,196,16],[20,0,196,20],[43,0,196,43],[44,0,196,44],[45,0,196,45],[84,0,196,84]],[[16,0,197,16],[20,0,197,20],[28,0,197,28],[29,0,197,29]],[[16,0,198,16],[20,0,198,20],[40,0,198,40],[42,0,198,42]],[[20,0,199,20],[43,0,199,43],[46,0,199,46],[52,0,199,46],[72,0,199,66],[73,0,199,67],[77,0,199,71],[78,0,199,72],[85,0,199,79],[86,0,199,80],[88,0,199,82],[89,0,199,83],[96,0,199,90],[97,0,199,91],[101,0,199,95],[106,0,199,100],[122,0,199,116],[123,0,199,117],[165,0,199,119],[179,0,199,133],[180,0,199,134]],[[20,0,200,20],[28,0,200,28],[31,0,200,31],[37,0,200,31],[57,0,200,51],[58,0,200,52],[62,0,200,56],[63,0,200,57],[70,0,200,64],[71,0,200,65],[73,0,200,67],[74,0,200,68],[81,0,200,75],[82,0,200,76],[86,0,200,80],[91,0,200,85],[107,0,200,101],[108,0,200,102],[150,0,200,104],[155,0,200,109],[156,0,200,110]],[[17,0,201,17]],[[16,0,202,16],[22,0,202,22],[38,0,202,38],[41,0,202,41],[57,0,202,57],[58,0,202,58],[69,0,202,69],[70,0,202,70],[87,0,202,87],[88,0,202,88],[91,0,202,91],[93,0,202,93],[109,0,202,109],[110,0,202,110],[111,0,202,111]],[[16,0,203,16]],[],[],[[139,0,206,139]],[[16,0,207,16],[20,0,207,20],[25,0,207,25],[26,0,207,26],[33,0,207,33],[34,0,207,34],[52,0,207,52],[53,0,207,53],[55,0,207,55]],[[20,0,208,20],[24,0,208,24],[32,0,208,32],[37,0,208,37],[46,0,208,46],[48,0,208,48],[50,0,208,50],[113,0,208,113]],[[24,0,209,24],[110,0,209,110]],[[24,0,210,24],[30,0,210,30],[39,0,210,39],[42,0,210,42],[46,0,210,46],[47,0,210,47],[51,0,210,51],[52,0,210,52],[70,0,210,70],[72,0,210,72],[88,0,210,88],[90,0,210,90],[113,0,210,113],[115,0,210,115],[125,0,210,125],[127,0,210,127],[135,0,210,135],[136,0,210,136],[137,0,210,137],[141,0,210,141],[142,0,210,142],[145,0,210,145],[146,0,210,146],[150,0,210,150],[151,0,210,151],[153,0,210,153]],[[28,0,211,28],[52,0,211,52]],[[28,0,212,28],[35,0,212,35],[37,0,212,37],[40,0,212,40],[42,0,212,42],[58,0,212,58],[60,0,212,60],[65,0,212,65],[67,0,212,67],[71,0,212,71],[73,0,212,73],[74,0,212,74],[75,0,212,75],[134,0,212,134]],[[24,0,213,24],[25,0,213,25],[26,0,213,26],[27,0,213,27],[28,0,213,28]],[[24,0,214,24],[34,0,214,34],[35,0,214,35],[39,0,214,39],[40,0,214,40],[49,0,214,49],[50,0,214,50],[51,0,214,51]],[[21,0,215,21]],[[25,0,216,25],[27,0,216,27],[96,0,216,96]],[[24,0,217,24],[42,0,217,42],[43,0,217,43],[50,0,217,50],[51,0,217,51],[52,0,217,52],[62,0,217,62],[64,0,217,64],[66,0,217,66]],[[28,0,218,28],[114,0,218,114]],[[28,0,219,28],[34,0,219,34],[43,0,219,43],[46,0,219,46],[50,0,219,50],[51,0,219,51],[55,0,219,55],[56,0,219,56],[66,0,219,66],[68,0,219,68],[84,0,219,84],[86,0,219,86],[109,0,219,109],[111,0,219,111],[121,0,219,121],[122,0,219,122],[123,0,219,123],[127,0,219,127],[128,0,219,128],[131,0,219,131],[132,0,219,132],[136,0,219,136],[137,0,219,137],[139,0,219,139]],[[32,0,220,32],[58,0,220,58]],[[32,0,221,32],[125,0,221,125]],[[32,0,222,32],[39,0,222,39],[41,0,222,41],[44,0,222,44],[46,0,222,46],[62,0,222,62],[64,0,222,64],[69,0,222,69],[71,0,222,71],[72,0,222,72],[76,0,222,76],[77,0,222,77],[79,0,222,79],[80,0,222,80]],[[28,0,223,28],[29,0,223,29],[30,0,223,30],[31,0,223,31],[32,0,223,32]],[[28,0,224,28],[38,0,224,38],[39,0,224,39],[43,0,224,43],[44,0,224,44],[53,0,224,53],[54,0,224,54],[55,0,224,55]],[[24,0,225,24],[25,0,225,25],[26,0,225,26],[27,0,225,27]],[[21,0,226,21]],[[17,0,227,17]],[[21,0,228,21],[23,0,228,23],[59,0,228,59]],[[20,0,229,20],[28,0,229,28],[31,0,229,31],[39,0,229,39],[44,0,229,44],[53,0,229,53],[54,0,229,54],[55,0,229,55],[56,0,229,56],[64,0,229,64],[65,0,229,65],[66,0,229,66],[67,0,229,67],[71,0,229,71],[72,0,229,72],[84,0,229,84],[85,0,229,85]],[[20,0,230,20],[106,0,230,106]],[[20,0,231,20],[26,0,231,26],[35,0,231,35],[38,0,231,38],[42,0,231,42],[43,0,231,43],[47,0,231,47],[48,0,231,48],[66,0,231,66],[68,0,231,68],[84,0,231,84],[86,0,231,86],[109,0,231,109],[111,0,231,111],[121,0,231,121],[123,0,231,123],[131,0,231,131],[132,0,231,132],[133,0,231,133],[137,0,231,137],[138,0,231,138],[141,0,231,141],[142,0,231,142],[146,0,231,146],[147,0,231,147],[149,0,231,149]],[[24,0,232,24],[48,0,232,48]],[[24,0,233,24],[31,0,233,31],[33,0,233,33],[36,0,233,36],[38,0,233,38],[54,0,233,54],[56,0,233,56],[61,0,233,61],[63,0,233,63],[67,0,233,67],[69,0,233,69],[70,0,233,70],[71,0,233,71],[130,0,233,130]],[[20,0,234,20],[21,0,234,21],[22,0,234,22],[23,0,234,23],[24,0,234,24]],[[20,0,235,20],[30,0,235,30],[31,0,235,31],[35,0,235,35],[36,0,235,36],[45,0,235,45],[46,0,235,46],[47,0,235,47]],[[17,0,236,17]],[[13,0,237,13],[14,0,237,14],[36,0,237,36]],[[12,0,238,12],[16,0,238,16],[26,0,238,26],[27,0,238,27],[33,0,238,33],[36,0,238,36],[37,0,238,37],[39,0,238,39],[41,0,238,41],[113,0,238,113]],[[16,0,239,16],[89,0,239,89]],[[16,0,240,16],[23,0,240,23],[36,0,240,36],[37,0,240,37],[47,0,240,47],[48,0,240,48],[49,0,240,49],[53,0,240,53]],[[16,0,241,16],[48,0,241,48]],[[16,0,242,16],[139,0,242,139]],[[16,0,243,16],[141,0,243,141]],[[16,0,244,16],[34,0,244,34]],[[16,0,245,16],[19,0,245,19],[20,0,245,20],[21,0,245,21],[29,0,245,29],[31,0,245,31],[33,0,245,33]],[[20,0,246,20],[26,0,246,26],[37,0,246,37],[40,0,246,40],[42,0,246,42],[43,0,246,43]],[[20,0,247,20],[28,0,247,28],[29,0,247,29],[36,0,247,36],[37,0,247,37],[38,0,247,38],[41,0,247,41],[43,0,247,43],[45,0,247,45]],[[24,0,248,24],[30,0,248,30],[33,0,248,33],[36,0,248,36],[39,0,248,39],[40,0,248,40],[43,0,248,43],[44,0,248,44]],[[24,0,249,24],[30,0,249,30],[35,0,249,35],[38,0,249,38],[41,0,249,41],[42,0,249,42],[47,0,249,47],[48,0,249,48]],[[24,0,250,24],[126,0,250,126]],[[24,0,251,24],[37,0,251,37]],[[24,0,252,24],[28,0,252,28],[39,0,252,39],[40,0,252,40],[54,0,252,54],[55,0,252,55],[58,0,252,58],[59,0,252,59],[63,0,252,63],[68,0,252,68],[69,0,252,69],[76,0,252,76],[77,0,252,77],[88,0,252,88],[89,0,252,89],[92,0,252,92],[93,0,252,93],[94,0,252,94],[96,0,252,96]],[[28,0,253,28],[123,0,253,123]],[[28,0,254,28],[41,0,254,41]],[[28,0,255,28],[39,0,255,39],[40,0,255,40],[43,0,255,43],[44,0,255,44],[45,0,255,45],[49,0,255,49],[50,0,255,50],[55,0,255,55],[56,0,255,56],[57,0,255,57],[58,0,255,58],[59,0,255,59],[60,0,255,60]],[[25,0,256,25]],[[29,0,257,29]],[[28,0,258,28],[41,0,258,41]],[[28,0,259,28],[39,0,259,39],[40,0,259,40],[43,0,259,43],[44,0,259,44],[47,0,259,47],[52,0,259,52],[53,0,259,53]],[[25,0,260,25]],[[20,0,261,20],[21,0,261,21],[22,0,261,22],[23,0,261,23]],[[20,0,262,20],[27,0,262,27],[38,0,262,38],[39,0,262,39]],[[16,0,263,16],[17,0,263,17],[18,0,263,18]],[[16,0,264,16],[64,0,264,64]],[[16,0,265,16],[19,0,265,19],[20,0,265,20],[21,0,265,21],[32,0,265,32],[34,0,265,34],[36,0,265,36]],[[20,0,266,20],[59,0,266,32],[70,0,266,43],[73,0,266,48],[84,0,266,59],[86,0,266,62]],[[16,0,267,16],[17,0,267,17],[18,0,267,18],[19,0,267,19],[20,0,267,20]],[[13,0,268,13]],[[17,0,269,17]],[[16,0,270,16],[23,0,270,23],[25,0,270,25],[26,0,270,26],[37,0,270,37],[38,0,270,38],[39,0,270,39]],[[13,0,271,13]],[[8,0,272,8],[9,0,272,9],[10,0,272,10],[11,0,272,11],[12,0,272,12],[16,0,272,16]],[[8,0,273,8],[21,0,273,21]],[[8,0,274,8],[12,0,274,12],[13,0,274,13],[14,0,274,14],[15,0,274,15],[16,0,274,16],[17,0,274,17]],[[4,0,275,4],[5,0,275,5]],[[4,0,276,4],[41,0,276,41]],[[4,0,277,4]],[],[],[],[],[],[],[],[],[],[[7,0,287,7]],[[4,0,288,4],[11,0,288,11],[12,0,288,12],[16,0,288,16],[18,0,288,18],[24,0,288,24],[26,0,288,26],[46,0,288,46],[49,0,288,49],[51,0,288,51],[53,0,288,53],[70,0,288,70],[73,0,288,73],[77,0,288,77]],[[8,0,289,8],[12,0,289,12],[32,0,289,32],[36,0,289,36],[40,0,289,40],[44,0,289,44],[64,0,289,64],[65,0,289,65],[71,0,289,71],[76,0,289,76],[77,0,289,77],[79,0,289,79]],[[12,0,290,12],[19,0,290,19],[23,0,290,23],[24,0,290,24],[37,0,290,37],[38,0,290,38],[42,0,290,42],[44,0,290,44],[50,0,290,50],[52,0,290,52],[69,0,290,69],[70,0,290,70],[71,0,290,71],[72,0,290,72],[125,0,290,125]],[[9,0,291,9]],[[8,0,292,8],[14,0,292,14],[19,0,292,19],[22,0,292,22],[26,0,292,26],[27,0,292,27],[50,0,292,50],[51,0,292,51],[55,0,292,55],[57,0,292,57],[63,0,292,63],[65,0,292,65],[85,0,292,85],[87,0,292,87],[104,0,292,104],[105,0,292,105],[106,0,292,106]],[[8,0,293,8],[15,0,293,15],[19,0,293,19],[20,0,293,20],[32,0,293,32],[33,0,293,33],[38,0,293,38],[39,0,293,39],[40,0,293,40]],[[4,0,294,4],[5,0,294,5]],[[4,0,295,4]],[],[],[],[],[],[[7,0,301,7]],[[4,0,302,4],[19,0,302,19],[20,0,302,20],[27,0,302,27],[29,0,302,29],[33,0,302,33],[35,0,302,35],[52,0,302,52],[55,0,302,55],[59,0,302,59]],[[8,0,303,8],[65,0,303,65]],[[8,0,304,8],[14,0,304,14],[19,0,304,19],[22,0,304,22],[32,0,304,32],[33,0,304,33],[37,0,304,37],[38,0,304,38],[40,0,304,40],[41,0,304,41],[50,0,304,50],[51,0,304,51],[52,0,304,52]],[[8,0,305,8],[12,0,305,12],[29,0,305,29],[31,0,305,31]],[[12,0,306,12],[16,0,306,16],[19,0,306,19],[34,0,306,34],[35,0,306,35],[39,0,306,39],[41,0,306,41],[46,0,306,46],[47,0,306,47],[48,0,306,48]],[[9,0,307,9]],[[8,0,308,8],[15,0,308,15],[16,0,308,16],[23,0,308,23],[24,0,308,24],[25,0,308,25],[31,0,308,31],[33,0,308,33],[35,0,308,35]],[[12,0,309,12],[17,0,309,17],[18,0,309,18],[24,0,309,24],[25,0,309,25],[31,0,309,31],[33,0,309,33],[37,0,309,37],[38,0,309,38],[39,0,309,39]],[[8,0,310,8],[9,0,310,9],[10,0,310,10],[11,0,310,11]],[[8,0,311,8],[15,0,311,15],[19,0,311,19],[20,0,311,20],[32,0,311,32],[33,0,311,33],[38,0,311,38],[39,0,311,39],[40,0,311,40]],[[4,0,312,4],[5,0,312,5]],[[4,0,313,4]],[],[],[],[],[],[],[],[],[[7,0,322,7]],[[4,0,323,4],[16,0,323,16],[17,0,323,17],[23,0,323,23],[25,0,323,25],[30,0,323,30],[32,0,323,32],[52,0,323,52],[55,0,323,55],[57,0,323,57],[59,0,323,59],[79,0,323,79]],[[8,0,324,8],[12,0,324,12],[32,0,324,32],[36,0,324,36],[40,0,324,40],[42,0,324,42]],[[12,0,325,12],[32,0,325,32],[35,0,325,35],[55,0,325,55],[56,0,325,56]],[[9,0,326,9]],[[8,0,327,8],[14,0,327,14],[27,0,327,27],[30,0,327,30],[36,0,327,36],[37,0,327,37],[43,0,327,43],[44,0,327,44]],[[8,0,328,8],[15,0,328,15],[19,0,328,19],[20,0,328,20],[33,0,328,33],[34,0,328,34],[40,0,328,40],[42,0,328,42],[62,0,328,62],[63,0,328,63],[64,0,328,64],[68,0,328,68]],[[8,0,329,8],[21,0,329,21]],[[8,0,330,8],[12,0,330,12],[13,0,330,13],[14,0,330,14],[15,0,330,15],[17,0,330,17],[20,0,330,20],[21,0,330,21],[22,0,330,22],[29,0,330,29],[31,0,330,31],[33,0,330,33],[34,0,330,34],[38,0,330,38],[39,0,330,39],[58,0,330,58],[59,0,330,59],[66,0,330,66],[68,0,330,68],[88,0,330,88],[89,0,330,89],[90,0,330,90],[92,0,330,92],[101,0,330,101],[102,0,330,102],[103,0,330,103],[110,0,330,110],[112,0,330,112],[114,0,330,114]],[[12,0,331,12],[19,0,331,19],[23,0,331,23],[24,0,331,24],[28,0,331,28],[29,0,331,29],[36,0,331,36],[38,0,331,38],[51,0,331,51],[53,0,331,53],[73,0,331,73],[75,0,331,75],[80,0,331,80],[82,0,331,82],[87,0,331,87],[88,0,331,88],[89,0,331,89],[93,0,331,93],[94,0,331,94],[120,0,331,120],[121,0,331,121],[129,0,331,129],[130,0,331,130],[137,0,331,137],[138,0,331,138],[140,0,331,140]],[[16,0,332,16],[23,0,332,23],[27,0,332,27],[28,0,332,28],[35,0,332,35],[36,0,332,36],[42,0,332,42],[44,0,332,44],[64,0,332,64],[65,0,332,65],[66,0,332,66],[70,0,332,70],[71,0,332,71],[74,0,332,74],[75,0,332,75],[78,0,332,78],[80,0,332,80],[81,0,332,81],[88,0,332,88],[89,0,332,89],[90,0,332,90],[113,0,332,113],[114,0,332,114],[115,0,332,115]],[[12,0,333,12],[13,0,333,13],[14,0,333,14],[15,0,333,15],[16,0,333,16]],[[8,0,334,8],[9,0,334,9],[10,0,334,10],[12,0,334,12],[22,0,334,22],[23,0,334,23],[26,0,334,26],[27,0,334,27],[29,0,334,29]],[[12,0,335,12],[19,0,335,19],[20,0,335,20],[23,0,335,23],[24,0,335,24],[51,0,335,51],[54,0,335,54],[57,0,335,57],[58,0,335,58],[59,0,335,59]],[[12,0,336,12],[18,0,336,18],[21,0,336,21],[22,0,336,22]],[[8,0,337,8],[9,0,337,9],[10,0,337,10],[12,0,337,12],[16,0,337,16],[17,0,337,17],[18,0,337,18],[19,0,337,19],[20,0,337,20],[21,0,337,21]],[[4,0,338,4],[5,0,338,5]],[[4,0,339,4],[28,0,339,28]],[[4,0,340,4]],[],[],[],[],[],[],[],[],[[7,0,349,7]],[[4,0,350,4],[20,0,350,20],[21,0,350,21],[26,0,350,26],[28,0,350,28],[37,0,350,37],[39,0,350,39],[46,0,350,46],[48,0,350,48],[55,0,350,55],[58,0,350,58],[63,0,350,63]],[],[[8,0,351,8],[12,0,351,12],[21,0,351,21],[25,0,351,25],[29,0,351,29],[33,0,351,33],[40,0,351,40],[44,0,351,44],[48,0,351,48],[52,0,351,52],[61,0,351,61],[66,0,351,66],[73,0,351,73],[77,0,351,77],[82,0,351,82],[83,0,351,83],[89,0,351,89],[93,0,351,93],[94,0,351,94],[96,0,351,96],[98,0,351,98],[130,0,351,130]],[[12,0,352,12],[19,0,352,19],[21,0,352,21],[23,0,352,23],[24,0,352,24]],[[9,0,353,9]],[[8,0,354,8],[12,0,354,12],[13,0,354,12],[19,0,354,12],[24,0,354,17],[25,0,354,18],[26,0,354,19],[27,0,354,20],[69,0,354,22],[86,0,354,39],[91,0,354,43],[95,0,354,47],[97,0,354,49]],[[12,0,355,12],[18,0,355,18],[23,0,355,23],[26,0,355,26]],[[16,0,356,16],[20,0,356,20],[22,0,356,22],[40,0,356,40]],[[16,0,357,16],[20,0,357,20],[22,0,357,22],[31,0,357,31]],[[16,0,358,16],[23,0,358,23],[25,0,358,25],[124,0,358,124]],[[13,0,359,13],[14,0,359,14]],[[12,0,360,12],[18,0,360,18],[23,0,360,23],[24,0,360,24]],[[9,0,361,9]],[[8,0,362,8],[14,0,362,14],[19,0,362,19],[22,0,362,22],[26,0,362,26],[27,0,362,27],[60,0,362,60],[61,0,362,61],[66,0,362,66],[68,0,362,68],[77,0,362,77],[79,0,362,79],[86,0,362,86],[88,0,362,88],[95,0,362,95],[96,0,362,96],[97,0,362,97]],[[8,0,363,8],[15,0,363,15],[19,0,363,19],[20,0,363,20],[32,0,363,32],[33,0,363,33],[38,0,363,38],[39,0,363,39],[40,0,363,40]],[[4,0,364,4],[5,0,364,5]],[[4,0,365,4]],[],[],[],[],[],[],[],[],[[7,0,374,7]],[[4,0,375,4],[37,0,375,37],[38,0,375,38],[43,0,375,43],[45,0,375,45],[54,0,375,54],[56,0,375,56],[63,0,375,63],[65,0,375,65],[72,0,375,72],[75,0,375,75],[80,0,375,80]],[[8,0,376,8],[14,0,376,14],[25,0,376,25],[28,0,376,28],[32,0,376,32],[33,0,376,33],[36,0,376,36],[37,0,376,37],[46,0,376,46],[48,0,376,48],[55,0,376,55],[56,0,376,56],[57,0,376,57]],[[8,0,377,8],[14,0,377,14],[19,0,377,19],[22,0,377,22],[32,0,377,32],[33,0,377,33],[37,0,377,37],[38,0,377,38],[40,0,377,40],[41,0,377,41],[50,0,377,50],[51,0,377,51],[52,0,377,52]],[[8,0,378,8],[12,0,378,12],[21,0,378,21],[25,0,378,25],[29,0,378,29],[33,0,378,33],[40,0,378,40],[44,0,378,44],[48,0,378,48],[52,0,378,52],[61,0,378,61],[66,0,378,66],[73,0,378,73],[75,0,378,75],[77,0,378,77],[109,0,378,109]],[[12,0,379,12],[19,0,379,19],[24,0,379,24],[25,0,379,25]],[[9,0,380,9]],[[8,0,381,8],[12,0,381,12],[21,0,381,21],[22,0,381,22]],[[8,0,382,8],[12,0,382,12],[19,0,382,19],[21,0,382,21]],[[12,0,383,12],[21,0,383,21],[24,0,383,24],[30,0,383,30],[31,0,383,31],[37,0,383,37],[38,0,383,38],[40,0,383,40],[42,0,383,42],[47,0,383,47],[48,0,383,48],[49,0,383,49]],[[9,0,384,9]],[[13,0,385,13]],[[12,0,386,12],[21,0,386,21],[24,0,386,24],[29,0,386,29],[30,0,386,30]],[[9,0,387,9]],[[8,0,388,8],[23,0,388,23],[24,0,388,24],[33,0,388,33],[35,0,388,35],[44,0,388,44],[46,0,388,46],[53,0,388,53],[54,0,388,54],[55,0,388,55]],[[8,0,389,8],[14,0,389,14],[31,0,389,31],[34,0,389,34],[43,0,389,43],[44,0,389,44],[49,0,389,49],[50,0,389,50],[61,0,389,61],[62,0,389,62],[63,0,389,63]],[[8,0,390,8],[12,0,390,12],[13,0,390,13],[16,0,390,16],[27,0,390,27],[28,0,390,28]],[[8,0,391,8],[13,0,391,13],[19,0,391,19],[23,0,391,23],[27,0,391,27],[44,0,391,44],[46,0,391,46]],[[12,0,392,12],[16,0,392,16],[17,0,392,17],[24,0,392,24],[26,0,392,26],[28,0,392,28],[103,0,392,103]],[[16,0,393,16],[20,0,393,20],[21,0,393,21],[26,0,393,26],[29,0,393,29],[30,0,393,30],[31,0,393,31]],[[13,0,394,13]],[[12,0,395,12],[18,0,395,18],[21,0,395,21],[24,0,395,24],[38,0,395,38],[39,0,395,39],[43,0,395,43],[44,0,395,44],[61,0,395,61],[62,0,395,62],[66,0,395,66],[68,0,395,68],[72,0,395,72],[73,0,395,73],[75,0,395,75],[76,0,395,76],[85,0,395,85],[86,0,395,86],[87,0,395,87]],[[12,0,396,12],[17,0,396,17],[18,0,396,18],[24,0,396,24],[25,0,396,25],[28,0,396,28],[30,0,396,30],[32,0,396,32],[37,0,396,37],[39,0,396,39],[40,0,396,40],[42,0,396,42],[43,0,396,43],[44,0,396,44]],[[12,0,397,12],[13,0,397,13],[15,0,397,15],[16,0,397,16]],[[9,0,398,9]],[[8,0,399,8],[15,0,399,15],[20,0,399,20],[21,0,399,21]],[[4,0,400,4],[5,0,400,5]],[[4,0,401,4]],[],[],[],[],[],[],[[7,0,408,7]],[[4,0,409,4],[29,0,409,29],[30,0,409,30],[35,0,409,35],[37,0,409,37],[50,0,409,50],[52,0,409,52],[72,0,409,72],[75,0,409,75],[77,0,409,77],[79,0,409,79],[86,0,409,86],[89,0,409,89],[94,0,409,94]],[[8,0,410,8],[12,0,410,12],[21,0,410,21],[22,0,410,22]],[[8,0,411,8],[12,0,411,12],[19,0,411,19],[21,0,411,21]],[[12,0,412,12],[21,0,412,21],[24,0,412,24],[30,0,412,30],[31,0,412,31],[37,0,412,37],[38,0,412,38],[40,0,412,40],[42,0,412,42],[47,0,412,47],[48,0,412,48],[49,0,412,49]],[[9,0,413,9]],[[13,0,414,13]],[[12,0,415,12],[21,0,415,21],[24,0,415,24],[29,0,415,29],[30,0,415,30]],[[9,0,416,9]],[[8,0,417,8],[14,0,417,14],[26,0,417,26],[29,0,417,29],[38,0,417,38],[39,0,417,39],[52,0,417,52],[53,0,417,53],[54,0,417,54]],[[8,0,418,8],[82,0,418,82]],[[8,0,419,8],[15,0,419,15],[19,0,419,19],[20,0,419,20],[35,0,419,35],[36,0,419,36],[48,0,419,48],[49,0,419,49],[66,0,419,66],[67,0,419,67],[70,0,419,70],[72,0,419,72],[92,0,419,92],[93,0,419,93],[94,0,419,94],[98,0,419,98],[99,0,419,99],[102,0,419,102],[103,0,419,103],[104,0,419,104],[109,0,419,109],[111,0,419,111],[113,0,419,113]],[[12,0,420,12],[101,0,420,101]],[[12,0,421,12],[21,0,421,21],[22,0,421,22],[26,0,421,26],[27,0,421,27],[31,0,421,31],[32,0,421,32],[34,0,421,34],[35,0,421,35],[39,0,421,39],[40,0,421,40],[45,0,421,45],[46,0,421,46],[47,0,421,47],[48,0,421,48],[85,0,421,85]],[[12,0,422,12],[21,0,422,21],[22,0,422,22],[28,0,422,28],[29,0,422,29],[42,0,422,42],[44,0,422,44],[45,0,422,45],[46,0,422,46],[47,0,422,47]],[[12,0,423,12],[16,0,423,16],[17,0,423,17],[54,0,423,54],[55,0,423,55],[64,0,423,64],[66,0,423,66],[71,0,423,71],[72,0,423,72],[73,0,423,73]],[[12,0,424,12],[19,0,424,19],[24,0,424,24],[25,0,424,25]],[[8,0,425,8],[9,0,425,9],[10,0,425,10],[12,0,425,12],[21,0,425,21],[22,0,425,22],[23,0,425,23],[28,0,425,28],[30,0,425,30],[32,0,425,32],[33,0,425,33],[37,0,425,37],[38,0,425,38],[50,0,425,50],[51,0,425,51],[56,0,425,56],[57,0,425,57],[58,0,425,58],[59,0,425,59],[60,0,425,60]],[[4,0,426,4],[5,0,426,5]],[[4,0,427,4]],[],[],[],[],[],[],[[7,0,434,7]],[[4,0,435,4],[30,0,435,30],[31,0,435,31],[36,0,435,36],[38,0,435,38],[53,0,435,53],[55,0,435,55],[75,0,435,75],[78,0,435,78],[80,0,435,80],[82,0,435,82],[89,0,435,89],[92,0,435,92],[97,0,435,97]],[[8,0,436,8],[12,0,436,12],[21,0,436,21],[22,0,436,22]],[[8,0,437,8],[12,0,437,12],[19,0,437,19],[21,0,437,21]],[[12,0,438,12],[21,0,438,21],[24,0,438,24],[30,0,438,30],[31,0,438,31],[37,0,438,37],[38,0,438,38],[40,0,438,40],[42,0,438,42],[47,0,438,47],[48,0,438,48],[49,0,438,49]],[[9,0,439,9]],[[13,0,440,13]],[[12,0,441,12],[21,0,441,21],[24,0,441,24],[29,0,441,29],[30,0,441,30]],[[9,0,442,9]],[[8,0,443,8],[17,0,443,17],[18,0,443,18],[22,0,443,22],[23,0,443,23],[27,0,443,27],[28,0,443,28],[30,0,443,30],[31,0,443,31],[35,0,443,35],[36,0,443,36],[41,0,443,41],[42,0,443,42],[43,0,443,43],[44,0,443,44],[81,0,443,81]],[[8,0,444,8],[14,0,444,14],[27,0,444,27],[30,0,444,30],[39,0,444,39],[40,0,444,40],[46,0,444,46],[47,0,444,47],[48,0,444,48],[52,0,444,52],[54,0,444,54],[55,0,444,55],[57,0,444,57],[59,0,444,59]],[[12,0,445,12],[19,0,445,19],[34,0,445,34],[35,0,445,35],[44,0,445,44],[45,0,445,45],[47,0,445,47],[48,0,445,48],[50,0,445,50],[51,0,445,51],[53,0,445,53],[58,0,445,58],[59,0,445,59],[60,0,445,60],[65,0,445,65],[66,0,445,66],[67,0,445,67],[68,0,445,68]],[[8,0,446,8],[9,0,446,9],[10,0,446,10],[11,0,446,11]],[[8,0,447,8],[61,0,447,61]],[[8,0,448,8],[53,0,448,53]],[[8,0,449,8],[23,0,449,23],[24,0,449,24],[28,0,449,28],[30,0,449,30],[31,0,449,31]],[[8,0,450,8],[13,0,450,13],[17,0,450,17],[18,0,450,18],[21,0,450,21],[36,0,450,36],[37,0,450,37],[43,0,450,43],[46,0,450,46],[47,0,450,47],[49,0,450,49],[50,0,450,50],[54,0,450,54],[55,0,450,55],[57,0,450,57],[58,0,450,58],[60,0,450,60],[62,0,450,62]],[[12,0,451,12],[21,0,451,21],[22,0,451,22],[28,0,451,28],[29,0,451,29],[44,0,451,44],[45,0,451,45],[46,0,451,46],[47,0,451,47],[49,0,451,49],[50,0,451,50],[51,0,451,51],[52,0,451,52]],[[9,0,452,9]],[[8,0,453,8],[14,0,453,14],[25,0,453,25],[28,0,453,28],[30,0,453,30],[31,0,453,31]],[[8,0,454,8],[91,0,454,91]],[[8,0,455,8],[21,0,455,21],[22,0,455,22],[29,0,455,29],[30,0,455,30],[42,0,455,42],[43,0,455,43],[45,0,455,45]],[[12,0,456,12],[18,0,456,18],[22,0,456,22],[25,0,456,25],[29,0,456,29],[30,0,456,30],[56,0,456,56],[57,0,456,57],[69,0,456,69],[70,0,456,70],[87,0,456,87],[88,0,456,88],[91,0,456,91],[93,0,456,93],[113,0,456,113],[114,0,456,114],[115,0,456,115],[119,0,456,119],[120,0,456,120],[124,0,456,124],[125,0,456,125],[126,0,456,126],[127,0,456,127],[128,0,456,128],[129,0,456,129]],[[12,0,457,12],[23,0,457,23],[24,0,457,24],[28,0,457,28],[29,0,457,29],[33,0,457,33],[34,0,457,34],[35,0,457,35]],[[8,0,458,8],[9,0,458,9],[10,0,458,10],[11,0,458,11]],[[8,0,459,8],[15,0,459,15],[23,0,459,23],[24,0,459,24],[35,0,459,35],[36,0,459,36],[37,0,459,37],[41,0,459,41],[42,0,459,42],[46,0,459,46],[47,0,459,47],[48,0,459,48],[49,0,459,49],[51,0,459,51],[54,0,459,54],[55,0,459,55],[56,0,459,56],[69,0,459,69],[71,0,459,71],[73,0,459,73]],[[12,0,460,12],[78,0,460,78]],[[12,0,461,12],[16,0,461,16],[23,0,461,23],[26,0,461,26],[28,0,461,28],[29,0,461,29]],[[12,0,462,12],[25,0,462,25],[26,0,462,26],[33,0,462,33],[34,0,462,34],[38,0,462,38],[39,0,462,39],[41,0,462,41]],[[16,0,463,16],[23,0,463,23],[26,0,463,26],[33,0,463,33],[34,0,463,34],[40,0,463,40],[41,0,463,41],[45,0,463,45],[46,0,463,46],[47,0,463,47]],[[12,0,464,12],[13,0,464,13],[14,0,464,14],[15,0,464,15]],[[12,0,465,12],[19,0,465,19],[26,0,465,26],[27,0,465,27]],[[8,0,466,8],[9,0,466,9],[10,0,466,10],[12,0,466,12],[15,0,466,15],[16,0,466,16],[17,0,466,17],[24,0,466,24],[26,0,466,26],[28,0,466,28],[29,0,466,29],[33,0,466,33],[34,0,466,34],[62,0,466,62],[63,0,466,63],[70,0,466,70],[71,0,466,71],[72,0,466,72],[74,0,466,74],[77,0,466,77],[78,0,466,78],[79,0,466,79],[84,0,466,84],[86,0,466,86],[88,0,466,88],[89,0,466,89],[93,0,466,93],[94,0,466,94],[131,0,466,131],[132,0,466,132],[141,0,466,141],[143,0,466,143],[148,0,466,148],[149,0,466,149],[150,0,466,150],[152,0,466,152],[161,0,466,161],[162,0,466,162],[163,0,466,163],[168,0,466,168],[170,0,466,170],[172,0,466,172],[173,0,466,173],[177,0,466,177],[178,0,466,178],[190,0,466,190],[191,0,466,191],[196,0,466,196],[197,0,466,197],[198,0,466,198],[199,0,466,199],[200,0,466,200]],[[4,0,467,4],[5,0,467,5]],[[4,0,468,4]],[],[],[],[],[],[],[],[[7,0,476,7]],[[4,0,477,4],[41,0,477,41],[42,0,477,42],[47,0,477,47],[49,0,477,49],[54,0,477,54],[57,0,477,57],[67,0,477,67],[68,0,477,68],[72,0,477,72],[73,0,477,73],[75,0,477,75],[76,0,477,76],[85,0,477,85],[86,0,477,86]],[[8,0,478,8],[13,0,478,13],[14,0,478,14],[21,0,478,21],[22,0,478,22],[23,0,478,23],[27,0,478,27],[29,0,478,29],[34,0,478,34],[36,0,478,36],[38,0,478,38]],[[12,0,479,12],[16,0,479,16],[20,0,479,20],[21,0,479,21],[26,0,479,26],[31,0,479,31],[36,0,479,36],[38,0,479,38]],[[16,0,480,16],[20,0,480,20],[21,0,480,21],[26,0,480,26],[29,0,480,29],[34,0,480,34],[35,0,480,35],[36,0,480,36],[111,0,480,111]],[[16,0,481,16],[22,0,481,22],[25,0,481,25],[28,0,481,28],[42,0,481,42],[43,0,481,43],[47,0,481,47],[48,0,481,48],[65,0,481,65],[66,0,481,66],[70,0,481,70],[72,0,481,72],[76,0,481,76],[77,0,481,77],[79,0,481,79],[80,0,481,80],[89,0,481,89],[90,0,481,90],[91,0,481,91]],[[16,0,482,16],[21,0,482,21],[22,0,482,22],[28,0,482,28],[29,0,482,29],[32,0,482,32],[34,0,482,34],[36,0,482,36],[41,0,482,41],[43,0,482,43],[44,0,482,44],[45,0,482,45]],[[13,0,483,13]],[[8,0,484,8],[9,0,484,9],[10,0,484,10],[11,0,484,11]],[[8,0,485,8],[15,0,485,15],[20,0,485,20],[21,0,485,21]],[[4,0,486,4],[5,0,486,5]],[[4,0,487,4],[29,0,487,29],[30,0,487,30],[43,0,487,43],[45,0,487,45],[57,0,487,57],[59,0,487,59],[72,0,487,72],[74,0,487,74],[86,0,487,86],[88,0,487,88],[104,0,487,104],[106,0,487,106],[137,0,487,137],[139,0,487,139],[170,0,487,170],[173,0,487,173],[177,0,487,177],[179,0,487,179],[186,0,487,186],[189,0,487,189],[194,0,487,194]],[[8,0,488,8],[14,0,488,14],[19,0,488,19],[22,0,488,22],[26,0,488,26],[27,0,488,27],[64,0,488,64],[65,0,488,65],[78,0,488,78],[80,0,488,80],[92,0,488,92],[94,0,488,94],[107,0,488,107],[109,0,488,109],[121,0,488,121],[123,0,488,123],[139,0,488,139],[141,0,488,141],[172,0,488,172],[174,0,488,174],[205,0,488,205],[207,0,488,207],[214,0,488,214],[215,0,488,215],[216,0,488,216]],[[8,0,489,8],[15,0,489,15],[19,0,489,19],[20,0,489,20],[32,0,489,32],[33,0,489,33],[38,0,489,38],[39,0,489,39],[40,0,489,40]],[[4,0,490,4],[5,0,490,5]],[[4,0,491,4],[43,0,491,43]],[[4,0,492,4]],[],[],[],[],[[7,0,497,7]],[[4,0,498,4],[11,0,498,11],[12,0,498,12],[18,0,498,18],[20,0,498,20],[40,0,498,40],[43,0,498,43],[45,0,498,45]],[[8,0,499,8],[12,0,499,12],[32,0,499,32],[36,0,499,36],[40,0,499,40],[44,0,499,44],[64,0,499,64],[65,0,499,65],[71,0,499,71],[76,0,499,76],[77,0,499,77],[79,0,499,79]],[[12,0,500,12],[54,0,500,54]],[[12,0,501,12],[19,0,501,19],[23,0,501,23],[24,0,501,24],[26,0,501,26],[27,0,501,27],[33,0,501,33],[34,0,501,34],[40,0,501,40],[41,0,501,41],[42,0,501,42]],[[9,0,502,9]],[[8,0,503,8],[15,0,503,15],[19,0,503,19],[20,0,503,20],[46,0,503,46],[47,0,503,47],[53,0,503,53],[55,0,503,55],[75,0,503,75],[76,0,503,76],[77,0,503,77],[81,0,503,81],[82,0,503,82],[91,0,503,91],[92,0,503,92],[93,0,503,93],[103,0,503,103],[105,0,503,105],[107,0,503,107],[108,0,503,108],[112,0,503,112],[113,0,503,113],[134,0,503,134],[135,0,503,135],[145,0,503,145],[146,0,503,146],[147,0,503,147],[148,0,503,148],[149,0,503,149]],[[4,0,504,4],[5,0,504,5]],[[4,0,505,4]],[],[],[],[],[],[[7,0,511,7]],[[4,0,512,4],[19,0,512,19],[20,0,512,20],[26,0,512,26],[28,0,512,28],[48,0,512,48],[51,0,512,51],[53,0,512,53],[55,0,512,55],[60,0,512,60],[63,0,512,63],[73,0,512,73],[74,0,512,74],[78,0,512,78],[79,0,512,79],[81,0,512,81],[82,0,512,82],[91,0,512,91],[92,0,512,92]],[[8,0,513,8],[12,0,513,12],[32,0,513,32],[36,0,513,36],[40,0,513,40],[44,0,513,44],[64,0,513,64],[65,0,513,65],[71,0,513,71],[76,0,513,76],[77,0,513,77],[79,0,513,79]],[[12,0,514,12],[54,0,514,54]],[[12,0,515,12],[17,0,515,17],[18,0,515,18],[24,0,515,24],[25,0,515,25],[31,0,515,31],[32,0,515,32],[33,0,515,33]],[[12,0,516,12],[19,0,516,19],[21,0,516,21],[22,0,516,22],[27,0,516,27],[28,0,516,28],[29,0,516,29]],[[9,0,517,9]],[[8,0,518,8],[15,0,518,15],[19,0,518,19],[20,0,518,20],[46,0,518,46],[47,0,518,47],[53,0,518,53],[55,0,518,55],[75,0,518,75],[76,0,518,76],[77,0,518,77],[81,0,518,81],[82,0,518,82],[85,0,518,85],[86,0,518,86],[87,0,518,87],[94,0,518,94],[96,0,518,96],[98,0,518,98],[99,0,518,99],[103,0,518,103],[104,0,518,104],[132,0,518,132],[133,0,518,133],[140,0,518,140],[141,0,518,141],[142,0,518,142],[144,0,518,144],[148,0,518,148],[149,0,518,149],[150,0,518,150],[151,0,518,151],[152,0,518,152],[153,0,518,153]],[[4,0,519,4],[5,0,519,5]],[[4,0,520,4],[26,0,520,26],[27,0,520,27],[35,0,520,35]],[[8,0,521,8],[14,0,521,14],[21,0,521,21],[24,0,521,24],[32,0,521,32],[33,0,521,33],[36,0,521,36],[37,0,521,37],[41,0,521,41],[42,0,521,42],[44,0,521,44],[45,0,521,45],[59,0,521,59],[60,0,521,60],[64,0,521,64],[66,0,521,66],[70,0,521,70],[71,0,521,71],[73,0,521,73],[74,0,521,74],[83,0,521,83],[84,0,521,84],[85,0,521,85],[86,0,521,86]],[[8,0,522,8],[15,0,522,15],[19,0,522,19],[20,0,522,20],[41,0,522,41],[42,0,522,42],[49,0,522,49],[50,0,522,50],[51,0,522,51]],[[4,0,523,4],[5,0,523,5]],[[4,0,524,4]],[],[],[],[],[[7,0,529,7]],[[4,0,530,4],[19,0,530,19],[20,0,530,20],[27,0,530,27],[29,0,530,29],[49,0,530,49],[52,0,530,52],[54,0,530,54]],[[8,0,531,8],[12,0,531,12],[32,0,531,32],[36,0,531,36],[40,0,531,40],[44,0,531,44],[64,0,531,64],[65,0,531,65],[71,0,531,71],[76,0,531,76],[77,0,531,77],[79,0,531,79]],[[12,0,532,12],[19,0,532,19],[23,0,532,23],[24,0,532,24],[45,0,532,45],[46,0,532,46],[53,0,532,53],[54,0,532,54],[55,0,532,55]],[[9,0,533,9]],[[8,0,534,8],[14,0,534,14],[26,0,534,26],[29,0,534,29],[31,0,534,31],[32,0,534,32]],[[8,0,535,8],[15,0,535,15],[16,0,535,16],[23,0,535,23],[24,0,535,24],[30,0,535,30],[31,0,535,31],[33,0,535,33]],[[12,0,536,12],[18,0,536,18],[26,0,536,26],[29,0,536,29],[33,0,536,33],[34,0,536,34],[60,0,536,60],[61,0,536,61],[67,0,536,67],[69,0,536,69],[89,0,536,89],[90,0,536,90],[91,0,536,91]],[[12,0,537,12],[24,0,537,24],[25,0,537,25],[29,0,537,29],[30,0,537,30],[38,0,537,38],[39,0,537,39],[40,0,537,40]],[[8,0,538,8],[9,0,538,9],[10,0,538,10],[11,0,538,11]],[[8,0,539,8],[15,0,539,15],[28,0,539,28],[29,0,539,29],[41,0,539,41],[42,0,539,42],[43,0,539,43],[47,0,539,47]],[[8,0,540,8],[44,0,540,44]],[[8,0,541,8],[11,0,541,11],[12,0,541,12],[13,0,541,13],[18,0,541,18],[20,0,541,20],[22,0,541,22]],[[12,0,542,12],[16,0,542,16],[30,0,542,30],[33,0,542,33],[35,0,542,35],[36,0,542,36]],[[12,0,543,12],[17,0,543,17],[18,0,543,18],[25,0,543,25],[26,0,543,26],[30,0,543,30],[31,0,543,31],[33,0,543,33]],[[16,0,544,16],[30,0,544,30],[33,0,544,33],[47,0,544,47],[48,0,544,48],[54,0,544,54],[55,0,544,55],[59,0,544,59],[60,0,544,60],[61,0,544,61]],[[12,0,545,12],[13,0,545,13],[14,0,545,14],[15,0,545,15]],[[12,0,546,12],[19,0,546,19],[33,0,546,33],[34,0,546,34]],[[8,0,547,8],[9,0,547,9],[10,0,547,10]],[[8,0,548,8],[44,0,548,44]],[[8,0,549,8],[17,0,549,17],[18,0,549,18],[19,0,549,19],[29,0,549,29],[31,0,549,31],[33,0,549,33],[34,0,549,34],[38,0,549,38],[39,0,549,39],[60,0,549,60],[61,0,549,61],[71,0,549,71],[72,0,549,72],[73,0,549,73],[74,0,549,74],[75,0,549,75]],[[4,0,550,4],[5,0,550,5]],[[4,0,551,4]],[],[],[],[],[],[],[[7,0,558,7]],[[4,0,559,4],[21,0,559,21],[22,0,559,22],[35,0,559,35],[37,0,559,37],[57,0,559,57],[60,0,559,60],[62,0,559,62]],[[8,0,560,8],[15,0,560,15],[19,0,560,19],[20,0,560,20],[59,0,560,59],[60,0,560,60],[73,0,560,73],[75,0,560,75],[95,0,560,95],[96,0,560,96],[97,0,560,97],[101,0,560,101],[102,0,560,102],[111,0,560,111],[112,0,560,112],[119,0,560,119],[120,0,560,120],[122,0,560,122],[123,0,560,123],[127,0,560,127],[128,0,560,128],[143,0,560,143],[144,0,560,144],[151,0,560,151],[152,0,560,152],[153,0,560,153],[154,0,560,154],[155,0,560,155],[159,0,560,159],[160,0,560,160],[164,0,560,164],[165,0,560,165],[166,0,560,166],[167,0,560,167],[168,0,560,168],[169,0,560,169]],[[4,0,561,4],[5,0,561,5]],[[4,0,562,4]],[],[],[],[],[],[[7,0,568,7]],[[4,0,569,4],[20,0,569,20],[21,0,569,21],[28,0,569,28],[30,0,569,30],[50,0,569,50],[53,0,569,53],[55,0,569,55]],[[8,0,570,8],[14,0,570,14],[20,0,570,20],[23,0,570,23],[37,0,570,37],[38,0,570,38],[45,0,570,45],[47,0,570,47],[51,0,570,51],[52,0,570,52],[54,0,570,54],[55,0,570,55],[64,0,570,64],[65,0,570,65],[66,0,570,66]],[[8,0,571,8],[15,0,571,15],[19,0,571,19],[20,0,571,20],[27,0,571,27],[28,0,571,28],[34,0,571,34],[36,0,571,36],[56,0,571,56],[57,0,571,57],[58,0,571,58]],[[4,0,572,4],[5,0,572,5]],[[4,0,573,4]],[],[],[],[],[],[],[[7,0,580,7]],[[4,0,581,4],[15,0,581,15],[16,0,581,16],[20,0,581,20],[22,0,581,22],[42,0,581,42],[45,0,581,45],[47,0,581,47]],[[8,0,582,8],[14,0,582,14],[21,0,582,21],[24,0,582,24],[28,0,582,28],[29,0,582,29],[58,0,582,58],[59,0,582,59],[63,0,582,63],[65,0,582,65],[85,0,582,85],[86,0,582,86],[87,0,582,87]],[[8,0,583,8],[15,0,583,15],[19,0,583,19],[20,0,583,20],[41,0,583,41],[42,0,583,42],[49,0,583,49],[50,0,583,50],[51,0,583,51],[55,0,583,55]],[[8,0,584,8],[105,0,584,105]],[[8,0,585,8],[73,0,585,73]],[[8,0,586,8],[32,0,586,32]],[[8,0,587,8],[14,0,587,14]],[[8,0,588,8],[12,0,588,12],[13,0,588,13],[14,0,588,14],[15,0,588,15],[16,0,588,16],[17,0,588,17]],[[4,0,589,4],[5,0,589,5]],[[4,0,590,4],[23,0,590,23],[24,0,590,24],[28,0,590,28],[30,0,590,30],[50,0,590,50],[53,0,590,53],[55,0,590,55],[57,0,590,57],[81,0,590,81],[84,0,590,84],[86,0,590,86]],[[8,0,591,8],[99,0,591,99]],[[8,0,592,8],[40,0,592,40]],[[8,0,593,8],[12,0,593,12],[17,0,593,17],[18,0,593,18],[25,0,593,25],[26,0,593,26],[30,0,593,30],[31,0,593,31],[33,0,593,33]],[[12,0,594,12],[18,0,594,18],[28,0,594,28],[31,0,594,31],[33,0,594,33],[34,0,594,34]],[[12,0,595,12],[16,0,595,16],[17,0,595,17],[24,0,595,24],[25,0,595,25],[26,0,595,26],[27,0,595,27],[29,0,595,29]],[[16,0,596,16],[26,0,596,26],[27,0,596,27],[31,0,596,31],[32,0,596,32],[36,0,596,36],[37,0,596,37],[68,0,596,68],[69,0,596,69],[70,0,596,70],[72,0,596,72],[92,0,596,92],[94,0,596,94],[118,0,596,118],[119,0,596,119],[120,0,596,120],[121,0,596,121]],[[12,0,597,12],[13,0,597,13],[14,0,597,14],[15,0,597,15]],[[12,0,598,12],[19,0,598,19],[29,0,598,29],[30,0,598,30]],[[9,0,599,9]],[[13,0,600,13]],[[12,0,601,12],[19,0,601,19],[23,0,601,23],[24,0,601,24],[55,0,601,55],[56,0,601,56],[60,0,601,60],[62,0,601,62],[82,0,601,82],[84,0,601,84],[108,0,601,108],[109,0,601,109],[110,0,601,110]],[[9,0,602,9]],[[4,0,603,4],[5,0,603,5]],[[4,0,604,4],[54,0,604,54]],[[4,0,605,4]],[],[],[],[],[],[],[],[[7,0,613,7]],[[4,0,614,4],[23,0,614,23],[24,0,614,24],[30,0,614,30],[32,0,614,32],[48,0,614,48],[51,0,614,51],[68,0,614,68],[69,0,614,69],[88,0,614,88]],[[8,0,615,8],[15,0,615,15],[19,0,615,19],[20,0,615,20],[22,0,615,22],[23,0,615,23],[26,0,615,26],[27,0,615,27],[33,0,615,33],[34,0,615,34],[35,0,615,35],[39,0,615,39],[40,0,615,40],[43,0,615,43],[44,0,615,44],[45,0,615,45],[53,0,615,53],[55,0,615,55],[57,0,615,57]],[[12,0,616,12],[16,0,616,16],[17,0,616,17],[25,0,616,25],[26,0,616,26],[32,0,616,32],[36,0,616,36],[52,0,616,52],[57,0,616,57],[74,0,616,74],[75,0,616,75],[94,0,616,94],[96,0,616,96]],[[16,0,617,16],[22,0,617,22],[27,0,617,27],[30,0,617,30]],[[20,0,618,20],[24,0,618,24],[26,0,618,26],[44,0,618,44]],[[20,0,619,20],[24,0,619,24],[26,0,619,26],[37,0,619,37]],[[20,0,620,20],[27,0,620,27],[29,0,620,29],[100,0,620,100]],[[20,0,621,20],[26,0,621,26]],[[17,0,622,17],[18,0,622,18]],[[16,0,623,16],[22,0,623,22],[27,0,623,27],[28,0,623,28]],[[13,0,624,13]],[[8,0,625,8],[9,0,625,9],[10,0,625,10],[12,0,625,12],[18,0,625,18],[19,0,625,19],[20,0,625,20],[28,0,625,28],[30,0,625,30],[32,0,625,32]],[[12,0,626,12],[19,0,626,19],[20,0,626,20],[21,0,626,21],[29,0,626,29],[30,0,626,30],[36,0,626,36],[38,0,626,38],[42,0,626,42],[58,0,626,58],[63,0,626,63],[80,0,626,80],[81,0,626,81],[87,0,626,87],[88,0,626,88],[89,0,626,89]],[[8,0,627,8],[9,0,627,9],[10,0,627,10],[12,0,627,12],[15,0,627,15],[16,0,627,16],[17,0,627,17],[25,0,627,25],[27,0,627,27],[29,0,627,29]],[[12,0,628,12],[16,0,628,16],[24,0,628,24],[25,0,628,25],[31,0,628,31],[35,0,628,35],[51,0,628,51],[56,0,628,56],[73,0,628,73],[74,0,628,74],[93,0,628,93],[95,0,628,95]],[[16,0,629,16],[22,0,629,22],[26,0,629,26],[29,0,629,29],[37,0,629,37],[38,0,629,38],[42,0,629,42],[44,0,629,44],[45,0,629,45]],[[16,0,630,16],[22,0,630,22],[39,0,630,39],[42,0,630,42]],[[20,0,631,20],[22,0,631,22],[24,0,631,24],[32,0,631,32],[33,0,631,33],[35,0,631,35]],[[20,0,632,20],[23,0,632,23],[25,0,632,25],[33,0,632,33],[34,0,632,34],[37,0,632,37]],[[20,0,633,20],[24,0,633,24],[26,0,633,26],[32,0,633,32],[33,0,633,33],[37,0,633,37]],[[20,0,634,20],[28,0,634,28],[30,0,634,30],[38,0,634,38],[39,0,634,39],[45,0,634,45],[47,0,634,47]],[[20,0,635,20],[36,0,635,36],[38,0,635,38],[46,0,635,46],[47,0,635,47],[55,0,635,55]],[[17,0,636,17],[18,0,636,18]],[[16,0,637,16],[55,0,637,28],[59,0,637,32],[64,0,637,34],[81,0,637,51],[85,0,637,54]],[[13,0,638,13]],[[17,0,639,17],[21,0,639,21],[37,0,639,37],[42,0,639,42],[59,0,639,59],[60,0,639,60],[71,0,639,71],[73,0,639,73],[75,0,639,75],[98,0,639,98]],[[16,0,640,16],[23,0,640,23],[27,0,640,27],[28,0,640,28]],[[13,0,641,13]],[[12,0,642,12],[19,0,642,19],[23,0,642,23],[24,0,642,24]],[[8,0,643,8],[9,0,643,9],[10,0,643,10],[12,0,643,12],[15,0,643,15],[16,0,643,16],[17,0,643,17],[21,0,643,21],[23,0,643,23],[25,0,643,25]],[[12,0,644,12],[16,0,644,16],[20,0,644,20],[24,0,644,24],[28,0,644,28],[30,0,644,30]],[[16,0,645,16],[23,0,645,23],[45,0,645,45],[46,0,645,46],[50,0,645,50],[51,0,645,51],[52,0,645,52]],[[13,0,646,13]],[[17,0,647,17]],[[16,0,648,16],[23,0,648,23],[27,0,648,27],[28,0,648,28]],[[13,0,649,13]],[[8,0,650,8],[9,0,650,9],[10,0,650,10],[11,0,650,11],[12,0,650,12]],[[4,0,651,4],[5,0,651,5]],[[4,0,652,4]],[],[],[],[],[],[],[[7,0,659,7]],[[4,0,660,4],[30,0,660,30],[31,0,660,31],[44,0,660,44]],[[8,0,661,8]],[],[],[[11,0,664,11]],[[8,0,665,8],[15,0,665,15],[19,0,665,19],[20,0,665,20],[22,0,665,22],[23,0,665,23],[33,0,665,33],[34,0,665,34],[47,0,665,47],[48,0,665,48],[49,0,665,49],[53,0,665,53],[54,0,665,54],[57,0,665,57],[58,0,665,58],[59,0,665,59],[63,0,665,63],[65,0,665,65],[67,0,665,67]],[[12,0,666,12],[19,0,666,19],[23,0,666,23],[24,0,666,24],[28,0,666,28],[29,0,666,29],[32,0,666,32],[33,0,666,33],[41,0,666,41],[42,0,666,42],[44,0,666,44]],[[16,0,667,16],[22,0,667,22],[26,0,667,26],[29,0,667,29],[37,0,667,37],[38,0,667,38],[42,0,667,42],[44,0,667,44],[45,0,667,45]],[[16,0,668,16],[22,0,668,22],[24,0,668,24],[27,0,668,27],[35,0,668,35],[36,0,668,36],[38,0,668,38],[39,0,668,39]],[[16,0,669,16],[22,0,669,22],[25,0,669,25],[28,0,669,28],[36,0,669,36],[37,0,669,37],[40,0,669,40],[41,0,669,41]],[[16,0,670,16],[22,0,670,22],[26,0,670,26],[29,0,670,29],[32,0,670,32],[33,0,670,33],[37,0,670,37],[38,0,670,38]],[[16,0,671,16],[22,0,671,22],[38,0,671,38],[41,0,671,41],[49,0,671,49],[50,0,671,50],[58,0,671,58],[59,0,671,59]],[[16,0,672,16],[22,0,672,22],[39,0,672,39],[42,0,672,42]],[[20,0,673,20],[22,0,673,22]],[[20,0,674,20],[24,0,674,24]],[[20,0,675,20],[23,0,675,23]],[[20,0,676,20],[36,0,676,36]],[[20,0,677,20],[28,0,677,28],[30,0,677,30],[34,0,677,34]],[[17,0,678,17],[18,0,678,18]],[[16,0,679,16],[55,0,679,28],[59,0,679,32],[64,0,679,34],[81,0,679,51],[85,0,679,54]],[[12,0,680,12],[13,0,680,13],[14,0,680,14],[15,0,680,15]],[[8,0,681,8],[9,0,681,9],[10,0,681,10],[12,0,681,12],[15,0,681,15],[16,0,681,16],[17,0,681,17],[22,0,681,22],[24,0,681,24],[26,0,681,26],[27,0,681,27],[32,0,681,32],[33,0,681,33],[36,0,681,36],[37,0,681,37],[41,0,681,41],[42,0,681,42],[44,0,681,44]],[[12,0,682,12],[34,0,682,34],[35,0,682,35],[39,0,682,39],[40,0,682,40],[41,0,682,41]],[[12,0,683,12],[19,0,683,19],[23,0,683,23],[24,0,683,24]],[[8,0,684,8],[9,0,684,9],[10,0,684,10],[11,0,684,11],[12,0,684,12],[13,0,684,13]],[[4,0,685,4],[5,0,685,5]],[[4,0,686,4]],[],[],[],[],[],[],[],[[7,0,694,7]],[[4,0,695,4],[28,0,695,28],[29,0,695,29],[33,0,695,33],[35,0,695,35],[55,0,695,55],[58,0,695,58],[60,0,695,60]],[[8,0,696,8],[12,0,696,12],[16,0,696,16],[20,0,696,20],[24,0,696,24],[26,0,696,26]],[[12,0,697,12],[19,0,697,19],[21,0,697,21],[22,0,697,22],[23,0,697,23],[27,0,697,27],[28,0,697,28],[29,0,697,29],[30,0,697,30]],[[9,0,698,9]],[[8,0,699,8],[12,0,699,12],[32,0,699,32],[33,0,699,33],[39,0,699,39],[43,0,699,43],[44,0,699,44],[46,0,699,46]],[[12,0,700,12],[19,0,700,19],[21,0,700,21],[22,0,700,22],[23,0,700,23],[27,0,700,27],[28,0,700,28],[29,0,700,29],[30,0,700,30]],[[9,0,701,9]],[[8,0,702,8],[14,0,702,14],[33,0,702,33],[36,0,702,36],[38,0,702,38],[39,0,702,39]],[[8,0,703,8],[91,0,703,91]],[[8,0,704,8],[28,0,704,28],[29,0,704,29],[36,0,704,36],[37,0,704,37],[55,0,704,55],[56,0,704,56],[58,0,704,58]],[[12,0,705,12],[16,0,705,16],[29,0,705,29],[32,0,705,32],[48,0,705,48],[49,0,705,49],[53,0,705,53],[54,0,705,54],[71,0,705,71],[72,0,705,72],[75,0,705,75],[77,0,705,77],[95,0,705,95],[96,0,705,96],[100,0,705,100],[101,0,705,101],[102,0,705,102]],[[12,0,706,12],[16,0,706,16],[34,0,706,34],[35,0,706,35],[42,0,706,42],[44,0,706,44]],[[16,0,707,16],[29,0,707,29],[32,0,707,32],[50,0,707,50],[51,0,707,51],[58,0,707,58],[59,0,707,59],[72,0,707,72],[73,0,707,73],[74,0,707,74]],[[13,0,708,13]],[[12,0,709,12],[18,0,709,18],[36,0,709,36],[39,0,709,39],[43,0,709,43],[44,0,709,44],[70,0,709,70],[71,0,709,71],[84,0,709,84],[85,0,709,85],[86,0,709,86],[90,0,709,90]],[[12,0,710,12],[115,0,710,115]],[[12,0,711,12],[54,0,711,54]],[[12,0,712,12],[40,0,712,40]],[[12,0,713,12],[44,0,713,44]],[[12,0,714,12],[58,0,714,58]],[[12,0,715,12],[77,0,715,77]],[[12,0,716,12],[20,0,716,20],[21,0,716,21],[22,0,716,22],[27,0,716,27],[29,0,716,29],[31,0,716,31]],[[16,0,717,16],[20,0,717,20],[21,0,717,21],[39,0,717,39],[40,0,717,40],[54,0,717,54],[56,0,717,56]],[[20,0,718,20],[27,0,718,27],[29,0,718,29],[30,0,718,30],[35,0,718,35],[36,0,718,36],[37,0,718,37]],[[17,0,719,17]],[[16,0,720,16],[22,0,720,22],[34,0,720,34],[37,0,720,37],[39,0,720,39],[40,0,720,40]],[[16,0,721,16],[21,0,721,21],[24,0,721,24],[29,0,721,29],[30,0,721,30],[36,0,721,36],[37,0,721,37],[38,0,721,38],[39,0,721,39],[41,0,721,41],[42,0,721,42],[43,0,721,43],[47,0,721,47],[51,0,721,51],[52,0,721,52],[53,0,721,53],[54,0,721,54],[83,0,721,83]],[[16,0,722,16],[21,0,722,21],[22,0,722,22],[29,0,722,29],[30,0,722,30],[31,0,722,31],[38,0,722,38],[40,0,722,40],[42,0,722,42]],[[20,0,723,20],[26,0,723,26],[47,0,723,47],[50,0,723,50],[54,0,723,54],[55,0,723,55],[79,0,723,79],[80,0,723,80],[87,0,723,87],[89,0,723,89],[107,0,723,107],[108,0,723,108],[122,0,723,122],[123,0,723,123],[124,0,723,124]],[[20,0,724,20],[32,0,724,32],[33,0,724,33],[37,0,724,37],[38,0,724,38],[59,0,724,59],[60,0,724,60],[61,0,724,61]],[[16,0,725,16],[17,0,725,17],[18,0,725,18],[19,0,725,19]],[[16,0,726,16],[20,0,726,20],[32,0,726,32],[33,0,726,33],[39,0,726,39],[43,0,726,43],[44,0,726,44],[46,0,726,46]],[[20,0,727,20],[27,0,727,27],[29,0,727,29],[30,0,727,30],[32,0,727,32],[33,0,727,33],[34,0,727,34]],[[17,0,728,17],[18,0,728,18],[67,0,728,67]],[[16,0,729,16],[23,0,729,23],[36,0,729,36],[37,0,729,37],[49,0,729,49],[50,0,729,50],[51,0,729,51],[55,0,729,55]],[[16,0,730,16],[47,0,730,47]],[[17,0,731,17],[18,0,731,18]],[[12,0,732,12],[13,0,732,13],[14,0,732,14],[16,0,732,16],[51,0,732,51]],[[12,0,733,12]],[],[[66,0,735,66]],[[12,0,736,12],[15,0,736,15],[16,0,736,16],[17,0,736,17],[22,0,736,22],[24,0,736,24],[26,0,736,26]],[[16,0,737,16],[22,0,737,22],[27,0,737,27],[30,0,737,30],[48,0,737,48],[49,0,737,49],[54,0,737,54],[59,0,737,59],[68,0,737,68],[69,0,737,69],[70,0,737,70],[71,0,737,71],[89,0,737,89],[90,0,737,90],[95,0,737,95],[96,0,737,96],[97,0,737,97],[98,0,737,98],[102,0,737,102],[103,0,737,103],[115,0,737,115],[116,0,737,116]],[[16,0,738,16],[20,0,738,20],[25,0,738,25],[26,0,738,26],[32,0,738,32],[37,0,738,37],[38,0,738,38],[42,0,738,42],[47,0,738,47],[48,0,738,48],[49,0,738,49],[50,0,738,50],[51,0,738,51],[68,0,738,68],[69,0,738,69],[71,0,738,71],[76,0,738,76],[81,0,738,81],[83,0,738,83]],[[20,0,739,20],[27,0,739,27],[29,0,739,29],[30,0,739,30],[48,0,739,48],[49,0,739,49],[53,0,739,53],[54,0,739,54],[56,0,739,56],[61,0,739,61],[62,0,739,62],[63,0,739,63],[64,0,739,64],[66,0,739,66],[67,0,739,67]],[[17,0,740,17]],[[21,0,741,21]],[[20,0,742,20],[27,0,742,27],[29,0,742,29],[30,0,742,30],[48,0,742,48],[49,0,742,49],[53,0,742,53],[54,0,742,54],[56,0,742,56],[61,0,742,61],[63,0,742,63],[64,0,742,64]],[[17,0,743,17]],[[12,0,744,12],[13,0,744,13],[14,0,744,14],[15,0,744,15],[16,0,744,16]],[[12,0,745,12],[31,0,745,31],[32,0,745,32],[36,0,745,36],[37,0,745,37],[55,0,745,55],[56,0,745,56],[57,0,745,57]],[[8,0,746,8],[9,0,746,9],[10,0,746,10],[11,0,746,11]],[[8,0,747,8],[61,0,747,61]],[[8,0,748,8],[21,0,748,21]],[[8,0,749,8],[15,0,749,15],[28,0,749,28],[29,0,749,29],[48,0,749,48],[49,0,749,49],[50,0,749,50],[54,0,749,54],[55,0,749,55],[58,0,749,58],[59,0,749,59],[60,0,749,60],[75,0,749,75],[77,0,749,77],[79,0,749,79]],[[12,0,750,12],[41,0,750,41]],[[12,0,751,12],[18,0,751,18],[26,0,751,26],[29,0,751,29],[31,0,751,31],[32,0,751,32]],[[12,0,752,12],[27,0,752,27],[28,0,752,28],[35,0,752,35],[36,0,752,36],[37,0,752,37],[47,0,752,47],[49,0,752,49],[51,0,752,51]],[[16,0,753,16],[21,0,753,21],[27,0,753,27],[28,0,753,28],[42,0,753,42],[44,0,753,44],[49,0,753,49],[50,0,753,50],[54,0,753,54],[60,0,753,60],[61,0,753,61],[68,0,753,68],[69,0,753,69],[79,0,753,79],[80,0,753,80],[82,0,753,82]],[[20,0,754,20],[28,0,754,28],[29,0,754,29],[43,0,754,43],[44,0,754,44],[47,0,754,47],[52,0,754,52],[53,0,754,53]],[[17,0,755,17]],[[12,0,756,12],[13,0,756,13],[14,0,756,14],[15,0,756,15]],[[12,0,757,12],[19,0,757,19],[27,0,757,27],[28,0,757,28]],[[8,0,758,8],[9,0,758,9],[10,0,758,10],[12,0,758,12],[15,0,758,15],[16,0,758,16],[17,0,758,17],[21,0,758,21],[23,0,758,23],[25,0,758,25]],[[12,0,759,12],[51,0,759,24],[55,0,759,28],[58,0,759,33],[62,0,759,37],[64,0,759,40]],[[8,0,760,8],[9,0,760,9],[10,0,760,10],[11,0,760,11],[12,0,760,12]],[[4,0,761,4],[5,0,761,5]],[[4,0,762,4]],[],[[7,0,764,7]],[[4,0,765,4],[36,0,765,36],[37,0,765,37],[43,0,765,43],[45,0,765,45],[65,0,765,65],[68,0,765,68],[70,0,765,70],[72,0,765,72],[88,0,765,88],[91,0,765,91],[108,0,765,108],[109,0,765,109],[120,0,765,120]],[[8,0,766,8],[33,0,766,33]],[[8,0,767,8],[15,0,767,15],[19,0,767,19],[20,0,767,20],[39,0,767,39],[40,0,767,40],[46,0,767,46],[48,0,767,48],[64,0,767,64],[65,0,767,65],[66,0,767,66],[70,0,767,70],[71,0,767,71],[79,0,767,79],[80,0,767,80],[81,0,767,81],[85,0,767,85],[87,0,767,87],[89,0,767,89]],[[12,0,768,12],[16,0,768,16],[20,0,768,20],[25,0,768,25],[29,0,768,29],[31,0,768,31]],[[16,0,769,16],[23,0,769,23],[25,0,769,25],[26,0,769,26],[30,0,769,30],[31,0,769,31],[32,0,769,32]],[[13,0,770,13]],[[12,0,771,12],[16,0,771,16],[36,0,771,36],[37,0,771,37],[43,0,771,43],[47,0,771,47],[48,0,771,48],[50,0,771,50]],[[16,0,772,16],[23,0,772,23],[25,0,772,25],[26,0,772,26],[30,0,772,30],[31,0,772,31],[32,0,772,32]],[[13,0,773,13]],[[12,0,774,12],[19,0,774,19],[23,0,774,23],[24,0,774,24],[48,0,774,48],[49,0,774,49],[53,0,774,53],[55,0,774,55],[75,0,774,75],[76,0,774,76],[77,0,774,77]],[[8,0,775,8],[9,0,775,9],[10,0,775,10],[11,0,775,11],[12,0,775,12]],[[4,0,776,4],[5,0,776,5]],[[4,0,777,4]],[],[],[],[],[],[],[],[],[],[],[[7,0,788,7]],[[4,0,789,4],[14,0,789,14],[15,0,789,15],[19,0,789,19],[21,0,789,21],[34,0,789,34],[36,0,789,36],[46,0,789,46],[49,0,789,49],[53,0,789,53],[55,0,789,55],[57,0,789,57]],[[8,0,790,8],[58,0,790,58]],[[8,0,791,8],[12,0,791,12],[16,0,791,16],[17,0,791,17]],[[8,0,792,8],[12,0,792,12],[22,0,792,22],[24,0,792,24]],[[12,0,793,12],[18,0,793,18],[22,0,793,22],[25,0,793,25],[29,0,793,29],[33,0,793,33],[35,0,793,35],[36,0,793,36]],[[12,0,794,12],[16,0,794,16],[19,0,794,19],[33,0,794,33],[34,0,794,34],[38,0,794,38],[40,0,794,40],[45,0,794,45],[47,0,794,47],[51,0,794,51],[52,0,794,52],[53,0,794,53]],[[12,0,795,12],[16,0,795,16],[19,0,795,19],[34,0,795,34],[35,0,795,35],[39,0,795,39],[41,0,795,41],[46,0,795,46],[48,0,795,48],[52,0,795,52],[53,0,795,53],[54,0,795,54]],[[9,0,796,9]],[[8,0,797,8],[12,0,797,12],[14,0,797,14],[19,0,797,19],[28,0,797,28],[30,0,797,30]],[[12,0,798,12],[18,0,798,18],[24,0,798,24],[27,0,798,27],[42,0,798,42],[43,0,798,43],[56,0,798,56],[58,0,798,58],[60,0,798,60],[61,0,798,61],[62,0,798,62]],[[12,0,799,12],[16,0,799,16],[19,0,799,19],[23,0,799,23],[24,0,799,24],[26,0,799,26],[27,0,799,27],[30,0,799,30],[31,0,799,31],[37,0,799,37],[39,0,799,39],[43,0,799,43],[44,0,799,44],[45,0,799,45]],[[9,0,800,9]],[[13,0,801,13]],[[12,0,802,12],[16,0,802,16],[19,0,802,19],[23,0,802,23],[24,0,802,24],[26,0,802,26],[27,0,802,27],[30,0,802,30],[31,0,802,31],[44,0,802,44],[46,0,802,46],[50,0,802,50],[51,0,802,51],[52,0,802,52]],[[9,0,803,9]],[[8,0,804,8],[51,0,804,51]],[[8,0,805,8],[38,0,805,38]],[[8,0,806,8],[114,0,806,114]],[[8,0,807,8],[15,0,807,15]],[[8,0,808,8],[12,0,808,12]],[[8,0,809,8],[12,0,809,12],[15,0,809,15],[19,0,809,19],[20,0,809,20],[24,0,809,24]],[[8,0,810,8],[79,0,810,79]],[[8,0,811,8],[40,0,811,40]],[[8,0,812,8],[40,0,812,40]],[[8,0,813,8],[11,0,813,11],[12,0,813,12],[13,0,813,13],[16,0,813,16],[18,0,813,18],[20,0,813,20]],[[12,0,814,12],[16,0,814,16],[18,0,814,18],[23,0,814,23],[32,0,814,32],[36,0,814,36],[39,0,814,39],[41,0,814,41]],[[16,0,815,16],[22,0,815,22],[26,0,815,26],[29,0,815,29],[32,0,815,32],[33,0,815,33],[37,0,815,37],[38,0,815,38]],[[16,0,816,16],[22,0,816,22],[39,0,816,39],[42,0,816,42]],[[20,0,817,20],[22,0,817,22],[24,0,817,24],[27,0,817,27],[28,0,817,28],[30,0,817,30]],[[20,0,818,20],[24,0,818,24]],[[20,0,819,20],[23,0,819,23]],[[20,0,820,20],[28,0,820,28],[30,0,820,30],[34,0,820,34]],[[17,0,821,17],[18,0,821,18]],[[16,0,822,16],[55,0,822,28],[59,0,822,32],[64,0,822,34],[81,0,822,51],[85,0,822,54]],[[13,0,823,13]],[[17,0,824,17],[19,0,824,19],[87,0,824,87]],[[16,0,825,16],[22,0,825,22],[26,0,825,26],[29,0,825,29],[42,0,825,42],[43,0,825,43],[47,0,825,47],[50,0,825,50],[53,0,825,53],[56,0,825,56],[58,0,825,58],[59,0,825,59]],[[16,0,826,16],[19,0,826,19],[22,0,826,22],[36,0,826,36],[37,0,826,37],[41,0,826,41],[43,0,826,43],[47,0,826,47],[48,0,826,48],[50,0,826,50],[51,0,826,51],[60,0,826,60],[61,0,826,61],[62,0,826,62]],[[16,0,827,16],[22,0,827,22],[39,0,827,39],[42,0,827,42]],[[20,0,828,20],[22,0,828,22],[24,0,828,24],[26,0,828,26]],[[20,0,829,20],[23,0,829,23]],[[20,0,830,20],[24,0,830,24]],[[20,0,831,20],[28,0,831,28],[30,0,831,30],[34,0,831,34]],[[17,0,832,17],[18,0,832,18]],[[16,0,833,16],[55,0,833,28],[59,0,833,32],[64,0,833,34],[81,0,833,51],[85,0,833,54]],[[13,0,834,13]],[[8,0,835,8],[9,0,835,9],[10,0,835,10],[11,0,835,11],[12,0,835,12]],[[8,0,836,8],[15,0,836,15],[19,0,836,19],[20,0,836,20],[24,0,836,24],[25,0,836,25],[29,0,836,29],[30,0,836,30],[31,0,836,31],[32,0,836,32],[33,0,836,33],[34,0,836,34]],[[4,0,837,4],[5,0,837,5]],[[4,0,838,4],[74,0,838,74]],[[4,0,839,4],[17,0,839,17],[18,0,839,18],[22,0,839,22],[24,0,839,24],[30,0,839,30],[32,0,839,32],[49,0,839,49],[52,0,839,52],[56,0,839,56]],[[8,0,840,8],[12,0,840,12],[29,0,840,29],[31,0,840,31]],[[12,0,841,12],[16,0,841,16],[19,0,841,19],[34,0,841,34],[35,0,841,35],[39,0,841,39],[41,0,841,41],[46,0,841,46],[47,0,841,47],[48,0,841,48]],[[9,0,842,9]],[[8,0,843,8],[15,0,843,15],[19,0,843,19],[20,0,843,20],[22,0,843,22],[23,0,843,23],[29,0,843,29],[30,0,843,30],[36,0,843,36],[38,0,843,38],[42,0,843,42],[43,0,843,43],[44,0,843,44]],[[4,0,844,4],[5,0,844,5]],[[4,0,845,4]],[],[[7,0,847,7]],[[4,0,848,4],[27,0,848,27],[28,0,848,28],[32,0,848,32],[34,0,848,34],[40,0,848,40],[42,0,848,42],[62,0,848,62],[65,0,848,65],[67,0,848,67],[69,0,848,69],[86,0,848,86],[89,0,848,89],[93,0,848,93],[95,0,848,95],[100,0,848,100]],[],[[8,0,849,8],[12,0,849,12],[17,0,849,17],[22,0,849,22],[31,0,849,31],[33,0,849,33]],[[12,0,850,12],[17,0,850,17],[20,0,850,20],[30,0,850,30],[31,0,850,31],[35,0,850,35],[36,0,850,36],[38,0,850,38],[39,0,850,39],[48,0,850,48],[49,0,850,49],[50,0,850,50]],[[9,0,851,9]],[[8,0,852,8],[12,0,852,12],[29,0,852,29],[31,0,852,31]],[[12,0,853,12],[16,0,853,16],[19,0,853,19],[34,0,853,34],[35,0,853,35],[39,0,853,39],[41,0,853,41],[46,0,853,46],[47,0,853,47],[48,0,853,48]],[[9,0,854,9]],[[8,0,855,8],[14,0,855,14],[19,0,855,19],[22,0,855,22],[26,0,855,26],[27,0,855,27],[67,0,855,67],[68,0,855,68],[72,0,855,72],[74,0,855,74],[94,0,855,94],[95,0,855,95],[96,0,855,96]],[[8,0,856,8],[14,0,856,14],[24,0,856,24],[27,0,856,27],[32,0,856,32],[33,0,856,33],[43,0,856,43],[44,0,856,44]],[[8,0,857,8],[14,0,857,14],[28,0,857,28],[31,0,857,31],[36,0,857,36],[37,0,857,37],[51,0,857,51],[52,0,857,52]],[[8,0,858,8],[51,0,858,51]],[[8,0,859,8],[13,0,859,13],[14,0,859,14],[20,0,859,20],[21,0,859,21],[27,0,859,27],[29,0,859,29],[39,0,859,39],[40,0,859,40],[41,0,859,41]],[[8,0,860,8],[13,0,860,13],[19,0,860,19],[20,0,860,20],[36,0,860,36],[38,0,860,38],[55,0,860,55],[56,0,860,56],[60,0,860,60],[66,0,860,66],[67,0,860,67],[74,0,860,74],[75,0,860,75],[89,0,860,89],[90,0,860,90],[92,0,860,92]],[[12,0,861,12],[16,0,861,16],[39,0,861,39],[40,0,861,40],[41,0,861,41],[80,0,861,80]],[[12,0,862,12],[16,0,862,16],[24,0,862,24],[25,0,862,25]],[[12,0,863,12],[16,0,863,16],[36,0,863,36],[38,0,863,38]],[[16,0,864,16],[39,0,864,39],[42,0,864,42],[48,0,864,42],[68,0,864,62],[69,0,864,63],[73,0,864,67],[74,0,864,68],[81,0,864,75],[82,0,864,76],[84,0,864,78],[85,0,864,79],[92,0,864,86],[93,0,864,87],[97,0,864,91],[102,0,864,96],[118,0,864,112],[119,0,864,113],[161,0,864,115],[175,0,864,129],[176,0,864,130]],[[16,0,865,16],[24,0,865,24],[27,0,865,27],[33,0,865,27],[53,0,865,47],[54,0,865,48],[58,0,865,52],[59,0,865,53],[66,0,865,60],[67,0,865,61],[69,0,865,63],[70,0,865,64],[77,0,865,71],[78,0,865,72],[82,0,865,76],[87,0,865,81],[103,0,865,97],[104,0,865,98],[146,0,865,100],[151,0,865,105],[152,0,865,106]],[[13,0,866,13]],[[12,0,867,12],[20,0,867,20],[23,0,867,23],[31,0,867,31],[36,0,867,36],[45,0,867,45],[46,0,867,46],[47,0,867,47],[48,0,867,48],[56,0,867,56],[57,0,867,57],[58,0,867,58],[59,0,867,59],[63,0,867,63],[64,0,867,64],[76,0,867,76],[77,0,867,77],[78,0,867,78],[109,0,867,109]],[[12,0,868,12],[82,0,868,82]],[[12,0,869,12],[18,0,869,18],[31,0,869,31],[34,0,869,34],[50,0,869,50],[51,0,869,51],[57,0,869,57],[59,0,869,59],[75,0,869,75],[76,0,869,76],[77,0,869,77]],[[12,0,870,12],[18,0,870,18],[26,0,870,26],[29,0,870,29],[44,0,870,44],[45,0,870,45],[58,0,870,58],[60,0,870,60],[68,0,870,68],[69,0,870,69],[70,0,870,70]],[[12,0,871,12],[17,0,871,17],[20,0,871,20],[24,0,871,24],[25,0,871,25],[48,0,871,48],[49,0,871,49],[66,0,871,66],[68,0,871,68],[76,0,871,76],[78,0,871,78],[101,0,871,101],[103,0,871,103],[120,0,871,120],[122,0,871,122],[127,0,871,127],[128,0,871,128],[129,0,871,129]],[[9,0,872,9]],[[8,0,873,8],[15,0,873,15],[20,0,873,20],[21,0,873,21]],[[4,0,874,4],[5,0,874,5]],[[4,0,875,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,888,7]],[[4,0,889,4],[41,0,889,41],[42,0,889,42],[55,0,889,55],[57,0,889,57],[69,0,889,69],[71,0,889,71],[84,0,889,84],[86,0,889,86],[98,0,889,98],[100,0,889,100],[116,0,889,116],[118,0,889,118],[149,0,889,149],[151,0,889,151],[182,0,889,182],[185,0,889,185],[189,0,889,189],[191,0,889,191],[198,0,889,198],[201,0,889,201],[206,0,889,206]],[[8,0,890,8],[12,0,890,12],[29,0,890,29],[30,0,890,30]],[[8,0,891,8],[12,0,891,12],[28,0,891,28],[29,0,891,29]],[[8,0,892,8],[12,0,892,12],[19,0,892,19],[21,0,892,21]],[[12,0,893,12],[29,0,893,29],[32,0,893,32],[38,0,893,38],[39,0,893,39],[45,0,893,45],[46,0,893,46],[48,0,893,48],[50,0,893,50],[63,0,893,63],[64,0,893,64],[65,0,893,65]],[[12,0,894,12],[28,0,894,28],[31,0,894,31],[37,0,894,37],[38,0,894,38],[44,0,894,44],[45,0,894,45],[47,0,894,47],[49,0,894,49],[61,0,894,61],[62,0,894,62],[63,0,894,63]],[[9,0,895,9]],[[13,0,896,13]],[[12,0,897,12],[29,0,897,29],[32,0,897,32],[45,0,897,45],[46,0,897,46]],[[12,0,898,12],[28,0,898,28],[31,0,898,31],[43,0,898,43],[44,0,898,44]],[[9,0,899,9]],[[8,0,900,8],[25,0,900,25],[26,0,900,26],[43,0,900,43],[45,0,900,45],[61,0,900,61],[63,0,900,63],[76,0,900,76],[78,0,900,78],[90,0,900,90],[91,0,900,91],[92,0,900,92]],[[8,0,901,8],[14,0,901,14],[19,0,901,19],[22,0,901,22],[32,0,901,32],[33,0,901,33],[37,0,901,37],[38,0,901,38],[40,0,901,40],[41,0,901,41],[50,0,901,50],[51,0,901,51],[52,0,901,52]],[[8,0,902,8],[12,0,902,12],[43,0,902,43],[48,0,902,48],[57,0,902,57],[59,0,902,59]],[[12,0,903,12],[18,0,903,18],[27,0,903,27],[30,0,903,30],[46,0,903,46],[47,0,903,47],[59,0,903,59],[60,0,903,60],[61,0,903,61]],[[12,0,904,12],[18,0,904,18],[30,0,904,30],[33,0,904,33],[42,0,904,42],[43,0,904,43],[60,0,904,60],[61,0,904,61],[64,0,904,64],[65,0,904,65]],[[12,0,905,12],[18,0,905,18],[22,0,905,22],[57,0,905,30],[88,0,905,61],[93,0,905,63],[102,0,905,72],[104,0,905,74],[120,0,905,90],[123,0,905,92],[124,0,905,93]],[[12,0,906,12],[16,0,906,16],[17,0,906,17],[24,0,906,24],[26,0,906,26]],[[16,0,907,16],[29,0,907,29],[30,0,907,30],[39,0,907,39],[41,0,907,41],[45,0,907,45],[47,0,907,47],[51,0,907,51],[52,0,907,52],[53,0,907,53]],[[13,0,908,13]],[[12,0,909,12],[16,0,909,16],[47,0,909,47],[49,0,909,49]],[[16,0,910,16],[22,0,910,22],[26,0,910,26],[29,0,910,29],[33,0,910,33],[37,0,910,37],[39,0,910,39],[40,0,910,40]],[[16,0,911,16],[31,0,911,31],[32,0,911,32],[36,0,911,36],[38,0,911,38],[42,0,911,42],[44,0,911,44],[48,0,911,48],[49,0,911,49],[50,0,911,50]],[[16,0,912,16],[20,0,912,20],[21,0,912,21],[28,0,912,28],[30,0,912,30]],[[20,0,913,20],[35,0,913,35],[36,0,913,36],[45,0,913,45],[47,0,913,47],[51,0,913,51],[53,0,913,53],[57,0,913,57],[58,0,913,58],[59,0,913,59]],[[17,0,914,17]],[[13,0,915,13]],[[12,0,916,12],[17,0,916,17],[18,0,916,18],[24,0,916,24],[25,0,916,25],[37,0,916,37],[39,0,916,39],[43,0,916,43],[44,0,916,44],[45,0,916,45]],[[9,0,917,9]],[[8,0,918,8],[14,0,918,14],[39,0,918,39],[42,0,918,42],[58,0,918,58],[59,0,918,59],[64,0,918,64],[65,0,918,65],[77,0,918,77],[78,0,918,78],[79,0,918,79]],[[8,0,919,8],[12,0,919,12],[13,0,919,13],[16,0,919,16],[28,0,919,28],[29,0,919,29]],[[8,0,920,8],[13,0,920,13],[19,0,920,19],[23,0,920,23],[27,0,920,27],[52,0,920,52],[54,0,920,54]],[[12,0,921,12],[25,0,921,25]],[[12,0,922,12],[17,0,922,17],[18,0,922,18],[24,0,922,24],[25,0,922,25],[29,0,922,29],[30,0,922,30],[47,0,922,47],[48,0,922,48],[51,0,922,51],[53,0,922,53],[55,0,922,55],[60,0,922,60],[62,0,922,62],[63,0,922,63],[65,0,922,65],[66,0,922,66],[67,0,922,67]],[[12,0,923,12],[16,0,923,16],[17,0,923,17],[24,0,923,24],[26,0,923,26]],[[16,0,924,16],[20,0,924,20],[21,0,924,21],[26,0,924,26],[29,0,924,29],[30,0,924,30],[31,0,924,31]],[[13,0,925,13]],[[12,0,926,12],[13,0,926,13],[15,0,926,15],[16,0,926,16]],[[9,0,927,9]],[[8,0,928,8],[14,0,928,14],[36,0,928,36],[39,0,928,39],[56,0,928,56],[57,0,928,57],[62,0,928,62],[63,0,928,63],[76,0,928,76],[77,0,928,77],[78,0,928,78]],[[8,0,929,8],[9,0,929,9],[12,0,929,12],[25,0,929,25],[26,0,929,26]],[[8,0,930,8],[13,0,930,13],[19,0,930,19],[23,0,930,23],[27,0,930,27],[49,0,930,49],[51,0,930,51]],[[12,0,931,12],[25,0,931,25]],[[12,0,932,12],[17,0,932,17],[18,0,932,18],[24,0,932,24],[25,0,932,25],[29,0,932,29],[30,0,932,30],[47,0,932,47],[48,0,932,48],[51,0,932,51],[53,0,932,53],[55,0,932,55],[60,0,932,60],[62,0,932,62],[63,0,932,63],[65,0,932,65],[66,0,932,66],[67,0,932,67]],[[12,0,933,12],[16,0,933,16],[17,0,933,17],[24,0,933,24],[26,0,933,26]],[[16,0,934,16],[20,0,934,20],[21,0,934,21],[26,0,934,26],[29,0,934,29],[30,0,934,30],[31,0,934,31]],[[13,0,935,13]],[[12,0,936,12],[13,0,936,13],[15,0,936,15],[16,0,936,16]],[[9,0,937,9]],[[8,0,938,8],[15,0,938,15],[20,0,938,20],[21,0,938,21]],[[4,0,939,4],[5,0,939,5]],[[4,0,940,4]],[],[],[],[[7,0,944,7]],[[4,0,945,4],[25,0,945,25],[26,0,945,26],[33,0,945,33]],[[8,0,946,8],[14,0,946,14],[19,0,946,19],[22,0,946,22],[26,0,946,26],[27,0,946,27],[55,0,946,55],[56,0,946,56],[63,0,946,63],[64,0,946,64],[65,0,946,65]],[[8,0,947,8],[15,0,947,15],[19,0,947,19],[20,0,947,20],[32,0,947,32],[33,0,947,33],[38,0,947,38],[39,0,947,39],[40,0,947,40]],[[4,0,948,4],[5,0,948,5]],[[4,0,949,4],[32,0,949,32],[33,0,949,33],[40,0,949,40],[42,0,949,42],[47,0,949,47],[50,0,949,50],[60,0,949,60],[61,0,949,61],[65,0,949,65],[66,0,949,66],[68,0,949,68],[69,0,949,69],[78,0,949,78],[79,0,949,79]],[[8,0,950,8],[15,0,950,15],[16,0,950,16],[23,0,950,23],[24,0,950,24],[25,0,950,25],[31,0,950,31],[33,0,950,33],[35,0,950,35]],[[12,0,951,12],[17,0,951,17],[18,0,951,18],[24,0,951,24],[25,0,951,25],[31,0,951,31],[32,0,951,32],[33,0,951,33]],[[8,0,952,8],[9,0,952,9],[10,0,952,10],[11,0,952,11]],[[8,0,953,8],[15,0,953,15],[20,0,953,20],[21,0,953,21]],[[4,0,954,4],[5,0,954,5]],[[4,0,955,4]],[],[],[],[],[],[[7,0,961,7]],[[4,0,962,4],[35,0,962,35],[36,0,962,36],[42,0,962,42],[44,0,962,44],[64,0,962,64],[67,0,962,67],[69,0,962,69],[71,0,962,71],[95,0,962,95],[98,0,962,98],[100,0,962,100]],[[8,0,963,8],[95,0,963,95]],[[8,0,964,8],[14,0,964,14],[32,0,964,32],[35,0,964,35],[36,0,964,36],[55,0,964,55],[56,0,964,56],[57,0,964,57],[63,0,964,63],[64,0,964,64],[88,0,964,88],[89,0,964,89],[90,0,964,90]],[[8,0,965,8],[34,0,965,34]],[[8,0,966,8],[13,0,966,13],[19,0,966,19],[36,0,966,36],[40,0,966,40],[58,0,966,58],[60,0,966,60]],[[12,0,967,12],[19,0,967,19],[25,0,967,25],[26,0,967,26],[43,0,967,43],[44,0,967,44],[45,0,967,45]],[[9,0,968,9]],[[8,0,969,8],[28,0,969,28],[29,0,969,29],[36,0,969,36],[37,0,969,37],[40,0,969,40],[41,0,969,41],[43,0,969,43]],[[12,0,970,12],[16,0,970,16],[21,0,970,21],[22,0,970,22],[29,0,970,29],[30,0,970,30],[36,0,970,36],[37,0,970,37],[40,0,970,40],[41,0,970,41],[45,0,970,45],[46,0,970,46],[47,0,970,47],[49,0,970,49],[51,0,970,51],[104,0,970,104]],[[16,0,971,16],[22,0,971,22],[26,0,971,26],[29,0,971,29],[35,0,971,35],[36,0,971,36],[39,0,971,39],[40,0,971,40],[44,0,971,44],[45,0,971,45],[46,0,971,46]],[[16,0,972,16],[20,0,972,20],[21,0,972,21],[28,0,972,28],[29,0,972,29],[30,0,972,30],[31,0,972,31],[33,0,972,33],[34,0,972,34],[36,0,972,36],[38,0,972,38]],[[20,0,973,20],[24,0,973,24],[27,0,973,27],[28,0,973,28],[42,0,973,42],[44,0,973,44]],[[24,0,974,24],[28,0,974,28],[29,0,974,29],[60,0,974,60],[61,0,974,61],[62,0,974,62],[64,0,974,64],[67,0,974,67],[68,0,974,68],[82,0,974,82],[84,0,974,84],[108,0,974,108],[109,0,974,109],[110,0,974,110]],[[21,0,975,21]],[[25,0,976,25]],[[24,0,977,24],[30,0,977,30]],[[24,0,978,24],[29,0,978,29],[35,0,978,35],[52,0,978,52],[56,0,978,56],[74,0,978,74],[76,0,978,76]],[[28,0,979,28],[35,0,979,35],[41,0,979,41],[42,0,979,42],[45,0,979,45],[46,0,979,46],[50,0,979,50],[51,0,979,51],[52,0,979,52],[53,0,979,53],[54,0,979,54],[55,0,979,55],[72,0,979,72],[73,0,979,73],[74,0,979,74]],[[25,0,980,25]],[[21,0,981,21]],[[16,0,982,16],[17,0,982,17],[18,0,982,18],[19,0,982,19]],[[13,0,983,13]],[[17,0,984,17],[19,0,984,19],[52,0,984,52]],[[16,0,985,16],[20,0,985,20],[23,0,985,23],[24,0,985,24],[38,0,985,38],[40,0,985,40]],[[20,0,986,20],[24,0,986,24],[25,0,986,25],[56,0,986,56],[57,0,986,57],[63,0,986,63],[64,0,986,64],[67,0,986,67],[68,0,986,68],[72,0,986,72],[73,0,986,73],[75,0,986,75],[78,0,986,78],[79,0,986,79],[93,0,986,93],[95,0,986,95],[119,0,986,119],[120,0,986,120],[121,0,986,121]],[[17,0,987,17]],[[21,0,988,21]],[[20,0,989,20],[25,0,989,25],[31,0,989,31],[48,0,989,48],[52,0,989,52],[70,0,989,70],[72,0,989,72]],[[24,0,990,24],[31,0,990,31],[37,0,990,37],[38,0,990,38],[41,0,990,41],[42,0,990,42],[46,0,990,46],[47,0,990,47],[48,0,990,48],[65,0,990,65],[66,0,990,66],[67,0,990,67]],[[21,0,991,21]],[[17,0,992,17]],[[13,0,993,13]],[[8,0,994,8],[9,0,994,9],[10,0,994,10],[11,0,994,11]],[[8,0,995,8],[15,0,995,15],[21,0,995,21],[22,0,995,22]],[[4,0,996,4],[5,0,996,5]],[[4,0,997,4]],[],[],[],[],[[7,0,1002,7]],[[4,0,1003,4],[30,0,1003,30],[31,0,1003,31],[34,0,1003,34],[36,0,1003,36],[56,0,1003,56],[59,0,1003,59],[61,0,1003,61]],[[8,0,1004,8],[12,0,1004,12],[15,0,1004,15],[27,0,1004,27],[44,0,1004,44],[46,0,1004,46]],[[12,0,1005,12],[19,0,1005,19],[23,0,1005,23],[24,0,1005,24],[56,0,1005,56],[57,0,1005,57],[60,0,1005,60],[62,0,1005,62],[82,0,1005,82],[83,0,1005,83],[84,0,1005,84]],[[9,0,1006,9]],[[13,0,1007,13],[15,0,1007,15],[37,0,1007,37]],[[12,0,1008,12],[19,0,1008,19],[23,0,1008,23],[24,0,1008,24],[63,0,1008,63],[64,0,1008,64],[67,0,1008,67],[69,0,1008,69],[89,0,1008,89],[90,0,1008,90],[91,0,1008,91]],[[9,0,1009,9]],[[4,0,1010,4],[5,0,1010,5]],[[4,0,1011,4],[36,0,1011,36],[37,0,1011,37],[43,0,1011,43],[45,0,1011,45],[65,0,1011,65],[68,0,1011,68],[70,0,1011,70]],[[8,0,1012,8],[15,0,1012,15],[19,0,1012,19],[20,0,1012,20],[33,0,1012,33],[34,0,1012,34],[40,0,1012,40],[42,0,1012,42],[62,0,1012,62],[63,0,1012,63],[64,0,1012,64],[68,0,1012,68],[69,0,1012,69],[73,0,1012,73],[74,0,1012,74],[75,0,1012,75],[76,0,1012,76],[78,0,1012,78],[81,0,1012,81],[82,0,1012,82],[86,0,1012,86],[87,0,1012,87],[89,0,1012,89],[90,0,1012,90],[94,0,1012,94],[95,0,1012,95],[130,0,1012,130],[131,0,1012,131],[135,0,1012,135],[137,0,1012,137],[157,0,1012,157],[158,0,1012,158],[159,0,1012,159]],[[8,0,1013,8],[50,0,1013,50]],[[8,0,1014,8],[11,0,1014,11],[12,0,1014,12],[13,0,1014,13],[21,0,1014,21],[23,0,1014,23],[25,0,1014,25]],[[12,0,1015,12],[19,0,1015,19],[27,0,1015,27]],[[17,0,1016,17],[20,0,1016,20],[21,0,1016,21],[25,0,1016,25],[26,0,1016,26],[28,0,1016,28],[29,0,1016,29],[43,0,1016,43],[44,0,1016,44],[48,0,1016,48],[50,0,1016,50],[54,0,1016,54],[55,0,1016,55],[57,0,1016,57],[58,0,1016,58],[67,0,1016,67],[68,0,1016,68],[69,0,1016,69],[70,0,1016,70]],[[8,0,1017,8],[9,0,1017,9],[10,0,1017,10],[11,0,1017,11],[12,0,1017,12]],[[4,0,1018,4],[5,0,1018,5]],[[4,0,1019,4],[43,0,1019,43],[44,0,1019,44],[57,0,1019,57],[59,0,1019,59],[79,0,1019,79],[82,0,1019,82],[84,0,1019,84]],[[8,0,1020,8],[15,0,1020,15],[19,0,1020,19],[20,0,1020,20],[46,0,1020,46],[47,0,1020,47],[60,0,1020,60],[61,0,1020,61],[62,0,1020,62],[66,0,1020,66]],[[8,0,1021,8],[21,0,1021,21]],[[8,0,1022,8],[12,0,1022,12],[13,0,1022,13],[14,0,1022,14],[15,0,1022,15],[17,0,1022,17],[25,0,1022,25],[26,0,1022,26],[27,0,1022,27],[32,0,1022,32],[34,0,1022,34],[36,0,1022,36]],[[12,0,1023,12],[16,0,1023,16],[28,0,1023,28],[29,0,1023,29]],[[12,0,1024,12],[24,0,1024,24],[27,0,1024,27],[32,0,1024,32],[33,0,1024,33],[36,0,1024,36],[37,0,1024,37],[41,0,1024,41],[42,0,1024,42],[44,0,1024,44],[45,0,1024,45],[49,0,1024,49],[50,0,1024,50],[63,0,1024,63],[64,0,1024,64],[68,0,1024,68],[69,0,1024,69],[86,0,1024,86],[87,0,1024,87],[90,0,1024,90],[92,0,1024,92],[112,0,1024,112],[113,0,1024,113],[114,0,1024,114],[115,0,1024,115]],[[12,0,1025,12],[19,0,1025,19],[32,0,1025,32],[33,0,1025,33],[45,0,1025,45],[46,0,1025,46],[47,0,1025,47]],[[8,0,1026,8],[9,0,1026,9],[10,0,1026,10],[12,0,1026,12],[15,0,1026,15],[16,0,1026,16],[17,0,1026,17],[22,0,1026,22],[24,0,1026,24],[26,0,1026,26]],[[12,0,1027,12],[16,0,1027,16],[21,0,1027,21],[24,0,1027,24],[26,0,1027,26],[27,0,1027,27]],[[12,0,1028,12],[17,0,1028,17],[18,0,1028,18],[25,0,1028,25],[26,0,1028,26],[30,0,1028,30],[31,0,1028,31],[33,0,1028,33]],[[16,0,1029,16],[21,0,1029,21],[24,0,1029,24],[29,0,1029,29],[30,0,1029,30],[36,0,1029,36],[37,0,1029,37],[41,0,1029,41],[42,0,1029,42],[77,0,1029,77],[78,0,1029,78],[82,0,1029,82],[84,0,1029,84],[104,0,1029,104],[105,0,1029,105],[106,0,1029,106],[107,0,1029,107]],[[12,0,1030,12],[13,0,1030,13],[14,0,1030,14],[15,0,1030,15]],[[12,0,1031,12],[19,0,1031,19],[24,0,1031,24],[25,0,1031,25]],[[8,0,1032,8],[9,0,1032,9],[10,0,1032,10],[12,0,1032,12],[15,0,1032,15],[16,0,1032,16],[17,0,1032,17],[25,0,1032,25],[27,0,1032,27],[29,0,1032,29]],[[12,0,1033,12],[19,0,1033,19],[27,0,1033,27]],[[17,0,1034,17],[20,0,1034,20],[21,0,1034,21],[25,0,1034,25],[26,0,1034,26],[28,0,1034,28],[29,0,1034,29],[43,0,1034,43],[44,0,1034,44],[48,0,1034,48],[50,0,1034,50],[54,0,1034,54],[55,0,1034,55],[57,0,1034,57],[58,0,1034,58],[67,0,1034,67],[68,0,1034,68],[69,0,1034,69],[70,0,1034,70]],[[8,0,1035,8],[9,0,1035,9],[10,0,1035,10],[11,0,1035,11],[12,0,1035,12]],[[4,0,1036,4],[5,0,1036,5]],[[4,0,1037,4]],[],[],[],[],[],[],[[7,0,1044,7]],[[4,0,1045,4],[33,0,1045,33],[34,0,1045,34],[38,0,1045,38],[40,0,1045,40],[60,0,1045,60],[63,0,1045,63],[65,0,1045,65]],[[8,0,1046,8],[14,0,1046,14],[19,0,1046,19],[22,0,1046,22],[26,0,1046,26],[27,0,1046,27],[62,0,1046,62],[63,0,1046,63],[67,0,1046,67],[69,0,1046,69],[89,0,1046,89],[90,0,1046,90],[91,0,1046,91]],[[8,0,1047,8],[15,0,1047,15],[20,0,1047,20],[21,0,1047,21],[24,0,1047,24],[25,0,1047,25],[29,0,1047,29],[30,0,1047,30],[32,0,1047,32],[33,0,1047,33],[47,0,1047,47],[48,0,1047,48],[52,0,1047,52],[54,0,1047,54],[58,0,1047,58],[59,0,1047,59],[61,0,1047,61],[62,0,1047,62],[71,0,1047,71],[72,0,1047,72],[73,0,1047,73],[74,0,1047,74]],[[4,0,1048,4],[5,0,1048,5]],[[4,0,1049,4]],[],[[7,0,1051,7]],[[4,0,1052,4],[39,0,1052,39],[40,0,1052,40],[44,0,1052,44],[46,0,1052,46],[66,0,1052,66],[69,0,1052,69],[71,0,1052,71]],[[8,0,1053,8],[12,0,1053,12],[32,0,1053,32],[36,0,1053,36],[40,0,1053,40],[44,0,1053,44],[64,0,1053,64],[65,0,1053,65],[71,0,1053,71],[76,0,1053,76],[77,0,1053,77],[79,0,1053,79]],[[12,0,1054,12],[19,0,1054,19],[20,0,1054,20],[24,0,1054,24],[25,0,1054,25],[42,0,1054,42],[43,0,1054,43],[47,0,1054,47],[48,0,1054,48],[49,0,1054,49]],[[9,0,1055,9]],[[8,0,1056,8],[12,0,1056,12],[20,0,1056,20],[23,0,1056,23],[25,0,1056,25],[26,0,1056,26]],[[8,0,1057,8],[16,0,1057,16],[17,0,1057,17],[21,0,1057,21],[22,0,1057,22],[26,0,1057,26],[27,0,1057,27],[44,0,1057,44],[45,0,1057,45],[49,0,1057,49],[50,0,1057,50],[51,0,1057,51]],[[8,0,1058,8],[28,0,1058,28],[29,0,1058,29],[36,0,1058,36],[37,0,1058,37],[40,0,1058,40],[41,0,1058,41],[43,0,1058,43]],[[12,0,1059,12],[16,0,1059,16],[21,0,1059,21],[22,0,1059,22],[29,0,1059,29],[30,0,1059,30],[34,0,1059,34],[35,0,1059,35],[38,0,1059,38],[39,0,1059,39],[43,0,1059,43],[44,0,1059,44],[45,0,1059,45],[49,0,1059,49],[50,0,1059,50],[53,0,1059,53],[54,0,1059,54],[59,0,1059,59],[61,0,1059,61]],[[16,0,1060,16],[89,0,1060,89]],[[16,0,1061,16],[22,0,1061,22],[27,0,1061,27],[30,0,1061,30],[34,0,1061,34],[35,0,1061,35],[38,0,1061,38],[39,0,1061,39],[43,0,1061,43],[44,0,1061,44],[45,0,1061,45]],[[16,0,1062,16],[21,0,1062,21],[22,0,1062,22],[29,0,1062,29],[30,0,1062,30],[37,0,1062,37],[38,0,1062,38],[40,0,1062,40]],[[20,0,1063,20],[24,0,1063,24],[27,0,1063,27],[28,0,1063,28],[42,0,1063,42],[44,0,1063,44]],[[24,0,1064,24],[32,0,1064,32],[35,0,1064,35],[43,0,1064,43],[44,0,1064,44],[50,0,1064,50],[51,0,1064,51],[55,0,1064,55],[56,0,1064,56],[91,0,1064,91],[92,0,1064,92],[99,0,1064,99],[101,0,1064,101],[104,0,1064,104],[105,0,1064,105],[119,0,1064,119],[120,0,1064,120],[121,0,1064,121],[122,0,1064,122]],[[21,0,1065,21]],[[25,0,1066,25]],[[24,0,1067,24],[32,0,1067,32],[33,0,1067,33],[37,0,1067,37],[38,0,1067,38],[45,0,1067,45],[46,0,1067,46],[63,0,1067,63],[64,0,1067,64],[68,0,1067,68],[69,0,1067,69],[70,0,1067,70]],[[21,0,1068,21]],[[16,0,1069,16],[17,0,1069,17],[18,0,1069,18],[19,0,1069,19]],[[13,0,1070,13]],[[17,0,1071,17],[19,0,1071,19],[52,0,1071,52]],[[16,0,1072,16],[20,0,1072,20],[23,0,1072,23],[24,0,1072,24],[38,0,1072,38],[40,0,1072,40]],[[20,0,1073,20],[28,0,1073,28],[31,0,1073,31],[39,0,1073,39],[40,0,1073,40],[46,0,1073,46],[47,0,1073,47],[51,0,1073,51],[52,0,1073,52],[87,0,1073,87],[88,0,1073,88],[92,0,1073,92],[94,0,1073,94],[97,0,1073,97],[98,0,1073,98],[112,0,1073,112],[113,0,1073,113],[114,0,1073,114],[115,0,1073,115]],[[17,0,1074,17]],[[21,0,1075,21]],[[20,0,1076,20],[26,0,1076,26],[33,0,1076,33],[36,0,1076,36],[40,0,1076,40],[41,0,1076,41],[44,0,1076,44],[45,0,1076,45],[49,0,1076,49],[50,0,1076,50],[51,0,1076,51]],[[20,0,1077,20],[24,0,1077,24],[31,0,1077,31],[35,0,1077,35],[39,0,1077,39],[43,0,1077,43],[49,0,1077,49],[53,0,1077,53],[60,0,1077,60],[61,0,1077,61],[78,0,1077,78],[80,0,1077,80]],[[24,0,1078,24],[32,0,1078,32],[33,0,1078,33],[37,0,1078,37],[38,0,1078,38],[45,0,1078,45],[46,0,1078,46],[63,0,1078,63],[64,0,1078,64],[68,0,1078,68],[69,0,1078,69],[70,0,1078,70]],[[21,0,1079,21]],[[20,0,1080,20],[77,0,1080,77]],[[17,0,1081,17]],[[13,0,1082,13]],[[8,0,1083,8],[9,0,1083,9],[10,0,1083,10],[11,0,1083,11]],[[8,0,1084,8],[15,0,1084,15],[23,0,1084,23],[24,0,1084,24]],[[4,0,1085,4],[5,0,1085,5]],[[4,0,1086,4]],[],[],[[7,0,1089,7]],[[4,0,1090,4],[44,0,1090,44],[45,0,1090,45],[49,0,1090,49],[51,0,1090,51],[71,0,1090,71],[74,0,1090,74],[76,0,1090,76]],[[8,0,1091,8],[61,0,1091,61]],[[8,0,1092,8],[12,0,1092,12],[22,0,1092,22],[25,0,1092,25],[27,0,1092,27],[28,0,1092,28]],[[8,0,1093,8],[14,0,1093,14],[28,0,1093,28],[31,0,1093,31],[33,0,1093,33],[34,0,1093,34]],[[8,0,1094,8],[116,0,1094,116]],[[8,0,1095,8],[30,0,1095,30]],[[8,0,1096,8],[13,0,1096,13],[19,0,1096,19],[20,0,1096,20],[23,0,1096,23],[25,0,1096,25],[30,0,1096,30],[31,0,1096,31],[35,0,1096,35],[41,0,1096,41],[42,0,1096,42],[49,0,1096,49],[50,0,1096,50],[54,0,1096,54],[55,0,1096,55],[57,0,1096,57]],[[12,0,1097,12],[39,0,1097,39]],[[12,0,1098,12],[16,0,1098,16],[36,0,1098,36],[40,0,1098,40],[60,0,1098,60],[61,0,1098,61],[67,0,1098,67],[70,0,1098,70],[71,0,1098,71],[73,0,1098,73]],[[16,0,1099,16],[22,0,1099,22],[41,0,1099,41],[44,0,1099,44],[64,0,1099,64],[65,0,1099,65],[69,0,1099,69],[70,0,1099,70],[77,0,1099,77],[78,0,1099,78],[80,0,1099,80],[81,0,1099,81],[88,0,1099,88],[89,0,1099,89],[93,0,1099,93],[98,0,1099,98],[101,0,1099,101],[102,0,1099,102],[103,0,1099,103]],[[16,0,1100,16],[20,0,1100,20],[39,0,1100,39],[41,0,1100,41]],[[20,0,1101,20],[34,0,1101,34],[35,0,1101,35],[38,0,1101,38],[39,0,1101,39],[42,0,1101,42],[47,0,1101,47],[48,0,1101,48]],[[17,0,1102,17]],[[21,0,1103,21]],[[20,0,1104,20],[30,0,1104,30],[31,0,1104,31],[34,0,1104,34],[35,0,1104,35],[38,0,1104,38],[43,0,1104,43],[44,0,1104,44]],[[17,0,1105,17]],[[13,0,1106,13]],[[17,0,1107,17]],[[16,0,1108,16],[26,0,1108,26],[29,0,1108,29],[33,0,1108,33],[34,0,1108,34]],[[13,0,1109,13]],[[9,0,1110,9]],[[8,0,1111,8],[15,0,1111,15]],[[12,0,1112,12],[22,0,1112,22]],[[12,0,1113,12],[26,0,1113,26]],[[9,0,1114,9],[10,0,1114,10]],[[4,0,1115,4],[5,0,1115,5]],[[4,0,1116,4]],[],[],[],[],[],[],[[7,0,1123,7]],[[4,0,1124,4],[16,0,1124,16],[17,0,1124,17],[22,0,1124,22]],[[8,0,1125,8],[15,0,1125,15],[19,0,1125,19],[20,0,1125,20],[25,0,1125,25],[26,0,1125,26],[32,0,1125,32],[34,0,1125,34],[35,0,1125,35],[36,0,1125,36],[40,0,1125,40],[41,0,1125,41],[45,0,1125,45],[46,0,1125,46],[47,0,1125,47],[48,0,1125,48],[49,0,1125,49],[50,0,1125,50]],[[4,0,1126,4],[5,0,1126,5]],[[1,0,1127,1]],[[0,0,1128,0],[125190,0,1128,125190]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1749,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlGbn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jdW1lbnQgYW5kIG11bHRpcGxlIHN1YiBDb2xsZWN0aW9ucyBpbiB0aGF0IERvY3VtZW50XHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdWJDb2xsZWN0aW9uUXVlcnkge1xyXG5cclxuICAvKiogdGhlIG5hbWUgb2YgdGhlIHN1YkNvbGxlY3Rpb24gdG8gYmUgcmVhZC4gKi9cclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTcGVjaWZpZWQgRG9jdW1lbnQgbmFtZSBpZiBtdWx0aXBsZSBkb2N1bWVudHMgaW4gY29sbGVjdGlvbiBpcyBub3QgdXNlZCAqL1xyXG4gIGRvY0lkPzogc3RyaW5nO1xyXG5cclxuICAvKiogQW55IFN1YkNvbGxlY3Rpb25zIHRvIGJlIHJlYWQgaW4gdGhlIENvbGxlY3Rpb24gKi9cclxuICBzdWJDb2xsZWN0aW9ucz86IFN1YkNvbGxlY3Rpb25RdWVyeVtdO1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIFRoZSBDb2xsZWN0aW9uIFF1ZXJ5Rm4uXHJcbiAgICpcclxuICAgKiBFeGFtcGxlOlxyXG4gICAqIGNvbnN0IHF1ZXJ5ID0gcmVmLndoZXJlKCd0eXBlJywgJz09JywgJ0Jvb2snKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc+JyAxOC4wMClcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHJpY2UnLCAnPCcgMTAwLjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdjYXRlZ29yeScsICc9PScsICdGaWN0aW9uJylcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHVibGlzaGVyJywgJz09JywgJ0JpZ1B1Ymxpc2hlcicpXHJcbiAgICpcclxuICAgKi9cclxuICBxdWVyeUZuPzogUXVlcnlGbjtcclxufVxyXG4iXX0=","start":12,"end":1626},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":1628,"end":1749}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlGbn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jdW1lbnQgYW5kIG11bHRpcGxlIHN1YiBDb2xsZWN0aW9ucyBpbiB0aGF0IERvY3VtZW50XHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdWJDb2xsZWN0aW9uUXVlcnkge1xyXG5cclxuICAvKiogdGhlIG5hbWUgb2YgdGhlIHN1YkNvbGxlY3Rpb24gdG8gYmUgcmVhZC4gKi9cclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTcGVjaWZpZWQgRG9jdW1lbnQgbmFtZSBpZiBtdWx0aXBsZSBkb2N1bWVudHMgaW4gY29sbGVjdGlvbiBpcyBub3QgdXNlZCAqL1xyXG4gIGRvY0lkPzogc3RyaW5nO1xyXG5cclxuICAvKiogQW55IFN1YkNvbGxlY3Rpb25zIHRvIGJlIHJlYWQgaW4gdGhlIENvbGxlY3Rpb24gKi9cclxuICBzdWJDb2xsZWN0aW9ucz86IFN1YkNvbGxlY3Rpb25RdWVyeVtdO1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIFRoZSBDb2xsZWN0aW9uIFF1ZXJ5Rm4uXHJcbiAgICpcclxuICAgKiBFeGFtcGxlOlxyXG4gICAqIGNvbnN0IHF1ZXJ5ID0gcmVmLndoZXJlKCd0eXBlJywgJz09JywgJ0Jvb2snKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc+JyAxOC4wMClcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHJpY2UnLCAnPCcgMTAwLjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdjYXRlZ29yeScsICc9PScsICdGaWN0aW9uJylcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHVibGlzaGVyJywgJz09JywgJ0JpZ1B1Ymxpc2hlcicpXHJcbiAgICpcclxuICAgKi9cclxuICBxdWVyeUZuPzogUXVlcnlGbjtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlGbn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jdW1lbnQgYW5kIG11bHRpcGxlIHN1YiBDb2xsZWN0aW9ucyBpbiB0aGF0IERvY3VtZW50XHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdWJDb2xsZWN0aW9uUXVlcnkge1xyXG5cclxuICAvKiogdGhlIG5hbWUgb2YgdGhlIHN1YkNvbGxlY3Rpb24gdG8gYmUgcmVhZC4gKi9cclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTcGVjaWZpZWQgRG9jdW1lbnQgbmFtZSBpZiBtdWx0aXBsZSBkb2N1bWVudHMgaW4gY29sbGVjdGlvbiBpcyBub3QgdXNlZCAqL1xyXG4gIGRvY0lkPzogc3RyaW5nO1xyXG5cclxuICAvKiogQW55IFN1YkNvbGxlY3Rpb25zIHRvIGJlIHJlYWQgaW4gdGhlIENvbGxlY3Rpb24gKi9cclxuICBzdWJDb2xsZWN0aW9ucz86IFN1YkNvbGxlY3Rpb25RdWVyeVtdO1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIFRoZSBDb2xsZWN0aW9uIFF1ZXJ5Rm4uXHJcbiAgICpcclxuICAgKiBFeGFtcGxlOlxyXG4gICAqIGNvbnN0IHF1ZXJ5ID0gcmVmLndoZXJlKCd0eXBlJywgJz09JywgJ0Jvb2snKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc+JyAxOC4wMClcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHJpY2UnLCAnPCcgMTAwLjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdjYXRlZ29yeScsICc9PScsICdGaWN0aW9uJylcclxuICAgKiAgICAgICAgICAgICAgICAgIC53aGVyZSgncHVibGlzaGVyJywgJz09JywgJ0JpZ1B1Ymxpc2hlcicpXHJcbiAgICpcclxuICAgKi9cclxuICBxdWVyeUZuPzogUXVlcnlGbjtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"sub-collection-query.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/sub-collection-query.ts"],"names":[],"mappings":[[[0,0,0,0],[69,0,0,69]]],"sourcesContent":["/* For Listening to a Doc and multiple sub collections in that doc */\r\n\r\nimport {QueryFn} from './interfaces';\r\n\r\n/**\r\n * For Listening to a Document and multiple sub Collections in that Document\r\n */\r\n\r\nexport interface SubCollectionQuery {\r\n\r\n  /** the name of the subCollection to be read. */\r\n  name: string;\r\n\r\n  /** Specified Document name if multiple documents in collection is not used */\r\n  docId?: string;\r\n\r\n  /** Any SubCollections to be read in the Collection */\r\n  subCollections?: SubCollectionQuery[];\r\n\r\n  /**\r\n   *\r\n   * The Collection QueryFn.\r\n   *\r\n   * Example:\r\n   * const query = ref.where('type', '==', 'Book')\r\n   *                  .where('price', '>' 18.00)\r\n   *                  .where('price', '<' 100.00)\r\n   *                  .where('category', '==', 'Fiction')\r\n   *                  .where('publisher', '==', 'BigPublisher')\r\n   *\r\n   */\r\n  queryFn?: QueryFn;\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,2,0],[1614,0,2,1614]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8121,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","start":12,"end":7998},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":8000,"end":8121}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[7986,0,1,7986]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3069,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5leHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVXcmFwcGVyIHtcclxuICBmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHA7XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlO1xyXG5cclxuICAvLyBkb2NcclxuICBkb2M8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj47XHJcblxyXG4gIHNldDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBULCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj47XHJcblxyXG4gIHVwZGF0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBVcGRhdGVEYXRhPFBhcnRpYWw8VD4+LCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGRlbGV0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTx2b2lkPjtcclxuXHJcbiAgLy8gY29sbGVjdGlvblxyXG4gIC8vIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeURvY3VtZW50U25hcHNob3Q8VD5bXT47XHJcbiAgY29sbGVjdGlvbjxUPihxdWVyeTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+O1xyXG5cclxufVxyXG4iXX0=","start":12,"end":2946},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":2948,"end":3069}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5leHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVXcmFwcGVyIHtcclxuICBmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHA7XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlO1xyXG5cclxuICAvLyBkb2NcclxuICBkb2M8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj47XHJcblxyXG4gIHNldDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBULCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj47XHJcblxyXG4gIHVwZGF0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBVcGRhdGVEYXRhPFBhcnRpYWw8VD4+LCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGRlbGV0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTx2b2lkPjtcclxuXHJcbiAgLy8gY29sbGVjdGlvblxyXG4gIC8vIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeURvY3VtZW50U25hcHNob3Q8VD5bXT47XHJcbiAgY29sbGVjdGlvbjxUPihxdWVyeTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+O1xyXG5cclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5leHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVXcmFwcGVyIHtcclxuICBmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHA7XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlO1xyXG5cclxuICAvLyBkb2NcclxuICBkb2M8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8RG9jdW1lbnRTbmFwc2hvdDxUPj47XHJcblxyXG4gIHNldDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBULCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGFkZDxUPihjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBkYXRhOiBUKTogT2JzZXJ2YWJsZTxEb2N1bWVudFJlZmVyZW5jZTxUPj47XHJcblxyXG4gIHVwZGF0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+LCBkYXRhOiBVcGRhdGVEYXRhPFBhcnRpYWw8VD4+LCBvcHRpb25zPzogU2V0T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGRlbGV0ZTxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTx2b2lkPjtcclxuXHJcbiAgLy8gY29sbGVjdGlvblxyXG4gIC8vIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeURvY3VtZW50U25hcHNob3Q8VD5bXT47XHJcbiAgY29sbGVjdGlvbjxUPihxdWVyeTogUXVlcnk8VD4pOiBPYnNlcnZhYmxlPFF1ZXJ5U25hcHNob3Q8VD4+O1xyXG5cclxufVxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[2934,0,1,2934]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4564,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":28,"imported":{"type":"Identifier","start":24,"end":28,"name":"noop"},"local":{"type":"Identifier","start":24,"end":28,"name":"noop"}}],"source":{"type":"Literal","start":36,"end":42,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":45,"end":98,"specifiers":[{"type":"ImportSpecifier","start":54,"end":57,"imported":{"type":"Identifier","start":54,"end":57,"name":"map"},"local":{"type":"Identifier","start":54,"end":57,"name":"map"}},{"type":"ImportSpecifier","start":59,"end":68,"imported":{"type":"Identifier","start":59,"end":68,"name":"startWith"},"local":{"type":"Identifier","start":59,"end":68,"name":"startWith"}},{"type":"ImportSpecifier","start":70,"end":73,"imported":{"type":"Identifier","start":70,"end":73,"name":"tap"},"local":{"type":"Identifier","start":70,"end":73,"name":"tap"}}],"source":{"type":"Literal","start":81,"end":97,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":100,"end":128,"declarations":[{"type":"VariableDeclarator","start":106,"end":127,"id":{"type":"Identifier","start":106,"end":109,"name":"nop"},"init":{"type":"ArrowFunctionExpression","start":112,"end":127,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":118,"end":127,"callee":{"type":"Identifier","start":118,"end":121,"name":"tap"},"arguments":[{"type":"Identifier","start":122,"end":126,"name":"noop"}],"optional":false}}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":512,"end":924,"declaration":{"type":"VariableDeclaration","start":519,"end":924,"declarations":[{"type":"VariableDeclarator","start":525,"end":923,"id":{"type":"Identifier","start":525,"end":546,"name":"combineLatestToObject"},"init":{"type":"ArrowFunctionExpression","start":549,"end":923,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":550,"end":561,"name":"observables"}],"body":{"type":"BlockStatement","start":566,"end":923,"body":[{"type":"VariableDeclaration","start":573,"end":611,"declarations":[{"type":"VariableDeclarator","start":579,"end":610,"id":{"type":"Identifier","start":579,"end":583,"name":"keys"},"init":{"type":"CallExpression","start":586,"end":610,"callee":{"type":"MemberExpression","start":586,"end":597,"object":{"type":"Identifier","start":586,"end":592,"name":"Object"},"property":{"type":"Identifier","start":593,"end":597,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":598,"end":609,"name":"observables"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":617,"end":920,"argument":{"type":"CallExpression","start":624,"end":919,"callee":{"type":"MemberExpression","start":624,"end":817,"object":{"type":"CallExpression","start":624,"end":812,"callee":{"type":"Identifier","start":624,"end":637,"name":"combineLatest"},"arguments":[{"type":"CallExpression","start":638,"end":811,"callee":{"type":"MemberExpression","start":638,"end":646,"object":{"type":"Identifier","start":638,"end":642,"name":"keys"},"property":{"type":"Identifier","start":643,"end":646,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":647,"end":810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":647,"end":648,"name":"k"}],"body":{"type":"BlockStatement","start":652,"end":810,"body":[{"type":"VariableDeclaration","start":663,"end":690,"declarations":[{"type":"VariableDeclarator","start":669,"end":689,"id":{"type":"Identifier","start":669,"end":672,"name":"obs"},"init":{"type":"MemberExpression","start":675,"end":689,"object":{"type":"Identifier","start":675,"end":686,"name":"observables"},"property":{"type":"Identifier","start":687,"end":688,"name":"k"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":700,"end":803,"argument":{"type":"ConditionalExpression","start":707,"end":802,"test":{"type":"CallExpression","start":707,"end":725,"callee":{"type":"MemberExpression","start":707,"end":720,"object":{"type":"Identifier","start":707,"end":712,"name":"Array"},"property":{"type":"Identifier","start":713,"end":720,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":721,"end":724,"name":"obs"}],"optional":false},"consequent":{"type":"CallExpression","start":741,"end":771,"callee":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"MemberExpression","start":741,"end":747,"object":{"type":"Identifier","start":741,"end":744,"name":"obs"},"property":{"type":"Literal","start":745,"end":746,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":748,"end":752,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":753,"end":770,"callee":{"type":"Identifier","start":753,"end":762,"name":"startWith"},"arguments":[{"type":"MemberExpression","start":763,"end":769,"object":{"type":"Identifier","start":763,"end":766,"name":"obs"},"property":{"type":"Literal","start":767,"end":768,"value":1,"raw":"1"},"computed":true,"optional":false}],"optional":false}],"optional":false},"alternate":{"type":"CallExpression","start":787,"end":802,"callee":{"type":"MemberExpression","start":787,"end":795,"object":{"type":"Identifier","start":787,"end":790,"name":"obs"},"property":{"type":"Identifier","start":791,"end":795,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":796,"end":801,"callee":{"type":"Identifier","start":796,"end":799,"name":"nop"},"arguments":[],"optional":false}],"optional":false}}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":813,"end":817,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":818,"end":918,"callee":{"type":"Identifier","start":818,"end":821,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":822,"end":917,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":822,"end":823,"name":"b"}],"body":{"type":"CallExpression","start":827,"end":917,"callee":{"type":"MemberExpression","start":827,"end":835,"object":{"type":"Identifier","start":827,"end":828,"name":"b"},"property":{"type":"Identifier","start":829,"end":835,"name":"reduce"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":836,"end":912,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":837,"end":840,"name":"acc"},{"type":"Identifier","start":842,"end":845,"name":"val"},{"type":"Identifier","start":847,"end":848,"name":"i"}],"body":{"type":"CallExpression","start":854,"end":911,"callee":{"type":"MemberExpression","start":854,"end":867,"object":{"type":"Identifier","start":854,"end":860,"name":"Object"},"property":{"type":"Identifier","start":861,"end":867,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":868,"end":890,"callee":{"type":"MemberExpression","start":868,"end":881,"object":{"type":"Identifier","start":868,"end":874,"name":"Object"},"property":{"type":"Identifier","start":875,"end":881,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":882,"end":884,"properties":[]},{"type":"Identifier","start":886,"end":889,"name":"acc"}],"optional":false},{"type":"ObjectExpression","start":892,"end":910,"properties":[{"type":"Property","start":894,"end":908,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":895,"end":902,"object":{"type":"Identifier","start":895,"end":899,"name":"keys"},"property":{"type":"Identifier","start":900,"end":901,"name":"i"},"computed":true,"optional":false},"value":{"type":"Identifier","start":905,"end":908,"name":"val"},"kind":"init"}]}],"optional":false}},{"type":"ObjectExpression","start":914,"end":916,"properties":[]}],"optional":false}}],"optional":false}],"optional":false}}]}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","start":926,"end":4432},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/rxjs-ops/module.js.map","start":4434,"end":4564}]},"code":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => (Object.assign(Object.assign({}, acc), { [keys[i]]: val })), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/rxjs-ops/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","originalSourcemap":{"version":3,"file":"combine-latest-to-object.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/rxjs-ops/combine-latest-to-object.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,42],[36,0,0,48],[42,0,0,54],[43,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[12,0,1,11],[14,0,1,13],[23,0,1,22],[25,0,1,24],[28,0,1,27],[30,0,1,29],[36,0,1,35],[52,0,1,51],[53,0,1,52]],[[0,0,13,0],[6,0,13,6],[9,0,13,9],[12,0,13,12],[15,0,13,18],[17,0,13,20],[18,0,13,21],[21,0,13,24],[22,0,13,28],[26,0,13,32],[27,0,13,33],[28,0,13,34]],[[0,0,15,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[7,0,35,7],[13,0,35,13],[34,0,35,34],[37,0,35,37],[38,0,39,4],[49,0,39,20],[51,0,39,40],[53,0,39,42]],[[4,0,40,2],[10,0,40,8],[14,0,40,12],[17,0,40,15],[23,0,40,21],[24,0,40,22],[28,0,40,26],[29,0,40,27],[40,0,40,38],[41,0,40,39],[42,0,40,40]],[[4,0,42,2],[11,0,42,9],[24,0,42,22],[25,0,43,4],[29,0,43,8],[30,0,43,9],[33,0,43,12],[34,0,43,13],[35,0,43,14],[36,0,43,15],[38,0,43,17]],[[8,0,44,6],[14,0,44,12],[17,0,44,15],[20,0,44,18],[31,0,44,29],[32,0,44,30],[33,0,44,31],[34,0,44,32],[35,0,44,33]],[[8,0,46,6],[15,0,46,13],[20,0,46,18],[21,0,46,19],[28,0,46,26],[29,0,46,27],[32,0,46,30],[33,0,46,31]],[[12,0,47,8],[13,0,47,9],[14,0,47,10],[17,0,47,13],[18,0,47,14],[19,0,47,15],[20,0,47,16],[21,0,47,17],[25,0,47,21],[26,0,47,22],[35,0,47,31],[36,0,47,32],[39,0,47,35],[40,0,47,36],[41,0,47,37],[42,0,47,38],[43,0,47,39],[44,0,47,40]],[[12,0,48,8],[13,0,48,9],[14,0,48,10],[17,0,48,13],[18,0,48,14],[22,0,48,18],[23,0,48,20],[26,0,48,23],[28,0,48,25],[29,0,48,26],[30,0,48,27]],[[4,0,49,4],[5,0,49,5],[6,0,49,6],[7,0,50,3],[8,0,50,4],[12,0,50,8],[13,0,51,4],[16,0,51,7],[17,0,51,8],[18,0,51,9],[19,0,51,10],[21,0,51,12],[22,0,51,13],[23,0,51,14],[24,0,51,15],[30,0,51,21],[31,0,51,22],[32,0,51,23],[35,0,51,26],[37,0,51,28],[40,0,51,31],[42,0,51,33],[43,0,51,34],[45,0,51,36],[47,0,51,38],[48,0,51,39],[49,0,51,40],[51,0,51,42],[54,0,51,45],[57,0,51,48],[59,0,51,50],[60,0,51,51],[64,0,51,55],[65,0,51,56],[66,0,51,57],[67,0,51,58],[68,0,51,59],[70,0,51,61],[73,0,51,64],[75,0,51,66],[76,0,51,67],[78,0,51,69],[80,0,51,71],[81,0,51,72],[82,0,51,73],[83,0,52,3],[84,0,52,4]],[[0,0,53,0],[1,0,53,1],[2,0,53,2]]],"sourcesContent":["import { combineLatest, noop, Observable } from 'rxjs';\r\nimport {map, startWith, tap } from 'rxjs/operators';\r\n\r\nexport interface OperatorDict<X> {\r\n  [key: string]: Observable<X> | [Observable<X>, X];\r\n}\r\n\r\n/**\r\n * Extracts the type `T` of an `Observable<T>`\r\n */\r\nexport type ExtractObservableType<A> = A extends Observable<infer B> ? B : never;\r\n\r\n\r\nconst nop = <T>() => tap<T>(noop);\r\n\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = <\r\n  TIn extends OperatorDict<any>, TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K]> }\r\n  // TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K] extends Array<any> ? TIn[K][0] : TIn[K]> }\r\n\r\n  >(observables: TIn): Observable<TOut> => {\r\n  const keys = Object.keys(observables);\r\n\r\n  return combineLatest(\r\n    keys.map(k => {\r\n      const obs = observables[k];\r\n\r\n      return Array.isArray(obs)\r\n        ? obs[0].pipe(startWith(obs[1]))\r\n        : obs.pipe( nop());\r\n    }),\r\n  ).pipe(\r\n    map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {}))\r\n  );\r\n};\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,30],[36,0,0,36],[42,0,0,42],[43,0,0,43]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[12,0,1,12],[14,0,1,14],[23,0,1,23],[25,0,1,25],[28,0,1,28],[30,0,1,30],[36,0,1,36],[52,0,1,52],[53,0,1,53]],[[0,0,2,0],[6,0,2,6],[9,0,2,9],[12,0,2,12],[15,0,2,15],[17,0,2,17],[18,0,2,18],[21,0,2,21],[22,0,2,22],[26,0,2,26],[27,0,2,27],[28,0,2,28]],[[0,0,3,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,22,3]],[[0,0,23,0],[6,0,23,6],[7,0,23,7],[13,0,23,13],[34,0,23,34],[37,0,23,37],[38,0,23,38],[49,0,23,49],[51,0,23,51],[53,0,23,53]],[[4,0,24,4],[10,0,24,10],[14,0,24,14],[17,0,24,17],[23,0,24,23],[24,0,24,24],[28,0,24,28],[29,0,24,29],[40,0,24,40],[41,0,24,41],[42,0,24,42]],[[4,0,25,4],[11,0,25,11],[24,0,25,24],[25,0,25,25],[29,0,25,29],[30,0,25,30],[33,0,25,33],[34,0,25,34],[35,0,25,35],[36,0,25,36],[38,0,25,38]],[[8,0,26,8],[14,0,26,14],[17,0,26,17],[20,0,26,20],[31,0,26,31],[32,0,26,32],[33,0,26,33],[34,0,26,34],[35,0,26,35]],[[8,0,27,8],[15,0,27,15],[20,0,27,20],[21,0,27,21],[28,0,27,28],[29,0,27,29],[32,0,27,32],[33,0,27,33]],[[12,0,28,12],[13,0,28,13],[14,0,28,14],[17,0,28,17],[18,0,28,18],[19,0,28,19],[20,0,28,20],[21,0,28,21],[25,0,28,25],[26,0,28,26],[35,0,28,35],[36,0,28,36],[39,0,28,39],[40,0,28,40],[41,0,28,41],[42,0,28,42],[43,0,28,43],[44,0,28,44]],[[12,0,29,12],[13,0,29,13],[14,0,29,14],[17,0,29,17],[18,0,29,18],[22,0,29,22],[23,0,29,23],[26,0,29,26],[28,0,29,28],[29,0,29,29],[30,0,29,30]],[[4,0,30,4],[5,0,30,5],[6,0,30,6],[7,0,30,7],[8,0,30,8],[12,0,30,12],[13,0,30,13],[16,0,30,16],[17,0,30,17],[18,0,30,18],[19,0,30,19],[21,0,30,21],[22,0,30,22],[23,0,30,23],[24,0,30,24],[30,0,30,30],[31,0,30,31],[32,0,30,32],[35,0,30,35],[37,0,30,37],[40,0,30,40],[42,0,30,42],[43,0,30,43],[45,0,30,45],[47,0,30,47],[48,0,30,48],[81,0,30,54],[84,0,30,57],[89,0,30,59],[90,0,30,60],[94,0,30,64],[95,0,30,65],[96,0,30,66],[97,0,30,67],[98,0,30,68],[100,0,30,70],[103,0,30,73],[107,0,30,76],[109,0,30,78],[111,0,30,80],[112,0,30,81],[113,0,30,82],[114,0,30,83],[115,0,30,84]],[[0,0,31,0],[1,0,31,1],[2,0,31,2]],[[0,0,32,0],[3506,0,32,3506]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2081,"body":[{"type":"ExportNamedDeclaration","start":96,"end":128,"declaration":{"type":"ClassDeclaration","start":103,"end":128,"id":{"type":"Identifier","start":109,"end":123,"name":"FirebaseConfig"},"superClass":null,"body":{"type":"ClassBody","start":124,"end":128,"body":[]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":218,"end":330,"declaration":{"type":"VariableDeclaration","start":225,"end":330,"declarations":[{"type":"VariableDeclarator","start":231,"end":329,"id":{"type":"Identifier","start":231,"end":253,"name":"FIRESTORE_USE_EMULATOR"},"init":{"type":"ObjectExpression","start":256,"end":329,"properties":[{"type":"Property","start":291,"end":308,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":291,"end":295,"name":"host"},"value":{"type":"Literal","start":297,"end":308,"value":"localhost","raw":"'localhost'"},"kind":"init"},{"type":"Property","start":315,"end":325,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":315,"end":319,"name":"port"},"value":{"type":"Literal","start":321,"end":325,"value":8080,"raw":"8080"},"kind":"init"}]}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","start":464,"end":1954},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":1956,"end":2081}]},"code":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"originalCode":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/config.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[27,0,3,27]],[[1,0,5,1]],[[0,0,13,0],[86,0,13,86]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[35,0,15,35],[38,0,15,63]],[[4,0,16,2],[26,0,16,24]],[[4,0,17,2],[8,0,17,6],[10,0,17,8],[21,0,17,19]],[[4,0,18,2],[8,0,18,6],[10,0,18,8],[14,0,18,12]],[[1,0,19,1],[2,0,19,2]],[[0,0,22,0],[43,0,22,43]],[[0,0,23,0],[26,0,23,26]],[[0,0,24,0],[26,0,24,26]],[[0,0,25,0],[23,0,25,23]],[[0,0,26,0],[4,0,26,4]]],"sourcesContent":["// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\n\r\nexport class FirebaseConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FirestoreEmulatorConfig {\r\n  // useEmulator: boolean;\r\n  host: string;\r\n  port: number;\r\n}\r\n\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\n\r\nexport const FIRESTORE_USE_EMULATOR: FirestoreEmulatorConfig = {\r\n  // useEmulator: false,\r\n  host: 'localhost',\r\n  port: 8080,\r\n};\r\n\r\n\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,2,0],[6,0,2,6],[13,0,2,13],[27,0,2,27]],[[1,0,3,1]],[[0,0,4,0],[86,0,4,86]],[[0,0,5,0],[6,0,5,6],[7,0,5,7],[13,0,5,13],[35,0,5,35],[38,0,5,38]],[[4,0,6,4],[26,0,6,26]],[[4,0,7,4],[8,0,7,8],[10,0,7,10],[21,0,7,21]],[[4,0,8,4],[8,0,8,8],[10,0,8,10],[14,0,8,14]],[[1,0,9,1],[2,0,9,2]],[[0,0,10,0],[43,0,10,43]],[[0,0,11,0],[26,0,11,26]],[[0,0,12,0],[26,0,12,26]],[[0,0,13,0],[23,0,13,23]],[[0,0,14,0],[4,0,14,4]],[[0,0,15,0],[1490,0,15,1490]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5250,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}},{"type":"ImportSpecifier","start":19,"end":27,"imported":{"type":"Identifier","start":19,"end":27,"name":"Optional"},"local":{"type":"Identifier","start":19,"end":27,"name":"Optional"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"},"local":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":110,"specifiers":[{"type":"ImportSpecifier","start":72,"end":84,"imported":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"},"local":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"}}],"source":{"type":"Literal","start":92,"end":109,"value":"@angular/common","raw":"'@angular/common'"}},{"type":"ImportDeclaration","start":112,"end":154,"specifiers":[{"type":"ImportSpecifier","start":121,"end":135,"imported":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"},"local":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"}}],"source":{"type":"Literal","start":143,"end":153,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":156,"end":192,"specifiers":[{"type":"ImportNamespaceSpecifier","start":163,"end":170,"local":{"type":"Identifier","start":168,"end":170,"name":"i0"}}],"source":{"type":"Literal","start":176,"end":191,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":194,"end":1127,"declaration":{"type":"ClassDeclaration","start":201,"end":1127,"id":{"type":"Identifier","start":207,"end":224,"name":"NgxFirebaseModule"},"superClass":null,"body":{"type":"ClassBody","start":225,"end":1127,"body":[{"type":"MethodDefinition","start":726,"end":911,"static":false,"computed":false,"key":{"type":"Identifier","start":726,"end":737,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":737,"end":911,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":738,"end":750,"name":"parentModule"}],"body":{"type":"BlockStatement","start":752,"end":911,"body":[{"type":"IfStatement","start":763,"end":904,"test":{"type":"Identifier","start":767,"end":779,"name":"parentModule"},"consequent":{"type":"BlockStatement","start":781,"end":904,"body":[{"type":"ThrowStatement","start":796,"end":893,"argument":{"type":"NewExpression","start":802,"end":892,"callee":{"type":"Identifier","start":806,"end":811,"name":"Error"},"arguments":[{"type":"Literal","start":812,"end":891,"value":"NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only","raw":"'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":917,"end":1124,"static":true,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"forRoot"},"kind":"method","value":{"type":"FunctionExpression","start":931,"end":1124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":932,"end":938,"name":"config"}],"body":{"type":"BlockStatement","start":940,"end":1124,"body":[{"type":"ReturnStatement","start":951,"end":1117,"argument":{"type":"ObjectExpression","start":958,"end":1116,"properties":[{"type":"Property","start":973,"end":1000,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":973,"end":981,"name":"ngModule"},"value":{"type":"Identifier","start":983,"end":1000,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1015,"end":1105,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1024,"name":"providers"},"value":{"type":"ArrayExpression","start":1026,"end":1105,"elements":[{"type":"ObjectExpression","start":1045,"end":1090,"properties":[{"type":"Property","start":1047,"end":1070,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"provide"},"value":{"type":"Identifier","start":1056,"end":1070,"name":"FirebaseConfig"},"kind":"init"},{"type":"Property","start":1072,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1072,"end":1080,"name":"useValue"},"value":{"type":"Identifier","start":1082,"end":1088,"name":"config"},"kind":"init"}]}]},"kind":"init"}]}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1129,"end":1367,"expression":{"type":"AssignmentExpression","start":1129,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1129,"end":1151,"object":{"type":"Identifier","start":1129,"end":1146,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1147,"end":1151,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1154,"end":1366,"callee":{"type":"MemberExpression","start":1154,"end":1175,"object":{"type":"Identifier","start":1154,"end":1156,"name":"i0"},"property":{"type":"Identifier","start":1157,"end":1175,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1176,"end":1365,"properties":[{"type":"Property","start":1178,"end":1198,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1178,"end":1188,"name":"minVersion"},"value":{"type":"Literal","start":1190,"end":1198,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1200,"end":1217,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1200,"end":1207,"name":"version"},"value":{"type":"Literal","start":1209,"end":1217,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1219,"end":1231,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1219,"end":1227,"name":"ngImport"},"value":{"type":"Identifier","start":1229,"end":1231,"name":"i0"},"kind":"init"},{"type":"Property","start":1233,"end":1256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1233,"end":1237,"name":"type"},"value":{"type":"Identifier","start":1239,"end":1256,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1258,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1258,"end":1262,"name":"deps"},"value":{"type":"ArrayExpression","start":1264,"end":1326,"elements":[{"type":"ObjectExpression","start":1265,"end":1325,"properties":[{"type":"Property","start":1267,"end":1291,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1267,"end":1272,"name":"token"},"value":{"type":"Identifier","start":1274,"end":1291,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1293,"end":1307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1301,"name":"optional"},"value":{"type":"Literal","start":1303,"end":1307,"value":true,"raw":"true"},"kind":"init"},{"type":"Property","start":1309,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1309,"end":1317,"name":"skipSelf"},"value":{"type":"Literal","start":1319,"end":1323,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1328,"end":1363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1328,"end":1334,"name":"target"},"value":{"type":"MemberExpression","start":1336,"end":1363,"object":{"type":"MemberExpression","start":1336,"end":1354,"object":{"type":"Identifier","start":1336,"end":1338,"name":"i0"},"property":{"type":"Identifier","start":1339,"end":1354,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1355,"end":1363,"name":"NgModule"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1369,"end":1526,"expression":{"type":"AssignmentExpression","start":1369,"end":1525,"operator":"=","left":{"type":"MemberExpression","start":1369,"end":1391,"object":{"type":"Identifier","start":1369,"end":1386,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1387,"end":1391,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1416,"object":{"type":"Identifier","start":1394,"end":1396,"name":"i0"},"property":{"type":"Identifier","start":1397,"end":1416,"name":"ɵɵngDeclareNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1417,"end":1524,"properties":[{"type":"Property","start":1419,"end":1439,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1419,"end":1429,"name":"minVersion"},"value":{"type":"Literal","start":1431,"end":1439,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1441,"end":1458,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1441,"end":1448,"name":"version"},"value":{"type":"Literal","start":1450,"end":1458,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1460,"end":1472,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1460,"end":1468,"name":"ngImport"},"value":{"type":"Identifier","start":1470,"end":1472,"name":"i0"},"kind":"init"},{"type":"Property","start":1474,"end":1497,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1474,"end":1478,"name":"type"},"value":{"type":"Identifier","start":1480,"end":1497,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1499,"end":1522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1499,"end":1506,"name":"imports"},"value":{"type":"ArrayExpression","start":1508,"end":1522,"elements":[{"type":"Identifier","start":1509,"end":1521,"name":"CommonModule"}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1711,"expression":{"type":"AssignmentExpression","start":1528,"end":1710,"operator":"=","left":{"type":"MemberExpression","start":1528,"end":1550,"object":{"type":"Identifier","start":1528,"end":1545,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1546,"end":1550,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1553,"end":1710,"callee":{"type":"MemberExpression","start":1553,"end":1575,"object":{"type":"Identifier","start":1553,"end":1555,"name":"i0"},"property":{"type":"Identifier","start":1556,"end":1575,"name":"ɵɵngDeclareInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1576,"end":1709,"properties":[{"type":"Property","start":1578,"end":1598,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1578,"end":1588,"name":"minVersion"},"value":{"type":"Literal","start":1590,"end":1598,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1600,"end":1617,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1600,"end":1607,"name":"version"},"value":{"type":"Literal","start":1609,"end":1617,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1619,"end":1631,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1619,"end":1627,"name":"ngImport"},"value":{"type":"Identifier","start":1629,"end":1631,"name":"i0"},"kind":"init"},{"type":"Property","start":1633,"end":1656,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1633,"end":1637,"name":"type"},"value":{"type":"Identifier","start":1639,"end":1656,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1658,"end":1707,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1658,"end":1665,"name":"imports"},"value":{"type":"ArrayExpression","start":1667,"end":1707,"elements":[{"type":"ArrayExpression","start":1668,"end":1706,"elements":[{"type":"Identifier","start":1683,"end":1695,"name":"CommonModule"}]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1713,"end":2287,"expression":{"type":"CallExpression","start":1713,"end":2286,"callee":{"type":"MemberExpression","start":1713,"end":1740,"object":{"type":"Identifier","start":1713,"end":1715,"name":"i0"},"property":{"type":"Identifier","start":1716,"end":1740,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1741,"end":2285,"properties":[{"type":"Property","start":1743,"end":1763,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1743,"end":1753,"name":"minVersion"},"value":{"type":"Literal","start":1755,"end":1763,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1765,"end":1782,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1765,"end":1772,"name":"version"},"value":{"type":"Literal","start":1774,"end":1782,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1784,"end":1796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1792,"name":"ngImport"},"value":{"type":"Identifier","start":1794,"end":1796,"name":"i0"},"kind":"init"},{"type":"Property","start":1798,"end":1821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1798,"end":1802,"name":"type"},"value":{"type":"Identifier","start":1804,"end":1821,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1823,"end":2052,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1833,"name":"decorators"},"value":{"type":"ArrayExpression","start":1835,"end":2052,"elements":[{"type":"ObjectExpression","start":1836,"end":2051,"properties":[{"type":"Property","start":1851,"end":1865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1851,"end":1855,"name":"type"},"value":{"type":"Identifier","start":1857,"end":1865,"name":"NgModule"},"kind":"init"},{"type":"Property","start":1880,"end":2040,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1880,"end":1884,"name":"args"},"value":{"type":"ArrayExpression","start":1886,"end":2040,"elements":[{"type":"ObjectExpression","start":1887,"end":2039,"properties":[{"type":"Property","start":1910,"end":1926,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1922,"name":"declarations"},"value":{"type":"ArrayExpression","start":1924,"end":1926,"elements":[]},"kind":"init"},{"type":"Property","start":1949,"end":2020,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1949,"end":1956,"name":"imports"},"value":{"type":"ArrayExpression","start":1958,"end":2020,"elements":[{"type":"Identifier","start":1985,"end":1997,"name":"CommonModule"}]},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":2054,"end":2283,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2054,"end":2068,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":2070,"end":2283,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2082,"end":2283,"body":[{"type":"ReturnStatement","start":2093,"end":2276,"argument":{"type":"ArrayExpression","start":2100,"end":2275,"elements":[{"type":"ObjectExpression","start":2101,"end":2274,"properties":[{"type":"Property","start":2103,"end":2126,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2103,"end":2107,"name":"type"},"value":{"type":"Identifier","start":2109,"end":2126,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":2128,"end":2272,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2128,"end":2138,"name":"decorators"},"value":{"type":"ArrayExpression","start":2140,"end":2272,"elements":[{"type":"ObjectExpression","start":2141,"end":2205,"properties":[{"type":"Property","start":2168,"end":2182,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2168,"end":2172,"name":"type"},"value":{"type":"Identifier","start":2174,"end":2182,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2207,"end":2271,"properties":[{"type":"Property","start":2234,"end":2248,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2234,"end":2238,"name":"type"},"value":{"type":"Identifier","start":2240,"end":2248,"name":"SkipSelf"},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","start":2289,"end":5123},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":5125,"end":5250}]},"code":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgxFirebaseModule, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: SkipSelf\r\n                    }] }];\r\n    } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","@angular/common","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","originalSourcemap":{"version":3,"file":"ngx-firebase.module.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,29],[17,0,0,37],[19,0,0,39],[27,0,0,47],[29,0,0,49],[37,0,0,57],[39,0,0,58],[45,0,0,64],[60,0,0,79],[61,0,0,80]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[21,0,1,20],[23,0,1,21],[29,0,1,27],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[23,0,2,22],[25,0,2,23],[31,0,2,29],[41,0,2,39],[42,0,2,40]],[],[[0,0,13,0],[6,0,13,6],[13,0,13,13],[30,0,13,30]],[[4,0,14,2]],[],[],[],[],[],[[7,0,20,5]],[[4,0,21,2],[16,0,21,38],[28,0,21,70]],[[8,0,22,4],[12,0,22,8],[24,0,22,20],[26,0,22,22]],[[12,0,23,6],[18,0,23,12],[22,0,23,16],[27,0,23,21],[28,0,24,8],[107,0,24,87],[108,0,24,88],[109,0,24,89]],[[9,0,25,5]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2],[10,0,28,8],[11,0,28,9],[18,0,28,16],[19,0,28,17],[25,0,28,40]],[[8,0,29,4],[15,0,29,11]],[[12,0,30,6],[20,0,30,14],[22,0,30,16],[39,0,30,33]],[[12,0,31,6],[21,0,31,15],[23,0,31,17]],[[16,0,32,8],[18,0,32,9],[25,0,32,16],[27,0,32,18],[41,0,32,32],[43,0,32,34],[51,0,32,42],[53,0,32,44],[59,0,32,50],[61,0,32,51]],[[13,0,33,7]],[[9,0,34,5],[10,0,34,6]],[[4,0,35,2],[5,0,35,3]],[],[[110,0,13,13],[127,0,13,30],[145,0,21,53],[162,0,21,70]],[[111,0,13,13],[128,0,13,30],[140,0,8,4],[152,0,8,16]],[[111,0,13,13],[128,0,13,30],[140,0,7,11]],[[12,0,8,4],[24,0,8,16]],[[9,0,9,3]],[[91,0,13,13],[108,0,13,30]],[[18,0,5,1],[26,0,5,9]],[[19,0,5,10]],[[20,0,6,2],[32,0,6,14],[34,0,6,16],[36,0,6,18]],[[20,0,7,2],[27,0,7,9],[29,0,7,11]],[[24,0,8,4],[36,0,8,16]],[[21,0,9,3]],[[17,0,10,1]],[[58,0,21,53],[75,0,21,70]],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[34,0,21,35]]],"sourcesContent":["import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseConfig} from './config';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\n\nexport class NgxFirebaseModule {\n  /**\n   * To be used as an Angular Module to inject the FirebaseConfig\n   * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\n   * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\n   * additional connections.\n   * The purpose is simply to make sure that we only create a single Firebase App and a single connection\n   */\n  constructor(@Optional() @SkipSelf() parentModule?: NgxFirebaseModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config?: FirebaseConfig): ModuleWithProviders<NgxFirebaseModule> {\n    return {\n      ngModule: NgxFirebaseModule,\n      providers: [\n        {provide: FirebaseConfig, useValue: config}\n      ]\n    };\n  }\n\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@angular/common":{"external":true,"id":"@angular/common","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[17,0,0,17],[19,0,0,19],[27,0,0,27],[29,0,0,29],[37,0,0,37],[39,0,0,39],[45,0,0,45],[60,0,0,60],[61,0,0,61]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[21,0,1,21],[23,0,1,23],[29,0,1,29],[46,0,1,46],[47,0,1,47]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[23,0,2,23],[25,0,2,25],[31,0,2,31],[41,0,2,41],[42,0,2,42]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[14,0,3,14],[20,0,3,20],[35,0,3,35],[36,0,3,36]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[30,0,4,30]],[[4,0,5,4]],[],[],[],[],[],[[7,0,11,7]],[[4,0,12,4],[16,0,12,16],[28,0,12,28]],[[8,0,13,8],[12,0,13,12],[24,0,13,24],[26,0,13,26]],[[12,0,14,12],[18,0,14,18],[22,0,14,22],[27,0,14,27],[28,0,14,28],[107,0,14,107],[108,0,14,108],[109,0,14,109]],[[9,0,15,9]],[[4,0,16,4],[5,0,16,5]],[[4,0,17,4],[10,0,17,10],[11,0,17,11],[18,0,17,18],[19,0,17,19],[25,0,17,25]],[[8,0,18,8],[15,0,18,15]],[[12,0,19,12],[20,0,19,20],[22,0,19,22],[39,0,19,39]],[[12,0,20,12],[21,0,20,21],[23,0,20,23]],[[16,0,21,16],[18,0,21,18],[25,0,21,25],[27,0,21,27],[41,0,21,41],[43,0,21,43],[51,0,21,51],[53,0,21,53],[59,0,21,59],[61,0,21,61]],[[13,0,22,13]],[[9,0,23,9],[10,0,23,10]],[[4,0,24,4],[5,0,24,5]],[[1,0,25,1]],[[0,0,26,0],[17,0,26,17],[18,0,26,18],[22,0,26,22],[25,0,26,25],[27,0,26,27],[28,0,26,28],[46,0,26,46],[47,0,26,47],[49,0,26,49],[59,0,26,59],[61,0,26,61],[69,0,26,69],[71,0,26,71],[78,0,26,78],[80,0,26,80],[88,0,26,88],[90,0,26,90],[98,0,26,98],[100,0,26,100],[102,0,26,102],[104,0,26,104],[108,0,26,108],[110,0,26,110],[127,0,26,127],[129,0,26,129],[133,0,26,133],[135,0,26,135],[136,0,26,136],[138,0,26,138],[143,0,26,143],[145,0,26,145],[162,0,26,162],[164,0,26,164],[172,0,26,172],[174,0,26,174],[178,0,26,178],[180,0,26,180],[188,0,26,188],[190,0,26,190],[194,0,26,194],[196,0,26,196],[197,0,26,197],[199,0,26,199],[205,0,26,205],[207,0,26,207],[209,0,26,209],[210,0,26,210],[225,0,26,225],[226,0,26,226],[234,0,26,234],[236,0,26,236],[237,0,26,237],[238,0,26,238]],[[0,0,27,0],[17,0,27,17],[18,0,27,18],[22,0,27,22],[25,0,27,25],[27,0,27,27],[28,0,27,28],[47,0,27,47],[48,0,27,48],[50,0,27,50],[60,0,27,60],[62,0,27,62],[70,0,27,70],[72,0,27,72],[79,0,27,79],[81,0,27,81],[89,0,27,89],[91,0,27,91],[99,0,27,99],[101,0,27,101],[103,0,27,103],[105,0,27,105],[109,0,27,109],[111,0,27,111],[128,0,27,128],[130,0,27,130],[137,0,27,137],[139,0,27,139],[140,0,27,140],[152,0,27,152],[153,0,27,153],[155,0,27,155],[156,0,27,156],[157,0,27,157]],[[0,0,28,0],[17,0,28,17],[18,0,28,18],[22,0,28,22],[25,0,28,25],[27,0,28,27],[28,0,28,28],[47,0,28,47],[48,0,28,48],[50,0,28,50],[60,0,28,60],[62,0,28,62],[70,0,28,70],[72,0,28,72],[79,0,28,79],[81,0,28,81],[89,0,28,89],[91,0,28,91],[99,0,28,99],[101,0,28,101],[103,0,28,103],[105,0,28,105],[109,0,28,109],[111,0,28,111],[128,0,28,128],[130,0,28,130],[137,0,28,137],[139,0,28,139],[140,0,28,140]],[[12,0,29,12],[24,0,29,24]],[[9,0,30,9],[10,0,30,10],[12,0,30,12],[13,0,30,13],[14,0,30,14]],[[0,0,31,0],[2,0,31,2],[3,0,31,3],[27,0,31,27],[28,0,31,28],[30,0,31,30],[40,0,31,40],[42,0,31,42],[50,0,31,50],[52,0,31,52],[59,0,31,59],[61,0,31,61],[69,0,31,69],[71,0,31,71],[79,0,31,79],[81,0,31,81],[83,0,31,83],[85,0,31,85],[89,0,31,89],[91,0,31,91],[108,0,31,108],[110,0,31,110],[120,0,31,120],[122,0,31,122],[123,0,31,123]],[[12,0,32,12],[16,0,32,16],[18,0,32,18],[26,0,32,26]],[[12,0,33,12],[16,0,33,16],[18,0,33,18],[19,0,33,19]],[[20,0,34,20],[32,0,34,32],[34,0,34,34],[36,0,34,36]],[[20,0,35,20],[27,0,35,27],[29,0,35,29]],[[24,0,36,24],[36,0,36,36]],[[21,0,37,21]],[[17,0,38,17],[18,0,38,18]],[[9,0,39,9],[10,0,39,10],[12,0,39,12],[26,0,39,26],[28,0,39,28]],[[8,0,39,42],[15,0,39,49],[16,0,39,50],[18,0,39,52],[22,0,39,56],[24,0,39,58],[41,0,39,75],[43,0,39,77],[53,0,39,87],[55,0,39,89],[56,0,39,90]],[[24,0,40,20],[28,0,40,24],[30,0,40,26],[38,0,40,34]],[[21,0,41,17],[23,0,41,19]],[[24,0,42,20],[28,0,42,24],[30,0,42,26],[38,0,42,34]],[[21,0,43,17],[22,0,43,18],[24,0,43,20],[25,0,43,21],[26,0,43,22]],[[4,0,43,23],[5,0,43,24],[7,0,43,26],[8,0,43,27],[9,0,43,28]],[[0,0,44,0],[2834,0,44,2834]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5724,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"Inject"},"local":{"type":"Identifier","start":9,"end":15,"name":"Inject"}},{"type":"ImportSpecifier","start":17,"end":27,"imported":{"type":"Identifier","start":17,"end":27,"name":"Injectable"},"local":{"type":"Identifier","start":17,"end":27,"name":"Injectable"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"Optional"},"local":{"type":"Identifier","start":29,"end":37,"name":"Optional"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":113,"specifiers":[{"type":"ImportSpecifier","start":72,"end":94,"imported":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"},"local":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"}}],"source":{"type":"Literal","start":102,"end":112,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":115,"end":170,"specifiers":[{"type":"ImportDefaultSpecifier","start":122,"end":130,"local":{"type":"Identifier","start":122,"end":130,"name":"firebase"}},{"type":"ImportSpecifier","start":134,"end":147,"imported":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"},"local":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"}}],"source":{"type":"Literal","start":155,"end":169,"value":"firebase/app","raw":"'firebase/app'"}},{"type":"ImportDeclaration","start":172,"end":248,"specifiers":[{"type":"ImportSpecifier","start":181,"end":205,"imported":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"},"local":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"}},{"type":"ImportSpecifier","start":207,"end":219,"imported":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"},"local":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"}}],"source":{"type":"Literal","start":227,"end":247,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":250,"end":286,"specifiers":[{"type":"ImportNamespaceSpecifier","start":257,"end":264,"local":{"type":"Identifier","start":262,"end":264,"name":"i0"}}],"source":{"type":"Literal","start":270,"end":285,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":288,"end":319,"specifiers":[{"type":"ImportNamespaceSpecifier","start":295,"end":302,"local":{"type":"Identifier","start":300,"end":302,"name":"i1"}}],"source":{"type":"Literal","start":308,"end":318,"value":"./config","raw":"\"./config\""}},{"type":"ExportNamedDeclaration","start":321,"end":1144,"declaration":{"type":"ClassDeclaration","start":328,"end":1144,"id":{"type":"Identifier","start":334,"end":352,"name":"NgxFirebaseService"},"superClass":null,"body":{"type":"ClassBody","start":353,"end":1144,"body":[{"type":"MethodDefinition","start":360,"end":1141,"static":false,"computed":false,"key":{"type":"Identifier","start":360,"end":371,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":371,"end":1141,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":372,"end":378,"name":"config"},{"type":"Identifier","start":380,"end":394,"name":"emulatorConfig"}],"body":{"type":"BlockStatement","start":396,"end":1141,"body":[{"type":"ExpressionStatement","start":407,"end":444,"expression":{"type":"AssignmentExpression","start":407,"end":443,"operator":"=","left":{"type":"MemberExpression","start":407,"end":426,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":426,"name":"emulatorConfig"},"computed":false,"optional":false},"right":{"type":"Identifier","start":429,"end":443,"name":"emulatorConfig"}}},{"type":"IfStatement","start":454,"end":865,"test":{"type":"UnaryExpression","start":458,"end":484,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":459,"end":484,"object":{"type":"CallExpression","start":459,"end":477,"callee":{"type":"MemberExpression","start":459,"end":475,"object":{"type":"Identifier","start":459,"end":467,"name":"firebase"},"property":{"type":"Identifier","start":468,"end":475,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":478,"end":484,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":486,"end":743,"body":[{"type":"IfStatement","start":501,"end":732,"test":{"type":"Identifier","start":505,"end":511,"name":"config"},"consequent":{"type":"BlockStatement","start":513,"end":588,"body":[{"type":"ExpressionStatement","start":532,"end":573,"expression":{"type":"AssignmentExpression","start":532,"end":572,"operator":"=","left":{"type":"MemberExpression","start":532,"end":548,"object":{"type":"ThisExpression","start":532,"end":536},"property":{"type":"Identifier","start":537,"end":548,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":551,"end":572,"callee":{"type":"Identifier","start":551,"end":564,"name":"initializeApp"},"arguments":[{"type":"Identifier","start":565,"end":571,"name":"config"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":607,"end":732,"body":[{"type":"ThrowStatement","start":626,"end":717,"argument":{"type":"NewExpression","start":632,"end":716,"callee":{"type":"Identifier","start":636,"end":641,"name":"Error"},"arguments":[{"type":"Literal","start":642,"end":715,"value":"No previous Firebase App initialized so please provide a FirebaseConfig","raw":"'No previous Firebase App initialized so please provide a FirebaseConfig'"}]}}]}}]},"alternate":{"type":"BlockStatement","start":758,"end":865,"body":[{"type":"ExpressionStatement","start":773,"end":814,"expression":{"type":"AssignmentExpression","start":773,"end":813,"operator":"=","left":{"type":"MemberExpression","start":773,"end":789,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":789,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":792,"end":813,"object":{"type":"CallExpression","start":792,"end":810,"callee":{"type":"MemberExpression","start":792,"end":808,"object":{"type":"Identifier","start":792,"end":800,"name":"firebase"},"property":{"type":"Identifier","start":801,"end":808,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Literal","start":811,"end":812,"value":0,"raw":"0"},"computed":true,"optional":false}}}]}},{"type":"IfStatement","start":875,"end":1134,"test":{"type":"Identifier","start":879,"end":893,"name":"emulatorConfig"},"consequent":{"type":"BlockStatement","start":895,"end":1134,"body":[{"type":"ExpressionStatement","start":910,"end":1009,"expression":{"type":"CallExpression","start":910,"end":1008,"callee":{"type":"Identifier","start":910,"end":934,"name":"connectFirestoreEmulator"},"arguments":[{"type":"CallExpression","start":935,"end":965,"callee":{"type":"Identifier","start":935,"end":947,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":948,"end":964,"object":{"type":"ThisExpression","start":948,"end":952},"property":{"type":"Identifier","start":953,"end":964,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false},{"type":"MemberExpression","start":967,"end":986,"object":{"type":"Identifier","start":967,"end":981,"name":"emulatorConfig"},"property":{"type":"Identifier","start":982,"end":986,"name":"host"},"computed":false,"optional":false},{"type":"MemberExpression","start":988,"end":1007,"object":{"type":"Identifier","start":988,"end":1002,"name":"emulatorConfig"},"property":{"type":"Identifier","start":1003,"end":1007,"name":"port"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1146,"end":1423,"expression":{"type":"AssignmentExpression","start":1146,"end":1422,"operator":"=","left":{"type":"MemberExpression","start":1146,"end":1169,"object":{"type":"Identifier","start":1146,"end":1164,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1165,"end":1169,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1172,"end":1422,"callee":{"type":"MemberExpression","start":1172,"end":1193,"object":{"type":"Identifier","start":1172,"end":1174,"name":"i0"},"property":{"type":"Identifier","start":1175,"end":1193,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1194,"end":1421,"properties":[{"type":"Property","start":1196,"end":1216,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1196,"end":1206,"name":"minVersion"},"value":{"type":"Literal","start":1208,"end":1216,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1218,"end":1235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1218,"end":1225,"name":"version"},"value":{"type":"Literal","start":1227,"end":1235,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1237,"end":1249,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1237,"end":1245,"name":"ngImport"},"value":{"type":"Identifier","start":1247,"end":1249,"name":"i0"},"kind":"init"},{"type":"Property","start":1251,"end":1275,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1251,"end":1255,"name":"type"},"value":{"type":"Identifier","start":1257,"end":1275,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1277,"end":1380,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1277,"end":1281,"name":"deps"},"value":{"type":"ArrayExpression","start":1283,"end":1380,"elements":[{"type":"ObjectExpression","start":1284,"end":1328,"properties":[{"type":"Property","start":1286,"end":1310,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1286,"end":1291,"name":"token"},"value":{"type":"MemberExpression","start":1293,"end":1310,"object":{"type":"Identifier","start":1293,"end":1295,"name":"i1"},"property":{"type":"Identifier","start":1296,"end":1310,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1312,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1312,"end":1320,"name":"optional"},"value":{"type":"Literal","start":1322,"end":1326,"value":true,"raw":"true"},"kind":"init"}]},{"type":"ObjectExpression","start":1330,"end":1379,"properties":[{"type":"Property","start":1332,"end":1361,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1332,"end":1337,"name":"token"},"value":{"type":"Identifier","start":1339,"end":1361,"name":"FIRESTORE_USE_EMULATOR"},"kind":"init"},{"type":"Property","start":1363,"end":1377,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1363,"end":1371,"name":"optional"},"value":{"type":"Literal","start":1373,"end":1377,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1382,"end":1419,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1382,"end":1388,"name":"target"},"value":{"type":"MemberExpression","start":1390,"end":1419,"object":{"type":"MemberExpression","start":1390,"end":1408,"object":{"type":"Identifier","start":1390,"end":1392,"name":"i0"},"property":{"type":"Identifier","start":1393,"end":1408,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1409,"end":1419,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1425,"end":1582,"expression":{"type":"AssignmentExpression","start":1425,"end":1581,"operator":"=","left":{"type":"MemberExpression","start":1425,"end":1449,"object":{"type":"Identifier","start":1425,"end":1443,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1444,"end":1449,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1452,"end":1581,"callee":{"type":"MemberExpression","start":1452,"end":1476,"object":{"type":"Identifier","start":1452,"end":1454,"name":"i0"},"property":{"type":"Identifier","start":1455,"end":1476,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1477,"end":1580,"properties":[{"type":"Property","start":1479,"end":1499,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1479,"end":1489,"name":"minVersion"},"value":{"type":"Literal","start":1491,"end":1499,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1501,"end":1518,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1501,"end":1508,"name":"version"},"value":{"type":"Literal","start":1510,"end":1518,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1520,"end":1532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1520,"end":1528,"name":"ngImport"},"value":{"type":"Identifier","start":1530,"end":1532,"name":"i0"},"kind":"init"},{"type":"Property","start":1534,"end":1558,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1534,"end":1538,"name":"type"},"value":{"type":"Identifier","start":1540,"end":1558,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1560,"end":1578,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1560,"end":1570,"name":"providedIn"},"value":{"type":"Literal","start":1572,"end":1578,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1584,"end":2225,"expression":{"type":"CallExpression","start":1584,"end":2224,"callee":{"type":"MemberExpression","start":1584,"end":1611,"object":{"type":"Identifier","start":1584,"end":1586,"name":"i0"},"property":{"type":"Identifier","start":1587,"end":1611,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1612,"end":2223,"properties":[{"type":"Property","start":1614,"end":1634,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1614,"end":1624,"name":"minVersion"},"value":{"type":"Literal","start":1626,"end":1634,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1636,"end":1653,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1636,"end":1643,"name":"version"},"value":{"type":"Literal","start":1645,"end":1653,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1655,"end":1667,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1655,"end":1663,"name":"ngImport"},"value":{"type":"Identifier","start":1665,"end":1667,"name":"i0"},"kind":"init"},{"type":"Property","start":1669,"end":1693,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1669,"end":1673,"name":"type"},"value":{"type":"Identifier","start":1675,"end":1693,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1695,"end":1834,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1695,"end":1705,"name":"decorators"},"value":{"type":"ArrayExpression","start":1707,"end":1834,"elements":[{"type":"ObjectExpression","start":1708,"end":1833,"properties":[{"type":"Property","start":1723,"end":1739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1723,"end":1727,"name":"type"},"value":{"type":"Identifier","start":1729,"end":1739,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1754,"end":1822,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1754,"end":1758,"name":"args"},"value":{"type":"ArrayExpression","start":1760,"end":1822,"elements":[{"type":"ObjectExpression","start":1761,"end":1821,"properties":[{"type":"Property","start":1784,"end":1802,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1794,"name":"providedIn"},"value":{"type":"Literal","start":1796,"end":1802,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1836,"end":2221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1836,"end":1850,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1852,"end":2221,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2221,"body":[{"type":"ReturnStatement","start":1875,"end":2214,"argument":{"type":"ArrayExpression","start":1882,"end":2213,"elements":[{"type":"ObjectExpression","start":1883,"end":1990,"properties":[{"type":"Property","start":1885,"end":1908,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1885,"end":1889,"name":"type"},"value":{"type":"MemberExpression","start":1891,"end":1908,"object":{"type":"Identifier","start":1891,"end":1893,"name":"i1"},"property":{"type":"Identifier","start":1894,"end":1908,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1910,"end":1988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1920,"name":"decorators"},"value":{"type":"ArrayExpression","start":1922,"end":1988,"elements":[{"type":"ObjectExpression","start":1923,"end":1987,"properties":[{"type":"Property","start":1950,"end":1964,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1950,"end":1954,"name":"type"},"value":{"type":"Identifier","start":1956,"end":1964,"name":"Optional"},"kind":"init"}]}]},"kind":"init"}]},{"type":"ObjectExpression","start":1992,"end":2212,"properties":[{"type":"Property","start":1994,"end":2009,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1994,"end":1998,"name":"type"},"value":{"type":"Identifier","start":2000,"end":2009,"name":"undefined"},"kind":"init"},{"type":"Property","start":2011,"end":2210,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2011,"end":2021,"name":"decorators"},"value":{"type":"ArrayExpression","start":2023,"end":2210,"elements":[{"type":"ObjectExpression","start":2024,"end":2088,"properties":[{"type":"Property","start":2051,"end":2065,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2051,"end":2055,"name":"type"},"value":{"type":"Identifier","start":2057,"end":2065,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2090,"end":2209,"properties":[{"type":"Property","start":2117,"end":2129,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2117,"end":2121,"name":"type"},"value":{"type":"Identifier","start":2123,"end":2129,"name":"Inject"},"kind":"init"},{"type":"Property","start":2156,"end":2186,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2156,"end":2160,"name":"args"},"value":{"type":"ArrayExpression","start":2162,"end":2186,"elements":[{"type":"Identifier","start":2163,"end":2185,"name":"FIRESTORE_USE_EMULATOR"}]},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","start":2227,"end":5597},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":5599,"end":5724}]},"code":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i1.FirebaseConfig, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [FIRESTORE_USE_EMULATOR]\r\n                    }] }];\r\n    } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","firebase/app","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firebase.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,16],[27,0,0,26],[29,0,0,28],[37,0,0,36],[39,0,0,37],[45,0,0,43],[60,0,0,58],[61,0,0,59]],[[0,0,2,0],[7,0,2,7],[9,0,2,24],[31,0,2,46],[33,0,2,72],[39,0,2,78],[49,0,2,88],[50,0,2,89]],[[0,0,3,0],[7,0,3,7],[15,0,3,15],[17,0,3,17],[19,0,3,31],[32,0,3,44],[34,0,3,45],[40,0,3,51],[54,0,3,65],[55,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[33,0,4,32],[35,0,4,34],[47,0,4,46],[49,0,4,48],[55,0,4,54],[75,0,4,74],[76,0,4,75]],[],[],[[0,0,11,0],[6,0,11,6],[13,0,11,13],[31,0,11,31]],[[4,0,20,2],[16,0,20,26],[22,0,20,49],[24,0,21,65],[38,0,21,105]],[[8,0,21,65],[27,0,21,79],[30,0,21,65],[44,0,21,79],[45,0,21,105]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[22,0,23,18],[29,0,23,25],[31,0,23,27],[32,0,23,28],[38,0,23,34],[40,0,23,36]],[[12,0,24,6],[16,0,24,10],[22,0,24,16],[24,0,24,18]],[[16,0,25,8],[20,0,25,12],[21,0,25,13],[32,0,25,24],[35,0,25,27],[48,0,25,40],[49,0,25,41],[55,0,25,47],[56,0,25,48],[57,0,25,49]],[[13,0,26,7]],[[17,0,26,13]],[[16,0,27,8],[22,0,27,14],[26,0,27,18],[31,0,27,23],[32,0,27,24],[105,0,27,97],[106,0,27,98],[107,0,27,98]],[[13,0,28,7]],[[9,0,30,5]],[[13,0,30,11]],[[12,0,31,6],[16,0,31,10],[17,0,31,11],[28,0,31,22],[31,0,31,25],[39,0,31,33],[40,0,31,34],[47,0,31,41],[49,0,31,43],[50,0,31,44],[51,0,31,45],[52,0,31,46],[53,0,31,47],[54,0,31,48],[93,0,31,87]],[[9,0,32,5]],[[8,0,34,4],[12,0,34,8],[26,0,34,22],[28,0,34,24]],[[12,0,35,6],[36,0,35,30],[37,0,35,31],[49,0,35,43],[50,0,35,44],[54,0,35,48],[55,0,35,49],[66,0,35,60],[67,0,35,61],[69,0,35,63],[83,0,35,77],[84,0,35,78],[88,0,35,82],[90,0,35,84],[104,0,35,98],[105,0,35,99],[109,0,35,103],[110,0,35,104],[111,0,35,105],[112,0,35,106],[117,0,35,111]],[[12,0,36,6],[106,0,36,100]],[[9,0,37,5]],[[4,0,38,2],[5,0,38,3]],[],[[111,0,11,13],[129,0,11,31],[193,0,21,34],[215,0,21,56]],[[115,0,11,13],[133,0,11,31],[147,0,8,14],[153,0,8,20]],[[91,0,11,13],[109,0,11,31]],[[18,0,7,1],[28,0,7,11]],[[19,0,7,12]],[[20,0,8,2],[30,0,8,12],[32,0,8,14],[38,0,8,20]],[[17,0,9,1]],[],[[26,0,20,15],[34,0,20,23]],[],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[32,0,21,33]],[[27,0,21,34],[49,0,21,56]]],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\n\nimport {FirebaseConfig, FIRESTORE_USE_EMULATOR, FirestoreEmulatorConfig} from './config';\nimport firebase, {FirebaseApp, initializeApp} from 'firebase/app';\nimport {connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxFirebaseService {\n  /**\n   * Service that holds the Firebase App\n   * Inject this service into any other service that requires the Firebase App\n   *\n   * For example NgxFireStoreExtendedService injects this service\n   */\n  public firebaseApp: FirebaseApp;\n\n  constructor(@Optional() config?: FirebaseConfig,\n              @Optional() @Inject(FIRESTORE_USE_EMULATOR) public emulatorConfig?: FirestoreEmulatorConfig) {\n\n    if (!firebase.getApps().length) {\n      if (config) {\n        this.firebaseApp = initializeApp(config);\n      } else {\n        throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig')\n      }\n\n    } else {\n      this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\n    }\n\n    if (emulatorConfig) {\n      connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\n      // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\n    }\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/app":{"external":true,"id":"firebase/app","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[15,0,0,15],[17,0,0,17],[27,0,0,27],[29,0,0,29],[37,0,0,37],[39,0,0,39],[45,0,0,45],[60,0,0,60],[61,0,0,61]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[31,0,1,31],[33,0,1,33],[39,0,1,39],[49,0,1,49],[50,0,1,50]],[[0,0,2,0],[7,0,2,7],[15,0,2,15],[17,0,2,17],[19,0,2,19],[32,0,2,32],[34,0,2,34],[40,0,2,40],[54,0,2,54],[55,0,2,55]],[[0,0,3,0],[7,0,3,7],[9,0,3,9],[33,0,3,33],[35,0,3,35],[47,0,3,47],[49,0,3,49],[55,0,3,55],[75,0,3,75],[76,0,3,76]],[[0,0,4,0],[7,0,4,7],[12,0,4,12],[14,0,4,14],[20,0,4,20],[35,0,4,35],[36,0,4,36]],[[0,0,5,0],[7,0,5,7],[12,0,5,12],[14,0,5,14],[20,0,5,20],[30,0,5,30],[31,0,5,31]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[31,0,6,31]],[[4,0,7,4],[16,0,7,16],[22,0,7,22],[24,0,7,24],[38,0,7,38]],[[8,0,8,8],[12,0,8,12],[13,0,8,13],[27,0,8,27],[30,0,8,30],[44,0,8,44],[45,0,8,45]],[[8,0,9,8],[12,0,9,12],[13,0,9,13],[21,0,9,21],[22,0,9,22],[29,0,9,29],[31,0,9,31],[32,0,9,32],[38,0,9,38],[40,0,9,40]],[[12,0,10,12],[16,0,10,16],[22,0,10,22],[24,0,10,24]],[[16,0,11,16],[20,0,11,20],[21,0,11,21],[32,0,11,32],[35,0,11,35],[48,0,11,48],[49,0,11,49],[55,0,11,55],[56,0,11,56],[57,0,11,57]],[[13,0,12,13]],[[17,0,13,17]],[[16,0,14,16],[22,0,14,22],[26,0,14,26],[31,0,14,31],[32,0,14,32],[105,0,14,105],[106,0,14,106],[107,0,14,107]],[[13,0,15,13]],[[9,0,16,9]],[[13,0,17,13]],[[12,0,18,12],[16,0,18,16],[17,0,18,17],[28,0,18,28],[31,0,18,31],[39,0,18,39],[40,0,18,40],[47,0,18,47],[49,0,18,49],[50,0,18,50],[51,0,18,51],[52,0,18,52],[53,0,18,53],[54,0,18,54],[93,0,18,93]],[[9,0,19,9]],[[8,0,20,8],[12,0,20,12],[26,0,20,26],[28,0,20,28]],[[12,0,21,12],[36,0,21,36],[37,0,21,37],[49,0,21,49],[50,0,21,50],[54,0,21,54],[55,0,21,55],[66,0,21,66],[67,0,21,67],[69,0,21,69],[83,0,21,83],[84,0,21,84],[88,0,21,88],[90,0,21,90],[104,0,21,104],[105,0,21,105],[109,0,21,109],[110,0,21,110],[111,0,21,111],[112,0,21,112],[117,0,21,117]],[[12,0,22,12],[106,0,22,106]],[[9,0,23,9]],[[4,0,24,4],[5,0,24,5]],[[1,0,25,1]],[[0,0,26,0],[18,0,26,18],[19,0,26,19],[23,0,26,23],[26,0,26,26],[28,0,26,28],[29,0,26,29],[47,0,26,47],[48,0,26,48],[50,0,26,50],[60,0,26,60],[62,0,26,62],[70,0,26,70],[72,0,26,72],[79,0,26,79],[81,0,26,81],[89,0,26,89],[91,0,26,91],[99,0,26,99],[101,0,26,101],[103,0,26,103],[105,0,26,105],[109,0,26,109],[111,0,26,111],[129,0,26,129],[131,0,26,131],[135,0,26,135],[137,0,26,137],[138,0,26,138],[140,0,26,140],[145,0,26,145],[147,0,26,147],[149,0,26,149],[150,0,26,150],[164,0,26,164],[166,0,26,166],[174,0,26,174],[176,0,26,176],[180,0,26,180],[182,0,26,182],[184,0,26,184],[186,0,26,186],[191,0,26,191],[193,0,26,193],[215,0,26,215],[217,0,26,217],[225,0,26,225],[227,0,26,227],[231,0,26,231],[233,0,26,233],[234,0,26,234],[236,0,26,236],[242,0,26,242],[244,0,26,244],[246,0,26,246],[247,0,26,247],[262,0,26,262],[263,0,26,263],[273,0,26,273],[275,0,26,275],[276,0,26,276],[277,0,26,277]],[[0,0,27,0],[18,0,27,18],[19,0,27,19],[24,0,27,24],[27,0,27,27],[29,0,27,29],[30,0,27,30],[51,0,27,51],[52,0,27,52],[54,0,27,54],[64,0,27,64],[66,0,27,66],[74,0,27,74],[76,0,27,76],[83,0,27,83],[85,0,27,85],[93,0,27,93],[95,0,27,95],[103,0,27,103],[105,0,27,105],[107,0,27,107],[109,0,27,109],[113,0,27,113],[115,0,27,115],[133,0,27,133],[135,0,27,135],[145,0,27,145],[147,0,27,147],[153,0,27,153],[155,0,27,155],[156,0,27,156],[157,0,27,157]],[[0,0,28,0],[2,0,28,2],[3,0,28,3],[27,0,28,27],[28,0,28,28],[30,0,28,30],[40,0,28,40],[42,0,28,42],[50,0,28,50],[52,0,28,52],[59,0,28,59],[61,0,28,61],[69,0,28,69],[71,0,28,71],[79,0,28,79],[81,0,28,81],[83,0,28,83],[85,0,28,85],[89,0,28,89],[91,0,28,91],[109,0,28,109],[111,0,28,111],[121,0,28,121],[123,0,28,123],[124,0,28,124]],[[12,0,29,12],[16,0,29,16],[18,0,29,18],[28,0,29,28]],[[12,0,30,12],[16,0,30,16],[18,0,30,18],[19,0,30,19]],[[20,0,31,20],[30,0,31,30],[32,0,31,32],[38,0,31,38]],[[17,0,32,17],[18,0,32,18]],[[9,0,33,9],[10,0,33,10],[12,0,33,12],[26,0,33,26],[28,0,33,28]],[[8,0,33,42],[15,0,33,49],[16,0,33,50],[18,0,33,52],[22,0,33,56],[24,0,33,58],[26,0,33,60],[27,0,33,61],[41,0,33,75],[43,0,33,77],[53,0,33,87],[55,0,33,89],[56,0,33,90]],[[24,0,34,20],[28,0,34,24],[30,0,34,26],[38,0,34,34]],[[21,0,35,17],[22,0,35,18],[24,0,35,20],[26,0,35,22],[28,0,35,24],[32,0,35,28],[34,0,35,30],[43,0,35,39],[45,0,35,41],[55,0,35,51],[57,0,35,53],[58,0,35,54]],[[24,0,36,20],[28,0,36,24],[30,0,36,26],[38,0,36,34]],[[21,0,37,17],[23,0,37,19]],[[24,0,38,20],[28,0,38,24],[30,0,38,26],[36,0,38,32]],[[24,0,39,20],[28,0,39,24],[30,0,39,26],[31,0,39,27],[53,0,39,49],[54,0,39,50]],[[21,0,40,17],[22,0,40,18],[24,0,40,20],[25,0,40,21],[26,0,40,22]],[[4,0,40,23],[5,0,40,24],[7,0,40,26],[8,0,40,27],[9,0,40,28]],[[0,0,41,0],[3370,0,41,3370]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1604,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"FirestoreExtended"},"local":{"type":"Identifier","start":9,"end":26,"name":"FirestoreExtended"}}],"source":{"type":"Literal","start":34,"end":56,"value":"./firestore-extended","raw":"'./firestore-extended'"}},{"type":"ImportDeclaration","start":59,"end":129,"specifiers":[{"type":"ImportSpecifier","start":68,"end":91,"imported":{"type":"Identifier","start":68,"end":91,"name":"FirestoreWrapper"},"local":{"type":"Identifier","start":68,"end":91,"name":"FirestoreWrapper"}}],"source":{"type":"Literal","start":99,"end":128,"value":"./firebase-extended-wrapper","raw":"'./firebase-extended-wrapper'"}},{"type":"ExportNamedDeclaration","start":131,"end":325,"declaration":{"type":"ClassDeclaration","start":138,"end":325,"id":{"type":"Identifier","start":144,"end":160,"name":"FirebaseExtended"},"superClass":{"type":"Identifier","start":169,"end":186,"name":"FirestoreExtended"},"body":{"type":"ClassBody","start":187,"end":325,"body":[{"type":"MethodDefinition","start":194,"end":322,"static":false,"computed":false,"key":{"type":"Identifier","start":194,"end":205,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":205,"end":322,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":206,"end":217,"name":"firebaseApp"},{"type":"AssignmentPattern","start":219,"end":240,"left":{"type":"Identifier","start":219,"end":231,"name":"defaultDocId"},"right":{"type":"Literal","start":234,"end":240,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":242,"end":322,"body":[{"type":"ExpressionStatement","start":253,"end":315,"expression":{"type":"CallExpression","start":253,"end":314,"callee":{"type":"Super","start":253,"end":258},"arguments":[{"type":"NewExpression","start":259,"end":299,"callee":{"type":"Identifier","start":263,"end":286,"name":"FirestoreWrapper"},"arguments":[{"type":"Identifier","start":287,"end":298,"name":"firebaseApp"}]},{"type":"Identifier","start":301,"end":313,"name":"defaultDocId"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlYmFzZS1leHRlbmRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBRXJELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtGaXJlYmFzZUV4dGVuZGVkV3JhcHBlcn0gZnJvbSAnLi9maXJlYmFzZS1leHRlbmRlZC13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkIGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHAsIGRlZmF1bHREb2NJZDogc3RyaW5nID0gJ2RhdGEnKSB7XHJcbiAgICBzdXBlcihuZXcgRmlyZWJhc2VFeHRlbmRlZFdyYXBwZXIoZmlyZWJhc2VBcHApLCBkZWZhdWx0RG9jSWQpO1xyXG4gIH1cclxufVxyXG4iXX0=","start":327,"end":1481},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":1483,"end":1604}]},"code":"import { FirestoreExtended } from './firestore-extended';\r\nimport { FirestoreWrapper } from './firebase-extended-wrapper';\r\nexport class FirebaseExtended extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlYmFzZS1leHRlbmRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBRXJELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtGaXJlYmFzZUV4dGVuZGVkV3JhcHBlcn0gZnJvbSAnLi9maXJlYmFzZS1leHRlbmRlZC13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkIGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHAsIGRlZmF1bHREb2NJZDogc3RyaW5nID0gJ2RhdGEnKSB7XHJcbiAgICBzdXBlcihuZXcgRmlyZWJhc2VFeHRlbmRlZFdyYXBwZXIoZmlyZWJhc2VBcHApLCBkZWZhdWx0RG9jSWQpO1xyXG4gIH1cclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FirestoreExtended } from './firestore-extended';\r\nimport { FirestoreWrapper } from './firebase-extended-wrapper';\r\nexport class FirebaseExtended extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UtZXh0ZW5kZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlYmFzZS1leHRlbmRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVwRSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsaUJBQWlCO0lBRXJELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuaW1wb3J0IHtGaXJlYmFzZUV4dGVuZGVkV3JhcHBlcn0gZnJvbSAnLi9maXJlYmFzZS1leHRlbmRlZC13cmFwcGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUV4dGVuZGVkIGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihmaXJlYmFzZUFwcDogRmlyZWJhc2VBcHAsIGRlZmF1bHREb2NJZDogc3RyaW5nID0gJ2RhdGEnKSB7XHJcbiAgICBzdXBlcihuZXcgRmlyZWJhc2VFeHRlbmRlZFdyYXBwZXIoZmlyZWJhc2VBcHApLCBkZWZhdWx0RG9jSWQpO1xyXG4gIH1cclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"firebase-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.class.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,26],[34,0,0,32],[56,0,0,54],[57,0,0,55]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[32,0,2,31],[34,0,2,32],[40,0,2,38],[69,0,2,67],[70,0,2,68]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[29,0,4,30],[38,0,4,38],[55,0,4,55]],[[4,0,6,2],[16,0,6,14],[27,0,6,38],[29,0,6,40],[44,0,6,63],[50,0,6,69]],[[8,0,7,4],[13,0,7,9],[14,0,7,10],[18,0,7,14],[41,0,7,37],[42,0,7,38],[53,0,7,49],[54,0,7,50],[56,0,7,52],[68,0,7,64],[69,0,7,65],[70,0,7,66]],[[4,0,8,2],[5,0,8,3]],[[1,0,9,1]]],"sourcesContent":["import {FirestoreExtended} from './firestore-extended';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {FirestoreWrapper} from './firebase-extended-wrapper';\r\n\r\nexport class FirebaseExtended extends FirestoreExtended {\r\n\r\n  constructor(firebaseApp: FirebaseApp, defaultDocId: string = 'data') {\r\n    super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n  }\r\n}\r\n"]},"resolvedIds":{"./firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firebase-extended-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[26,0,0,26],[28,0,0,28],[34,0,0,34],[56,0,0,56],[57,0,0,57]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[32,0,1,32],[34,0,1,34],[40,0,1,40],[69,0,1,69],[70,0,1,70]],[[0,0,2,0],[6,0,2,6],[13,0,2,13],[29,0,2,30],[38,0,2,38],[55,0,2,55]],[[4,0,3,4],[16,0,3,16],[27,0,3,27],[29,0,3,29],[41,0,3,41],[44,0,3,44],[50,0,3,50]],[[8,0,4,8],[13,0,4,13],[14,0,4,14],[18,0,4,18],[41,0,4,41],[42,0,4,42],[53,0,4,53],[54,0,4,54],[56,0,4,56],[68,0,4,68],[69,0,4,69],[70,0,4,70]],[[4,0,5,4],[5,0,5,5]],[[1,0,6,1]],[[0,0,7,0],[1154,0,7,1154]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3256,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"Injectable"},"local":{"type":"Identifier","start":9,"end":19,"name":"Injectable"}}],"source":{"type":"Literal","start":27,"end":42,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":45,"end":101,"specifiers":[{"type":"ImportSpecifier","start":54,"end":70,"imported":{"type":"Identifier","start":54,"end":70,"name":"FirebaseExtended"},"local":{"type":"Identifier","start":54,"end":70,"name":"FirebaseExtended"}}],"source":{"type":"Literal","start":78,"end":100,"value":"../firebase-extended","raw":"'../firebase-extended'"}},{"type":"ImportDeclaration","start":103,"end":139,"specifiers":[{"type":"ImportNamespaceSpecifier","start":110,"end":117,"local":{"type":"Identifier","start":115,"end":117,"name":"i0"}}],"source":{"type":"Literal","start":123,"end":138,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":141,"end":186,"specifiers":[{"type":"ImportNamespaceSpecifier","start":148,"end":155,"local":{"type":"Identifier","start":153,"end":155,"name":"i1"}}],"source":{"type":"Literal","start":161,"end":185,"value":"./ngx-firebase.service","raw":"\"./ngx-firebase.service\""}},{"type":"ExportNamedDeclaration","start":188,"end":582,"declaration":{"type":"ClassDeclaration","start":195,"end":582,"id":{"type":"Identifier","start":201,"end":228,"name":"NgxFirestoreExtendedService"},"superClass":null,"body":{"type":"ClassBody","start":229,"end":582,"body":[{"type":"MethodDefinition","start":236,"end":459,"static":false,"computed":false,"key":{"type":"Identifier","start":236,"end":247,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":247,"end":459,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":248,"end":266,"name":"ngxFirebaseService"}],"body":{"type":"BlockStatement","start":268,"end":459,"body":[{"type":"ExpressionStatement","start":279,"end":324,"expression":{"type":"AssignmentExpression","start":279,"end":323,"operator":"=","left":{"type":"MemberExpression","start":279,"end":302,"object":{"type":"ThisExpression","start":279,"end":283},"property":{"type":"Identifier","start":284,"end":302,"name":"ngxFirebaseService"},"computed":false,"optional":false},"right":{"type":"Identifier","start":305,"end":323,"name":"ngxFirebaseService"}}},{"type":"ExpressionStatement","start":334,"end":402,"expression":{"type":"AssignmentExpression","start":334,"end":401,"operator":"=","left":{"type":"MemberExpression","start":334,"end":346,"object":{"type":"ThisExpression","start":334,"end":338},"property":{"type":"Identifier","start":339,"end":346,"name":"fireExt"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":349,"end":401,"callee":{"type":"Identifier","start":353,"end":369,"name":"FirebaseExtended"},"arguments":[{"type":"MemberExpression","start":370,"end":400,"object":{"type":"Identifier","start":370,"end":388,"name":"ngxFirebaseService"},"property":{"type":"Identifier","start":389,"end":400,"name":"firebaseApp"},"computed":false,"optional":false}]}}}]}}},{"type":"MethodDefinition","start":465,"end":579,"static":false,"computed":false,"key":{"type":"Identifier","start":469,"end":480,"name":"firebaseApp"},"kind":"get","value":{"type":"FunctionExpression","start":480,"end":579,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":483,"end":579,"body":[{"type":"ReturnStatement","start":529,"end":572,"argument":{"type":"MemberExpression","start":536,"end":571,"object":{"type":"MemberExpression","start":536,"end":559,"object":{"type":"ThisExpression","start":536,"end":540},"property":{"type":"Identifier","start":541,"end":559,"name":"ngxFirebaseService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":560,"end":571,"name":"firebaseApp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":584,"end":816,"expression":{"type":"AssignmentExpression","start":584,"end":815,"operator":"=","left":{"type":"MemberExpression","start":584,"end":616,"object":{"type":"Identifier","start":584,"end":611,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":612,"end":616,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":619,"end":815,"callee":{"type":"MemberExpression","start":619,"end":640,"object":{"type":"Identifier","start":619,"end":621,"name":"i0"},"property":{"type":"Identifier","start":622,"end":640,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":641,"end":814,"properties":[{"type":"Property","start":643,"end":663,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":643,"end":653,"name":"minVersion"},"value":{"type":"Literal","start":655,"end":663,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":665,"end":682,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":665,"end":672,"name":"version"},"value":{"type":"Literal","start":674,"end":682,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":684,"end":696,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":684,"end":692,"name":"ngImport"},"value":{"type":"Identifier","start":694,"end":696,"name":"i0"},"kind":"init"},{"type":"Property","start":698,"end":731,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":698,"end":702,"name":"type"},"value":{"type":"Identifier","start":704,"end":731,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":733,"end":773,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":733,"end":737,"name":"deps"},"value":{"type":"ArrayExpression","start":739,"end":773,"elements":[{"type":"ObjectExpression","start":740,"end":772,"properties":[{"type":"Property","start":742,"end":770,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":742,"end":747,"name":"token"},"value":{"type":"MemberExpression","start":749,"end":770,"object":{"type":"Identifier","start":749,"end":751,"name":"i1"},"property":{"type":"Identifier","start":752,"end":770,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":775,"end":812,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":775,"end":781,"name":"target"},"value":{"type":"MemberExpression","start":783,"end":812,"object":{"type":"MemberExpression","start":783,"end":801,"object":{"type":"Identifier","start":783,"end":785,"name":"i0"},"property":{"type":"Identifier","start":786,"end":801,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":802,"end":812,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":818,"end":993,"expression":{"type":"AssignmentExpression","start":818,"end":992,"operator":"=","left":{"type":"MemberExpression","start":818,"end":851,"object":{"type":"Identifier","start":818,"end":845,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":846,"end":851,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":854,"end":992,"callee":{"type":"MemberExpression","start":854,"end":878,"object":{"type":"Identifier","start":854,"end":856,"name":"i0"},"property":{"type":"Identifier","start":857,"end":878,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":879,"end":991,"properties":[{"type":"Property","start":881,"end":901,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":881,"end":891,"name":"minVersion"},"value":{"type":"Literal","start":893,"end":901,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":903,"end":920,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":903,"end":910,"name":"version"},"value":{"type":"Literal","start":912,"end":920,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":922,"end":934,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":922,"end":930,"name":"ngImport"},"value":{"type":"Identifier","start":932,"end":934,"name":"i0"},"kind":"init"},{"type":"Property","start":936,"end":969,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":936,"end":940,"name":"type"},"value":{"type":"Identifier","start":942,"end":969,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":971,"end":989,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":971,"end":981,"name":"providedIn"},"value":{"type":"Literal","start":983,"end":989,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":995,"end":1333,"expression":{"type":"CallExpression","start":995,"end":1332,"callee":{"type":"MemberExpression","start":995,"end":1022,"object":{"type":"Identifier","start":995,"end":997,"name":"i0"},"property":{"type":"Identifier","start":998,"end":1022,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1023,"end":1331,"properties":[{"type":"Property","start":1025,"end":1045,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1025,"end":1035,"name":"minVersion"},"value":{"type":"Literal","start":1037,"end":1045,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1047,"end":1064,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"version"},"value":{"type":"Literal","start":1056,"end":1064,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1066,"end":1078,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1066,"end":1074,"name":"ngImport"},"value":{"type":"Identifier","start":1076,"end":1078,"name":"i0"},"kind":"init"},{"type":"Property","start":1080,"end":1113,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1080,"end":1084,"name":"type"},"value":{"type":"Identifier","start":1086,"end":1113,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":1115,"end":1254,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1115,"end":1125,"name":"decorators"},"value":{"type":"ArrayExpression","start":1127,"end":1254,"elements":[{"type":"ObjectExpression","start":1128,"end":1253,"properties":[{"type":"Property","start":1143,"end":1159,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1143,"end":1147,"name":"type"},"value":{"type":"Identifier","start":1149,"end":1159,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1174,"end":1242,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1174,"end":1178,"name":"args"},"value":{"type":"ArrayExpression","start":1180,"end":1242,"elements":[{"type":"ObjectExpression","start":1181,"end":1241,"properties":[{"type":"Property","start":1204,"end":1222,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1204,"end":1214,"name":"providedIn"},"value":{"type":"Literal","start":1216,"end":1222,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1256,"end":1329,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1256,"end":1270,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1272,"end":1329,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1284,"end":1329,"body":[{"type":"ReturnStatement","start":1286,"end":1327,"argument":{"type":"ArrayExpression","start":1293,"end":1326,"elements":[{"type":"ObjectExpression","start":1294,"end":1325,"properties":[{"type":"Property","start":1296,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1296,"end":1300,"name":"type"},"value":{"type":"MemberExpression","start":1302,"end":1323,"object":{"type":"Identifier","start":1302,"end":1304,"name":"i1"},"property":{"type":"Identifier","start":1305,"end":1323,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUl0QyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxpREFBaUQ7SUFDekgsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FGMUIsTUFBTTsyRkFFUCwyQkFBMkI7a0JBSHZDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtOZ3hGaXJlYmFzZVNlcnZpY2V9IGZyb20gJy4vbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7RmlyZWJhc2VFeHRlbmRlZH0gZnJvbSAnLi4vZmlyZWJhc2UtZXh0ZW5kZWQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlc3RvcmVFeHRlbmRlZFNlcnZpY2Uge1xuXG4gIHB1YmxpYyBmaXJlRXh0OiBGaXJlYmFzZUV4dGVuZGVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd4RmlyZWJhc2VTZXJ2aWNlOiBOZ3hGaXJlYmFzZVNlcnZpY2UpIHtcbiAgICB0aGlzLmZpcmVFeHQgPSBuZXcgRmlyZWJhc2VFeHRlbmRlZChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","start":1335,"end":3129},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":3131,"end":3256}]},"code":"import { Injectable } from '@angular/core';\r\nimport { FirebaseExtended } from '../firebase-extended';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirebaseExtended(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUl0QyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxpREFBaUQ7SUFDekgsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FGMUIsTUFBTTsyRkFFUCwyQkFBMkI7a0JBSHZDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtOZ3hGaXJlYmFzZVNlcnZpY2V9IGZyb20gJy4vbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7RmlyZWJhc2VFeHRlbmRlZH0gZnJvbSAnLi4vZmlyZWJhc2UtZXh0ZW5kZWQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlc3RvcmVFeHRlbmRlZFNlcnZpY2Uge1xuXG4gIHB1YmxpYyBmaXJlRXh0OiBGaXJlYmFzZUV4dGVuZGVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd4RmlyZWJhc2VTZXJ2aWNlOiBOZ3hGaXJlYmFzZVNlcnZpY2UpIHtcbiAgICB0aGlzLmZpcmVFeHQgPSBuZXcgRmlyZWJhc2VFeHRlbmRlZChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Injectable } from '@angular/core';\r\nimport { FirebaseExtended } from '../firebase-extended';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirebaseExtended(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDOzs7QUFLdEQsTUFBTSxPQUFPLDJCQUEyQjtJQUl0QyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBRSxpREFBaUQ7SUFDekgsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FGMUIsTUFBTTsyRkFFUCwyQkFBMkI7a0JBSHZDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtOZ3hGaXJlYmFzZVNlcnZpY2V9IGZyb20gJy4vbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7RmlyZWJhc2VFeHRlbmRlZH0gZnJvbSAnLi4vZmlyZWJhc2UtZXh0ZW5kZWQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hGaXJlc3RvcmVFeHRlbmRlZFNlcnZpY2Uge1xuXG4gIHB1YmxpYyBmaXJlRXh0OiBGaXJlYmFzZUV4dGVuZGVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd4RmlyZWJhc2VTZXJ2aWNlOiBOZ3hGaXJlYmFzZVNlcnZpY2UpIHtcbiAgICB0aGlzLmZpcmVFeHQgPSBuZXcgRmlyZWJhc2VFeHRlbmRlZChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firestore-extended.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firestore-extended.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[19,0,0,18],[21,0,0,19],[27,0,0,25],[42,0,0,40],[43,0,0,41]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[25,0,4,24],[27,0,4,25],[33,0,4,31],[55,0,4,53],[56,0,4,54]],[],[],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[40,0,9,40]],[[4,0,13,2],[16,0,13,22],[34,0,13,60]],[[8,0,13,22],[31,0,13,40],[34,0,13,22],[52,0,13,40],[53,0,13,60]],[[8,0,14,4],[12,0,14,8],[13,0,14,9],[20,0,14,16],[23,0,14,19],[27,0,14,23],[43,0,14,39],[44,0,14,40],[62,0,14,58],[63,0,14,59],[74,0,14,70],[75,0,14,71],[76,0,14,72],[77,0,14,74],[126,0,14,123]],[[4,0,15,2],[5,0,15,3]],[[4,0,17,2],[8,0,17,6],[19,0,17,17]],[[8,0,18,4],[33,0,18,29]],[[8,0,19,4],[15,0,19,11],[19,0,19,15],[20,0,19,16],[38,0,19,34],[39,0,19,35],[50,0,19,46],[51,0,19,47]],[[4,0,20,2],[5,0,20,3]],[],[[120,0,9,13],[147,0,9,40]],[[124,0,9,13],[151,0,9,40],[165,0,7,14],[171,0,7,20]],[[91,0,9,13],[118,0,9,40]],[[18,0,6,1],[28,0,6,11]],[[19,0,6,12]],[[20,0,7,2],[30,0,7,12],[32,0,7,14],[38,0,7,20]],[[17,0,8,1]]],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {NgxFirebaseService} from './ngx-firebase.service';\nimport {FirebaseApp} from 'firebase/app';\nimport {FirebaseExtended} from '../firebase-extended';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFirestoreExtendedService {\n\n  public fireExt: FirebaseExtended;\n\n  constructor(private ngxFirebaseService: NgxFirebaseService) {\n    this.fireExt = new FirebaseExtended(ngxFirebaseService.firebaseApp);  /* inject Firebase App from NgxFirebaseService */\n  }\n\n  get firebaseApp(): FirebaseApp {\n    /** Convenience getter */\n    return this.ngxFirebaseService.firebaseApp;\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../firebase-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[19,0,0,19],[21,0,0,21],[27,0,0,27],[42,0,0,42],[43,0,0,43]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[25,0,1,25],[27,0,1,27],[33,0,1,33],[55,0,1,55],[56,0,1,56]],[[0,0,2,0],[7,0,2,7],[12,0,2,12],[14,0,2,14],[20,0,2,20],[35,0,2,35],[36,0,2,36]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[14,0,3,14],[20,0,3,20],[44,0,3,44],[45,0,3,45]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[40,0,4,40]],[[4,0,5,4],[16,0,5,16],[34,0,5,34]],[[8,0,6,8],[12,0,6,12],[13,0,6,13],[31,0,6,31],[34,0,6,34],[52,0,6,52],[53,0,6,53]],[[8,0,7,8],[12,0,7,12],[13,0,7,13],[20,0,7,20],[23,0,7,23],[27,0,7,27],[43,0,7,43],[44,0,7,44],[62,0,7,62],[63,0,7,63],[74,0,7,74],[75,0,7,75],[76,0,7,76],[77,0,7,77],[126,0,7,126]],[[4,0,8,4],[5,0,8,5]],[[4,0,9,4],[8,0,9,8],[19,0,9,19]],[[8,0,10,8],[33,0,10,33]],[[8,0,11,8],[15,0,11,15],[19,0,11,19],[20,0,11,20],[38,0,11,38],[39,0,11,39],[50,0,11,50],[51,0,11,51]],[[4,0,12,4],[5,0,12,5]],[[1,0,13,1]],[[0,0,14,0],[27,0,14,27],[28,0,14,28],[32,0,14,32],[35,0,14,35],[37,0,14,37],[38,0,14,38],[56,0,14,56],[57,0,14,57],[59,0,14,59],[69,0,14,69],[71,0,14,71],[79,0,14,79],[81,0,14,81],[88,0,14,88],[90,0,14,90],[98,0,14,98],[100,0,14,100],[108,0,14,108],[110,0,14,110],[112,0,14,112],[114,0,14,114],[118,0,14,118],[120,0,14,120],[147,0,14,147],[149,0,14,149],[153,0,14,153],[155,0,14,155],[156,0,14,156],[158,0,14,158],[163,0,14,163],[165,0,14,165],[167,0,14,167],[168,0,14,168],[186,0,14,186],[188,0,14,188],[189,0,14,189],[191,0,14,191],[197,0,14,197],[199,0,14,199],[201,0,14,201],[202,0,14,202],[217,0,14,217],[218,0,14,218],[228,0,14,228],[230,0,14,230],[231,0,14,231],[232,0,14,232]],[[0,0,15,0],[27,0,15,27],[28,0,15,28],[33,0,15,33],[36,0,15,36],[38,0,15,38],[39,0,15,39],[60,0,15,60],[61,0,15,61],[63,0,15,63],[73,0,15,73],[75,0,15,75],[83,0,15,83],[85,0,15,85],[92,0,15,92],[94,0,15,94],[102,0,15,102],[104,0,15,104],[112,0,15,112],[114,0,15,114],[116,0,15,116],[118,0,15,118],[122,0,15,122],[124,0,15,124],[151,0,15,151],[153,0,15,153],[163,0,15,163],[165,0,15,165],[171,0,15,171],[173,0,15,173],[174,0,15,174],[175,0,15,175]],[[0,0,16,0],[2,0,16,2],[3,0,16,3],[27,0,16,27],[28,0,16,28],[30,0,16,30],[40,0,16,40],[42,0,16,42],[50,0,16,50],[52,0,16,52],[59,0,16,59],[61,0,16,61],[69,0,16,69],[71,0,16,71],[79,0,16,79],[81,0,16,81],[83,0,16,83],[85,0,16,85],[89,0,16,89],[91,0,16,91],[118,0,16,118],[120,0,16,120],[130,0,16,130],[132,0,16,132],[133,0,16,133]],[[12,0,17,12],[16,0,17,16],[18,0,17,18],[28,0,17,28]],[[12,0,18,12],[16,0,18,16],[18,0,18,18],[19,0,18,19]],[[20,0,19,20],[30,0,19,30],[32,0,19,32],[38,0,19,38]],[[17,0,20,17],[18,0,20,18]],[[9,0,21,9],[10,0,21,10],[12,0,21,12],[26,0,21,26],[28,0,21,28],[42,0,21,42],[49,0,21,49],[50,0,21,50],[52,0,21,52],[56,0,21,56],[58,0,21,58],[60,0,21,60],[61,0,21,61],[79,0,21,79],[81,0,21,81],[82,0,21,82],[83,0,21,83],[84,0,21,84],[85,0,21,85],[87,0,21,87],[88,0,21,88],[89,0,21,89]],[[0,0,22,0],[1794,0,22,1794]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2463,"body":[{"type":"ExportAllDeclaration","start":57,"end":100,"exported":null,"source":{"type":"Literal","start":71,"end":99,"value":"./lib/models/firestoreItem","raw":"'./lib/models/firestoreItem'"}},{"type":"ExportAllDeclaration","start":102,"end":143,"exported":null,"source":{"type":"Literal","start":116,"end":142,"value":"./lib/firestore-extended","raw":"'./lib/firestore-extended'"}},{"type":"ExportAllDeclaration","start":145,"end":188,"exported":null,"source":{"type":"Literal","start":159,"end":187,"value":"./lib/sub-collection-query","raw":"'./lib/sub-collection-query'"}},{"type":"ExportAllDeclaration","start":190,"end":234,"exported":null,"source":{"type":"Literal","start":204,"end":233,"value":"./lib/sub-collection-writer","raw":"'./lib/sub-collection-writer'"}},{"type":"ExportAllDeclaration","start":236,"end":266,"exported":null,"source":{"type":"Literal","start":250,"end":265,"value":"./lib/helpers","raw":"'./lib/helpers'"}},{"type":"ExportAllDeclaration","start":268,"end":301,"exported":null,"source":{"type":"Literal","start":282,"end":300,"value":"./lib/interfaces","raw":"'./lib/interfaces'"}},{"type":"ExportAllDeclaration","start":407,"end":455,"exported":null,"source":{"type":"Literal","start":421,"end":454,"value":"./lib/firebase-extended-wrapper","raw":"'./lib/firebase-extended-wrapper'"}},{"type":"ExportAllDeclaration","start":457,"end":513,"exported":null,"source":{"type":"Literal","start":471,"end":512,"value":"./lib/rxjs-ops/combine-latest-to-object","raw":"'./lib/rxjs-ops/combine-latest-to-object'"}},{"type":"ExportAllDeclaration","start":515,"end":548,"exported":null,"source":{"type":"Literal","start":529,"end":547,"value":"./lib/ngx/config","raw":"'./lib/ngx/config'"}},{"type":"ExportAllDeclaration","start":550,"end":596,"exported":null,"source":{"type":"Literal","start":564,"end":595,"value":"./lib/ngx/ngx-firebase.module","raw":"'./lib/ngx/ngx-firebase.module'"}},{"type":"ExportAllDeclaration","start":598,"end":645,"exported":null,"source":{"type":"Literal","start":612,"end":644,"value":"./lib/ngx/ngx-firebase.service","raw":"'./lib/ngx/ngx-firebase.service'"}},{"type":"ExportAllDeclaration","start":647,"end":704,"exported":null,"source":{"type":"Literal","start":661,"end":703,"value":"./lib/ngx/ngx-firestore-extended.service","raw":"'./lib/ngx/ngx-firestore-extended.service'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyw4Q0FBOEM7QUFDOUMsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUV4RCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBmaXJlc3RvcmUtZXh0ZW5kZWQudHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZmlyZXN0b3JlSXRlbSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtZXh0ZW5kZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24tcXVlcnknO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2hlbHBlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaW50ZXJmYWNlcyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZCc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZC13cmFwcGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","start":706,"end":2344},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","start":2346,"end":2463}]},"code":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n// export * from './lib/rxfirestore-extended';\r\n// export * from './lib/rxfirestore-extended-wrapper';\r\nexport * from './lib/firebase-extended-wrapper';\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyw4Q0FBOEM7QUFDOUMsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUV4RCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBmaXJlc3RvcmUtZXh0ZW5kZWQudHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZmlyZXN0b3JlSXRlbSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtZXh0ZW5kZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24tcXVlcnknO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2hlbHBlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaW50ZXJmYWNlcyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZCc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZC13cmFwcGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n// export * from './lib/rxfirestore-extended';\r\n// export * from './lib/rxfirestore-extended-wrapper';\r\nexport * from './lib/firebase-extended-wrapper';\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyw4Q0FBOEM7QUFDOUMsc0RBQXNEO0FBQ3RELGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYyx5Q0FBeUMsQ0FBQztBQUV4RCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBmaXJlc3RvcmUtZXh0ZW5kZWQudHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZmlyZXN0b3JlSXRlbSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtZXh0ZW5kZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24tcXVlcnknO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2hlbHBlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaW50ZXJmYWNlcyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZCc7XG4vLyBleHBvcnQgKiBmcm9tICcuL2xpYi9yeGZpcmVzdG9yZS1leHRlbmRlZC13cmFwcGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmViYXNlLWV4dGVuZGVkLXdyYXBwZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,10,0],[46,0,10,46]],[[0,0,11,0],[54,0,11,54]],[[0,0,12,0],[14,0,12,14],[47,0,12,47],[48,0,12,48]],[[0,0,13,0],[14,0,13,14],[55,0,13,55],[56,0,13,56]],[[0,0,15,0],[14,0,15,14],[32,0,15,32],[33,0,15,33]],[[0,0,16,0],[14,0,16,14],[45,0,16,45],[46,0,16,46]],[[0,0,17,0],[14,0,17,14],[46,0,17,46],[47,0,17,47]],[[0,0,18,0],[14,0,18,14],[56,0,18,56],[57,0,18,57]]],"sourcesContent":["/*\n * Public API Surface of firestore-extended.ts\n */\n\nexport * from './lib/models/firestoreItem';\nexport * from './lib/firestore-extended';\nexport * from './lib/sub-collection-query';\nexport * from './lib/sub-collection-writer';\nexport * from './lib/helpers';\nexport * from './lib/interfaces';\n// export * from './lib/rxfirestore-extended';\n// export * from './lib/rxfirestore-extended-wrapper';\nexport * from './lib/firebase-extended-wrapper';\nexport * from './lib/rxjs-ops/combine-latest-to-object';\n\nexport * from './lib/ngx/config';\nexport * from './lib/ngx/ngx-firebase.module';\nexport * from './lib/ngx/ngx-firebase.service';\nexport * from './lib/ngx/ngx-firestore-extended.service';\n\n"]},"resolvedIds":{"./lib/firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-writer":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-query":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/interfaces":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/models/firestoreItem":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firebase-extended-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firebase-extended-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/rxjs-ops/combine-latest-to-object":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firestore-extended.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.module":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[14,0,3,14],[42,0,3,42],[43,0,3,43]],[[0,0,4,0],[14,0,4,14],[40,0,4,40],[41,0,4,41]],[[0,0,5,0],[14,0,5,14],[42,0,5,42],[43,0,5,43]],[[0,0,6,0],[14,0,6,14],[43,0,6,43],[44,0,6,44]],[[0,0,7,0],[14,0,7,14],[29,0,7,29],[30,0,7,30]],[[0,0,8,0],[14,0,8,14],[32,0,8,32],[33,0,8,33]],[[0,0,9,0],[46,0,9,46]],[[0,0,10,0],[54,0,10,54]],[[0,0,11,0],[14,0,11,14],[47,0,11,47],[48,0,11,48]],[[0,0,12,0],[14,0,12,14],[55,0,12,55],[56,0,12,56]],[[0,0,13,0],[14,0,13,14],[32,0,13,32],[33,0,13,33]],[[0,0,14,0],[14,0,14,14],[45,0,14,45],[46,0,14,46]],[[0,0,15,0],[14,0,15,14],[46,0,15,46],[47,0,15,47]],[[0,0,16,0],[14,0,16,14],[56,0,16,56],[57,0,16,57]],[[0,0,17,0],[1638,0,17,1638]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":651,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","start":82,"end":532},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","start":534,"end":651}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[14,0,3,14],[28,0,3,28],[29,0,3,29]],[[0,0,4,0],[450,0,4,450]]]}],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{},"downlevel-ts":{}}}
