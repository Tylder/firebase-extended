{"modules":[{"ast":{"type":"Program","start":0,"end":4432,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","start":12,"end":4302},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/models/module.js.map","start":4304,"end":4432}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/models/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[4290,0,1,4290]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11740,"body":[{"type":"ImportDeclaration","start":0,"end":53,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"collection"},"local":{"type":"Identifier","start":9,"end":19,"name":"collection"}},{"type":"ImportSpecifier","start":21,"end":24,"imported":{"type":"Identifier","start":21,"end":24,"name":"doc"},"local":{"type":"Identifier","start":21,"end":24,"name":"doc"}}],"source":{"type":"Literal","start":32,"end":52,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":156,"end":463,"declaration":{"type":"FunctionDeclaration","start":163,"end":463,"id":{"type":"Identifier","start":172,"end":186,"name":"getRefFromPath"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":187,"end":191,"name":"path"},{"type":"Identifier","start":193,"end":202,"name":"firestore"}],"body":{"type":"BlockStatement","start":204,"end":463,"body":[{"type":"VariableDeclaration","start":211,"end":260,"declarations":[{"type":"VariableDeclarator","start":217,"end":259,"id":{"type":"Identifier","start":217,"end":234,"name":"pathSegmentAmount"},"init":{"type":"MemberExpression","start":237,"end":259,"object":{"type":"CallExpression","start":237,"end":252,"callee":{"type":"MemberExpression","start":237,"end":247,"object":{"type":"Identifier","start":237,"end":241,"name":"path"},"property":{"type":"Identifier","start":242,"end":247,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":248,"end":251,"value":"/","raw":"'/'"}],"optional":false},"property":{"type":"Identifier","start":253,"end":259,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":266,"end":460,"test":{"type":"BinaryExpression","start":270,"end":297,"left":{"type":"BinaryExpression","start":270,"end":291,"left":{"type":"Identifier","start":270,"end":287,"name":"pathSegmentAmount"},"operator":"%","right":{"type":"Literal","start":290,"end":291,"value":2,"raw":"2"}},"operator":"===","right":{"type":"Literal","start":296,"end":297,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":299,"end":370,"body":[{"type":"ReturnStatement","start":335,"end":363,"argument":{"type":"CallExpression","start":342,"end":362,"callee":{"type":"Identifier","start":342,"end":345,"name":"doc"},"arguments":[{"type":"Identifier","start":346,"end":355,"name":"firestore"},{"type":"Identifier","start":357,"end":361,"name":"path"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":381,"end":460,"body":[{"type":"ReturnStatement","start":418,"end":453,"argument":{"type":"CallExpression","start":425,"end":452,"callee":{"type":"Identifier","start":425,"end":435,"name":"collection"},"arguments":[{"type":"Identifier","start":436,"end":445,"name":"firestore"},{"type":"Identifier","start":447,"end":451,"name":"path"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":465,"end":653,"declaration":{"type":"FunctionDeclaration","start":472,"end":653,"id":{"type":"Identifier","start":481,"end":497,"name":"getSubCollection"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":498,"end":504,"name":"docRef"},{"type":"Identifier","start":506,"end":520,"name":"collectionName"}],"body":{"type":"BlockStatement","start":522,"end":653,"body":[{"type":"VariableDeclaration","start":529,"end":592,"declarations":[{"type":"VariableDeclarator","start":535,"end":591,"id":{"type":"Identifier","start":535,"end":549,"name":"collectionPath"},"init":{"type":"CallExpression","start":552,"end":591,"callee":{"type":"MemberExpression","start":552,"end":570,"object":{"type":"MemberExpression","start":552,"end":563,"object":{"type":"Identifier","start":552,"end":558,"name":"docRef"},"property":{"type":"Identifier","start":559,"end":563,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":564,"end":570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":571,"end":574,"value":"/","raw":"'/'"},{"type":"Identifier","start":576,"end":590,"name":"collectionName"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":598,"end":650,"argument":{"type":"CallExpression","start":605,"end":649,"callee":{"type":"Identifier","start":605,"end":615,"name":"collection"},"arguments":[{"type":"MemberExpression","start":616,"end":632,"object":{"type":"Identifier","start":616,"end":622,"name":"docRef"},"property":{"type":"Identifier","start":623,"end":632,"name":"firestore"},"computed":false,"optional":false},{"type":"Identifier","start":634,"end":648,"name":"collectionPath"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":655,"end":776,"declaration":{"type":"FunctionDeclaration","start":662,"end":776,"id":{"type":"Identifier","start":671,"end":686,"name":"getDocRefWithId"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":687,"end":700,"name":"collectionRef"},{"type":"Identifier","start":702,"end":704,"name":"id"}],"body":{"type":"BlockStatement","start":706,"end":776,"body":[{"type":"ReturnStatement","start":713,"end":773,"argument":{"type":"CallExpression","start":720,"end":772,"callee":{"type":"Identifier","start":720,"end":723,"name":"doc"},"arguments":[{"type":"MemberExpression","start":724,"end":747,"object":{"type":"Identifier","start":724,"end":737,"name":"collectionRef"},"property":{"type":"Identifier","start":738,"end":747,"name":"firestore"},"computed":false,"optional":false},{"type":"MemberExpression","start":749,"end":767,"object":{"type":"Identifier","start":749,"end":762,"name":"collectionRef"},"property":{"type":"Identifier","start":763,"end":767,"name":"path"},"computed":false,"optional":false},{"type":"Identifier","start":769,"end":771,"name":"id"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":961,"end":1260,"declaration":{"type":"FunctionDeclaration","start":968,"end":1260,"id":{"type":"Identifier","start":977,"end":990,"name":"addDataToItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":991,"end":995,"name":"item"},{"type":"Identifier","start":997,"end":1006,"name":"dataToAdd"},{"type":"AssignmentPattern","start":1008,"end":1023,"left":{"type":"Identifier","start":1008,"end":1015,"name":"inplace"},"right":{"type":"Literal","start":1018,"end":1023,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":1025,"end":1260,"body":[{"type":"IfStatement","start":1032,"end":1257,"test":{"type":"Identifier","start":1036,"end":1043,"name":"inplace"},"consequent":{"type":"BlockStatement","start":1045,"end":1171,"body":[{"type":"ExpressionStatement","start":1056,"end":1142,"expression":{"type":"CallExpression","start":1056,"end":1141,"callee":{"type":"MemberExpression","start":1056,"end":1089,"object":{"type":"CallExpression","start":1056,"end":1081,"callee":{"type":"MemberExpression","start":1056,"end":1070,"object":{"type":"Identifier","start":1056,"end":1062,"name":"Object"},"property":{"type":"Identifier","start":1063,"end":1070,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1071,"end":1080,"name":"dataToAdd"}],"optional":false},"property":{"type":"Identifier","start":1082,"end":1089,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1090,"end":1140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"ArrayPattern","start":1091,"end":1097,"elements":[{"type":"Identifier","start":1092,"end":1093,"name":"k"},{"type":"Identifier","start":1095,"end":1096,"name":"v"}]}],"body":{"type":"BlockStatement","start":1102,"end":1140,"body":[{"type":"ExpressionStatement","start":1117,"end":1129,"expression":{"type":"AssignmentExpression","start":1117,"end":1128,"operator":"=","left":{"type":"MemberExpression","start":1117,"end":1124,"object":{"type":"Identifier","start":1117,"end":1121,"name":"item"},"property":{"type":"Identifier","start":1122,"end":1123,"name":"k"},"computed":true,"optional":false},"right":{"type":"Identifier","start":1127,"end":1128,"name":"v"}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1152,"end":1164,"argument":{"type":"Identifier","start":1159,"end":1163,"name":"item"}}]},"alternate":{"type":"BlockStatement","start":1182,"end":1257,"body":[{"type":"ReturnStatement","start":1193,"end":1250,"argument":{"type":"CallExpression","start":1200,"end":1249,"callee":{"type":"MemberExpression","start":1200,"end":1213,"object":{"type":"Identifier","start":1200,"end":1206,"name":"Object"},"property":{"type":"Identifier","start":1207,"end":1213,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1214,"end":1237,"callee":{"type":"MemberExpression","start":1214,"end":1227,"object":{"type":"Identifier","start":1214,"end":1220,"name":"Object"},"property":{"type":"Identifier","start":1221,"end":1227,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1228,"end":1230,"properties":[]},{"type":"Identifier","start":1232,"end":1236,"name":"item"}],"optional":false},{"type":"Identifier","start":1239,"end":1248,"name":"dataToAdd"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1579,"end":1831,"declaration":{"type":"FunctionDeclaration","start":1586,"end":1831,"id":{"type":"Identifier","start":1595,"end":1609,"name":"addCreatedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1610,"end":1614,"name":"item"},{"type":"AssignmentPattern","start":1616,"end":1631,"left":{"type":"Identifier","start":1616,"end":1623,"name":"inplace"},"right":{"type":"Literal","start":1626,"end":1631,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":1633,"end":1657,"left":{"type":"Identifier","start":1633,"end":1644,"name":"createdDate"},"right":{"type":"NewExpression","start":1647,"end":1657,"callee":{"type":"Identifier","start":1651,"end":1655,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":1659,"end":1831,"body":[{"type":"IfStatement","start":1712,"end":1769,"test":{"type":"BinaryExpression","start":1716,"end":1737,"left":{"type":"Literal","start":1716,"end":1729,"value":"createdDate","raw":"'createdDate'"},"operator":"in","right":{"type":"Identifier","start":1733,"end":1737,"name":"item"}},"consequent":{"type":"BlockStatement","start":1739,"end":1769,"body":[{"type":"ReturnStatement","start":1750,"end":1762,"argument":{"type":"Identifier","start":1757,"end":1761,"name":"item"}}]},"alternate":null},{"type":"ReturnStatement","start":1775,"end":1828,"argument":{"type":"CallExpression","start":1782,"end":1827,"callee":{"type":"Identifier","start":1782,"end":1795,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":1796,"end":1800,"name":"item"},{"type":"ObjectExpression","start":1802,"end":1817,"properties":[{"type":"Property","start":1804,"end":1815,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":1804,"end":1815,"name":"createdDate"},"kind":"init","value":{"type":"Identifier","start":1804,"end":1815,"name":"createdDate"}}]},{"type":"Identifier","start":1819,"end":1826,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2086,"end":2232,"declaration":{"type":"FunctionDeclaration","start":2093,"end":2232,"id":{"type":"Identifier","start":2102,"end":2117,"name":"addModifiedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2118,"end":2122,"name":"item"},{"type":"AssignmentPattern","start":2124,"end":2139,"left":{"type":"Identifier","start":2124,"end":2131,"name":"inplace"},"right":{"type":"Literal","start":2134,"end":2139,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":2141,"end":2166,"left":{"type":"Identifier","start":2141,"end":2153,"name":"modifiedDate"},"right":{"type":"NewExpression","start":2156,"end":2166,"callee":{"type":"Identifier","start":2160,"end":2164,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":2168,"end":2232,"body":[{"type":"ReturnStatement","start":2175,"end":2229,"argument":{"type":"CallExpression","start":2182,"end":2228,"callee":{"type":"Identifier","start":2182,"end":2195,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2196,"end":2200,"name":"item"},{"type":"ObjectExpression","start":2202,"end":2218,"properties":[{"type":"Property","start":2204,"end":2216,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2204,"end":2216,"name":"modifiedDate"},"kind":"init","value":{"type":"Identifier","start":2204,"end":2216,"name":"modifiedDate"}}]},{"type":"Identifier","start":2220,"end":2227,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2452,"end":2576,"declaration":{"type":"FunctionDeclaration","start":2459,"end":2576,"id":{"type":"Identifier","start":2468,"end":2480,"name":"addCreatedBy"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2481,"end":2485,"name":"item"},{"type":"Identifier","start":2487,"end":2496,"name":"createdBy"},{"type":"AssignmentPattern","start":2498,"end":2513,"left":{"type":"Identifier","start":2498,"end":2505,"name":"inplace"},"right":{"type":"Literal","start":2508,"end":2513,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":2515,"end":2576,"body":[{"type":"ReturnStatement","start":2522,"end":2573,"argument":{"type":"CallExpression","start":2529,"end":2572,"callee":{"type":"Identifier","start":2529,"end":2542,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2543,"end":2547,"name":"item"},{"type":"ObjectExpression","start":2549,"end":2562,"properties":[{"type":"Property","start":2551,"end":2560,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2551,"end":2560,"name":"createdBy"},"kind":"init","value":{"type":"Identifier","start":2551,"end":2560,"name":"createdBy"}}]},{"type":"Identifier","start":2564,"end":2571,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2847,"end":3229,"declaration":{"type":"FunctionDeclaration","start":2854,"end":3229,"id":{"type":"Identifier","start":2863,"end":2885,"name":"convertTimestampToDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2886,"end":2890,"name":"item"}],"body":{"type":"BlockStatement","start":2892,"end":3229,"body":[{"type":"IfStatement","start":2899,"end":3048,"test":{"type":"CallExpression","start":2903,"end":2937,"callee":{"type":"MemberExpression","start":2903,"end":2922,"object":{"type":"Identifier","start":2903,"end":2907,"name":"item"},"property":{"type":"Identifier","start":2908,"end":2922,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2923,"end":2936,"value":"createdDate","raw":"'createdDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2939,"end":3048,"body":[{"type":"ExpressionStatement","start":2950,"end":2986,"expression":{"type":"AssignmentExpression","start":2950,"end":2985,"operator":"=","left":{"type":"MemberExpression","start":2950,"end":2966,"object":{"type":"Identifier","start":2950,"end":2954,"name":"item"},"property":{"type":"Identifier","start":2955,"end":2966,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2969,"end":2985,"object":{"type":"Identifier","start":2969,"end":2973,"name":"item"},"property":{"type":"Identifier","start":2974,"end":2985,"name":"createdDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2996,"end":3041,"expression":{"type":"AssignmentExpression","start":2996,"end":3040,"operator":"=","left":{"type":"MemberExpression","start":2996,"end":3012,"object":{"type":"Identifier","start":2996,"end":3000,"name":"item"},"property":{"type":"Identifier","start":3001,"end":3012,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3015,"end":3040,"callee":{"type":"MemberExpression","start":3015,"end":3038,"object":{"type":"MemberExpression","start":3015,"end":3031,"object":{"type":"Identifier","start":3015,"end":3019,"name":"item"},"property":{"type":"Identifier","start":3020,"end":3031,"name":"createdDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3032,"end":3038,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":3054,"end":3208,"test":{"type":"CallExpression","start":3058,"end":3093,"callee":{"type":"MemberExpression","start":3058,"end":3077,"object":{"type":"Identifier","start":3058,"end":3062,"name":"item"},"property":{"type":"Identifier","start":3063,"end":3077,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3078,"end":3092,"value":"modifiedDate","raw":"'modifiedDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3095,"end":3208,"body":[{"type":"ExpressionStatement","start":3106,"end":3144,"expression":{"type":"AssignmentExpression","start":3106,"end":3143,"operator":"=","left":{"type":"MemberExpression","start":3106,"end":3123,"object":{"type":"Identifier","start":3106,"end":3110,"name":"item"},"property":{"type":"Identifier","start":3111,"end":3123,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":3126,"end":3143,"object":{"type":"Identifier","start":3126,"end":3130,"name":"item"},"property":{"type":"Identifier","start":3131,"end":3143,"name":"modifiedDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":3154,"end":3201,"expression":{"type":"AssignmentExpression","start":3154,"end":3200,"operator":"=","left":{"type":"MemberExpression","start":3154,"end":3171,"object":{"type":"Identifier","start":3154,"end":3158,"name":"item"},"property":{"type":"Identifier","start":3159,"end":3171,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3174,"end":3200,"callee":{"type":"MemberExpression","start":3174,"end":3198,"object":{"type":"MemberExpression","start":3174,"end":3191,"object":{"type":"Identifier","start":3174,"end":3178,"name":"item"},"property":{"type":"Identifier","start":3179,"end":3191,"name":"modifiedDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3192,"end":3198,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":3214,"end":3226,"argument":{"type":"Identifier","start":3221,"end":3225,"name":"item"}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":3231,"end":11617},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":11619,"end":11740}]},"code":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, item), dataToAdd);\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/helpers.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,1,2],[19,0,1,12],[21,0,3,2],[24,0,3,5],[26,0,8,1],[32,0,8,7],[52,0,8,27],[53,0,8,28]],[[0,0,10,0],[99,0,10,99]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[30,0,11,30],[31,0,11,34],[35,0,11,46],[37,0,11,48],[46,0,11,68]],[[4,0,12,2],[10,0,12,8],[27,0,12,25],[30,0,12,36],[34,0,12,40],[35,0,12,41],[40,0,12,46],[41,0,12,47],[44,0,12,50],[45,0,12,51],[46,0,12,52],[52,0,12,58],[53,0,12,59]],[[4,0,13,2],[8,0,13,6],[25,0,13,23],[28,0,13,26],[29,0,13,27],[34,0,13,32],[35,0,13,33],[37,0,13,35],[39,0,13,37],[63,0,13,61]],[[8,0,14,4],[15,0,14,11],[18,0,14,14],[19,0,14,15],[28,0,14,24],[30,0,14,26],[34,0,14,30],[35,0,14,55],[36,0,14,56]],[[5,0,15,3]],[[9,0,15,9],[11,0,15,11],[36,0,15,36]],[[8,0,16,4],[15,0,16,11],[25,0,16,21],[26,0,16,22],[35,0,16,31],[37,0,16,33],[41,0,16,37],[42,0,16,64],[43,0,16,65]],[[5,0,17,3]],[[0,0,18,0],[1,0,18,1]],[[0,0,20,0],[6,0,20,6],[16,0,20,16],[32,0,20,32],[33,0,20,81],[39,0,20,109],[41,0,20,111],[55,0,20,133]],[[4,0,21,2],[10,0,21,8],[24,0,21,22],[27,0,21,33],[33,0,21,39],[34,0,21,40],[38,0,21,44],[39,0,21,45],[45,0,21,51],[46,0,21,52],[49,0,21,55],[51,0,21,57],[65,0,21,71],[66,0,21,72],[67,0,21,73]],[[4,0,22,2],[11,0,22,9],[21,0,22,19],[22,0,22,20],[28,0,22,26],[29,0,22,27],[38,0,22,36],[40,0,22,38],[54,0,22,52],[55,0,22,79],[56,0,22,80]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0],[6,0,25,6],[16,0,25,16],[31,0,25,31],[32,0,25,56],[45,0,25,93],[47,0,25,95],[49,0,25,105]],[[4,0,26,2],[11,0,26,9],[14,0,26,12],[15,0,26,13],[28,0,26,26],[29,0,26,27],[38,0,26,36],[40,0,26,38],[53,0,26,51],[54,0,26,52],[58,0,26,56],[60,0,26,58],[62,0,26,60],[63,0,26,85],[64,0,26,86]],[[0,0,27,0],[1,0,27,1]],[[0,0,29,0]],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[29,0,35,29],[30,0,36,2],[34,0,36,9],[36,0,36,11],[45,0,36,46],[47,0,36,48],[54,0,36,55],[57,0,36,58],[62,0,36,63]],[[4,0,38,2],[8,0,38,6],[15,0,38,13],[17,0,38,15]],[[8,0,39,4],[14,0,39,10],[15,0,39,11],[22,0,39,18],[23,0,39,19],[32,0,39,28],[33,0,39,29],[34,0,39,30],[41,0,39,37],[42,0,39,38],[43,0,39,39],[44,0,39,40],[45,0,39,41],[47,0,39,43],[48,0,39,44],[49,0,39,45],[51,0,39,47],[53,0,39,49]],[[12,0,40,7],[16,0,40,40],[17,0,40,41],[18,0,40,42],[19,0,40,43],[22,0,40,46],[23,0,40,47],[24,0,40,48]],[[8,0,41,4],[9,0,41,5],[10,0,41,6],[11,0,41,7]],[[8,0,42,4],[15,0,42,11],[19,0,42,15],[20,0,42,16]],[[5,0,43,3]],[[9,0,43,9]],[[8,0,44,4],[15,0,44,11],[17,0,44,12],[20,0,44,15],[24,0,44,19],[26,0,44,21],[29,0,44,24],[38,0,44,33],[40,0,44,34],[41,0,44,35]],[[5,0,45,3]],[[0,0,46,0],[1,0,46,1]],[[0,0,48,0]],[],[],[],[],[],[[3,0,54,3]],[[0,0,55,0],[6,0,55,6],[16,0,55,16],[30,0,55,30],[31,0,55,34],[35,0,55,41],[37,0,55,43],[44,0,55,50],[47,0,55,53],[52,0,55,58],[54,0,55,60],[68,0,55,80],[72,0,55,84],[76,0,55,88],[78,0,55,90]],[[4,0,56,2],[44,0,56,42]],[[4,0,57,2],[8,0,57,6],[21,0,57,19],[25,0,57,23],[29,0,57,27],[31,0,57,29]],[[8,0,58,4],[15,0,58,11],[19,0,58,15],[20,0,58,16]],[[5,0,59,3]],[[4,0,61,2],[11,0,61,9],[24,0,61,22],[25,0,61,23],[29,0,61,27],[31,0,61,29],[33,0,61,30],[44,0,61,41],[46,0,61,42],[48,0,61,44],[55,0,61,51],[56,0,61,52],[57,0,61,53]],[[0,0,62,0],[1,0,62,1]],[[0,0,64,0]],[],[],[],[],[],[[3,0,70,3]],[[0,0,71,0],[6,0,71,6],[16,0,71,16],[31,0,71,31],[32,0,71,35],[36,0,71,42],[38,0,71,44],[45,0,71,51],[48,0,71,54],[53,0,71,59],[55,0,71,61],[70,0,71,82],[74,0,71,86],[78,0,71,90],[80,0,71,92]],[[4,0,72,2],[11,0,72,9],[24,0,72,22],[25,0,72,23],[29,0,72,27],[31,0,72,29],[33,0,72,30],[45,0,72,42],[47,0,72,43],[49,0,72,45],[56,0,72,52],[57,0,72,53],[58,0,72,54]],[[0,0,73,0],[1,0,73,1]],[[0,0,75,0]],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[16,0,82,16],[28,0,82,28],[29,0,82,32],[33,0,82,39],[35,0,82,41],[44,0,82,76],[46,0,82,78],[53,0,82,85],[56,0,82,88],[61,0,82,93]],[[4,0,84,2],[11,0,84,9],[24,0,84,22],[25,0,84,23],[29,0,84,27],[31,0,84,29],[33,0,84,30],[42,0,84,39],[44,0,84,40],[46,0,84,42],[53,0,84,49],[54,0,84,50],[55,0,84,51]],[[0,0,85,0],[1,0,85,1]],[[0,0,88,0]],[],[],[],[],[],[],[],[[3,0,96,3]],[[0,0,98,0],[6,0,98,6],[16,0,98,16],[38,0,98,38],[39,0,98,92],[43,0,98,99]],[[4,0,99,2],[8,0,99,6],[12,0,99,10],[13,0,99,11],[27,0,99,25],[28,0,99,26],[41,0,99,39],[42,0,99,40],[44,0,99,42]],[[8,0,100,4],[12,0,100,8],[13,0,100,9],[24,0,100,20],[27,0,100,23],[31,0,100,27],[32,0,100,28],[43,0,100,60],[44,0,100,61]],[[8,0,101,4],[12,0,101,8],[13,0,101,9],[24,0,101,20],[27,0,101,23],[31,0,101,27],[32,0,101,28],[43,0,101,39],[44,0,101,40],[50,0,101,46],[52,0,101,48],[53,0,101,49]],[[5,0,102,3]],[[4,0,103,2],[8,0,103,6],[12,0,103,10],[13,0,103,11],[27,0,103,25],[28,0,103,26],[42,0,103,40],[43,0,103,41],[45,0,103,43]],[[8,0,104,4],[12,0,104,8],[13,0,104,9],[25,0,104,21],[28,0,104,24],[32,0,104,28],[33,0,104,29],[45,0,104,62],[46,0,104,63]],[[8,0,105,4],[12,0,105,8],[13,0,105,9],[25,0,105,21],[28,0,105,24],[32,0,105,28],[33,0,105,29],[45,0,105,41],[46,0,105,42],[52,0,105,48],[54,0,105,50],[55,0,105,51]],[[5,0,106,3]],[[4,0,108,2],[11,0,108,9],[15,0,108,13],[16,0,108,14]],[[0,0,109,0],[1,0,109,1]]],"sourcesContent":["import {\r\n  collection,\r\n  CollectionReference,\r\n  doc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  Firestore,\r\n  Timestamp as FirebaseTimestamp\r\n} from 'firebase/firestore';\r\n\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath<A>(path: string, firestore: Firestore): DocumentReference<A> | CollectionReference<A> {\r\n  const pathSegmentAmount: number = path.split('/').length;\r\n  if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n    return doc(firestore, path) as DocumentReference<A>;\r\n  } else { // odd meaning collection\r\n    return collection(firestore, path) as CollectionReference<A>;\r\n  }\r\n}\r\n\r\nexport function getSubCollection<T extends DocumentData, A extends DocumentData>(docRef: DocumentReference<T>, collectionName: string): CollectionReference<A> {\r\n  const collectionPath: string = docRef.path.concat('/', collectionName);\r\n  return collection(docRef.firestore, collectionPath) as CollectionReference<A>;\r\n}\r\n\r\nexport function getDocRefWithId<T extends DocumentData>(collectionRef: CollectionReference<T>, id: string): DocumentReference<T> {\r\n  return doc(collectionRef.firestore, collectionRef.path, id) as DocumentReference<T>;\r\n}\r\n\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem<A extends { [field: string]: any }>(\r\n  item: A, dataToAdd: { [field: string]: any }, inplace = false): A {\r\n\r\n  if (inplace) {\r\n    Object.entries(dataToAdd).forEach(([k, v]) => {\r\n      (item as { [field: string]: any })[k] = v;\r\n    });\r\n    return item;\r\n  } else {\r\n    return {...item, ...dataToAdd};\r\n  }\r\n}\r\n\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate<A>(item: A, inplace = false, createdDate: Date = new Date()): A {\r\n  // do not overwrite previous createdDate\r\n  if ('createdDate' in item) {\r\n    return item;\r\n  }\r\n\r\n  return addDataToItem(item, {createdDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate<A>(item: A, inplace = false, modifiedDate: Date = new Date()): A {\r\n  return addDataToItem(item, {modifiedDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy<A>(item: A, createdBy: { [field: string]: any }, inplace = false): A {\r\n\r\n  return addDataToItem(item, {createdBy}, inplace);\r\n}\r\n\r\n\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\n\r\nexport function convertTimestampToDate<A extends { createdDate?: any, modifiedDate?: any }>(item: A): A {\r\n  if (item.hasOwnProperty('createdDate')) {\r\n    item.createdDate = item.createdDate as FirebaseTimestamp;\r\n    item.createdDate = item.createdDate.toDate();\r\n  }\r\n  if (item.hasOwnProperty('modifiedDate')) {\r\n    item.modifiedDate = item.modifiedDate as FirebaseTimestamp;\r\n    item.modifiedDate = item.modifiedDate.toDate();\r\n  }\r\n\r\n  return item;\r\n}\r\n"]},"resolvedIds":{"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[19,0,0,19],[21,0,0,21],[24,0,0,24],[26,0,0,26],[32,0,0,32],[52,0,0,52],[53,0,0,53]],[[0,0,1,0],[99,0,1,99]],[[0,0,2,0],[6,0,2,6],[16,0,2,16],[30,0,2,30],[31,0,2,31],[35,0,2,35],[37,0,2,37],[46,0,2,46]],[[4,0,3,4],[10,0,3,10],[27,0,3,27],[30,0,3,30],[34,0,3,34],[35,0,3,35],[40,0,3,40],[41,0,3,41],[44,0,3,44],[45,0,3,45],[46,0,3,46],[52,0,3,52],[53,0,3,53]],[[4,0,4,4],[8,0,4,8],[25,0,4,25],[28,0,4,28],[29,0,4,29],[34,0,4,34],[35,0,4,35],[37,0,4,37],[39,0,4,39],[63,0,4,63]],[[8,0,5,8],[15,0,5,15],[18,0,5,18],[19,0,5,19],[28,0,5,28],[30,0,5,30],[34,0,5,34],[35,0,5,35],[36,0,5,36]],[[5,0,6,5]],[[9,0,7,9],[11,0,7,11],[36,0,7,36]],[[8,0,8,8],[15,0,8,15],[25,0,8,25],[26,0,8,26],[35,0,8,35],[37,0,8,37],[41,0,8,41],[42,0,8,42],[43,0,8,43]],[[5,0,9,5]],[[0,0,10,0],[1,0,10,1]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[32,0,11,32],[33,0,11,33],[39,0,11,39],[41,0,11,41],[55,0,11,55]],[[4,0,12,4],[10,0,12,10],[24,0,12,24],[27,0,12,27],[33,0,12,33],[34,0,12,34],[38,0,12,38],[39,0,12,39],[45,0,12,45],[46,0,12,46],[49,0,12,49],[51,0,12,51],[65,0,12,65],[66,0,12,66],[67,0,12,67]],[[4,0,13,4],[11,0,13,11],[21,0,13,21],[22,0,13,22],[28,0,13,28],[29,0,13,29],[38,0,13,38],[40,0,13,40],[54,0,13,54],[55,0,13,55],[56,0,13,56]],[[0,0,14,0],[1,0,14,1]],[[0,0,15,0],[6,0,15,6],[16,0,15,16],[31,0,15,31],[32,0,15,32],[45,0,15,45],[47,0,15,47],[49,0,15,49]],[[4,0,16,4],[11,0,16,11],[14,0,16,14],[15,0,16,15],[28,0,16,28],[29,0,16,29],[38,0,16,38],[40,0,16,40],[53,0,16,53],[54,0,16,54],[58,0,16,58],[60,0,16,60],[62,0,16,62],[63,0,16,63],[64,0,16,64]],[[0,0,17,0],[1,0,17,1]],[[0,0,18,0]],[],[],[],[],[[3,0,23,3]],[[0,0,24,0],[6,0,24,6],[16,0,24,16],[29,0,24,29],[30,0,24,30],[34,0,24,34],[36,0,24,36],[45,0,24,45],[47,0,24,47],[54,0,24,54],[57,0,24,57],[62,0,24,62]],[[4,0,25,4],[8,0,25,8],[15,0,25,15],[17,0,25,17]],[[8,0,26,8],[14,0,26,14],[15,0,26,15],[22,0,26,22],[23,0,26,23],[32,0,26,32],[33,0,26,33],[34,0,26,34],[41,0,26,41],[42,0,26,42],[43,0,26,43],[44,0,26,44],[45,0,26,45],[47,0,26,47],[48,0,26,48],[49,0,26,49],[51,0,26,51],[53,0,26,53]],[[12,0,27,12],[16,0,27,16],[17,0,27,17],[18,0,27,18],[19,0,27,19],[22,0,27,22],[23,0,27,23],[24,0,27,24]],[[8,0,28,8],[9,0,28,9],[10,0,28,10],[11,0,28,11]],[[8,0,29,8],[15,0,29,15],[19,0,29,19],[20,0,29,20]],[[5,0,30,5]],[[9,0,31,9]],[[8,0,32,8],[47,0,32,20],[51,0,32,24],[54,0,32,29],[63,0,32,38],[65,0,32,41]],[[5,0,33,5]],[[0,0,34,0],[1,0,34,1]],[[0,0,35,0]],[],[],[],[],[],[[3,0,41,3]],[[0,0,42,0],[6,0,42,6],[16,0,42,16],[30,0,42,30],[31,0,42,31],[35,0,42,35],[37,0,42,37],[44,0,42,44],[47,0,42,47],[52,0,42,52],[54,0,42,54],[65,0,42,65],[68,0,42,68],[72,0,42,72],[76,0,42,76],[78,0,42,78]],[[4,0,43,4],[44,0,43,44]],[[4,0,44,4],[8,0,44,8],[21,0,44,21],[25,0,44,25],[29,0,44,29],[31,0,44,31]],[[8,0,45,8],[15,0,45,15],[19,0,45,19],[20,0,45,20]],[[5,0,46,5]],[[4,0,47,4],[11,0,47,11],[24,0,47,24],[25,0,47,25],[29,0,47,29],[31,0,47,31],[33,0,47,33],[44,0,47,44],[46,0,47,46],[48,0,47,48],[55,0,47,55],[56,0,47,56],[57,0,47,57]],[[0,0,48,0],[1,0,48,1]],[[0,0,49,0]],[],[],[],[],[],[[3,0,55,3]],[[0,0,56,0],[6,0,56,6],[16,0,56,16],[31,0,56,31],[32,0,56,32],[36,0,56,36],[38,0,56,38],[45,0,56,45],[48,0,56,48],[53,0,56,53],[55,0,56,55],[67,0,56,67],[70,0,56,70],[74,0,56,74],[78,0,56,78],[80,0,56,80]],[[4,0,57,4],[11,0,57,11],[24,0,57,24],[25,0,57,25],[29,0,57,29],[31,0,57,31],[33,0,57,33],[45,0,57,45],[47,0,57,47],[49,0,57,49],[56,0,57,56],[57,0,57,57],[58,0,57,58]],[[0,0,58,0],[1,0,58,1]],[[0,0,59,0]],[],[],[],[],[],[[3,0,65,3]],[[0,0,66,0],[6,0,66,6],[16,0,66,16],[28,0,66,28],[29,0,66,29],[33,0,66,33],[35,0,66,35],[44,0,66,44],[46,0,66,46],[53,0,66,53],[56,0,66,56],[61,0,66,61]],[[4,0,67,4],[11,0,67,11],[24,0,67,24],[25,0,67,25],[29,0,67,29],[31,0,67,31],[33,0,67,33],[42,0,67,42],[44,0,67,44],[46,0,67,46],[53,0,67,53],[54,0,67,54],[55,0,67,55]],[[0,0,68,0],[1,0,68,1]],[[0,0,69,0]],[],[],[],[],[],[],[],[[3,0,77,3]],[[0,0,78,0],[6,0,78,6],[16,0,78,16],[38,0,78,38],[39,0,78,39],[43,0,78,43]],[[4,0,79,4],[8,0,79,8],[12,0,79,12],[13,0,79,13],[27,0,79,27],[28,0,79,28],[41,0,79,41],[42,0,79,42],[44,0,79,44]],[[8,0,80,8],[12,0,80,12],[13,0,80,13],[24,0,80,24],[27,0,80,27],[31,0,80,31],[32,0,80,32],[43,0,80,43],[44,0,80,44]],[[8,0,81,8],[12,0,81,12],[13,0,81,13],[24,0,81,24],[27,0,81,27],[31,0,81,31],[32,0,81,32],[43,0,81,43],[44,0,81,44],[50,0,81,50],[52,0,81,52],[53,0,81,53]],[[5,0,82,5]],[[4,0,83,4],[8,0,83,8],[12,0,83,12],[13,0,83,13],[27,0,83,27],[28,0,83,28],[42,0,83,42],[43,0,83,43],[45,0,83,45]],[[8,0,84,8],[12,0,84,12],[13,0,84,13],[25,0,84,25],[28,0,84,28],[32,0,84,32],[33,0,84,33],[45,0,84,45],[46,0,84,46]],[[8,0,85,8],[12,0,85,12],[13,0,85,13],[25,0,85,25],[28,0,85,28],[32,0,85,32],[33,0,85,33],[45,0,85,45],[46,0,85,46],[52,0,85,52],[54,0,85,54],[55,0,85,55]],[[5,0,86,5]],[[4,0,87,4],[11,0,87,11],[15,0,87,15],[16,0,87,16]],[[0,0,88,0],[1,0,88,1]],[[0,0,89,0],[8386,0,89,8386]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8103,"body":[{"type":"ExportNamedDeclaration","start":430,"end":835,"declaration":{"type":"FunctionDeclaration","start":437,"end":835,"id":{"type":"Identifier","start":446,"end":461,"name":"moveItemInArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":462,"end":467,"name":"array"},{"type":"Identifier","start":469,"end":478,"name":"fromIndex"},{"type":"Identifier","start":480,"end":487,"name":"toIndex"}],"body":{"type":"BlockStatement","start":489,"end":835,"body":[{"type":"VariableDeclaration","start":496,"end":544,"declarations":[{"type":"VariableDeclarator","start":502,"end":543,"id":{"type":"Identifier","start":502,"end":506,"name":"from"},"init":{"type":"CallExpression","start":509,"end":543,"callee":{"type":"Identifier","start":509,"end":514,"name":"clamp"},"arguments":[{"type":"Identifier","start":515,"end":524,"name":"fromIndex"},{"type":"BinaryExpression","start":526,"end":542,"left":{"type":"MemberExpression","start":526,"end":538,"object":{"type":"Identifier","start":526,"end":531,"name":"array"},"property":{"type":"Identifier","start":532,"end":538,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":541,"end":542,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":550,"end":594,"declarations":[{"type":"VariableDeclarator","start":556,"end":593,"id":{"type":"Identifier","start":556,"end":558,"name":"to"},"init":{"type":"CallExpression","start":561,"end":593,"callee":{"type":"Identifier","start":561,"end":566,"name":"clamp"},"arguments":[{"type":"Identifier","start":567,"end":574,"name":"toIndex"},{"type":"BinaryExpression","start":576,"end":592,"left":{"type":"MemberExpression","start":576,"end":588,"object":{"type":"Identifier","start":576,"end":581,"name":"array"},"property":{"type":"Identifier","start":582,"end":588,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":591,"end":592,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":600,"end":642,"test":{"type":"BinaryExpression","start":604,"end":615,"left":{"type":"Identifier","start":604,"end":608,"name":"from"},"operator":"===","right":{"type":"Identifier","start":613,"end":615,"name":"to"}},"consequent":{"type":"BlockStatement","start":617,"end":642,"body":[{"type":"ReturnStatement","start":628,"end":635,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":648,"end":675,"declarations":[{"type":"VariableDeclarator","start":654,"end":674,"id":{"type":"Identifier","start":654,"end":660,"name":"target"},"init":{"type":"MemberExpression","start":663,"end":674,"object":{"type":"Identifier","start":663,"end":668,"name":"array"},"property":{"type":"Identifier","start":669,"end":673,"name":"from"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":681,"end":714,"declarations":[{"type":"VariableDeclarator","start":687,"end":713,"id":{"type":"Identifier","start":687,"end":692,"name":"delta"},"init":{"type":"ConditionalExpression","start":695,"end":713,"test":{"type":"BinaryExpression","start":695,"end":704,"left":{"type":"Identifier","start":695,"end":697,"name":"to"},"operator":"<","right":{"type":"Identifier","start":700,"end":704,"name":"from"}},"consequent":{"type":"UnaryExpression","start":707,"end":709,"operator":"-","prefix":true,"argument":{"type":"Literal","start":708,"end":709,"value":1,"raw":"1"}},"alternate":{"type":"Literal","start":712,"end":713,"value":1,"raw":"1"}}}],"kind":"const"},{"type":"ForStatement","start":720,"end":807,"init":{"type":"VariableDeclaration","start":725,"end":737,"declarations":[{"type":"VariableDeclarator","start":729,"end":737,"id":{"type":"Identifier","start":729,"end":730,"name":"i"},"init":{"type":"Identifier","start":733,"end":737,"name":"from"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":739,"end":747,"left":{"type":"Identifier","start":739,"end":740,"name":"i"},"operator":"!==","right":{"type":"Identifier","start":745,"end":747,"name":"to"}},"update":{"type":"AssignmentExpression","start":749,"end":759,"operator":"+=","left":{"type":"Identifier","start":749,"end":750,"name":"i"},"right":{"type":"Identifier","start":754,"end":759,"name":"delta"}},"body":{"type":"BlockStatement","start":761,"end":807,"body":[{"type":"ExpressionStatement","start":772,"end":800,"expression":{"type":"AssignmentExpression","start":772,"end":799,"operator":"=","left":{"type":"MemberExpression","start":772,"end":780,"object":{"type":"Identifier","start":772,"end":777,"name":"array"},"property":{"type":"Identifier","start":778,"end":779,"name":"i"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":783,"end":799,"object":{"type":"Identifier","start":783,"end":788,"name":"array"},"property":{"type":"BinaryExpression","start":789,"end":798,"left":{"type":"Identifier","start":789,"end":790,"name":"i"},"operator":"+","right":{"type":"Identifier","start":793,"end":798,"name":"delta"}},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":813,"end":832,"expression":{"type":"AssignmentExpression","start":813,"end":831,"operator":"=","left":{"type":"MemberExpression","start":813,"end":822,"object":{"type":"Identifier","start":813,"end":818,"name":"array"},"property":{"type":"Identifier","start":819,"end":821,"name":"to"},"computed":true,"optional":false},"right":{"type":"Identifier","start":825,"end":831,"name":"target"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1134,"end":1454,"declaration":{"type":"FunctionDeclaration","start":1141,"end":1454,"id":{"type":"Identifier","start":1150,"end":1167,"name":"transferArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1168,"end":1180,"name":"currentArray"},{"type":"Identifier","start":1182,"end":1193,"name":"targetArray"},{"type":"Identifier","start":1195,"end":1207,"name":"currentIndex"},{"type":"Identifier","start":1209,"end":1220,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1222,"end":1454,"body":[{"type":"VariableDeclaration","start":1229,"end":1287,"declarations":[{"type":"VariableDeclarator","start":1235,"end":1286,"id":{"type":"Identifier","start":1235,"end":1239,"name":"from"},"init":{"type":"CallExpression","start":1242,"end":1286,"callee":{"type":"Identifier","start":1242,"end":1247,"name":"clamp"},"arguments":[{"type":"Identifier","start":1248,"end":1260,"name":"currentIndex"},{"type":"BinaryExpression","start":1262,"end":1285,"left":{"type":"MemberExpression","start":1262,"end":1281,"object":{"type":"Identifier","start":1262,"end":1274,"name":"currentArray"},"property":{"type":"Identifier","start":1275,"end":1281,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":1284,"end":1285,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1293,"end":1343,"declarations":[{"type":"VariableDeclarator","start":1299,"end":1342,"id":{"type":"Identifier","start":1299,"end":1301,"name":"to"},"init":{"type":"CallExpression","start":1304,"end":1342,"callee":{"type":"Identifier","start":1304,"end":1309,"name":"clamp"},"arguments":[{"type":"Identifier","start":1310,"end":1321,"name":"targetIndex"},{"type":"MemberExpression","start":1323,"end":1341,"object":{"type":"Identifier","start":1323,"end":1334,"name":"targetArray"},"property":{"type":"Identifier","start":1335,"end":1341,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1349,"end":1451,"test":{"type":"MemberExpression","start":1353,"end":1372,"object":{"type":"Identifier","start":1353,"end":1365,"name":"currentArray"},"property":{"type":"Identifier","start":1366,"end":1372,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1374,"end":1451,"body":[{"type":"ExpressionStatement","start":1385,"end":1444,"expression":{"type":"CallExpression","start":1385,"end":1443,"callee":{"type":"MemberExpression","start":1385,"end":1403,"object":{"type":"Identifier","start":1385,"end":1396,"name":"targetArray"},"property":{"type":"Identifier","start":1397,"end":1403,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1404,"end":1406,"name":"to"},{"type":"Literal","start":1408,"end":1409,"value":0,"raw":"0"},{"type":"MemberExpression","start":1411,"end":1442,"object":{"type":"CallExpression","start":1411,"end":1439,"callee":{"type":"MemberExpression","start":1411,"end":1430,"object":{"type":"Identifier","start":1411,"end":1423,"name":"currentArray"},"property":{"type":"Identifier","start":1424,"end":1430,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1431,"end":1435,"name":"from"},{"type":"Literal","start":1437,"end":1438,"value":1,"raw":"1"}],"optional":false},"property":{"type":"Literal","start":1440,"end":1441,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1813,"end":2060,"declaration":{"type":"FunctionDeclaration","start":1820,"end":2060,"id":{"type":"Identifier","start":1829,"end":1842,"name":"copyArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1855,"name":"currentArray"},{"type":"Identifier","start":1857,"end":1868,"name":"targetArray"},{"type":"Identifier","start":1870,"end":1882,"name":"currentIndex"},{"type":"Identifier","start":1884,"end":1895,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1897,"end":2060,"body":[{"type":"VariableDeclaration","start":1904,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1910,"end":1953,"id":{"type":"Identifier","start":1910,"end":1912,"name":"to"},"init":{"type":"CallExpression","start":1915,"end":1953,"callee":{"type":"Identifier","start":1915,"end":1920,"name":"clamp"},"arguments":[{"type":"Identifier","start":1921,"end":1932,"name":"targetIndex"},{"type":"MemberExpression","start":1934,"end":1952,"object":{"type":"Identifier","start":1934,"end":1945,"name":"targetArray"},"property":{"type":"Identifier","start":1946,"end":1952,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1960,"end":2057,"test":{"type":"MemberExpression","start":1964,"end":1983,"object":{"type":"Identifier","start":1964,"end":1976,"name":"currentArray"},"property":{"type":"Identifier","start":1977,"end":1983,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1985,"end":2057,"body":[{"type":"ExpressionStatement","start":1996,"end":2050,"expression":{"type":"CallExpression","start":1996,"end":2049,"callee":{"type":"MemberExpression","start":1996,"end":2014,"object":{"type":"Identifier","start":1996,"end":2007,"name":"targetArray"},"property":{"type":"Identifier","start":2008,"end":2014,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2015,"end":2017,"name":"to"},{"type":"Literal","start":2019,"end":2020,"value":0,"raw":"0"},{"type":"MemberExpression","start":2022,"end":2048,"object":{"type":"Identifier","start":2022,"end":2034,"name":"currentArray"},"property":{"type":"Identifier","start":2035,"end":2047,"name":"currentIndex"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"FunctionDeclaration","start":2114,"end":2192,"id":{"type":"Identifier","start":2123,"end":2128,"name":"clamp"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2129,"end":2134,"name":"value"},{"type":"Identifier","start":2136,"end":2139,"name":"max"}],"body":{"type":"BlockStatement","start":2141,"end":2192,"body":[{"type":"ReturnStatement","start":2148,"end":2189,"argument":{"type":"CallExpression","start":2155,"end":2188,"callee":{"type":"MemberExpression","start":2155,"end":2163,"object":{"type":"Identifier","start":2155,"end":2159,"name":"Math"},"property":{"type":"Identifier","start":2160,"end":2163,"name":"max"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2164,"end":2165,"value":0,"raw":"0"},{"type":"CallExpression","start":2167,"end":2187,"callee":{"type":"MemberExpression","start":2167,"end":2175,"object":{"type":"Identifier","start":2167,"end":2171,"name":"Math"},"property":{"type":"Identifier","start":2172,"end":2175,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2176,"end":2179,"name":"max"},{"type":"Identifier","start":2181,"end":2186,"name":"value"}],"optional":false}],"optional":false}}]}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","start":2194,"end":7980},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":7982,"end":8103}]},"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"drag-utils.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/drag-utils.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,8,0]],[],[],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[31,0,14,31],[32,0,14,41],[37,0,14,51],[39,0,14,53],[48,0,14,70],[50,0,14,72],[57,0,14,87]],[[4,0,15,2],[10,0,15,8],[14,0,15,12],[17,0,15,15],[22,0,15,20],[23,0,15,21],[32,0,15,30],[34,0,15,32],[39,0,15,37],[40,0,15,38],[46,0,15,44],[49,0,15,47],[50,0,15,48],[51,0,15,49],[52,0,15,50]],[[4,0,16,2],[10,0,16,8],[12,0,16,10],[15,0,16,13],[20,0,16,18],[21,0,16,19],[28,0,16,26],[30,0,16,28],[35,0,16,33],[36,0,16,34],[42,0,16,40],[45,0,16,43],[46,0,16,44],[47,0,16,45],[48,0,16,46]],[[4,0,18,2],[8,0,18,6],[12,0,18,10],[17,0,18,15],[19,0,18,17],[21,0,18,19]],[[8,0,19,4],[15,0,19,11]],[[5,0,20,3]],[[4,0,22,2],[10,0,22,8],[16,0,22,14],[19,0,22,17],[24,0,22,22],[25,0,22,23],[29,0,22,27],[30,0,22,28],[31,0,22,29]],[[4,0,23,2],[10,0,23,8],[15,0,23,13],[18,0,23,16],[20,0,23,18],[23,0,23,21],[27,0,23,25],[28,0,23,26],[29,0,23,27],[30,0,23,28],[31,0,23,29],[32,0,23,30],[33,0,23,31],[34,0,23,32],[35,0,23,33],[36,0,23,34],[37,0,23,35]],[[4,0,25,2],[9,0,25,7],[13,0,25,11],[14,0,25,12],[17,0,25,15],[21,0,25,19],[23,0,25,21],[24,0,25,22],[29,0,25,27],[31,0,25,29],[33,0,25,31],[34,0,25,32],[38,0,25,36],[43,0,25,41],[45,0,25,43]],[[8,0,26,4],[13,0,26,9],[14,0,26,10],[15,0,26,11],[16,0,26,12],[19,0,26,15],[24,0,26,20],[25,0,26,21],[26,0,26,22],[29,0,26,25],[34,0,26,30],[35,0,26,31],[36,0,26,32]],[[5,0,27,3]],[[4,0,29,2],[9,0,29,7],[10,0,29,8],[12,0,29,10],[13,0,29,11],[16,0,29,14],[22,0,29,20],[23,0,29,21]],[[0,0,30,0],[1,0,30,1]],[[0,0,33,0]],[],[],[],[],[],[[3,0,39,3]],[[0,0,40,0],[6,0,40,6],[16,0,40,16],[33,0,40,33],[34,0,40,43],[46,0,40,60],[48,0,41,43],[59,0,41,59],[61,0,42,43],[73,0,42,63],[75,0,43,43],[86,0,43,62]],[[4,0,44,2],[10,0,44,8],[14,0,44,12],[17,0,44,15],[22,0,44,20],[23,0,44,21],[35,0,44,33],[37,0,44,35],[49,0,44,47],[50,0,44,48],[56,0,44,54],[59,0,44,57],[60,0,44,58],[61,0,44,59],[62,0,44,60]],[[4,0,45,2],[10,0,45,8],[12,0,45,10],[15,0,45,13],[20,0,45,18],[21,0,45,19],[32,0,45,30],[34,0,45,32],[45,0,45,43],[46,0,45,44],[52,0,45,50],[53,0,45,51],[54,0,45,52]],[[4,0,47,2],[8,0,47,6],[20,0,47,18],[21,0,47,19],[27,0,47,25],[29,0,47,27]],[[8,0,48,4],[19,0,48,15],[20,0,48,16],[26,0,48,22],[27,0,48,23],[29,0,48,25],[31,0,48,27],[32,0,48,28],[34,0,48,30],[46,0,48,42],[47,0,48,43],[53,0,48,49],[54,0,48,50],[58,0,48,54],[60,0,48,56],[61,0,48,57],[62,0,48,58],[63,0,48,59],[64,0,48,60],[65,0,48,61],[66,0,48,62],[67,0,48,63]],[[5,0,49,3]],[[0,0,50,0],[1,0,50,1]],[[0,0,52,0]],[],[],[],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[16,0,61,16],[29,0,61,29],[30,0,61,39],[42,0,61,56],[44,0,62,39],[55,0,62,55],[57,0,63,39],[69,0,63,59],[71,0,64,39],[82,0,64,58]],[[4,0,65,2],[10,0,65,8],[12,0,65,10],[15,0,65,13],[20,0,65,18],[21,0,65,19],[32,0,65,30],[34,0,65,32],[45,0,65,43],[46,0,65,44],[52,0,65,50],[53,0,65,51],[54,0,65,52]],[[4,0,67,2],[8,0,67,6],[20,0,67,18],[21,0,67,19],[27,0,67,25],[29,0,67,27]],[[8,0,68,4],[19,0,68,15],[20,0,68,16],[26,0,68,22],[27,0,68,23],[29,0,68,25],[31,0,68,27],[32,0,68,28],[34,0,68,30],[46,0,68,42],[47,0,68,43],[59,0,68,55],[60,0,68,56],[61,0,68,57],[62,0,68,58]],[[5,0,69,3]],[[0,0,70,0],[1,0,70,1]],[[0,0,72,0],[50,0,72,50]],[[0,0,73,0],[9,0,73,9],[14,0,73,14],[15,0,73,15],[20,0,73,28],[22,0,73,30],[25,0,73,41]],[[4,0,74,2],[11,0,74,9],[15,0,74,13],[16,0,74,14],[19,0,74,17],[20,0,74,18],[21,0,74,19],[23,0,74,21],[27,0,74,25],[28,0,74,26],[31,0,74,29],[32,0,74,30],[35,0,74,33],[37,0,74,35],[42,0,74,40],[43,0,74,41],[44,0,74,42],[45,0,74,43]],[[0,0,75,0],[1,0,75,1]]],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\r\n  const from = clamp(fromIndex, array.length - 1);\r\n  const to = clamp(toIndex, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n}\r\n\r\n\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem<T = any>(currentArray: T[],\r\n                                           targetArray: T[],\r\n                                           currentIndex: number,\r\n                                           targetIndex: number): void {\r\n  const from = clamp(currentIndex, currentArray.length - 1);\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n  }\r\n}\r\n\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem<T = any>(currentArray: T[],\r\n                                       targetArray: T[],\r\n                                       currentIndex: number,\r\n                                       targetIndex: number): void {\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray[currentIndex]);\r\n  }\r\n}\r\n\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value: number, max: number): number {\r\n  return Math.max(0, Math.min(max, value));\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,7,0]],[],[],[],[],[[3,0,12,3]],[[0,0,13,0],[6,0,13,6],[16,0,13,16],[31,0,13,31],[32,0,13,32],[37,0,13,37],[39,0,13,39],[48,0,13,48],[50,0,13,50],[57,0,13,57]],[[4,0,14,4],[10,0,14,10],[14,0,14,14],[17,0,14,17],[22,0,14,22],[23,0,14,23],[32,0,14,32],[34,0,14,34],[39,0,14,39],[40,0,14,40],[46,0,14,46],[49,0,14,49],[50,0,14,50],[51,0,14,51],[52,0,14,52]],[[4,0,15,4],[10,0,15,10],[12,0,15,12],[15,0,15,15],[20,0,15,20],[21,0,15,21],[28,0,15,28],[30,0,15,30],[35,0,15,35],[36,0,15,36],[42,0,15,42],[45,0,15,45],[46,0,15,46],[47,0,15,47],[48,0,15,48]],[[4,0,16,4],[8,0,16,8],[12,0,16,12],[17,0,16,17],[19,0,16,19],[21,0,16,21]],[[8,0,17,8],[15,0,17,15]],[[5,0,18,5]],[[4,0,19,4],[10,0,19,10],[16,0,19,16],[19,0,19,19],[24,0,19,24],[25,0,19,25],[29,0,19,29],[30,0,19,30],[31,0,19,31]],[[4,0,20,4],[10,0,20,10],[15,0,20,15],[18,0,20,18],[20,0,20,20],[23,0,20,23],[27,0,20,27],[28,0,20,28],[29,0,20,29],[30,0,20,30],[31,0,20,31],[32,0,20,32],[33,0,20,33],[34,0,20,34],[35,0,20,35],[36,0,20,36],[37,0,20,37]],[[4,0,21,4],[9,0,21,9],[13,0,21,13],[14,0,21,14],[17,0,21,17],[21,0,21,21],[23,0,21,23],[24,0,21,24],[29,0,21,29],[31,0,21,31],[33,0,21,33],[34,0,21,34],[38,0,21,38],[43,0,21,43],[45,0,21,45]],[[8,0,22,8],[13,0,22,13],[14,0,22,14],[15,0,22,15],[16,0,22,16],[19,0,22,19],[24,0,22,24],[25,0,22,25],[26,0,22,26],[29,0,22,29],[34,0,22,34],[35,0,22,35],[36,0,22,36]],[[5,0,23,5]],[[4,0,24,4],[9,0,24,9],[10,0,24,10],[12,0,24,12],[13,0,24,13],[16,0,24,16],[22,0,24,22],[23,0,24,23]],[[0,0,25,0],[1,0,25,1]],[[0,0,26,0]],[],[],[],[],[],[[3,0,32,3]],[[0,0,33,0],[6,0,33,6],[16,0,33,16],[33,0,33,33],[34,0,33,34],[46,0,33,46],[48,0,33,48],[59,0,33,59],[61,0,33,61],[73,0,33,73],[75,0,33,75],[86,0,33,86]],[[4,0,34,4],[10,0,34,10],[14,0,34,14],[17,0,34,17],[22,0,34,22],[23,0,34,23],[35,0,34,35],[37,0,34,37],[49,0,34,49],[50,0,34,50],[56,0,34,56],[59,0,34,59],[60,0,34,60],[61,0,34,61],[62,0,34,62]],[[4,0,35,4],[10,0,35,10],[12,0,35,12],[15,0,35,15],[20,0,35,20],[21,0,35,21],[32,0,35,32],[34,0,35,34],[45,0,35,45],[46,0,35,46],[52,0,35,52],[53,0,35,53],[54,0,35,54]],[[4,0,36,4],[8,0,36,8],[20,0,36,20],[21,0,36,21],[27,0,36,27],[29,0,36,29]],[[8,0,37,8],[19,0,37,19],[20,0,37,20],[26,0,37,26],[27,0,37,27],[29,0,37,29],[31,0,37,31],[32,0,37,32],[34,0,37,34],[46,0,37,46],[47,0,37,47],[53,0,37,53],[54,0,37,54],[58,0,37,58],[60,0,37,60],[61,0,37,61],[62,0,37,62],[63,0,37,63],[64,0,37,64],[65,0,37,65],[66,0,37,66],[67,0,37,67]],[[5,0,38,5]],[[0,0,39,0],[1,0,39,1]],[[0,0,40,0]],[],[],[],[],[],[],[],[[3,0,48,3]],[[0,0,49,0],[6,0,49,6],[16,0,49,16],[29,0,49,29],[30,0,49,30],[42,0,49,42],[44,0,49,44],[55,0,49,55],[57,0,49,57],[69,0,49,69],[71,0,49,71],[82,0,49,82]],[[4,0,50,4],[10,0,50,10],[12,0,50,12],[15,0,50,15],[20,0,50,20],[21,0,50,21],[32,0,50,32],[34,0,50,34],[45,0,50,45],[46,0,50,46],[52,0,50,52],[53,0,50,53],[54,0,50,54]],[[4,0,51,4],[8,0,51,8],[20,0,51,20],[21,0,51,21],[27,0,51,27],[29,0,51,29]],[[8,0,52,8],[19,0,52,19],[20,0,52,20],[26,0,52,26],[27,0,52,27],[29,0,52,29],[31,0,52,31],[32,0,52,32],[34,0,52,34],[46,0,52,46],[47,0,52,47],[59,0,52,59],[60,0,52,60],[61,0,52,61],[62,0,52,62]],[[5,0,53,5]],[[0,0,54,0],[1,0,54,1]],[[0,0,55,0],[50,0,55,50]],[[0,0,56,0],[9,0,56,9],[14,0,56,14],[15,0,56,15],[20,0,56,20],[22,0,56,22],[25,0,56,25]],[[4,0,57,4],[11,0,57,11],[15,0,57,15],[16,0,57,16],[19,0,57,19],[20,0,57,20],[21,0,57,21],[23,0,57,23],[27,0,57,27],[28,0,57,28],[31,0,57,31],[32,0,57,32],[35,0,57,35],[37,0,57,37],[42,0,57,42],[43,0,57,43],[44,0,57,44],[45,0,57,45]],[[0,0,58,0],[1,0,58,1]],[[0,0,59,0],[5786,0,59,5786]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":192825,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":32,"imported":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"},"local":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"}},{"type":"ImportSpecifier","start":34,"end":38,"imported":{"type":"Identifier","start":34,"end":38,"name":"from"},"local":{"type":"Identifier","start":34,"end":38,"name":"from"}},{"type":"ImportSpecifier","start":40,"end":42,"imported":{"type":"Identifier","start":40,"end":42,"name":"of"},"local":{"type":"Identifier","start":40,"end":42,"name":"of"}}],"source":{"type":"Literal","start":50,"end":56,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":59,"end":148,"specifiers":[{"type":"ImportSpecifier","start":68,"end":78,"imported":{"type":"Identifier","start":68,"end":78,"name":"catchError"},"local":{"type":"Identifier","start":68,"end":78,"name":"catchError"}},{"type":"ImportSpecifier","start":80,"end":86,"imported":{"type":"Identifier","start":80,"end":86,"name":"filter"},"local":{"type":"Identifier","start":80,"end":86,"name":"filter"}},{"type":"ImportSpecifier","start":88,"end":91,"imported":{"type":"Identifier","start":88,"end":91,"name":"map"},"local":{"type":"Identifier","start":88,"end":91,"name":"map"}},{"type":"ImportSpecifier","start":93,"end":101,"imported":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"},"local":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"}},{"type":"ImportSpecifier","start":103,"end":112,"imported":{"type":"Identifier","start":103,"end":112,"name":"switchMap"},"local":{"type":"Identifier","start":103,"end":112,"name":"switchMap"}},{"type":"ImportSpecifier","start":114,"end":118,"imported":{"type":"Identifier","start":114,"end":118,"name":"take"},"local":{"type":"Identifier","start":114,"end":118,"name":"take"}},{"type":"ImportSpecifier","start":120,"end":123,"imported":{"type":"Identifier","start":120,"end":123,"name":"tap"},"local":{"type":"Identifier","start":120,"end":123,"name":"tap"}}],"source":{"type":"Literal","start":131,"end":147,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":150,"end":320,"specifiers":[{"type":"ImportSpecifier","start":159,"end":169,"imported":{"type":"Identifier","start":159,"end":169,"name":"collection"},"local":{"type":"Identifier","start":159,"end":169,"name":"collection"}},{"type":"ImportSpecifier","start":171,"end":188,"imported":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"},"local":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"}},{"type":"ImportSpecifier","start":190,"end":195,"imported":{"type":"Identifier","start":190,"end":195,"name":"endAt"},"local":{"type":"Identifier","start":190,"end":195,"name":"endAt"}},{"type":"ImportSpecifier","start":197,"end":206,"imported":{"type":"Identifier","start":197,"end":206,"name":"endBefore"},"local":{"type":"Identifier","start":197,"end":206,"name":"endBefore"}},{"type":"ImportSpecifier","start":208,"end":215,"imported":{"type":"Identifier","start":208,"end":215,"name":"getDocs"},"local":{"type":"Identifier","start":208,"end":215,"name":"getDocs"}},{"type":"ImportSpecifier","start":217,"end":222,"imported":{"type":"Identifier","start":217,"end":222,"name":"limit"},"local":{"type":"Identifier","start":217,"end":222,"name":"limit"}},{"type":"ImportSpecifier","start":224,"end":235,"imported":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"},"local":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"}},{"type":"ImportSpecifier","start":237,"end":244,"imported":{"type":"Identifier","start":237,"end":244,"name":"orderBy"},"local":{"type":"Identifier","start":237,"end":244,"name":"orderBy"}},{"type":"ImportSpecifier","start":246,"end":251,"imported":{"type":"Identifier","start":246,"end":251,"name":"query"},"local":{"type":"Identifier","start":246,"end":251,"name":"query"}},{"type":"ImportSpecifier","start":253,"end":263,"imported":{"type":"Identifier","start":253,"end":263,"name":"startAfter"},"local":{"type":"Identifier","start":253,"end":263,"name":"startAfter"}},{"type":"ImportSpecifier","start":265,"end":272,"imported":{"type":"Identifier","start":265,"end":272,"name":"startAt"},"local":{"type":"Identifier","start":265,"end":272,"name":"startAt"}},{"type":"ImportSpecifier","start":274,"end":279,"imported":{"type":"Identifier","start":274,"end":279,"name":"where"},"local":{"type":"Identifier","start":274,"end":279,"name":"where"}},{"type":"ImportSpecifier","start":281,"end":291,"imported":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"},"local":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"}}],"source":{"type":"Literal","start":299,"end":319,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":322,"end":472,"specifiers":[{"type":"ImportSpecifier","start":331,"end":345,"imported":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"},"local":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"}},{"type":"ImportSpecifier","start":347,"end":360,"imported":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"},"local":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"}},{"type":"ImportSpecifier","start":362,"end":377,"imported":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"},"local":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"}},{"type":"ImportSpecifier","start":379,"end":401,"imported":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"},"local":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"}},{"type":"ImportSpecifier","start":403,"end":418,"imported":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"},"local":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"}},{"type":"ImportSpecifier","start":420,"end":434,"imported":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"},"local":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"}},{"type":"ImportSpecifier","start":436,"end":452,"imported":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"},"local":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"}}],"source":{"type":"Literal","start":460,"end":471,"value":"./helpers","raw":"'./helpers'"}},{"type":"ImportDeclaration","start":474,"end":540,"specifiers":[{"type":"ImportSpecifier","start":483,"end":498,"imported":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"},"local":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"}},{"type":"ImportSpecifier","start":500,"end":517,"imported":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"},"local":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"}}],"source":{"type":"Literal","start":525,"end":539,"value":"./drag-utils","raw":"'./drag-utils'"}},{"type":"ExportNamedDeclaration","start":619,"end":648,"declaration":{"type":"VariableDeclaration","start":626,"end":648,"declarations":[{"type":"VariableDeclarator","start":630,"end":647,"id":{"type":"Identifier","start":630,"end":647,"name":"DocNotExistAction"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":650,"end":1328,"expression":{"type":"CallExpression","start":650,"end":1327,"callee":{"type":"FunctionExpression","start":651,"end":1279,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":661,"end":678,"name":"DocNotExistAction"}],"body":{"type":"BlockStatement","start":680,"end":1279,"body":[{"type":"ExpressionStatement","start":721,"end":793,"expression":{"type":"AssignmentExpression","start":721,"end":792,"operator":"=","left":{"type":"MemberExpression","start":721,"end":776,"object":{"type":"Identifier","start":721,"end":738,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":739,"end":775,"operator":"=","left":{"type":"MemberExpression","start":739,"end":771,"object":{"type":"Identifier","start":739,"end":756,"name":"DocNotExistAction"},"property":{"type":"Literal","start":757,"end":770,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""},"computed":true,"optional":false},"right":{"type":"Literal","start":774,"end":775,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":779,"end":792,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""}}},{"type":"ExpressionStatement","start":918,"end":1006,"expression":{"type":"AssignmentExpression","start":918,"end":1005,"operator":"=","left":{"type":"MemberExpression","start":918,"end":981,"object":{"type":"Identifier","start":918,"end":935,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":936,"end":980,"operator":"=","left":{"type":"MemberExpression","start":936,"end":976,"object":{"type":"Identifier","start":936,"end":953,"name":"DocNotExistAction"},"property":{"type":"Literal","start":954,"end":975,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""},"computed":true,"optional":false},"right":{"type":"Literal","start":979,"end":980,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":984,"end":1005,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""}}},{"type":"ExpressionStatement","start":1065,"end":1127,"expression":{"type":"AssignmentExpression","start":1065,"end":1126,"operator":"=","left":{"type":"MemberExpression","start":1065,"end":1115,"object":{"type":"Identifier","start":1065,"end":1082,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1083,"end":1114,"operator":"=","left":{"type":"MemberExpression","start":1083,"end":1110,"object":{"type":"Identifier","start":1083,"end":1100,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1101,"end":1109,"value":"FILTER","raw":"\"FILTER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1113,"end":1114,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1118,"end":1126,"value":"FILTER","raw":"\"FILTER\""}}},{"type":"ExpressionStatement","start":1188,"end":1276,"expression":{"type":"AssignmentExpression","start":1188,"end":1275,"operator":"=","left":{"type":"MemberExpression","start":1188,"end":1251,"object":{"type":"Identifier","start":1188,"end":1205,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1206,"end":1250,"operator":"=","left":{"type":"MemberExpression","start":1206,"end":1246,"object":{"type":"Identifier","start":1206,"end":1223,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1224,"end":1245,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1249,"end":1250,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1254,"end":1275,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""}}}]}},"arguments":[{"type":"LogicalExpression","start":1281,"end":1326,"left":{"type":"Identifier","start":1281,"end":1298,"name":"DocNotExistAction"},"operator":"||","right":{"type":"AssignmentExpression","start":1303,"end":1325,"operator":"=","left":{"type":"Identifier","start":1303,"end":1320,"name":"DocNotExistAction"},"right":{"type":"ObjectExpression","start":1323,"end":1325,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":1368,"end":55363,"declaration":{"type":"ClassDeclaration","start":1375,"end":55363,"id":{"type":"Identifier","start":1381,"end":1398,"name":"FirestoreExtended"},"superClass":null,"body":{"type":"ClassBody","start":1399,"end":55363,"body":[{"type":"MethodDefinition","start":1682,"end":1795,"static":false,"computed":false,"key":{"type":"Identifier","start":1682,"end":1693,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1693,"end":1795,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1694,"end":1696,"name":"fs"},{"type":"AssignmentPattern","start":1698,"end":1719,"left":{"type":"Identifier","start":1698,"end":1710,"name":"defaultDocId"},"right":{"type":"Literal","start":1713,"end":1719,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":1721,"end":1795,"body":[{"type":"ExpressionStatement","start":1732,"end":1745,"expression":{"type":"AssignmentExpression","start":1732,"end":1744,"operator":"=","left":{"type":"MemberExpression","start":1732,"end":1739,"object":{"type":"ThisExpression","start":1732,"end":1736},"property":{"type":"Identifier","start":1737,"end":1739,"name":"fs"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1742,"end":1744,"name":"fs"}}},{"type":"ExpressionStatement","start":1755,"end":1788,"expression":{"type":"AssignmentExpression","start":1755,"end":1787,"operator":"=","left":{"type":"MemberExpression","start":1755,"end":1772,"object":{"type":"ThisExpression","start":1755,"end":1759},"property":{"type":"Identifier","start":1760,"end":1772,"name":"defaultDocId"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1775,"end":1787,"name":"defaultDocId"}}}]}}},{"type":"MethodDefinition","start":2921,"end":3163,"static":false,"computed":false,"key":{"type":"Identifier","start":2921,"end":2934,"name":"listenForDoc$"},"kind":"method","value":{"type":"FunctionExpression","start":2934,"end":3163,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2935,"end":2941,"name":"docRef"},{"type":"AssignmentPattern","start":2943,"end":2968,"left":{"type":"Identifier","start":2943,"end":2963,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":2966,"end":2968,"elements":[]}},{"type":"AssignmentPattern","start":2970,"end":3026,"left":{"type":"Identifier","start":2970,"end":2986,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":2989,"end":3026,"object":{"type":"Identifier","start":2989,"end":3006,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":3007,"end":3026,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":3028,"end":3163,"body":[{"type":"ReturnStatement","start":3039,"end":3156,"argument":{"type":"CallExpression","start":3046,"end":3155,"callee":{"type":"MemberExpression","start":3046,"end":3136,"object":{"type":"CallExpression","start":3046,"end":3131,"callee":{"type":"MemberExpression","start":3046,"end":3083,"object":{"type":"ThisExpression","start":3046,"end":3050},"property":{"type":"Identifier","start":3051,"end":3083,"name":"listenForDocDeepRecursiveHelper$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3084,"end":3090,"name":"docRef"},{"type":"Identifier","start":3092,"end":3112,"name":"subCollectionQueries"},{"type":"Identifier","start":3114,"end":3130,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":3132,"end":3136,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3137,"end":3154,"callee":{"type":"Identifier","start":3137,"end":3140,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3141,"end":3153,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3141,"end":3145,"name":"data"}],"body":{"type":"Identifier","start":3149,"end":3153,"name":"data"}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4801,"end":5721,"static":false,"computed":false,"key":{"type":"Identifier","start":4801,"end":4821,"name":"listenForCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":4821,"end":5721,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4822,"end":4828,"name":"_query"},{"type":"AssignmentPattern","start":4830,"end":4855,"left":{"type":"Identifier","start":4830,"end":4850,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":4853,"end":4855,"elements":[]}}],"body":{"type":"BlockStatement","start":4857,"end":5721,"body":[{"type":"ReturnStatement","start":5032,"end":5714,"argument":{"type":"CallExpression","start":5039,"end":5713,"callee":{"type":"MemberExpression","start":5039,"end":5083,"object":{"type":"CallExpression","start":5039,"end":5078,"callee":{"type":"MemberExpression","start":5039,"end":5070,"object":{"type":"ThisExpression","start":5039,"end":5043},"property":{"type":"Identifier","start":5044,"end":5070,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5071,"end":5077,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":5079,"end":5083,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5084,"end":5712,"callee":{"type":"Identifier","start":5084,"end":5092,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":5093,"end":5711,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5094,"end":5099,"name":"items"}],"body":{"type":"BlockStatement","start":5104,"end":5711,"body":[{"type":"IfStatement","start":5119,"end":5208,"test":{"type":"LogicalExpression","start":5123,"end":5158,"left":{"type":"BinaryExpression","start":5123,"end":5136,"left":{"type":"Identifier","start":5123,"end":5128,"name":"items"},"operator":"==","right":{"type":"Literal","start":5132,"end":5136,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":5140,"end":5158,"left":{"type":"MemberExpression","start":5140,"end":5152,"object":{"type":"Identifier","start":5140,"end":5145,"name":"items"},"property":{"type":"Identifier","start":5146,"end":5152,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5157,"end":5158,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":5160,"end":5208,"body":[{"type":"ReturnStatement","start":5179,"end":5193,"argument":{"type":"CallExpression","start":5186,"end":5192,"callee":{"type":"Identifier","start":5186,"end":5188,"name":"of"},"arguments":[{"type":"ArrayExpression","start":5189,"end":5191,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5222,"end":5311,"test":{"type":"BinaryExpression","start":5226,"end":5258,"left":{"type":"MemberExpression","start":5226,"end":5253,"object":{"type":"Identifier","start":5226,"end":5246,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":5247,"end":5253,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":5257,"end":5258,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5260,"end":5311,"body":[{"type":"ReturnStatement","start":5279,"end":5296,"argument":{"type":"CallExpression","start":5286,"end":5295,"callee":{"type":"Identifier","start":5286,"end":5288,"name":"of"},"arguments":[{"type":"Identifier","start":5289,"end":5294,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":5325,"end":5356,"declarations":[{"type":"VariableDeclarator","start":5331,"end":5355,"id":{"type":"Identifier","start":5331,"end":5350,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":5353,"end":5355,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":5370,"end":5576,"expression":{"type":"CallExpression","start":5370,"end":5575,"callee":{"type":"MemberExpression","start":5370,"end":5383,"object":{"type":"Identifier","start":5370,"end":5375,"name":"items"},"property":{"type":"Identifier","start":5376,"end":5383,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5384,"end":5574,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5384,"end":5388,"name":"item"}],"body":{"type":"BlockStatement","start":5392,"end":5574,"body":[{"type":"VariableDeclaration","start":5411,"end":5496,"declarations":[{"type":"VariableDeclarator","start":5417,"end":5495,"id":{"type":"Identifier","start":5417,"end":5435,"name":"collectionListener"},"init":{"type":"CallExpression","start":5438,"end":5495,"callee":{"type":"MemberExpression","start":5438,"end":5467,"object":{"type":"ThisExpression","start":5438,"end":5442},"property":{"type":"Identifier","start":5443,"end":5467,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5468,"end":5472,"name":"item"},{"type":"Identifier","start":5474,"end":5494,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5514,"end":5559,"expression":{"type":"CallExpression","start":5514,"end":5558,"callee":{"type":"MemberExpression","start":5514,"end":5538,"object":{"type":"Identifier","start":5514,"end":5533,"name":"collectionListeners"},"property":{"type":"Identifier","start":5534,"end":5538,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5539,"end":5557,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":5658,"end":5700,"argument":{"type":"CallExpression","start":5665,"end":5699,"callee":{"type":"Identifier","start":5665,"end":5678,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":5679,"end":5698,"name":"collectionListeners"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5872,"end":7557,"static":false,"computed":false,"key":{"type":"Identifier","start":5872,"end":5903,"name":"listenForCollectionRecursively$"},"kind":"method","value":{"type":"FunctionExpression","start":5903,"end":7557,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5904,"end":5918,"name":"collectionPath"},{"type":"Identifier","start":5920,"end":5933,"name":"collectionKey"},{"type":"Identifier","start":5935,"end":5943,"name":"orderKey"}],"body":{"type":"BlockStatement","start":5945,"end":7557,"body":[{"type":"VariableDeclaration","start":6067,"end":6161,"declarations":[{"type":"VariableDeclarator","start":6073,"end":6160,"id":{"type":"Identifier","start":6073,"end":6088,"name":"collectionQuery"},"init":{"type":"NewExpression","start":6091,"end":6160,"callee":{"type":"Identifier","start":6095,"end":6109,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":6110,"end":6159,"callee":{"type":"Identifier","start":6110,"end":6124,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":6125,"end":6139,"name":"collectionPath"},{"type":"MemberExpression","start":6141,"end":6158,"object":{"type":"MemberExpression","start":6141,"end":6148,"object":{"type":"ThisExpression","start":6141,"end":6145},"property":{"type":"Identifier","start":6146,"end":6148,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6149,"end":6158,"name":"firestore"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":6171,"end":6253,"test":{"type":"BinaryExpression","start":6175,"end":6191,"left":{"type":"Identifier","start":6175,"end":6183,"name":"orderKey"},"operator":"!=","right":{"type":"Literal","start":6187,"end":6191,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6193,"end":6253,"body":[{"type":"ExpressionStatement","start":6208,"end":6242,"expression":{"type":"CallExpression","start":6208,"end":6241,"callee":{"type":"MemberExpression","start":6208,"end":6231,"object":{"type":"Identifier","start":6208,"end":6223,"name":"collectionQuery"},"property":{"type":"Identifier","start":6224,"end":6231,"name":"orderBy"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6232,"end":6240,"name":"orderKey"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6263,"end":7550,"argument":{"type":"CallExpression","start":6270,"end":7549,"callee":{"type":"MemberExpression","start":6270,"end":6329,"object":{"type":"CallExpression","start":6270,"end":6324,"callee":{"type":"MemberExpression","start":6270,"end":6301,"object":{"type":"ThisExpression","start":6270,"end":6274},"property":{"type":"Identifier","start":6275,"end":6301,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6302,"end":6323,"object":{"type":"Identifier","start":6302,"end":6317,"name":"collectionQuery"},"property":{"type":"Identifier","start":6318,"end":6323,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":6325,"end":6329,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6330,"end":7548,"callee":{"type":"Identifier","start":6330,"end":6338,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":6339,"end":7547,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6340,"end":6345,"name":"items"}],"body":{"type":"BlockStatement","start":6350,"end":7547,"body":[{"type":"IfStatement","start":6365,"end":6436,"test":{"type":"BinaryExpression","start":6369,"end":6386,"left":{"type":"MemberExpression","start":6369,"end":6381,"object":{"type":"Identifier","start":6369,"end":6374,"name":"items"},"property":{"type":"Identifier","start":6375,"end":6381,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6385,"end":6386,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6388,"end":6436,"body":[{"type":"ReturnStatement","start":6407,"end":6421,"argument":{"type":"CallExpression","start":6414,"end":6420,"callee":{"type":"Identifier","start":6414,"end":6416,"name":"of"},"arguments":[{"type":"ArrayExpression","start":6417,"end":6419,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":6582,"end":6606,"declarations":[{"type":"VariableDeclarator","start":6588,"end":6605,"id":{"type":"Identifier","start":6588,"end":6600,"name":"nextLevelObs"},"init":{"type":"ArrayExpression","start":6603,"end":6605,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":6620,"end":7452,"await":false,"left":{"type":"VariableDeclaration","start":6625,"end":6635,"declarations":[{"type":"VariableDeclarator","start":6631,"end":6635,"id":{"type":"Identifier","start":6631,"end":6635,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":6639,"end":6644,"name":"items"},"body":{"type":"BlockStatement","start":6646,"end":7452,"body":[{"type":"VariableDeclaration","start":6787,"end":6868,"declarations":[{"type":"VariableDeclarator","start":6793,"end":6867,"id":{"type":"Identifier","start":6793,"end":6806,"name":"nextLevelPath"},"init":{"type":"CallExpression","start":6809,"end":6867,"callee":{"type":"MemberExpression","start":6809,"end":6847,"object":{"type":"MemberExpression","start":6809,"end":6840,"object":{"type":"MemberExpression","start":6809,"end":6835,"object":{"type":"MemberExpression","start":6809,"end":6831,"object":{"type":"Identifier","start":6809,"end":6813,"name":"item"},"property":{"type":"Identifier","start":6814,"end":6831,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6832,"end":6835,"name":"ref"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6836,"end":6840,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6841,"end":6847,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6848,"end":6851,"value":"/","raw":"'/'"},{"type":"Identifier","start":6853,"end":6866,"name":"collectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6906,"end":7384,"declarations":[{"type":"VariableDeclarator","start":6912,"end":7383,"id":{"type":"Identifier","start":6912,"end":6927,"name":"nextLevelItems$"},"init":{"type":"CallExpression","start":6930,"end":7383,"callee":{"type":"MemberExpression","start":6930,"end":7011,"object":{"type":"CallExpression","start":6930,"end":7006,"callee":{"type":"MemberExpression","start":6930,"end":6966,"object":{"type":"ThisExpression","start":6930,"end":6934},"property":{"type":"Identifier","start":6935,"end":6966,"name":"listenForCollectionRecursively$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6967,"end":6980,"name":"nextLevelPath"},{"type":"Identifier","start":6982,"end":6995,"name":"collectionKey"},{"type":"Identifier","start":6997,"end":7005,"name":"orderKey"}],"optional":false},"property":{"type":"Identifier","start":7007,"end":7011,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7012,"end":7382,"callee":{"type":"Identifier","start":7012,"end":7015,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":7016,"end":7381,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7017,"end":7031,"name":"nextLevelItems"}],"body":{"type":"BlockStatement","start":7036,"end":7381,"body":[{"type":"IfStatement","start":7059,"end":7331,"test":{"type":"BinaryExpression","start":7063,"end":7088,"left":{"type":"MemberExpression","start":7063,"end":7084,"object":{"type":"Identifier","start":7063,"end":7077,"name":"nextLevelItems"},"property":{"type":"Identifier","start":7078,"end":7084,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":7087,"end":7088,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7090,"end":7223,"body":[{"type":"ReturnStatement","start":7117,"end":7200,"argument":{"type":"CallExpression","start":7124,"end":7199,"callee":{"type":"MemberExpression","start":7124,"end":7137,"object":{"type":"Identifier","start":7124,"end":7130,"name":"Object"},"property":{"type":"Identifier","start":7131,"end":7137,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7138,"end":7161,"callee":{"type":"MemberExpression","start":7138,"end":7151,"object":{"type":"Identifier","start":7138,"end":7144,"name":"Object"},"property":{"type":"Identifier","start":7145,"end":7151,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":7152,"end":7154,"properties":[]},{"type":"Identifier","start":7156,"end":7160,"name":"item"}],"optional":false},{"type":"ObjectExpression","start":7163,"end":7198,"properties":[{"type":"Property","start":7165,"end":7196,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":7166,"end":7179,"name":"collectionKey"},"value":{"type":"Identifier","start":7182,"end":7196,"name":"nextLevelItems"},"kind":"init"}]}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":7250,"end":7331,"body":[{"type":"ReturnStatement","start":7277,"end":7308,"argument":{"type":"CallExpression","start":7284,"end":7307,"callee":{"type":"MemberExpression","start":7284,"end":7297,"object":{"type":"Identifier","start":7284,"end":7290,"name":"Object"},"property":{"type":"Identifier","start":7291,"end":7297,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":7298,"end":7300,"properties":[]},{"type":"Identifier","start":7302,"end":7306,"name":"item"}],"optional":false}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7402,"end":7437,"expression":{"type":"CallExpression","start":7402,"end":7436,"callee":{"type":"MemberExpression","start":7402,"end":7419,"object":{"type":"Identifier","start":7402,"end":7414,"name":"nextLevelObs"},"property":{"type":"Identifier","start":7415,"end":7419,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7420,"end":7435,"name":"nextLevelItems$"}],"optional":false}}]}},{"type":"ReturnStatement","start":7466,"end":7536,"argument":{"type":"CallExpression","start":7473,"end":7535,"callee":{"type":"MemberExpression","start":7473,"end":7505,"object":{"type":"CallExpression","start":7473,"end":7500,"callee":{"type":"Identifier","start":7473,"end":7486,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":7487,"end":7499,"name":"nextLevelObs"}],"optional":false},"property":{"type":"Identifier","start":7501,"end":7505,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7506,"end":7534,"callee":{"type":"Identifier","start":7506,"end":7509,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":7510,"end":7533,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":7510,"end":7513,"name":"val"}],"body":{"type":"CallExpression","start":7517,"end":7533,"callee":{"type":"MemberExpression","start":7517,"end":7528,"object":{"type":"Identifier","start":7517,"end":7524,"name":"console"},"property":{"type":"Identifier","start":7525,"end":7528,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7529,"end":7532,"name":"val"}],"optional":false}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":8191,"end":15140,"static":false,"computed":false,"key":{"type":"Identifier","start":8191,"end":8195,"name":"add$"},"kind":"method","value":{"type":"FunctionExpression","start":8195,"end":15140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8196,"end":8200,"name":"data"},{"type":"Identifier","start":8202,"end":8215,"name":"collectionRef"},{"type":"AssignmentPattern","start":8217,"end":8242,"left":{"type":"Identifier","start":8217,"end":8237,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":8240,"end":8242,"elements":[]}},{"type":"AssignmentPattern","start":8244,"end":8261,"left":{"type":"Identifier","start":8244,"end":8254,"name":"isAddDates"},"right":{"type":"Literal","start":8257,"end":8261,"value":true,"raw":"true"}},{"type":"Identifier","start":8263,"end":8268,"name":"docId"}],"body":{"type":"BlockStatement","start":8270,"end":15140,"body":[{"type":"IfStatement","start":8281,"end":8766,"test":{"type":"LogicalExpression","start":8285,"end":8348,"left":{"type":"LogicalExpression","start":8285,"end":8313,"left":{"type":"CallExpression","start":8285,"end":8304,"callee":{"type":"MemberExpression","start":8285,"end":8298,"object":{"type":"Identifier","start":8285,"end":8290,"name":"Array"},"property":{"type":"Identifier","start":8291,"end":8298,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8299,"end":8303,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":8308,"end":8313,"name":"docId"}},"operator":"&&","right":{"type":"BinaryExpression","start":8317,"end":8348,"left":{"type":"MemberExpression","start":8317,"end":8344,"object":{"type":"Identifier","start":8317,"end":8337,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":8338,"end":8344,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":8347,"end":8348,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":8350,"end":8766,"body":[{"type":"VariableDeclaration","start":8365,"end":8729,"declarations":[{"type":"VariableDeclarator","start":8371,"end":8728,"id":{"type":"Identifier","start":8371,"end":8376,"name":"error"},"init":{"type":"ObjectExpression","start":8379,"end":8728,"properties":[{"type":"Property","start":8398,"end":8449,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8398,"end":8402,"name":"name"},"value":{"type":"Literal","start":8404,"end":8449,"value":"firestoreExt/invalid-sub-collection-writers","raw":"'firestoreExt/invalid-sub-collection-writers'"},"kind":"init"},{"type":"Property","start":8468,"end":8483,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8468,"end":8472,"name":"code"},"value":{"type":"Literal","start":8474,"end":8483,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":8502,"end":8599,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8502,"end":8509,"name":"message"},"value":{"type":"Literal","start":8511,"end":8599,"value":"Cannot have both docId and subCollectionWriters at the same time when data is an array","raw":"'Cannot have both docId and subCollectionWriters at the same time when data is an array'"},"kind":"init"},{"type":"Property","start":8618,"end":8627,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8618,"end":8623,"name":"stack"},"value":{"type":"Literal","start":8625,"end":8627,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":8646,"end":8650,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8646,"end":8650,"name":"data"},"kind":"init","value":{"type":"Identifier","start":8646,"end":8650,"name":"data"}},{"type":"Property","start":8669,"end":8689,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8669,"end":8689,"name":"subCollectionWriters"},"kind":"init","value":{"type":"Identifier","start":8669,"end":8689,"name":"subCollectionWriters"}},{"type":"Property","start":8708,"end":8713,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8708,"end":8713,"name":"docId"},"kind":"init","value":{"type":"Identifier","start":8708,"end":8713,"name":"docId"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":8743,"end":8755,"argument":{"type":"Identifier","start":8749,"end":8754,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":8776,"end":8791,"declarations":[{"type":"VariableDeclarator","start":8780,"end":8790,"id":{"type":"Identifier","start":8780,"end":8790,"name":"currentDoc"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8801,"end":8825,"declarations":[{"type":"VariableDeclarator","start":8805,"end":8824,"id":{"type":"Identifier","start":8805,"end":8819,"name":"subCollections"},"init":{"type":"ObjectExpression","start":8822,"end":8824,"properties":[]}}],"kind":"let"},{"type":"IfStatement","start":9155,"end":9458,"test":{"type":"LogicalExpression","start":9159,"end":9187,"left":{"type":"CallExpression","start":9159,"end":9178,"callee":{"type":"MemberExpression","start":9159,"end":9172,"object":{"type":"Identifier","start":9159,"end":9164,"name":"Array"},"property":{"type":"Identifier","start":9165,"end":9172,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9173,"end":9177,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":9182,"end":9187,"name":"docId"}},"consequent":{"type":"BlockStatement","start":9189,"end":9233,"body":[{"type":"ExpressionStatement","start":9204,"end":9222,"expression":{"type":"AssignmentExpression","start":9204,"end":9221,"operator":"=","left":{"type":"Identifier","start":9204,"end":9214,"name":"currentDoc"},"right":{"type":"Identifier","start":9217,"end":9221,"name":"data"}}}]},"alternate":{"type":"BlockStatement","start":9248,"end":9458,"body":[{"type":"VariableDeclaration","start":9263,"end":9351,"declarations":[{"type":"VariableDeclarator","start":9269,"end":9350,"id":{"type":"Identifier","start":9269,"end":9274,"name":"split"},"init":{"type":"CallExpression","start":9277,"end":9350,"callee":{"type":"MemberExpression","start":9277,"end":9322,"object":{"type":"ThisExpression","start":9277,"end":9281},"property":{"type":"Identifier","start":9282,"end":9322,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9323,"end":9327,"name":"data"},{"type":"Identifier","start":9329,"end":9349,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9365,"end":9395,"expression":{"type":"AssignmentExpression","start":9365,"end":9394,"operator":"=","left":{"type":"Identifier","start":9365,"end":9375,"name":"currentDoc"},"right":{"type":"MemberExpression","start":9378,"end":9394,"object":{"type":"Identifier","start":9378,"end":9383,"name":"split"},"property":{"type":"Identifier","start":9384,"end":9394,"name":"currentDoc"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":9409,"end":9447,"expression":{"type":"AssignmentExpression","start":9409,"end":9446,"operator":"=","left":{"type":"Identifier","start":9409,"end":9423,"name":"subCollections"},"right":{"type":"MemberExpression","start":9426,"end":9446,"object":{"type":"Identifier","start":9426,"end":9431,"name":"split"},"property":{"type":"Identifier","start":9432,"end":9446,"name":"subCollections"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":9468,"end":15133,"argument":{"type":"CallExpression","start":9475,"end":15132,"callee":{"type":"MemberExpression","start":9475,"end":15090,"object":{"type":"CallExpression","start":9475,"end":15085,"callee":{"type":"MemberExpression","start":9475,"end":9541,"object":{"type":"CallExpression","start":9475,"end":9536,"callee":{"type":"MemberExpression","start":9475,"end":9490,"object":{"type":"ThisExpression","start":9475,"end":9479},"property":{"type":"Identifier","start":9480,"end":9490,"name":"addSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9491,"end":9501,"name":"currentDoc"},{"type":"Identifier","start":9503,"end":9516,"name":"collectionRef"},{"type":"Identifier","start":9518,"end":9528,"name":"isAddDates"},{"type":"Identifier","start":9530,"end":9535,"name":"docId"}],"optional":false},"property":{"type":"Identifier","start":9537,"end":9541,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9590,"end":15084,"callee":{"type":"Identifier","start":9590,"end":9598,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":9599,"end":15083,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9600,"end":9611,"name":"currentData"}],"body":{"type":"BlockStatement","start":9616,"end":15083,"body":[{"type":"VariableDeclaration","start":9631,"end":9642,"declarations":[{"type":"VariableDeclarator","start":9635,"end":9637,"id":{"type":"Identifier","start":9635,"end":9637,"name":"_a"},"init":null},{"type":"VariableDeclarator","start":9639,"end":9641,"id":{"type":"Identifier","start":9639,"end":9641,"name":"_b"},"init":null}],"kind":"var"},{"type":"VariableDeclaration","start":9656,"end":9678,"declarations":[{"type":"VariableDeclarator","start":9662,"end":9677,"id":{"type":"Identifier","start":9662,"end":9672,"name":"subWriters"},"init":{"type":"ArrayExpression","start":9675,"end":9677,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":9692,"end":13115,"await":false,"left":{"type":"VariableDeclaration","start":9697,"end":9741,"declarations":[{"type":"VariableDeclarator","start":9703,"end":9741,"id":{"type":"ArrayPattern","start":9703,"end":9741,"elements":[{"type":"Identifier","start":9704,"end":9720,"name":"subCollectionKey"},{"type":"Identifier","start":9722,"end":9740,"name":"subCollectionValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":9745,"end":9775,"callee":{"type":"MemberExpression","start":9745,"end":9759,"object":{"type":"Identifier","start":9745,"end":9751,"name":"Object"},"property":{"type":"Identifier","start":9752,"end":9759,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9760,"end":9774,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":9777,"end":13115,"body":[{"type":"VariableDeclaration","start":9796,"end":9824,"declarations":[{"type":"VariableDeclarator","start":9800,"end":9823,"id":{"type":"Identifier","start":9800,"end":9823,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":9882,"end":9895,"declarations":[{"type":"VariableDeclarator","start":9886,"end":9894,"id":{"type":"Identifier","start":9886,"end":9894,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9913,"end":10299,"test":{"type":"Identifier","start":9917,"end":9937,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":9939,"end":10299,"body":[{"type":"ExpressionStatement","start":9962,"end":10122,"expression":{"type":"AssignmentExpression","start":9962,"end":10121,"operator":"=","left":{"type":"Identifier","start":9962,"end":9985,"name":"subSubCollectionWriters"},"right":{"type":"ConditionalExpression","start":9988,"end":10121,"test":{"type":"LogicalExpression","start":9988,"end":10092,"left":{"type":"BinaryExpression","start":9988,"end":10075,"left":{"type":"AssignmentExpression","start":9989,"end":10065,"operator":"=","left":{"type":"Identifier","start":9989,"end":9991,"name":"_a"},"right":{"type":"CallExpression","start":9994,"end":10065,"callee":{"type":"MemberExpression","start":9994,"end":10019,"object":{"type":"Identifier","start":9994,"end":10014,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10015,"end":10019,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10020,"end":10064,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10020,"end":10027,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10031,"end":10064,"left":{"type":"MemberExpression","start":10031,"end":10043,"object":{"type":"Identifier","start":10031,"end":10038,"name":"subColl"},"property":{"type":"Identifier","start":10039,"end":10043,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10048,"end":10064,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":10071,"end":10075,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":10079,"end":10092,"left":{"type":"Identifier","start":10079,"end":10081,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":10086,"end":10092,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10091,"end":10092,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":10095,"end":10101,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10100,"end":10101,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":10104,"end":10121,"object":{"type":"Identifier","start":10104,"end":10106,"name":"_a"},"property":{"type":"Identifier","start":10107,"end":10121,"name":"subCollections"},"computed":false,"optional":false}}}},{"type":"ExpressionStatement","start":10144,"end":10280,"expression":{"type":"AssignmentExpression","start":10144,"end":10279,"operator":"=","left":{"type":"Identifier","start":10144,"end":10152,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":10155,"end":10279,"test":{"type":"LogicalExpression","start":10155,"end":10259,"left":{"type":"BinaryExpression","start":10155,"end":10242,"left":{"type":"AssignmentExpression","start":10156,"end":10232,"operator":"=","left":{"type":"Identifier","start":10156,"end":10158,"name":"_b"},"right":{"type":"CallExpression","start":10161,"end":10232,"callee":{"type":"MemberExpression","start":10161,"end":10186,"object":{"type":"Identifier","start":10161,"end":10181,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10182,"end":10186,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10187,"end":10231,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10187,"end":10194,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10198,"end":10231,"left":{"type":"MemberExpression","start":10198,"end":10210,"object":{"type":"Identifier","start":10198,"end":10205,"name":"subColl"},"property":{"type":"Identifier","start":10206,"end":10210,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10215,"end":10231,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":10238,"end":10242,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":10246,"end":10259,"left":{"type":"Identifier","start":10246,"end":10248,"name":"_b"},"operator":"===","right":{"type":"UnaryExpression","start":10253,"end":10259,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10258,"end":10259,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":10262,"end":10268,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10267,"end":10268,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":10271,"end":10279,"object":{"type":"Identifier","start":10271,"end":10273,"name":"_b"},"property":{"type":"Identifier","start":10274,"end":10279,"name":"docId"},"computed":false,"optional":false}}}}]},"alternate":null},{"type":"VariableDeclaration","start":10317,"end":10412,"declarations":[{"type":"VariableDeclarator","start":10323,"end":10411,"id":{"type":"Identifier","start":10323,"end":10339,"name":"subCollectionRef"},"init":{"type":"CallExpression","start":10342,"end":10411,"callee":{"type":"Identifier","start":10342,"end":10358,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":10359,"end":10392,"object":{"type":"MemberExpression","start":10359,"end":10388,"object":{"type":"Identifier","start":10359,"end":10370,"name":"currentData"},"property":{"type":"Identifier","start":10371,"end":10388,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10389,"end":10392,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":10394,"end":10410,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10837,"end":13100,"test":{"type":"CallExpression","start":10841,"end":10874,"callee":{"type":"MemberExpression","start":10841,"end":10854,"object":{"type":"Identifier","start":10841,"end":10846,"name":"Array"},"property":{"type":"Identifier","start":10847,"end":10854,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10855,"end":10873,"name":"subCollectionValue"}],"optional":false},"consequent":{"type":"BlockStatement","start":10876,"end":12415,"body":[{"type":"IfStatement","start":10899,"end":12396,"test":{"type":"BinaryExpression","start":10903,"end":10925,"left":{"type":"Identifier","start":10903,"end":10911,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":10916,"end":10925,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":10927,"end":11557,"body":[{"type":"VariableDeclaration","start":11130,"end":11481,"declarations":[{"type":"VariableDeclarator","start":11136,"end":11480,"id":{"type":"Identifier","start":11136,"end":11145,"name":"subWriter"},"init":{"type":"CallExpression","start":11148,"end":11480,"callee":{"type":"MemberExpression","start":11148,"end":11247,"object":{"type":"CallExpression","start":11148,"end":11242,"callee":{"type":"MemberExpression","start":11148,"end":11157,"object":{"type":"ThisExpression","start":11148,"end":11152},"property":{"type":"Identifier","start":11153,"end":11157,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11158,"end":11176,"name":"subCollectionValue"},{"type":"Identifier","start":11178,"end":11194,"name":"subCollectionRef"},{"type":"Identifier","start":11196,"end":11219,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11221,"end":11231,"name":"isAddDates"},{"type":"Identifier","start":11233,"end":11241,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":11243,"end":11247,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11248,"end":11479,"callee":{"type":"Identifier","start":11248,"end":11251,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11252,"end":11478,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11252,"end":11256,"name":"item"}],"body":{"type":"BlockStatement","start":11260,"end":11478,"body":[{"type":"ReturnStatement","start":11345,"end":11391,"argument":{"type":"ObjectExpression","start":11352,"end":11390,"properties":[{"type":"Property","start":11354,"end":11375,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11354,"end":11357,"name":"key"},"value":{"type":"Identifier","start":11359,"end":11375,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11377,"end":11388,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11377,"end":11382,"name":"value"},"value":{"type":"Identifier","start":11384,"end":11388,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11507,"end":11534,"expression":{"type":"CallExpression","start":11507,"end":11533,"callee":{"type":"MemberExpression","start":11507,"end":11522,"object":{"type":"Identifier","start":11507,"end":11517,"name":"subWriters"},"property":{"type":"Identifier","start":11518,"end":11522,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11523,"end":11532,"name":"subWriter"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11584,"end":12396,"body":[{"type":"ExpressionStatement","start":11681,"end":12373,"expression":{"type":"CallExpression","start":11681,"end":12372,"callee":{"type":"MemberExpression","start":11681,"end":11707,"object":{"type":"Identifier","start":11681,"end":11699,"name":"subCollectionValue"},"property":{"type":"Identifier","start":11700,"end":11707,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11708,"end":12371,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11709,"end":11719,"name":"arrayValue"}],"body":{"type":"BlockStatement","start":11724,"end":12371,"body":[{"type":"VariableDeclaration","start":11871,"end":12287,"declarations":[{"type":"VariableDeclarator","start":11877,"end":12286,"id":{"type":"Identifier","start":11877,"end":11886,"name":"subWriter"},"init":{"type":"CallExpression","start":11889,"end":12286,"callee":{"type":"MemberExpression","start":11889,"end":11970,"object":{"type":"CallExpression","start":11889,"end":11965,"callee":{"type":"MemberExpression","start":11889,"end":11898,"object":{"type":"ThisExpression","start":11889,"end":11893},"property":{"type":"Identifier","start":11894,"end":11898,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11899,"end":11909,"name":"arrayValue"},{"type":"Identifier","start":11911,"end":11927,"name":"subCollectionRef"},{"type":"Identifier","start":11929,"end":11952,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11954,"end":11964,"name":"isAddDates"}],"optional":false},"property":{"type":"Identifier","start":11966,"end":11970,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11971,"end":12285,"callee":{"type":"Identifier","start":11971,"end":11974,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11975,"end":12284,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11975,"end":11979,"name":"item"}],"body":{"type":"BlockStatement","start":11983,"end":12284,"body":[{"type":"ReturnStatement","start":12205,"end":12253,"argument":{"type":"ObjectExpression","start":12212,"end":12252,"properties":[{"type":"Property","start":12214,"end":12235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12214,"end":12217,"name":"key"},"value":{"type":"Identifier","start":12219,"end":12235,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12237,"end":12250,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12237,"end":12242,"name":"value"},"value":{"type":"ArrayExpression","start":12244,"end":12250,"elements":[{"type":"Identifier","start":12245,"end":12249,"name":"item"}]},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12317,"end":12344,"expression":{"type":"CallExpression","start":12317,"end":12343,"callee":{"type":"MemberExpression","start":12317,"end":12332,"object":{"type":"Identifier","start":12317,"end":12327,"name":"subWriters"},"property":{"type":"Identifier","start":12328,"end":12332,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12333,"end":12342,"name":"subWriter"}],"optional":false}}]}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":12438,"end":13100,"body":[{"type":"ExpressionStatement","start":12498,"end":12563,"expression":{"type":"AssignmentExpression","start":12498,"end":12562,"operator":"=","left":{"type":"Identifier","start":12498,"end":12506,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":12509,"end":12562,"test":{"type":"BinaryExpression","start":12509,"end":12531,"left":{"type":"Identifier","start":12509,"end":12517,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":12522,"end":12531,"name":"undefined"}},"consequent":{"type":"Identifier","start":12534,"end":12542,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":12545,"end":12562,"object":{"type":"ThisExpression","start":12545,"end":12549},"property":{"type":"Identifier","start":12550,"end":12562,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":12693,"end":13032,"declarations":[{"type":"VariableDeclarator","start":12699,"end":13031,"id":{"type":"Identifier","start":12699,"end":12708,"name":"subWriter"},"init":{"type":"CallExpression","start":12711,"end":13031,"callee":{"type":"MemberExpression","start":12711,"end":12810,"object":{"type":"CallExpression","start":12711,"end":12805,"callee":{"type":"MemberExpression","start":12711,"end":12720,"object":{"type":"ThisExpression","start":12711,"end":12715},"property":{"type":"Identifier","start":12716,"end":12720,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12721,"end":12739,"name":"subCollectionValue"},{"type":"Identifier","start":12741,"end":12757,"name":"subCollectionRef"},{"type":"Identifier","start":12759,"end":12782,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12784,"end":12794,"name":"isAddDates"},{"type":"Identifier","start":12796,"end":12804,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":12806,"end":12810,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12811,"end":13030,"callee":{"type":"Identifier","start":12811,"end":12814,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12815,"end":13029,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12815,"end":12819,"name":"item"}],"body":{"type":"BlockStatement","start":12823,"end":13029,"body":[{"type":"ReturnStatement","start":12900,"end":12946,"argument":{"type":"ObjectExpression","start":12907,"end":12945,"properties":[{"type":"Property","start":12909,"end":12930,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12909,"end":12912,"name":"key"},"value":{"type":"Identifier","start":12914,"end":12930,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12932,"end":12943,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12932,"end":12937,"name":"value"},"value":{"type":"Identifier","start":12939,"end":12943,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":13054,"end":13081,"expression":{"type":"CallExpression","start":13054,"end":13080,"callee":{"type":"MemberExpression","start":13054,"end":13069,"object":{"type":"Identifier","start":13054,"end":13064,"name":"subWriters"},"property":{"type":"Identifier","start":13065,"end":13069,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13070,"end":13079,"name":"subWriter"}],"optional":false}}]}}]}},{"type":"IfStatement","start":13152,"end":15072,"test":{"type":"BinaryExpression","start":13156,"end":13177,"left":{"type":"MemberExpression","start":13156,"end":13173,"object":{"type":"Identifier","start":13156,"end":13166,"name":"subWriters"},"property":{"type":"Identifier","start":13167,"end":13173,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":13176,"end":13177,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":13179,"end":14996,"body":[{"type":"ReturnStatement","start":13362,"end":14981,"argument":{"type":"CallExpression","start":13369,"end":14980,"callee":{"type":"MemberExpression","start":13369,"end":13399,"object":{"type":"CallExpression","start":13369,"end":13394,"callee":{"type":"Identifier","start":13369,"end":13382,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":13383,"end":13393,"name":"subWriters"}],"optional":false},"property":{"type":"Identifier","start":13395,"end":13399,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13788,"end":14763,"callee":{"type":"Identifier","start":13788,"end":13791,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":13792,"end":14762,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13793,"end":13801,"name":"docDatas"}],"body":{"type":"BlockStatement","start":13806,"end":14762,"body":[{"type":"VariableDeclaration","start":13829,"end":13852,"declarations":[{"type":"VariableDeclarator","start":13835,"end":13851,"id":{"type":"Identifier","start":13835,"end":13846,"name":"groupedData"},"init":{"type":"ObjectExpression","start":13849,"end":13851,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13874,"end":14702,"expression":{"type":"CallExpression","start":13874,"end":14701,"callee":{"type":"MemberExpression","start":13874,"end":13890,"object":{"type":"Identifier","start":13874,"end":13882,"name":"docDatas"},"property":{"type":"Identifier","start":13883,"end":13890,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13891,"end":14700,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13892,"end":13895,"name":"doc"}],"body":{"type":"BlockStatement","start":13900,"end":14700,"body":[{"type":"VariableDeclaration","start":13927,"end":13947,"declarations":[{"type":"VariableDeclarator","start":13933,"end":13946,"id":{"type":"Identifier","start":13933,"end":13936,"name":"key"},"init":{"type":"MemberExpression","start":13939,"end":13946,"object":{"type":"Identifier","start":13939,"end":13942,"name":"doc"},"property":{"type":"Identifier","start":13943,"end":13946,"name":"key"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":13973,"end":13997,"declarations":[{"type":"VariableDeclarator","start":13979,"end":13996,"id":{"type":"Identifier","start":13979,"end":13984,"name":"value"},"init":{"type":"MemberExpression","start":13987,"end":13996,"object":{"type":"Identifier","start":13987,"end":13990,"name":"doc"},"property":{"type":"Identifier","start":13991,"end":13996,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":14190,"end":14677,"test":{"type":"LogicalExpression","start":14194,"end":14260,"left":{"type":"CallExpression","start":14194,"end":14225,"callee":{"type":"MemberExpression","start":14194,"end":14220,"object":{"type":"Identifier","start":14194,"end":14205,"name":"groupedData"},"property":{"type":"Identifier","start":14206,"end":14220,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14221,"end":14224,"name":"key"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":14229,"end":14260,"callee":{"type":"MemberExpression","start":14229,"end":14242,"object":{"type":"Identifier","start":14229,"end":14234,"name":"Array"},"property":{"type":"Identifier","start":14235,"end":14242,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14243,"end":14259,"object":{"type":"Identifier","start":14243,"end":14254,"name":"groupedData"},"property":{"type":"Identifier","start":14255,"end":14258,"name":"key"},"computed":true,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":14262,"end":14520,"body":[{"type":"ExpressionStatement","start":14461,"end":14493,"expression":{"type":"CallExpression","start":14461,"end":14492,"callee":{"type":"MemberExpression","start":14461,"end":14482,"object":{"type":"MemberExpression","start":14461,"end":14477,"object":{"type":"Identifier","start":14461,"end":14472,"name":"groupedData"},"property":{"type":"Identifier","start":14473,"end":14476,"name":"key"},"computed":true,"optional":false},"property":{"type":"Identifier","start":14478,"end":14482,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14483,"end":14491,"object":{"type":"Identifier","start":14483,"end":14488,"name":"value"},"property":{"type":"Literal","start":14489,"end":14490,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14551,"end":14677,"body":[{"type":"ExpressionStatement","start":14625,"end":14650,"expression":{"type":"AssignmentExpression","start":14625,"end":14649,"operator":"=","left":{"type":"MemberExpression","start":14625,"end":14641,"object":{"type":"Identifier","start":14625,"end":14636,"name":"groupedData"},"property":{"type":"Identifier","start":14637,"end":14640,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":14644,"end":14649,"name":"value"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":14724,"end":14743,"argument":{"type":"Identifier","start":14731,"end":14742,"name":"groupedData"}}]}}],"optional":false},{"type":"CallExpression","start":14849,"end":14979,"callee":{"type":"Identifier","start":14849,"end":14852,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":14853,"end":14978,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14854,"end":14865,"name":"groupedData"}],"body":{"type":"BlockStatement","start":14870,"end":14978,"body":[{"type":"ReturnStatement","start":14893,"end":14959,"argument":{"type":"CallExpression","start":14900,"end":14958,"callee":{"type":"MemberExpression","start":14900,"end":14913,"object":{"type":"Identifier","start":14900,"end":14906,"name":"Object"},"property":{"type":"Identifier","start":14907,"end":14913,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":14914,"end":14944,"callee":{"type":"MemberExpression","start":14914,"end":14927,"object":{"type":"Identifier","start":14914,"end":14920,"name":"Object"},"property":{"type":"Identifier","start":14921,"end":14927,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":14928,"end":14930,"properties":[]},{"type":"Identifier","start":14932,"end":14943,"name":"currentData"}],"optional":false},{"type":"Identifier","start":14946,"end":14957,"name":"groupedData"}],"optional":false}}]}}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":15015,"end":15072,"body":[{"type":"ReturnStatement","start":15034,"end":15057,"argument":{"type":"CallExpression","start":15041,"end":15056,"callee":{"type":"Identifier","start":15041,"end":15043,"name":"of"},"arguments":[{"type":"Identifier","start":15044,"end":15055,"name":"currentData"}],"optional":false}}]}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":15086,"end":15090,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15124,"end":15131,"callee":{"type":"Identifier","start":15124,"end":15128,"name":"take"},"arguments":[{"type":"Literal","start":15129,"end":15130,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":15875,"end":16328,"static":false,"computed":false,"key":{"type":"Identifier","start":15875,"end":15882,"name":"update$"},"kind":"method","value":{"type":"FunctionExpression","start":15882,"end":16328,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15883,"end":15887,"name":"data"},{"type":"Identifier","start":15889,"end":15895,"name":"docRef"},{"type":"AssignmentPattern","start":15897,"end":15922,"left":{"type":"Identifier","start":15897,"end":15917,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":15920,"end":15922,"elements":[]}},{"type":"AssignmentPattern","start":15924,"end":15948,"left":{"type":"Identifier","start":15924,"end":15941,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":15944,"end":15948,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":15950,"end":16328,"body":[{"type":"IfStatement","start":15961,"end":16171,"test":{"type":"LogicalExpression","start":15965,"end":16030,"left":{"type":"BinaryExpression","start":15965,"end":15993,"left":{"type":"Identifier","start":15965,"end":15985,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":15989,"end":15993,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":15997,"end":16030,"left":{"type":"MemberExpression","start":15997,"end":16024,"object":{"type":"Identifier","start":15997,"end":16017,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":16018,"end":16024,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":16029,"end":16030,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":16032,"end":16171,"body":[{"type":"ReturnStatement","start":16047,"end":16106,"argument":{"type":"CallExpression","start":16054,"end":16105,"callee":{"type":"MemberExpression","start":16054,"end":16072,"object":{"type":"ThisExpression","start":16054,"end":16058},"property":{"type":"Identifier","start":16059,"end":16072,"name":"updateSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16073,"end":16077,"name":"data"},{"type":"Identifier","start":16079,"end":16085,"name":"docRef"},{"type":"Identifier","start":16087,"end":16104,"name":"isAddModifiedDate"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":16181,"end":16279,"declarations":[{"type":"VariableDeclarator","start":16187,"end":16278,"id":{"type":"Identifier","start":16187,"end":16192,"name":"batch"},"init":{"type":"CallExpression","start":16195,"end":16278,"callee":{"type":"MemberExpression","start":16195,"end":16223,"object":{"type":"ThisExpression","start":16195,"end":16199},"property":{"type":"Identifier","start":16200,"end":16223,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16224,"end":16228,"name":"data"},{"type":"Identifier","start":16230,"end":16236,"name":"docRef"},{"type":"Identifier","start":16238,"end":16258,"name":"subCollectionWriters"},{"type":"Identifier","start":16260,"end":16277,"name":"isAddModifiedDate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":16289,"end":16321,"argument":{"type":"CallExpression","start":16296,"end":16320,"callee":{"type":"MemberExpression","start":16296,"end":16313,"object":{"type":"ThisExpression","start":16296,"end":16300},"property":{"type":"Identifier","start":16301,"end":16313,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16314,"end":16319,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16605,"end":17021,"static":false,"computed":false,"key":{"type":"Identifier","start":16605,"end":16620,"name":"updateMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":16620,"end":17021,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16621,"end":16628,"name":"docRefs"},{"type":"Identifier","start":16630,"end":16634,"name":"data"},{"type":"AssignmentPattern","start":16636,"end":16660,"left":{"type":"Identifier","start":16636,"end":16653,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16656,"end":16660,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16662,"end":17021,"body":[{"type":"VariableDeclaration","start":16740,"end":16784,"declarations":[{"type":"VariableDeclarator","start":16746,"end":16783,"id":{"type":"Identifier","start":16746,"end":16751,"name":"batch"},"init":{"type":"CallExpression","start":16754,"end":16783,"callee":{"type":"Identifier","start":16754,"end":16764,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":16765,"end":16782,"object":{"type":"MemberExpression","start":16765,"end":16772,"object":{"type":"ThisExpression","start":16765,"end":16769},"property":{"type":"Identifier","start":16770,"end":16772,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16773,"end":16782,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":16794,"end":16879,"test":{"type":"Identifier","start":16798,"end":16815,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":16817,"end":16879,"body":[{"type":"ExpressionStatement","start":16832,"end":16868,"expression":{"type":"AssignmentExpression","start":16832,"end":16867,"operator":"=","left":{"type":"Identifier","start":16832,"end":16836,"name":"data"},"right":{"type":"CallExpression","start":16839,"end":16867,"callee":{"type":"Identifier","start":16839,"end":16854,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":16855,"end":16859,"name":"data"},{"type":"Literal","start":16861,"end":16866,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":16889,"end":16972,"expression":{"type":"CallExpression","start":16889,"end":16971,"callee":{"type":"MemberExpression","start":16889,"end":16904,"object":{"type":"Identifier","start":16889,"end":16896,"name":"docRefs"},"property":{"type":"Identifier","start":16897,"end":16904,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16905,"end":16970,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16906,"end":16912,"name":"docRef"}],"body":{"type":"BlockStatement","start":16917,"end":16970,"body":[{"type":"ExpressionStatement","start":16932,"end":16959,"expression":{"type":"CallExpression","start":16932,"end":16958,"callee":{"type":"MemberExpression","start":16932,"end":16944,"object":{"type":"Identifier","start":16932,"end":16937,"name":"batch"},"property":{"type":"Identifier","start":16938,"end":16944,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16945,"end":16951,"name":"docRef"},{"type":"Identifier","start":16953,"end":16957,"name":"data"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":16982,"end":17014,"argument":{"type":"CallExpression","start":16989,"end":17013,"callee":{"type":"MemberExpression","start":16989,"end":17006,"object":{"type":"ThisExpression","start":16989,"end":16993},"property":{"type":"Identifier","start":16994,"end":17006,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17007,"end":17012,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":17620,"end":18497,"static":false,"computed":false,"key":{"type":"Identifier","start":17620,"end":17632,"name":"changeDocId$"},"kind":"method","value":{"type":"FunctionExpression","start":17632,"end":18497,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17633,"end":17639,"name":"docRef"},{"type":"Identifier","start":17641,"end":17646,"name":"newId"},{"type":"AssignmentPattern","start":17648,"end":17673,"left":{"type":"Identifier","start":17648,"end":17668,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":17671,"end":17673,"elements":[]}},{"type":"Identifier","start":17675,"end":17695,"name":"subCollectionWriters"}],"body":{"type":"BlockStatement","start":17697,"end":18497,"body":[{"type":"IfStatement","start":17708,"end":17812,"test":{"type":"BinaryExpression","start":17712,"end":17740,"left":{"type":"Identifier","start":17712,"end":17732,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":17736,"end":17740,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":17742,"end":17812,"body":[{"type":"ExpressionStatement","start":17757,"end":17801,"expression":{"type":"AssignmentExpression","start":17757,"end":17800,"operator":"=","left":{"type":"Identifier","start":17757,"end":17777,"name":"subCollectionWriters"},"right":{"type":"Identifier","start":17780,"end":17800,"name":"subCollectionQueries"}}}]},"alternate":null},{"type":"VariableDeclaration","start":17822,"end":17858,"declarations":[{"type":"VariableDeclarator","start":17828,"end":17857,"id":{"type":"Identifier","start":17828,"end":17841,"name":"collectionRef"},"init":{"type":"MemberExpression","start":17844,"end":17857,"object":{"type":"Identifier","start":17844,"end":17850,"name":"docRef"},"property":{"type":"Identifier","start":17851,"end":17857,"name":"parent"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":17868,"end":18490,"argument":{"type":"CallExpression","start":17875,"end":18489,"callee":{"type":"MemberExpression","start":17875,"end":17928,"object":{"type":"CallExpression","start":17875,"end":17923,"callee":{"type":"MemberExpression","start":17875,"end":17893,"object":{"type":"ThisExpression","start":17875,"end":17879},"property":{"type":"Identifier","start":17880,"end":17893,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17894,"end":17900,"name":"docRef"},{"type":"Identifier","start":17902,"end":17922,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17924,"end":17928,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17962,"end":17969,"callee":{"type":"Identifier","start":17962,"end":17966,"name":"take"},"arguments":[{"type":"Literal","start":17967,"end":17968,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":17971,"end":18044,"callee":{"type":"Identifier","start":17971,"end":17974,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":17975,"end":18043,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":17976,"end":17983,"name":"oldData"}],"body":{"type":"CallExpression","start":17988,"end":18043,"callee":{"type":"MemberExpression","start":17988,"end":18012,"object":{"type":"ThisExpression","start":17988,"end":17992},"property":{"type":"Identifier","start":17993,"end":18012,"name":"cleanExtrasFromData"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18013,"end":18020,"name":"oldData"},{"type":"Identifier","start":18022,"end":18042,"name":"subCollectionWriters"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":18046,"end":18361,"callee":{"type":"Identifier","start":18046,"end":18055,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18056,"end":18360,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18057,"end":18064,"name":"oldData"}],"body":{"type":"BlockStatement","start":18069,"end":18360,"body":[{"type":"ReturnStatement","start":18084,"end":18349,"argument":{"type":"CallExpression","start":18091,"end":18348,"callee":{"type":"MemberExpression","start":18091,"end":18165,"object":{"type":"CallExpression","start":18091,"end":18160,"callee":{"type":"MemberExpression","start":18091,"end":18100,"object":{"type":"ThisExpression","start":18091,"end":18095},"property":{"type":"Identifier","start":18096,"end":18100,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18101,"end":18108,"name":"oldData"},{"type":"Identifier","start":18110,"end":18123,"name":"collectionRef"},{"type":"Identifier","start":18125,"end":18145,"name":"subCollectionWriters"},{"type":"Literal","start":18147,"end":18152,"value":false,"raw":"false"},{"type":"Identifier","start":18154,"end":18159,"name":"newId"}],"optional":false},"property":{"type":"Identifier","start":18161,"end":18165,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18193,"end":18347,"callee":{"type":"Identifier","start":18193,"end":18201,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18202,"end":18346,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18202,"end":18209,"name":"newData"}],"body":{"type":"BlockStatement","start":18213,"end":18346,"body":[{"type":"ReturnStatement","start":18232,"end":18331,"argument":{"type":"CallExpression","start":18239,"end":18330,"callee":{"type":"MemberExpression","start":18239,"end":18286,"object":{"type":"CallExpression","start":18239,"end":18281,"callee":{"type":"MemberExpression","start":18239,"end":18251,"object":{"type":"ThisExpression","start":18239,"end":18243},"property":{"type":"Identifier","start":18244,"end":18251,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18252,"end":18258,"name":"docRef"},{"type":"Identifier","start":18260,"end":18280,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":18282,"end":18286,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18287,"end":18305,"callee":{"type":"Identifier","start":18287,"end":18290,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":18291,"end":18304,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"Identifier","start":18297,"end":18304,"name":"newData"}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":18363,"end":18479,"callee":{"type":"Identifier","start":18363,"end":18373,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":18374,"end":18478,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18374,"end":18377,"name":"err"}],"body":{"type":"BlockStatement","start":18381,"end":18478,"body":[{"type":"ExpressionStatement","start":18396,"end":18443,"expression":{"type":"CallExpression","start":18396,"end":18442,"callee":{"type":"MemberExpression","start":18396,"end":18407,"object":{"type":"Identifier","start":18396,"end":18403,"name":"console"},"property":{"type":"Identifier","start":18404,"end":18407,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":18408,"end":18441,"left":{"type":"Literal","start":18408,"end":18435,"value":"Failed to Change Doc Id: ","raw":"'Failed to Change Doc Id: '"},"operator":"+","right":{"type":"Identifier","start":18438,"end":18441,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":18457,"end":18467,"argument":{"type":"Identifier","start":18463,"end":18466,"name":"err"}}]}}],"optional":false},{"type":"CallExpression","start":18481,"end":18488,"callee":{"type":"Identifier","start":18481,"end":18485,"name":"take"},"arguments":[{"type":"Literal","start":18486,"end":18487,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":19122,"end":19941,"static":false,"computed":false,"key":{"type":"Identifier","start":19122,"end":19138,"name":"moveItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":19138,"end":19941,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":19139,"end":19144,"name":"items"},{"type":"Identifier","start":19146,"end":19155,"name":"fromIndex"},{"type":"Identifier","start":19157,"end":19164,"name":"toIndex"},{"type":"AssignmentPattern","start":19166,"end":19181,"left":{"type":"Identifier","start":19166,"end":19173,"name":"useCopy"},"right":{"type":"Literal","start":19176,"end":19181,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":19183,"end":19941,"body":[{"type":"VariableDeclaration","start":19194,"end":19201,"declarations":[{"type":"VariableDeclarator","start":19198,"end":19200,"id":{"type":"Identifier","start":19198,"end":19200,"name":"_a"},"init":null}],"kind":"var"},{"type":"IfStatement","start":19211,"end":19370,"test":{"type":"LogicalExpression","start":19215,"end":19297,"left":{"type":"LogicalExpression","start":19215,"end":19276,"left":{"type":"LogicalExpression","start":19215,"end":19251,"left":{"type":"BinaryExpression","start":19215,"end":19232,"left":{"type":"Identifier","start":19215,"end":19224,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":19228,"end":19232,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19236,"end":19251,"left":{"type":"Identifier","start":19236,"end":19243,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":19247,"end":19251,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":19255,"end":19276,"left":{"type":"Identifier","start":19255,"end":19264,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":19269,"end":19276,"name":"toIndex"}}},"operator":"||","right":{"type":"BinaryExpression","start":19280,"end":19297,"left":{"type":"MemberExpression","start":19280,"end":19292,"object":{"type":"Identifier","start":19280,"end":19285,"name":"items"},"property":{"type":"Identifier","start":19286,"end":19292,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":19296,"end":19297,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":19299,"end":19370,"body":[{"type":"ReturnStatement","start":19347,"end":19359,"argument":{"type":"CallExpression","start":19354,"end":19358,"callee":{"type":"Identifier","start":19354,"end":19356,"name":"of"},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":19380,"end":19793,"test":{"type":"BinaryExpression","start":19384,"end":19467,"left":{"type":"ConditionalExpression","start":19385,"end":19458,"test":{"type":"LogicalExpression","start":19385,"end":19426,"left":{"type":"BinaryExpression","start":19385,"end":19409,"left":{"type":"AssignmentExpression","start":19386,"end":19399,"operator":"=","left":{"type":"Identifier","start":19386,"end":19388,"name":"_a"},"right":{"type":"MemberExpression","start":19391,"end":19399,"object":{"type":"Identifier","start":19391,"end":19396,"name":"items"},"property":{"type":"Literal","start":19397,"end":19398,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"===","right":{"type":"Literal","start":19405,"end":19409,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19413,"end":19426,"left":{"type":"Identifier","start":19413,"end":19415,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":19420,"end":19426,"operator":"void","prefix":true,"argument":{"type":"Literal","start":19425,"end":19426,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":19429,"end":19435,"operator":"void","prefix":true,"argument":{"type":"Literal","start":19434,"end":19435,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":19438,"end":19458,"object":{"type":"Identifier","start":19438,"end":19440,"name":"_a"},"property":{"type":"Identifier","start":19441,"end":19458,"name":"firestoreMetadata"},"computed":false,"optional":false}},"operator":"==","right":{"type":"Literal","start":19463,"end":19467,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":19469,"end":19793,"body":[{"type":"VariableDeclaration","start":19484,"end":19756,"declarations":[{"type":"VariableDeclarator","start":19490,"end":19755,"id":{"type":"Identifier","start":19490,"end":19495,"name":"error"},"init":{"type":"ObjectExpression","start":19498,"end":19755,"properties":[{"type":"Property","start":19517,"end":19576,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19517,"end":19521,"name":"name"},"value":{"type":"Literal","start":19523,"end":19576,"value":"firestoreExt/unable-to-change-index-of-non-document","raw":"'firestoreExt/unable-to-change-index-of-non-document'"},"kind":"init"},{"type":"Property","start":19595,"end":19612,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19595,"end":19599,"name":"code"},"value":{"type":"Literal","start":19601,"end":19612,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":19631,"end":19739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19631,"end":19638,"name":"message"},"value":{"type":"Literal","start":19640,"end":19739,"value":"The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata","raw":"'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata'"},"kind":"init"}]}}],"kind":"const"},{"type":"ThrowStatement","start":19770,"end":19782,"argument":{"type":"Identifier","start":19776,"end":19781,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":19803,"end":19892,"declarations":[{"type":"VariableDeclarator","start":19809,"end":19891,"id":{"type":"Identifier","start":19809,"end":19814,"name":"batch"},"init":{"type":"CallExpression","start":19817,"end":19891,"callee":{"type":"MemberExpression","start":19817,"end":19855,"object":{"type":"ThisExpression","start":19817,"end":19821},"property":{"type":"Identifier","start":19822,"end":19855,"name":"getBatchFromMoveItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19856,"end":19861,"name":"items"},{"type":"Identifier","start":19863,"end":19872,"name":"fromIndex"},{"type":"Identifier","start":19874,"end":19881,"name":"toIndex"},{"type":"Identifier","start":19883,"end":19890,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":19902,"end":19934,"argument":{"type":"CallExpression","start":19909,"end":19933,"callee":{"type":"MemberExpression","start":19909,"end":19926,"object":{"type":"ThisExpression","start":19909,"end":19913},"property":{"type":"Identifier","start":19914,"end":19926,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19927,"end":19932,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":20312,"end":21370,"static":false,"computed":false,"key":{"type":"Identifier","start":20312,"end":20345,"name":"getBatchFromMoveItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":20345,"end":21370,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20346,"end":20351,"name":"items"},{"type":"Identifier","start":20353,"end":20362,"name":"fromIndex"},{"type":"Identifier","start":20364,"end":20371,"name":"toIndex"},{"type":"AssignmentPattern","start":20373,"end":20388,"left":{"type":"Identifier","start":20373,"end":20380,"name":"useCopy"},"right":{"type":"Literal","start":20383,"end":20388,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":20390,"end":21370,"body":[{"type":"VariableDeclaration","start":20401,"end":20450,"declarations":[{"type":"VariableDeclarator","start":20407,"end":20449,"id":{"type":"Identifier","start":20407,"end":20418,"name":"lowestIndex"},"init":{"type":"CallExpression","start":20421,"end":20449,"callee":{"type":"MemberExpression","start":20421,"end":20429,"object":{"type":"Identifier","start":20421,"end":20425,"name":"Math"},"property":{"type":"Identifier","start":20426,"end":20429,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20430,"end":20439,"name":"fromIndex"},{"type":"Identifier","start":20441,"end":20448,"name":"toIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20460,"end":20504,"declarations":[{"type":"VariableDeclarator","start":20466,"end":20503,"id":{"type":"Identifier","start":20466,"end":20471,"name":"batch"},"init":{"type":"CallExpression","start":20474,"end":20503,"callee":{"type":"Identifier","start":20474,"end":20484,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":20485,"end":20502,"object":{"type":"MemberExpression","start":20485,"end":20492,"object":{"type":"ThisExpression","start":20485,"end":20489},"property":{"type":"Identifier","start":20490,"end":20492,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20493,"end":20502,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20514,"end":20653,"test":{"type":"LogicalExpression","start":20518,"end":20579,"left":{"type":"LogicalExpression","start":20518,"end":20554,"left":{"type":"BinaryExpression","start":20518,"end":20535,"left":{"type":"Identifier","start":20518,"end":20527,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":20531,"end":20535,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":20539,"end":20554,"left":{"type":"Identifier","start":20539,"end":20546,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":20550,"end":20554,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":20558,"end":20579,"left":{"type":"Identifier","start":20558,"end":20567,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":20572,"end":20579,"name":"toIndex"}}},"consequent":{"type":"BlockStatement","start":20581,"end":20653,"body":[{"type":"ReturnStatement","start":20629,"end":20642,"argument":{"type":"Identifier","start":20636,"end":20641,"name":"batch"}}]},"alternate":null},{"type":"VariableDeclaration","start":20663,"end":20677,"declarations":[{"type":"VariableDeclarator","start":20667,"end":20676,"id":{"type":"Identifier","start":20667,"end":20676,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":20687,"end":20822,"test":{"type":"Identifier","start":20691,"end":20698,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":20700,"end":20763,"body":[{"type":"ExpressionStatement","start":20715,"end":20752,"expression":{"type":"AssignmentExpression","start":20715,"end":20751,"operator":"=","left":{"type":"Identifier","start":20715,"end":20724,"name":"usedItems"},"right":{"type":"CallExpression","start":20727,"end":20751,"callee":{"type":"MemberExpression","start":20727,"end":20740,"object":{"type":"Identifier","start":20727,"end":20733,"name":"Object"},"property":{"type":"Identifier","start":20734,"end":20740,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":20741,"end":20743,"elements":[]},{"type":"Identifier","start":20745,"end":20750,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":20778,"end":20822,"body":[{"type":"ExpressionStatement","start":20793,"end":20811,"expression":{"type":"AssignmentExpression","start":20793,"end":20810,"operator":"=","left":{"type":"Identifier","start":20793,"end":20802,"name":"usedItems"},"right":{"type":"Identifier","start":20805,"end":20810,"name":"items"}}}]}},{"type":"ExpressionStatement","start":20832,"end":20879,"expression":{"type":"CallExpression","start":20832,"end":20878,"callee":{"type":"Identifier","start":20832,"end":20847,"name":"moveItemInArray"},"arguments":[{"type":"Identifier","start":20848,"end":20857,"name":"usedItems"},{"type":"Identifier","start":20859,"end":20868,"name":"fromIndex"},{"type":"Identifier","start":20870,"end":20877,"name":"toIndex"}],"optional":false}},{"type":"VariableDeclaration","start":20889,"end":20944,"declarations":[{"type":"VariableDeclarator","start":20895,"end":20943,"id":{"type":"Identifier","start":20895,"end":20912,"name":"listSliceToUpdate"},"init":{"type":"CallExpression","start":20915,"end":20943,"callee":{"type":"MemberExpression","start":20915,"end":20930,"object":{"type":"Identifier","start":20915,"end":20924,"name":"usedItems"},"property":{"type":"Identifier","start":20925,"end":20930,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20931,"end":20942,"name":"lowestIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20954,"end":20974,"declarations":[{"type":"VariableDeclarator","start":20958,"end":20973,"id":{"type":"Identifier","start":20958,"end":20959,"name":"i"},"init":{"type":"Identifier","start":20962,"end":20973,"name":"lowestIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":20984,"end":21340,"await":false,"left":{"type":"VariableDeclaration","start":20989,"end":20999,"declarations":[{"type":"VariableDeclarator","start":20995,"end":20999,"id":{"type":"Identifier","start":20995,"end":20999,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":21003,"end":21020,"name":"listSliceToUpdate"},"body":{"type":"BlockStatement","start":21022,"end":21340,"body":[{"type":"IfStatement","start":21037,"end":21176,"test":{"type":"UnaryExpression","start":21041,"end":21049,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":21042,"end":21049,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":21051,"end":21176,"body":[{"type":"ExpressionStatement","start":21146,"end":21161,"expression":{"type":"AssignmentExpression","start":21146,"end":21160,"operator":"=","left":{"type":"MemberExpression","start":21146,"end":21156,"object":{"type":"Identifier","start":21146,"end":21150,"name":"item"},"property":{"type":"Identifier","start":21151,"end":21156,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":21159,"end":21160,"name":"i"}}}]},"alternate":null},{"type":"VariableDeclaration","start":21190,"end":21265,"declarations":[{"type":"VariableDeclarator","start":21196,"end":21264,"id":{"type":"Identifier","start":21196,"end":21199,"name":"ref"},"init":{"type":"CallExpression","start":21202,"end":21264,"callee":{"type":"Identifier","start":21202,"end":21216,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":21217,"end":21244,"object":{"type":"MemberExpression","start":21217,"end":21239,"object":{"type":"Identifier","start":21217,"end":21221,"name":"item"},"property":{"type":"Identifier","start":21222,"end":21239,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21240,"end":21244,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":21246,"end":21263,"object":{"type":"MemberExpression","start":21246,"end":21253,"object":{"type":"ThisExpression","start":21246,"end":21250},"property":{"type":"Identifier","start":21251,"end":21253,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21254,"end":21263,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":21279,"end":21311,"expression":{"type":"CallExpression","start":21279,"end":21310,"callee":{"type":"MemberExpression","start":21279,"end":21291,"object":{"type":"Identifier","start":21279,"end":21284,"name":"batch"},"property":{"type":"Identifier","start":21285,"end":21291,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":21292,"end":21295,"name":"ref"},{"type":"ObjectExpression","start":21297,"end":21309,"properties":[{"type":"Property","start":21299,"end":21307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":21299,"end":21304,"name":"index"},"value":{"type":"Identifier","start":21306,"end":21307,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":21325,"end":21329,"expression":{"type":"UpdateExpression","start":21325,"end":21328,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":21325,"end":21326,"name":"i"}}}]}},{"type":"ReturnStatement","start":21350,"end":21363,"argument":{"type":"Identifier","start":21357,"end":21362,"name":"batch"}}]}}},{"type":"MethodDefinition","start":21705,"end":22634,"static":false,"computed":false,"key":{"type":"Identifier","start":21705,"end":21730,"name":"deleteIndexedItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":21730,"end":22634,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21731,"end":21736,"name":"items"},{"type":"Identifier","start":21738,"end":21751,"name":"indexToDelete"},{"type":"AssignmentPattern","start":21753,"end":21778,"left":{"type":"Identifier","start":21753,"end":21773,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":21776,"end":21778,"elements":[]}},{"type":"AssignmentPattern","start":21780,"end":21795,"left":{"type":"Identifier","start":21780,"end":21787,"name":"useCopy"},"right":{"type":"Literal","start":21790,"end":21795,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":21797,"end":22634,"body":[{"type":"VariableDeclaration","start":21808,"end":21822,"declarations":[{"type":"VariableDeclarator","start":21812,"end":21821,"id":{"type":"Identifier","start":21812,"end":21821,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":21832,"end":21967,"test":{"type":"Identifier","start":21836,"end":21843,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":21845,"end":21908,"body":[{"type":"ExpressionStatement","start":21860,"end":21897,"expression":{"type":"AssignmentExpression","start":21860,"end":21896,"operator":"=","left":{"type":"Identifier","start":21860,"end":21869,"name":"usedItems"},"right":{"type":"CallExpression","start":21872,"end":21896,"callee":{"type":"MemberExpression","start":21872,"end":21885,"object":{"type":"Identifier","start":21872,"end":21878,"name":"Object"},"property":{"type":"Identifier","start":21879,"end":21885,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":21886,"end":21888,"elements":[]},{"type":"Identifier","start":21890,"end":21895,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":21923,"end":21967,"body":[{"type":"ExpressionStatement","start":21938,"end":21956,"expression":{"type":"AssignmentExpression","start":21938,"end":21955,"operator":"=","left":{"type":"Identifier","start":21938,"end":21947,"name":"usedItems"},"right":{"type":"Identifier","start":21950,"end":21955,"name":"items"}}}]}},{"type":"VariableDeclaration","start":21977,"end":22023,"declarations":[{"type":"VariableDeclarator","start":21983,"end":22022,"id":{"type":"Identifier","start":21983,"end":21995,"name":"itemToDelete"},"init":{"type":"MemberExpression","start":21998,"end":22022,"object":{"type":"Identifier","start":21998,"end":22007,"name":"usedItems"},"property":{"type":"Identifier","start":22008,"end":22021,"name":"indexToDelete"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":22117,"end":22627,"argument":{"type":"CallExpression","start":22124,"end":22626,"callee":{"type":"MemberExpression","start":22124,"end":22207,"object":{"type":"CallExpression","start":22124,"end":22202,"callee":{"type":"MemberExpression","start":22124,"end":22144,"object":{"type":"ThisExpression","start":22124,"end":22128},"property":{"type":"Identifier","start":22129,"end":22144,"name":"getDeleteBatch$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":22145,"end":22179,"object":{"type":"MemberExpression","start":22145,"end":22175,"object":{"type":"Identifier","start":22145,"end":22157,"name":"itemToDelete"},"property":{"type":"Identifier","start":22158,"end":22175,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":22176,"end":22179,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":22181,"end":22201,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":22203,"end":22207,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":22208,"end":22577,"callee":{"type":"Identifier","start":22208,"end":22211,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":22212,"end":22576,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22213,"end":22218,"name":"batch"}],"body":{"type":"BlockStatement","start":22223,"end":22576,"body":[{"type":"ExpressionStatement","start":22341,"end":22376,"expression":{"type":"CallExpression","start":22341,"end":22375,"callee":{"type":"MemberExpression","start":22341,"end":22355,"object":{"type":"Identifier","start":22341,"end":22350,"name":"usedItems"},"property":{"type":"Identifier","start":22351,"end":22355,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22356,"end":22374,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22356,"end":22360,"name":"item"}],"body":{"type":"MemberExpression","start":22364,"end":22374,"object":{"type":"Identifier","start":22364,"end":22368,"name":"item"},"property":{"type":"Identifier","start":22369,"end":22374,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"ExpressionStatement","start":22428,"end":22463,"expression":{"type":"CallExpression","start":22428,"end":22462,"callee":{"type":"MemberExpression","start":22428,"end":22444,"object":{"type":"Identifier","start":22428,"end":22437,"name":"usedItems"},"property":{"type":"Identifier","start":22438,"end":22444,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22445,"end":22458,"name":"indexToDelete"},{"type":"Literal","start":22460,"end":22461,"value":1,"raw":"1"}],"optional":false}},{"type":"ExpressionStatement","start":22477,"end":22538,"expression":{"type":"CallExpression","start":22477,"end":22537,"callee":{"type":"MemberExpression","start":22477,"end":22519,"object":{"type":"ThisExpression","start":22477,"end":22481},"property":{"type":"Identifier","start":22482,"end":22519,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22520,"end":22529,"name":"usedItems"},{"type":"Identifier","start":22531,"end":22536,"name":"batch"}],"optional":false}},{"type":"ReturnStatement","start":22552,"end":22565,"argument":{"type":"Identifier","start":22559,"end":22564,"name":"batch"}}]}}],"optional":false},{"type":"CallExpression","start":22579,"end":22625,"callee":{"type":"Identifier","start":22579,"end":22588,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":22589,"end":22624,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22590,"end":22595,"name":"batch"}],"body":{"type":"CallExpression","start":22600,"end":22624,"callee":{"type":"MemberExpression","start":22600,"end":22617,"object":{"type":"ThisExpression","start":22600,"end":22604},"property":{"type":"Identifier","start":22605,"end":22617,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22618,"end":22623,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":22977,"end":24645,"static":false,"computed":false,"key":{"type":"Identifier","start":22977,"end":23003,"name":"deleteIndexedItemsInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":23003,"end":24645,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23004,"end":23009,"name":"items"},{"type":"Identifier","start":23011,"end":23026,"name":"indicesToDelete"},{"type":"AssignmentPattern","start":23028,"end":23053,"left":{"type":"Identifier","start":23028,"end":23048,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":23051,"end":23053,"elements":[]}},{"type":"AssignmentPattern","start":23055,"end":23070,"left":{"type":"Identifier","start":23055,"end":23062,"name":"useCopy"},"right":{"type":"Literal","start":23065,"end":23070,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":23072,"end":24645,"body":[{"type":"VariableDeclaration","start":23083,"end":23097,"declarations":[{"type":"VariableDeclarator","start":23087,"end":23096,"id":{"type":"Identifier","start":23087,"end":23096,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":23107,"end":23242,"test":{"type":"Identifier","start":23111,"end":23118,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":23120,"end":23183,"body":[{"type":"ExpressionStatement","start":23135,"end":23172,"expression":{"type":"AssignmentExpression","start":23135,"end":23171,"operator":"=","left":{"type":"Identifier","start":23135,"end":23144,"name":"usedItems"},"right":{"type":"CallExpression","start":23147,"end":23171,"callee":{"type":"MemberExpression","start":23147,"end":23160,"object":{"type":"Identifier","start":23147,"end":23153,"name":"Object"},"property":{"type":"Identifier","start":23154,"end":23160,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":23161,"end":23163,"elements":[]},{"type":"Identifier","start":23165,"end":23170,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":23198,"end":23242,"body":[{"type":"ExpressionStatement","start":23213,"end":23231,"expression":{"type":"AssignmentExpression","start":23213,"end":23230,"operator":"=","left":{"type":"Identifier","start":23213,"end":23222,"name":"usedItems"},"right":{"type":"Identifier","start":23225,"end":23230,"name":"items"}}}]}},{"type":"ExpressionStatement","start":23252,"end":23287,"expression":{"type":"CallExpression","start":23252,"end":23286,"callee":{"type":"MemberExpression","start":23252,"end":23266,"object":{"type":"Identifier","start":23252,"end":23261,"name":"usedItems"},"property":{"type":"Identifier","start":23262,"end":23266,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23267,"end":23285,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23267,"end":23271,"name":"item"}],"body":{"type":"MemberExpression","start":23275,"end":23285,"object":{"type":"Identifier","start":23275,"end":23279,"name":"item"},"property":{"type":"Identifier","start":23280,"end":23285,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"VariableDeclaration","start":23335,"end":23471,"declarations":[{"type":"VariableDeclarator","start":23341,"end":23470,"id":{"type":"Identifier","start":23341,"end":23354,"name":"itemsToDelete"},"init":{"type":"CallExpression","start":23357,"end":23470,"callee":{"type":"MemberExpression","start":23357,"end":23373,"object":{"type":"Identifier","start":23357,"end":23366,"name":"usedItems"},"property":{"type":"Identifier","start":23367,"end":23373,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23374,"end":23469,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23375,"end":23379,"name":"item"},{"type":"Identifier","start":23381,"end":23382,"name":"i"}],"body":{"type":"BlockStatement","start":23387,"end":23469,"body":[{"type":"ReturnStatement","start":23402,"end":23458,"argument":{"type":"BinaryExpression","start":23409,"end":23457,"left":{"type":"CallExpression","start":23409,"end":23450,"callee":{"type":"MemberExpression","start":23409,"end":23434,"object":{"type":"Identifier","start":23409,"end":23424,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23425,"end":23434,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23435,"end":23449,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23435,"end":23437,"name":"_i"}],"body":{"type":"BinaryExpression","start":23441,"end":23449,"left":{"type":"Identifier","start":23441,"end":23443,"name":"_i"},"operator":"===","right":{"type":"Identifier","start":23448,"end":23449,"name":"i"}}}],"optional":false},"operator":"!==","right":{"type":"UnaryExpression","start":23455,"end":23457,"operator":"-","prefix":true,"argument":{"type":"Literal","start":23456,"end":23457,"value":1,"raw":"1"}}}}]}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23599,"end":23622,"expression":{"type":"CallExpression","start":23599,"end":23621,"callee":{"type":"MemberExpression","start":23599,"end":23619,"object":{"type":"Identifier","start":23599,"end":23614,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23615,"end":23619,"name":"sort"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ForStatement","start":23632,"end":23752,"init":{"type":"VariableDeclaration","start":23637,"end":23671,"declarations":[{"type":"VariableDeclarator","start":23641,"end":23671,"id":{"type":"Identifier","start":23641,"end":23642,"name":"i"},"init":{"type":"BinaryExpression","start":23645,"end":23671,"left":{"type":"MemberExpression","start":23645,"end":23667,"object":{"type":"Identifier","start":23645,"end":23660,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23661,"end":23667,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":23670,"end":23671,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":23673,"end":23679,"left":{"type":"Identifier","start":23673,"end":23674,"name":"i"},"operator":">=","right":{"type":"Literal","start":23678,"end":23679,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":23681,"end":23684,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":23681,"end":23682,"name":"i"}},"body":{"type":"BlockStatement","start":23686,"end":23752,"body":[{"type":"ExpressionStatement","start":23701,"end":23741,"expression":{"type":"CallExpression","start":23701,"end":23740,"callee":{"type":"MemberExpression","start":23701,"end":23717,"object":{"type":"Identifier","start":23701,"end":23710,"name":"usedItems"},"property":{"type":"Identifier","start":23711,"end":23717,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23718,"end":23736,"object":{"type":"Identifier","start":23718,"end":23733,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23734,"end":23735,"name":"i"},"computed":true,"optional":false},{"type":"Literal","start":23738,"end":23739,"value":1,"raw":"1"}],"optional":false}}]}},{"type":"VariableDeclaration","start":23762,"end":23785,"declarations":[{"type":"VariableDeclarator","start":23768,"end":23784,"id":{"type":"Identifier","start":23768,"end":23779,"name":"docRefsObs$"},"init":{"type":"ArrayExpression","start":23782,"end":23784,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":23888,"end":24108,"expression":{"type":"CallExpression","start":23888,"end":24107,"callee":{"type":"MemberExpression","start":23888,"end":23909,"object":{"type":"Identifier","start":23888,"end":23901,"name":"itemsToDelete"},"property":{"type":"Identifier","start":23902,"end":23909,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23910,"end":24106,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23910,"end":23922,"name":"itemToDelete"}],"body":{"type":"BlockStatement","start":23926,"end":24106,"body":[{"type":"VariableDeclaration","start":23941,"end":24058,"declarations":[{"type":"VariableDeclarator","start":23947,"end":24057,"id":{"type":"Identifier","start":23947,"end":23951,"name":"obs$"},"init":{"type":"CallExpression","start":23954,"end":24057,"callee":{"type":"MemberExpression","start":23954,"end":24048,"object":{"type":"CallExpression","start":23954,"end":24043,"callee":{"type":"MemberExpression","start":23954,"end":23985,"object":{"type":"ThisExpression","start":23954,"end":23958},"property":{"type":"Identifier","start":23959,"end":23985,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23986,"end":24020,"object":{"type":"MemberExpression","start":23986,"end":24016,"object":{"type":"Identifier","start":23986,"end":23998,"name":"itemToDelete"},"property":{"type":"Identifier","start":23999,"end":24016,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24017,"end":24020,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":24022,"end":24042,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":24044,"end":24048,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24049,"end":24056,"callee":{"type":"Identifier","start":24049,"end":24053,"name":"take"},"arguments":[{"type":"Literal","start":24054,"end":24055,"value":1,"raw":"1"}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":24072,"end":24095,"expression":{"type":"CallExpression","start":24072,"end":24094,"callee":{"type":"MemberExpression","start":24072,"end":24088,"object":{"type":"Identifier","start":24072,"end":24083,"name":"docRefsObs$"},"property":{"type":"Identifier","start":24084,"end":24088,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24089,"end":24093,"name":"obs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":24118,"end":24638,"argument":{"type":"CallExpression","start":24125,"end":24637,"callee":{"type":"MemberExpression","start":24125,"end":24151,"object":{"type":"CallExpression","start":24125,"end":24146,"callee":{"type":"Identifier","start":24125,"end":24133,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":24134,"end":24145,"name":"docRefsObs$"}],"optional":false},"property":{"type":"Identifier","start":24147,"end":24151,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24152,"end":24159,"callee":{"type":"Identifier","start":24152,"end":24156,"name":"take"},"arguments":[{"type":"Literal","start":24157,"end":24158,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":24161,"end":24448,"callee":{"type":"Identifier","start":24161,"end":24164,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24165,"end":24447,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24166,"end":24179,"name":"listOfDocRefs"}],"body":{"type":"BlockStatement","start":24184,"end":24447,"body":[{"type":"VariableDeclaration","start":24279,"end":24296,"declarations":[{"type":"VariableDeclarator","start":24283,"end":24295,"id":{"type":"Identifier","start":24283,"end":24290,"name":"docRefs"},"init":{"type":"ArrayExpression","start":24293,"end":24295,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":24310,"end":24407,"expression":{"type":"CallExpression","start":24310,"end":24406,"callee":{"type":"MemberExpression","start":24310,"end":24331,"object":{"type":"Identifier","start":24310,"end":24323,"name":"listOfDocRefs"},"property":{"type":"Identifier","start":24324,"end":24331,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24332,"end":24405,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24332,"end":24336,"name":"refs"}],"body":{"type":"BlockStatement","start":24340,"end":24405,"body":[{"type":"ExpressionStatement","start":24359,"end":24390,"expression":{"type":"AssignmentExpression","start":24359,"end":24389,"operator":"=","left":{"type":"Identifier","start":24359,"end":24366,"name":"docRefs"},"right":{"type":"CallExpression","start":24369,"end":24389,"callee":{"type":"MemberExpression","start":24369,"end":24383,"object":{"type":"Identifier","start":24369,"end":24376,"name":"docRefs"},"property":{"type":"Identifier","start":24377,"end":24383,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24384,"end":24388,"name":"refs"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":24421,"end":24436,"argument":{"type":"Identifier","start":24428,"end":24435,"name":"docRefs"}}]}}],"optional":false},{"type":"CallExpression","start":24450,"end":24510,"callee":{"type":"Identifier","start":24450,"end":24453,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24454,"end":24509,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24455,"end":24462,"name":"docRefs"}],"body":{"type":"CallExpression","start":24467,"end":24509,"callee":{"type":"MemberExpression","start":24467,"end":24500,"object":{"type":"ThisExpression","start":24467,"end":24471},"property":{"type":"Identifier","start":24472,"end":24500,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24501,"end":24508,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24512,"end":24588,"callee":{"type":"Identifier","start":24512,"end":24515,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24516,"end":24587,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24517,"end":24522,"name":"batch"}],"body":{"type":"CallExpression","start":24527,"end":24587,"callee":{"type":"MemberExpression","start":24527,"end":24569,"object":{"type":"ThisExpression","start":24527,"end":24531},"property":{"type":"Identifier","start":24532,"end":24569,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24570,"end":24579,"name":"usedItems"},{"type":"Identifier","start":24581,"end":24586,"name":"batch"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24590,"end":24636,"callee":{"type":"Identifier","start":24590,"end":24599,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":24600,"end":24635,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24601,"end":24606,"name":"batch"}],"body":{"type":"CallExpression","start":24611,"end":24635,"callee":{"type":"MemberExpression","start":24611,"end":24628,"object":{"type":"ThisExpression","start":24611,"end":24615},"property":{"type":"Identifier","start":24616,"end":24628,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24629,"end":24634,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":24985,"end":25464,"static":false,"computed":false,"key":{"type":"Identifier","start":24985,"end":25022,"name":"getBatchFromUpdateIndexFromListOfDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25022,"end":25464,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25023,"end":25028,"name":"items"},{"type":"AssignmentPattern","start":25030,"end":25067,"left":{"type":"Identifier","start":25030,"end":25035,"name":"batch"},"right":{"type":"CallExpression","start":25038,"end":25067,"callee":{"type":"Identifier","start":25038,"end":25048,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":25049,"end":25066,"object":{"type":"MemberExpression","start":25049,"end":25056,"object":{"type":"ThisExpression","start":25049,"end":25053},"property":{"type":"Identifier","start":25054,"end":25056,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25057,"end":25066,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":25069,"end":25464,"body":[{"type":"ExpressionStatement","start":25080,"end":25434,"expression":{"type":"CallExpression","start":25080,"end":25433,"callee":{"type":"MemberExpression","start":25080,"end":25093,"object":{"type":"Identifier","start":25080,"end":25085,"name":"items"},"property":{"type":"Identifier","start":25086,"end":25093,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":25094,"end":25432,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25095,"end":25099,"name":"item"},{"type":"Identifier","start":25101,"end":25106,"name":"index"}],"body":{"type":"BlockStatement","start":25111,"end":25432,"body":[{"type":"IfStatement","start":25126,"end":25421,"test":{"type":"BinaryExpression","start":25130,"end":25150,"left":{"type":"MemberExpression","start":25130,"end":25140,"object":{"type":"Identifier","start":25130,"end":25134,"name":"item"},"property":{"type":"Identifier","start":25135,"end":25140,"name":"index"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":25145,"end":25150,"name":"index"}},"consequent":{"type":"BlockStatement","start":25152,"end":25421,"body":[{"type":"ExpressionStatement","start":25171,"end":25190,"expression":{"type":"AssignmentExpression","start":25171,"end":25189,"operator":"=","left":{"type":"MemberExpression","start":25171,"end":25181,"object":{"type":"Identifier","start":25171,"end":25175,"name":"item"},"property":{"type":"Identifier","start":25176,"end":25181,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":25184,"end":25189,"name":"index"}}},{"type":"VariableDeclaration","start":25284,"end":25359,"declarations":[{"type":"VariableDeclarator","start":25290,"end":25358,"id":{"type":"Identifier","start":25290,"end":25293,"name":"ref"},"init":{"type":"CallExpression","start":25296,"end":25358,"callee":{"type":"Identifier","start":25296,"end":25310,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":25311,"end":25338,"object":{"type":"MemberExpression","start":25311,"end":25333,"object":{"type":"Identifier","start":25311,"end":25315,"name":"item"},"property":{"type":"Identifier","start":25316,"end":25333,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25334,"end":25338,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":25340,"end":25357,"object":{"type":"MemberExpression","start":25340,"end":25347,"object":{"type":"ThisExpression","start":25340,"end":25344},"property":{"type":"Identifier","start":25345,"end":25347,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25348,"end":25357,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":25377,"end":25406,"expression":{"type":"CallExpression","start":25377,"end":25405,"callee":{"type":"MemberExpression","start":25377,"end":25389,"object":{"type":"Identifier","start":25377,"end":25382,"name":"batch"},"property":{"type":"Identifier","start":25383,"end":25389,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25390,"end":25393,"name":"ref"},{"type":"ObjectExpression","start":25395,"end":25404,"properties":[{"type":"Property","start":25397,"end":25402,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":25397,"end":25402,"name":"index"},"kind":"init","value":{"type":"Identifier","start":25397,"end":25402,"name":"index"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":25444,"end":25457,"argument":{"type":"Identifier","start":25451,"end":25456,"name":"batch"}}]}}},{"type":"MethodDefinition","start":25470,"end":25930,"static":false,"computed":false,"key":{"type":"Identifier","start":25470,"end":25495,"name":"transferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25495,"end":25930,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25496,"end":25509,"name":"previousArray"},{"type":"Identifier","start":25511,"end":25523,"name":"currentArray"},{"type":"Identifier","start":25525,"end":25538,"name":"previousIndex"},{"type":"Identifier","start":25540,"end":25552,"name":"currentIndex"},{"type":"Identifier","start":25554,"end":25570,"name":"currentArrayName"},{"type":"Identifier","start":25572,"end":25603,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":25605,"end":25643,"left":{"type":"Identifier","start":25605,"end":25636,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":25639,"end":25643,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":25645,"end":25660,"left":{"type":"Identifier","start":25645,"end":25652,"name":"useCopy"},"right":{"type":"Literal","start":25655,"end":25660,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":25662,"end":25930,"body":[{"type":"VariableDeclaration","start":25673,"end":25881,"declarations":[{"type":"VariableDeclarator","start":25679,"end":25880,"id":{"type":"Identifier","start":25679,"end":25684,"name":"batch"},"init":{"type":"CallExpression","start":25687,"end":25880,"callee":{"type":"MemberExpression","start":25687,"end":25729,"object":{"type":"ThisExpression","start":25687,"end":25691},"property":{"type":"Identifier","start":25692,"end":25729,"name":"getBatchFromTransferItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25730,"end":25743,"name":"previousArray"},{"type":"Identifier","start":25745,"end":25757,"name":"currentArray"},{"type":"Identifier","start":25759,"end":25772,"name":"previousIndex"},{"type":"Identifier","start":25774,"end":25786,"name":"currentIndex"},{"type":"Identifier","start":25788,"end":25804,"name":"currentArrayName"},{"type":"Identifier","start":25806,"end":25837,"name":"additionalDataUpdateOnMovedItem"},{"type":"Identifier","start":25839,"end":25870,"name":"isUpdateModifiedDateOnMovedItem"},{"type":"Identifier","start":25872,"end":25879,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":25891,"end":25923,"argument":{"type":"CallExpression","start":25898,"end":25922,"callee":{"type":"MemberExpression","start":25898,"end":25915,"object":{"type":"ThisExpression","start":25898,"end":25902},"property":{"type":"Identifier","start":25903,"end":25915,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25916,"end":25921,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":26236,"end":26631,"static":false,"computed":false,"key":{"type":"Identifier","start":26236,"end":26243,"name":"delete$"},"kind":"method","value":{"type":"FunctionExpression","start":26243,"end":26631,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26244,"end":26250,"name":"docRef"},{"type":"AssignmentPattern","start":26252,"end":26277,"left":{"type":"Identifier","start":26252,"end":26272,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26275,"end":26277,"elements":[]}}],"body":{"type":"BlockStatement","start":26279,"end":26631,"body":[{"type":"IfStatement","start":26290,"end":26473,"test":{"type":"LogicalExpression","start":26294,"end":26359,"left":{"type":"BinaryExpression","start":26294,"end":26322,"left":{"type":"Identifier","start":26294,"end":26314,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26318,"end":26322,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26326,"end":26359,"left":{"type":"MemberExpression","start":26326,"end":26353,"object":{"type":"Identifier","start":26326,"end":26346,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26347,"end":26353,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26358,"end":26359,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26361,"end":26473,"body":[{"type":"ReturnStatement","start":26432,"end":26462,"argument":{"type":"CallExpression","start":26439,"end":26461,"callee":{"type":"MemberExpression","start":26439,"end":26453,"object":{"type":"MemberExpression","start":26439,"end":26446,"object":{"type":"ThisExpression","start":26439,"end":26443},"property":{"type":"Identifier","start":26444,"end":26446,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26447,"end":26453,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26454,"end":26460,"name":"docRef"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26483,"end":26624,"argument":{"type":"CallExpression","start":26490,"end":26623,"callee":{"type":"MemberExpression","start":26490,"end":26556,"object":{"type":"CallExpression","start":26490,"end":26551,"callee":{"type":"MemberExpression","start":26490,"end":26521,"object":{"type":"ThisExpression","start":26490,"end":26494},"property":{"type":"Identifier","start":26495,"end":26521,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26522,"end":26528,"name":"docRef"},{"type":"Identifier","start":26530,"end":26550,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26552,"end":26556,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26557,"end":26622,"callee":{"type":"Identifier","start":26557,"end":26566,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":26567,"end":26621,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26568,"end":26578,"name":"docRefList"}],"body":{"type":"CallExpression","start":26583,"end":26621,"callee":{"type":"MemberExpression","start":26583,"end":26609,"object":{"type":"ThisExpression","start":26583,"end":26587},"property":{"type":"Identifier","start":26588,"end":26609,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26610,"end":26620,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":26963,"end":27431,"static":false,"computed":false,"key":{"type":"Identifier","start":26963,"end":26978,"name":"getDeleteBatch$"},"kind":"method","value":{"type":"FunctionExpression","start":26978,"end":27431,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26979,"end":26985,"name":"docRef"},{"type":"AssignmentPattern","start":26987,"end":27012,"left":{"type":"Identifier","start":26987,"end":27007,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27010,"end":27012,"elements":[]}},{"type":"AssignmentPattern","start":27014,"end":27051,"left":{"type":"Identifier","start":27014,"end":27019,"name":"batch"},"right":{"type":"CallExpression","start":27022,"end":27051,"callee":{"type":"Identifier","start":27022,"end":27032,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":27033,"end":27050,"object":{"type":"MemberExpression","start":27033,"end":27040,"object":{"type":"ThisExpression","start":27033,"end":27037},"property":{"type":"Identifier","start":27038,"end":27040,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27041,"end":27050,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":27053,"end":27431,"body":[{"type":"IfStatement","start":27064,"end":27269,"test":{"type":"LogicalExpression","start":27068,"end":27133,"left":{"type":"BinaryExpression","start":27068,"end":27096,"left":{"type":"Identifier","start":27068,"end":27088,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27092,"end":27096,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27100,"end":27133,"left":{"type":"MemberExpression","start":27100,"end":27127,"object":{"type":"Identifier","start":27100,"end":27120,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":27121,"end":27127,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":27132,"end":27133,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":27135,"end":27269,"body":[{"type":"ExpressionStatement","start":27206,"end":27227,"expression":{"type":"CallExpression","start":27206,"end":27226,"callee":{"type":"MemberExpression","start":27206,"end":27218,"object":{"type":"Identifier","start":27206,"end":27211,"name":"batch"},"property":{"type":"Identifier","start":27212,"end":27218,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27219,"end":27225,"name":"docRef"}],"optional":false}},{"type":"ReturnStatement","start":27241,"end":27258,"argument":{"type":"CallExpression","start":27248,"end":27257,"callee":{"type":"Identifier","start":27248,"end":27250,"name":"of"},"arguments":[{"type":"Identifier","start":27251,"end":27256,"name":"batch"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":27279,"end":27424,"argument":{"type":"CallExpression","start":27286,"end":27423,"callee":{"type":"MemberExpression","start":27286,"end":27352,"object":{"type":"CallExpression","start":27286,"end":27347,"callee":{"type":"MemberExpression","start":27286,"end":27317,"object":{"type":"ThisExpression","start":27286,"end":27290},"property":{"type":"Identifier","start":27291,"end":27317,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27318,"end":27324,"name":"docRef"},{"type":"Identifier","start":27326,"end":27346,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":27348,"end":27352,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":27353,"end":27413,"callee":{"type":"Identifier","start":27353,"end":27356,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":27357,"end":27412,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27358,"end":27365,"name":"docRefs"}],"body":{"type":"CallExpression","start":27370,"end":27412,"callee":{"type":"MemberExpression","start":27370,"end":27403,"object":{"type":"ThisExpression","start":27370,"end":27374},"property":{"type":"Identifier","start":27375,"end":27403,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27404,"end":27411,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":27415,"end":27422,"callee":{"type":"Identifier","start":27415,"end":27419,"name":"take"},"arguments":[{"type":"Literal","start":27420,"end":27421,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27437,"end":27619,"static":false,"computed":false,"key":{"type":"Identifier","start":27437,"end":27459,"name":"deleteMultipleByPaths$"},"kind":"method","value":{"type":"FunctionExpression","start":27459,"end":27619,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27460,"end":27468,"name":"docPaths"}],"body":{"type":"BlockStatement","start":27470,"end":27619,"body":[{"type":"VariableDeclaration","start":27481,"end":27559,"declarations":[{"type":"VariableDeclarator","start":27487,"end":27558,"id":{"type":"Identifier","start":27487,"end":27494,"name":"docRefs"},"init":{"type":"CallExpression","start":27497,"end":27558,"callee":{"type":"MemberExpression","start":27497,"end":27509,"object":{"type":"Identifier","start":27497,"end":27505,"name":"docPaths"},"property":{"type":"Identifier","start":27506,"end":27509,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27510,"end":27557,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27510,"end":27514,"name":"path"}],"body":{"type":"CallExpression","start":27518,"end":27557,"callee":{"type":"Identifier","start":27518,"end":27532,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":27533,"end":27537,"name":"path"},{"type":"MemberExpression","start":27539,"end":27556,"object":{"type":"MemberExpression","start":27539,"end":27546,"object":{"type":"ThisExpression","start":27539,"end":27543},"property":{"type":"Identifier","start":27544,"end":27546,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27547,"end":27556,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":27569,"end":27612,"argument":{"type":"CallExpression","start":27576,"end":27611,"callee":{"type":"MemberExpression","start":27576,"end":27602,"object":{"type":"ThisExpression","start":27576,"end":27580},"property":{"type":"Identifier","start":27581,"end":27602,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27603,"end":27610,"name":"docRefs"}],"optional":false}}]}}},{"type":"MethodDefinition","start":27895,"end":28774,"static":false,"computed":false,"key":{"type":"Identifier","start":27895,"end":27910,"name":"deleteMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":27910,"end":28774,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27911,"end":27918,"name":"docRefs"},{"type":"AssignmentPattern","start":27920,"end":27945,"left":{"type":"Identifier","start":27920,"end":27940,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27943,"end":27945,"elements":[]}}],"body":{"type":"BlockStatement","start":27947,"end":28774,"body":[{"type":"IfStatement","start":27958,"end":28098,"test":{"type":"LogicalExpression","start":27962,"end":28027,"left":{"type":"BinaryExpression","start":27962,"end":27990,"left":{"type":"Identifier","start":27962,"end":27982,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27986,"end":27990,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27994,"end":28027,"left":{"type":"MemberExpression","start":27994,"end":28021,"object":{"type":"Identifier","start":27994,"end":28014,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":28015,"end":28021,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":28026,"end":28027,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":28029,"end":28098,"body":[{"type":"ReturnStatement","start":28044,"end":28087,"argument":{"type":"CallExpression","start":28051,"end":28086,"callee":{"type":"MemberExpression","start":28051,"end":28077,"object":{"type":"ThisExpression","start":28051,"end":28055},"property":{"type":"Identifier","start":28056,"end":28077,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28078,"end":28085,"name":"docRefs"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":28108,"end":28132,"declarations":[{"type":"VariableDeclarator","start":28114,"end":28131,"id":{"type":"Identifier","start":28114,"end":28126,"name":"deepDocRefs$"},"init":{"type":"ArrayExpression","start":28129,"end":28131,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":28142,"end":28317,"expression":{"type":"CallExpression","start":28142,"end":28316,"callee":{"type":"MemberExpression","start":28142,"end":28157,"object":{"type":"Identifier","start":28142,"end":28149,"name":"docRefs"},"property":{"type":"Identifier","start":28150,"end":28157,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28158,"end":28315,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28158,"end":28164,"name":"docRef"}],"body":{"type":"BlockStatement","start":28168,"end":28315,"body":[{"type":"VariableDeclaration","start":28183,"end":28262,"declarations":[{"type":"VariableDeclarator","start":28189,"end":28261,"id":{"type":"Identifier","start":28189,"end":28197,"name":"docRefs$"},"init":{"type":"CallExpression","start":28200,"end":28261,"callee":{"type":"MemberExpression","start":28200,"end":28231,"object":{"type":"ThisExpression","start":28200,"end":28204},"property":{"type":"Identifier","start":28205,"end":28231,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28232,"end":28238,"name":"docRef"},{"type":"Identifier","start":28240,"end":28260,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":28276,"end":28304,"expression":{"type":"CallExpression","start":28276,"end":28303,"callee":{"type":"MemberExpression","start":28276,"end":28293,"object":{"type":"Identifier","start":28276,"end":28288,"name":"deepDocRefs$"},"property":{"type":"Identifier","start":28289,"end":28293,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28294,"end":28302,"name":"docRefs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":28327,"end":28767,"argument":{"type":"CallExpression","start":28334,"end":28766,"callee":{"type":"MemberExpression","start":28334,"end":28366,"object":{"type":"CallExpression","start":28334,"end":28361,"callee":{"type":"Identifier","start":28334,"end":28347,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":28348,"end":28360,"name":"deepDocRefs$"}],"optional":false},"property":{"type":"Identifier","start":28362,"end":28366,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28423,"end":28642,"callee":{"type":"Identifier","start":28423,"end":28426,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":28427,"end":28641,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28428,"end":28433,"name":"lists"}],"body":{"type":"BlockStatement","start":28438,"end":28641,"body":[{"type":"VariableDeclaration","start":28453,"end":28477,"declarations":[{"type":"VariableDeclarator","start":28457,"end":28476,"id":{"type":"Identifier","start":28457,"end":28471,"name":"mainDocRefList"},"init":{"type":"ArrayExpression","start":28474,"end":28476,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":28491,"end":28594,"expression":{"type":"CallExpression","start":28491,"end":28593,"callee":{"type":"MemberExpression","start":28491,"end":28504,"object":{"type":"Identifier","start":28491,"end":28496,"name":"lists"},"property":{"type":"Identifier","start":28497,"end":28504,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28505,"end":28592,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28505,"end":28509,"name":"list"}],"body":{"type":"BlockStatement","start":28513,"end":28592,"body":[{"type":"ExpressionStatement","start":28532,"end":28577,"expression":{"type":"AssignmentExpression","start":28532,"end":28576,"operator":"=","left":{"type":"Identifier","start":28532,"end":28546,"name":"mainDocRefList"},"right":{"type":"CallExpression","start":28549,"end":28576,"callee":{"type":"MemberExpression","start":28549,"end":28570,"object":{"type":"Identifier","start":28549,"end":28563,"name":"mainDocRefList"},"property":{"type":"Identifier","start":28564,"end":28570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28571,"end":28575,"name":"list"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":28608,"end":28630,"argument":{"type":"Identifier","start":28615,"end":28629,"name":"mainDocRefList"}}]}}],"optional":false},{"type":"CallExpression","start":28700,"end":28765,"callee":{"type":"Identifier","start":28700,"end":28709,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28710,"end":28764,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28711,"end":28721,"name":"docRefList"}],"body":{"type":"CallExpression","start":28726,"end":28764,"callee":{"type":"MemberExpression","start":28726,"end":28752,"object":{"type":"ThisExpression","start":28726,"end":28730},"property":{"type":"Identifier","start":28731,"end":28752,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28753,"end":28763,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29112,"end":29351,"static":false,"computed":false,"key":{"type":"Identifier","start":29112,"end":29129,"name":"deleteCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":29129,"end":29351,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29130,"end":29143,"name":"collectionRef"},{"type":"AssignmentPattern","start":29145,"end":29170,"left":{"type":"Identifier","start":29145,"end":29165,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29168,"end":29170,"elements":[]}}],"body":{"type":"BlockStatement","start":29172,"end":29351,"body":[{"type":"ReturnStatement","start":29183,"end":29344,"argument":{"type":"CallExpression","start":29190,"end":29343,"callee":{"type":"MemberExpression","start":29190,"end":29334,"object":{"type":"CallExpression","start":29190,"end":29329,"callee":{"type":"MemberExpression","start":29190,"end":29276,"object":{"type":"CallExpression","start":29190,"end":29271,"callee":{"type":"MemberExpression","start":29190,"end":29234,"object":{"type":"ThisExpression","start":29190,"end":29194},"property":{"type":"Identifier","start":29195,"end":29234,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29235,"end":29248,"name":"collectionRef"},{"type":"Identifier","start":29250,"end":29270,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":29272,"end":29276,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29277,"end":29328,"callee":{"type":"Identifier","start":29277,"end":29286,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":29287,"end":29327,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":29287,"end":29294,"name":"docRefs"}],"body":{"type":"CallExpression","start":29298,"end":29327,"callee":{"type":"MemberExpression","start":29298,"end":29318,"object":{"type":"ThisExpression","start":29298,"end":29302},"property":{"type":"Identifier","start":29303,"end":29318,"name":"deleteMultiple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29319,"end":29326,"name":"docRefs"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":29330,"end":29334,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29335,"end":29342,"callee":{"type":"Identifier","start":29335,"end":29339,"name":"take"},"arguments":[{"type":"Literal","start":29340,"end":29341,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29775,"end":29964,"static":false,"computed":false,"key":{"type":"Identifier","start":29775,"end":29791,"name":"deleteDocByPath$"},"kind":"method","value":{"type":"FunctionExpression","start":29791,"end":29964,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29792,"end":29799,"name":"docPath"},{"type":"AssignmentPattern","start":29801,"end":29826,"left":{"type":"Identifier","start":29801,"end":29821,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29824,"end":29826,"elements":[]}}],"body":{"type":"BlockStatement","start":29828,"end":29964,"body":[{"type":"VariableDeclaration","start":29839,"end":29897,"declarations":[{"type":"VariableDeclarator","start":29845,"end":29896,"id":{"type":"Identifier","start":29845,"end":29851,"name":"docRef"},"init":{"type":"CallExpression","start":29854,"end":29896,"callee":{"type":"Identifier","start":29854,"end":29868,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":29869,"end":29876,"name":"docPath"},{"type":"MemberExpression","start":29878,"end":29895,"object":{"type":"MemberExpression","start":29878,"end":29885,"object":{"type":"ThisExpression","start":29878,"end":29882},"property":{"type":"Identifier","start":29883,"end":29885,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":29886,"end":29895,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":29907,"end":29957,"argument":{"type":"CallExpression","start":29914,"end":29956,"callee":{"type":"MemberExpression","start":29914,"end":29926,"object":{"type":"ThisExpression","start":29914,"end":29918},"property":{"type":"Identifier","start":29919,"end":29926,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29927,"end":29933,"name":"docRef"},{"type":"Identifier","start":29935,"end":29955,"name":"subCollectionQueries"}],"optional":false}}]}}},{"type":"MethodDefinition","start":30318,"end":30769,"static":false,"computed":false,"key":{"type":"Identifier","start":30318,"end":30329,"name":"deleteItem$"},"kind":"method","value":{"type":"FunctionExpression","start":30329,"end":30769,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30330,"end":30334,"name":"item"},{"type":"AssignmentPattern","start":30336,"end":30361,"left":{"type":"Identifier","start":30336,"end":30356,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":30359,"end":30361,"elements":[]}}],"body":{"type":"BlockStatement","start":30363,"end":30769,"body":[{"type":"VariableDeclaration","start":30374,"end":30453,"declarations":[{"type":"VariableDeclarator","start":30380,"end":30452,"id":{"type":"Identifier","start":30380,"end":30387,"name":"docRefs"},"init":{"type":"CallExpression","start":30390,"end":30452,"callee":{"type":"MemberExpression","start":30390,"end":30424,"object":{"type":"ThisExpression","start":30390,"end":30394},"property":{"type":"Identifier","start":30395,"end":30424,"name":"getDocumentReferencesFromItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30425,"end":30429,"name":"item"},{"type":"Identifier","start":30431,"end":30451,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":30463,"end":30762,"argument":{"type":"CallExpression","start":30470,"end":30761,"callee":{"type":"MemberExpression","start":30470,"end":30510,"object":{"type":"CallExpression","start":30470,"end":30505,"callee":{"type":"MemberExpression","start":30470,"end":30496,"object":{"type":"ThisExpression","start":30470,"end":30474},"property":{"type":"Identifier","start":30475,"end":30496,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30497,"end":30504,"name":"docRefs"}],"optional":false},"property":{"type":"Identifier","start":30506,"end":30510,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30753,"end":30760,"callee":{"type":"Identifier","start":30753,"end":30757,"name":"take"},"arguments":[{"type":"Literal","start":30758,"end":30759,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":30775,"end":31437,"static":false,"computed":false,"key":{"type":"Identifier","start":30775,"end":30794,"name":"cleanExtrasFromData"},"kind":"method","value":{"type":"FunctionExpression","start":30794,"end":31437,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30795,"end":30799,"name":"data"},{"type":"AssignmentPattern","start":30801,"end":30826,"left":{"type":"Identifier","start":30801,"end":30821,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":30824,"end":30826,"elements":[]}},{"type":"AssignmentPattern","start":30828,"end":30857,"left":{"type":"Identifier","start":30828,"end":30852,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":30855,"end":30857,"elements":[]}}],"body":{"type":"BlockStatement","start":30859,"end":31437,"body":[{"type":"IfStatement","start":31013,"end":31430,"test":{"type":"CallExpression","start":31017,"end":31036,"callee":{"type":"MemberExpression","start":31017,"end":31030,"object":{"type":"Identifier","start":31017,"end":31022,"name":"Array"},"property":{"type":"Identifier","start":31023,"end":31030,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31031,"end":31035,"name":"data"}],"optional":false},"consequent":{"type":"BlockStatement","start":31038,"end":31291,"body":[{"type":"VariableDeclaration","start":31053,"end":31075,"declarations":[{"type":"VariableDeclarator","start":31059,"end":31074,"id":{"type":"Identifier","start":31059,"end":31069,"name":"cleanDatas"},"init":{"type":"ArrayExpression","start":31072,"end":31074,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":31089,"end":31248,"expression":{"type":"CallExpression","start":31089,"end":31247,"callee":{"type":"MemberExpression","start":31089,"end":31101,"object":{"type":"Identifier","start":31089,"end":31093,"name":"data"},"property":{"type":"Identifier","start":31094,"end":31101,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":31102,"end":31246,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31102,"end":31103,"name":"d"}],"body":{"type":"BlockStatement","start":31107,"end":31246,"body":[{"type":"ExpressionStatement","start":31126,"end":31231,"expression":{"type":"CallExpression","start":31126,"end":31230,"callee":{"type":"MemberExpression","start":31126,"end":31141,"object":{"type":"Identifier","start":31126,"end":31136,"name":"cleanDatas"},"property":{"type":"Identifier","start":31137,"end":31141,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":31142,"end":31229,"callee":{"type":"MemberExpression","start":31142,"end":31178,"object":{"type":"ThisExpression","start":31142,"end":31146},"property":{"type":"Identifier","start":31147,"end":31178,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31179,"end":31180,"name":"d"},{"type":"Identifier","start":31182,"end":31202,"name":"subCollectionWriters"},{"type":"Identifier","start":31204,"end":31228,"name":"additionalFieldsToRemove"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":31262,"end":31280,"argument":{"type":"Identifier","start":31269,"end":31279,"name":"cleanDatas"}}]},"alternate":{"type":"BlockStatement","start":31306,"end":31430,"body":[{"type":"ReturnStatement","start":31321,"end":31419,"argument":{"type":"CallExpression","start":31328,"end":31418,"callee":{"type":"MemberExpression","start":31328,"end":31364,"object":{"type":"ThisExpression","start":31328,"end":31332},"property":{"type":"Identifier","start":31333,"end":31364,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31365,"end":31369,"name":"data"},{"type":"Identifier","start":31371,"end":31391,"name":"subCollectionWriters"},{"type":"Identifier","start":31393,"end":31417,"name":"additionalFieldsToRemove"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":31970,"end":33667,"static":false,"computed":false,"key":{"type":"Identifier","start":31970,"end":31989,"name":"listenForDocSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":31989,"end":33667,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31990,"end":31996,"name":"docRef"},{"type":"AssignmentPattern","start":31998,"end":32054,"left":{"type":"Identifier","start":31998,"end":32014,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":32017,"end":32054,"object":{"type":"Identifier","start":32017,"end":32034,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32035,"end":32054,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":32056,"end":33667,"body":[{"type":"ReturnStatement","start":32067,"end":33660,"argument":{"type":"CallExpression","start":32074,"end":33659,"callee":{"type":"MemberExpression","start":32074,"end":32098,"object":{"type":"CallExpression","start":32074,"end":32093,"callee":{"type":"MemberExpression","start":32074,"end":32085,"object":{"type":"MemberExpression","start":32074,"end":32081,"object":{"type":"ThisExpression","start":32074,"end":32078},"property":{"type":"Identifier","start":32079,"end":32081,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":32082,"end":32085,"name":"doc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":32086,"end":32092,"name":"docRef"}],"optional":false},"property":{"type":"Identifier","start":32094,"end":32098,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":32099,"end":32547,"callee":{"type":"Identifier","start":32099,"end":32102,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":32103,"end":32546,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32104,"end":32112,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32117,"end":32546,"body":[{"type":"IfStatement","start":32132,"end":32535,"test":{"type":"LogicalExpression","start":32136,"end":32216,"left":{"type":"UnaryExpression","start":32136,"end":32154,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":32137,"end":32154,"callee":{"type":"MemberExpression","start":32137,"end":32152,"object":{"type":"Identifier","start":32137,"end":32145,"name":"snapshot"},"property":{"type":"Identifier","start":32146,"end":32152,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":32158,"end":32216,"left":{"type":"Identifier","start":32158,"end":32174,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32179,"end":32216,"object":{"type":"Identifier","start":32179,"end":32196,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32197,"end":32216,"name":"THROW_DOC_NOT_FOUND"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32218,"end":32535,"body":[{"type":"VariableDeclaration","start":32237,"end":32490,"declarations":[{"type":"VariableDeclarator","start":32243,"end":32489,"id":{"type":"Identifier","start":32243,"end":32248,"name":"error"},"init":{"type":"ObjectExpression","start":32251,"end":32489,"properties":[{"type":"Property","start":32274,"end":32298,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32274,"end":32278,"name":"name"},"value":{"type":"Literal","start":32280,"end":32298,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":32321,"end":32338,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32321,"end":32325,"name":"code"},"value":{"type":"Literal","start":32327,"end":32338,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":32361,"end":32441,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32361,"end":32368,"name":"message"},"value":{"type":"Literal","start":32370,"end":32441,"value":"Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND","raw":"'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND'"},"kind":"init"},{"type":"Property","start":32464,"end":32470,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32464,"end":32470,"name":"docRef"},"kind":"init","value":{"type":"Identifier","start":32464,"end":32470,"name":"docRef"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":32508,"end":32520,"argument":{"type":"Identifier","start":32514,"end":32519,"name":"error"}}]},"alternate":null}]}}],"optional":false},{"type":"CallExpression","start":32549,"end":32674,"callee":{"type":"Identifier","start":32549,"end":32555,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":32556,"end":32673,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32557,"end":32565,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32570,"end":32673,"body":[{"type":"ReturnStatement","start":32585,"end":32662,"argument":{"type":"UnaryExpression","start":32592,"end":32661,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":32594,"end":32660,"left":{"type":"CallExpression","start":32594,"end":32611,"callee":{"type":"MemberExpression","start":32594,"end":32609,"object":{"type":"Identifier","start":32594,"end":32602,"name":"snapshot"},"property":{"type":"Identifier","start":32603,"end":32609,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":32615,"end":32660,"left":{"type":"Identifier","start":32615,"end":32631,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32636,"end":32660,"object":{"type":"Identifier","start":32636,"end":32653,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32654,"end":32660,"name":"FILTER"},"computed":false,"optional":false}}}}}]}}],"optional":false},{"type":"CallExpression","start":32676,"end":33462,"callee":{"type":"Identifier","start":32676,"end":32679,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32680,"end":33461,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32681,"end":32689,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32694,"end":33461,"body":[{"type":"ExpressionStatement","start":32709,"end":32740,"expression":{"type":"CallExpression","start":32709,"end":32739,"callee":{"type":"MemberExpression","start":32709,"end":32720,"object":{"type":"Identifier","start":32709,"end":32716,"name":"console"},"property":{"type":"Identifier","start":32717,"end":32720,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":32721,"end":32738,"callee":{"type":"MemberExpression","start":32721,"end":32736,"object":{"type":"Identifier","start":32721,"end":32729,"name":"snapshot"},"property":{"type":"Identifier","start":32730,"end":32736,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":32754,"end":33424,"test":{"type":"LogicalExpression","start":32758,"end":32837,"left":{"type":"CallExpression","start":32758,"end":32775,"callee":{"type":"MemberExpression","start":32758,"end":32773,"object":{"type":"Identifier","start":32758,"end":32766,"name":"snapshot"},"property":{"type":"Identifier","start":32767,"end":32773,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":32779,"end":32837,"left":{"type":"Identifier","start":32779,"end":32795,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32800,"end":32837,"object":{"type":"Identifier","start":32800,"end":32817,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32818,"end":32837,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32839,"end":33279,"body":[{"type":"VariableDeclaration","start":32858,"end":32887,"declarations":[{"type":"VariableDeclarator","start":32864,"end":32886,"id":{"type":"Identifier","start":32864,"end":32868,"name":"data"},"init":{"type":"CallExpression","start":32871,"end":32886,"callee":{"type":"MemberExpression","start":32871,"end":32884,"object":{"type":"Identifier","start":32871,"end":32879,"name":"snapshot"},"property":{"type":"Identifier","start":32880,"end":32884,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":32905,"end":33177,"declarations":[{"type":"VariableDeclarator","start":32911,"end":33176,"id":{"type":"Identifier","start":32911,"end":32928,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":32931,"end":33176,"properties":[{"type":"Property","start":32954,"end":32969,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32954,"end":32956,"name":"id"},"value":{"type":"MemberExpression","start":32958,"end":32969,"object":{"type":"Identifier","start":32958,"end":32966,"name":"snapshot"},"property":{"type":"Identifier","start":32967,"end":32969,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32992,"end":33009,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32992,"end":32995,"name":"ref"},"value":{"type":"MemberExpression","start":32997,"end":33009,"object":{"type":"Identifier","start":32997,"end":33005,"name":"snapshot"},"property":{"type":"Identifier","start":33006,"end":33009,"name":"ref"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":33032,"end":33049,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33032,"end":33036,"name":"path"},"value":{"type":"MemberExpression","start":33038,"end":33049,"object":{"type":"Identifier","start":33038,"end":33044,"name":"docRef"},"property":{"type":"Identifier","start":33045,"end":33049,"name":"path"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":33072,"end":33099,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33072,"end":33080,"name":"isExists"},"value":{"type":"CallExpression","start":33082,"end":33099,"callee":{"type":"MemberExpression","start":33082,"end":33097,"object":{"type":"Identifier","start":33082,"end":33090,"name":"snapshot"},"property":{"type":"Identifier","start":33091,"end":33097,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":33122,"end":33157,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33122,"end":33138,"name":"snapshotMetadata"},"value":{"type":"MemberExpression","start":33140,"end":33157,"object":{"type":"Identifier","start":33140,"end":33148,"name":"snapshot"},"property":{"type":"Identifier","start":33149,"end":33157,"name":"metadata"},"computed":false,"optional":false},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":33195,"end":33264,"argument":{"type":"CallExpression","start":33202,"end":33263,"callee":{"type":"MemberExpression","start":33202,"end":33215,"object":{"type":"Identifier","start":33202,"end":33208,"name":"Object"},"property":{"type":"Identifier","start":33209,"end":33215,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":33216,"end":33239,"callee":{"type":"MemberExpression","start":33216,"end":33229,"object":{"type":"Identifier","start":33216,"end":33222,"name":"Object"},"property":{"type":"Identifier","start":33223,"end":33229,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":33230,"end":33232,"properties":[]},{"type":"Identifier","start":33234,"end":33238,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":33241,"end":33262,"properties":[{"type":"Property","start":33243,"end":33260,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":33243,"end":33260,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":33243,"end":33260,"name":"firestoreMetadata"}}]}],"optional":false}}]},"alternate":{"type":"IfStatement","start":33298,"end":33424,"test":{"type":"BinaryExpression","start":33302,"end":33352,"left":{"type":"Identifier","start":33302,"end":33318,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":33323,"end":33352,"object":{"type":"Identifier","start":33323,"end":33340,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":33341,"end":33352,"name":"RETURN_NULL"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":33354,"end":33424,"body":[{"type":"ReturnStatement","start":33397,"end":33409,"argument":{"type":"Literal","start":33404,"end":33408,"value":null,"raw":"null"}}]},"alternate":null}},{"type":"ReturnStatement","start":33438,"end":33450,"argument":{"type":"Literal","start":33445,"end":33449,"value":null,"raw":"null"}}]}}],"optional":false},{"type":"CallExpression","start":33464,"end":33658,"callee":{"type":"Identifier","start":33464,"end":33467,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33468,"end":33657,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33469,"end":33473,"name":"data"}],"body":{"type":"BlockStatement","start":33478,"end":33657,"body":[{"type":"IfStatement","start":33493,"end":33646,"test":{"type":"BinaryExpression","start":33497,"end":33509,"left":{"type":"Identifier","start":33497,"end":33501,"name":"data"},"operator":"!=","right":{"type":"Literal","start":33505,"end":33509,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":33511,"end":33581,"body":[{"type":"ReturnStatement","start":33530,"end":33566,"argument":{"type":"CallExpression","start":33537,"end":33565,"callee":{"type":"Identifier","start":33537,"end":33559,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":33560,"end":33564,"name":"data"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":33600,"end":33646,"body":[{"type":"ReturnStatement","start":33619,"end":33631,"argument":{"type":"Identifier","start":33626,"end":33630,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":33933,"end":34938,"static":false,"computed":false,"key":{"type":"Identifier","start":33933,"end":33959,"name":"listenForCollectionSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":33959,"end":34938,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33960,"end":33966,"name":"_query"}],"body":{"type":"BlockStatement","start":33968,"end":34938,"body":[{"type":"ReturnStatement","start":34143,"end":34931,"argument":{"type":"CallExpression","start":34150,"end":34930,"callee":{"type":"MemberExpression","start":34150,"end":34181,"object":{"type":"CallExpression","start":34150,"end":34176,"callee":{"type":"MemberExpression","start":34150,"end":34168,"object":{"type":"MemberExpression","start":34150,"end":34157,"object":{"type":"ThisExpression","start":34150,"end":34154},"property":{"type":"Identifier","start":34155,"end":34157,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34158,"end":34168,"name":"collection"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":34169,"end":34175,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":34177,"end":34181,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":34182,"end":34811,"callee":{"type":"Identifier","start":34182,"end":34185,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34186,"end":34810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34187,"end":34191,"name":"snap"}],"body":{"type":"BlockStatement","start":34196,"end":34810,"body":[{"type":"ReturnStatement","start":34211,"end":34799,"argument":{"type":"CallExpression","start":34218,"end":34798,"callee":{"type":"MemberExpression","start":34218,"end":34231,"object":{"type":"MemberExpression","start":34218,"end":34227,"object":{"type":"Identifier","start":34218,"end":34222,"name":"snap"},"property":{"type":"Identifier","start":34223,"end":34227,"name":"docs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34228,"end":34231,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34232,"end":34797,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34232,"end":34240,"name":"snapshot"}],"body":{"type":"BlockStatement","start":34244,"end":34797,"body":[{"type":"VariableDeclaration","start":34263,"end":34292,"declarations":[{"type":"VariableDeclarator","start":34269,"end":34291,"id":{"type":"Identifier","start":34269,"end":34273,"name":"data"},"init":{"type":"CallExpression","start":34276,"end":34291,"callee":{"type":"MemberExpression","start":34276,"end":34289,"object":{"type":"Identifier","start":34276,"end":34284,"name":"snapshot"},"property":{"type":"Identifier","start":34285,"end":34289,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34310,"end":34333,"declarations":[{"type":"VariableDeclarator","start":34316,"end":34332,"id":{"type":"Identifier","start":34316,"end":34318,"name":"id"},"init":{"type":"MemberExpression","start":34321,"end":34332,"object":{"type":"Identifier","start":34321,"end":34329,"name":"snapshot"},"property":{"type":"Identifier","start":34330,"end":34332,"name":"id"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34351,"end":34376,"declarations":[{"type":"VariableDeclarator","start":34357,"end":34375,"id":{"type":"Identifier","start":34357,"end":34360,"name":"ref"},"init":{"type":"MemberExpression","start":34363,"end":34375,"object":{"type":"Identifier","start":34363,"end":34371,"name":"snapshot"},"property":{"type":"Identifier","start":34372,"end":34375,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34394,"end":34416,"declarations":[{"type":"VariableDeclarator","start":34400,"end":34415,"id":{"type":"Identifier","start":34400,"end":34404,"name":"path"},"init":{"type":"MemberExpression","start":34407,"end":34415,"object":{"type":"Identifier","start":34407,"end":34410,"name":"ref"},"property":{"type":"Identifier","start":34411,"end":34415,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34434,"end":34477,"declarations":[{"type":"VariableDeclarator","start":34440,"end":34476,"id":{"type":"Identifier","start":34440,"end":34456,"name":"snapshotMetadata"},"init":{"type":"MemberExpression","start":34459,"end":34476,"object":{"type":"Identifier","start":34459,"end":34467,"name":"snapshot"},"property":{"type":"Identifier","start":34468,"end":34476,"name":"metadata"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34495,"end":34695,"declarations":[{"type":"VariableDeclarator","start":34501,"end":34694,"id":{"type":"Identifier","start":34501,"end":34518,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":34521,"end":34694,"properties":[{"type":"Property","start":34544,"end":34546,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34544,"end":34546,"name":"id"},"kind":"init","value":{"type":"Identifier","start":34544,"end":34546,"name":"id"}},{"type":"Property","start":34569,"end":34573,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34569,"end":34573,"name":"path"},"kind":"init","value":{"type":"Identifier","start":34569,"end":34573,"name":"path"}},{"type":"Property","start":34596,"end":34599,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34596,"end":34599,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":34596,"end":34599,"name":"ref"}},{"type":"Property","start":34622,"end":34638,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34622,"end":34638,"name":"snapshotMetadata"},"kind":"init","value":{"type":"Identifier","start":34622,"end":34638,"name":"snapshotMetadata"}},{"type":"Property","start":34661,"end":34675,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":34661,"end":34669,"name":"isExists"},"value":{"type":"Literal","start":34671,"end":34675,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":34713,"end":34782,"argument":{"type":"CallExpression","start":34720,"end":34781,"callee":{"type":"MemberExpression","start":34720,"end":34733,"object":{"type":"Identifier","start":34720,"end":34726,"name":"Object"},"property":{"type":"Identifier","start":34727,"end":34733,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":34734,"end":34757,"callee":{"type":"MemberExpression","start":34734,"end":34747,"object":{"type":"Identifier","start":34734,"end":34740,"name":"Object"},"property":{"type":"Identifier","start":34741,"end":34747,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":34748,"end":34750,"properties":[]},{"type":"Identifier","start":34752,"end":34756,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":34759,"end":34780,"properties":[{"type":"Property","start":34761,"end":34778,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34761,"end":34778,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":34761,"end":34778,"name":"firestoreMetadata"}}]}],"optional":false}}]}}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":34813,"end":34929,"callee":{"type":"Identifier","start":34813,"end":34816,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34817,"end":34928,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":34818,"end":34823,"name":"datas"}],"body":{"type":"CallExpression","start":34828,"end":34928,"callee":{"type":"MemberExpression","start":34828,"end":34837,"object":{"type":"Identifier","start":34828,"end":34833,"name":"datas"},"property":{"type":"Identifier","start":34834,"end":34837,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34838,"end":34927,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34838,"end":34842,"name":"data"}],"body":{"type":"BlockStatement","start":34846,"end":34927,"body":[{"type":"ExpressionStatement","start":34861,"end":34890,"expression":{"type":"CallExpression","start":34861,"end":34889,"callee":{"type":"Identifier","start":34861,"end":34883,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":34884,"end":34888,"name":"data"}],"optional":false}},{"type":"ReturnStatement","start":34904,"end":34916,"argument":{"type":"Identifier","start":34911,"end":34915,"name":"data"}}]}}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":35220,"end":39018,"static":false,"computed":false,"key":{"type":"Identifier","start":35220,"end":35244,"name":"listenForCollectionsDeep"},"kind":"method","value":{"type":"FunctionExpression","start":35244,"end":39018,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35245,"end":35249,"name":"item"},{"type":"AssignmentPattern","start":35251,"end":35276,"left":{"type":"Identifier","start":35251,"end":35271,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":35274,"end":35276,"elements":[]}}],"body":{"type":"BlockStatement","start":35278,"end":39018,"body":[{"type":"IfStatement","start":35289,"end":35351,"test":{"type":"BinaryExpression","start":35293,"end":35305,"left":{"type":"Identifier","start":35293,"end":35297,"name":"item"},"operator":"==","right":{"type":"Literal","start":35301,"end":35305,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":35307,"end":35351,"body":[{"type":"ReturnStatement","start":35322,"end":35340,"argument":{"type":"CallExpression","start":35329,"end":35339,"callee":{"type":"Identifier","start":35329,"end":35331,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35332,"end":35338,"elements":[{"type":"Identifier","start":35333,"end":35337,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":35361,"end":35443,"test":{"type":"BinaryExpression","start":35365,"end":35397,"left":{"type":"MemberExpression","start":35365,"end":35392,"object":{"type":"Identifier","start":35365,"end":35385,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35386,"end":35392,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":35396,"end":35397,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":35399,"end":35443,"body":[{"type":"ReturnStatement","start":35414,"end":35432,"argument":{"type":"CallExpression","start":35421,"end":35431,"callee":{"type":"Identifier","start":35421,"end":35423,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35424,"end":35430,"elements":[{"type":"Identifier","start":35425,"end":35429,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":35453,"end":35484,"declarations":[{"type":"VariableDeclarator","start":35459,"end":35483,"id":{"type":"Identifier","start":35459,"end":35478,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":35481,"end":35483,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":35587,"end":38387,"expression":{"type":"CallExpression","start":35587,"end":38386,"callee":{"type":"MemberExpression","start":35587,"end":35615,"object":{"type":"Identifier","start":35587,"end":35607,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35608,"end":35615,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":35616,"end":38385,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35616,"end":35634,"name":"subCollectionQuery"}],"body":{"type":"BlockStatement","start":35638,"end":38385,"body":[{"type":"VariableDeclaration","start":35653,"end":35766,"declarations":[{"type":"VariableDeclarator","start":35659,"end":35765,"id":{"type":"Identifier","start":35659,"end":35673,"name":"queryContainer"},"init":{"type":"NewExpression","start":35676,"end":35765,"callee":{"type":"Identifier","start":35680,"end":35694,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":35695,"end":35764,"callee":{"type":"Identifier","start":35695,"end":35711,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":35712,"end":35738,"object":{"type":"MemberExpression","start":35712,"end":35734,"object":{"type":"Identifier","start":35712,"end":35716,"name":"item"},"property":{"type":"Identifier","start":35717,"end":35734,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":35735,"end":35738,"name":"ref"},"computed":false,"optional":false},{"type":"MemberExpression","start":35740,"end":35763,"object":{"type":"Identifier","start":35740,"end":35758,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35759,"end":35763,"name":"name"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":35780,"end":36027,"test":{"type":"MemberExpression","start":35784,"end":35819,"object":{"type":"Identifier","start":35784,"end":35802,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35803,"end":35819,"name":"queryConstraints"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":35821,"end":36027,"body":[{"type":"ExpressionStatement","start":35840,"end":35910,"expression":{"type":"AssignmentExpression","start":35840,"end":35909,"operator":"=","left":{"type":"MemberExpression","start":35840,"end":35871,"object":{"type":"Identifier","start":35840,"end":35854,"name":"queryContainer"},"property":{"type":"Identifier","start":35855,"end":35871,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":35874,"end":35909,"object":{"type":"Identifier","start":35874,"end":35892,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35893,"end":35909,"name":"queryConstraints"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":36209,"end":38315,"declarations":[{"type":"VariableDeclarator","start":36215,"end":38314,"id":{"type":"Identifier","start":36215,"end":36233,"name":"collectionListener"},"init":{"type":"CallExpression","start":36236,"end":38314,"callee":{"type":"MemberExpression","start":36236,"end":36294,"object":{"type":"CallExpression","start":36236,"end":36289,"callee":{"type":"MemberExpression","start":36236,"end":36267,"object":{"type":"ThisExpression","start":36236,"end":36240},"property":{"type":"Identifier","start":36241,"end":36267,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":36268,"end":36288,"object":{"type":"Identifier","start":36268,"end":36282,"name":"queryContainer"},"property":{"type":"Identifier","start":36283,"end":36288,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":36290,"end":36294,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":36709,"end":37527,"callee":{"type":"Identifier","start":36709,"end":36717,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":36718,"end":37526,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36719,"end":36724,"name":"items"}],"body":{"type":"BlockStatement","start":36729,"end":37526,"body":[{"type":"IfStatement","start":36748,"end":36847,"test":{"type":"UnaryExpression","start":36752,"end":36786,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":36753,"end":36786,"object":{"type":"Identifier","start":36753,"end":36771,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36772,"end":36786,"name":"subCollections"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":36788,"end":36847,"body":[{"type":"ReturnStatement","start":36811,"end":36828,"argument":{"type":"CallExpression","start":36818,"end":36827,"callee":{"type":"Identifier","start":36818,"end":36820,"name":"of"},"arguments":[{"type":"Identifier","start":36821,"end":36826,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":36865,"end":36889,"declarations":[{"type":"VariableDeclarator","start":36871,"end":36888,"id":{"type":"Identifier","start":36871,"end":36883,"name":"docListeners"},"init":{"type":"ArrayExpression","start":36886,"end":36888,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":36907,"end":36944,"expression":{"type":"AssignmentExpression","start":36907,"end":36943,"operator":"=","left":{"type":"Identifier","start":36907,"end":36912,"name":"items"},"right":{"type":"CallExpression","start":36915,"end":36943,"callee":{"type":"MemberExpression","start":36915,"end":36927,"object":{"type":"Identifier","start":36915,"end":36920,"name":"items"},"property":{"type":"Identifier","start":36921,"end":36927,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36928,"end":36942,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":36928,"end":36929,"name":"d"}],"body":{"type":"BinaryExpression","start":36933,"end":36942,"left":{"type":"Identifier","start":36933,"end":36934,"name":"d"},"operator":"!=","right":{"type":"Literal","start":36938,"end":36942,"value":null,"raw":"null"}}}],"optional":false}}},{"type":"ExpressionStatement","start":36992,"end":37230,"expression":{"type":"CallExpression","start":36992,"end":37229,"callee":{"type":"MemberExpression","start":36992,"end":37005,"object":{"type":"Identifier","start":36992,"end":36997,"name":"items"},"property":{"type":"Identifier","start":36998,"end":37005,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":37006,"end":37228,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37007,"end":37014,"name":"subItem"}],"body":{"type":"BlockStatement","start":37019,"end":37228,"body":[{"type":"VariableDeclaration","start":37042,"end":37146,"declarations":[{"type":"VariableDeclarator","start":37048,"end":37145,"id":{"type":"Identifier","start":37048,"end":37069,"name":"subDocAndCollections$"},"init":{"type":"CallExpression","start":37072,"end":37145,"callee":{"type":"MemberExpression","start":37072,"end":37101,"object":{"type":"ThisExpression","start":37072,"end":37076},"property":{"type":"Identifier","start":37077,"end":37101,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":37102,"end":37109,"name":"subItem"},{"type":"MemberExpression","start":37111,"end":37144,"object":{"type":"Identifier","start":37111,"end":37129,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37130,"end":37144,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":37168,"end":37209,"expression":{"type":"CallExpression","start":37168,"end":37208,"callee":{"type":"MemberExpression","start":37168,"end":37185,"object":{"type":"Identifier","start":37168,"end":37180,"name":"docListeners"},"property":{"type":"Identifier","start":37181,"end":37185,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":37186,"end":37207,"name":"subDocAndCollections$"}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":37248,"end":37334,"test":{"type":"BinaryExpression","start":37252,"end":37276,"left":{"type":"MemberExpression","start":37252,"end":37271,"object":{"type":"Identifier","start":37252,"end":37264,"name":"docListeners"},"property":{"type":"Identifier","start":37265,"end":37271,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":37275,"end":37276,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":37278,"end":37334,"body":[{"type":"ReturnStatement","start":37301,"end":37315,"argument":{"type":"CallExpression","start":37308,"end":37314,"callee":{"type":"Identifier","start":37308,"end":37310,"name":"of"},"arguments":[{"type":"ArrayExpression","start":37311,"end":37313,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":37402,"end":37511,"argument":{"type":"CallExpression","start":37409,"end":37510,"callee":{"type":"MemberExpression","start":37409,"end":37441,"object":{"type":"CallExpression","start":37409,"end":37436,"callee":{"type":"Identifier","start":37409,"end":37422,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":37423,"end":37435,"name":"docListeners"}],"optional":false},"property":{"type":"Identifier","start":37437,"end":37441,"name":"pipe"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":37880,"end":38313,"callee":{"type":"Identifier","start":37880,"end":37883,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37884,"end":38312,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37885,"end":37890,"name":"items"}],"body":{"type":"BlockStatement","start":37895,"end":38312,"body":[{"type":"VariableDeclaration","start":37914,"end":38014,"declarations":[{"type":"VariableDeclarator","start":37920,"end":38013,"id":{"type":"Identifier","start":37920,"end":37925,"name":"docId"},"init":{"type":"ConditionalExpression","start":37928,"end":38013,"test":{"type":"BinaryExpression","start":37928,"end":37966,"left":{"type":"MemberExpression","start":37928,"end":37952,"object":{"type":"Identifier","start":37928,"end":37946,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37947,"end":37952,"name":"docId"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":37957,"end":37966,"name":"undefined"}},"consequent":{"type":"MemberExpression","start":37969,"end":37993,"object":{"type":"Identifier","start":37969,"end":37987,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37988,"end":37993,"name":"docId"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":37996,"end":38013,"object":{"type":"ThisExpression","start":37996,"end":38000},"property":{"type":"Identifier","start":38001,"end":38013,"name":"defaultDocId"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":38032,"end":38297,"test":{"type":"LogicalExpression","start":38036,"end":38097,"left":{"type":"BinaryExpression","start":38036,"end":38054,"left":{"type":"MemberExpression","start":38036,"end":38048,"object":{"type":"Identifier","start":38036,"end":38041,"name":"items"},"property":{"type":"Identifier","start":38042,"end":38048,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":38053,"end":38054,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":38058,"end":38097,"left":{"type":"MemberExpression","start":38058,"end":38087,"object":{"type":"MemberExpression","start":38058,"end":38084,"object":{"type":"MemberExpression","start":38058,"end":38066,"object":{"type":"Identifier","start":38058,"end":38063,"name":"items"},"property":{"type":"Literal","start":38064,"end":38065,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":38067,"end":38084,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":38085,"end":38087,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":38092,"end":38097,"name":"docId"}}},"consequent":{"type":"BlockStatement","start":38099,"end":38188,"body":[{"type":"ReturnStatement","start":38122,"end":38169,"argument":{"type":"ObjectExpression","start":38129,"end":38168,"properties":[{"type":"Property","start":38131,"end":38166,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":38132,"end":38155,"object":{"type":"Identifier","start":38132,"end":38150,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38151,"end":38155,"name":"name"},"computed":false,"optional":false},"value":{"type":"MemberExpression","start":38158,"end":38166,"object":{"type":"Identifier","start":38158,"end":38163,"name":"items"},"property":{"type":"Literal","start":38164,"end":38165,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":38211,"end":38297,"body":[{"type":"ReturnStatement","start":38234,"end":38278,"argument":{"type":"ObjectExpression","start":38241,"end":38277,"properties":[{"type":"Property","start":38243,"end":38275,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":38244,"end":38267,"object":{"type":"Identifier","start":38244,"end":38262,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38263,"end":38267,"name":"name"},"computed":false,"optional":false},"value":{"type":"Identifier","start":38270,"end":38275,"name":"items"},"kind":"init"}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":38329,"end":38374,"expression":{"type":"CallExpression","start":38329,"end":38373,"callee":{"type":"MemberExpression","start":38329,"end":38353,"object":{"type":"Identifier","start":38329,"end":38348,"name":"collectionListeners"},"property":{"type":"Identifier","start":38349,"end":38353,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38354,"end":38372,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":38483,"end":39011,"argument":{"type":"CallExpression","start":38490,"end":39010,"callee":{"type":"MemberExpression","start":38490,"end":38529,"object":{"type":"CallExpression","start":38490,"end":38524,"callee":{"type":"Identifier","start":38490,"end":38503,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":38504,"end":38523,"name":"collectionListeners"}],"optional":false},"property":{"type":"Identifier","start":38525,"end":38529,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38530,"end":38914,"callee":{"type":"Identifier","start":38530,"end":38533,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38534,"end":38913,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38535,"end":38550,"name":"collectionDatas"}],"body":{"type":"BlockStatement","start":38555,"end":38913,"body":[{"type":"VariableDeclaration","start":38613,"end":38633,"declarations":[{"type":"VariableDeclarator","start":38619,"end":38632,"id":{"type":"Identifier","start":38619,"end":38627,"name":"datasMap"},"init":{"type":"ObjectExpression","start":38630,"end":38632,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":38647,"end":38872,"expression":{"type":"CallExpression","start":38647,"end":38871,"callee":{"type":"MemberExpression","start":38647,"end":38670,"object":{"type":"Identifier","start":38647,"end":38662,"name":"collectionDatas"},"property":{"type":"Identifier","start":38663,"end":38670,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":38671,"end":38870,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38672,"end":38686,"name":"collectionData"}],"body":{"type":"BlockStatement","start":38691,"end":38870,"body":[{"type":"ForOfStatement","start":38710,"end":38855,"await":false,"left":{"type":"VariableDeclaration","start":38715,"end":38744,"declarations":[{"type":"VariableDeclarator","start":38721,"end":38744,"id":{"type":"ArrayPattern","start":38721,"end":38744,"elements":[{"type":"Identifier","start":38722,"end":38736,"name":"collectionName"},{"type":"Identifier","start":38738,"end":38743,"name":"items"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":38748,"end":38778,"callee":{"type":"MemberExpression","start":38748,"end":38762,"object":{"type":"Identifier","start":38748,"end":38754,"name":"Object"},"property":{"type":"Identifier","start":38755,"end":38762,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38763,"end":38777,"name":"collectionData"}],"optional":false},"body":{"type":"BlockStatement","start":38780,"end":38855,"body":[{"type":"ExpressionStatement","start":38803,"end":38836,"expression":{"type":"AssignmentExpression","start":38803,"end":38835,"operator":"=","left":{"type":"MemberExpression","start":38803,"end":38827,"object":{"type":"Identifier","start":38803,"end":38811,"name":"datasMap"},"property":{"type":"Identifier","start":38812,"end":38826,"name":"collectionName"},"computed":true,"optional":false},"right":{"type":"Identifier","start":38830,"end":38835,"name":"items"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":38886,"end":38902,"argument":{"type":"Identifier","start":38893,"end":38901,"name":"datasMap"}}]}}],"optional":false},{"type":"CallExpression","start":38916,"end":39009,"callee":{"type":"Identifier","start":38916,"end":38919,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38920,"end":39008,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38921,"end":38925,"name":"data"}],"body":{"type":"BlockStatement","start":38930,"end":39008,"body":[{"type":"ReturnStatement","start":38945,"end":38997,"argument":{"type":"CallExpression","start":38952,"end":38996,"callee":{"type":"MemberExpression","start":38952,"end":38965,"object":{"type":"Identifier","start":38952,"end":38958,"name":"Object"},"property":{"type":"Identifier","start":38959,"end":38965,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38966,"end":38989,"callee":{"type":"MemberExpression","start":38966,"end":38979,"object":{"type":"Identifier","start":38966,"end":38972,"name":"Object"},"property":{"type":"Identifier","start":38973,"end":38979,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":38980,"end":38982,"properties":[]},{"type":"Identifier","start":38984,"end":38988,"name":"item"}],"optional":false},{"type":"Identifier","start":38991,"end":38995,"name":"data"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":39133,"end":39665,"static":false,"computed":false,"key":{"type":"Identifier","start":39133,"end":39165,"name":"listenForDocDeepRecursiveHelper$"},"kind":"method","value":{"type":"FunctionExpression","start":39165,"end":39665,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39166,"end":39172,"name":"docRef"},{"type":"AssignmentPattern","start":39174,"end":39199,"left":{"type":"Identifier","start":39174,"end":39194,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":39197,"end":39199,"elements":[]}},{"type":"AssignmentPattern","start":39201,"end":39249,"left":{"type":"Identifier","start":39201,"end":39217,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":39220,"end":39249,"object":{"type":"Identifier","start":39220,"end":39237,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":39238,"end":39249,"name":"RETURN_NULL"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":39251,"end":39665,"body":[{"type":"ReturnStatement","start":39297,"end":39658,"argument":{"type":"CallExpression","start":39304,"end":39657,"callee":{"type":"MemberExpression","start":39304,"end":39359,"object":{"type":"CallExpression","start":39304,"end":39354,"callee":{"type":"MemberExpression","start":39304,"end":39328,"object":{"type":"ThisExpression","start":39304,"end":39308},"property":{"type":"Identifier","start":39309,"end":39328,"name":"listenForDocSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39329,"end":39335,"name":"docRef"},{"type":"Identifier","start":39337,"end":39353,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":39355,"end":39359,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":39360,"end":39656,"callee":{"type":"Identifier","start":39360,"end":39368,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":39369,"end":39655,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39370,"end":39374,"name":"item"}],"body":{"type":"BlockStatement","start":39379,"end":39655,"body":[{"type":"IfStatement","start":39394,"end":39463,"test":{"type":"BinaryExpression","start":39398,"end":39411,"left":{"type":"Identifier","start":39398,"end":39402,"name":"item"},"operator":"===","right":{"type":"Literal","start":39407,"end":39411,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":39413,"end":39463,"body":[{"type":"ReturnStatement","start":39432,"end":39448,"argument":{"type":"CallExpression","start":39439,"end":39447,"callee":{"type":"Identifier","start":39439,"end":39441,"name":"of"},"arguments":[{"type":"Identifier","start":39442,"end":39446,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":39477,"end":39565,"test":{"type":"BinaryExpression","start":39481,"end":39513,"left":{"type":"MemberExpression","start":39481,"end":39508,"object":{"type":"Identifier","start":39481,"end":39501,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":39502,"end":39508,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":39512,"end":39513,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":39515,"end":39565,"body":[{"type":"ReturnStatement","start":39534,"end":39550,"argument":{"type":"CallExpression","start":39541,"end":39549,"callee":{"type":"Identifier","start":39541,"end":39543,"name":"of"},"arguments":[{"type":"Identifier","start":39544,"end":39548,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":39579,"end":39644,"argument":{"type":"CallExpression","start":39586,"end":39643,"callee":{"type":"MemberExpression","start":39586,"end":39615,"object":{"type":"ThisExpression","start":39586,"end":39590},"property":{"type":"Identifier","start":39591,"end":39615,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39616,"end":39620,"name":"item"},{"type":"Identifier","start":39622,"end":39642,"name":"subCollectionQueries"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":40356,"end":42299,"static":false,"computed":false,"key":{"type":"Identifier","start":40356,"end":40366,"name":"addSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":40366,"end":42299,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":40367,"end":40371,"name":"data"},{"type":"Identifier","start":40373,"end":40386,"name":"collectionRef"},{"type":"AssignmentPattern","start":40388,"end":40405,"left":{"type":"Identifier","start":40388,"end":40398,"name":"isAddDates"},"right":{"type":"Literal","start":40401,"end":40405,"value":true,"raw":"true"}},{"type":"Identifier","start":40407,"end":40409,"name":"id"}],"body":{"type":"BlockStatement","start":40411,"end":42299,"body":[{"type":"VariableDeclaration","start":40482,"end":40491,"declarations":[{"type":"VariableDeclarator","start":40486,"end":40490,"id":{"type":"Identifier","start":40486,"end":40490,"name":"res$"},"init":null}],"kind":"let"},{"type":"IfStatement","start":40501,"end":40678,"test":{"type":"Identifier","start":40505,"end":40515,"name":"isAddDates"},"consequent":{"type":"BlockStatement","start":40517,"end":40678,"body":[{"type":"VariableDeclaration","start":40532,"end":40556,"declarations":[{"type":"VariableDeclarator","start":40538,"end":40555,"id":{"type":"Identifier","start":40538,"end":40542,"name":"date"},"init":{"type":"NewExpression","start":40545,"end":40555,"callee":{"type":"Identifier","start":40549,"end":40553,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":40570,"end":40611,"expression":{"type":"AssignmentExpression","start":40570,"end":40610,"operator":"=","left":{"type":"Identifier","start":40570,"end":40574,"name":"data"},"right":{"type":"CallExpression","start":40577,"end":40610,"callee":{"type":"Identifier","start":40577,"end":40591,"name":"addCreatedDate"},"arguments":[{"type":"Identifier","start":40592,"end":40596,"name":"data"},{"type":"Literal","start":40598,"end":40603,"value":false,"raw":"false"},{"type":"Identifier","start":40605,"end":40609,"name":"date"}],"optional":false}}},{"type":"ExpressionStatement","start":40625,"end":40667,"expression":{"type":"AssignmentExpression","start":40625,"end":40666,"operator":"=","left":{"type":"Identifier","start":40625,"end":40629,"name":"data"},"right":{"type":"CallExpression","start":40632,"end":40666,"callee":{"type":"Identifier","start":40632,"end":40647,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":40648,"end":40652,"name":"data"},{"type":"Literal","start":40654,"end":40659,"value":false,"raw":"false"},{"type":"Identifier","start":40661,"end":40665,"name":"date"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":40688,"end":40914,"test":{"type":"BinaryExpression","start":40692,"end":40708,"left":{"type":"Identifier","start":40692,"end":40694,"name":"id"},"operator":"!==","right":{"type":"Identifier","start":40699,"end":40708,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":40710,"end":40833,"body":[{"type":"VariableDeclaration","start":40725,"end":40775,"declarations":[{"type":"VariableDeclarator","start":40731,"end":40774,"id":{"type":"Identifier","start":40731,"end":40737,"name":"docRef"},"init":{"type":"CallExpression","start":40740,"end":40774,"callee":{"type":"Identifier","start":40740,"end":40755,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":40756,"end":40769,"name":"collectionRef"},{"type":"Identifier","start":40771,"end":40773,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":40789,"end":40822,"expression":{"type":"AssignmentExpression","start":40789,"end":40821,"operator":"=","left":{"type":"Identifier","start":40789,"end":40793,"name":"res$"},"right":{"type":"CallExpression","start":40796,"end":40821,"callee":{"type":"MemberExpression","start":40796,"end":40807,"object":{"type":"MemberExpression","start":40796,"end":40803,"object":{"type":"ThisExpression","start":40796,"end":40800},"property":{"type":"Identifier","start":40801,"end":40803,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40804,"end":40807,"name":"set"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40808,"end":40814,"name":"docRef"},{"type":"Identifier","start":40816,"end":40820,"name":"data"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":40848,"end":40914,"body":[{"type":"ExpressionStatement","start":40863,"end":40903,"expression":{"type":"AssignmentExpression","start":40863,"end":40902,"operator":"=","left":{"type":"Identifier","start":40863,"end":40867,"name":"res$"},"right":{"type":"CallExpression","start":40870,"end":40902,"callee":{"type":"MemberExpression","start":40870,"end":40881,"object":{"type":"MemberExpression","start":40870,"end":40877,"object":{"type":"ThisExpression","start":40870,"end":40874},"property":{"type":"Identifier","start":40875,"end":40877,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40878,"end":40881,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40882,"end":40895,"name":"collectionRef"},{"type":"Identifier","start":40897,"end":40901,"name":"data"}],"optional":false}}}]}},{"type":"ExpressionStatement","start":41164,"end":42256,"expression":{"type":"AssignmentExpression","start":41164,"end":42255,"operator":"=","left":{"type":"Identifier","start":41164,"end":41168,"name":"res$"},"right":{"type":"CallExpression","start":41171,"end":42255,"callee":{"type":"MemberExpression","start":41171,"end":41180,"object":{"type":"Identifier","start":41171,"end":41175,"name":"res$"},"property":{"type":"Identifier","start":41176,"end":41180,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41356,"end":42254,"callee":{"type":"Identifier","start":41356,"end":41359,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":41360,"end":42253,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41361,"end":41364,"name":"ref"}],"body":{"type":"BlockStatement","start":41369,"end":42253,"body":[{"type":"IfStatement","start":41384,"end":42242,"test":{"type":"LogicalExpression","start":41388,"end":41411,"left":{"type":"BinaryExpression","start":41388,"end":41404,"left":{"type":"Identifier","start":41388,"end":41390,"name":"id"},"operator":"===","right":{"type":"Identifier","start":41395,"end":41404,"name":"undefined"}},"operator":"&&","right":{"type":"Identifier","start":41408,"end":41411,"name":"ref"}},"consequent":{"type":"BlockStatement","start":41413,"end":41743,"body":[{"type":"VariableDeclaration","start":41432,"end":41454,"declarations":[{"type":"VariableDeclarator","start":41438,"end":41453,"id":{"type":"Identifier","start":41438,"end":41442,"name":"path"},"init":{"type":"MemberExpression","start":41445,"end":41453,"object":{"type":"Identifier","start":41445,"end":41448,"name":"ref"},"property":{"type":"Identifier","start":41449,"end":41453,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":41472,"end":41641,"declarations":[{"type":"VariableDeclarator","start":41478,"end":41640,"id":{"type":"Identifier","start":41478,"end":41495,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41498,"end":41640,"properties":[{"type":"Property","start":41521,"end":41531,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41521,"end":41523,"name":"id"},"value":{"type":"MemberExpression","start":41525,"end":41531,"object":{"type":"Identifier","start":41525,"end":41528,"name":"ref"},"property":{"type":"Identifier","start":41529,"end":41531,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":41554,"end":41558,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41554,"end":41558,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41554,"end":41558,"name":"path"}},{"type":"Property","start":41581,"end":41584,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41581,"end":41584,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41581,"end":41584,"name":"ref"}},{"type":"Property","start":41607,"end":41621,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41607,"end":41615,"name":"isExists"},"value":{"type":"Literal","start":41617,"end":41621,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41659,"end":41728,"argument":{"type":"CallExpression","start":41666,"end":41727,"callee":{"type":"MemberExpression","start":41666,"end":41679,"object":{"type":"Identifier","start":41666,"end":41672,"name":"Object"},"property":{"type":"Identifier","start":41673,"end":41679,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41680,"end":41703,"callee":{"type":"MemberExpression","start":41680,"end":41693,"object":{"type":"Identifier","start":41680,"end":41686,"name":"Object"},"property":{"type":"Identifier","start":41687,"end":41693,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":41694,"end":41696,"properties":[]},{"type":"Identifier","start":41698,"end":41702,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":41705,"end":41726,"properties":[{"type":"Property","start":41707,"end":41724,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41707,"end":41724,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41707,"end":41724,"name":"firestoreMetadata"}}]}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":41762,"end":42242,"body":[{"type":"VariableDeclaration","start":41850,"end":41893,"declarations":[{"type":"VariableDeclarator","start":41856,"end":41892,"id":{"type":"Identifier","start":41856,"end":41860,"name":"path"},"init":{"type":"BinaryExpression","start":41863,"end":41892,"left":{"type":"BinaryExpression","start":41863,"end":41887,"left":{"type":"MemberExpression","start":41863,"end":41881,"object":{"type":"Identifier","start":41863,"end":41876,"name":"collectionRef"},"property":{"type":"Identifier","start":41877,"end":41881,"name":"path"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":41884,"end":41887,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":41890,"end":41892,"name":"id"}}}],"kind":"const"},{"type":"ExpressionStatement","start":41911,"end":41957,"expression":{"type":"AssignmentExpression","start":41911,"end":41956,"operator":"=","left":{"type":"Identifier","start":41911,"end":41914,"name":"ref"},"right":{"type":"CallExpression","start":41917,"end":41956,"callee":{"type":"Identifier","start":41917,"end":41931,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":41932,"end":41936,"name":"path"},{"type":"MemberExpression","start":41938,"end":41955,"object":{"type":"MemberExpression","start":41938,"end":41945,"object":{"type":"ThisExpression","start":41938,"end":41942},"property":{"type":"Identifier","start":41943,"end":41945,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":41946,"end":41955,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":41975,"end":42140,"declarations":[{"type":"VariableDeclarator","start":41981,"end":42139,"id":{"type":"Identifier","start":41981,"end":41998,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":42001,"end":42139,"properties":[{"type":"Property","start":42024,"end":42030,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":42024,"end":42026,"name":"id"},"value":{"type":"Identifier","start":42028,"end":42030,"name":"id"},"kind":"init"},{"type":"Property","start":42053,"end":42056,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":42053,"end":42056,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":42053,"end":42056,"name":"ref"}},{"type":"Property","start":42079,"end":42083,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":42079,"end":42083,"name":"path"},"kind":"init","value":{"type":"Identifier","start":42079,"end":42083,"name":"path"}},{"type":"Property","start":42106,"end":42120,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":42106,"end":42114,"name":"isExists"},"value":{"type":"Literal","start":42116,"end":42120,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":42158,"end":42227,"argument":{"type":"CallExpression","start":42165,"end":42226,"callee":{"type":"MemberExpression","start":42165,"end":42178,"object":{"type":"Identifier","start":42165,"end":42171,"name":"Object"},"property":{"type":"Identifier","start":42172,"end":42178,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":42179,"end":42202,"callee":{"type":"MemberExpression","start":42179,"end":42192,"object":{"type":"Identifier","start":42179,"end":42185,"name":"Object"},"property":{"type":"Identifier","start":42186,"end":42192,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":42193,"end":42195,"properties":[]},{"type":"Identifier","start":42197,"end":42201,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":42204,"end":42225,"properties":[{"type":"Property","start":42206,"end":42223,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":42206,"end":42223,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":42206,"end":42223,"name":"firestoreMetadata"}}]}],"optional":false}}]}}]}}],"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":42266,"end":42292,"argument":{"type":"CallExpression","start":42273,"end":42291,"callee":{"type":"MemberExpression","start":42273,"end":42282,"object":{"type":"Identifier","start":42273,"end":42277,"name":"res$"},"property":{"type":"Identifier","start":42278,"end":42282,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":42283,"end":42290,"callee":{"type":"Identifier","start":42283,"end":42287,"name":"take"},"arguments":[{"type":"Literal","start":42288,"end":42289,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":42381,"end":42584,"static":false,"computed":false,"key":{"type":"Identifier","start":42381,"end":42394,"name":"updateSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":42394,"end":42584,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42395,"end":42399,"name":"data"},{"type":"Identifier","start":42401,"end":42407,"name":"docRef"},{"type":"AssignmentPattern","start":42409,"end":42433,"left":{"type":"Identifier","start":42409,"end":42426,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42429,"end":42433,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":42435,"end":42584,"body":[{"type":"IfStatement","start":42446,"end":42531,"test":{"type":"Identifier","start":42450,"end":42467,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42469,"end":42531,"body":[{"type":"ExpressionStatement","start":42484,"end":42520,"expression":{"type":"AssignmentExpression","start":42484,"end":42519,"operator":"=","left":{"type":"Identifier","start":42484,"end":42488,"name":"data"},"right":{"type":"CallExpression","start":42491,"end":42519,"callee":{"type":"Identifier","start":42491,"end":42506,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42507,"end":42511,"name":"data"},{"type":"Literal","start":42513,"end":42518,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":42541,"end":42577,"argument":{"type":"CallExpression","start":42548,"end":42576,"callee":{"type":"MemberExpression","start":42548,"end":42562,"object":{"type":"MemberExpression","start":42548,"end":42555,"object":{"type":"ThisExpression","start":42548,"end":42552},"property":{"type":"Identifier","start":42553,"end":42555,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42556,"end":42562,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42563,"end":42569,"name":"docRef"},{"type":"Identifier","start":42571,"end":42575,"name":"data"}],"optional":false}}]}}},{"type":"MethodDefinition","start":42661,"end":44379,"static":false,"computed":false,"key":{"type":"Identifier","start":42661,"end":42684,"name":"updateDeepToBatchHelper"},"kind":"method","value":{"type":"FunctionExpression","start":42684,"end":44379,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42685,"end":42689,"name":"data"},{"type":"Identifier","start":42691,"end":42697,"name":"docRef"},{"type":"AssignmentPattern","start":42699,"end":42724,"left":{"type":"Identifier","start":42699,"end":42719,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":42722,"end":42724,"elements":[]}},{"type":"AssignmentPattern","start":42726,"end":42750,"left":{"type":"Identifier","start":42726,"end":42743,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42746,"end":42750,"value":true,"raw":"true"}},{"type":"Identifier","start":42752,"end":42757,"name":"batch"}],"body":{"type":"BlockStatement","start":42759,"end":44379,"body":[{"type":"VariableDeclaration","start":42770,"end":42781,"declarations":[{"type":"VariableDeclarator","start":42774,"end":42776,"id":{"type":"Identifier","start":42774,"end":42776,"name":"_a"},"init":null},{"type":"VariableDeclarator","start":42778,"end":42780,"id":{"type":"Identifier","start":42778,"end":42780,"name":"_b"},"init":null}],"kind":"var"},{"type":"IfStatement","start":42791,"end":42880,"test":{"type":"BinaryExpression","start":42795,"end":42814,"left":{"type":"Identifier","start":42795,"end":42800,"name":"batch"},"operator":"===","right":{"type":"Identifier","start":42805,"end":42814,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":42816,"end":42880,"body":[{"type":"ExpressionStatement","start":42831,"end":42869,"expression":{"type":"AssignmentExpression","start":42831,"end":42868,"operator":"=","left":{"type":"Identifier","start":42831,"end":42836,"name":"batch"},"right":{"type":"CallExpression","start":42839,"end":42868,"callee":{"type":"Identifier","start":42839,"end":42849,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":42850,"end":42867,"object":{"type":"MemberExpression","start":42850,"end":42857,"object":{"type":"ThisExpression","start":42850,"end":42854},"property":{"type":"Identifier","start":42855,"end":42857,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42858,"end":42867,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":42890,"end":42975,"test":{"type":"Identifier","start":42894,"end":42911,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42913,"end":42975,"body":[{"type":"ExpressionStatement","start":42928,"end":42964,"expression":{"type":"AssignmentExpression","start":42928,"end":42963,"operator":"=","left":{"type":"Identifier","start":42928,"end":42932,"name":"data"},"right":{"type":"CallExpression","start":42935,"end":42963,"callee":{"type":"Identifier","start":42935,"end":42950,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42951,"end":42955,"name":"data"},{"type":"Literal","start":42957,"end":42962,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":42985,"end":43073,"declarations":[{"type":"VariableDeclarator","start":42991,"end":43072,"id":{"type":"Identifier","start":42991,"end":42996,"name":"split"},"init":{"type":"CallExpression","start":42999,"end":43072,"callee":{"type":"MemberExpression","start":42999,"end":43044,"object":{"type":"ThisExpression","start":42999,"end":43003},"property":{"type":"Identifier","start":43004,"end":43044,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43045,"end":43049,"name":"data"},{"type":"Identifier","start":43051,"end":43071,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43083,"end":43119,"declarations":[{"type":"VariableDeclarator","start":43089,"end":43118,"id":{"type":"Identifier","start":43089,"end":43099,"name":"currentDoc"},"init":{"type":"MemberExpression","start":43102,"end":43118,"object":{"type":"Identifier","start":43102,"end":43107,"name":"split"},"property":{"type":"Identifier","start":43108,"end":43118,"name":"currentDoc"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43129,"end":43173,"declarations":[{"type":"VariableDeclarator","start":43135,"end":43172,"id":{"type":"Identifier","start":43135,"end":43149,"name":"subCollections"},"init":{"type":"MemberExpression","start":43152,"end":43172,"object":{"type":"Identifier","start":43152,"end":43157,"name":"split"},"property":{"type":"Identifier","start":43158,"end":43172,"name":"subCollections"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":43236,"end":43269,"expression":{"type":"CallExpression","start":43236,"end":43268,"callee":{"type":"MemberExpression","start":43236,"end":43248,"object":{"type":"Identifier","start":43236,"end":43241,"name":"batch"},"property":{"type":"Identifier","start":43242,"end":43248,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43249,"end":43255,"name":"docRef"},{"type":"Identifier","start":43257,"end":43267,"name":"currentDoc"}],"optional":false}},{"type":"ForOfStatement","start":43279,"end":44349,"await":false,"left":{"type":"VariableDeclaration","start":43284,"end":43327,"declarations":[{"type":"VariableDeclarator","start":43290,"end":43327,"id":{"type":"ArrayPattern","start":43290,"end":43327,"elements":[{"type":"Identifier","start":43291,"end":43307,"name":"subCollectionKey"},{"type":"Identifier","start":43309,"end":43326,"name":"subDocUpdateValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":43331,"end":43361,"callee":{"type":"MemberExpression","start":43331,"end":43345,"object":{"type":"Identifier","start":43331,"end":43337,"name":"Object"},"property":{"type":"Identifier","start":43338,"end":43345,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43346,"end":43360,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":43363,"end":44349,"body":[{"type":"VariableDeclaration","start":43378,"end":43406,"declarations":[{"type":"VariableDeclarator","start":43382,"end":43405,"id":{"type":"Identifier","start":43382,"end":43405,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":43460,"end":43473,"declarations":[{"type":"VariableDeclarator","start":43464,"end":43472,"id":{"type":"Identifier","start":43464,"end":43472,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":43487,"end":43861,"test":{"type":"Identifier","start":43491,"end":43511,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":43513,"end":43861,"body":[{"type":"ExpressionStatement","start":43532,"end":43692,"expression":{"type":"AssignmentExpression","start":43532,"end":43691,"operator":"=","left":{"type":"Identifier","start":43532,"end":43555,"name":"subSubCollectionWriters"},"right":{"type":"ConditionalExpression","start":43558,"end":43691,"test":{"type":"LogicalExpression","start":43558,"end":43662,"left":{"type":"BinaryExpression","start":43558,"end":43645,"left":{"type":"AssignmentExpression","start":43559,"end":43635,"operator":"=","left":{"type":"Identifier","start":43559,"end":43561,"name":"_a"},"right":{"type":"CallExpression","start":43564,"end":43635,"callee":{"type":"MemberExpression","start":43564,"end":43589,"object":{"type":"Identifier","start":43564,"end":43584,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43585,"end":43589,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43590,"end":43634,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43590,"end":43597,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43601,"end":43634,"left":{"type":"MemberExpression","start":43601,"end":43613,"object":{"type":"Identifier","start":43601,"end":43608,"name":"subColl"},"property":{"type":"Identifier","start":43609,"end":43613,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43618,"end":43634,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":43641,"end":43645,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":43649,"end":43662,"left":{"type":"Identifier","start":43649,"end":43651,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":43656,"end":43662,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43661,"end":43662,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":43665,"end":43671,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43670,"end":43671,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":43674,"end":43691,"object":{"type":"Identifier","start":43674,"end":43676,"name":"_a"},"property":{"type":"Identifier","start":43677,"end":43691,"name":"subCollections"},"computed":false,"optional":false}}}},{"type":"ExpressionStatement","start":43710,"end":43846,"expression":{"type":"AssignmentExpression","start":43710,"end":43845,"operator":"=","left":{"type":"Identifier","start":43710,"end":43718,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43721,"end":43845,"test":{"type":"LogicalExpression","start":43721,"end":43825,"left":{"type":"BinaryExpression","start":43721,"end":43808,"left":{"type":"AssignmentExpression","start":43722,"end":43798,"operator":"=","left":{"type":"Identifier","start":43722,"end":43724,"name":"_b"},"right":{"type":"CallExpression","start":43727,"end":43798,"callee":{"type":"MemberExpression","start":43727,"end":43752,"object":{"type":"Identifier","start":43727,"end":43747,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43748,"end":43752,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43753,"end":43797,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43753,"end":43760,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43764,"end":43797,"left":{"type":"MemberExpression","start":43764,"end":43776,"object":{"type":"Identifier","start":43764,"end":43771,"name":"subColl"},"property":{"type":"Identifier","start":43772,"end":43776,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43781,"end":43797,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":43804,"end":43808,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":43812,"end":43825,"left":{"type":"Identifier","start":43812,"end":43814,"name":"_b"},"operator":"===","right":{"type":"UnaryExpression","start":43819,"end":43825,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43824,"end":43825,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":43828,"end":43834,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43833,"end":43834,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":43837,"end":43845,"object":{"type":"Identifier","start":43837,"end":43839,"name":"_b"},"property":{"type":"Identifier","start":43840,"end":43845,"name":"docId"},"computed":false,"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":43875,"end":43940,"expression":{"type":"AssignmentExpression","start":43875,"end":43939,"operator":"=","left":{"type":"Identifier","start":43875,"end":43883,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43886,"end":43939,"test":{"type":"BinaryExpression","start":43886,"end":43908,"left":{"type":"Identifier","start":43886,"end":43894,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":43899,"end":43908,"name":"undefined"}},"consequent":{"type":"Identifier","start":43911,"end":43919,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":43922,"end":43939,"object":{"type":"ThisExpression","start":43922,"end":43926},"property":{"type":"Identifier","start":43927,"end":43939,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":44070,"end":44135,"declarations":[{"type":"VariableDeclarator","start":44076,"end":44134,"id":{"type":"Identifier","start":44076,"end":44089,"name":"subCollection"},"init":{"type":"CallExpression","start":44092,"end":44134,"callee":{"type":"Identifier","start":44092,"end":44108,"name":"getSubCollection"},"arguments":[{"type":"Identifier","start":44109,"end":44115,"name":"docRef"},{"type":"Identifier","start":44117,"end":44133,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":44149,"end":44207,"declarations":[{"type":"VariableDeclarator","start":44155,"end":44206,"id":{"type":"Identifier","start":44155,"end":44163,"name":"subDocFs"},"init":{"type":"CallExpression","start":44166,"end":44206,"callee":{"type":"Identifier","start":44166,"end":44181,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":44182,"end":44195,"name":"subCollection"},{"type":"Identifier","start":44197,"end":44205,"name":"subDocId"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":44221,"end":44338,"expression":{"type":"AssignmentExpression","start":44221,"end":44337,"operator":"=","left":{"type":"Identifier","start":44221,"end":44226,"name":"batch"},"right":{"type":"CallExpression","start":44229,"end":44337,"callee":{"type":"MemberExpression","start":44229,"end":44257,"object":{"type":"ThisExpression","start":44229,"end":44233},"property":{"type":"Identifier","start":44234,"end":44257,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":44258,"end":44275,"name":"subDocUpdateValue"},{"type":"Identifier","start":44277,"end":44285,"name":"subDocFs"},{"type":"Identifier","start":44287,"end":44310,"name":"subSubCollectionWriters"},{"type":"Identifier","start":44312,"end":44329,"name":"isAddModifiedDate"},{"type":"Identifier","start":44331,"end":44336,"name":"batch"}],"optional":false}}}]}},{"type":"ReturnStatement","start":44359,"end":44372,"argument":{"type":"Identifier","start":44366,"end":44371,"name":"batch"}}]}}},{"type":"MethodDefinition","start":44850,"end":47068,"static":false,"computed":false,"key":{"type":"Identifier","start":44850,"end":44887,"name":"getBatchFromTransferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":44887,"end":47068,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":44888,"end":44901,"name":"previousArray"},{"type":"Identifier","start":44903,"end":44915,"name":"currentArray"},{"type":"Identifier","start":44917,"end":44930,"name":"previousIndex"},{"type":"Identifier","start":44932,"end":44944,"name":"currentIndex"},{"type":"Identifier","start":44946,"end":44962,"name":"currentArrayName"},{"type":"Identifier","start":44964,"end":44995,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":44997,"end":45035,"left":{"type":"Identifier","start":44997,"end":45028,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":45031,"end":45035,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":45037,"end":45052,"left":{"type":"Identifier","start":45037,"end":45044,"name":"useCopy"},"right":{"type":"Literal","start":45047,"end":45052,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":45054,"end":47068,"body":[{"type":"VariableDeclaration","start":45065,"end":45087,"declarations":[{"type":"VariableDeclarator","start":45069,"end":45086,"id":{"type":"Identifier","start":45069,"end":45086,"name":"usedPreviousArray"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":45097,"end":45118,"declarations":[{"type":"VariableDeclarator","start":45101,"end":45117,"id":{"type":"Identifier","start":45101,"end":45117,"name":"usedCurrentArray"},"init":null}],"kind":"let"},{"type":"IfStatement","start":45128,"end":45406,"test":{"type":"Identifier","start":45132,"end":45139,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":45141,"end":45285,"body":[{"type":"ExpressionStatement","start":45156,"end":45209,"expression":{"type":"AssignmentExpression","start":45156,"end":45208,"operator":"=","left":{"type":"Identifier","start":45156,"end":45173,"name":"usedPreviousArray"},"right":{"type":"CallExpression","start":45176,"end":45208,"callee":{"type":"MemberExpression","start":45176,"end":45189,"object":{"type":"Identifier","start":45176,"end":45182,"name":"Object"},"property":{"type":"Identifier","start":45183,"end":45189,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":45190,"end":45192,"elements":[]},{"type":"Identifier","start":45194,"end":45207,"name":"previousArray"}],"optional":false}}},{"type":"ExpressionStatement","start":45223,"end":45274,"expression":{"type":"AssignmentExpression","start":45223,"end":45273,"operator":"=","left":{"type":"Identifier","start":45223,"end":45239,"name":"usedCurrentArray"},"right":{"type":"CallExpression","start":45242,"end":45273,"callee":{"type":"MemberExpression","start":45242,"end":45255,"object":{"type":"Identifier","start":45242,"end":45248,"name":"Object"},"property":{"type":"Identifier","start":45249,"end":45255,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":45256,"end":45258,"elements":[]},{"type":"Identifier","start":45260,"end":45272,"name":"currentArray"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":45300,"end":45406,"body":[{"type":"ExpressionStatement","start":45315,"end":45349,"expression":{"type":"AssignmentExpression","start":45315,"end":45348,"operator":"=","left":{"type":"Identifier","start":45315,"end":45332,"name":"usedPreviousArray"},"right":{"type":"Identifier","start":45335,"end":45348,"name":"previousArray"}}},{"type":"ExpressionStatement","start":45363,"end":45395,"expression":{"type":"AssignmentExpression","start":45363,"end":45394,"operator":"=","left":{"type":"Identifier","start":45363,"end":45379,"name":"usedCurrentArray"},"right":{"type":"Identifier","start":45382,"end":45394,"name":"currentArray"}}}]}},{"type":"ExpressionStatement","start":45416,"end":45500,"expression":{"type":"CallExpression","start":45416,"end":45499,"callee":{"type":"Identifier","start":45416,"end":45433,"name":"transferArrayItem"},"arguments":[{"type":"Identifier","start":45434,"end":45451,"name":"usedPreviousArray"},{"type":"Identifier","start":45453,"end":45469,"name":"usedCurrentArray"},{"type":"Identifier","start":45471,"end":45484,"name":"previousIndex"},{"type":"Identifier","start":45486,"end":45498,"name":"currentIndex"}],"optional":false}},{"type":"VariableDeclaration","start":45510,"end":45554,"declarations":[{"type":"VariableDeclarator","start":45516,"end":45553,"id":{"type":"Identifier","start":45516,"end":45521,"name":"batch"},"init":{"type":"CallExpression","start":45524,"end":45553,"callee":{"type":"Identifier","start":45524,"end":45534,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":45535,"end":45552,"object":{"type":"MemberExpression","start":45535,"end":45542,"object":{"type":"ThisExpression","start":45535,"end":45539},"property":{"type":"Identifier","start":45540,"end":45542,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45543,"end":45552,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45564,"end":46303,"test":{"type":"BinaryExpression","start":45568,"end":45613,"left":{"type":"Identifier","start":45568,"end":45599,"name":"additionalDataUpdateOnMovedItem"},"operator":"!==","right":{"type":"Identifier","start":45604,"end":45613,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":45615,"end":46303,"body":[{"type":"VariableDeclaration","start":45630,"end":45679,"declarations":[{"type":"VariableDeclarator","start":45636,"end":45678,"id":{"type":"Identifier","start":45636,"end":45645,"name":"movedItem"},"init":{"type":"MemberExpression","start":45648,"end":45678,"object":{"type":"Identifier","start":45648,"end":45664,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45665,"end":45677,"name":"currentIndex"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45693,"end":45746,"declarations":[{"type":"VariableDeclarator","start":45699,"end":45745,"id":{"type":"Identifier","start":45699,"end":45711,"name":"movedItemRef"},"init":{"type":"MemberExpression","start":45714,"end":45745,"object":{"type":"MemberExpression","start":45714,"end":45741,"object":{"type":"Identifier","start":45714,"end":45723,"name":"movedItem"},"property":{"type":"Identifier","start":45724,"end":45741,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45742,"end":45745,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45760,"end":45872,"declarations":[{"type":"VariableDeclarator","start":45766,"end":45871,"id":{"type":"Identifier","start":45766,"end":45770,"name":"data"},"init":{"type":"CallExpression","start":45773,"end":45871,"callee":{"type":"MemberExpression","start":45773,"end":45786,"object":{"type":"Identifier","start":45773,"end":45779,"name":"Object"},"property":{"type":"Identifier","start":45780,"end":45786,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":45787,"end":45837,"callee":{"type":"MemberExpression","start":45787,"end":45800,"object":{"type":"Identifier","start":45787,"end":45793,"name":"Object"},"property":{"type":"Identifier","start":45794,"end":45800,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":45801,"end":45803,"properties":[]},{"type":"Identifier","start":45805,"end":45836,"name":"additionalDataUpdateOnMovedItem"}],"optional":false},{"type":"ObjectExpression","start":45839,"end":45870,"properties":[{"type":"Property","start":45841,"end":45868,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45841,"end":45850,"name":"groupName"},"value":{"type":"Identifier","start":45852,"end":45868,"name":"currentArrayName"},"kind":"init"}]}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45886,"end":45971,"test":{"type":"UnaryExpression","start":45890,"end":45898,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45891,"end":45898,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45900,"end":45971,"body":[{"type":"ExpressionStatement","start":45919,"end":45956,"expression":{"type":"CallExpression","start":45919,"end":45955,"callee":{"type":"Identifier","start":45919,"end":45932,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":45933,"end":45942,"name":"movedItem"},{"type":"Identifier","start":45944,"end":45948,"name":"data"},{"type":"Literal","start":45950,"end":45954,"value":true,"raw":"true"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":45985,"end":46245,"test":{"type":"Identifier","start":45989,"end":46020,"name":"isUpdateModifiedDateOnMovedItem"},"consequent":{"type":"BlockStatement","start":46022,"end":46245,"body":[{"type":"VariableDeclaration","start":46041,"end":46065,"declarations":[{"type":"VariableDeclarator","start":46047,"end":46064,"id":{"type":"Identifier","start":46047,"end":46051,"name":"date"},"init":{"type":"NewExpression","start":46054,"end":46064,"callee":{"type":"Identifier","start":46058,"end":46062,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":46083,"end":46117,"expression":{"type":"CallExpression","start":46083,"end":46116,"callee":{"type":"Identifier","start":46083,"end":46098,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":46099,"end":46103,"name":"data"},{"type":"Literal","start":46105,"end":46109,"value":true,"raw":"true"},{"type":"Identifier","start":46111,"end":46115,"name":"date"}],"optional":false}},{"type":"IfStatement","start":46135,"end":46230,"test":{"type":"UnaryExpression","start":46139,"end":46147,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46140,"end":46147,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46149,"end":46230,"body":[{"type":"ExpressionStatement","start":46172,"end":46211,"expression":{"type":"CallExpression","start":46172,"end":46210,"callee":{"type":"Identifier","start":46172,"end":46187,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":46188,"end":46197,"name":"movedItem"},{"type":"Literal","start":46199,"end":46203,"value":true,"raw":"true"},{"type":"Identifier","start":46205,"end":46209,"name":"date"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":46259,"end":46292,"expression":{"type":"CallExpression","start":46259,"end":46291,"callee":{"type":"MemberExpression","start":46259,"end":46271,"object":{"type":"Identifier","start":46259,"end":46264,"name":"batch"},"property":{"type":"Identifier","start":46265,"end":46271,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46272,"end":46284,"name":"movedItemRef"},{"type":"Identifier","start":46286,"end":46290,"name":"data"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":46313,"end":46384,"declarations":[{"type":"VariableDeclarator","start":46319,"end":46383,"id":{"type":"Identifier","start":46319,"end":46344,"name":"currentArraySliceToUpdate"},"init":{"type":"CallExpression","start":46347,"end":46383,"callee":{"type":"MemberExpression","start":46347,"end":46369,"object":{"type":"Identifier","start":46347,"end":46363,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":46364,"end":46369,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46370,"end":46382,"name":"currentIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":46394,"end":46415,"declarations":[{"type":"VariableDeclarator","start":46398,"end":46414,"id":{"type":"Identifier","start":46398,"end":46399,"name":"i"},"init":{"type":"Identifier","start":46402,"end":46414,"name":"currentIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":46425,"end":46674,"await":false,"left":{"type":"VariableDeclaration","start":46430,"end":46440,"declarations":[{"type":"VariableDeclarator","start":46436,"end":46440,"id":{"type":"Identifier","start":46436,"end":46440,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46444,"end":46469,"name":"currentArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46471,"end":46674,"body":[{"type":"ExpressionStatement","start":46513,"end":46568,"expression":{"type":"CallExpression","start":46513,"end":46567,"callee":{"type":"MemberExpression","start":46513,"end":46525,"object":{"type":"Identifier","start":46513,"end":46518,"name":"batch"},"property":{"type":"Identifier","start":46519,"end":46525,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46526,"end":46552,"object":{"type":"MemberExpression","start":46526,"end":46548,"object":{"type":"Identifier","start":46526,"end":46530,"name":"item"},"property":{"type":"Identifier","start":46531,"end":46548,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46549,"end":46552,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46554,"end":46566,"properties":[{"type":"Property","start":46556,"end":46564,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46556,"end":46561,"name":"index"},"value":{"type":"Identifier","start":46563,"end":46564,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46582,"end":46645,"test":{"type":"UnaryExpression","start":46586,"end":46594,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46587,"end":46594,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46596,"end":46645,"body":[{"type":"ExpressionStatement","start":46615,"end":46630,"expression":{"type":"AssignmentExpression","start":46615,"end":46629,"operator":"=","left":{"type":"MemberExpression","start":46615,"end":46625,"object":{"type":"Identifier","start":46615,"end":46619,"name":"item"},"property":{"type":"Identifier","start":46620,"end":46625,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46628,"end":46629,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46659,"end":46663,"expression":{"type":"UpdateExpression","start":46659,"end":46662,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46659,"end":46660,"name":"i"}}}]}},{"type":"VariableDeclaration","start":46684,"end":46754,"declarations":[{"type":"VariableDeclarator","start":46690,"end":46753,"id":{"type":"Identifier","start":46690,"end":46712,"name":"prevArraySliceToUpdate"},"init":{"type":"CallExpression","start":46715,"end":46753,"callee":{"type":"MemberExpression","start":46715,"end":46738,"object":{"type":"Identifier","start":46715,"end":46732,"name":"usedPreviousArray"},"property":{"type":"Identifier","start":46733,"end":46738,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46739,"end":46752,"name":"previousIndex"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":46764,"end":46782,"expression":{"type":"AssignmentExpression","start":46764,"end":46781,"operator":"=","left":{"type":"Identifier","start":46764,"end":46765,"name":"i"},"right":{"type":"Identifier","start":46768,"end":46781,"name":"previousIndex"}}},{"type":"ForOfStatement","start":46792,"end":47038,"await":false,"left":{"type":"VariableDeclaration","start":46797,"end":46807,"declarations":[{"type":"VariableDeclarator","start":46803,"end":46807,"id":{"type":"Identifier","start":46803,"end":46807,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46811,"end":46833,"name":"prevArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46835,"end":47038,"body":[{"type":"ExpressionStatement","start":46877,"end":46932,"expression":{"type":"CallExpression","start":46877,"end":46931,"callee":{"type":"MemberExpression","start":46877,"end":46889,"object":{"type":"Identifier","start":46877,"end":46882,"name":"batch"},"property":{"type":"Identifier","start":46883,"end":46889,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46890,"end":46916,"object":{"type":"MemberExpression","start":46890,"end":46912,"object":{"type":"Identifier","start":46890,"end":46894,"name":"item"},"property":{"type":"Identifier","start":46895,"end":46912,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46913,"end":46916,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46918,"end":46930,"properties":[{"type":"Property","start":46920,"end":46928,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46920,"end":46925,"name":"index"},"value":{"type":"Identifier","start":46927,"end":46928,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46946,"end":47009,"test":{"type":"UnaryExpression","start":46950,"end":46958,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46951,"end":46958,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46960,"end":47009,"body":[{"type":"ExpressionStatement","start":46979,"end":46994,"expression":{"type":"AssignmentExpression","start":46979,"end":46993,"operator":"=","left":{"type":"MemberExpression","start":46979,"end":46989,"object":{"type":"Identifier","start":46979,"end":46983,"name":"item"},"property":{"type":"Identifier","start":46984,"end":46989,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46992,"end":46993,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":47023,"end":47027,"expression":{"type":"UpdateExpression","start":47023,"end":47026,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":47023,"end":47024,"name":"i"}}}]}},{"type":"ReturnStatement","start":47048,"end":47061,"argument":{"type":"Identifier","start":47055,"end":47060,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47201,"end":47349,"static":false,"computed":false,"key":{"type":"Identifier","start":47201,"end":47222,"name":"deleteMultipleSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":47222,"end":47349,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47223,"end":47230,"name":"docRefs"}],"body":{"type":"BlockStatement","start":47232,"end":47349,"body":[{"type":"VariableDeclaration","start":47243,"end":47300,"declarations":[{"type":"VariableDeclarator","start":47249,"end":47299,"id":{"type":"Identifier","start":47249,"end":47254,"name":"batch"},"init":{"type":"CallExpression","start":47257,"end":47299,"callee":{"type":"MemberExpression","start":47257,"end":47290,"object":{"type":"ThisExpression","start":47257,"end":47261},"property":{"type":"Identifier","start":47262,"end":47290,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47291,"end":47298,"name":"docRefs"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":47310,"end":47342,"argument":{"type":"CallExpression","start":47317,"end":47341,"callee":{"type":"MemberExpression","start":47317,"end":47334,"object":{"type":"ThisExpression","start":47317,"end":47321},"property":{"type":"Identifier","start":47322,"end":47334,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47335,"end":47340,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":47355,"end":47550,"static":false,"computed":false,"key":{"type":"Identifier","start":47355,"end":47383,"name":"getDeleteMultipleSimpleBatch"},"kind":"method","value":{"type":"FunctionExpression","start":47383,"end":47550,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47384,"end":47391,"name":"docRefs"},{"type":"AssignmentPattern","start":47393,"end":47430,"left":{"type":"Identifier","start":47393,"end":47398,"name":"batch"},"right":{"type":"CallExpression","start":47401,"end":47430,"callee":{"type":"Identifier","start":47401,"end":47411,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":47412,"end":47429,"object":{"type":"MemberExpression","start":47412,"end":47419,"object":{"type":"ThisExpression","start":47412,"end":47416},"property":{"type":"Identifier","start":47417,"end":47419,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":47420,"end":47429,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":47432,"end":47550,"body":[{"type":"ExpressionStatement","start":47443,"end":47520,"expression":{"type":"CallExpression","start":47443,"end":47519,"callee":{"type":"MemberExpression","start":47443,"end":47458,"object":{"type":"Identifier","start":47443,"end":47450,"name":"docRefs"},"property":{"type":"Identifier","start":47451,"end":47458,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47459,"end":47518,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47460,"end":47466,"name":"docRef"}],"body":{"type":"BlockStatement","start":47471,"end":47518,"body":[{"type":"ExpressionStatement","start":47486,"end":47507,"expression":{"type":"CallExpression","start":47486,"end":47506,"callee":{"type":"MemberExpression","start":47486,"end":47498,"object":{"type":"Identifier","start":47486,"end":47491,"name":"batch"},"property":{"type":"Identifier","start":47492,"end":47498,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47499,"end":47505,"name":"docRef"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":47530,"end":47543,"argument":{"type":"Identifier","start":47537,"end":47542,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47837,"end":49516,"static":false,"computed":false,"key":{"type":"Identifier","start":47837,"end":47868,"name":"removeDataExtrasRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":47868,"end":49516,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47869,"end":47875,"name":"dbItem"},{"type":"AssignmentPattern","start":47877,"end":47902,"left":{"type":"Identifier","start":47877,"end":47897,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":47900,"end":47902,"elements":[]}},{"type":"AssignmentPattern","start":47904,"end":47933,"left":{"type":"Identifier","start":47904,"end":47928,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":47931,"end":47933,"elements":[]}}],"body":{"type":"BlockStatement","start":47935,"end":49516,"body":[{"type":"VariableDeclaration","start":48043,"end":48125,"declarations":[{"type":"VariableDeclarator","start":48049,"end":48124,"id":{"type":"Identifier","start":48049,"end":48067,"name":"extraPropertyNames"},"init":{"type":"CallExpression","start":48070,"end":48124,"callee":{"type":"MemberExpression","start":48070,"end":48098,"object":{"type":"ArrayExpression","start":48070,"end":48091,"elements":[{"type":"Literal","start":48071,"end":48090,"value":"firestoreMetadata","raw":"'firestoreMetadata'"}]},"property":{"type":"Identifier","start":48092,"end":48098,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48099,"end":48123,"name":"additionalFieldsToRemove"}],"optional":false}}],"kind":"const"},{"type":"ForOfStatement","start":48171,"end":48282,"await":false,"left":{"type":"VariableDeclaration","start":48176,"end":48199,"declarations":[{"type":"VariableDeclarator","start":48182,"end":48199,"id":{"type":"Identifier","start":48182,"end":48199,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48203,"end":48221,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48223,"end":48282,"body":[{"type":"ExpressionStatement","start":48238,"end":48271,"expression":{"type":"UnaryExpression","start":48238,"end":48270,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48245,"end":48270,"object":{"type":"Identifier","start":48245,"end":48251,"name":"dbItem"},"property":{"type":"Identifier","start":48252,"end":48269,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":48292,"end":49485,"expression":{"type":"CallExpression","start":48292,"end":49484,"callee":{"type":"MemberExpression","start":48292,"end":48320,"object":{"type":"Identifier","start":48292,"end":48312,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":48313,"end":48320,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":48321,"end":49483,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48321,"end":48324,"name":"col"}],"body":{"type":"BlockStatement","start":48328,"end":49483,"body":[{"type":"IfStatement","start":48343,"end":49472,"test":{"type":"CallExpression","start":48347,"end":48378,"callee":{"type":"MemberExpression","start":48347,"end":48360,"object":{"type":"Identifier","start":48347,"end":48352,"name":"Array"},"property":{"type":"Identifier","start":48353,"end":48360,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":48361,"end":48377,"object":{"type":"Identifier","start":48361,"end":48367,"name":"dbItem"},"property":{"type":"MemberExpression","start":48368,"end":48376,"object":{"type":"Identifier","start":48368,"end":48371,"name":"col"},"property":{"type":"Identifier","start":48372,"end":48376,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":48380,"end":49008,"body":[{"type":"VariableDeclaration","start":48453,"end":48483,"declarations":[{"type":"VariableDeclarator","start":48459,"end":48482,"id":{"type":"Identifier","start":48459,"end":48463,"name":"docs"},"init":{"type":"MemberExpression","start":48466,"end":48482,"object":{"type":"Identifier","start":48466,"end":48472,"name":"dbItem"},"property":{"type":"MemberExpression","start":48473,"end":48481,"object":{"type":"Identifier","start":48473,"end":48476,"name":"col"},"property":{"type":"Identifier","start":48477,"end":48481,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":48501,"end":48993,"expression":{"type":"CallExpression","start":48501,"end":48992,"callee":{"type":"MemberExpression","start":48501,"end":48513,"object":{"type":"Identifier","start":48501,"end":48505,"name":"docs"},"property":{"type":"Identifier","start":48506,"end":48513,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":48514,"end":48991,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48515,"end":48516,"name":"d"},{"type":"Identifier","start":48518,"end":48519,"name":"i"}],"body":{"type":"BlockStatement","start":48524,"end":48991,"body":[{"type":"IfStatement","start":48547,"end":48972,"test":{"type":"MemberExpression","start":48551,"end":48569,"object":{"type":"Identifier","start":48551,"end":48554,"name":"col"},"property":{"type":"Identifier","start":48555,"end":48569,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48571,"end":48707,"body":[{"type":"ExpressionStatement","start":48598,"end":48684,"expression":{"type":"CallExpression","start":48598,"end":48683,"callee":{"type":"MemberExpression","start":48598,"end":48634,"object":{"type":"ThisExpression","start":48598,"end":48602},"property":{"type":"Identifier","start":48603,"end":48634,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48635,"end":48636,"name":"d"},{"type":"MemberExpression","start":48638,"end":48656,"object":{"type":"Identifier","start":48638,"end":48641,"name":"col"},"property":{"type":"Identifier","start":48642,"end":48656,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48658,"end":48682,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48734,"end":48972,"body":[{"type":"ForOfStatement","start":48793,"end":48949,"await":false,"left":{"type":"VariableDeclaration","start":48798,"end":48821,"declarations":[{"type":"VariableDeclarator","start":48804,"end":48821,"id":{"type":"Identifier","start":48804,"end":48821,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48825,"end":48843,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48845,"end":48949,"body":[{"type":"ExpressionStatement","start":48876,"end":48922,"expression":{"type":"UnaryExpression","start":48876,"end":48921,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48883,"end":48921,"object":{"type":"MemberExpression","start":48883,"end":48902,"object":{"type":"MemberExpression","start":48883,"end":48899,"object":{"type":"Identifier","start":48883,"end":48889,"name":"dbItem"},"property":{"type":"MemberExpression","start":48890,"end":48898,"object":{"type":"Identifier","start":48890,"end":48893,"name":"col"},"property":{"type":"Identifier","start":48894,"end":48898,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48900,"end":48901,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":48903,"end":48920,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49027,"end":49472,"body":[{"type":"IfStatement","start":49080,"end":49457,"test":{"type":"MemberExpression","start":49084,"end":49102,"object":{"type":"Identifier","start":49084,"end":49087,"name":"col"},"property":{"type":"Identifier","start":49088,"end":49102,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":49104,"end":49247,"body":[{"type":"ExpressionStatement","start":49127,"end":49228,"expression":{"type":"CallExpression","start":49127,"end":49227,"callee":{"type":"MemberExpression","start":49127,"end":49163,"object":{"type":"ThisExpression","start":49127,"end":49131},"property":{"type":"Identifier","start":49132,"end":49163,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":49164,"end":49180,"object":{"type":"Identifier","start":49164,"end":49170,"name":"dbItem"},"property":{"type":"MemberExpression","start":49171,"end":49179,"object":{"type":"Identifier","start":49171,"end":49174,"name":"col"},"property":{"type":"Identifier","start":49175,"end":49179,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},{"type":"MemberExpression","start":49182,"end":49200,"object":{"type":"Identifier","start":49182,"end":49185,"name":"col"},"property":{"type":"Identifier","start":49186,"end":49200,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":49202,"end":49226,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49270,"end":49457,"body":[{"type":"ForOfStatement","start":49293,"end":49438,"await":false,"left":{"type":"VariableDeclaration","start":49298,"end":49321,"declarations":[{"type":"VariableDeclarator","start":49304,"end":49321,"id":{"type":"Identifier","start":49304,"end":49321,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":49325,"end":49343,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":49345,"end":49438,"body":[{"type":"ExpressionStatement","start":49372,"end":49415,"expression":{"type":"UnaryExpression","start":49372,"end":49414,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":49379,"end":49414,"object":{"type":"MemberExpression","start":49379,"end":49395,"object":{"type":"Identifier","start":49379,"end":49385,"name":"dbItem"},"property":{"type":"MemberExpression","start":49386,"end":49394,"object":{"type":"Identifier","start":49386,"end":49389,"name":"col"},"property":{"type":"Identifier","start":49390,"end":49394,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":49396,"end":49413,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":49495,"end":49509,"argument":{"type":"Identifier","start":49502,"end":49508,"name":"dbItem"}}]}}},{"type":"MethodDefinition","start":49842,"end":50198,"static":false,"computed":false,"key":{"type":"Identifier","start":49842,"end":49868,"name":"getDocumentReferencesDeep$"},"kind":"method","value":{"type":"FunctionExpression","start":49868,"end":50198,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49869,"end":49872,"name":"ref"},{"type":"AssignmentPattern","start":49874,"end":49899,"left":{"type":"Identifier","start":49874,"end":49894,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49897,"end":49899,"elements":[]}}],"body":{"type":"BlockStatement","start":49901,"end":50198,"body":[{"type":"IfStatement","start":49912,"end":50191,"test":{"type":"BinaryExpression","start":49916,"end":49948,"left":{"type":"Identifier","start":49916,"end":49919,"name":"ref"},"operator":"instanceof","right":{"type":"Identifier","start":49931,"end":49948,"name":"DocumentReference"}},"consequent":{"type":"BlockStatement","start":49950,"end":50048,"body":[{"type":"ReturnStatement","start":49965,"end":50037,"argument":{"type":"CallExpression","start":49972,"end":50036,"callee":{"type":"MemberExpression","start":49972,"end":50009,"object":{"type":"ThisExpression","start":49972,"end":49976},"property":{"type":"Identifier","start":49977,"end":50009,"name":"getDocumentReferencesFromDocRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50010,"end":50013,"name":"ref"},{"type":"Identifier","start":50015,"end":50035,"name":"subCollectionQueries"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":50063,"end":50191,"body":[{"type":"ReturnStatement","start":50101,"end":50180,"argument":{"type":"CallExpression","start":50108,"end":50179,"callee":{"type":"MemberExpression","start":50108,"end":50152,"object":{"type":"ThisExpression","start":50108,"end":50112},"property":{"type":"Identifier","start":50113,"end":50152,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50153,"end":50156,"name":"ref"},{"type":"Identifier","start":50158,"end":50178,"name":"subCollectionQueries"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":50204,"end":50639,"static":false,"computed":false,"key":{"type":"Identifier","start":50204,"end":50236,"name":"getDocumentReferencesFromDocRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50236,"end":50639,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50237,"end":50243,"name":"docRef"},{"type":"AssignmentPattern","start":50245,"end":50270,"left":{"type":"Identifier","start":50245,"end":50265,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50268,"end":50270,"elements":[]}}],"body":{"type":"BlockStatement","start":50272,"end":50639,"body":[{"type":"ReturnStatement","start":50283,"end":50632,"argument":{"type":"CallExpression","start":50290,"end":50631,"callee":{"type":"MemberExpression","start":50290,"end":50343,"object":{"type":"CallExpression","start":50290,"end":50338,"callee":{"type":"MemberExpression","start":50290,"end":50308,"object":{"type":"ThisExpression","start":50290,"end":50294},"property":{"type":"Identifier","start":50295,"end":50308,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50309,"end":50315,"name":"docRef"},{"type":"Identifier","start":50317,"end":50337,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":50339,"end":50343,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50344,"end":50351,"callee":{"type":"Identifier","start":50344,"end":50348,"name":"take"},"arguments":[{"type":"Literal","start":50349,"end":50350,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50353,"end":50434,"callee":{"type":"Identifier","start":50353,"end":50356,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50357,"end":50433,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50357,"end":50361,"name":"item"}],"body":{"type":"CallExpression","start":50365,"end":50433,"callee":{"type":"MemberExpression","start":50365,"end":50405,"object":{"type":"ThisExpression","start":50365,"end":50369},"property":{"type":"Identifier","start":50370,"end":50405,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50406,"end":50410,"name":"item"},{"type":"Identifier","start":50412,"end":50432,"name":"subCollectionQueries"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":50498,"end":50630,"callee":{"type":"Identifier","start":50498,"end":50501,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50502,"end":50629,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50503,"end":50511,"name":"pathList"}],"body":{"type":"BlockStatement","start":50516,"end":50629,"body":[{"type":"ReturnStatement","start":50531,"end":50618,"argument":{"type":"CallExpression","start":50538,"end":50617,"callee":{"type":"MemberExpression","start":50538,"end":50568,"object":{"type":"Identifier","start":50538,"end":50546,"name":"pathList"},"property":{"type":"Identifier","start":50565,"end":50568,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50569,"end":50616,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50569,"end":50573,"name":"path"}],"body":{"type":"CallExpression","start":50577,"end":50616,"callee":{"type":"Identifier","start":50577,"end":50591,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50592,"end":50596,"name":"path"},{"type":"MemberExpression","start":50598,"end":50615,"object":{"type":"MemberExpression","start":50598,"end":50605,"object":{"type":"ThisExpression","start":50598,"end":50602},"property":{"type":"Identifier","start":50603,"end":50605,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50606,"end":50615,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":50645,"end":51461,"static":false,"computed":false,"key":{"type":"Identifier","start":50645,"end":50684,"name":"getDocumentReferencesFromCollectionRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50684,"end":51461,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50685,"end":50698,"name":"collectionRef"},{"type":"AssignmentPattern","start":50700,"end":50725,"left":{"type":"Identifier","start":50700,"end":50720,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50723,"end":50725,"elements":[]}}],"body":{"type":"BlockStatement","start":50727,"end":51461,"body":[{"type":"ReturnStatement","start":50738,"end":51454,"argument":{"type":"CallExpression","start":50745,"end":51453,"callee":{"type":"MemberExpression","start":50745,"end":50796,"object":{"type":"CallExpression","start":50745,"end":50791,"callee":{"type":"MemberExpression","start":50745,"end":50776,"object":{"type":"ThisExpression","start":50745,"end":50749},"property":{"type":"Identifier","start":50750,"end":50776,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50777,"end":50790,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":50792,"end":50796,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50830,"end":50837,"callee":{"type":"Identifier","start":50830,"end":50834,"name":"take"},"arguments":[{"type":"Literal","start":50835,"end":50836,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50839,"end":51069,"callee":{"type":"Identifier","start":50839,"end":50847,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":50848,"end":51068,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50849,"end":50854,"name":"items"}],"body":{"type":"BlockStatement","start":50859,"end":51068,"body":[{"type":"VariableDeclaration","start":50874,"end":50891,"declarations":[{"type":"VariableDeclarator","start":50878,"end":50890,"id":{"type":"Identifier","start":50878,"end":50890,"name":"docListeners"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":50905,"end":51008,"expression":{"type":"AssignmentExpression","start":50905,"end":51007,"operator":"=","left":{"type":"Identifier","start":50905,"end":50917,"name":"docListeners"},"right":{"type":"CallExpression","start":50920,"end":51007,"callee":{"type":"MemberExpression","start":50920,"end":50929,"object":{"type":"Identifier","start":50920,"end":50925,"name":"items"},"property":{"type":"Identifier","start":50926,"end":50929,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50930,"end":51006,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50930,"end":50934,"name":"item"}],"body":{"type":"CallExpression","start":50938,"end":51006,"callee":{"type":"MemberExpression","start":50938,"end":50956,"object":{"type":"ThisExpression","start":50938,"end":50942},"property":{"type":"Identifier","start":50943,"end":50956,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":50957,"end":50983,"object":{"type":"MemberExpression","start":50957,"end":50979,"object":{"type":"Identifier","start":50957,"end":50961,"name":"item"},"property":{"type":"Identifier","start":50962,"end":50979,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50980,"end":50983,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":50985,"end":51005,"name":"subCollectionQueries"}],"optional":false}}],"optional":false}}},{"type":"ReturnStatement","start":51022,"end":51057,"argument":{"type":"CallExpression","start":51029,"end":51056,"callee":{"type":"Identifier","start":51029,"end":51042,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":51043,"end":51055,"name":"docListeners"}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":51071,"end":51318,"callee":{"type":"Identifier","start":51071,"end":51074,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":51075,"end":51317,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51076,"end":51081,"name":"items"}],"body":{"type":"BlockStatement","start":51086,"end":51317,"body":[{"type":"VariableDeclaration","start":51101,"end":51116,"declarations":[{"type":"VariableDeclarator","start":51105,"end":51115,"id":{"type":"Identifier","start":51105,"end":51110,"name":"paths"},"init":{"type":"ArrayExpression","start":51113,"end":51115,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":51130,"end":51279,"expression":{"type":"CallExpression","start":51130,"end":51278,"callee":{"type":"MemberExpression","start":51130,"end":51143,"object":{"type":"Identifier","start":51130,"end":51135,"name":"items"},"property":{"type":"Identifier","start":51136,"end":51143,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51144,"end":51277,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51144,"end":51148,"name":"item"}],"body":{"type":"BlockStatement","start":51152,"end":51277,"body":[{"type":"ExpressionStatement","start":51171,"end":51262,"expression":{"type":"AssignmentExpression","start":51171,"end":51261,"operator":"=","left":{"type":"Identifier","start":51171,"end":51176,"name":"paths"},"right":{"type":"CallExpression","start":51179,"end":51261,"callee":{"type":"MemberExpression","start":51179,"end":51191,"object":{"type":"Identifier","start":51179,"end":51184,"name":"paths"},"property":{"type":"Identifier","start":51185,"end":51191,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":51192,"end":51260,"callee":{"type":"MemberExpression","start":51192,"end":51232,"object":{"type":"ThisExpression","start":51192,"end":51196},"property":{"type":"Identifier","start":51197,"end":51232,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51233,"end":51237,"name":"item"},{"type":"Identifier","start":51239,"end":51259,"name":"subCollectionQueries"}],"optional":false}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":51293,"end":51306,"argument":{"type":"Identifier","start":51300,"end":51305,"name":"paths"}}]}}],"optional":false},{"type":"CallExpression","start":51320,"end":51452,"callee":{"type":"Identifier","start":51320,"end":51323,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":51324,"end":51451,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51325,"end":51333,"name":"pathList"}],"body":{"type":"BlockStatement","start":51338,"end":51451,"body":[{"type":"ReturnStatement","start":51353,"end":51440,"argument":{"type":"CallExpression","start":51360,"end":51439,"callee":{"type":"MemberExpression","start":51360,"end":51390,"object":{"type":"Identifier","start":51360,"end":51368,"name":"pathList"},"property":{"type":"Identifier","start":51387,"end":51390,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51391,"end":51438,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":51391,"end":51395,"name":"path"}],"body":{"type":"CallExpression","start":51399,"end":51438,"callee":{"type":"Identifier","start":51399,"end":51413,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51414,"end":51418,"name":"path"},{"type":"MemberExpression","start":51420,"end":51437,"object":{"type":"MemberExpression","start":51420,"end":51427,"object":{"type":"ThisExpression","start":51420,"end":51424},"property":{"type":"Identifier","start":51425,"end":51427,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51428,"end":51437,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":51867,"end":52107,"static":false,"computed":false,"key":{"type":"Identifier","start":51867,"end":51896,"name":"getDocumentReferencesFromItem"},"kind":"method","value":{"type":"FunctionExpression","start":51896,"end":52107,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51897,"end":51901,"name":"item"},{"type":"AssignmentPattern","start":51903,"end":51928,"left":{"type":"Identifier","start":51903,"end":51923,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51926,"end":51928,"elements":[]}}],"body":{"type":"BlockStatement","start":51930,"end":52107,"body":[{"type":"VariableDeclaration","start":51941,"end":52024,"declarations":[{"type":"VariableDeclarator","start":51947,"end":52023,"id":{"type":"Identifier","start":51947,"end":51952,"name":"paths"},"init":{"type":"CallExpression","start":51955,"end":52023,"callee":{"type":"MemberExpression","start":51955,"end":51995,"object":{"type":"ThisExpression","start":51955,"end":51959},"property":{"type":"Identifier","start":51960,"end":51995,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51996,"end":52000,"name":"item"},{"type":"Identifier","start":52002,"end":52022,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":52034,"end":52100,"argument":{"type":"CallExpression","start":52041,"end":52099,"callee":{"type":"MemberExpression","start":52041,"end":52050,"object":{"type":"Identifier","start":52041,"end":52046,"name":"paths"},"property":{"type":"Identifier","start":52047,"end":52050,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52051,"end":52098,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":52051,"end":52055,"name":"path"}],"body":{"type":"CallExpression","start":52059,"end":52098,"callee":{"type":"Identifier","start":52059,"end":52073,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":52074,"end":52078,"name":"path"},{"type":"MemberExpression","start":52080,"end":52097,"object":{"type":"MemberExpression","start":52080,"end":52087,"object":{"type":"ThisExpression","start":52080,"end":52084},"property":{"type":"Identifier","start":52085,"end":52087,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52088,"end":52097,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":52207,"end":53795,"static":false,"computed":false,"key":{"type":"Identifier","start":52207,"end":52242,"name":"getPathsFromItemDeepRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":52242,"end":53795,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52243,"end":52247,"name":"item"},{"type":"AssignmentPattern","start":52249,"end":52274,"left":{"type":"Identifier","start":52249,"end":52269,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":52272,"end":52274,"elements":[]}}],"body":{"type":"BlockStatement","start":52276,"end":53795,"body":[{"type":"IfStatement","start":52287,"end":52421,"test":{"type":"LogicalExpression","start":52291,"end":52356,"left":{"type":"BinaryExpression","start":52291,"end":52319,"left":{"type":"Identifier","start":52291,"end":52311,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":52315,"end":52319,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":52323,"end":52356,"left":{"type":"MemberExpression","start":52323,"end":52350,"object":{"type":"Identifier","start":52323,"end":52343,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":52344,"end":52350,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":52355,"end":52356,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":52358,"end":52421,"body":[{"type":"ReturnStatement","start":52373,"end":52410,"argument":{"type":"ArrayExpression","start":52380,"end":52409,"elements":[{"type":"MemberExpression","start":52381,"end":52408,"object":{"type":"MemberExpression","start":52381,"end":52403,"object":{"type":"Identifier","start":52381,"end":52385,"name":"item"},"property":{"type":"Identifier","start":52386,"end":52403,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52404,"end":52408,"name":"path"},"computed":false,"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":52431,"end":52449,"declarations":[{"type":"VariableDeclarator","start":52435,"end":52448,"id":{"type":"Identifier","start":52435,"end":52443,"name":"pathList"},"init":{"type":"ArrayExpression","start":52446,"end":52448,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":52459,"end":52502,"expression":{"type":"CallExpression","start":52459,"end":52501,"callee":{"type":"MemberExpression","start":52459,"end":52472,"object":{"type":"Identifier","start":52459,"end":52467,"name":"pathList"},"property":{"type":"Identifier","start":52468,"end":52472,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52473,"end":52500,"object":{"type":"MemberExpression","start":52473,"end":52495,"object":{"type":"Identifier","start":52473,"end":52477,"name":"item"},"property":{"type":"Identifier","start":52478,"end":52495,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52496,"end":52500,"name":"path"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":52512,"end":53762,"expression":{"type":"CallExpression","start":52512,"end":53761,"callee":{"type":"MemberExpression","start":52512,"end":52540,"object":{"type":"Identifier","start":52512,"end":52532,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":52533,"end":52540,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52541,"end":53760,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52541,"end":52544,"name":"col"}],"body":{"type":"BlockStatement","start":52548,"end":53760,"body":[{"type":"IfStatement","start":52563,"end":53749,"test":{"type":"LogicalExpression","start":52567,"end":52610,"left":{"type":"CallExpression","start":52567,"end":52596,"callee":{"type":"MemberExpression","start":52567,"end":52580,"object":{"type":"Identifier","start":52567,"end":52572,"name":"Array"},"property":{"type":"Identifier","start":52573,"end":52580,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52581,"end":52595,"object":{"type":"Identifier","start":52581,"end":52585,"name":"item"},"property":{"type":"MemberExpression","start":52586,"end":52594,"object":{"type":"Identifier","start":52586,"end":52589,"name":"col"},"property":{"type":"Identifier","start":52590,"end":52594,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":52600,"end":52610,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":52601,"end":52610,"object":{"type":"Identifier","start":52601,"end":52604,"name":"col"},"property":{"type":"Identifier","start":52605,"end":52610,"name":"docId"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52612,"end":53148,"body":[{"type":"VariableDeclaration","start":52722,"end":52751,"declarations":[{"type":"VariableDeclarator","start":52728,"end":52750,"id":{"type":"Identifier","start":52728,"end":52733,"name":"items"},"init":{"type":"MemberExpression","start":52736,"end":52750,"object":{"type":"Identifier","start":52736,"end":52740,"name":"item"},"property":{"type":"MemberExpression","start":52741,"end":52749,"object":{"type":"Identifier","start":52741,"end":52744,"name":"col"},"property":{"type":"Identifier","start":52745,"end":52749,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":52769,"end":53133,"expression":{"type":"CallExpression","start":52769,"end":53132,"callee":{"type":"MemberExpression","start":52769,"end":52782,"object":{"type":"Identifier","start":52769,"end":52774,"name":"items"},"property":{"type":"Identifier","start":52775,"end":52782,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52783,"end":53131,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52783,"end":52790,"name":"subItem"}],"body":{"type":"BlockStatement","start":52794,"end":53131,"body":[{"type":"IfStatement","start":52817,"end":53112,"test":{"type":"MemberExpression","start":52821,"end":52839,"object":{"type":"Identifier","start":52821,"end":52824,"name":"col"},"property":{"type":"Identifier","start":52825,"end":52839,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52841,"end":52989,"body":[{"type":"ExpressionStatement","start":52868,"end":52966,"expression":{"type":"AssignmentExpression","start":52868,"end":52965,"operator":"=","left":{"type":"Identifier","start":52868,"end":52876,"name":"pathList"},"right":{"type":"CallExpression","start":52879,"end":52965,"callee":{"type":"MemberExpression","start":52879,"end":52894,"object":{"type":"Identifier","start":52879,"end":52887,"name":"pathList"},"property":{"type":"Identifier","start":52888,"end":52894,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52895,"end":52964,"callee":{"type":"MemberExpression","start":52895,"end":52935,"object":{"type":"ThisExpression","start":52895,"end":52899},"property":{"type":"Identifier","start":52900,"end":52935,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52936,"end":52943,"name":"subItem"},{"type":"MemberExpression","start":52945,"end":52963,"object":{"type":"Identifier","start":52945,"end":52948,"name":"col"},"property":{"type":"Identifier","start":52949,"end":52963,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":53016,"end":53112,"body":[{"type":"ExpressionStatement","start":53043,"end":53089,"expression":{"type":"CallExpression","start":53043,"end":53088,"callee":{"type":"MemberExpression","start":53043,"end":53056,"object":{"type":"Identifier","start":53043,"end":53051,"name":"pathList"},"property":{"type":"Identifier","start":53052,"end":53056,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53057,"end":53087,"object":{"type":"MemberExpression","start":53057,"end":53082,"object":{"type":"Identifier","start":53057,"end":53064,"name":"subItem"},"property":{"type":"Identifier","start":53065,"end":53082,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53083,"end":53087,"name":"path"},"computed":false,"optional":false}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":53167,"end":53749,"body":[{"type":"IfStatement","start":53220,"end":53734,"test":{"type":"MemberExpression","start":53224,"end":53242,"object":{"type":"Identifier","start":53224,"end":53227,"name":"col"},"property":{"type":"Identifier","start":53228,"end":53242,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":53244,"end":53381,"body":[{"type":"ExpressionStatement","start":53267,"end":53362,"expression":{"type":"AssignmentExpression","start":53267,"end":53361,"operator":"=","left":{"type":"Identifier","start":53267,"end":53275,"name":"pathList"},"right":{"type":"CallExpression","start":53278,"end":53361,"callee":{"type":"MemberExpression","start":53278,"end":53293,"object":{"type":"Identifier","start":53278,"end":53286,"name":"pathList"},"property":{"type":"Identifier","start":53287,"end":53293,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":53294,"end":53360,"callee":{"type":"MemberExpression","start":53294,"end":53334,"object":{"type":"ThisExpression","start":53294,"end":53298},"property":{"type":"Identifier","start":53299,"end":53334,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53335,"end":53339,"name":"item"},{"type":"MemberExpression","start":53341,"end":53359,"object":{"type":"Identifier","start":53341,"end":53344,"name":"col"},"property":{"type":"Identifier","start":53345,"end":53359,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":53404,"end":53734,"body":[{"type":"VariableDeclaration","start":53427,"end":53458,"declarations":[{"type":"VariableDeclarator","start":53433,"end":53457,"id":{"type":"Identifier","start":53433,"end":53440,"name":"subItem"},"init":{"type":"MemberExpression","start":53443,"end":53457,"object":{"type":"Identifier","start":53443,"end":53447,"name":"item"},"property":{"type":"MemberExpression","start":53448,"end":53456,"object":{"type":"Identifier","start":53448,"end":53451,"name":"col"},"property":{"type":"Identifier","start":53452,"end":53456,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":53480,"end":53636,"test":{"type":"LogicalExpression","start":53484,"end":53538,"left":{"type":"BinaryExpression","start":53484,"end":53499,"left":{"type":"Identifier","start":53484,"end":53491,"name":"subItem"},"operator":"!=","right":{"type":"Literal","start":53495,"end":53499,"value":null,"raw":"null"}},"operator":"&&","right":{"type":"BinaryExpression","start":53503,"end":53538,"left":{"type":"Literal","start":53503,"end":53509,"value":"path","raw":"'path'"},"operator":"in","right":{"type":"MemberExpression","start":53513,"end":53538,"object":{"type":"Identifier","start":53513,"end":53520,"name":"subItem"},"property":{"type":"Identifier","start":53521,"end":53538,"name":"firestoreMetadata"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":53540,"end":53636,"body":[{"type":"ExpressionStatement","start":53567,"end":53613,"expression":{"type":"CallExpression","start":53567,"end":53612,"callee":{"type":"MemberExpression","start":53567,"end":53580,"object":{"type":"Identifier","start":53567,"end":53575,"name":"pathList"},"property":{"type":"Identifier","start":53576,"end":53580,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53581,"end":53611,"object":{"type":"MemberExpression","start":53581,"end":53606,"object":{"type":"Identifier","start":53581,"end":53588,"name":"subItem"},"property":{"type":"Identifier","start":53589,"end":53606,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53607,"end":53611,"name":"path"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":53772,"end":53788,"argument":{"type":"Identifier","start":53779,"end":53787,"name":"pathList"}}]}}},{"type":"MethodDefinition","start":53976,"end":55001,"static":false,"computed":false,"key":{"type":"Identifier","start":53976,"end":54016,"name":"splitDataIntoCurrentDocAndSubCollections"},"kind":"method","value":{"type":"FunctionExpression","start":54016,"end":55001,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":54017,"end":54021,"name":"data"},{"type":"AssignmentPattern","start":54023,"end":54048,"left":{"type":"Identifier","start":54023,"end":54043,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":54046,"end":54048,"elements":[]}}],"body":{"type":"BlockStatement","start":54050,"end":55001,"body":[{"type":"VariableDeclaration","start":54124,"end":54144,"declarations":[{"type":"VariableDeclarator","start":54128,"end":54143,"id":{"type":"Identifier","start":54128,"end":54138,"name":"currentDoc"},"init":{"type":"ObjectExpression","start":54141,"end":54143,"properties":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":54154,"end":54180,"declarations":[{"type":"VariableDeclarator","start":54160,"end":54179,"id":{"type":"Identifier","start":54160,"end":54174,"name":"subCollections"},"init":{"type":"ObjectExpression","start":54177,"end":54179,"properties":[]}}],"kind":"const"},{"type":"ForOfStatement","start":54340,"end":54911,"await":false,"left":{"type":"VariableDeclaration","start":54345,"end":54363,"declarations":[{"type":"VariableDeclarator","start":54351,"end":54363,"id":{"type":"ArrayPattern","start":54351,"end":54363,"elements":[{"type":"Identifier","start":54352,"end":54355,"name":"key"},{"type":"Identifier","start":54357,"end":54362,"name":"value"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":54367,"end":54387,"callee":{"type":"MemberExpression","start":54367,"end":54381,"object":{"type":"Identifier","start":54367,"end":54373,"name":"Object"},"property":{"type":"Identifier","start":54374,"end":54381,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":54382,"end":54386,"name":"data"}],"optional":false},"body":{"type":"BlockStatement","start":54389,"end":54911,"body":[{"type":"IfStatement","start":54445,"end":54900,"test":{"type":"LogicalExpression","start":54449,"end":54504,"left":{"type":"Identifier","start":54449,"end":54469,"name":"subCollectionWriters"},"operator":"&&","right":{"type":"BinaryExpression","start":54473,"end":54504,"left":{"type":"MemberExpression","start":54473,"end":54500,"object":{"type":"Identifier","start":54473,"end":54493,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54494,"end":54500,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":54503,"end":54504,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":54506,"end":54829,"body":[{"type":"VariableDeclaration","start":54525,"end":54612,"declarations":[{"type":"VariableDeclarator","start":54531,"end":54611,"id":{"type":"Identifier","start":54531,"end":54550,"name":"subCollectionWriter"},"init":{"type":"CallExpression","start":54553,"end":54611,"callee":{"type":"MemberExpression","start":54553,"end":54578,"object":{"type":"Identifier","start":54553,"end":54573,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54574,"end":54578,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":54579,"end":54610,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":54579,"end":54586,"name":"subColl"}],"body":{"type":"BinaryExpression","start":54590,"end":54610,"left":{"type":"MemberExpression","start":54590,"end":54602,"object":{"type":"Identifier","start":54590,"end":54597,"name":"subColl"},"property":{"type":"Identifier","start":54598,"end":54602,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":54607,"end":54610,"name":"key"}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":54630,"end":54814,"test":{"type":"Identifier","start":54634,"end":54653,"name":"subCollectionWriter"},"consequent":{"type":"BlockStatement","start":54655,"end":54725,"body":[{"type":"ExpressionStatement","start":54678,"end":54706,"expression":{"type":"AssignmentExpression","start":54678,"end":54705,"operator":"=","left":{"type":"MemberExpression","start":54678,"end":54697,"object":{"type":"Identifier","start":54678,"end":54692,"name":"subCollections"},"property":{"type":"Identifier","start":54693,"end":54696,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54700,"end":54705,"name":"value"}}}]},"alternate":{"type":"BlockStatement","start":54748,"end":54814,"body":[{"type":"ExpressionStatement","start":54771,"end":54795,"expression":{"type":"AssignmentExpression","start":54771,"end":54794,"operator":"=","left":{"type":"MemberExpression","start":54771,"end":54786,"object":{"type":"Identifier","start":54771,"end":54781,"name":"currentDoc"},"property":{"type":"Identifier","start":54782,"end":54785,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54789,"end":54794,"name":"value"}}}]}}]},"alternate":{"type":"BlockStatement","start":54848,"end":54900,"body":[{"type":"ExpressionStatement","start":54867,"end":54885,"expression":{"type":"AssignmentExpression","start":54867,"end":54884,"operator":"=","left":{"type":"Identifier","start":54867,"end":54877,"name":"currentDoc"},"right":{"type":"Identifier","start":54880,"end":54884,"name":"data"}}}]}}]}},{"type":"ReturnStatement","start":54921,"end":54994,"argument":{"type":"ObjectExpression","start":54928,"end":54993,"properties":[{"type":"Property","start":54943,"end":54953,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54943,"end":54953,"name":"currentDoc"},"kind":"init","value":{"type":"Identifier","start":54943,"end":54953,"name":"currentDoc"}},{"type":"Property","start":54968,"end":54982,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54968,"end":54982,"name":"subCollections"},"kind":"init","value":{"type":"Identifier","start":54968,"end":54982,"name":"subCollections"}}]}}]}}},{"type":"MethodDefinition","start":55280,"end":55360,"static":false,"computed":false,"key":{"type":"Identifier","start":55280,"end":55292,"name":"batchCommit$"},"kind":"method","value":{"type":"FunctionExpression","start":55292,"end":55360,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":55293,"end":55298,"name":"batch"}],"body":{"type":"BlockStatement","start":55300,"end":55360,"body":[{"type":"ReturnStatement","start":55311,"end":55353,"argument":{"type":"CallExpression","start":55318,"end":55352,"callee":{"type":"MemberExpression","start":55318,"end":55343,"object":{"type":"CallExpression","start":55318,"end":55338,"callee":{"type":"Identifier","start":55318,"end":55322,"name":"from"},"arguments":[{"type":"CallExpression","start":55323,"end":55337,"callee":{"type":"MemberExpression","start":55323,"end":55335,"object":{"type":"Identifier","start":55323,"end":55328,"name":"batch"},"property":{"type":"Identifier","start":55329,"end":55335,"name":"commit"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"property":{"type":"Identifier","start":55339,"end":55343,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":55344,"end":55351,"callee":{"type":"Identifier","start":55344,"end":55348,"name":"take"},"arguments":[{"type":"Literal","start":55349,"end":55350,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":56045,"end":58266,"declaration":{"type":"ClassDeclaration","start":56052,"end":58266,"id":{"type":"Identifier","start":56058,"end":56072,"name":"QueryContainer"},"superClass":null,"body":{"type":"ClassBody","start":56073,"end":58266,"body":[{"type":"MethodDefinition","start":56080,"end":56167,"static":false,"computed":false,"key":{"type":"Identifier","start":56080,"end":56091,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":56091,"end":56167,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56092,"end":56095,"name":"ref"}],"body":{"type":"BlockStatement","start":56097,"end":56167,"body":[{"type":"ExpressionStatement","start":56108,"end":56123,"expression":{"type":"AssignmentExpression","start":56108,"end":56122,"operator":"=","left":{"type":"MemberExpression","start":56108,"end":56116,"object":{"type":"ThisExpression","start":56108,"end":56112},"property":{"type":"Identifier","start":56113,"end":56116,"name":"ref"},"computed":false,"optional":false},"right":{"type":"Identifier","start":56119,"end":56122,"name":"ref"}}},{"type":"ExpressionStatement","start":56133,"end":56160,"expression":{"type":"AssignmentExpression","start":56133,"end":56159,"operator":"=","left":{"type":"MemberExpression","start":56133,"end":56154,"object":{"type":"ThisExpression","start":56133,"end":56137},"property":{"type":"Identifier","start":56138,"end":56154,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":56157,"end":56159,"elements":[]}}}]}}},{"type":"MethodDefinition","start":56230,"end":56352,"static":true,"computed":false,"key":{"type":"Identifier","start":56237,"end":56245,"name":"fromPath"},"kind":"method","value":{"type":"FunctionExpression","start":56245,"end":56352,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56246,"end":56255,"name":"firestore"},{"type":"Identifier","start":56257,"end":56261,"name":"path"}],"body":{"type":"BlockStatement","start":56263,"end":56352,"body":[{"type":"VariableDeclaration","start":56274,"end":56314,"declarations":[{"type":"VariableDeclarator","start":56280,"end":56313,"id":{"type":"Identifier","start":56280,"end":56283,"name":"ref"},"init":{"type":"CallExpression","start":56286,"end":56313,"callee":{"type":"Identifier","start":56286,"end":56296,"name":"collection"},"arguments":[{"type":"Identifier","start":56297,"end":56306,"name":"firestore"},{"type":"Identifier","start":56308,"end":56312,"name":"path"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":56324,"end":56345,"argument":{"type":"NewExpression","start":56331,"end":56344,"callee":{"type":"ThisExpression","start":56335,"end":56339},"arguments":[{"type":"Identifier","start":56340,"end":56343,"name":"ref"}]}}]}}},{"type":"MethodDefinition","start":56419,"end":56498,"static":false,"computed":false,"key":{"type":"Identifier","start":56423,"end":56428,"name":"query"},"kind":"get","value":{"type":"FunctionExpression","start":56428,"end":56498,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":56431,"end":56498,"body":[{"type":"ReturnStatement","start":56442,"end":56491,"argument":{"type":"CallExpression","start":56449,"end":56490,"callee":{"type":"Identifier","start":56449,"end":56454,"name":"query"},"arguments":[{"type":"MemberExpression","start":56455,"end":56463,"object":{"type":"ThisExpression","start":56455,"end":56459},"property":{"type":"Identifier","start":56460,"end":56463,"name":"ref"},"computed":false,"optional":false},{"type":"SpreadElement","start":56465,"end":56489,"argument":{"type":"MemberExpression","start":56468,"end":56489,"object":{"type":"ThisExpression","start":56468,"end":56472},"property":{"type":"Identifier","start":56473,"end":56489,"name":"queryConstraints"},"computed":false,"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":56596,"end":56658,"static":false,"computed":false,"key":{"type":"Identifier","start":56596,"end":56604,"name":"getDocs$"},"kind":"method","value":{"type":"FunctionExpression","start":56604,"end":56658,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":56607,"end":56658,"body":[{"type":"ReturnStatement","start":56618,"end":56651,"argument":{"type":"CallExpression","start":56625,"end":56650,"callee":{"type":"Identifier","start":56625,"end":56629,"name":"from"},"arguments":[{"type":"CallExpression","start":56630,"end":56649,"callee":{"type":"Identifier","start":56630,"end":56637,"name":"getDocs"},"arguments":[{"type":"MemberExpression","start":56638,"end":56648,"object":{"type":"ThisExpression","start":56638,"end":56642},"property":{"type":"Identifier","start":56643,"end":56648,"name":"query"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":56664,"end":56794,"static":false,"computed":false,"key":{"type":"Identifier","start":56664,"end":56669,"name":"where"},"kind":"method","value":{"type":"FunctionExpression","start":56669,"end":56794,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56670,"end":56679,"name":"fieldPath"},{"type":"Identifier","start":56681,"end":56686,"name":"opStr"},{"type":"Identifier","start":56688,"end":56693,"name":"value"}],"body":{"type":"BlockStatement","start":56695,"end":56794,"body":[{"type":"ExpressionStatement","start":56706,"end":56765,"expression":{"type":"CallExpression","start":56706,"end":56764,"callee":{"type":"MemberExpression","start":56706,"end":56732,"object":{"type":"MemberExpression","start":56706,"end":56727,"object":{"type":"ThisExpression","start":56706,"end":56710},"property":{"type":"Identifier","start":56711,"end":56727,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56728,"end":56732,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56733,"end":56763,"callee":{"type":"Identifier","start":56733,"end":56738,"name":"where"},"arguments":[{"type":"Identifier","start":56739,"end":56748,"name":"fieldPath"},{"type":"Identifier","start":56750,"end":56755,"name":"opStr"},{"type":"Identifier","start":56757,"end":56762,"name":"value"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56775,"end":56787,"argument":{"type":"ThisExpression","start":56782,"end":56786}}]}}},{"type":"MethodDefinition","start":56800,"end":56934,"static":false,"computed":false,"key":{"type":"Identifier","start":56800,"end":56807,"name":"orderBy"},"kind":"method","value":{"type":"FunctionExpression","start":56807,"end":56934,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56808,"end":56817,"name":"fieldPath"},{"type":"Identifier","start":56819,"end":56831,"name":"directionStr"}],"body":{"type":"BlockStatement","start":56833,"end":56934,"body":[{"type":"ExpressionStatement","start":56844,"end":56905,"expression":{"type":"CallExpression","start":56844,"end":56904,"callee":{"type":"MemberExpression","start":56844,"end":56870,"object":{"type":"MemberExpression","start":56844,"end":56865,"object":{"type":"ThisExpression","start":56844,"end":56848},"property":{"type":"Identifier","start":56849,"end":56865,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56866,"end":56870,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56871,"end":56903,"callee":{"type":"Identifier","start":56871,"end":56878,"name":"orderBy"},"arguments":[{"type":"Identifier","start":56879,"end":56888,"name":"fieldPath"},{"type":"Identifier","start":56890,"end":56902,"name":"directionStr"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56915,"end":56927,"argument":{"type":"ThisExpression","start":56922,"end":56926}}]}}},{"type":"MethodDefinition","start":56940,"end":57036,"static":false,"computed":false,"key":{"type":"Identifier","start":56940,"end":56945,"name":"limit"},"kind":"method","value":{"type":"FunctionExpression","start":56945,"end":57036,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56946,"end":56952,"name":"_limit"}],"body":{"type":"BlockStatement","start":56954,"end":57036,"body":[{"type":"ExpressionStatement","start":56965,"end":57007,"expression":{"type":"CallExpression","start":56965,"end":57006,"callee":{"type":"MemberExpression","start":56965,"end":56991,"object":{"type":"MemberExpression","start":56965,"end":56986,"object":{"type":"ThisExpression","start":56965,"end":56969},"property":{"type":"Identifier","start":56970,"end":56986,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56987,"end":56991,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56992,"end":57005,"callee":{"type":"Identifier","start":56992,"end":56997,"name":"limit"},"arguments":[{"type":"Identifier","start":56998,"end":57004,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":57017,"end":57029,"argument":{"type":"ThisExpression","start":57024,"end":57028}}]}}},{"type":"MethodDefinition","start":57042,"end":57150,"static":false,"computed":false,"key":{"type":"Identifier","start":57042,"end":57053,"name":"limitToLast"},"kind":"method","value":{"type":"FunctionExpression","start":57053,"end":57150,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57054,"end":57060,"name":"_limit"}],"body":{"type":"BlockStatement","start":57062,"end":57150,"body":[{"type":"ExpressionStatement","start":57073,"end":57121,"expression":{"type":"CallExpression","start":57073,"end":57120,"callee":{"type":"MemberExpression","start":57073,"end":57099,"object":{"type":"MemberExpression","start":57073,"end":57094,"object":{"type":"ThisExpression","start":57073,"end":57077},"property":{"type":"Identifier","start":57078,"end":57094,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57095,"end":57099,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57100,"end":57119,"callee":{"type":"Identifier","start":57100,"end":57111,"name":"limitToLast"},"arguments":[{"type":"Identifier","start":57112,"end":57118,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":57131,"end":57143,"argument":{"type":"ThisExpression","start":57138,"end":57142}}]}}},{"type":"MethodDefinition","start":57156,"end":57426,"static":false,"computed":false,"key":{"type":"Identifier","start":57156,"end":57163,"name":"startAt"},"kind":"method","value":{"type":"FunctionExpression","start":57163,"end":57426,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57164,"end":57172,"name":"snapshot"},{"type":"RestElement","start":57174,"end":57188,"argument":{"type":"Identifier","start":57177,"end":57188,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57190,"end":57426,"body":[{"type":"IfStatement","start":57201,"end":57397,"test":{"type":"Identifier","start":57205,"end":57213,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57215,"end":57287,"body":[{"type":"ExpressionStatement","start":57230,"end":57276,"expression":{"type":"CallExpression","start":57230,"end":57275,"callee":{"type":"MemberExpression","start":57230,"end":57256,"object":{"type":"MemberExpression","start":57230,"end":57251,"object":{"type":"ThisExpression","start":57230,"end":57234},"property":{"type":"Identifier","start":57235,"end":57251,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57252,"end":57256,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57257,"end":57274,"callee":{"type":"Identifier","start":57257,"end":57264,"name":"startAt"},"arguments":[{"type":"Identifier","start":57265,"end":57273,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57302,"end":57397,"test":{"type":"Identifier","start":57306,"end":57317,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57319,"end":57397,"body":[{"type":"ExpressionStatement","start":57334,"end":57386,"expression":{"type":"CallExpression","start":57334,"end":57385,"callee":{"type":"MemberExpression","start":57334,"end":57360,"object":{"type":"MemberExpression","start":57334,"end":57355,"object":{"type":"ThisExpression","start":57334,"end":57338},"property":{"type":"Identifier","start":57339,"end":57355,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57356,"end":57360,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57361,"end":57384,"callee":{"type":"Identifier","start":57361,"end":57368,"name":"startAt"},"arguments":[{"type":"SpreadElement","start":57369,"end":57383,"argument":{"type":"Identifier","start":57372,"end":57383,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57407,"end":57419,"argument":{"type":"ThisExpression","start":57414,"end":57418}}]}}},{"type":"MethodDefinition","start":57432,"end":57711,"static":false,"computed":false,"key":{"type":"Identifier","start":57432,"end":57442,"name":"startAfter"},"kind":"method","value":{"type":"FunctionExpression","start":57442,"end":57711,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57443,"end":57451,"name":"snapshot"},{"type":"RestElement","start":57453,"end":57467,"argument":{"type":"Identifier","start":57456,"end":57467,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57469,"end":57711,"body":[{"type":"IfStatement","start":57480,"end":57682,"test":{"type":"Identifier","start":57484,"end":57492,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57494,"end":57569,"body":[{"type":"ExpressionStatement","start":57509,"end":57558,"expression":{"type":"CallExpression","start":57509,"end":57557,"callee":{"type":"MemberExpression","start":57509,"end":57535,"object":{"type":"MemberExpression","start":57509,"end":57530,"object":{"type":"ThisExpression","start":57509,"end":57513},"property":{"type":"Identifier","start":57514,"end":57530,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57531,"end":57535,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57536,"end":57556,"callee":{"type":"Identifier","start":57536,"end":57546,"name":"startAfter"},"arguments":[{"type":"Identifier","start":57547,"end":57555,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57584,"end":57682,"test":{"type":"Identifier","start":57588,"end":57599,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57601,"end":57682,"body":[{"type":"ExpressionStatement","start":57616,"end":57671,"expression":{"type":"CallExpression","start":57616,"end":57670,"callee":{"type":"MemberExpression","start":57616,"end":57642,"object":{"type":"MemberExpression","start":57616,"end":57637,"object":{"type":"ThisExpression","start":57616,"end":57620},"property":{"type":"Identifier","start":57621,"end":57637,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57638,"end":57642,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57643,"end":57669,"callee":{"type":"Identifier","start":57643,"end":57653,"name":"startAfter"},"arguments":[{"type":"SpreadElement","start":57654,"end":57668,"argument":{"type":"Identifier","start":57657,"end":57668,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57692,"end":57704,"argument":{"type":"ThisExpression","start":57699,"end":57703}}]}}},{"type":"MethodDefinition","start":57717,"end":57981,"static":false,"computed":false,"key":{"type":"Identifier","start":57717,"end":57722,"name":"endAt"},"kind":"method","value":{"type":"FunctionExpression","start":57722,"end":57981,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57723,"end":57731,"name":"snapshot"},{"type":"RestElement","start":57733,"end":57747,"argument":{"type":"Identifier","start":57736,"end":57747,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57749,"end":57981,"body":[{"type":"IfStatement","start":57760,"end":57952,"test":{"type":"Identifier","start":57764,"end":57772,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57774,"end":57844,"body":[{"type":"ExpressionStatement","start":57789,"end":57833,"expression":{"type":"CallExpression","start":57789,"end":57832,"callee":{"type":"MemberExpression","start":57789,"end":57815,"object":{"type":"MemberExpression","start":57789,"end":57810,"object":{"type":"ThisExpression","start":57789,"end":57793},"property":{"type":"Identifier","start":57794,"end":57810,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57811,"end":57815,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57816,"end":57831,"callee":{"type":"Identifier","start":57816,"end":57821,"name":"endAt"},"arguments":[{"type":"Identifier","start":57822,"end":57830,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57859,"end":57952,"test":{"type":"Identifier","start":57863,"end":57874,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57876,"end":57952,"body":[{"type":"ExpressionStatement","start":57891,"end":57941,"expression":{"type":"CallExpression","start":57891,"end":57940,"callee":{"type":"MemberExpression","start":57891,"end":57917,"object":{"type":"MemberExpression","start":57891,"end":57912,"object":{"type":"ThisExpression","start":57891,"end":57895},"property":{"type":"Identifier","start":57896,"end":57912,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57913,"end":57917,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57918,"end":57939,"callee":{"type":"Identifier","start":57918,"end":57923,"name":"endAt"},"arguments":[{"type":"SpreadElement","start":57924,"end":57938,"argument":{"type":"Identifier","start":57927,"end":57938,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57962,"end":57974,"argument":{"type":"ThisExpression","start":57969,"end":57973}}]}}},{"type":"MethodDefinition","start":57987,"end":58263,"static":false,"computed":false,"key":{"type":"Identifier","start":57987,"end":57996,"name":"endBefore"},"kind":"method","value":{"type":"FunctionExpression","start":57996,"end":58263,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57997,"end":58005,"name":"snapshot"},{"type":"RestElement","start":58007,"end":58021,"argument":{"type":"Identifier","start":58010,"end":58021,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":58023,"end":58263,"body":[{"type":"IfStatement","start":58034,"end":58234,"test":{"type":"Identifier","start":58038,"end":58046,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":58048,"end":58122,"body":[{"type":"ExpressionStatement","start":58063,"end":58111,"expression":{"type":"CallExpression","start":58063,"end":58110,"callee":{"type":"MemberExpression","start":58063,"end":58089,"object":{"type":"MemberExpression","start":58063,"end":58084,"object":{"type":"ThisExpression","start":58063,"end":58067},"property":{"type":"Identifier","start":58068,"end":58084,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":58085,"end":58089,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":58090,"end":58109,"callee":{"type":"Identifier","start":58090,"end":58099,"name":"endBefore"},"arguments":[{"type":"Identifier","start":58100,"end":58108,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":58137,"end":58234,"test":{"type":"Identifier","start":58141,"end":58152,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":58154,"end":58234,"body":[{"type":"ExpressionStatement","start":58169,"end":58223,"expression":{"type":"CallExpression","start":58169,"end":58222,"callee":{"type":"MemberExpression","start":58169,"end":58195,"object":{"type":"MemberExpression","start":58169,"end":58190,"object":{"type":"ThisExpression","start":58169,"end":58173},"property":{"type":"Identifier","start":58174,"end":58190,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":58191,"end":58195,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":58196,"end":58221,"callee":{"type":"Identifier","start":58196,"end":58205,"name":"endBefore"},"arguments":[{"type":"SpreadElement","start":58206,"end":58220,"argument":{"type":"Identifier","start":58209,"end":58220,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":58244,"end":58256,"argument":{"type":"ThisExpression","start":58251,"end":58255}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":58268,"end":192702},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":192704,"end":192825}]},"code":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return Object.assign(Object.assign({}, item), { [collectionKey]: nextLevelItems });\r\n                    }\r\n                    else {\r\n                        return Object.assign({}, item);\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            var _a, _b;\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = (_a = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _a === void 0 ? void 0 : _a.subCollections;\r\n                    subDocId = (_b = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _b === void 0 ? void 0 : _b.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return Object.assign(Object.assign({}, currentData), groupedData);\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        var _a;\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.firestoreMetadata) == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return Object.assign(Object.assign({}, item), data);\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        var _a, _b;\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = (_a = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _a === void 0 ? void 0 : _a.subCollections;\r\n                subDocId = (_b = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _b === void 0 ? void 0 : _b.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = Object.assign(Object.assign({}, additionalDataUpdateOnMovedItem), { groupName: currentArrayName });\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,23],[32,0,0,31],[34,0,0,33],[38,0,0,37],[40,0,0,51],[42,0,0,53],[44,0,0,54],[50,0,0,60],[56,0,0,66],[57,0,0,67]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,20],[27,0,2,26],[29,0,2,28],[32,0,2,31],[34,0,2,33],[42,0,2,41],[44,0,2,43],[53,0,2,52],[55,0,2,54],[59,0,2,58],[61,0,2,60],[64,0,2,63],[66,0,2,64],[72,0,2,70],[88,0,2,86],[89,0,2,87]],[[0,0,3,0],[7,0,3,7],[9,0,4,2],[19,0,4,12],[21,0,7,2],[38,0,7,19],[40,0,9,2],[45,0,9,7],[47,0,10,2],[56,0,10,11],[58,0,13,2],[65,0,13,9],[67,0,14,2],[72,0,14,7],[74,0,15,2],[85,0,15,13],[87,0,16,2],[94,0,16,9],[96,0,18,2],[101,0,18,7],[103,0,22,2],[113,0,22,12],[115,0,23,2],[122,0,23,9],[124,0,24,2],[129,0,24,7],[131,0,26,2],[141,0,26,12],[143,0,28,1],[149,0,28,7],[169,0,28,27],[170,0,28,28]],[[0,0,30,0],[7,0,30,7],[9,0,31,2],[23,0,31,16],[25,0,32,2],[38,0,32,15],[40,0,33,2],[55,0,33,17],[57,0,34,2],[79,0,34,24],[81,0,35,2],[96,0,35,17],[98,0,36,2],[112,0,36,16],[114,0,37,2],[130,0,37,18],[132,0,38,1],[138,0,38,7],[149,0,38,18],[150,0,38,19]],[[0,0,43,0],[7,0,43,7],[9,0,43,8],[24,0,43,23],[26,0,43,25],[43,0,43,42],[45,0,43,43],[51,0,43,49],[65,0,43,63],[66,0,43,64]],[[0,0,45,0]],[],[[3,0,47,3]],[[0,0,48,0],[6,0,48,6],[7,0,48,0],[11,0,48,12],[28,0,60,1]],[[0,0,48,0],[11,0,48,12],[28,0,48,29]],[[4,0,49,2],[32,0,49,30]],[[4,0,50,2],[75,0,50,13],[76,0,50,13]],[[4,0,52,2],[117,0,52,115]],[[4,0,53,2],[91,0,53,21],[92,0,53,21]],[[4,0,55,2],[51,0,55,49]],[[4,0,56,2],[65,0,56,8],[66,0,56,8]],[[4,0,58,2],[53,0,58,51]],[[4,0,59,2],[91,0,59,21],[92,0,59,21]],[[0,0,60,0],[1,0,60,1],[3,0,48,12],[20,0,48,29],[25,0,48,12],[42,0,48,29],[50,0,60,1]],[[0,0,71,0]],[],[],[],[],[[3,0,76,3]],[[0,0,77,0],[6,0,77,6],[13,0,77,13],[30,0,77,30]],[[4,0,79,2]],[],[],[],[],[[7,0,84,5]],[[4,0,85,2],[16,0,85,22],[18,0,85,46],[20,0,85,55],[35,0,85,78],[41,0,85,84]],[[8,0,85,22],[15,0,85,24],[18,0,85,22],[20,0,85,24],[21,0,85,46]],[[8,0,85,55],[25,0,85,67],[28,0,85,55],[40,0,85,67],[41,0,85,84]],[[4,0,86,2],[5,0,86,3]],[[4,0,88,2],[43,0,88,41]],[[4,0,90,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,118,5]],[[4,0,119,9],[17,0,119,22],[18,0,120,4],[24,0,120,29],[26,0,121,4],[49,0,121,49],[51,0,121,51],[53,0,122,4],[72,0,122,42],[89,0,122,59],[90,0,122,60],[109,0,122,79]],[[8,0,124,4],[15,0,124,11],[19,0,124,15],[20,0,124,16],[52,0,124,48],[53,0,124,49],[59,0,124,55],[61,0,124,57],[81,0,124,77],[83,0,124,79],[99,0,124,95],[100,0,124,96],[101,0,124,97],[105,0,124,101],[106,0,125,6],[109,0,125,9],[110,0,125,10],[114,0,125,14],[115,0,125,15],[117,0,125,17],[118,0,125,18],[122,0,125,37],[123,0,125,38],[124,0,126,5],[125,0,126,6]],[[4,0,127,2],[5,0,127,3]],[[4,0,129,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,160,5]],[[4,0,161,9],[24,0,161,29],[25,0,162,4],[31,0,162,20],[33,0,163,4],[56,0,163,49],[58,0,163,51]],[[8,0,164,4]],[],[],[[11,0,167,7]],[[8,0,168,4],[15,0,168,11],[19,0,168,15],[20,0,168,16],[46,0,168,42],[47,0,168,46],[53,0,168,52],[54,0,168,53],[55,0,168,54],[59,0,168,58],[60,0,169,6],[68,0,169,14],[69,0,169,15],[70,0,169,16],[75,0,169,37],[77,0,169,39],[79,0,169,41]],[[12,0,171,8],[16,0,171,12],[21,0,171,17],[25,0,171,21],[29,0,171,25],[33,0,171,29],[38,0,171,34],[39,0,171,35],[45,0,171,41],[50,0,171,46],[51,0,171,47],[53,0,171,49]],[[16,0,172,10],[23,0,172,17],[25,0,172,19],[26,0,172,20],[28,0,172,22],[29,0,172,23],[30,0,172,24]],[[13,0,173,9]],[[12,0,174,8],[16,0,174,12],[36,0,174,32],[37,0,174,33],[43,0,174,39],[47,0,174,43],[48,0,174,44],[50,0,174,46]],[[16,0,175,10],[23,0,175,17],[25,0,175,19],[26,0,175,20],[31,0,175,25],[32,0,175,26],[33,0,175,27]],[[13,0,176,9]],[[12,0,178,8],[18,0,178,14],[37,0,178,33],[40,0,178,60],[42,0,178,62],[43,0,178,63]],[[12,0,180,8],[17,0,180,13],[18,0,180,14],[25,0,180,21],[26,0,180,22],[30,0,180,26],[31,0,180,27],[33,0,180,29]],[[16,0,182,10],[22,0,182,16],[40,0,182,34],[43,0,182,37],[47,0,182,41],[48,0,182,42],[72,0,182,66],[73,0,182,67],[77,0,182,71],[79,0,182,73],[99,0,182,93],[100,0,182,94],[101,0,182,95]],[[16,0,184,10],[35,0,184,29],[36,0,184,30],[40,0,184,34],[41,0,184,35],[59,0,184,53],[60,0,184,54],[61,0,184,55]],[[12,0,185,8],[13,0,185,9],[14,0,185,10],[15,0,185,11]],[[12,0,187,8],[66,0,187,62]],[[12,0,188,8],[19,0,188,15],[32,0,188,28],[33,0,188,29],[52,0,188,48],[53,0,188,49],[54,0,188,50]],[[8,0,189,6],[9,0,189,7],[10,0,189,8],[11,0,190,5],[12,0,190,6]],[[4,0,191,2],[5,0,191,3]],[[4,0,193,2]],[],[[7,0,195,5]],[[4,0,196,9],[35,0,196,40],[36,0,197,4],[50,0,197,26],[52,0,198,4],[65,0,198,25],[67,0,199,4],[75,0,199,21]],[[8,0,201,4],[109,0,201,105]],[[8,0,202,4],[14,0,202,10],[29,0,202,25],[32,0,202,28],[36,0,202,32],[50,0,202,46],[51,0,202,50],[65,0,202,64],[66,0,202,65],[80,0,202,79],[82,0,202,81],[86,0,202,85],[87,0,202,86],[89,0,202,88],[90,0,202,89],[99,0,202,98],[100,0,202,125],[101,0,202,126],[102,0,202,127]],[[8,0,203,4],[12,0,203,8],[20,0,203,16],[24,0,203,20],[28,0,203,24],[30,0,203,26]],[[12,0,204,6],[27,0,204,21],[28,0,204,22],[35,0,204,29],[36,0,204,30],[44,0,204,38],[45,0,204,39],[46,0,204,40]],[[9,0,205,5]],[[8,0,207,4],[15,0,207,11],[19,0,207,15],[20,0,207,16],[46,0,207,42],[47,0,207,46],[62,0,207,61],[63,0,207,62],[68,0,207,67],[69,0,207,68],[70,0,207,69],[74,0,207,73],[75,0,208,6],[83,0,208,14],[84,0,208,15],[85,0,208,16],[90,0,208,36],[92,0,208,38],[94,0,208,40]],[[12,0,210,8],[16,0,210,12],[21,0,210,17],[22,0,210,18],[28,0,210,24],[32,0,210,28],[33,0,210,29],[35,0,210,31]],[[16,0,211,10],[23,0,211,17],[25,0,211,19],[26,0,211,20],[28,0,211,22],[29,0,211,23],[30,0,211,24]],[[13,0,212,9],[14,0,212,10],[78,0,212,74]],[[12,0,214,8],[65,0,214,61]],[[12,0,216,8],[18,0,216,14],[30,0,216,26],[33,0,216,61],[35,0,216,63],[36,0,216,64]],[[12,0,218,8],[17,0,218,13],[23,0,218,19],[27,0,218,23],[31,0,218,27],[36,0,218,32],[38,0,218,34]],[[16,0,220,10],[120,0,220,114]],[[16,0,221,10],[22,0,221,16],[35,0,221,29],[38,0,221,32],[42,0,221,36],[43,0,221,37],[60,0,221,54],[61,0,221,55],[64,0,221,58],[65,0,221,59],[69,0,221,63],[70,0,221,64],[76,0,221,70],[77,0,221,71],[80,0,221,74],[82,0,221,76],[95,0,221,89],[96,0,221,90],[97,0,221,91],[98,0,221,93],[117,0,221,112]],[[16,0,223,10],[22,0,223,16],[37,0,223,31],[40,0,223,34],[44,0,223,38],[45,0,223,39],[76,0,223,70],[77,0,223,71],[90,0,223,84],[92,0,223,86],[105,0,223,99],[107,0,223,101],[115,0,223,109],[116,0,223,110],[117,0,223,111],[121,0,223,115],[122,0,224,12],[125,0,224,15],[126,0,224,16],[127,0,224,17],[141,0,224,51],[143,0,224,53],[145,0,224,55]],[[20,0,225,14],[24,0,225,18],[38,0,225,32],[39,0,225,33],[45,0,225,39],[48,0,225,42],[49,0,225,43],[51,0,225,45]],[[24,0,226,16],[31,0,226,23],[33,0,226,24],[36,0,226,27],[40,0,226,31],[42,0,226,33],[43,0,226,34],[56,0,226,47],[57,0,226,48],[59,0,226,50],[73,0,226,64],[75,0,226,80],[76,0,226,81]],[[21,0,227,15]],[[25,0,227,21]],[[24,0,228,16],[31,0,228,23],[33,0,228,24],[36,0,228,27],[40,0,228,31],[42,0,228,47],[43,0,228,48]],[[21,0,229,15],[22,0,229,17],[52,0,229,47]],[[16,0,230,12],[17,0,230,13],[18,0,230,14],[19,0,231,11],[20,0,231,12]],[[16,0,232,10],[28,0,232,22],[29,0,232,23],[33,0,232,27],[34,0,232,28],[49,0,232,43],[50,0,232,44],[51,0,232,45]],[[13,0,233,9]],[[12,0,235,8],[19,0,235,15],[32,0,235,28],[33,0,235,29],[45,0,235,41],[46,0,235,42],[47,0,235,43],[51,0,235,47],[52,0,236,10],[55,0,236,13],[56,0,236,14],[59,0,236,17],[60,0,236,18],[62,0,236,20],[63,0,236,21],[70,0,236,28],[71,0,236,29],[74,0,236,32],[75,0,236,33],[78,0,236,36],[79,0,236,37],[80,0,236,38],[81,0,237,9],[82,0,237,10]],[[8,0,238,6],[9,0,238,7],[10,0,238,8],[11,0,239,5],[12,0,239,6]],[[4,0,240,2],[5,0,240,3]],[[4,0,242,2],[39,0,242,37]],[[4,0,244,2]],[],[],[],[],[],[],[],[[7,0,252,5]],[[4,0,253,9],[8,0,253,13],[9,0,254,4],[13,0,254,11],[15,0,255,4],[28,0,255,41],[30,0,256,4],[53,0,256,50],[55,0,256,52],[57,0,257,4],[70,0,257,26],[74,0,257,30],[76,0,258,4],[81,0,258,18]],[[8,0,260,4],[12,0,260,8],[17,0,260,13],[18,0,260,14],[25,0,260,21],[26,0,260,22],[30,0,260,26],[31,0,260,27],[35,0,260,31],[40,0,260,36],[44,0,260,40],[64,0,260,60],[65,0,260,61],[71,0,260,67],[74,0,260,70],[75,0,260,71],[77,0,260,73]],[[12,0,261,6],[18,0,261,12],[23,0,261,17],[26,0,261,39]],[[16,0,262,8],[20,0,262,12],[22,0,262,14],[67,0,262,59]],[[16,0,263,8],[20,0,263,12],[22,0,263,14],[31,0,263,23]],[[16,0,264,8],[23,0,264,15],[25,0,264,17],[113,0,264,105]],[[16,0,265,8],[21,0,265,13],[23,0,265,15],[25,0,265,17]],[[16,0,266,8],[20,0,266,12]],[[16,0,267,8],[36,0,267,28]],[[16,0,268,8],[21,0,268,13]],[[13,0,269,7],[14,0,269,8]],[[12,0,271,6],[18,0,271,12],[23,0,271,17],[24,0,271,18]],[[9,0,272,5]],[[8,0,274,4],[12,0,274,8],[22,0,274,18],[23,0,274,19]],[[8,0,275,4],[12,0,275,8],[26,0,275,22],[29,0,275,52],[31,0,275,54],[32,0,275,55]],[[8,0,277,4]],[],[],[[10,0,280,6]],[[8,0,281,4],[12,0,281,8],[17,0,281,13],[18,0,281,14],[25,0,281,21],[26,0,281,22],[30,0,281,26],[31,0,281,27],[35,0,281,31],[40,0,281,36],[42,0,281,38]],[[12,0,282,6],[22,0,282,16],[25,0,282,19],[29,0,282,23],[30,0,282,24]],[[9,0,283,5]],[[13,0,283,11]],[[12,0,284,6],[18,0,284,12],[23,0,284,17],[26,0,284,20],[30,0,284,24],[31,0,284,25],[71,0,284,65],[72,0,284,66],[76,0,284,70],[78,0,284,72],[98,0,284,92],[99,0,284,93],[100,0,284,94]],[[12,0,285,6],[22,0,285,16],[25,0,285,19],[30,0,285,24],[31,0,285,25],[41,0,285,35],[42,0,285,36]],[[12,0,286,6],[26,0,286,20],[29,0,286,23],[34,0,286,28],[35,0,286,29],[49,0,286,43],[50,0,286,44]],[[9,0,287,5]],[[8,0,289,4],[15,0,289,11],[19,0,289,15],[20,0,289,16],[30,0,289,26],[31,0,289,30],[41,0,289,45],[43,0,289,47],[56,0,289,60],[58,0,289,62],[68,0,289,72],[70,0,289,74],[75,0,289,79],[76,0,289,80],[77,0,289,81],[81,0,289,85]],[[8,0,290,6],[36,0,290,34]],[[8,0,291,6],[16,0,291,14],[17,0,291,15],[18,0,291,16],[29,0,291,40],[31,0,291,42],[33,0,291,44]],[[12,0,293,8],[18,0,293,14],[28,0,293,24],[31,0,293,51],[33,0,293,53],[34,0,293,54]],[[12,0,295,8],[17,0,295,13],[23,0,295,19],[24,0,295,20],[40,0,295,36],[42,0,295,38],[60,0,295,56],[61,0,295,57],[65,0,295,61],[71,0,295,67],[72,0,295,68],[79,0,295,75],[80,0,295,76],[94,0,295,90],[95,0,295,91],[97,0,295,93]],[[16,0,296,10],[20,0,296,14],[43,0,296,72],[44,0,296,73],[45,0,296,74],[84,0,296,113]],[[16,0,297,10],[20,0,297,14],[28,0,297,42],[29,0,297,43]],[[16,0,299,10],[20,0,299,14],[40,0,299,34],[42,0,299,36]],[[20,0,300,12],[43,0,300,35],[46,0,300,38],[66,0,300,58],[67,0,300,59],[71,0,300,63],[72,0,300,64],[79,0,300,71],[80,0,300,72],[82,0,300,74],[83,0,300,75],[90,0,300,82],[91,0,300,83],[95,0,300,87],[100,0,300,92],[116,0,300,108],[117,0,300,109],[119,0,300,111],[133,0,300,125],[134,0,300,126]],[[20,0,301,12],[28,0,301,20],[31,0,301,23],[51,0,301,43],[52,0,301,44],[56,0,301,48],[57,0,301,49],[64,0,301,56],[65,0,301,57],[67,0,301,59],[68,0,301,60],[75,0,301,67],[76,0,301,68],[80,0,301,72],[85,0,301,77],[101,0,301,93],[102,0,301,94],[104,0,301,96],[109,0,301,101],[110,0,301,102]],[[17,0,302,11]],[[16,0,304,10],[22,0,304,16],[38,0,304,32],[41,0,304,56],[57,0,304,72],[58,0,304,73],[69,0,304,84],[70,0,304,85],[87,0,304,102],[88,0,304,103],[91,0,304,106],[93,0,304,108],[109,0,304,124],[110,0,304,125],[111,0,304,126]],[[16,0,306,10]],[],[],[[139,0,309,133]],[[16,0,310,10],[20,0,310,14],[25,0,310,19],[26,0,310,20],[33,0,310,27],[34,0,310,28],[52,0,310,46],[53,0,310,47],[55,0,310,49]],[[20,0,311,12],[24,0,311,16],[32,0,311,24],[37,0,311,29],[46,0,311,38],[48,0,311,40],[50,0,311,42],[113,0,311,105]],[[24,0,313,14],[110,0,313,100]],[[24,0,314,14],[30,0,314,20],[39,0,314,29],[42,0,314,32],[46,0,314,36],[47,0,314,37],[51,0,314,41],[52,0,314,42],[70,0,314,60],[72,0,314,62],[88,0,314,78],[90,0,314,80],[113,0,314,103],[115,0,314,105],[125,0,314,115],[127,0,314,117],[135,0,314,125],[136,0,314,126],[137,0,314,127],[141,0,314,131],[142,0,315,16],[145,0,315,19],[146,0,315,20],[150,0,315,24],[151,0,315,25],[153,0,315,27]],[[28,0,316,18],[52,0,316,42]],[[28,0,317,18],[35,0,317,25],[37,0,317,26],[40,0,317,29],[42,0,317,31],[58,0,317,47],[60,0,317,49],[65,0,317,54],[67,0,317,56],[71,0,317,60],[73,0,317,61],[74,0,317,62],[75,0,317,63],[134,0,317,122]],[[24,0,318,16],[25,0,318,17],[26,0,318,18],[27,0,319,15],[28,0,319,16]],[[24,0,320,14],[34,0,320,24],[35,0,320,25],[39,0,320,29],[40,0,320,30],[49,0,320,39],[50,0,320,40],[51,0,320,41]],[[21,0,322,13]],[[25,0,322,19],[27,0,322,21],[96,0,322,90]],[[24,0,323,14],[42,0,323,32],[43,0,323,33],[50,0,323,40],[51,0,323,41],[52,0,323,42],[62,0,323,66],[64,0,323,68],[66,0,323,70]],[[28,0,325,16],[114,0,325,102]],[[28,0,326,16],[34,0,326,22],[43,0,326,31],[46,0,326,34],[50,0,326,38],[51,0,326,39],[55,0,326,43],[56,0,326,44],[66,0,326,54],[68,0,326,56],[84,0,326,72],[86,0,326,74],[109,0,326,97],[111,0,326,99],[121,0,326,109],[122,0,326,110],[123,0,326,111],[127,0,326,115],[128,0,327,18],[131,0,327,21],[132,0,327,22],[136,0,327,26],[137,0,327,27],[139,0,327,29]],[[32,0,328,20],[58,0,328,46]],[[32,0,329,20],[125,0,329,113]],[[32,0,330,20],[39,0,330,27],[41,0,330,28],[44,0,330,31],[46,0,330,33],[62,0,330,49],[64,0,330,51],[69,0,330,56],[71,0,330,58],[72,0,330,59],[76,0,330,63],[77,0,330,64],[79,0,330,65],[80,0,330,66]],[[28,0,331,18],[29,0,331,19],[30,0,331,20],[31,0,332,17],[32,0,332,18]],[[28,0,334,16],[38,0,334,26],[39,0,334,27],[43,0,334,31],[44,0,334,32],[53,0,334,41],[54,0,334,42],[55,0,334,43]],[[24,0,335,14],[25,0,335,15],[26,0,335,16],[27,0,335,17]],[[21,0,336,13]],[[17,0,337,11]],[[21,0,337,17],[23,0,337,19],[59,0,337,55]],[[20,0,338,12],[28,0,338,20],[31,0,338,23],[39,0,338,31],[44,0,338,36],[53,0,338,45],[54,0,338,46],[55,0,338,47],[56,0,338,48],[64,0,338,56],[65,0,338,57],[66,0,338,58],[67,0,338,59],[71,0,338,63],[72,0,338,64],[84,0,338,76],[85,0,338,77]],[[20,0,340,12],[106,0,340,98]],[[20,0,341,12],[26,0,341,18],[35,0,341,27],[38,0,341,30],[42,0,341,34],[43,0,341,35],[47,0,341,39],[48,0,341,40],[66,0,341,58],[68,0,341,60],[84,0,341,76],[86,0,341,78],[109,0,341,101],[111,0,341,103],[121,0,341,113],[123,0,341,115],[131,0,341,123],[132,0,341,124],[133,0,341,125],[137,0,341,129],[138,0,342,14],[141,0,342,17],[142,0,342,18],[146,0,342,22],[147,0,342,23],[149,0,342,25]],[[24,0,343,16],[48,0,343,40]],[[24,0,344,16],[31,0,344,23],[33,0,344,24],[36,0,344,27],[38,0,344,29],[54,0,344,45],[56,0,344,47],[61,0,344,52],[63,0,344,54],[67,0,344,58],[69,0,344,59],[70,0,344,60],[71,0,344,61],[130,0,344,120]],[[20,0,345,14],[21,0,345,15],[22,0,345,16],[23,0,346,13],[24,0,346,14]],[[20,0,348,12],[30,0,348,22],[31,0,348,23],[35,0,348,27],[36,0,348,28],[45,0,348,37],[46,0,348,38],[47,0,348,39]],[[17,0,349,11]],[[13,0,350,9],[14,0,350,10],[36,0,350,32]],[[12,0,352,8],[16,0,352,12],[26,0,352,22],[27,0,352,23],[33,0,352,29],[36,0,352,32],[37,0,352,33],[39,0,352,35],[41,0,352,37],[113,0,352,109]],[[16,0,354,10],[89,0,354,83]],[[16,0,355,10],[23,0,355,17],[36,0,355,30],[37,0,355,31],[47,0,355,41],[48,0,355,42],[49,0,355,43],[53,0,355,47]],[[16,0,356,12],[48,0,356,44]],[[16,0,358,12],[139,0,358,135]],[[16,0,359,12],[141,0,359,137]],[[16,0,360,12],[34,0,360,30]],[[16,0,362,12],[19,0,362,15],[20,0,362,16],[21,0,362,17],[29,0,362,49],[31,0,362,51],[33,0,362,53]],[[20,0,363,14],[26,0,363,20],[37,0,363,31],[40,0,363,34],[42,0,363,36],[43,0,363,37]],[[20,0,365,14],[28,0,365,22],[29,0,365,23],[36,0,365,30],[37,0,365,31],[38,0,365,32],[41,0,365,61],[43,0,365,63],[45,0,365,65]],[[24,0,367,16],[30,0,367,22],[33,0,367,25],[36,0,367,28],[39,0,367,31],[40,0,367,32],[43,0,367,35],[44,0,367,36]],[[24,0,368,16],[30,0,368,22],[35,0,368,27],[38,0,368,30],[41,0,368,33],[42,0,368,34],[47,0,368,39],[48,0,368,40]],[[24,0,370,16],[126,0,370,118]],[[24,0,371,16],[37,0,371,29]],[[24,0,372,16],[28,0,372,20],[39,0,372,31],[40,0,372,32],[54,0,372,46],[55,0,372,47],[58,0,372,50],[59,0,372,51],[63,0,372,55],[68,0,372,60],[69,0,372,61],[76,0,372,68],[77,0,372,69],[88,0,372,80],[89,0,372,81],[92,0,372,84],[93,0,372,85],[94,0,372,86],[96,0,372,88]],[[28,0,373,18],[123,0,373,113]],[[28,0,374,18],[41,0,374,31]],[[28,0,375,19],[39,0,375,30],[40,0,375,31],[43,0,375,34],[44,0,375,50],[45,0,375,51],[49,0,375,55],[50,0,375,56],[55,0,375,61],[56,0,375,62],[57,0,375,63],[58,0,375,64],[59,0,375,65],[60,0,375,66]],[[25,0,376,17]],[[29,0,376,23]],[[28,0,377,18],[41,0,377,31]],[[28,0,378,18],[39,0,378,29],[40,0,378,30],[43,0,378,33],[44,0,378,34],[47,0,378,37],[52,0,378,42],[53,0,378,43]],[[25,0,379,17]],[[20,0,380,14],[21,0,380,15],[22,0,380,16],[23,0,380,17]],[[20,0,382,14],[27,0,382,21],[38,0,382,37],[39,0,382,38]],[[16,0,383,12],[17,0,383,13],[18,0,383,14]],[[16,0,385,12],[64,0,385,60]],[[16,0,387,12],[19,0,387,15],[20,0,387,16],[21,0,387,17],[32,0,387,31],[34,0,387,33],[36,0,387,35]],[[20,0,388,14],[27,0,388,21],[29,0,388,22],[32,0,388,25],[43,0,388,36],[45,0,388,38],[48,0,388,41],[59,0,388,52],[61,0,388,58],[62,0,388,59]],[[16,0,389,12],[17,0,389,13],[18,0,389,14],[19,0,391,11],[20,0,391,12]],[[13,0,392,9]],[[17,0,392,15]],[[16,0,393,10],[23,0,393,17],[25,0,393,19],[26,0,393,20],[37,0,393,31],[38,0,393,32],[39,0,393,33]],[[13,0,394,9]],[[8,0,395,6],[9,0,395,7],[10,0,395,8],[11,0,396,5],[12,0,396,6],[16,0,396,10]],[[8,0,397,6],[21,0,397,19]],[[8,0,398,6],[12,0,398,10],[13,0,398,11],[14,0,398,12],[15,0,398,13],[16,0,399,5],[17,0,399,6]],[[4,0,400,2],[5,0,400,3]],[[4,0,402,2],[41,0,402,39]],[[4,0,404,2]],[],[],[],[],[],[],[],[],[],[[7,0,414,5]],[[4,0,415,9],[11,0,415,16],[12,0,415,53],[16,0,415,69],[18,0,416,53],[24,0,416,78],[26,0,417,53],[49,0,417,99],[51,0,417,101],[53,0,418,53],[73,0,418,82],[77,0,418,86]],[[8,0,420,4],[12,0,420,8],[32,0,420,28],[36,0,420,32],[40,0,420,36],[44,0,420,40],[64,0,420,60],[65,0,420,61],[71,0,420,67],[76,0,420,72],[77,0,420,73],[79,0,420,75]],[[12,0,421,6],[19,0,421,13],[23,0,421,17],[24,0,421,18],[37,0,421,31],[38,0,421,32],[42,0,421,36],[44,0,421,38],[50,0,421,44],[52,0,421,46],[69,0,421,63],[70,0,421,64],[71,0,421,65],[72,0,421,66],[125,0,421,119]],[[9,0,422,5]],[[8,0,424,4],[14,0,424,10],[19,0,424,15],[22,0,424,18],[26,0,424,22],[27,0,424,23],[50,0,424,46],[51,0,424,47],[55,0,424,51],[57,0,424,53],[63,0,424,59],[65,0,424,61],[85,0,424,81],[87,0,424,83],[104,0,424,100],[105,0,424,101],[106,0,424,102]],[[8,0,425,4],[15,0,425,11],[19,0,425,15],[20,0,425,16],[32,0,425,28],[33,0,425,29],[38,0,425,34],[39,0,425,35],[40,0,425,36]],[[4,0,426,2],[5,0,426,3]],[[4,0,428,2]],[],[],[],[],[],[[7,0,434,5]],[[4,0,435,9],[19,0,435,24],[20,0,435,28],[27,0,435,56],[29,0,435,58],[33,0,435,65],[35,0,435,67],[55,0,435,96],[59,0,435,100]],[[8,0,436,4],[65,0,436,61]],[[8,0,437,4],[14,0,437,10],[19,0,437,15],[22,0,437,30],[32,0,437,40],[33,0,437,41],[37,0,437,45],[38,0,437,46],[40,0,437,48],[41,0,437,49],[50,0,437,58],[51,0,437,59],[52,0,437,60]],[[8,0,439,4],[12,0,439,8],[29,0,439,25],[31,0,439,27]],[[12,0,440,6],[16,0,440,10],[19,0,440,13],[34,0,440,28],[35,0,440,29],[39,0,440,33],[41,0,440,35],[46,0,440,40],[47,0,440,41],[48,0,440,42]],[[9,0,441,5]],[[8,0,443,4],[15,0,443,11],[16,0,443,12],[23,0,443,19],[24,0,443,20],[25,0,443,21],[31,0,443,27],[33,0,443,29],[35,0,443,31]],[[12,0,444,6],[17,0,444,11],[18,0,444,12],[24,0,444,18],[25,0,444,19],[31,0,444,25],[33,0,444,27],[37,0,444,31],[38,0,444,32],[39,0,444,33]],[[8,0,445,4],[9,0,445,5],[10,0,445,6],[11,0,445,7]],[[8,0,447,4],[15,0,447,11],[19,0,447,15],[20,0,447,16],[32,0,447,28],[33,0,447,29],[38,0,447,34],[39,0,447,35],[40,0,447,36]],[[4,0,448,2],[5,0,448,3]],[[4,0,451,2]],[],[],[],[],[],[],[],[],[[7,0,460,5]],[[4,0,461,9],[16,0,461,21],[17,0,461,25],[23,0,461,50],[25,0,462,25],[30,0,462,38],[32,0,463,25],[55,0,463,70],[57,0,463,72],[59,0,464,25],[79,0,464,69]],[[8,0,466,4],[12,0,466,8],[32,0,466,28],[36,0,466,32],[40,0,466,36],[42,0,466,38]],[[12,0,467,6],[32,0,467,26],[35,0,467,29],[55,0,467,74],[56,0,467,75]],[[9,0,468,5]],[[8,0,470,4],[14,0,470,10],[27,0,470,23],[30,0,470,47],[36,0,470,53],[37,0,470,54],[43,0,470,60],[44,0,470,61]],[[8,0,472,4],[15,0,472,11],[19,0,472,15],[20,0,472,16],[33,0,472,29],[34,0,472,30],[40,0,472,36],[42,0,472,38],[62,0,472,58],[63,0,472,59],[64,0,472,60],[68,0,472,64]],[[8,0,473,6],[21,0,473,19]],[[8,0,474,6],[12,0,474,10],[13,0,474,11],[14,0,474,12],[15,0,474,13],[17,0,475,6],[20,0,475,9],[21,0,475,10],[22,0,475,11],[29,0,475,21],[31,0,475,23],[33,0,475,25],[34,0,475,26],[38,0,475,30],[39,0,475,31],[58,0,475,50],[59,0,475,51],[66,0,475,58],[68,0,475,60],[88,0,475,80],[89,0,475,81],[90,0,475,82],[92,0,476,6],[101,0,476,15],[102,0,476,16],[103,0,476,17],[110,0,476,27],[112,0,476,29],[114,0,476,31]],[[12,0,477,8],[19,0,477,15],[23,0,477,19],[24,0,477,20],[28,0,477,24],[29,0,477,25],[36,0,477,32],[38,0,477,34],[51,0,477,47],[53,0,477,49],[73,0,477,69],[75,0,477,71],[80,0,477,76],[82,0,477,78],[87,0,477,83],[88,0,477,84],[89,0,477,85],[93,0,477,89],[94,0,477,91],[120,0,477,117],[121,0,478,10],[129,0,478,18],[130,0,478,19],[137,0,478,26],[138,0,478,27],[140,0,478,29]],[[16,0,479,12],[23,0,479,19],[27,0,479,23],[28,0,479,24],[35,0,479,31],[36,0,479,32],[42,0,479,38],[44,0,479,40],[64,0,479,60],[65,0,479,61],[66,0,479,62],[70,0,479,66],[71,0,480,14],[74,0,480,17],[75,0,480,18],[78,0,480,21],[80,0,480,23],[81,0,480,24],[88,0,480,31],[89,0,480,32],[90,0,480,33],[113,0,480,56],[114,0,481,13],[115,0,481,14]],[[12,0,482,10],[13,0,482,11],[14,0,482,12],[15,0,483,9],[16,0,483,10]],[[8,0,484,6],[9,0,484,7],[10,0,484,8],[12,0,485,6],[22,0,485,16],[23,0,485,17],[26,0,485,20],[27,0,485,21],[29,0,485,23]],[[12,0,486,8],[19,0,486,15],[20,0,486,16],[23,0,486,19],[24,0,486,20],[51,0,486,47],[54,0,486,50],[57,0,486,53],[58,0,486,54],[59,0,486,55]],[[12,0,487,8],[18,0,487,14],[21,0,487,17],[22,0,487,18]],[[8,0,488,6],[9,0,488,7],[10,0,488,8],[12,0,489,6],[16,0,489,10],[17,0,489,11],[18,0,489,12],[19,0,489,13],[20,0,490,5],[21,0,490,6]],[[4,0,492,2],[5,0,492,3]],[[4,0,494,2],[28,0,494,26]],[[4,0,497,2]],[],[],[],[],[],[],[],[],[[7,0,506,5]],[[4,0,507,9],[20,0,507,25],[21,0,507,55],[26,0,507,80],[28,0,508,55],[37,0,508,72],[39,0,509,55],[46,0,509,70],[48,0,510,55],[55,0,510,62],[58,0,510,65],[63,0,510,70]],[[8,0,512,4],[12,0,512,8],[21,0,512,17],[25,0,512,21],[29,0,512,25],[33,0,512,29],[40,0,512,36],[44,0,512,40],[48,0,512,44],[52,0,512,48],[61,0,512,57],[66,0,512,62],[73,0,512,69],[77,0,512,73],[82,0,512,78],[83,0,512,79],[89,0,512,85],[93,0,512,89],[94,0,512,90],[96,0,512,92],[98,0,512,94],[130,0,512,126]],[[12,0,513,6],[19,0,513,13],[21,0,513,15],[23,0,513,17],[24,0,513,18]],[[9,0,514,5]],[[8,0,516,4],[12,0,516,8],[17,0,516,13],[18,0,516,14],[19,0,516,15],[20,0,516,16],[22,0,516,18],[39,0,516,35],[43,0,516,39],[47,0,516,43],[49,0,516,45]],[[12,0,517,6],[18,0,517,12],[23,0,517,17],[26,0,517,39]],[[16,0,518,8],[20,0,518,12],[22,0,518,14],[75,0,518,67]],[[16,0,519,8],[20,0,519,12],[22,0,519,14],[33,0,519,25]],[[16,0,520,8],[23,0,520,15],[25,0,520,17],[124,0,520,116]],[[13,0,521,7],[14,0,521,8]],[[12,0,522,6],[18,0,522,12],[23,0,522,17],[24,0,522,18]],[[9,0,523,5]],[[8,0,525,4],[14,0,525,10],[19,0,525,15],[22,0,525,18],[26,0,525,22],[27,0,525,23],[60,0,525,56],[61,0,525,57],[66,0,525,62],[68,0,525,64],[77,0,525,73],[79,0,525,75],[86,0,525,82],[88,0,525,84],[95,0,525,91],[96,0,525,92],[97,0,525,93]],[[8,0,527,4],[15,0,527,11],[19,0,527,15],[20,0,527,16],[32,0,527,28],[33,0,527,29],[38,0,527,34],[39,0,527,35],[40,0,527,36]],[[4,0,528,2],[5,0,528,3]],[[4,0,530,2]],[],[],[],[],[],[],[],[],[[7,0,539,5]],[[4,0,540,12],[37,0,540,45],[38,0,540,75],[43,0,540,100],[45,0,541,75],[54,0,541,92],[56,0,542,75],[63,0,542,90],[65,0,543,75],[72,0,543,82],[75,0,543,85],[80,0,543,90]],[[8,0,545,4],[14,0,545,10],[25,0,545,21],[28,0,545,24],[32,0,545,28],[33,0,545,29],[36,0,545,32],[37,0,545,33],[46,0,545,42],[48,0,545,44],[55,0,545,51],[56,0,545,52],[57,0,545,53]],[[8,0,546,4],[14,0,546,10],[19,0,546,15],[22,0,546,30],[32,0,546,40],[33,0,546,41],[37,0,546,45],[38,0,546,46],[40,0,546,48],[41,0,546,49],[50,0,546,58],[51,0,546,59],[52,0,546,60]],[[8,0,548,4],[12,0,548,8],[21,0,548,17],[25,0,548,21],[29,0,548,25],[33,0,548,29],[40,0,548,36],[44,0,548,40],[48,0,548,44],[52,0,548,48],[61,0,548,57],[66,0,548,62],[73,0,548,69],[75,0,548,71],[77,0,548,73],[109,0,548,105]],[[12,0,549,6],[19,0,549,13],[24,0,549,18],[25,0,549,19]],[[9,0,550,5]],[[8,0,552,4],[12,0,552,8],[21,0,552,37],[22,0,552,38]],[[8,0,554,4],[12,0,554,8],[19,0,554,15],[21,0,554,17]],[[12,0,555,6],[21,0,555,15],[24,0,555,18],[30,0,555,24],[31,0,555,25],[37,0,555,31],[38,0,555,32],[40,0,555,34],[42,0,555,36],[47,0,555,41],[48,0,555,42],[49,0,555,43]],[[9,0,556,5]],[[13,0,556,11]],[[12,0,557,6],[21,0,557,15],[24,0,557,18],[29,0,557,23],[30,0,557,24]],[[9,0,558,5]],[[8,0,560,4],[23,0,560,19],[24,0,560,23],[33,0,560,32],[35,0,560,34],[44,0,560,43],[46,0,560,45],[53,0,560,52],[54,0,560,53],[55,0,560,54]],[[8,0,562,4],[14,0,562,10],[31,0,562,27],[34,0,562,50],[43,0,562,59],[44,0,562,60],[49,0,562,65],[50,0,562,66],[61,0,562,77],[62,0,562,78],[63,0,562,79]],[[8,0,564,4],[12,0,564,8],[13,0,564,9],[16,0,564,12],[27,0,564,23],[28,0,564,24]],[[8,0,565,4],[13,0,565,9],[19,0,565,15],[23,0,565,19],[27,0,565,23],[44,0,565,40],[46,0,565,42]],[[12,0,566,6],[16,0,566,10],[17,0,566,11],[24,0,566,18],[26,0,566,20],[28,0,566,22],[103,0,566,97]],[[16,0,567,8],[20,0,567,12],[21,0,567,13],[26,0,567,18],[29,0,567,21],[30,0,567,22],[31,0,567,23]],[[13,0,568,7]],[[12,0,569,6],[18,0,569,12],[21,0,569,15],[24,0,569,18],[38,0,569,32],[39,0,569,33],[43,0,569,37],[44,0,569,38],[61,0,569,55],[62,0,569,56],[66,0,569,60],[68,0,569,62],[72,0,569,66],[73,0,569,67],[75,0,569,69],[76,0,569,70],[85,0,569,79],[86,0,569,101],[87,0,569,102]],[[12,0,570,6],[17,0,570,11],[18,0,570,12],[24,0,570,18],[25,0,570,19],[28,0,570,22],[30,0,570,24],[32,0,570,25],[37,0,570,30],[39,0,570,32],[40,0,570,33],[42,0,570,34],[43,0,570,35],[44,0,570,36]],[[12,0,571,6],[13,0,571,7],[15,0,571,9],[16,0,571,10]],[[9,0,572,5]],[[8,0,574,4],[15,0,574,11],[20,0,574,16],[21,0,574,17]],[[4,0,575,2],[5,0,575,3]],[[4,0,577,2]],[],[],[],[],[],[],[[7,0,584,5]],[[4,0,585,9],[29,0,585,34],[30,0,585,64],[35,0,585,89],[37,0,586,64],[50,0,586,85],[52,0,587,64],[75,0,587,109],[77,0,587,111],[79,0,588,64],[89,0,588,83],[94,0,588,88]],[[8,0,590,4],[12,0,590,8],[21,0,590,37],[22,0,590,38]],[[8,0,592,4],[12,0,592,8],[19,0,592,15],[21,0,592,17]],[[12,0,593,6],[21,0,593,15],[24,0,593,18],[30,0,593,24],[31,0,593,25],[37,0,593,31],[38,0,593,32],[40,0,593,34],[42,0,593,36],[47,0,593,41],[48,0,593,42],[49,0,593,43]],[[9,0,594,5]],[[13,0,594,11]],[[12,0,595,6],[21,0,595,15],[24,0,595,18],[29,0,595,23],[30,0,595,24]],[[9,0,596,5]],[[8,0,598,4],[14,0,598,10],[26,0,598,22],[29,0,598,25],[38,0,598,34],[39,0,598,35],[52,0,598,48],[53,0,598,49],[54,0,598,50]],[[8,0,600,4],[82,0,600,78]],[[8,0,601,4],[15,0,601,11],[19,0,601,15],[20,0,601,16],[35,0,601,31],[36,0,601,32],[48,0,601,44],[49,0,601,45],[66,0,601,62],[67,0,601,63],[70,0,601,66],[72,0,601,68],[92,0,601,88],[93,0,601,89],[94,0,601,90],[98,0,601,94],[99,0,602,6],[102,0,602,9],[103,0,602,10],[104,0,602,11],[109,0,602,16],[111,0,602,18],[113,0,602,20]],[[12,0,603,8],[101,0,603,97]],[[12,0,604,8],[21,0,604,17],[22,0,604,18],[26,0,604,22],[27,0,604,23],[31,0,604,27],[32,0,604,28],[34,0,604,30],[35,0,604,31],[39,0,604,35],[40,0,604,36],[45,0,604,41],[46,0,604,42],[47,0,604,43],[48,0,604,44],[85,0,604,81]],[[12,0,605,8],[21,0,605,17],[22,0,605,18],[28,0,605,24],[29,0,605,25],[42,0,605,38],[44,0,605,40],[45,0,605,41],[46,0,605,42],[47,0,605,43]],[[12,0,607,8],[16,0,607,12],[17,0,607,13],[54,0,607,50],[55,0,607,54],[64,0,607,63],[66,0,607,65],[71,0,607,70],[72,0,607,71],[73,0,607,72]],[[12,0,609,8],[19,0,609,15],[24,0,609,20],[25,0,609,21]],[[8,0,610,6],[9,0,610,7],[10,0,610,8],[12,0,612,6],[21,0,612,15],[22,0,612,16],[23,0,612,17],[28,0,612,22],[30,0,612,24],[32,0,612,26],[33,0,612,27],[37,0,612,31],[38,0,612,32],[50,0,612,44],[51,0,612,45],[56,0,612,50],[57,0,612,51],[58,0,612,52],[59,0,613,5],[60,0,613,6]],[[4,0,614,2],[5,0,614,3]],[[4,0,616,2]],[],[],[],[],[],[],[[7,0,623,5]],[[4,0,624,9],[30,0,624,35],[31,0,624,65],[36,0,624,90],[38,0,625,65],[53,0,625,90],[55,0,626,65],[78,0,626,110],[80,0,626,112],[82,0,627,65],[92,0,627,84],[97,0,627,89]],[[8,0,629,4],[12,0,629,8],[21,0,629,37],[22,0,629,38]],[[8,0,631,4],[12,0,631,8],[19,0,631,15],[21,0,631,17]],[[12,0,632,6],[21,0,632,15],[24,0,632,18],[30,0,632,24],[31,0,632,25],[37,0,632,31],[38,0,632,32],[40,0,632,34],[42,0,632,36],[47,0,632,41],[48,0,632,42],[49,0,632,43]],[[9,0,633,5]],[[13,0,633,11]],[[12,0,634,6],[21,0,634,15],[24,0,634,18],[29,0,634,23],[30,0,634,24]],[[9,0,635,5]],[[8,0,637,4],[17,0,637,13],[18,0,637,14],[22,0,637,18],[23,0,637,19],[27,0,637,23],[28,0,637,24],[30,0,637,26],[31,0,637,27],[35,0,637,31],[36,0,637,32],[41,0,637,37],[42,0,637,38],[43,0,637,39],[44,0,637,40],[81,0,637,77]],[[8,0,639,4],[14,0,639,10],[27,0,639,23],[30,0,639,26],[39,0,639,35],[40,0,639,36],[46,0,639,42],[47,0,639,43],[48,0,639,44],[52,0,639,48],[54,0,639,50],[55,0,639,51],[57,0,639,53],[59,0,639,55]],[[12,0,640,6],[19,0,640,13],[34,0,640,28],[35,0,640,29],[44,0,640,38],[45,0,640,39],[47,0,640,41],[48,0,640,42],[50,0,640,44],[51,0,640,45],[53,0,640,47],[58,0,640,52],[59,0,640,53],[60,0,640,54],[65,0,640,59],[66,0,640,60],[67,0,640,61],[68,0,640,62]],[[8,0,641,4],[9,0,641,5],[10,0,641,6],[11,0,641,7]],[[8,0,643,4],[62,0,643,58]],[[8,0,644,4],[52,0,644,48]],[[8,0,645,4],[23,0,645,19],[24,0,645,20],[28,0,645,24],[30,0,645,26],[31,0,645,27]],[[8,0,646,4],[13,0,646,9],[17,0,646,13],[18,0,646,14],[21,0,646,17],[36,0,646,32],[37,0,646,33],[43,0,646,39],[46,0,646,42],[47,0,646,43],[49,0,646,45],[50,0,646,46],[54,0,646,50],[55,0,646,51],[57,0,646,53],[58,0,646,54],[60,0,646,56],[62,0,646,58]],[[12,0,647,6],[21,0,647,15],[22,0,647,16],[28,0,647,22],[29,0,647,23],[44,0,647,38],[45,0,647,39],[46,0,647,40],[47,0,647,41],[49,0,647,43],[50,0,647,44],[51,0,647,45],[52,0,647,46]],[[9,0,648,5]],[[8,0,650,4],[14,0,650,10],[25,0,650,21],[28,0,650,59],[30,0,650,61],[31,0,650,62]],[[8,0,652,4],[91,0,652,87]],[[8,0,653,4],[21,0,653,17],[22,0,653,18],[29,0,653,25],[30,0,653,26],[42,0,653,38],[43,0,653,39],[45,0,653,41]],[[12,0,655,6],[18,0,655,12],[22,0,655,16],[25,0,655,19],[29,0,655,23],[30,0,655,24],[56,0,655,50],[57,0,655,51],[69,0,655,63],[70,0,655,64],[87,0,655,81],[88,0,655,82],[91,0,655,85],[93,0,655,87],[113,0,655,107],[114,0,655,108],[115,0,655,109],[119,0,655,113],[120,0,656,8],[124,0,656,12],[125,0,656,13],[126,0,656,14],[127,0,656,15],[128,0,657,7],[129,0,657,8]],[[12,0,658,6],[23,0,658,17],[24,0,658,18],[28,0,658,22],[29,0,658,23],[33,0,658,27],[34,0,658,28],[35,0,658,29]],[[8,0,659,4],[9,0,659,5],[10,0,659,6],[11,0,659,7]],[[8,0,662,4],[15,0,662,11],[23,0,662,19],[24,0,662,20],[35,0,662,31],[36,0,662,32],[37,0,662,33],[41,0,662,37],[42,0,663,6],[46,0,663,10],[47,0,663,11],[48,0,663,12],[49,0,663,13],[51,0,664,6],[54,0,664,9],[55,0,664,10],[56,0,664,11],[69,0,664,24],[71,0,664,26],[73,0,664,28]],[[12,0,665,8],[78,0,665,74]],[[12,0,666,8],[16,0,666,12],[23,0,666,19],[26,0,666,43],[28,0,666,45],[29,0,666,46]],[[12,0,668,8],[25,0,668,21],[26,0,668,22],[33,0,668,29],[34,0,668,30],[38,0,668,34],[39,0,668,35],[41,0,668,37]],[[16,0,669,10],[23,0,669,17],[26,0,669,20],[33,0,669,27],[34,0,669,28],[40,0,669,34],[41,0,669,35],[45,0,669,39],[46,0,669,40],[47,0,669,41]],[[12,0,670,8],[13,0,670,9],[14,0,670,10],[15,0,670,11]],[[12,0,672,8],[19,0,672,15],[26,0,672,22],[27,0,672,23]],[[8,0,673,6],[9,0,673,7],[10,0,673,8],[12,0,674,6],[15,0,674,9],[16,0,674,10],[17,0,674,11],[24,0,674,53],[26,0,674,55],[28,0,674,57],[29,0,674,58],[33,0,674,62],[34,0,674,63],[62,0,674,91],[63,0,674,92],[70,0,674,99],[71,0,674,100],[72,0,674,101],[74,0,675,6],[77,0,675,9],[78,0,675,10],[79,0,675,11],[84,0,675,28],[86,0,675,30],[88,0,675,32],[89,0,675,33],[93,0,675,37],[94,0,675,38],[131,0,675,75],[132,0,675,79],[141,0,675,88],[143,0,675,90],[148,0,675,95],[149,0,675,96],[150,0,675,97],[152,0,676,6],[161,0,676,15],[162,0,676,16],[163,0,676,17],[168,0,676,22],[170,0,676,24],[172,0,676,26],[173,0,676,27],[177,0,676,31],[178,0,676,32],[190,0,676,44],[191,0,676,45],[196,0,676,50],[197,0,676,51],[198,0,676,52],[199,0,677,5],[200,0,677,6]],[[4,0,678,2],[5,0,678,3]],[[4,0,680,2]],[],[],[],[],[],[],[],[[7,0,688,5]],[[4,0,689,12],[41,0,689,49],[42,0,690,4],[47,0,690,29],[49,0,691,4],[57,0,691,24],[67,0,691,34],[68,0,691,35],[72,0,691,39],[73,0,691,40],[75,0,691,42],[76,0,691,43],[85,0,691,52],[86,0,691,53]],[[8,0,694,4],[13,0,694,9],[14,0,694,10],[21,0,694,17],[22,0,694,18],[23,0,694,19],[27,0,694,23],[29,0,694,25],[34,0,694,30],[36,0,694,32],[38,0,694,34]],[[12,0,695,6],[16,0,695,10],[20,0,695,14],[21,0,695,15],[26,0,695,20],[31,0,695,25],[36,0,695,30],[38,0,695,32]],[[16,0,696,8],[20,0,696,12],[21,0,696,13],[26,0,696,18],[29,0,696,21],[34,0,696,26],[35,0,696,27],[36,0,696,28],[111,0,696,103]],[[16,0,697,8],[22,0,697,14],[25,0,697,17],[28,0,697,20],[42,0,697,34],[43,0,697,35],[47,0,697,39],[48,0,697,40],[65,0,697,57],[66,0,697,58],[70,0,697,62],[72,0,697,64],[76,0,697,68],[77,0,697,69],[79,0,697,71],[80,0,697,72],[89,0,697,81],[90,0,697,103],[91,0,697,104]],[[16,0,698,8],[21,0,698,13],[22,0,698,14],[28,0,698,20],[29,0,698,21],[32,0,698,24],[34,0,698,26],[36,0,698,27],[41,0,698,32],[43,0,698,33],[44,0,698,34],[45,0,698,35]],[[13,0,699,7]],[[8,0,700,4],[9,0,700,5],[10,0,700,6],[11,0,700,7]],[[8,0,702,4],[15,0,702,11],[20,0,702,16],[21,0,702,17]],[[4,0,703,2],[5,0,703,3]],[[4,0,705,9],[29,0,705,34],[30,0,706,4],[43,0,706,37],[45,0,707,4],[57,0,707,36],[59,0,708,4],[72,0,708,25],[74,0,709,4],[86,0,709,24],[88,0,710,4],[104,0,710,28],[106,0,711,4],[137,0,711,60],[139,0,712,4],[170,0,712,35],[173,0,712,38],[177,0,712,42],[179,0,713,4],[186,0,713,11],[189,0,713,14],[194,0,713,19]],[[8,0,715,4],[14,0,715,10],[19,0,715,15],[22,0,715,30],[26,0,715,34],[27,0,715,35],[64,0,715,72],[65,0,715,73],[78,0,715,86],[80,0,716,6],[92,0,716,18],[94,0,717,6],[107,0,717,19],[109,0,718,6],[121,0,718,18],[123,0,719,6],[139,0,719,22],[141,0,720,6],[172,0,720,37],[174,0,721,6],[205,0,721,37],[207,0,722,6],[214,0,722,13],[215,0,722,14],[216,0,722,15]],[[8,0,724,4],[15,0,724,11],[19,0,724,15],[20,0,724,16],[32,0,724,28],[33,0,724,29],[38,0,724,34],[39,0,724,35],[40,0,724,36]],[[4,0,725,2],[5,0,725,3]],[[4,0,728,2],[43,0,728,41]],[[4,0,730,2]],[],[],[],[],[[7,0,735,5]],[[4,0,736,9],[11,0,736,16],[12,0,736,17],[18,0,736,42],[20,0,736,44],[43,0,736,89],[45,0,736,91]],[[8,0,738,4],[12,0,738,8],[32,0,738,28],[36,0,738,32],[40,0,738,36],[44,0,738,40],[64,0,738,60],[65,0,738,61],[71,0,738,67],[76,0,738,72],[77,0,738,73],[79,0,738,75]],[[12,0,739,6],[54,0,739,48]],[[12,0,740,6],[19,0,740,13],[23,0,740,17],[24,0,740,18],[26,0,740,20],[27,0,740,21],[33,0,740,27],[34,0,740,28],[40,0,740,34],[41,0,740,35],[42,0,740,36]],[[9,0,741,5]],[[8,0,743,4],[15,0,743,11],[19,0,743,15],[20,0,743,16],[46,0,743,42],[47,0,743,43],[53,0,743,49],[55,0,743,51],[75,0,743,71],[76,0,743,72],[77,0,743,73],[81,0,743,77],[82,0,744,6],[91,0,744,15],[92,0,744,16],[93,0,744,17],[103,0,744,62],[105,0,744,64],[107,0,744,66],[108,0,744,67],[112,0,744,71],[113,0,744,72],[134,0,744,93],[135,0,744,94],[145,0,744,104],[146,0,744,105],[147,0,744,106],[148,0,749,5],[149,0,749,6]],[[4,0,750,2],[5,0,750,3]],[[4,0,752,2]],[],[],[],[],[],[[7,0,758,5]],[[4,0,759,9],[19,0,759,24],[20,0,759,25],[26,0,759,50],[28,0,760,25],[51,0,760,70],[53,0,760,72],[55,0,761,25],[63,0,761,45],[73,0,761,55],[74,0,761,56],[78,0,761,60],[79,0,761,61],[81,0,761,63],[82,0,761,64],[91,0,761,73],[92,0,761,74]],[[8,0,763,4],[12,0,763,8],[32,0,763,28],[36,0,763,32],[40,0,763,36],[44,0,763,40],[64,0,763,60],[65,0,763,61],[71,0,763,67],[76,0,763,72],[77,0,763,73],[79,0,763,75]],[[12,0,764,6],[54,0,764,48]],[[12,0,765,6],[17,0,765,11],[18,0,765,12],[24,0,765,18],[25,0,765,19],[31,0,765,25],[32,0,765,26],[33,0,765,27]],[[12,0,766,6],[19,0,766,13],[21,0,766,15],[22,0,766,16],[27,0,766,21],[28,0,766,22],[29,0,766,23]],[[9,0,767,5]],[[8,0,769,4],[15,0,769,11],[19,0,769,15],[20,0,769,16],[46,0,769,42],[47,0,769,43],[53,0,769,49],[55,0,769,51],[75,0,769,71],[76,0,769,72],[77,0,769,73],[81,0,769,77],[82,0,770,6],[85,0,770,9],[86,0,770,10],[87,0,770,11],[94,0,770,53],[96,0,770,55],[98,0,770,57],[99,0,770,58],[103,0,770,62],[104,0,770,63],[132,0,770,91],[133,0,770,92],[140,0,770,99],[141,0,770,100],[142,0,770,101],[144,0,771,6],[148,0,771,10],[149,0,771,11],[150,0,771,12],[151,0,771,13],[152,0,772,5],[153,0,772,6]],[[4,0,773,2],[5,0,773,3]],[[4,0,775,9],[26,0,775,31],[27,0,775,32],[35,0,775,50]],[[8,0,776,4],[14,0,776,10],[21,0,776,17],[24,0,777,6],[32,0,777,14],[33,0,777,15],[36,0,777,18],[37,0,777,19],[41,0,777,23],[42,0,777,24],[44,0,777,26],[45,0,777,27],[59,0,777,41],[60,0,777,42],[64,0,777,46],[66,0,777,48],[70,0,777,52],[71,0,777,53],[73,0,777,55],[74,0,777,56],[83,0,777,65],[84,0,777,87],[85,0,777,88],[86,0,777,89]],[[8,0,779,4],[15,0,779,11],[19,0,779,15],[20,0,779,16],[41,0,779,37],[42,0,779,38],[49,0,779,45],[50,0,779,46],[51,0,779,47]],[[4,0,780,2],[5,0,780,3]],[[4,0,782,2]],[],[],[],[],[[7,0,787,5]],[[4,0,788,9],[19,0,788,24],[20,0,788,25],[27,0,788,53],[29,0,788,55],[52,0,788,100],[54,0,788,102]],[[8,0,790,4],[12,0,790,8],[32,0,790,28],[36,0,790,32],[40,0,790,36],[44,0,790,40],[64,0,790,60],[65,0,790,61],[71,0,790,67],[76,0,790,72],[77,0,790,73],[79,0,790,75]],[[12,0,791,6],[19,0,791,13],[23,0,791,17],[24,0,791,18],[45,0,791,39],[46,0,791,40],[53,0,791,47],[54,0,791,48],[55,0,791,49]],[[9,0,792,5]],[[8,0,794,4],[14,0,794,10],[26,0,794,22],[29,0,794,49],[31,0,794,51],[32,0,794,52]],[[8,0,796,4],[15,0,796,11],[16,0,796,12],[23,0,796,19],[24,0,796,20],[30,0,796,26],[31,0,796,27],[33,0,796,29]],[[12,0,797,6],[18,0,797,12],[26,0,797,20],[29,0,797,23],[33,0,797,27],[34,0,797,28],[60,0,797,54],[61,0,797,55],[67,0,797,61],[69,0,797,63],[89,0,797,83],[90,0,797,84],[91,0,797,85]],[[12,0,798,6],[24,0,798,18],[25,0,798,19],[29,0,798,23],[30,0,798,24],[38,0,798,32],[39,0,798,33],[40,0,798,34]],[[8,0,799,4],[9,0,799,5],[10,0,799,6],[11,0,799,7]],[[8,0,801,4],[15,0,801,11],[28,0,801,24],[29,0,801,25],[41,0,801,37],[42,0,801,38],[43,0,801,39],[47,0,801,43]],[[8,0,802,6],[44,0,802,42]],[[8,0,803,6],[11,0,803,9],[12,0,803,10],[13,0,803,11],[18,0,803,23],[20,0,803,25],[22,0,803,27]],[[12,0,804,8],[16,0,804,12],[30,0,804,26],[33,0,804,50],[35,0,804,52],[36,0,804,53]],[[12,0,805,8],[17,0,805,13],[18,0,805,14],[25,0,805,21],[26,0,805,22],[30,0,805,26],[31,0,805,27],[33,0,805,29]],[[16,0,806,10],[30,0,806,24],[33,0,806,27],[47,0,806,41],[48,0,806,42],[54,0,806,48],[55,0,806,49],[59,0,806,53],[60,0,806,54],[61,0,806,55]],[[12,0,807,8],[13,0,807,9],[14,0,807,10],[15,0,807,11]],[[12,0,808,8],[19,0,808,15],[33,0,808,29],[34,0,808,30]],[[8,0,809,6],[9,0,809,7],[10,0,809,8]],[[8,0,810,6],[44,0,810,42]],[[8,0,811,6],[17,0,811,15],[18,0,811,16],[19,0,811,17],[29,0,811,48],[31,0,811,50],[33,0,811,52],[34,0,811,53],[38,0,811,57],[39,0,811,58],[60,0,811,79],[61,0,811,80],[71,0,811,90],[72,0,811,91],[73,0,811,92],[74,0,816,5],[75,0,816,6]],[[4,0,817,2],[5,0,817,3]],[[4,0,819,2]],[],[],[],[],[],[],[[7,0,826,5]],[[4,0,827,9],[21,0,827,26],[22,0,827,27],[35,0,827,61],[37,0,827,63],[60,0,827,108],[62,0,827,110]],[[8,0,828,4],[15,0,828,11],[19,0,828,15],[20,0,828,16],[59,0,828,55],[60,0,828,56],[73,0,828,69],[75,0,828,71],[95,0,828,91],[96,0,828,92],[97,0,828,93],[101,0,828,97],[102,0,829,6],[111,0,829,15],[112,0,829,16],[119,0,829,23],[120,0,829,24],[122,0,829,26],[123,0,829,27],[127,0,829,31],[128,0,829,32],[143,0,829,47],[144,0,829,48],[151,0,829,55],[152,0,829,56],[153,0,829,57],[154,0,830,5],[155,0,830,6],[159,0,830,10],[160,0,831,6],[164,0,831,10],[165,0,831,11],[166,0,831,12],[167,0,831,13],[168,0,832,5],[169,0,832,6]],[[4,0,833,2],[5,0,833,3]],[[4,0,836,2]],[],[],[],[],[],[[7,0,842,5]],[[4,0,843,9],[20,0,843,25],[21,0,843,26],[28,0,843,41],[30,0,843,43],[53,0,843,88],[55,0,843,90]],[[8,0,844,4],[14,0,844,10],[20,0,844,16],[23,0,844,19],[37,0,844,33],[38,0,844,34],[45,0,844,41],[47,0,844,43],[51,0,844,47],[52,0,844,48],[54,0,844,50],[55,0,844,51],[64,0,844,60],[65,0,844,82],[66,0,844,83]],[[8,0,845,4],[15,0,845,11],[19,0,845,15],[20,0,845,16],[27,0,845,23],[28,0,845,24],[34,0,845,30],[36,0,845,32],[56,0,845,52],[57,0,845,53],[58,0,845,54]],[[4,0,846,2],[5,0,846,3]],[[4,0,848,2]],[],[],[],[],[],[],[[7,0,855,5]],[[4,0,856,9],[15,0,856,20],[16,0,856,24],[20,0,856,41],[22,0,856,43],[45,0,856,88],[47,0,856,90]],[[8,0,858,4],[14,0,858,10],[21,0,858,17],[24,0,858,20],[28,0,858,24],[29,0,858,25],[58,0,858,54],[59,0,858,55],[63,0,858,59],[65,0,858,61],[85,0,858,81],[86,0,858,82],[87,0,858,83]],[[8,0,860,4],[15,0,860,11],[19,0,860,15],[20,0,860,16],[41,0,860,37],[42,0,860,38],[49,0,860,45],[50,0,860,46],[51,0,860,47],[55,0,860,51]],[[8,0,861,6],[105,0,861,103]],[[8,0,862,6],[73,0,862,71]],[[8,0,863,6],[32,0,863,30]],[[8,0,864,6],[14,0,864,12]],[[8,0,865,6],[12,0,865,10],[13,0,865,11],[14,0,865,12],[15,0,865,13],[16,0,866,5],[17,0,866,6]],[[4,0,867,2],[5,0,867,3]],[[4,0,892,9],[23,0,892,28],[24,0,892,32],[28,0,892,80],[30,0,893,32],[53,0,893,78],[55,0,893,80],[57,0,894,32],[84,0,894,69],[86,0,894,71]],[[8,0,896,4],[99,0,896,95]],[[8,0,897,4],[40,0,897,36]],[[8,0,899,4],[12,0,899,8],[17,0,899,13],[18,0,899,14],[25,0,899,21],[26,0,899,22],[30,0,899,26],[31,0,899,27],[33,0,899,29]],[[12,0,901,6],[18,0,901,12],[28,0,901,22],[31,0,901,35],[33,0,901,37],[34,0,901,38]],[[12,0,903,6],[16,0,903,10],[17,0,903,11],[24,0,903,18],[25,0,903,19],[26,0,903,20],[27,0,903,21],[29,0,903,23]],[[16,0,904,8],[26,0,904,18],[27,0,904,19],[31,0,904,23],[32,0,905,10],[36,0,905,14],[37,0,905,15],[68,0,905,46],[69,0,905,47],[70,0,905,48],[72,0,905,50],[92,0,905,70],[94,0,905,72],[118,0,905,96],[119,0,905,102],[120,0,906,9],[121,0,906,10]],[[12,0,907,6],[13,0,907,7],[14,0,907,8],[15,0,907,9]],[[12,0,909,6],[19,0,909,13],[29,0,909,23],[30,0,909,24]],[[9,0,911,5]],[[13,0,911,11]],[[12,0,912,6],[19,0,912,13],[23,0,912,17],[24,0,912,18],[55,0,912,49],[56,0,912,50],[60,0,912,54],[62,0,912,56],[82,0,912,76],[84,0,912,78],[108,0,912,102],[109,0,912,108],[110,0,912,109]],[[9,0,913,5]],[[4,0,914,2],[5,0,914,3]],[[4,0,917,2],[54,0,917,52]],[[4,0,919,2]],[],[],[],[],[],[],[],[[7,0,927,5]],[[4,0,928,12],[23,0,928,31],[24,0,928,35],[30,0,928,65],[32,0,929,35],[51,0,929,73],[68,0,929,90],[69,0,929,91],[88,0,929,110]],[[8,0,932,4],[15,0,932,11],[19,0,932,15],[20,0,932,16],[22,0,932,18],[23,0,932,19],[26,0,932,22],[27,0,932,23],[33,0,932,29],[34,0,932,30],[35,0,932,31],[39,0,932,35],[40,0,933,6],[43,0,933,9],[44,0,933,10],[45,0,933,11],[53,0,933,37],[55,0,933,39],[57,0,933,41]],[[12,0,934,8],[16,0,934,12],[17,0,934,13],[25,0,934,21],[26,0,934,22],[32,0,934,28],[34,0,934,30],[38,0,934,34],[54,0,934,50],[59,0,934,55],[76,0,934,72],[77,0,934,73],[96,0,934,92],[98,0,934,94]],[[16,0,935,10],[22,0,935,16],[27,0,935,21],[30,0,935,43]],[[20,0,936,12],[24,0,936,16],[26,0,936,18],[44,0,936,36]],[[20,0,937,12],[24,0,937,16],[26,0,937,18],[37,0,937,29]],[[20,0,938,12],[27,0,938,19],[29,0,938,21],[100,0,938,92]],[[20,0,939,12],[26,0,939,18]],[[17,0,940,11],[18,0,940,12]],[[16,0,941,10],[22,0,941,16],[27,0,941,21],[28,0,941,22]],[[13,0,942,9]],[[8,0,943,6],[9,0,943,7],[10,0,943,8],[12,0,945,6],[18,0,945,12],[19,0,945,13],[20,0,945,14],[28,0,945,40],[30,0,945,42],[32,0,945,44]],[[12,0,946,8],[19,0,946,15],[20,0,946,16],[21,0,946,17],[29,0,946,25],[30,0,946,26],[36,0,946,32],[38,0,946,34],[42,0,946,38],[58,0,946,54],[63,0,946,59],[80,0,946,76],[81,0,946,77],[87,0,946,83],[88,0,946,84],[89,0,946,85]],[[8,0,947,6],[9,0,947,7],[10,0,947,8],[12,0,949,6],[15,0,949,9],[16,0,949,10],[17,0,949,11],[25,0,949,37],[27,0,949,39],[29,0,949,41]],[[12,0,951,8],[19,0,951,15],[20,0,951,16],[23,0,951,19],[24,0,951,20],[32,0,951,28],[33,0,951,29],[39,0,951,35],[41,0,951,37],[42,0,951,38],[43,0,951,39]],[[12,0,953,8],[16,0,953,12],[24,0,953,20],[25,0,953,21],[31,0,953,27],[33,0,953,29],[37,0,953,33],[53,0,953,49],[58,0,953,54],[75,0,953,71],[76,0,953,72],[95,0,953,91],[97,0,953,93]],[[16,0,954,10],[22,0,954,16],[26,0,954,20],[29,0,954,23],[37,0,954,31],[38,0,954,32],[42,0,954,36],[44,0,954,43],[45,0,954,44]],[[16,0,956,10],[22,0,956,16],[39,0,956,33],[42,0,956,58]],[[20,0,957,12],[22,0,957,14],[24,0,957,16],[32,0,957,24],[33,0,957,25],[35,0,957,27]],[[20,0,958,12],[23,0,958,15],[25,0,958,17],[33,0,958,25],[34,0,958,26],[37,0,958,53]],[[20,0,959,12],[24,0,959,16],[26,0,959,18],[32,0,959,24],[33,0,959,25],[37,0,959,29]],[[20,0,960,12],[28,0,960,20],[30,0,960,22],[38,0,960,30],[39,0,960,31],[45,0,960,37],[47,0,960,39]],[[20,0,961,12],[36,0,961,28],[38,0,961,30],[46,0,961,38],[47,0,961,39],[55,0,961,47]],[[17,0,962,11],[18,0,962,12]],[[16,0,964,10],[23,0,964,17],[25,0,964,18],[28,0,964,21],[32,0,964,25],[34,0,964,27],[51,0,964,44],[53,0,964,60],[54,0,964,61]],[[13,0,966,9]],[[17,0,966,15],[21,0,966,19],[37,0,966,35],[42,0,966,40],[59,0,966,57],[60,0,966,58],[71,0,966,69],[73,0,966,71],[75,0,966,73],[98,0,966,96]],[[16,0,967,10],[23,0,967,17],[27,0,967,21],[28,0,967,22]],[[13,0,968,9]],[[12,0,969,8],[19,0,969,15],[23,0,969,19],[24,0,969,20]],[[8,0,970,6],[9,0,970,7],[10,0,970,8],[12,0,971,6],[15,0,971,9],[16,0,971,10],[17,0,971,11],[21,0,971,15],[23,0,971,17],[25,0,971,19]],[[12,0,972,8],[16,0,972,12],[20,0,972,16],[24,0,972,20],[28,0,972,24],[30,0,972,26]],[[16,0,973,10],[23,0,973,17],[45,0,973,39],[46,0,973,40],[50,0,973,60],[51,0,973,61],[52,0,973,62]],[[13,0,974,9]],[[17,0,974,15]],[[16,0,975,10],[23,0,975,17],[27,0,975,21],[28,0,975,22]],[[13,0,976,9]],[[8,0,977,6],[9,0,977,7],[10,0,977,8],[11,0,978,32],[12,0,978,33]],[[4,0,979,2],[5,0,979,3]],[[4,0,981,2]],[],[],[],[],[],[[7,0,987,5]],[[4,0,988,12],[30,0,988,38],[31,0,988,42],[37,0,988,58]],[[8,0,989,4]],[],[],[[11,0,992,7]],[[8,0,993,4],[15,0,993,11],[19,0,993,15],[20,0,993,16],[22,0,993,18],[23,0,993,19],[33,0,993,29],[34,0,993,30],[40,0,993,36],[41,0,993,37],[42,0,993,38],[46,0,993,42],[47,0,994,6],[50,0,994,9],[51,0,994,10],[52,0,994,11],[56,0,994,33],[58,0,994,35],[60,0,994,37]],[[12,0,995,8],[19,0,995,15],[23,0,995,19],[24,0,995,20],[28,0,995,24],[29,0,995,25],[32,0,995,28],[33,0,995,29],[41,0,995,37],[42,0,995,38],[44,0,995,40]],[[16,0,996,10],[22,0,996,16],[26,0,996,20],[29,0,996,23],[37,0,996,31],[38,0,996,32],[42,0,996,36],[44,0,996,43],[45,0,996,44]],[[16,0,998,10],[22,0,998,16],[24,0,998,18],[27,0,998,21],[35,0,998,29],[36,0,998,30],[38,0,998,32],[39,0,998,33]],[[16,0,999,10],[22,0,999,16],[25,0,999,19],[28,0,999,22],[36,0,999,30],[37,0,999,31],[40,0,999,58],[41,0,999,59]],[[16,0,1000,10],[22,0,1000,16],[26,0,1000,20],[29,0,1000,23],[32,0,1000,26],[33,0,1000,27],[37,0,1000,31],[38,0,1000,32]],[[16,0,1001,10],[22,0,1001,16],[38,0,1001,32],[41,0,1001,35],[49,0,1001,43],[50,0,1001,44],[58,0,1001,52],[59,0,1001,53]],[[16,0,1003,10],[22,0,1003,16],[39,0,1003,33],[42,0,1003,58]],[[20,0,1004,12],[22,0,1004,14]],[[20,0,1005,12],[24,0,1005,16]],[[20,0,1006,12],[23,0,1006,15]],[[20,0,1007,12],[36,0,1007,28]],[[20,0,1008,12],[28,0,1008,20],[30,0,1008,22],[34,0,1008,26]],[[17,0,1009,11],[18,0,1009,12]],[[16,0,1011,10],[23,0,1011,17],[25,0,1011,18],[28,0,1011,21],[32,0,1011,25],[34,0,1011,27],[51,0,1011,44],[53,0,1011,60],[54,0,1011,61]],[[12,0,1012,8],[13,0,1012,9],[14,0,1012,10],[15,0,1012,11]],[[8,0,1013,6],[9,0,1013,7],[10,0,1013,8],[12,0,1014,6],[15,0,1014,9],[16,0,1014,10],[17,0,1014,11],[22,0,1014,36],[24,0,1014,38],[26,0,1014,40],[27,0,1014,41],[32,0,1014,46],[33,0,1014,47],[36,0,1014,50],[37,0,1014,51],[41,0,1014,55],[42,0,1014,56],[44,0,1014,58]],[[12,0,1015,8],[34,0,1015,30],[35,0,1015,31],[39,0,1015,35],[40,0,1015,36],[41,0,1015,37]],[[12,0,1016,8],[19,0,1016,15],[23,0,1016,19],[24,0,1016,20]],[[8,0,1017,6],[9,0,1017,7],[10,0,1017,8],[11,0,1017,9],[12,0,1018,39],[13,0,1018,40]],[[4,0,1019,2],[5,0,1019,3]],[[4,0,1021,2]],[],[],[],[],[],[],[],[[7,0,1029,5]],[[4,0,1030,12],[28,0,1030,36],[29,0,1031,4],[33,0,1031,21],[35,0,1032,4],[58,0,1032,49],[60,0,1032,51]],[[8,0,1034,4],[12,0,1034,8],[16,0,1034,12],[20,0,1034,16],[24,0,1034,20],[26,0,1034,22]],[[12,0,1035,6],[19,0,1035,13],[21,0,1035,15],[22,0,1035,16],[23,0,1035,17],[27,0,1035,21],[28,0,1035,22],[29,0,1035,23],[30,0,1035,24]],[[9,0,1036,5]],[[8,0,1037,4],[12,0,1037,8],[32,0,1037,28],[33,0,1037,29],[39,0,1037,35],[43,0,1037,39],[44,0,1037,40],[46,0,1037,42]],[[12,0,1038,6],[19,0,1038,13],[21,0,1038,15],[22,0,1038,16],[23,0,1038,17],[27,0,1038,21],[28,0,1038,22],[29,0,1038,23],[30,0,1038,24]],[[9,0,1039,5]],[[8,0,1041,4],[14,0,1041,10],[33,0,1041,29],[36,0,1041,56],[38,0,1041,58],[39,0,1041,59]],[[8,0,1043,4],[91,0,1043,87]],[[8,0,1044,4],[28,0,1044,24],[29,0,1044,25],[36,0,1044,32],[37,0,1044,33],[55,0,1044,51],[56,0,1044,52],[58,0,1044,54]],[[12,0,1046,6],[18,0,1046,12],[32,0,1046,26],[35,0,1046,29],[39,0,1046,33],[53,0,1046,47],[54,0,1046,48],[70,0,1046,64],[71,0,1046,65],[75,0,1046,69],[76,0,1046,70],[93,0,1046,87],[94,0,1046,88],[97,0,1046,91],[99,0,1046,93],[117,0,1046,111],[118,0,1046,112],[122,0,1046,116],[123,0,1046,117],[124,0,1046,118],[125,0,1046,119]],[[12,0,1047,6],[16,0,1047,10],[34,0,1047,28],[35,0,1047,29],[51,0,1047,45],[53,0,1047,47]],[[16,0,1048,8],[30,0,1048,22],[31,0,1048,23],[47,0,1048,39],[50,0,1048,42],[68,0,1048,60],[69,0,1048,61],[85,0,1048,77],[86,0,1048,78]],[[16,0,1049,8],[100,0,1049,92]],[[13,0,1050,7]],[[12,0,1051,6],[48,0,1051,42]],[[12,0,1052,6],[98,0,1052,92]],[[12,0,1053,6],[16,0,1053,10]],[[12,0,1055,6],[18,0,1055,12],[36,0,1055,30],[39,0,1055,33],[43,0,1055,37],[44,0,1055,38],[70,0,1055,64],[71,0,1055,65],[85,0,1055,79],[86,0,1055,80],[91,0,1055,85],[92,0,1055,86],[93,0,1055,87],[97,0,1055,91]],[[12,0,1056,8],[115,0,1056,111]],[[12,0,1057,8],[54,0,1057,50]],[[12,0,1058,8],[40,0,1058,36]],[[12,0,1059,8],[44,0,1059,40]],[[12,0,1060,8],[58,0,1060,54]],[[12,0,1061,8],[77,0,1061,73]],[[12,0,1062,8],[20,0,1062,16],[21,0,1062,17],[22,0,1062,18],[27,0,1062,39],[29,0,1062,41],[31,0,1062,43]],[[16,0,1064,10],[20,0,1064,14],[21,0,1064,15],[39,0,1064,33],[40,0,1064,34],[54,0,1064,48],[56,0,1064,50]],[[20,0,1065,12],[27,0,1065,19],[29,0,1065,21],[30,0,1065,22],[35,0,1065,27],[36,0,1065,28],[37,0,1065,29]],[[17,0,1066,11]],[[16,0,1068,10],[22,0,1068,16],[34,0,1068,28],[37,0,1068,55],[39,0,1068,57],[40,0,1068,58]],[[16,0,1070,10],[21,0,1070,15],[24,0,1070,18],[29,0,1070,23],[30,0,1070,24],[36,0,1070,30],[37,0,1070,31],[38,0,1070,32],[39,0,1070,33],[41,0,1070,35],[42,0,1070,36],[43,0,1070,37],[47,0,1070,41],[51,0,1070,45],[52,0,1070,46],[53,0,1070,47],[54,0,1070,48],[83,0,1070,77]],[[16,0,1072,10],[21,0,1072,15],[22,0,1072,16],[29,0,1072,23],[30,0,1072,24],[31,0,1072,25],[38,0,1072,46],[40,0,1072,48],[42,0,1072,50]],[[20,0,1073,12],[26,0,1073,18],[47,0,1073,39],[50,0,1073,42],[54,0,1073,46],[55,0,1073,47],[79,0,1073,71],[80,0,1073,72],[87,0,1073,79],[89,0,1073,81],[107,0,1073,99],[108,0,1073,100],[122,0,1073,114],[123,0,1073,115],[124,0,1073,116]],[[20,0,1074,12],[32,0,1074,24],[33,0,1074,25],[37,0,1074,29],[38,0,1074,30],[59,0,1074,51],[60,0,1074,52],[61,0,1074,53]],[[16,0,1075,10],[17,0,1075,11],[18,0,1075,12],[19,0,1075,13]],[[16,0,1077,10],[20,0,1077,14],[32,0,1077,26],[33,0,1077,27],[39,0,1077,33],[43,0,1077,37],[44,0,1077,38],[46,0,1077,40]],[[20,0,1078,12],[27,0,1078,19],[29,0,1078,21],[30,0,1078,22],[32,0,1078,24],[33,0,1078,25],[34,0,1078,26]],[[17,0,1079,11],[18,0,1079,12],[67,0,1079,61]],[[16,0,1081,10],[23,0,1081,17],[36,0,1081,30],[37,0,1081,31],[49,0,1081,43],[50,0,1081,44],[51,0,1081,45],[55,0,1081,49]],[[16,0,1082,12],[47,0,1082,43]],[[17,0,1083,11],[18,0,1083,12]],[[12,0,1084,8],[13,0,1084,9],[14,0,1084,10],[16,0,1084,12],[51,0,1084,47]],[[12,0,1085,8]],[],[[66,0,1087,62]],[[12,0,1088,8],[15,0,1088,11],[16,0,1088,12],[17,0,1088,13],[22,0,1088,34],[24,0,1088,36],[26,0,1088,38]],[[16,0,1089,10],[22,0,1089,16],[27,0,1089,21],[30,0,1089,24],[48,0,1089,42],[49,0,1089,43],[54,0,1089,48],[59,0,1089,53],[68,0,1089,62],[69,0,1089,63],[70,0,1089,64],[71,0,1089,65],[89,0,1089,83],[90,0,1089,84],[95,0,1089,89],[96,0,1089,90],[97,0,1089,91],[98,0,1089,92],[102,0,1089,96],[103,0,1089,97],[115,0,1089,109],[116,0,1089,110]],[[16,0,1091,10],[20,0,1091,14],[25,0,1091,19],[26,0,1091,20],[32,0,1091,26],[37,0,1091,31],[38,0,1091,32],[42,0,1091,36],[47,0,1091,41],[48,0,1091,42],[49,0,1091,43],[50,0,1091,44],[51,0,1091,45],[68,0,1091,62],[69,0,1091,63],[71,0,1091,65],[76,0,1091,70],[81,0,1091,75],[83,0,1091,77]],[[20,0,1092,12],[27,0,1092,19],[29,0,1092,20],[30,0,1092,21],[48,0,1092,39],[49,0,1092,40],[53,0,1092,44],[54,0,1092,45],[56,0,1092,47],[61,0,1092,52],[62,0,1092,53],[63,0,1092,54],[64,0,1092,55],[66,0,1092,56],[67,0,1092,57]],[[17,0,1093,11]],[[21,0,1093,17]],[[20,0,1094,12],[27,0,1094,19],[29,0,1094,20],[30,0,1094,21],[48,0,1094,39],[49,0,1094,40],[53,0,1094,44],[54,0,1094,45],[56,0,1094,47],[61,0,1094,52],[63,0,1094,53],[64,0,1094,54]],[[17,0,1095,11]],[[12,0,1096,8],[13,0,1096,9],[14,0,1096,10],[15,0,1098,7],[16,0,1098,8]],[[12,0,1100,6],[31,0,1100,25],[32,0,1100,26],[36,0,1100,30],[37,0,1100,31],[55,0,1100,49],[56,0,1100,50],[57,0,1100,51]],[[8,0,1101,4],[9,0,1101,5],[10,0,1101,6],[11,0,1101,7]],[[8,0,1103,4],[61,0,1103,57]],[[8,0,1104,4],[21,0,1104,17]],[[8,0,1105,4],[15,0,1105,11],[28,0,1105,24],[29,0,1105,25],[48,0,1105,44],[49,0,1105,45],[50,0,1105,46],[54,0,1105,50],[55,0,1106,6],[58,0,1106,9],[59,0,1106,10],[60,0,1106,11],[75,0,1106,87],[77,0,1106,89],[79,0,1106,91]],[[12,0,1107,8],[41,0,1107,37]],[[12,0,1108,8],[18,0,1108,14],[26,0,1108,22],[29,0,1108,51],[31,0,1108,53],[32,0,1108,54]],[[12,0,1110,8],[27,0,1110,23],[28,0,1110,24],[35,0,1110,31],[36,0,1110,32],[37,0,1110,33],[51,0,1110,47],[53,0,1110,49],[55,0,1110,51]],[[16,0,1112,10],[21,0,1112,15],[27,0,1112,21],[28,0,1112,22],[42,0,1112,36],[44,0,1112,38],[49,0,1112,43],[50,0,1112,44],[54,0,1112,48],[60,0,1112,54],[61,0,1112,55],[68,0,1112,62],[69,0,1112,63],[83,0,1112,77],[84,0,1112,78],[86,0,1112,80]],[[20,0,1113,12],[28,0,1113,20],[29,0,1113,21],[43,0,1113,35],[44,0,1113,36],[47,0,1113,39],[52,0,1113,44],[53,0,1113,45]],[[17,0,1114,11]],[[12,0,1115,8],[13,0,1115,9],[14,0,1115,10],[15,0,1115,11]],[[12,0,1116,8],[19,0,1116,15],[27,0,1116,23],[28,0,1116,24]],[[8,0,1117,6],[9,0,1117,7],[10,0,1117,8],[12,0,1119,6],[15,0,1119,9],[16,0,1119,10],[17,0,1119,11],[21,0,1119,29],[23,0,1119,31],[25,0,1119,33]],[[12,0,1120,8],[19,0,1120,15],[21,0,1120,16],[24,0,1120,19],[28,0,1120,23],[30,0,1120,25],[33,0,1120,28],[37,0,1120,32],[39,0,1120,48],[40,0,1120,49]],[[8,0,1121,6],[9,0,1121,7],[10,0,1121,8],[11,0,1122,5],[12,0,1122,6]],[[4,0,1123,2],[5,0,1123,3]],[[4,0,1125,2]],[],[[7,0,1127,5]],[[4,0,1128,12],[36,0,1128,44],[37,0,1129,4],[43,0,1129,29],[45,0,1130,4],[68,0,1130,49],[70,0,1130,51],[72,0,1131,4],[91,0,1131,42],[108,0,1131,59],[109,0,1131,60],[120,0,1131,71]],[[8,0,1133,4],[33,0,1133,29]],[[8,0,1134,4],[15,0,1134,11],[19,0,1134,15],[20,0,1134,16],[39,0,1134,35],[40,0,1134,39],[46,0,1134,45],[48,0,1134,47],[64,0,1134,63],[65,0,1134,64],[66,0,1134,65],[70,0,1134,69],[71,0,1135,6],[79,0,1135,14],[80,0,1135,15],[81,0,1135,16],[85,0,1135,34],[87,0,1135,36],[89,0,1135,38]],[[12,0,1137,8],[16,0,1137,12],[20,0,1137,16],[25,0,1137,21],[29,0,1137,25],[31,0,1137,27]],[[16,0,1138,10],[23,0,1138,17],[25,0,1138,19],[26,0,1138,20],[30,0,1138,24],[31,0,1138,25],[32,0,1138,26]],[[13,0,1139,9]],[[12,0,1140,8],[16,0,1140,12],[36,0,1140,32],[37,0,1140,33],[43,0,1140,39],[47,0,1140,43],[48,0,1140,44],[50,0,1140,46]],[[16,0,1141,10],[23,0,1141,17],[25,0,1141,19],[26,0,1141,20],[30,0,1141,24],[31,0,1141,25],[32,0,1141,26]],[[13,0,1142,9]],[[12,0,1144,8],[19,0,1144,15],[23,0,1144,19],[24,0,1144,20],[48,0,1144,44],[49,0,1144,45],[53,0,1144,49],[55,0,1144,51],[75,0,1144,71],[76,0,1144,72],[77,0,1144,73]],[[8,0,1145,6],[9,0,1145,7],[10,0,1145,8],[11,0,1146,5],[12,0,1146,6]],[[4,0,1147,2],[5,0,1147,3]],[[4,0,1149,2]],[],[],[],[],[],[],[],[],[],[],[[7,0,1160,5]],[[4,0,1161,12],[14,0,1161,22],[15,0,1161,26],[19,0,1161,33],[21,0,1161,35],[34,0,1161,72],[36,0,1161,74],[49,0,1161,96],[53,0,1161,100],[55,0,1161,102],[57,0,1161,113]],[[8,0,1164,4],[58,0,1164,54]],[[8,0,1166,4],[12,0,1166,8],[16,0,1166,29],[17,0,1166,30]],[[8,0,1168,4],[12,0,1168,8],[22,0,1168,18],[24,0,1168,20]],[[12,0,1169,6],[18,0,1169,12],[22,0,1169,16],[25,0,1169,19],[29,0,1169,23],[33,0,1169,27],[35,0,1169,29],[36,0,1169,30]],[[12,0,1170,6],[16,0,1170,10],[19,0,1170,13],[33,0,1170,27],[34,0,1170,28],[38,0,1170,32],[40,0,1170,34],[45,0,1170,39],[47,0,1170,41],[51,0,1170,45],[52,0,1170,46],[53,0,1170,47]],[[12,0,1171,6],[16,0,1171,10],[19,0,1171,13],[34,0,1171,28],[35,0,1171,29],[39,0,1171,33],[41,0,1171,35],[46,0,1171,40],[48,0,1171,42],[52,0,1171,46],[53,0,1171,47],[54,0,1171,48]],[[9,0,1172,5]],[[8,0,1174,4],[12,0,1174,8],[14,0,1174,10],[19,0,1174,15],[28,0,1174,24],[30,0,1174,26]],[[12,0,1175,6],[18,0,1175,12],[24,0,1175,18],[27,0,1175,40],[42,0,1175,55],[43,0,1175,56],[56,0,1175,69],[58,0,1175,71],[60,0,1175,73],[61,0,1175,74],[62,0,1175,75]],[[12,0,1176,6],[16,0,1176,10],[19,0,1176,13],[23,0,1176,17],[24,0,1176,18],[26,0,1176,20],[27,0,1176,21],[30,0,1176,24],[31,0,1176,25],[37,0,1176,31],[39,0,1176,33],[43,0,1176,37],[44,0,1176,38],[45,0,1176,39]],[[9,0,1177,5]],[[13,0,1177,11]],[[12,0,1178,6],[16,0,1178,10],[19,0,1178,13],[23,0,1178,17],[24,0,1178,18],[26,0,1178,20],[27,0,1178,21],[30,0,1178,24],[31,0,1178,28],[44,0,1178,41],[46,0,1178,43],[50,0,1178,47],[51,0,1178,48],[52,0,1178,49]],[[9,0,1179,5]],[[8,0,1181,4],[51,0,1181,47]],[[8,0,1182,4],[38,0,1182,34]],[[8,0,1183,4],[114,0,1183,110]],[[8,0,1184,4],[15,0,1184,11]],[[8,0,1185,4],[12,0,1185,8]],[[8,0,1187,4],[12,0,1187,8],[15,0,1187,11],[19,0,1187,15],[20,0,1187,16],[24,0,1187,20]],[[8,0,1188,6],[79,0,1188,77]],[[8,0,1189,6],[40,0,1189,38]],[[8,0,1190,6],[40,0,1190,38]],[[8,0,1191,6],[11,0,1191,9],[12,0,1191,10],[13,0,1191,11],[16,0,1191,48],[18,0,1191,50],[20,0,1191,52]],[[12,0,1192,8],[16,0,1192,12],[18,0,1192,14],[23,0,1192,19],[32,0,1192,28],[36,0,1192,32],[39,0,1192,35],[41,0,1192,37]],[[16,0,1194,10],[22,0,1194,16],[26,0,1194,20],[29,0,1194,23],[32,0,1194,26],[33,0,1194,27],[37,0,1194,31],[38,0,1194,32]],[[16,0,1196,10],[22,0,1196,16],[39,0,1196,33],[42,0,1196,58]],[[20,0,1197,12],[22,0,1197,14],[24,0,1197,16],[27,0,1197,19],[28,0,1197,20],[30,0,1197,22]],[[20,0,1198,12],[24,0,1198,16]],[[20,0,1199,12],[23,0,1199,15]],[[20,0,1200,12],[28,0,1200,20],[30,0,1200,22],[34,0,1200,26]],[[17,0,1201,11],[18,0,1201,12]],[[16,0,1203,10],[23,0,1203,17],[25,0,1203,18],[28,0,1203,21],[32,0,1203,25],[34,0,1203,27],[51,0,1203,44],[53,0,1203,60],[54,0,1203,61]],[[13,0,1205,9]],[[17,0,1205,15],[19,0,1205,17],[87,0,1205,85]],[[16,0,1206,10],[22,0,1206,16],[26,0,1206,20],[29,0,1206,23],[42,0,1206,36],[43,0,1206,37],[47,0,1206,41],[50,0,1206,44],[53,0,1206,47],[56,0,1206,50],[58,0,1206,52],[59,0,1206,53]],[[16,0,1207,10],[19,0,1207,13],[22,0,1207,16],[36,0,1207,30],[37,0,1207,31],[41,0,1207,35],[43,0,1207,37],[47,0,1207,41],[48,0,1207,42],[50,0,1207,44],[51,0,1207,45],[60,0,1207,54],[61,0,1207,79],[62,0,1207,80]],[[16,0,1209,10],[22,0,1209,16],[39,0,1209,33],[42,0,1209,58]],[[20,0,1210,12],[22,0,1210,14],[24,0,1210,16],[26,0,1210,28]],[[20,0,1211,12],[23,0,1211,15]],[[20,0,1212,12],[24,0,1212,16]],[[20,0,1213,12],[28,0,1213,20],[30,0,1213,22],[34,0,1213,26]],[[17,0,1214,11],[18,0,1214,12]],[[16,0,1216,10],[23,0,1216,17],[25,0,1216,18],[28,0,1216,21],[32,0,1216,25],[34,0,1216,27],[51,0,1216,44],[53,0,1216,60],[54,0,1216,61]],[[13,0,1217,9]],[[8,0,1218,6],[9,0,1218,7],[10,0,1218,8],[11,0,1219,5],[12,0,1219,6]],[[8,0,1221,4],[15,0,1221,11],[19,0,1221,15],[20,0,1221,16],[24,0,1221,20],[25,0,1222,6],[29,0,1222,10],[30,0,1222,11],[31,0,1222,12],[32,0,1222,13],[33,0,1223,5],[34,0,1223,6]],[[4,0,1224,2],[5,0,1224,3]],[[4,0,1226,2],[74,0,1226,72]],[[4,0,1227,12],[17,0,1227,25],[18,0,1227,29],[22,0,1227,36],[24,0,1227,38],[30,0,1227,63],[32,0,1227,65],[52,0,1227,94],[56,0,1227,98]],[[8,0,1229,4],[12,0,1229,8],[29,0,1229,25],[31,0,1229,27]],[[12,0,1230,6],[16,0,1230,10],[19,0,1230,13],[34,0,1230,28],[35,0,1230,29],[39,0,1230,33],[41,0,1230,35],[46,0,1230,40],[47,0,1230,41],[48,0,1230,42]],[[9,0,1231,5]],[[8,0,1232,4],[15,0,1232,11],[19,0,1232,15],[20,0,1232,16],[22,0,1232,18],[23,0,1232,19],[29,0,1232,25],[30,0,1232,26],[36,0,1232,32],[38,0,1232,34],[42,0,1232,38],[43,0,1232,39],[44,0,1232,40]],[[4,0,1233,2],[5,0,1233,3]],[[4,0,1235,2]],[],[[7,0,1237,5]],[[4,0,1238,12],[27,0,1238,35],[28,0,1238,39],[32,0,1238,46],[34,0,1239,39],[40,0,1239,64],[42,0,1240,39],[65,0,1240,85],[67,0,1240,87],[69,0,1241,39],[89,0,1241,68],[93,0,1241,72],[95,0,1242,39],[100,0,1242,57]],[[8,0,1244,4],[12,0,1244,8],[17,0,1244,13],[22,0,1244,18],[31,0,1244,27],[33,0,1244,29]],[[12,0,1245,6],[17,0,1245,11],[20,0,1245,14],[30,0,1245,24],[31,0,1245,25],[35,0,1245,29],[36,0,1245,30],[38,0,1245,32],[39,0,1245,33],[48,0,1245,42],[49,0,1245,43],[50,0,1245,44]],[[9,0,1246,5]],[[8,0,1248,4],[12,0,1248,8],[29,0,1248,25],[31,0,1248,27]],[[12,0,1249,6],[16,0,1249,10],[19,0,1249,13],[34,0,1249,28],[35,0,1249,29],[39,0,1249,33],[41,0,1249,35],[46,0,1249,40],[47,0,1249,41],[48,0,1249,42]],[[9,0,1250,5]],[[8,0,1252,4],[14,0,1252,10],[19,0,1252,15],[22,0,1252,18],[26,0,1252,22],[27,0,1252,23],[67,0,1252,63],[68,0,1252,64],[72,0,1252,68],[74,0,1252,70],[94,0,1252,90],[95,0,1252,91],[96,0,1252,92]],[[8,0,1253,4],[14,0,1253,10],[24,0,1253,20],[27,0,1253,23],[32,0,1253,28],[33,0,1253,29],[43,0,1253,39],[44,0,1253,40]],[[8,0,1254,4],[14,0,1254,10],[28,0,1254,24],[31,0,1254,27],[36,0,1254,32],[37,0,1254,33],[51,0,1254,47],[52,0,1254,48]],[[8,0,1256,4],[51,0,1256,47]],[[8,0,1257,4],[13,0,1257,9],[14,0,1257,10],[20,0,1257,16],[21,0,1257,17],[27,0,1257,23],[29,0,1257,25],[39,0,1257,35],[40,0,1257,36],[41,0,1257,37]],[[8,0,1259,4],[13,0,1259,9],[19,0,1259,15],[20,0,1259,16],[36,0,1259,32],[38,0,1259,34],[55,0,1259,51],[56,0,1259,52],[60,0,1259,56],[66,0,1259,62],[67,0,1259,63],[74,0,1259,70],[75,0,1259,71],[89,0,1259,85],[90,0,1259,86],[92,0,1259,88]],[[12,0,1261,6],[16,0,1261,10],[39,0,1261,68],[40,0,1261,69],[41,0,1261,70],[80,0,1261,109]],[[12,0,1262,6],[16,0,1262,10],[24,0,1262,38],[25,0,1262,39]],[[12,0,1264,6],[16,0,1264,10],[36,0,1264,30],[38,0,1264,32]],[[16,0,1265,8],[39,0,1265,31],[42,0,1265,34],[62,0,1265,54],[63,0,1265,55],[67,0,1265,59],[68,0,1265,60],[75,0,1265,67],[76,0,1265,68],[78,0,1265,70],[79,0,1265,71],[86,0,1265,78],[87,0,1265,79],[91,0,1265,83],[96,0,1265,88],[112,0,1265,104],[113,0,1265,105],[115,0,1265,107],[129,0,1265,121],[130,0,1265,122]],[[16,0,1266,8],[24,0,1266,16],[27,0,1266,19],[47,0,1266,39],[48,0,1266,40],[52,0,1266,44],[53,0,1266,45],[60,0,1266,52],[61,0,1266,53],[63,0,1266,55],[64,0,1266,56],[71,0,1266,63],[72,0,1266,64],[76,0,1266,68],[81,0,1266,73],[97,0,1266,89],[98,0,1266,90],[100,0,1266,92],[105,0,1266,97],[106,0,1266,98]],[[13,0,1267,7]],[[12,0,1269,6],[20,0,1269,14],[23,0,1269,17],[31,0,1269,25],[36,0,1269,30],[45,0,1269,39],[46,0,1269,40],[47,0,1269,41],[48,0,1269,42],[56,0,1269,50],[57,0,1269,51],[58,0,1269,52],[59,0,1269,53],[63,0,1269,57],[64,0,1269,58],[76,0,1269,70],[77,0,1269,71],[78,0,1269,72],[109,0,1269,103]],[[12,0,1271,6],[82,0,1271,76]],[[12,0,1272,6],[18,0,1272,12],[31,0,1272,25],[34,0,1272,28],[50,0,1272,44],[51,0,1272,45],[57,0,1272,51],[59,0,1272,53],[75,0,1272,69],[76,0,1272,70],[77,0,1272,71]],[[12,0,1273,6],[18,0,1273,12],[26,0,1273,20],[29,0,1273,23],[44,0,1273,38],[45,0,1273,39],[58,0,1273,52],[60,0,1273,54],[68,0,1273,62],[69,0,1273,63],[70,0,1273,64]],[[12,0,1275,6],[17,0,1275,11],[20,0,1275,14],[24,0,1275,18],[25,0,1275,19],[48,0,1275,42],[49,0,1275,43],[66,0,1275,60],[68,0,1275,62],[76,0,1275,70],[78,0,1275,72],[101,0,1275,95],[103,0,1275,97],[120,0,1275,114],[122,0,1275,116],[127,0,1275,121],[128,0,1275,122],[129,0,1275,123]],[[9,0,1276,5]],[[8,0,1278,4],[15,0,1278,11],[20,0,1278,16],[21,0,1278,17]],[[4,0,1279,2],[5,0,1279,3]],[[4,0,1281,2]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,1294,5]],[[4,0,1295,12],[41,0,1295,49],[42,0,1296,4],[55,0,1296,37],[57,0,1297,4],[69,0,1297,36],[71,0,1298,4],[84,0,1298,25],[86,0,1299,4],[98,0,1299,24],[100,0,1300,4],[116,0,1300,28],[118,0,1301,4],[149,0,1301,60],[151,0,1302,4],[182,0,1302,35],[185,0,1302,38],[189,0,1302,42],[191,0,1303,4],[198,0,1303,11],[201,0,1303,14],[206,0,1303,19]],[[8,0,1305,4],[12,0,1305,8],[29,0,1305,45],[30,0,1305,46]],[[8,0,1306,4],[12,0,1306,8],[28,0,1306,44],[29,0,1306,45]],[[8,0,1307,4],[12,0,1307,8],[19,0,1307,15],[21,0,1307,17]],[[12,0,1308,6],[29,0,1308,23],[32,0,1308,26],[38,0,1308,32],[39,0,1308,33],[45,0,1308,39],[46,0,1308,40],[48,0,1308,42],[50,0,1308,44],[63,0,1308,57],[64,0,1308,58],[65,0,1308,59]],[[12,0,1309,6],[28,0,1309,22],[31,0,1309,25],[37,0,1309,31],[38,0,1309,32],[44,0,1309,38],[45,0,1309,39],[47,0,1309,41],[49,0,1309,43],[61,0,1309,55],[62,0,1309,56],[63,0,1309,57]],[[9,0,1310,5]],[[13,0,1310,11]],[[12,0,1311,6],[29,0,1311,23],[32,0,1311,26],[45,0,1311,39],[46,0,1311,40]],[[12,0,1312,6],[28,0,1312,22],[31,0,1312,25],[43,0,1312,37],[44,0,1312,38]],[[9,0,1313,5]],[[8,0,1315,4],[25,0,1315,21],[26,0,1315,22],[43,0,1315,39],[45,0,1315,41],[61,0,1315,57],[63,0,1315,59],[76,0,1315,72],[78,0,1315,74],[90,0,1315,86],[91,0,1315,87],[92,0,1315,88]],[[8,0,1317,4],[14,0,1317,10],[19,0,1317,15],[22,0,1317,30],[32,0,1317,40],[33,0,1317,41],[37,0,1317,45],[38,0,1317,46],[40,0,1317,48],[41,0,1317,49],[50,0,1317,58],[51,0,1317,59],[52,0,1317,60]],[[8,0,1319,4],[12,0,1319,8],[43,0,1319,39],[48,0,1319,44],[57,0,1319,53],[59,0,1319,55]],[[12,0,1320,6],[18,0,1320,12],[27,0,1320,21],[30,0,1320,24],[46,0,1320,40],[47,0,1320,41],[59,0,1320,53],[60,0,1320,54],[61,0,1320,55]],[[12,0,1321,6],[18,0,1321,12],[30,0,1321,24],[33,0,1321,27],[42,0,1321,36],[43,0,1321,37],[60,0,1321,54],[61,0,1321,55],[64,0,1321,58],[65,0,1321,59]],[[12,0,1323,6],[18,0,1323,12],[22,0,1323,16],[25,0,1323,19],[27,0,1323,20],[30,0,1323,23],[61,0,1323,54],[63,0,1323,56],[72,0,1323,65],[74,0,1323,67],[90,0,1323,83],[92,0,1323,84],[93,0,1323,85]],[[12,0,1325,6],[16,0,1325,10],[17,0,1325,11],[24,0,1325,18],[26,0,1325,20]],[[16,0,1326,8],[29,0,1326,21],[30,0,1326,22],[39,0,1326,31],[41,0,1326,33],[45,0,1326,37],[47,0,1326,39],[51,0,1326,43],[52,0,1326,44],[53,0,1326,45]],[[13,0,1327,7]],[[12,0,1329,6],[16,0,1329,10],[47,0,1329,41],[49,0,1329,43]],[[16,0,1330,8],[22,0,1330,14],[26,0,1330,18],[29,0,1330,21],[33,0,1330,25],[37,0,1330,29],[39,0,1330,31],[40,0,1330,32]],[[16,0,1331,8],[31,0,1331,23],[32,0,1331,24],[36,0,1331,28],[38,0,1331,30],[42,0,1331,34],[44,0,1331,36],[48,0,1331,40],[49,0,1331,41],[50,0,1331,42]],[[16,0,1333,8],[20,0,1333,12],[21,0,1333,13],[28,0,1333,20],[30,0,1333,22]],[[20,0,1334,10],[35,0,1334,25],[36,0,1334,26],[45,0,1334,35],[47,0,1334,37],[51,0,1334,41],[53,0,1334,43],[57,0,1334,47],[58,0,1334,48],[59,0,1334,49]],[[17,0,1335,9]],[[13,0,1336,7]],[[12,0,1337,6],[17,0,1337,11],[18,0,1337,12],[24,0,1337,18],[25,0,1337,19],[37,0,1337,31],[39,0,1337,33],[43,0,1337,37],[44,0,1337,38],[45,0,1337,39]],[[9,0,1338,5]],[[8,0,1340,4],[14,0,1340,10],[39,0,1340,35],[42,0,1340,58],[58,0,1340,74],[59,0,1340,75],[64,0,1340,80],[65,0,1340,81],[77,0,1340,93],[78,0,1340,94],[79,0,1340,95]],[[8,0,1341,4],[12,0,1341,8],[13,0,1341,9],[16,0,1341,12],[28,0,1341,24],[29,0,1341,25]],[[8,0,1342,4],[13,0,1342,9],[19,0,1342,15],[23,0,1342,19],[27,0,1342,23],[52,0,1342,48],[54,0,1342,50]],[[12,0,1343,6],[25,0,1343,19]],[[12,0,1344,6],[17,0,1344,11],[18,0,1344,12],[24,0,1344,18],[25,0,1344,19],[29,0,1344,23],[30,0,1344,24],[47,0,1344,41],[48,0,1344,42],[51,0,1344,45],[53,0,1344,47],[55,0,1344,48],[60,0,1344,53],[62,0,1344,55],[63,0,1344,56],[65,0,1344,57],[66,0,1344,58],[67,0,1344,59]],[[12,0,1346,6],[16,0,1346,10],[17,0,1346,11],[24,0,1346,18],[26,0,1346,20]],[[16,0,1347,8],[20,0,1347,12],[21,0,1347,13],[26,0,1347,18],[29,0,1347,21],[30,0,1347,22],[31,0,1347,23]],[[13,0,1348,7]],[[12,0,1350,6],[13,0,1350,7],[15,0,1350,9],[16,0,1350,10]],[[9,0,1351,5]],[[8,0,1353,4],[14,0,1353,10],[36,0,1353,32],[39,0,1353,55],[56,0,1353,72],[57,0,1353,73],[62,0,1353,78],[63,0,1353,79],[76,0,1353,92],[77,0,1353,93],[78,0,1353,94]],[[8,0,1354,4],[9,0,1354,5],[12,0,1354,8],[25,0,1354,21],[26,0,1354,22]],[[8,0,1355,4],[13,0,1355,9],[19,0,1355,15],[23,0,1355,19],[27,0,1355,23],[49,0,1355,45],[51,0,1355,47]],[[12,0,1356,6],[25,0,1356,19]],[[12,0,1357,6],[17,0,1357,11],[18,0,1357,12],[24,0,1357,18],[25,0,1357,19],[29,0,1357,23],[30,0,1357,24],[47,0,1357,41],[48,0,1357,42],[51,0,1357,45],[53,0,1357,47],[55,0,1357,48],[60,0,1357,53],[62,0,1357,55],[63,0,1357,56],[65,0,1357,57],[66,0,1357,58],[67,0,1357,59]],[[12,0,1359,6],[16,0,1359,10],[17,0,1359,11],[24,0,1359,18],[26,0,1359,20]],[[16,0,1360,8],[20,0,1360,12],[21,0,1360,13],[26,0,1360,18],[29,0,1360,21],[30,0,1360,22],[31,0,1360,23]],[[13,0,1361,7]],[[12,0,1363,6],[13,0,1363,7],[15,0,1363,9],[16,0,1363,10]],[[9,0,1364,5]],[[8,0,1366,4],[15,0,1366,11],[20,0,1366,16],[21,0,1366,17]],[[4,0,1367,2],[5,0,1367,3]],[[4,0,1370,2]],[],[],[],[[7,0,1374,5]],[[4,0,1375,12],[25,0,1375,33],[26,0,1375,34],[33,0,1375,62]],[[8,0,1377,4],[14,0,1377,10],[19,0,1377,15],[22,0,1377,18],[26,0,1377,22],[27,0,1377,23],[55,0,1377,51],[56,0,1377,52],[63,0,1377,59],[64,0,1377,60],[65,0,1377,61]],[[8,0,1379,4],[15,0,1379,11],[19,0,1379,15],[20,0,1379,16],[32,0,1379,28],[33,0,1379,29],[38,0,1379,34],[39,0,1379,35],[40,0,1379,36]],[[4,0,1380,2],[5,0,1380,3]],[[4,0,1382,12],[32,0,1382,40],[33,0,1382,41],[40,0,1382,69],[42,0,1382,71],[50,0,1382,91],[60,0,1382,101],[61,0,1382,102],[65,0,1382,106],[66,0,1382,107],[68,0,1382,109],[69,0,1382,110],[78,0,1382,119],[79,0,1382,120]],[[8,0,1384,4],[15,0,1384,11],[16,0,1384,12],[23,0,1384,19],[24,0,1384,20],[25,0,1384,21],[31,0,1384,27],[33,0,1384,29],[35,0,1384,31]],[[12,0,1385,6],[17,0,1385,11],[18,0,1385,12],[24,0,1385,18],[25,0,1385,19],[31,0,1385,25],[32,0,1385,26],[33,0,1385,27]],[[8,0,1386,4],[9,0,1386,5],[10,0,1386,6],[11,0,1386,7]],[[8,0,1388,4],[15,0,1388,11],[20,0,1388,16],[21,0,1388,17]],[[4,0,1389,2],[5,0,1389,3]],[[4,0,1391,2]],[],[],[],[],[],[[7,0,1397,5]],[[4,0,1398,12],[35,0,1398,43],[36,0,1398,47],[42,0,1398,71],[44,0,1399,47],[67,0,1399,93],[69,0,1399,95],[71,0,1400,47],[98,0,1400,84],[100,0,1400,86]],[[8,0,1402,4],[95,0,1402,91]],[[8,0,1403,4],[14,0,1403,10],[32,0,1403,28],[35,0,1403,41],[36,0,1403,42],[55,0,1403,61],[56,0,1403,62],[57,0,1403,63],[63,0,1403,69],[64,0,1403,70],[88,0,1403,94],[89,0,1403,95],[90,0,1403,96]],[[8,0,1405,4],[34,0,1405,30]],[[8,0,1406,4],[13,0,1406,9],[19,0,1406,15],[36,0,1406,32],[40,0,1406,36],[58,0,1406,54],[60,0,1406,56]],[[12,0,1407,6],[19,0,1407,13],[25,0,1407,19],[26,0,1407,20],[43,0,1407,37],[44,0,1407,38],[45,0,1407,39]],[[9,0,1408,5]],[[8,0,1410,4],[28,0,1410,24],[29,0,1410,25],[36,0,1410,32],[37,0,1410,33],[40,0,1410,36],[41,0,1410,37],[43,0,1410,39]],[[12,0,1411,6],[16,0,1411,10],[21,0,1411,15],[22,0,1411,16],[29,0,1411,23],[30,0,1411,24],[36,0,1411,30],[37,0,1411,31],[40,0,1411,34],[41,0,1411,35],[45,0,1411,39],[46,0,1411,40],[47,0,1411,41],[49,0,1411,43],[51,0,1411,45],[104,0,1411,98]],[[16,0,1413,8],[22,0,1413,14],[26,0,1413,18],[29,0,1413,36],[35,0,1413,42],[36,0,1413,43],[39,0,1413,46],[40,0,1413,47],[44,0,1413,51],[45,0,1413,52],[46,0,1413,53]],[[16,0,1414,8],[20,0,1414,12],[21,0,1414,13],[28,0,1414,20],[29,0,1414,21],[30,0,1414,22],[31,0,1414,23],[33,0,1414,25],[34,0,1414,26],[36,0,1414,28],[38,0,1414,30]],[[20,0,1416,10],[24,0,1416,14],[27,0,1416,17],[28,0,1416,18],[42,0,1416,32],[44,0,1416,34]],[[24,0,1417,12],[28,0,1417,16],[29,0,1417,17],[60,0,1417,48],[61,0,1417,49],[62,0,1417,50],[64,0,1417,52],[67,0,1417,55],[68,0,1417,56],[82,0,1417,70],[84,0,1417,72],[108,0,1417,96],[109,0,1417,97],[110,0,1417,98]],[[21,0,1418,11]],[[25,0,1418,17]],[[24,0,1419,12],[30,0,1419,18]],[[24,0,1420,12],[29,0,1420,17],[35,0,1420,23],[52,0,1420,40],[56,0,1420,44],[74,0,1420,62],[76,0,1420,64]],[[28,0,1421,14],[35,0,1421,21],[41,0,1421,27],[42,0,1421,28],[45,0,1421,31],[46,0,1421,32],[50,0,1421,36],[51,0,1421,37],[52,0,1421,38],[53,0,1421,39],[54,0,1421,40],[55,0,1421,41],[72,0,1421,58],[73,0,1421,59],[74,0,1421,60]],[[25,0,1422,13]],[[21,0,1423,11]],[[16,0,1424,8],[17,0,1424,9],[18,0,1424,10],[19,0,1424,11]],[[13,0,1426,7]],[[17,0,1426,13],[19,0,1426,15],[52,0,1426,48]],[[16,0,1428,8],[20,0,1428,12],[23,0,1428,15],[24,0,1428,16],[38,0,1428,30],[40,0,1428,32]],[[20,0,1429,10],[24,0,1429,14],[25,0,1429,15],[56,0,1429,46],[57,0,1429,47],[63,0,1429,53],[64,0,1429,54],[67,0,1429,57],[68,0,1429,58],[72,0,1429,62],[73,0,1429,63],[75,0,1429,65],[78,0,1429,68],[79,0,1429,69],[93,0,1429,83],[95,0,1429,85],[119,0,1429,109],[120,0,1429,110],[121,0,1429,111]],[[17,0,1430,9]],[[21,0,1430,15]],[[20,0,1431,10],[25,0,1431,15],[31,0,1431,21],[48,0,1431,38],[52,0,1431,42],[70,0,1431,60],[72,0,1431,62]],[[24,0,1432,12],[31,0,1432,19],[37,0,1432,25],[38,0,1432,26],[41,0,1432,29],[42,0,1432,30],[46,0,1432,34],[47,0,1432,35],[48,0,1432,36],[65,0,1432,53],[66,0,1432,54],[67,0,1432,55]],[[21,0,1433,11]],[[17,0,1434,9]],[[13,0,1436,7]],[[8,0,1437,4],[9,0,1437,5],[10,0,1437,6],[11,0,1437,7]],[[8,0,1439,4],[15,0,1439,11],[21,0,1439,17],[22,0,1439,18]],[[4,0,1441,2],[5,0,1441,3]],[[4,0,1443,2]],[],[],[],[],[[7,0,1448,5]],[[4,0,1449,12],[30,0,1449,38],[31,0,1449,39],[34,0,1449,83],[36,0,1450,39],[59,0,1450,84],[61,0,1450,86]],[[8,0,1453,4],[12,0,1453,8],[15,0,1453,11],[27,0,1453,23],[44,0,1453,40],[46,0,1453,42]],[[12,0,1454,6],[19,0,1454,13],[23,0,1454,17],[24,0,1454,18],[56,0,1454,50],[57,0,1454,51],[60,0,1454,54],[62,0,1454,56],[82,0,1454,76],[83,0,1454,77],[84,0,1454,78]],[[9,0,1455,5]],[[13,0,1455,11],[15,0,1455,13],[37,0,1455,35]],[[12,0,1456,6],[19,0,1456,13],[23,0,1456,17],[24,0,1456,18],[63,0,1456,57],[64,0,1456,58],[67,0,1456,61],[69,0,1456,63],[89,0,1456,83],[90,0,1456,84],[91,0,1456,85]],[[9,0,1457,5]],[[4,0,1458,2],[5,0,1458,3]],[[4,0,1460,12],[36,0,1460,44],[37,0,1460,45],[43,0,1460,70],[45,0,1461,45],[68,0,1461,90],[70,0,1461,92]],[[8,0,1464,4],[15,0,1464,11],[19,0,1464,15],[20,0,1464,16],[33,0,1464,29],[34,0,1464,30],[40,0,1464,36],[42,0,1464,38],[62,0,1464,58],[63,0,1464,59],[64,0,1464,60],[68,0,1464,64],[69,0,1465,6],[73,0,1465,10],[74,0,1465,11],[75,0,1465,12],[76,0,1465,13],[78,0,1466,6],[81,0,1466,9],[82,0,1466,10],[86,0,1466,14],[87,0,1466,15],[89,0,1466,17],[90,0,1466,18],[94,0,1466,22],[95,0,1466,23],[130,0,1466,58],[131,0,1466,59],[135,0,1466,63],[137,0,1466,65],[157,0,1466,85],[158,0,1466,86],[159,0,1466,87]],[[8,0,1467,6],[50,0,1467,48]],[[8,0,1468,6],[11,0,1468,9],[12,0,1468,10],[13,0,1468,11],[21,0,1468,29],[23,0,1468,31],[25,0,1468,33]],[[12,0,1469,8],[19,0,1469,15],[27,0,1469,23]],[[17,0,1470,11],[20,0,1470,14],[21,0,1470,15],[25,0,1470,19],[26,0,1470,20],[28,0,1470,22],[29,0,1470,23],[43,0,1470,37],[44,0,1470,38],[48,0,1470,42],[50,0,1470,44],[54,0,1470,48],[55,0,1470,49],[57,0,1470,51],[58,0,1470,52],[67,0,1470,61],[68,0,1470,83],[69,0,1470,84],[70,0,1470,85]],[[8,0,1471,6],[9,0,1471,7],[10,0,1471,8],[11,0,1473,5],[12,0,1473,6]],[[4,0,1474,2],[5,0,1474,3]],[[4,0,1476,12],[43,0,1476,51],[44,0,1476,52],[57,0,1476,86],[59,0,1477,52],[82,0,1477,97],[84,0,1477,99]],[[8,0,1480,4],[15,0,1480,11],[19,0,1480,15],[20,0,1480,16],[46,0,1480,42],[47,0,1480,43],[60,0,1480,56],[61,0,1480,57],[62,0,1480,58],[66,0,1480,62]],[[8,0,1481,6],[21,0,1481,19]],[[8,0,1482,6],[12,0,1482,10],[13,0,1482,11],[14,0,1482,12],[15,0,1482,13],[17,0,1483,6],[25,0,1483,14],[26,0,1483,15],[27,0,1483,16],[32,0,1483,37],[34,0,1483,39],[36,0,1483,41]],[[12,0,1484,8],[16,0,1484,12],[28,0,1484,48],[29,0,1484,49]],[[12,0,1485,8],[24,0,1485,20],[27,0,1485,23],[32,0,1485,28],[33,0,1485,29],[36,0,1485,32],[37,0,1485,33],[41,0,1485,37],[42,0,1485,38],[44,0,1485,40],[45,0,1485,41],[49,0,1485,45],[50,0,1485,46],[63,0,1485,59],[64,0,1485,60],[68,0,1485,64],[69,0,1485,65],[86,0,1485,82],[87,0,1485,83],[90,0,1485,86],[92,0,1485,88],[112,0,1485,108],[113,0,1485,109],[114,0,1485,110],[115,0,1485,111]],[[12,0,1486,8],[19,0,1486,15],[32,0,1486,28],[33,0,1486,29],[45,0,1486,41],[46,0,1486,42],[47,0,1486,43]],[[8,0,1487,6],[9,0,1487,7],[10,0,1487,8],[12,0,1488,6],[15,0,1488,9],[16,0,1488,10],[17,0,1488,11],[22,0,1488,32],[24,0,1488,34],[26,0,1488,36]],[[12,0,1490,8],[16,0,1490,12],[21,0,1490,17],[24,0,1490,30],[26,0,1490,32],[27,0,1490,33]],[[12,0,1492,8],[17,0,1492,13],[18,0,1492,14],[25,0,1492,21],[26,0,1492,22],[30,0,1492,26],[31,0,1492,27],[33,0,1492,29]],[[16,0,1493,10],[21,0,1493,15],[24,0,1493,18],[29,0,1493,23],[30,0,1493,24],[36,0,1493,30],[37,0,1493,31],[41,0,1493,35],[42,0,1493,36],[77,0,1493,71],[78,0,1493,72],[82,0,1493,76],[84,0,1493,78],[104,0,1493,98],[105,0,1493,99],[106,0,1493,100],[107,0,1493,101]],[[12,0,1494,8],[13,0,1494,9],[14,0,1494,10],[15,0,1494,11]],[[12,0,1495,8],[19,0,1495,15],[24,0,1495,20],[25,0,1495,21]],[[8,0,1496,6],[9,0,1496,7],[10,0,1496,8],[12,0,1497,6],[15,0,1497,9],[16,0,1497,10],[17,0,1497,11],[25,0,1497,29],[27,0,1497,31],[29,0,1497,33]],[[12,0,1498,8],[19,0,1498,15],[27,0,1498,23]],[[17,0,1499,11],[20,0,1499,14],[21,0,1499,15],[25,0,1499,19],[26,0,1499,20],[28,0,1499,22],[29,0,1499,23],[43,0,1499,37],[44,0,1499,38],[48,0,1499,42],[50,0,1499,44],[54,0,1499,48],[55,0,1499,49],[57,0,1499,51],[58,0,1499,52],[67,0,1499,61],[68,0,1499,83],[69,0,1499,84],[70,0,1499,85]],[[8,0,1500,6],[9,0,1500,7],[10,0,1500,8],[11,0,1501,5],[12,0,1501,6]],[[4,0,1502,2],[5,0,1502,3]],[[4,0,1504,2]],[],[],[],[],[],[],[[7,0,1511,5]],[[4,0,1512,12],[33,0,1512,41],[34,0,1513,4],[38,0,1513,21],[40,0,1514,4],[63,0,1514,49],[65,0,1514,51]],[[8,0,1516,4],[14,0,1516,10],[19,0,1516,15],[22,0,1516,18],[26,0,1516,22],[27,0,1516,23],[62,0,1516,58],[63,0,1516,59],[67,0,1516,63],[69,0,1516,65],[89,0,1516,85],[90,0,1516,86],[91,0,1516,87]],[[8,0,1517,4],[15,0,1517,11],[20,0,1517,16],[21,0,1517,17],[24,0,1517,20],[25,0,1517,21],[29,0,1517,25],[30,0,1517,26],[32,0,1517,28],[33,0,1517,29],[47,0,1517,43],[48,0,1517,44],[52,0,1517,48],[54,0,1517,50],[58,0,1517,54],[59,0,1517,55],[61,0,1517,57],[62,0,1517,58],[71,0,1517,67],[72,0,1517,89],[73,0,1517,90],[74,0,1517,91]],[[4,0,1518,2],[5,0,1518,3]],[[4,0,1520,2]],[],[[7,0,1522,5]],[[4,0,1523,12],[39,0,1523,47],[40,0,1523,51],[44,0,1523,68],[46,0,1524,51],[69,0,1524,96],[71,0,1524,98]],[[8,0,1526,4],[12,0,1526,8],[32,0,1526,28],[36,0,1526,32],[40,0,1526,36],[44,0,1526,40],[64,0,1526,60],[65,0,1526,61],[71,0,1526,67],[76,0,1526,72],[77,0,1526,73],[79,0,1526,75]],[[12,0,1527,6],[19,0,1527,13],[20,0,1527,14],[24,0,1527,18],[25,0,1527,19],[42,0,1527,36],[43,0,1527,37],[47,0,1527,41],[48,0,1527,42],[49,0,1527,43]],[[9,0,1528,5]],[[8,0,1529,4],[12,0,1529,8],[20,0,1529,16],[23,0,1529,29],[25,0,1529,31],[26,0,1529,32]],[[8,0,1530,4],[16,0,1530,12],[17,0,1530,13],[21,0,1530,17],[22,0,1530,18],[26,0,1530,22],[27,0,1530,23],[44,0,1530,40],[45,0,1530,41],[49,0,1530,45],[50,0,1530,46],[51,0,1530,47]],[[8,0,1532,4],[28,0,1532,24],[29,0,1532,25],[36,0,1532,32],[37,0,1532,33],[40,0,1532,36],[41,0,1532,37],[43,0,1532,39]],[[12,0,1533,6],[16,0,1533,10],[21,0,1533,15],[22,0,1533,16],[29,0,1533,23],[30,0,1533,25],[34,0,1533,46],[35,0,1533,47],[38,0,1533,50],[39,0,1533,51],[43,0,1533,55],[44,0,1533,56],[45,0,1533,57],[49,0,1533,61],[50,0,1533,62],[53,0,1533,65],[54,0,1533,66],[59,0,1533,71],[61,0,1533,73]],[[16,0,1534,8],[89,0,1534,81]],[[16,0,1536,8],[22,0,1536,14],[27,0,1536,19],[30,0,1536,39],[34,0,1536,60],[35,0,1536,61],[38,0,1536,64],[39,0,1536,65],[43,0,1536,69],[44,0,1536,70],[45,0,1536,71]],[[16,0,1537,8],[21,0,1537,13],[22,0,1537,14],[29,0,1537,21],[30,0,1537,22],[37,0,1537,29],[38,0,1537,30],[40,0,1537,32]],[[20,0,1539,10],[24,0,1539,14],[27,0,1539,17],[28,0,1539,18],[42,0,1539,32],[44,0,1539,34]],[[24,0,1540,12],[32,0,1540,20],[35,0,1540,23],[43,0,1540,31],[44,0,1540,32],[50,0,1540,38],[51,0,1540,39],[55,0,1540,43],[56,0,1540,44],[91,0,1540,79],[92,0,1540,80],[99,0,1540,87],[101,0,1540,89],[104,0,1540,92],[105,0,1540,93],[119,0,1540,107],[120,0,1540,108],[121,0,1540,109],[122,0,1540,110]],[[21,0,1541,11]],[[25,0,1541,17]],[[24,0,1542,12],[32,0,1542,20],[33,0,1542,21],[37,0,1542,25],[38,0,1542,26],[45,0,1542,33],[46,0,1542,34],[63,0,1542,51],[64,0,1542,52],[68,0,1542,56],[69,0,1542,57],[70,0,1542,58]],[[21,0,1543,11]],[[16,0,1544,8],[17,0,1544,9],[18,0,1544,10],[19,0,1544,11]],[[13,0,1546,7]],[[17,0,1546,13],[19,0,1546,15],[52,0,1546,48]],[[16,0,1548,8],[20,0,1548,12],[23,0,1548,15],[24,0,1548,16],[38,0,1548,30],[40,0,1548,32]],[[20,0,1549,10],[28,0,1549,18],[31,0,1549,21],[39,0,1549,29],[40,0,1549,30],[46,0,1549,36],[47,0,1549,37],[51,0,1549,41],[52,0,1549,42],[87,0,1549,77],[88,0,1549,78],[92,0,1549,82],[94,0,1549,84],[97,0,1549,87],[98,0,1549,88],[112,0,1549,102],[113,0,1549,103],[114,0,1549,104],[115,0,1549,105]],[[17,0,1550,9]],[[21,0,1550,15]],[[20,0,1551,10],[26,0,1551,16],[33,0,1551,23],[36,0,1551,28],[40,0,1551,49],[41,0,1551,50],[44,0,1551,53],[45,0,1551,54],[49,0,1551,58],[50,0,1551,76],[51,0,1551,77]],[[20,0,1552,10],[24,0,1552,14],[31,0,1552,21],[35,0,1552,25],[39,0,1552,29],[43,0,1552,33],[49,0,1552,39],[53,0,1552,43],[60,0,1552,50],[61,0,1552,51],[78,0,1552,68],[80,0,1552,70]],[[24,0,1553,12],[32,0,1553,20],[33,0,1553,21],[37,0,1553,25],[38,0,1553,26],[45,0,1553,33],[46,0,1553,34],[63,0,1553,51],[64,0,1553,52],[68,0,1553,56],[69,0,1553,57],[70,0,1553,58]],[[21,0,1554,11]],[[20,0,1555,10],[77,0,1555,67]],[[17,0,1556,9]],[[13,0,1558,7]],[[8,0,1559,4],[9,0,1559,5],[10,0,1559,6],[11,0,1559,7]],[[8,0,1561,4],[15,0,1561,11],[23,0,1561,19],[24,0,1561,20]],[[4,0,1562,2],[5,0,1562,3]],[[4,0,1564,2]],[],[],[[7,0,1567,5]],[[4,0,1568,12],[44,0,1568,52],[45,0,1569,4],[49,0,1569,11],[51,0,1570,4],[74,0,1570,50],[76,0,1570,52]],[[8,0,1572,4],[61,0,1572,57]],[[8,0,1573,4],[12,0,1573,8],[22,0,1573,18],[25,0,1573,48],[27,0,1573,50],[28,0,1573,51]],[[8,0,1574,4],[14,0,1574,10],[28,0,1574,24],[31,0,1574,54],[33,0,1574,56],[34,0,1574,57]],[[8,0,1576,4],[116,0,1576,112]],[[8,0,1578,4],[30,0,1578,26]],[[8,0,1579,4],[13,0,1579,9],[19,0,1579,15],[20,0,1579,16],[23,0,1579,19],[25,0,1579,21],[30,0,1579,26],[31,0,1579,27],[35,0,1579,31],[41,0,1579,37],[42,0,1579,38],[49,0,1579,45],[50,0,1579,46],[54,0,1579,50],[55,0,1579,51],[57,0,1579,53]],[[12,0,1580,6],[39,0,1580,33]],[[12,0,1581,6],[16,0,1581,10],[36,0,1581,30],[40,0,1581,34],[60,0,1581,54],[61,0,1581,55],[67,0,1581,61],[70,0,1581,64],[71,0,1581,65],[73,0,1581,67]],[[16,0,1582,8],[22,0,1582,14],[41,0,1582,33],[44,0,1582,69],[64,0,1582,89],[65,0,1582,90],[69,0,1582,94],[70,0,1582,95],[77,0,1582,102],[78,0,1582,103],[80,0,1582,105],[81,0,1582,106],[88,0,1582,113],[89,0,1582,114],[93,0,1582,118],[98,0,1582,123],[101,0,1582,126],[102,0,1582,127],[103,0,1582,128]],[[16,0,1584,8],[20,0,1584,12],[39,0,1584,31],[41,0,1584,33]],[[20,0,1585,10],[34,0,1585,24],[35,0,1585,25],[38,0,1585,28],[39,0,1585,29],[42,0,1585,32],[47,0,1585,37],[48,0,1585,38]],[[17,0,1586,9]],[[21,0,1586,15]],[[20,0,1587,10],[30,0,1587,20],[31,0,1587,21],[34,0,1587,24],[35,0,1587,25],[38,0,1587,28],[43,0,1587,33],[44,0,1587,34]],[[17,0,1588,9]],[[13,0,1589,7]],[[17,0,1589,13]],[[16,0,1590,8],[26,0,1590,18],[29,0,1590,21],[33,0,1590,25],[34,0,1590,26]],[[13,0,1591,7]],[[9,0,1592,5]],[[8,0,1595,4],[15,0,1595,11]],[[12,0,1596,6],[22,0,1596,16]],[[12,0,1597,6],[26,0,1597,20]],[[9,0,1598,37],[10,0,1598,38]],[[4,0,1599,2],[5,0,1599,3]],[[4,0,1601,2]],[],[],[],[],[],[],[[7,0,1608,5]],[[4,0,1609,12],[16,0,1609,24],[17,0,1609,25],[22,0,1609,42]],[[8,0,1610,4],[15,0,1610,11],[19,0,1610,15],[20,0,1610,16],[25,0,1610,21],[26,0,1610,22],[32,0,1610,28],[34,0,1610,30],[35,0,1610,31],[36,0,1610,32],[40,0,1610,36],[41,0,1611,6],[45,0,1611,10],[46,0,1611,11],[47,0,1611,12],[48,0,1611,13],[49,0,1612,5],[50,0,1612,6]],[[4,0,1613,2],[5,0,1613,3]],[[1,0,1614,1]],[[0,0,1617,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,1630,3]],[[0,0,1631,0],[6,0,1631,6],[13,0,1631,13],[27,0,1631,27]],[[4,0,1635,2],[16,0,1635,21],[19,0,1635,48]],[[8,0,1635,21],[16,0,1635,24],[19,0,1635,21],[22,0,1635,24],[23,0,1635,48]],[[8,0,1633,9],[29,0,1633,25],[32,0,1633,47],[34,0,1633,49],[35,0,1633,50]],[[4,0,1636,2],[5,0,1636,3]],[[4,0,1638,2],[55,0,1638,53]],[[4,0,1639,2],[10,0,1639,8],[11,0,1639,9],[19,0,1639,17],[20,0,1639,21],[29,0,1639,41],[31,0,1639,43],[35,0,1639,55]],[[8,0,1640,4],[14,0,1640,10],[17,0,1640,13],[20,0,1640,16],[30,0,1640,26],[31,0,1640,27],[40,0,1640,36],[42,0,1640,38],[46,0,1640,42],[47,0,1640,69],[48,0,1640,70]],[[8,0,1641,4],[15,0,1641,11],[19,0,1641,15],[23,0,1641,19],[24,0,1641,20],[27,0,1641,23],[28,0,1641,24],[29,0,1641,25]],[[4,0,1642,2],[5,0,1642,3]],[[4,0,1644,2],[59,0,1644,57]],[[4,0,1645,2],[8,0,1645,6],[13,0,1645,11]],[[8,0,1646,4],[15,0,1646,11],[20,0,1646,16],[21,0,1646,17],[25,0,1646,21],[26,0,1646,22],[29,0,1646,25],[31,0,1646,27],[34,0,1646,30],[38,0,1646,34],[39,0,1646,35],[55,0,1646,51],[56,0,1646,52],[57,0,1646,53]],[[4,0,1647,2],[5,0,1647,3]],[[4,0,1649,2],[90,0,1649,88]],[[4,0,1650,2],[12,0,1650,10]],[[8,0,1651,4],[15,0,1651,11],[19,0,1651,15],[20,0,1651,16],[27,0,1651,23],[28,0,1651,27],[32,0,1651,31],[33,0,1651,32],[38,0,1651,37],[39,0,1651,38],[40,0,1651,39],[41,0,1651,40]],[[4,0,1652,2],[5,0,1652,3]],[[4,0,1654,2],[9,0,1654,7],[10,0,1654,8],[19,0,1654,37],[21,0,1654,39],[26,0,1654,59],[28,0,1654,61],[33,0,1654,75]],[[8,0,1655,4],[12,0,1655,8],[13,0,1655,9],[29,0,1655,25],[30,0,1655,26],[34,0,1655,30],[35,0,1655,31],[40,0,1655,36],[41,0,1655,37],[50,0,1655,46],[52,0,1655,48],[57,0,1655,53],[59,0,1655,55],[64,0,1655,60],[65,0,1655,61],[66,0,1655,62],[67,0,1655,63]],[[8,0,1656,4],[15,0,1656,11],[19,0,1656,15],[20,0,1656,16]],[[4,0,1657,2],[5,0,1657,3]],[[4,0,1659,2],[11,0,1659,9],[12,0,1659,10],[21,0,1659,39],[23,0,1659,41],[35,0,1659,72]],[[8,0,1660,4],[12,0,1660,8],[13,0,1660,9],[29,0,1660,25],[30,0,1660,26],[34,0,1660,30],[35,0,1660,31],[42,0,1660,38],[43,0,1660,39],[52,0,1660,48],[54,0,1660,50],[66,0,1660,62],[67,0,1660,63],[68,0,1660,64],[69,0,1660,65]],[[8,0,1661,4],[15,0,1661,11],[19,0,1661,15],[20,0,1661,16]],[[4,0,1662,2],[5,0,1662,3]],[[4,0,1664,2],[9,0,1664,7],[10,0,1664,8],[16,0,1664,22]],[[8,0,1665,4],[12,0,1665,8],[13,0,1665,9],[29,0,1665,25],[30,0,1665,26],[34,0,1665,30],[35,0,1665,31],[40,0,1665,36],[41,0,1665,37],[47,0,1665,43],[48,0,1665,44],[49,0,1665,45],[50,0,1665,46]],[[8,0,1666,4],[15,0,1666,11],[19,0,1666,15],[20,0,1666,16]],[[4,0,1667,2],[5,0,1667,3]],[[4,0,1669,2],[15,0,1669,13],[16,0,1669,14],[22,0,1669,28]],[[8,0,1670,4],[12,0,1670,8],[13,0,1670,9],[29,0,1670,25],[30,0,1670,26],[34,0,1670,30],[35,0,1670,31],[46,0,1670,42],[47,0,1670,43],[53,0,1670,49],[54,0,1670,50],[55,0,1670,51],[56,0,1670,52]],[[8,0,1671,4],[15,0,1671,11],[19,0,1671,15],[20,0,1671,16]],[[4,0,1672,2],[5,0,1672,3]],[[4,0,1677,2],[11,0,1677,9],[12,0,1677,10],[20,0,1677,46],[22,0,1677,48],[25,0,1677,51],[36,0,1677,73]],[[8,0,1678,4],[12,0,1678,8],[20,0,1678,16],[22,0,1678,18]],[[12,0,1679,6],[16,0,1679,10],[17,0,1679,11],[33,0,1679,27],[34,0,1679,28],[38,0,1679,32],[39,0,1679,33],[46,0,1679,40],[47,0,1679,41],[55,0,1679,49],[56,0,1679,50],[57,0,1679,51],[58,0,1679,52]],[[9,0,1680,5]],[[13,0,1680,11],[17,0,1680,15],[28,0,1680,26],[30,0,1680,28]],[[12,0,1681,6],[16,0,1681,10],[17,0,1681,11],[33,0,1681,27],[34,0,1681,28],[38,0,1681,32],[39,0,1681,33],[46,0,1681,40],[47,0,1681,41],[50,0,1681,44],[61,0,1681,55],[62,0,1681,56],[63,0,1681,57],[64,0,1681,58]],[[9,0,1682,5]],[[8,0,1683,4],[15,0,1683,11],[19,0,1683,15],[20,0,1683,16]],[[4,0,1684,2],[5,0,1684,3]],[[4,0,1689,2],[14,0,1689,12],[15,0,1689,13],[23,0,1689,49],[25,0,1689,51],[28,0,1689,54],[39,0,1689,76]],[[8,0,1690,4],[12,0,1690,8],[20,0,1690,16],[22,0,1690,18]],[[12,0,1691,6],[16,0,1691,10],[17,0,1691,11],[33,0,1691,27],[34,0,1691,28],[38,0,1691,32],[39,0,1691,33],[49,0,1691,43],[50,0,1691,44],[58,0,1691,52],[59,0,1691,53],[60,0,1691,54],[61,0,1691,55]],[[9,0,1692,5]],[[13,0,1692,11],[17,0,1692,15],[28,0,1692,26],[30,0,1692,28]],[[12,0,1693,6],[16,0,1693,10],[17,0,1693,11],[33,0,1693,27],[34,0,1693,28],[38,0,1693,32],[39,0,1693,33],[49,0,1693,43],[50,0,1693,44],[53,0,1693,47],[64,0,1693,58],[65,0,1693,59],[66,0,1693,60],[67,0,1693,61]],[[9,0,1694,5]],[[8,0,1695,4],[15,0,1695,11],[19,0,1695,15],[20,0,1695,16]],[[4,0,1696,2],[5,0,1696,3]],[[4,0,1701,2],[9,0,1701,7],[10,0,1701,8],[18,0,1701,44],[20,0,1701,46],[23,0,1701,49],[34,0,1701,71]],[[8,0,1702,4],[12,0,1702,8],[20,0,1702,16],[22,0,1702,18]],[[12,0,1703,6],[16,0,1703,10],[17,0,1703,11],[33,0,1703,27],[34,0,1703,28],[38,0,1703,32],[39,0,1703,33],[44,0,1703,38],[45,0,1703,39],[53,0,1703,47],[54,0,1703,48],[55,0,1703,49],[56,0,1703,50]],[[9,0,1704,5]],[[13,0,1704,11],[17,0,1704,15],[28,0,1704,26],[30,0,1704,28]],[[12,0,1705,6],[16,0,1705,10],[17,0,1705,11],[33,0,1705,27],[34,0,1705,28],[38,0,1705,32],[39,0,1705,33],[44,0,1705,38],[45,0,1705,39],[48,0,1705,42],[59,0,1705,53],[60,0,1705,54],[61,0,1705,55],[62,0,1705,56]],[[9,0,1706,5]],[[8,0,1707,4],[15,0,1707,11],[19,0,1707,15],[20,0,1707,16]],[[4,0,1708,2],[5,0,1708,3]],[[4,0,1713,2],[13,0,1713,11],[14,0,1713,12],[22,0,1713,48],[24,0,1713,50],[27,0,1713,53],[38,0,1713,75]],[[8,0,1714,4],[12,0,1714,8],[20,0,1714,16],[22,0,1714,18]],[[12,0,1715,6],[16,0,1715,10],[17,0,1715,11],[33,0,1715,27],[34,0,1715,28],[38,0,1715,32],[39,0,1715,33],[48,0,1715,42],[49,0,1715,43],[57,0,1715,51],[58,0,1715,52],[59,0,1715,53],[60,0,1715,54]],[[9,0,1716,5]],[[13,0,1716,11],[17,0,1716,15],[28,0,1716,26],[30,0,1716,28]],[[12,0,1717,6],[16,0,1717,10],[17,0,1717,11],[33,0,1717,27],[34,0,1717,28],[38,0,1717,32],[39,0,1717,33],[48,0,1717,42],[49,0,1717,43],[52,0,1717,46],[63,0,1717,57],[64,0,1717,58],[65,0,1717,59],[66,0,1717,60]],[[9,0,1718,5]],[[8,0,1719,4],[15,0,1719,11],[19,0,1719,15],[20,0,1719,16]],[[4,0,1720,2],[5,0,1720,3]],[[1,0,1722,1]]],"sourcesContent":["import {combineLatest, forkJoin, from, Observable, of} from 'rxjs';\r\n\r\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\r\nimport {\r\n  collection,\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  endAt,\r\n  endBefore,\r\n  FieldPath,\r\n  Firestore,\r\n  getDocs,\r\n  limit,\r\n  limitToLast,\r\n  orderBy,\r\n  OrderByDirection,\r\n  query,\r\n  Query,\r\n  QueryConstraint,\r\n  QuerySnapshot,\r\n  startAfter,\r\n  startAt,\r\n  where,\r\n  WhereFilterOp,\r\n  writeBatch,\r\n  WriteBatch\r\n} from 'firebase/firestore';\r\n\r\nimport {\r\n  addCreatedDate,\r\n  addDataToItem,\r\n  addModifiedDate,\r\n  convertTimestampToDate,\r\n  getDocRefWithId,\r\n  getRefFromPath,\r\n  getSubCollection\r\n} from './helpers';\r\nimport {SubCollectionQuery} from './sub-collection-query';\r\nimport {BaseFirestoreWrapper, FirestoreErrorExt} from './interfaces';\r\nimport {FireItem, FirestoreItem, FirestoreMetadata} from './models/firestoreItem';\r\nimport {SubCollectionWriter} from './sub-collection-writer';\r\nimport {moveItemInArray, transferArrayItem} from './drag-utils';\r\n\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport enum DocNotExistAction {\r\n  /** returns a null object */\r\n  RETURN_NULL,\r\n\r\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n  RETURN_ALL_BUT_DATA,\r\n\r\n  /** do not return at all until it does exist */\r\n  FILTER,\r\n\r\n  /** return doc not found error 'doc_not_found' */\r\n  THROW_DOC_NOT_FOUND,\r\n}\r\n\r\n/** Used internally */\r\ninterface CurrentDocSubCollectionSplit {\r\n  /** contains the document that is considered the current */\r\n  currentDoc: FireItem<{}>;\r\n  /** sub collections of current document */\r\n  subCollections: { [index: string]: any };\r\n}\r\n\r\n\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n\r\n  /**\r\n   * Constructor for AngularFirestoreWrapper\r\n   *\r\n   * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n   * @param defaultDocId The default name given to a subCollection document when no name is given\r\n   */\r\n  constructor(private fs: BaseFirestoreWrapper, public defaultDocId: string = 'data') {\r\n  }\r\n\r\n  /* ----------  LISTEN -------------- */\r\n\r\n  /**\r\n   *\r\n   * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n   *\r\n   * Triggers for any change in any document that is listened to.\r\n   *\r\n   *\r\n   * E.x:\r\n   *      const subCollectionQueries: SubCollectionQuery[] = [\r\n   *         { name: 'data' },\r\n   *         { name: 'secure' },\r\n   *         { name: 'variants' },\r\n   *         { name: 'images',\r\n   *           queryFn: ref => ref.orderBy('index'),\r\n   *           collectionWithNames: [\r\n   *             { name: 'secure'}\r\n   *           ]\r\n   *         },\r\n   *     ];\r\n   *\r\n   *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n   *\r\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n   * All logic is in listenForDocDeepRecursiveHelper$.\r\n   *\r\n   * @param docRef - a docRef with potential queryFn\r\n   * @param subCollectionQueries - see example\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  public listenForDoc$<T = FirestoreItem | DocumentData>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA): Observable<FireItem<T>> {\r\n\r\n    return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(\r\n      map(data => data as FireItem<T>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n   *\r\n   * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n   * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n   *\r\n   *\r\n   *    Example usage.\r\n   *\r\n   *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n   *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n   *\r\n   *    constructor(private ngFireStore: AngularFirestore) {\r\n   *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n   *    }\r\n   *\r\n   *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n   *    }\r\n   *\r\n   *    If you do not wish to listen for changes and only care about getting the values once\r\n   *\r\n   *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n   *          take(1)\r\n   *        );\r\n   *    }\r\n   *\r\n   * @param _query the collectionRef which will be listened to\r\n   * @param subCollectionQueries\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   */\r\n  public listenForCollection$<T = FirestoreItem | DocumentData>(\r\n    _query: Query<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.listenForCollectionSimple$<T>(_query).pipe(\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n\r\n        if (items == null || items.length === 0) {\r\n          return of([]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(items);\r\n        }\r\n\r\n        const collectionListeners: Array<Observable<any>> = [];\r\n\r\n        items.forEach(item => {\r\n\r\n          const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n\r\n          collectionListeners.push(collectionListener);\r\n        });\r\n\r\n        /* Finally return the combined collection listeners */\r\n        return combineLatest(collectionListeners);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n   */\r\n  public listenForCollectionRecursively$<T = FirestoreItem | DocumentData>(\r\n    collectionPath: string,\r\n    collectionKey: string,\r\n    orderKey?: string): Observable<any> {\r\n\r\n    // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n    const collectionQuery = new QueryContainer<T>(getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>);\r\n    if (orderKey != null) {\r\n      collectionQuery.orderBy(orderKey);\r\n    }\r\n\r\n    return this.listenForCollectionSimple$<T>(collectionQuery.query).pipe(\r\n      mergeMap((items: FireItem<T>[]) => {\r\n\r\n        if (items.length <= 0) {\r\n          return of([]);\r\n        } // TODO  perhaps make this throw an error so that we can skip it\r\n\r\n        // if (items.length <= 0) { throwError('No more '); }\r\n\r\n        const nextLevelObs: Array<Observable<FireItem<T>>> = [];\r\n\r\n        for (const item of items) {\r\n\r\n          // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n          const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey);  // one level deeper\r\n\r\n          const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(\r\n            map((nextLevelItems: Array<FireItem<T>>) => {\r\n              if (nextLevelItems.length > 0) {\r\n                return {...item, [collectionKey]: nextLevelItems} as FireItem<T>;\r\n              } else {\r\n                return {...item} as FireItem<T>;\r\n              }  // dont include an empty array\r\n            }),\r\n          );\r\n          nextLevelObs.push(nextLevelItems$);\r\n        }\r\n\r\n        return combineLatest(nextLevelObs).pipe(\r\n          tap(val => console.log(val))\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /* ---------- ADD -------------- */\r\n\r\n  /**\r\n   * Add document to firestore and split it up into sub collection.\r\n   *\r\n   * @param data the data to be saved\r\n   * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n   * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n   * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n   * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n   */\r\n  public add$<T = FirestoreItem>(\r\n    data: T,\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionWriters: SubCollectionWriter[] = [],\r\n    isAddDates: boolean = true,\r\n    docId?: string): Observable<FireItem<T>> {\r\n\r\n    if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/invalid-sub-collection-writers',\r\n        code: 'unknown',\r\n        message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n        stack: '',\r\n        data,\r\n        subCollectionWriters,\r\n        docId\r\n      };\r\n\r\n      throw error;\r\n    }\r\n\r\n    let currentDoc;\r\n    let subCollections: { [index: string]: any; } = {};\r\n\r\n    /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n    * Each item in the array will be saved as a map with the key being the array index\r\n    * We still want the return value of this function to be as an array non as a map\r\n    */\r\n    if (Array.isArray(data) && docId) {\r\n      currentDoc = data;\r\n    } else {\r\n      const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n      currentDoc = split.currentDoc;\r\n      subCollections = split.subCollections;\r\n    }\r\n\r\n    return this.addSimple$<T>(currentDoc as T, collectionRef, isAddDates, docId).pipe(\r\n      /* Add Sub/sub collections*/\r\n      mergeMap((currentData: FireItem<T>) => {\r\n\r\n        const subWriters: Array<Observable<any>> = [];\r\n\r\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n          let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n          let subDocId: string | undefined;\r\n\r\n          if (subCollectionWriters) {\r\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n          }\r\n\r\n          const subCollectionRef: CollectionReference = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n\r\n          /* Handle array and object differently\r\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n          * If a docId is given we should save it using that docId under a single doc.\r\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n          if (Array.isArray(subCollectionValue)) {\r\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n\r\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n              const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n                map(item => {\r\n                  // return {[key]: item};\r\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n                })\r\n              );\r\n              subWriters.push(subWriter);\r\n\r\n            } else { /* docId is undefined so we save each object in the array separate */\r\n              subCollectionValue.forEach((arrayValue: FireItem<{}>) => {\r\n\r\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(\r\n                  map(item => {\r\n                    // return {[key]: [item]};\r\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                    return {key: subCollectionKey, value: [item]};\r\n                  })\r\n                );\r\n\r\n                subWriters.push(subWriter);\r\n              });\r\n            }\r\n          } else { /* Not an array so a single Object*/\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n\r\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n            const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n              map(item => {\r\n                // return {[key]: item};\r\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n              })\r\n            );\r\n\r\n            subWriters.push(subWriter);\r\n          }\r\n        } /* end of iteration */\r\n\r\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n\r\n          /* the pipe only matters for the return value not for writing the data */\r\n          return combineLatest(subWriters).pipe(\r\n            // tap(sub => console.log(sub)),\r\n\r\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n            // TODO firestore.\r\n\r\n            map((docDatas: Array<Map<string, []>>) => { /* List of sub docs*/\r\n              const groupedData = {};\r\n\r\n              docDatas.forEach((doc: { [index: string]: any }) => { /* iterate over each doc */\r\n\r\n                const key = doc.key;\r\n                const value = doc.value;\r\n\r\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                // @ts-ignore\r\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                  // @ts-ignore\r\n                  (groupedData[key] as Array<any>).push(value[0]);\r\n                } else {\r\n                  // @ts-ignore\r\n                  groupedData[key] = value;\r\n                }\r\n              });\r\n\r\n              return groupedData as T;\r\n            }),\r\n\r\n            // tap(groupedData => console.log(groupedData)),\r\n\r\n            map((groupedData: T) => {\r\n              return {...currentData, ...groupedData} as T;\r\n            }),\r\n            // tap(d => console.log(d)),\r\n          );\r\n        } else {\r\n          return of(currentData);\r\n        }\r\n      })\r\n    ).pipe(\r\n      // @ts-ignore\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /* ----------  EDIT -------------- */\r\n\r\n  /**\r\n   * Update document and child documents\r\n   *\r\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n   * so its possible to introduce spelling mistakes on attributes and so forth\r\n   *\r\n   * @param data the data that is to be added or updated { [field: string]: any }\r\n   * @param docRef DocumentReference to be updated\r\n   * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n   * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n   */\r\n  public update$<A extends { [field: string]: any }>(data: Partial<A>,\r\n                                                     docRef: DocumentReference,\r\n                                                     subCollectionWriters: SubCollectionWriter[] = [],\r\n                                                     isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n      return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n    }\r\n\r\n    const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Update/ add data to the firestore documents\r\n   *\r\n   * @param docRefs list of DocumentReference to be have their data updated\r\n   * @param data data to add/update\r\n   * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n   */\r\n  public updateMultiple$<A>(docRefs: DocumentReference[], data: A, isAddModifiedDate: boolean = true): Observable<void> {\r\n    // const batch = this.fs.firebaseApp.firestore().batch();\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.update(docRef, data);\r\n    });\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /**\r\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n   * and then delete the old doc.\r\n   * returns the new doc once the delete is done.\r\n   *\r\n   * @param docRef DocumentReference to have its id changed\r\n   * @param newId the new id\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n   */\r\n  public changeDocId$<T>(docRef: DocumentReference,\r\n                         newId: string,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         subCollectionWriters?: SubCollectionWriter[]): Observable<FireItem<T>> {\r\n\r\n    if (subCollectionWriters == null) {\r\n      subCollectionWriters = subCollectionQueries as SubCollectionWriter[];\r\n    }\r\n\r\n    const collectionRef: CollectionReference = docRef.parent;\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      map((oldData: T) => this.cleanExtrasFromData(oldData, subCollectionWriters)),\r\n      switchMap((oldData: T) => {\r\n        return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe( /* add the data under id*/\r\n          mergeMap(newData => { /* delete the old doc */\r\n            return this.delete$(docRef, subCollectionQueries).pipe(\r\n              map(() => newData) /* keep the new data */\r\n            );\r\n          }),\r\n        );\r\n      }),\r\n      catchError(err => {\r\n        console.log('Failed to Change Doc Id: ' + err);\r\n        throw err;\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n  /* Move Item in Array */\r\n\r\n\r\n  /**\r\n   * Moved item within the same list so we need to update the index of all items in the list;\r\n   * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n   * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   */\r\n  public moveItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                       fromIndex: number,\r\n                                                       toIndex: number,\r\n                                                       useCopy = false): Observable<void> {\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n      return of();\r\n    }\r\n\r\n    if (items[0]?.firestoreMetadata == null) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n        code: 'not-found',\r\n        message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n      };\r\n      throw error;\r\n    }\r\n\r\n    const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n   * Not called directly.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   * @protected\r\n   */\r\n  protected getBatchFromMoveItemInIndexedDocs<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                           fromIndex: number,\r\n                                                                           toIndex: number,\r\n                                                                           useCopy = false): WriteBatch {\r\n\r\n    const lowestIndex = Math.min(fromIndex, toIndex);\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n      return batch;\r\n    }\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    moveItemInArray<A>(usedItems, fromIndex, toIndex);\r\n\r\n    const listSliceToUpdate: Array<FireItem<A>> = usedItems.slice(lowestIndex);\r\n\r\n    let i = lowestIndex;\r\n    for (const item of listSliceToUpdate) {\r\n      if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n        item.index = i;\r\n      }\r\n      const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n      batch.update(ref, {index: i});\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indexToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                indexToDelete: number,\r\n                                                                subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    const itemToDelete = usedItems[indexToDelete];\r\n\r\n    // get the delete batch that also contains any sub collections of the item\r\n    return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n      map((batch) => {\r\n        // sort and remove the item from the usedItems and then add the update index to the batch\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        usedItems.splice(indexToDelete, 1);\r\n\r\n        this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch);\r\n\r\n        return batch;\r\n      }),\r\n\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indicesToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemsInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                 indicesToDelete: number[],\r\n                                                                 subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                 useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    usedItems.sort(item => item.index); // make sure array is sorted by index\r\n\r\n    const itemsToDelete = usedItems.filter((item, i) => {\r\n      return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n    });\r\n\r\n    // iterate in reverse so as to not change the indices,\r\n    // the indices to delete must also be sorted\r\n    indicesToDelete.sort();\r\n    for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n      usedItems.splice(indicesToDelete[i], 1);\r\n    }\r\n\r\n    const docRefsObs$: Observable<DocumentReference[]>[] = [];\r\n\r\n    // get the docRefs for items to be deleted including the ones in the subCollections\r\n    itemsToDelete.forEach(itemToDelete => {\r\n\r\n      const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n        take(1)\r\n      );\r\n      docRefsObs$.push(obs$);\r\n    });\r\n\r\n\r\n    return forkJoin(docRefsObs$).pipe(\r\n      take(1),\r\n      map((listOfDocRefs) => {\r\n        // concat all the separate docRefs lists into one array of docRefs\r\n        let docRefs: DocumentReference[] = [];\r\n\r\n        listOfDocRefs.forEach(refs => {\r\n          docRefs = docRefs.concat(refs);\r\n        });\r\n\r\n        return docRefs;\r\n      }),\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      map((batch: WriteBatch) => this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch)),\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Run this on collections with a fixed order using an index: number attribute;\r\n   * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n   * Basically needs to be run after a delete\r\n   *\r\n   * @param items\r\n   * @param batch\r\n   * @protected\r\n   */\r\n  protected getBatchFromUpdateIndexFromListOfDocs<A extends { index: number }>(\r\n    items: Array<FireItem<A>>,\r\n    batch: WriteBatch = writeBatch(this.fs.firestore)\r\n  ): WriteBatch {\r\n\r\n    items.forEach((item, index) => {\r\n      if (item.index !== index) {\r\n        item.index = index; // this is just so that the given array's index is also updated immediately\r\n        const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n        batch.update(ref, {index});\r\n      }\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  public transferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): Observable<void> {\r\n\r\n    const batch: WriteBatch = this.getBatchFromTransferItemInIndexedDocs(previousArray,\r\n      currentArray,\r\n      previousIndex,\r\n      currentIndex,\r\n      currentArrayName,\r\n      additionalDataUpdateOnMovedItem,\r\n      isUpdateModifiedDateOnMovedItem,\r\n      useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /* ----------  DELETE -------------- */\r\n\r\n  /**\r\n   * Delete Document and child documents\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public delete$(docRef: DocumentReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<void> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      return this.fs.delete(docRef);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      switchMap((docRefList: DocumentReference<DocumentData>[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(); }\r\n      //   else { throw err; }\r\n      // }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param batch\r\n   */\r\n  public getDeleteBatch$(docRef: DocumentReference,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         batch: WriteBatch = writeBatch(this.fs.firestore)): Observable<WriteBatch> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      batch.delete(docRef);\r\n      return of(batch);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public deleteMultipleByPaths$(docPaths: string[]): Observable<any> {\r\n    const docRefs: DocumentReference[] =\r\n      docPaths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n\r\n    return this.deleteMultipleSimple$(docRefs);\r\n  }\r\n\r\n  /**\r\n   * Delete Documents and child documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteMultiple$(docRefs: DocumentReference[], subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n\r\n    const deepDocRefs$: Array<Observable<any>> = [];\r\n\r\n    docRefs.forEach(docRef => {\r\n      const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n      deepDocRefs$.push(docRefs$);\r\n    });\r\n\r\n    return combineLatest(deepDocRefs$).pipe(\r\n      // tap(lists => console.log(lists)),\r\n      map((lists: any[]) => {\r\n        let mainDocRefList: DocumentReference[] = [];\r\n        lists.forEach(list => {\r\n          mainDocRefList = mainDocRefList.concat(list);\r\n        });\r\n        return mainDocRefList;\r\n      }),\r\n      // tap(lists => console.log(lists)),\r\n      switchMap((docRefList: DocumentReference[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete all documents and sub collections as specified in subCollectionQueries.\r\n   * Not very efficient and causes a lot of db reads.\r\n   * If possible use the firebase CLI or the console instead when deleting large collections.\r\n   *\r\n   * @param collectionRef\r\n   * @param subCollectionQueries\r\n   */\r\n  public deleteCollection$(collectionRef: CollectionReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(\r\n      switchMap(docRefs => this.deleteMultiple$(docRefs))\r\n    ).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete firestore document by path\r\n   * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n   *\r\n   * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteDocByPath$(docPath: string, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    const docRef = getRefFromPath(docPath, this.fs.firestore) as DocumentReference;\r\n    return this.delete$(docRef, subCollectionQueries);\r\n  }\r\n\r\n  /**\r\n   * Delete document by FirestoreItem\r\n   *\r\n   * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n   *\r\n   * @param item FirestoreItem to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteItem$<T>(item: FireItem<T>, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n\r\n    return this.deleteMultipleSimple$(docRefs).pipe(\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /* ---- OTHER ---- */\r\n\r\n  /**\r\n   * clean FirestoreBaseItem properties from the data.\r\n   * Usually done if you wish to save the data to firestore, since some FirestoreBaseItem properties are of non allowed types.\r\n   *\r\n   * Goes through each level and removes DbItemExtras\r\n   * In case you wish to save the data\r\n   *\r\n   * @param data data to be cleaned, either single item or an array of items\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to locate them\r\n   * @param additionalFieldsToRemove\r\n   */\r\n\r\n  cleanExtrasFromData<T>(data: T & DocumentData,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): T;\r\n\r\n  cleanExtrasFromData<T>(datas: Array<T & DocumentData>,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): Array<T>;\r\n\r\n  public cleanExtrasFromData<T>(data: T & DocumentData | Array<T & DocumentData>,\r\n                                subCollectionWriters: SubCollectionWriter[] = [],\r\n                                additionalFieldsToRemove: string[] = []): T | Array<T> {\r\n\r\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n    // const dataToBeCleaned = data;\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n      const cleanDatas: Array<T> = [];\r\n\r\n      data.forEach(d => {\r\n        cleanDatas.push(\r\n          this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove) as T\r\n        );\r\n      });\r\n\r\n      return cleanDatas;\r\n\r\n    } else {\r\n      return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove) as T;\r\n    }\r\n  }\r\n\r\n\r\n  /* ----------  PROTECTED METHODS -------------- */\r\n\r\n  /**\r\n   * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n   * and also allows for to choose action to take when document does not exist\r\n   *\r\n   * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n   *\r\n   * @param docRef DocumentReference that will be listened to\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  protected listenForDocSimple$<T>(docRef: DocumentReference<any>,\r\n                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA\r\n  ): Observable<FireItem<T>> {\r\n\r\n    return this.fs.doc(docRef).pipe(\r\n      tap((snapshot: DocumentSnapshot) => {\r\n        if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n          const error: FirestoreErrorExt = {\r\n            name: 'FirebaseErrorExt',\r\n            code: 'not-found',\r\n            message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n            docRef\r\n          };\r\n          throw error;\r\n        }\r\n      }),\r\n\r\n      filter((snapshot: DocumentSnapshot) => {\r\n        return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n      }),\r\n\r\n      map((snapshot: DocumentSnapshot) => {\r\n\r\n        console.log(snapshot.exists());\r\n\r\n        if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n          const data = snapshot.data() as T;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: snapshot.id,\r\n            ref: snapshot.ref as DocumentReference<T>,\r\n            path: docRef.path,\r\n            isExists: snapshot.exists(),\r\n            snapshotMetadata: snapshot.metadata\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n          return null;\r\n        }\r\n        return null;\r\n      }),\r\n      map((data) => {\r\n        if (data != null) {\r\n          return convertTimestampToDate(data as FireItem<{}>);\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    ) as Observable<FireItem<T>>;\r\n  }\r\n\r\n  /**\r\n   * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n   * Used internally, please use listenForCollection$() instead.\r\n   *\r\n   * @param _query the Query which will be listened to\r\n   * @protected\r\n   */\r\n  protected listenForCollectionSimple$<T>(_query: Query<T>): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.fs.collection(_query).pipe(\r\n      map((snap: QuerySnapshot<T>) => {\r\n        return snap.docs.map(snapshot => {\r\n          const data = snapshot.data() as T;\r\n\r\n          const id = snapshot.id;\r\n          const ref = snapshot.ref as DocumentReference<T>;\r\n          const path = ref.path;\r\n          const snapshotMetadata = snapshot.metadata;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id,\r\n            path,\r\n            ref,\r\n            snapshotMetadata,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        });\r\n      }),\r\n      map((datas: Array<FireItem<T>>) => datas.map(data => {\r\n        convertTimestampToDate(data);\r\n        return data;\r\n      }))\r\n    ) as Observable<Array<FireItem<T>>>;\r\n  }\r\n\r\n  /**\r\n   * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n   *\r\n   * Please use listenForDoc or listenForCollection.\r\n   *\r\n   * @param item\r\n   * @param subCollectionQueries\r\n   * @protected\r\n   */\r\n  protected listenForCollectionsDeep<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<FireItem<T>[]> {\r\n\r\n    if (item == null) {\r\n      return of([item]);\r\n    }\r\n    if (subCollectionQueries.length <= 0) {\r\n      return of([item]);\r\n    }\r\n\r\n    const collectionListeners: Array<Observable<any>> = [];\r\n\r\n    /* Iterate over each sub collection we have given and create collection listeners*/\r\n    subCollectionQueries.forEach(subCollectionQuery => {\r\n\r\n      const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n      if (subCollectionQuery.queryConstraints) {\r\n        queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n        // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      }\r\n      // if (subCollectionQuery.queryFn) {\r\n      //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      // }\r\n\r\n      const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n        // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n        /* Uncomment to see data on each update */\r\n        // tap(d => console.log(d)),\r\n        // filter(docs => docs != null),\r\n        /* Listen For and Add any Potential Sub Docs*/\r\n        // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n        mergeMap((items: FireItem<{}>[]) => {\r\n\r\n          if (!subCollectionQuery.subCollections) {\r\n            return of(items);\r\n          }\r\n\r\n          const docListeners: Array<Observable<any>> = [];\r\n\r\n          items = items.filter(d => d != null); // filter out potential nulls\r\n\r\n          items.forEach((subItem: FireItem<{}>) => {\r\n            const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n            docListeners.push(subDocAndCollections$);\r\n          });\r\n\r\n          if (docListeners.length <= 0) {\r\n            return of([]);\r\n          } /* subCollectionQuery is empty or doesnt exist */\r\n\r\n          return combineLatest(docListeners).pipe(\r\n            // tap(val => console.log(val))\r\n          );\r\n        }), /* End of Listening for sub docs */\r\n        /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n        and we only care about the data. So we remove the array and just make it one object with the\r\n        subCollectionQuery name as key and docs[0] as value */\r\n        map((items: FireItem<{}>[]) => {\r\n          const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n\r\n          if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n            return {[subCollectionQuery.name]: items[0]};\r\n          } else {\r\n            return {[subCollectionQuery.name]: items};\r\n          }\r\n        }),\r\n        // tap(d => console.log(d)),\r\n      );\r\n\r\n      collectionListeners.push(collectionListener);\r\n    });\r\n\r\n    /* Finally return the combined collection listeners*/\r\n    // @ts-ignore\r\n    return combineLatest(collectionListeners).pipe(\r\n      map((collectionDatas: { [collectionKeyName: string]: FireItem<FireItem<{}>>[] }[]) => {\r\n        // map((collectionDatas) => {\r\n        const datasMap: { [field: string]: any } = {};\r\n\r\n        collectionDatas.forEach((collectionData) => {\r\n\r\n          for (const [collectionName, items] of Object.entries(collectionData)) {\r\n            datasMap[collectionName] = items;\r\n          }\r\n        });\r\n        return datasMap;\r\n      }),\r\n\r\n      map((data: DocumentData) => {\r\n        return {...item, ...data} as FireItem<T>;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n   */\r\n  protected listenForDocDeepRecursiveHelper$<T>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable<any> {\r\n\r\n    /* Listen for the docFs*/\r\n    return this.listenForDocSimple$<T>(docRef, actionIfNotExist).pipe(\r\n      mergeMap((item: FireItem<{}>) => {\r\n\r\n        if (item === null) {\r\n          return of(item);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(item);\r\n        }\r\n\r\n        return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A replacement/extension to the AngularFirestoreCollection.add.\r\n   * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n   * the data with the added properties in FirebaseDbItem\r\n   *\r\n   * Used internally\r\n   *\r\n   * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n   * @param collectionRef the CollectionReference where the document should be added\r\n   * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n   * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n   */\r\n  protected addSimple$<T>(data: T, collectionRef: CollectionReference<T>, isAddDates: boolean = true, id?: string):\r\n    Observable<FireItem<T>> {\r\n\r\n    // let dataToBeSaved: A = Object.assign({}, data);\r\n\r\n    let res$: Observable<any>;\r\n\r\n    if (isAddDates) {\r\n      const date = new Date();\r\n      data = addCreatedDate(data, false, date);\r\n      data = addModifiedDate(data, false, date);\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      const docRef: DocumentReference = getDocRefWithId(collectionRef, id);\r\n      res$ = this.fs.set(docRef, data);\r\n    } else {\r\n      res$ = this.fs.add<T>(collectionRef, data);\r\n    }\r\n\r\n    // if (Array.isArray(data) && isAddDates) {\r\n    //   data = data.map(item => {\r\n    //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n    //   })\r\n    // }\r\n\r\n    res$ = res$.pipe(\r\n      // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n      // tap(ref => console.log(ref)),\r\n      // tap(() => console.log(data)),\r\n      map((ref: DocumentReference<T> | undefined) => {\r\n        if (id === undefined && ref) {\r\n\r\n          const path = ref.path;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: ref.id,\r\n            path,\r\n            ref,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else { // if id is defined it means we used docRef.set and ref is undefined\r\n          const path = collectionRef.path + '/' + id;\r\n          ref = getRefFromPath(path, this.fs.firestore) as DocumentReference<T>;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: id as string,\r\n            ref,\r\n            path,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return res$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /** Used internally for updates that doesn't affect child documents */\r\n  protected updateSimple$<A>(data: A, docRef: DocumentReference, isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n    return this.fs.update(docRef, data);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, used by update deep\r\n   */\r\n  protected updateDeepToBatchHelper<A>(data: A,\r\n                                       docRef: DocumentReference,\r\n                                       subCollectionWriters: SubCollectionWriter[] = [],\r\n                                       isAddModifiedDate: boolean = true,\r\n                                       batch?: WriteBatch): WriteBatch {\r\n\r\n    if (batch === undefined) {\r\n      batch = writeBatch(this.fs.firestore);\r\n    }\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n    const currentDoc = split.currentDoc;\r\n    const subCollections = split.subCollections;\r\n\r\n    // console.log(currentDoc, subCollections);\r\n    batch.update(docRef, currentDoc);\r\n\r\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n\r\n      let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n      let subDocId: string | undefined;\r\n\r\n      if (subCollectionWriters) {\r\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n      }\r\n\r\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n\r\n      // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n      const subCollection = getSubCollection(docRef, subCollectionKey);\r\n      const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n\r\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n   * have an index value and a groupName.\r\n   *\r\n   * @param previousArray\r\n   * @param currentArray\r\n   * @param previousIndex\r\n   * @param currentIndex\r\n   * @param currentArrayName\r\n   * @param additionalDataUpdateOnMovedItem\r\n   * @param isUpdateModifiedDateOnMovedItem\r\n   * @param useCopy\r\n   * @protected\r\n   */\r\n  protected getBatchFromTransferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): WriteBatch {\r\n\r\n    let usedPreviousArray: Array<FireItem<A>>;\r\n    let usedCurrentArray: Array<FireItem<A>>;\r\n    if (useCopy) {\r\n      usedPreviousArray = Object.assign([], previousArray);\r\n      usedCurrentArray = Object.assign([], currentArray);\r\n    } else {\r\n      usedPreviousArray = previousArray;\r\n      usedCurrentArray = currentArray;\r\n    }\r\n\r\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (additionalDataUpdateOnMovedItem !== undefined) {\r\n      const movedItem = usedCurrentArray[currentIndex];\r\n      const movedItemRef = movedItem.firestoreMetadata.ref;\r\n\r\n      const data = {...additionalDataUpdateOnMovedItem, groupName: currentArrayName};\r\n\r\n      if (!useCopy) {\r\n        addDataToItem(movedItem, data, true);\r\n      }\r\n\r\n      if (isUpdateModifiedDateOnMovedItem) {\r\n        const date = new Date();\r\n        addModifiedDate(data, true, date);\r\n\r\n        if (!useCopy) {\r\n          addModifiedDate(movedItem, true, date);\r\n        }\r\n      }\r\n      batch.update(movedItemRef, data);\r\n    }\r\n\r\n    const currentArraySliceToUpdate: Array<FireItem<A>> = usedCurrentArray.slice(currentIndex);\r\n    let i = currentIndex;\r\n    for (const item of currentArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    const prevArraySliceToUpdate: Array<FireItem<A>> = usedPreviousArray.slice(previousIndex);\r\n    i = previousIndex;\r\n    for (const item of prevArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete Documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   */\r\n  protected deleteMultipleSimple$(docRefs: DocumentReference[]): Observable<void> {\r\n\r\n    const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  protected getDeleteMultipleSimpleBatch(docRefs: DocumentReference[], batch: WriteBatch = writeBatch(this.fs.firestore)): WriteBatch {\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.delete(docRef);\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n   *\r\n   * @param dbItem the data to be cleaned\r\n   * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n   * @param additionalFieldsToRemove\r\n   */\r\n  protected removeDataExtrasRecursiveHelper<T>(dbItem: T & DocumentData,\r\n                                               subCollectionWriters: SubCollectionWriter[] = [],\r\n                                               additionalFieldsToRemove: string[] = []): T {\r\n\r\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n    const extraPropertyNames: string[] = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n\r\n    /* Current level delete */\r\n    for (const extraPropertyName of extraPropertyNames) {\r\n      delete dbItem[extraPropertyName];\r\n    }\r\n\r\n    subCollectionWriters.forEach(col => {\r\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n\r\n        const docs: FireItem<T>[] = dbItem[col.name];\r\n        docs.forEach((d, i) => {\r\n\r\n          if (col.subCollections) {\r\n            this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n          } else {\r\n            /*  */\r\n            for (const extraPropertyName of extraPropertyNames) {\r\n              delete dbItem[col.name][i][extraPropertyName];\r\n            }\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n        } else {\r\n          for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[col.name][extraPropertyName];\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return dbItem;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n   * Mainly used to delete a docFs and its sub docs\r\n   * @param ref: DocumentReference | CollectionReference\r\n   * @param subCollectionQueries: SubCollectionQuery[]\r\n   */\r\n  protected getDocumentReferencesDeep$(ref: DocumentReference | CollectionReference,\r\n                                       subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    if (ref instanceof DocumentReference) {\r\n      return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n    } else { // CollectionReference\r\n      return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n    }\r\n  }\r\n\r\n  protected getDocumentReferencesFromDocRef$(docRef: DocumentReference,\r\n                                             subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      take(1),\r\n      map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)),\r\n      // tap(pathList => console.log(pathList)),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n      // tap(item => console.log(item)),\r\n    );\r\n  }\r\n\r\n  protected getDocumentReferencesFromCollectionRef$(collectionRef: CollectionReference,\r\n                                                    subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForCollectionSimple$(collectionRef).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n        let docListeners: Array<Observable<any>>;\r\n        docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n        return combineLatest(docListeners);\r\n      }),\r\n      map((items: FireItem<{}>[]) => {\r\n\r\n        let paths: string[] = [];\r\n\r\n        items.forEach(item => {\r\n          paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n        });\r\n        return paths;\r\n      }),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n   * including child documents using SubCollectionQueries\r\n   *\r\n   * Internal use\r\n   * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n   * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  protected getDocumentReferencesFromItem<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): DocumentReference[] {\r\n\r\n    const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n    return paths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n   */\r\n  protected getPathsFromItemDeepRecursiveHelper<T>(item: FireItem<T>,\r\n                                                   subCollectionQueries: SubCollectionQuery[] = []): string[] {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return [item.firestoreMetadata.path];\r\n    }\r\n    let pathList: string[] = [];\r\n    pathList.push(item.firestoreMetadata.path);\r\n\r\n    subCollectionQueries.forEach(col => {\r\n      if (Array.isArray((item as DocumentData)[col.name]) && !col.docId) {\r\n        /* property is array and not using docId so will contain multiple docs */\r\n\r\n        const items: FireItem<{}>[] = (item as DocumentData)[col.name];\r\n        items.forEach(subItem => {\r\n\r\n          if (col.subCollections) {\r\n            pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n          } else {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n        } else {\r\n          const subItem = ((item as DocumentData)[col.name] as FireItem<{}>);\r\n          if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n          // const path = (dbItem[col.name] as FirestoreItem).path;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return pathList;\r\n  }\r\n\r\n  /**\r\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n   * Only goes one sub level deep;\r\n   */\r\n  protected splitDataIntoCurrentDocAndSubCollections<T>(\r\n    data: T,\r\n    subCollectionWriters: SubCollectionWriter[] = []): CurrentDocSubCollectionSplit {\r\n\r\n    /* Split data into current doc and sub collections */\r\n    let currentDoc: { [index: string]: any; } = {};\r\n    const subCollections: { [index: string]: any; } = {};\r\n\r\n    /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n\r\n    // not array so object\r\n    for (const [key, value] of Object.entries(data)) {\r\n      // console.log(key, value);\r\n      if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n        const subCollectionWriter: SubCollectionWriter | undefined = subCollectionWriters.find(subColl => subColl.name === key);\r\n\r\n        if (subCollectionWriter) {\r\n          subCollections[key] = value;\r\n        } else {\r\n          currentDoc[key] = value;\r\n        }\r\n      } else {\r\n        currentDoc = data;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      currentDoc,\r\n      subCollections\r\n    } as CurrentDocSubCollectionSplit;\r\n  }\r\n\r\n  /**\r\n   * Turn a batch into an Observable instead of Promise.\r\n   *\r\n   * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n   * everything else.\r\n   *\r\n   * This method turns it into an observable\r\n   */\r\n  protected batchCommit$(batch: WriteBatch): Observable<void> {\r\n    return from(batch.commit()).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer<T> {\r\n\r\n  public queryConstraints: QueryConstraint[] = [];\r\n\r\n  constructor(public ref: CollectionReference<T>) {\r\n  }\r\n\r\n  /** factory method to create container from path */\r\n  static fromPath<T>(firestore: Firestore, path: string): QueryContainer<T> {\r\n    const ref = collection(firestore, path) as CollectionReference<T>;\r\n    return new this(ref);\r\n  }\r\n\r\n  /** Returns the query with all the query constraints */\r\n  get query(): Query<T> {\r\n    return query(this.ref, ...this.queryConstraints);\r\n  }\r\n\r\n  /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n  getDocs$(): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs<T>(this.query));\r\n  }\r\n\r\n  where(fieldPath: string | FieldPath, opStr: WhereFilterOp, value: unknown): QueryContainer<T> {\r\n    this.queryConstraints.push(where(fieldPath, opStr, value));\r\n    return this;\r\n  }\r\n\r\n  orderBy(fieldPath: string | FieldPath, directionStr?: OrderByDirection): QueryContainer<T> {\r\n    this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n    return this;\r\n  }\r\n\r\n  limit(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limit(_limit));\r\n    return this;\r\n  }\r\n\r\n  limitToLast(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limitToLast(_limit));\r\n    return this;\r\n  }\r\n\r\n  startAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  startAfter(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAfter(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAfter(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endBefore(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endBefore(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endBefore(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./drag-utils":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[32,0,0,32],[34,0,0,34],[38,0,0,38],[40,0,0,40],[42,0,0,42],[44,0,0,44],[50,0,0,50],[56,0,0,56],[57,0,0,57]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[19,0,1,19],[21,0,1,21],[27,0,1,27],[29,0,1,29],[32,0,1,32],[34,0,1,34],[42,0,1,42],[44,0,1,44],[53,0,1,53],[55,0,1,55],[59,0,1,59],[61,0,1,61],[64,0,1,64],[66,0,1,66],[72,0,1,72],[88,0,1,88],[89,0,1,89]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[19,0,2,19],[21,0,2,21],[38,0,2,38],[40,0,2,40],[45,0,2,45],[47,0,2,47],[56,0,2,56],[58,0,2,58],[65,0,2,65],[67,0,2,67],[72,0,2,72],[74,0,2,74],[85,0,2,85],[87,0,2,87],[94,0,2,94],[96,0,2,96],[101,0,2,101],[103,0,2,103],[113,0,2,113],[115,0,2,115],[122,0,2,122],[124,0,2,124],[129,0,2,129],[131,0,2,131],[141,0,2,141],[143,0,2,143],[149,0,2,149],[169,0,2,169],[170,0,2,170]],[[0,0,3,0],[7,0,3,7],[9,0,3,9],[23,0,3,23],[25,0,3,25],[38,0,3,38],[40,0,3,40],[55,0,3,55],[57,0,3,57],[79,0,3,79],[81,0,3,81],[96,0,3,96],[98,0,3,98],[112,0,3,112],[114,0,3,114],[130,0,3,130],[132,0,3,132],[138,0,3,138],[149,0,3,149],[150,0,3,150]],[[0,0,4,0],[7,0,4,7],[9,0,4,9],[24,0,4,24],[26,0,4,26],[43,0,4,43],[45,0,4,45],[51,0,4,51],[65,0,4,65],[66,0,4,66]],[[0,0,5,0]],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[7,0,8,7],[11,0,8,11],[28,0,8,28],[29,0,8,29]],[[0,0,9,0],[1,0,9,1],[11,0,9,11],[28,0,9,28]],[[4,0,10,4],[32,0,10,32]],[[4,0,11,4],[21,0,11,21],[22,0,11,22],[39,0,11,39],[40,0,11,40],[53,0,11,53],[54,0,11,54],[57,0,11,57],[58,0,11,58],[59,0,11,59],[62,0,11,62],[75,0,11,75],[76,0,11,76]],[[4,0,12,4],[117,0,12,117]],[[4,0,13,4],[21,0,13,21],[22,0,13,22],[39,0,13,39],[40,0,13,40],[61,0,13,61],[62,0,13,62],[65,0,13,65],[66,0,13,66],[67,0,13,67],[70,0,13,70],[91,0,13,91],[92,0,13,92]],[[4,0,14,4],[51,0,14,51]],[[4,0,15,4],[21,0,15,21],[22,0,15,22],[39,0,15,39],[40,0,15,40],[48,0,15,48],[49,0,15,49],[52,0,15,52],[53,0,15,53],[54,0,15,54],[57,0,15,57],[65,0,15,65],[66,0,15,66]],[[4,0,16,4],[53,0,16,53]],[[4,0,17,4],[21,0,17,21],[22,0,17,22],[39,0,17,39],[40,0,17,40],[61,0,17,61],[62,0,17,62],[65,0,17,65],[66,0,17,66],[67,0,17,67],[70,0,17,70],[91,0,17,91],[92,0,17,92]],[[0,0,18,0],[1,0,18,1],[2,0,18,2],[3,0,18,3],[20,0,18,20],[24,0,18,24],[25,0,18,25],[42,0,18,42],[45,0,18,45],[47,0,18,47],[48,0,18,48],[49,0,18,49],[50,0,18,50]],[[0,0,19,0]],[],[],[],[],[[3,0,24,3]],[[0,0,25,0],[6,0,25,6],[13,0,25,13],[30,0,25,30]],[[4,0,26,4]],[],[],[],[],[[7,0,31,7]],[[4,0,32,4],[16,0,32,16],[18,0,32,18],[20,0,32,20],[32,0,32,32],[35,0,32,35],[41,0,32,41]],[[8,0,33,8],[12,0,33,12],[13,0,33,13],[15,0,33,15],[18,0,33,18],[20,0,33,20],[21,0,33,21]],[[8,0,34,8],[12,0,34,12],[13,0,34,13],[25,0,34,25],[28,0,34,28],[40,0,34,40],[41,0,34,41]],[[4,0,35,4],[5,0,35,5]],[[4,0,36,4],[43,0,36,43]],[[4,0,37,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,65,7]],[[4,0,66,4],[17,0,66,17],[18,0,66,18],[24,0,66,24],[26,0,66,26],[46,0,66,46],[49,0,66,49],[51,0,66,51],[53,0,66,53],[69,0,66,69],[72,0,66,72],[89,0,66,89],[90,0,66,90],[109,0,66,109]],[[8,0,67,8],[15,0,67,15],[19,0,67,19],[20,0,67,20],[52,0,67,52],[53,0,67,53],[59,0,67,59],[61,0,67,61],[81,0,67,81],[83,0,67,83],[99,0,67,99],[100,0,67,100],[101,0,67,101],[105,0,67,105],[106,0,67,106],[109,0,67,109],[110,0,67,110],[114,0,67,114],[115,0,67,115],[117,0,67,117],[118,0,67,118],[122,0,67,122],[123,0,67,123],[124,0,67,124],[125,0,67,125]],[[4,0,68,4],[5,0,68,5]],[[4,0,69,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,100,7]],[[4,0,101,4],[24,0,101,24],[25,0,101,25],[31,0,101,31],[33,0,101,33],[53,0,101,53],[56,0,101,56],[58,0,101,58]],[[8,0,102,8]],[],[],[[11,0,105,11]],[[8,0,106,8],[15,0,106,15],[19,0,106,19],[20,0,106,20],[46,0,106,46],[47,0,106,47],[53,0,106,53],[54,0,106,54],[55,0,106,55],[59,0,106,59],[60,0,106,60],[68,0,106,68],[69,0,106,69],[70,0,106,70],[75,0,106,75],[77,0,106,77],[79,0,106,79]],[[12,0,107,12],[16,0,107,16],[21,0,107,21],[25,0,107,25],[29,0,107,29],[33,0,107,33],[38,0,107,38],[39,0,107,39],[45,0,107,45],[50,0,107,50],[51,0,107,51],[53,0,107,53]],[[16,0,108,16],[23,0,108,23],[25,0,108,25],[26,0,108,26],[28,0,108,28],[29,0,108,29],[30,0,108,30]],[[13,0,109,13]],[[12,0,110,12],[16,0,110,16],[36,0,110,36],[37,0,110,37],[43,0,110,43],[47,0,110,47],[48,0,110,48],[50,0,110,50]],[[16,0,111,16],[23,0,111,23],[25,0,111,25],[26,0,111,26],[31,0,111,31],[32,0,111,32],[33,0,111,33]],[[13,0,112,13]],[[12,0,113,12],[18,0,113,18],[37,0,113,37],[40,0,113,40],[42,0,113,42],[43,0,113,43]],[[12,0,114,12],[17,0,114,17],[18,0,114,18],[25,0,114,25],[26,0,114,26],[30,0,114,30],[31,0,114,31],[33,0,114,33]],[[16,0,115,16],[22,0,115,22],[40,0,115,40],[43,0,115,43],[47,0,115,47],[48,0,115,48],[72,0,115,72],[73,0,115,73],[77,0,115,77],[79,0,115,79],[99,0,115,99],[100,0,115,100],[101,0,115,101]],[[16,0,116,16],[35,0,116,35],[36,0,116,36],[40,0,116,40],[41,0,116,41],[59,0,116,59],[60,0,116,60],[61,0,116,61]],[[12,0,117,12],[13,0,117,13],[14,0,117,14],[15,0,117,15]],[[12,0,118,12],[66,0,118,66]],[[12,0,119,12],[19,0,119,19],[32,0,119,32],[33,0,119,33],[52,0,119,52],[53,0,119,53],[54,0,119,54]],[[8,0,120,8],[9,0,120,9],[10,0,120,10],[11,0,120,11],[12,0,120,12]],[[4,0,121,4],[5,0,121,5]],[[4,0,122,4]],[],[[7,0,124,7]],[[4,0,125,4],[35,0,125,35],[36,0,125,36],[50,0,125,50],[52,0,125,52],[65,0,125,65],[67,0,125,67],[75,0,125,75]],[[8,0,126,8],[109,0,126,109]],[[8,0,127,8],[14,0,127,14],[29,0,127,29],[32,0,127,32],[36,0,127,36],[50,0,127,50],[51,0,127,51],[65,0,127,65],[66,0,127,66],[80,0,127,80],[82,0,127,82],[86,0,127,86],[87,0,127,87],[89,0,127,89],[90,0,127,90],[99,0,127,99],[100,0,127,100],[101,0,127,101],[102,0,127,102]],[[8,0,128,8],[12,0,128,12],[20,0,128,20],[24,0,128,24],[28,0,128,28],[30,0,128,30]],[[12,0,129,12],[27,0,129,27],[28,0,129,28],[35,0,129,35],[36,0,129,36],[44,0,129,44],[45,0,129,45],[46,0,129,46]],[[9,0,130,9]],[[8,0,131,8],[15,0,131,15],[19,0,131,19],[20,0,131,20],[46,0,131,46],[47,0,131,47],[62,0,131,62],[63,0,131,63],[68,0,131,68],[69,0,131,69],[70,0,131,70],[74,0,131,74],[75,0,131,75],[83,0,131,83],[84,0,131,84],[85,0,131,85],[90,0,131,90],[92,0,131,92],[94,0,131,94]],[[12,0,132,12],[16,0,132,16],[21,0,132,21],[22,0,132,22],[28,0,132,28],[32,0,132,32],[33,0,132,33],[35,0,132,35]],[[16,0,133,16],[23,0,133,23],[25,0,133,25],[26,0,133,26],[28,0,133,28],[29,0,133,29],[30,0,133,30]],[[13,0,134,13],[14,0,134,14],[78,0,134,78]],[[12,0,135,12],[65,0,135,65]],[[12,0,136,12],[18,0,136,18],[30,0,136,30],[33,0,136,33],[35,0,136,35],[36,0,136,36]],[[12,0,137,12],[17,0,137,17],[23,0,137,23],[27,0,137,27],[31,0,137,31],[36,0,137,36],[38,0,137,38]],[[16,0,138,16],[120,0,138,120]],[[16,0,139,16],[22,0,139,22],[35,0,139,35],[38,0,139,38],[42,0,139,42],[43,0,139,43],[60,0,139,60],[61,0,139,61],[64,0,139,64],[65,0,139,65],[69,0,139,69],[70,0,139,70],[76,0,139,76],[77,0,139,77],[80,0,139,80],[82,0,139,82],[95,0,139,95],[96,0,139,96],[97,0,139,97],[98,0,139,98],[117,0,139,117]],[[16,0,140,16],[22,0,140,22],[37,0,140,37],[40,0,140,40],[44,0,140,44],[45,0,140,45],[76,0,140,76],[77,0,140,77],[90,0,140,90],[92,0,140,92],[105,0,140,105],[107,0,140,107],[115,0,140,115],[116,0,140,116],[117,0,140,117],[121,0,140,121],[122,0,140,122],[125,0,140,125],[126,0,140,126],[127,0,140,127],[141,0,140,141],[143,0,140,143],[145,0,140,145]],[[20,0,141,20],[24,0,141,24],[38,0,141,38],[39,0,141,39],[45,0,141,45],[48,0,141,48],[49,0,141,49],[51,0,141,51]],[[24,0,142,24],[63,0,142,36],[67,0,142,40],[72,0,142,42],[73,0,142,43],[86,0,142,56],[87,0,142,57],[89,0,142,59],[103,0,142,73],[107,0,142,76]],[[21,0,143,21]],[[25,0,144,25]],[[24,0,145,24],[49,0,145,36],[53,0,145,40],[55,0,145,43]],[[21,0,146,21],[22,0,146,22],[52,0,146,52]],[[16,0,147,16],[17,0,147,17],[18,0,147,18],[19,0,147,19],[20,0,147,20]],[[16,0,148,16],[28,0,148,28],[29,0,148,29],[33,0,148,33],[34,0,148,34],[49,0,148,49],[50,0,148,50],[51,0,148,51]],[[13,0,149,13]],[[12,0,150,12],[19,0,150,19],[32,0,150,32],[33,0,150,33],[45,0,150,45],[46,0,150,46],[47,0,150,47],[51,0,150,51],[52,0,150,52],[55,0,150,55],[56,0,150,56],[59,0,150,59],[60,0,150,60],[62,0,150,62],[63,0,150,63],[70,0,150,70],[71,0,150,71],[74,0,150,74],[75,0,150,75],[78,0,150,78],[79,0,150,79],[80,0,150,80],[81,0,150,81],[82,0,150,82]],[[8,0,151,8],[9,0,151,9],[10,0,151,10],[11,0,151,11],[12,0,151,12]],[[4,0,152,4],[5,0,152,5]],[[4,0,153,4],[39,0,153,39]],[[4,0,154,4]],[],[],[],[],[],[],[],[[7,0,162,7]],[[4,0,163,4],[8,0,163,8],[9,0,163,9],[13,0,163,13],[15,0,163,15],[28,0,163,28],[30,0,163,30],[50,0,163,50],[53,0,163,53],[55,0,163,55],[57,0,163,57],[67,0,163,67],[70,0,163,70],[74,0,163,74],[76,0,163,76],[81,0,163,81]],[[8,0,164,8],[12,0,164,12],[17,0,164,17],[18,0,164,18],[25,0,164,25],[26,0,164,26],[30,0,164,30],[31,0,164,31],[35,0,164,35],[40,0,164,40],[44,0,164,44],[64,0,164,64],[65,0,164,65],[71,0,164,71],[74,0,164,74],[75,0,164,75],[77,0,164,77]],[[12,0,165,12],[18,0,165,18],[23,0,165,23],[26,0,165,26]],[[16,0,166,16],[20,0,166,20],[22,0,166,22],[67,0,166,67]],[[16,0,167,16],[20,0,167,20],[22,0,167,22],[31,0,167,31]],[[16,0,168,16],[23,0,168,23],[25,0,168,25],[113,0,168,113]],[[16,0,169,16],[21,0,169,21],[23,0,169,23],[25,0,169,25]],[[16,0,170,16],[20,0,170,20]],[[16,0,171,16],[36,0,171,36]],[[16,0,172,16],[21,0,172,21]],[[13,0,173,13],[14,0,173,14]],[[12,0,174,12],[18,0,174,18],[23,0,174,23],[24,0,174,24]],[[9,0,175,9]],[[8,0,176,8],[12,0,176,12],[22,0,176,22],[23,0,176,23]],[[8,0,177,8],[12,0,177,12],[26,0,177,26],[29,0,177,29],[31,0,177,31],[32,0,177,32]],[[8,0,178,8]],[],[],[[10,0,181,10]],[[8,0,182,8],[12,0,182,12],[17,0,182,17],[18,0,182,18],[25,0,182,25],[26,0,182,26],[30,0,182,30],[31,0,182,31],[35,0,182,35],[40,0,182,40],[42,0,182,42]],[[12,0,183,12],[22,0,183,22],[25,0,183,25],[29,0,183,29],[30,0,183,30]],[[9,0,184,9]],[[13,0,185,13]],[[12,0,186,12],[18,0,186,18],[23,0,186,23],[26,0,186,26],[30,0,186,30],[31,0,186,31],[71,0,186,71],[72,0,186,72],[76,0,186,76],[78,0,186,78],[98,0,186,98],[99,0,186,99],[100,0,186,100]],[[12,0,187,12],[22,0,187,22],[25,0,187,25],[30,0,187,30],[31,0,187,31],[41,0,187,41],[42,0,187,42]],[[12,0,188,12],[26,0,188,26],[29,0,188,29],[34,0,188,34],[35,0,188,35],[49,0,188,49],[50,0,188,50]],[[9,0,189,9]],[[8,0,190,8],[15,0,190,15],[19,0,190,19],[20,0,190,20],[30,0,190,30],[31,0,190,31],[41,0,190,41],[43,0,190,43],[56,0,190,56],[58,0,190,58],[68,0,190,68],[70,0,190,70],[75,0,190,75],[76,0,190,76],[77,0,190,77],[81,0,190,81]],[[8,0,191,8],[36,0,191,36]],[[8,0,192,8],[16,0,192,16],[17,0,192,17],[18,0,192,18],[29,0,192,29],[31,0,192,31],[33,0,192,33]],[],[[12,0,193,12],[18,0,193,18],[28,0,193,28],[31,0,193,31],[33,0,193,33],[34,0,193,34]],[[12,0,194,12],[17,0,194,17],[23,0,194,23],[24,0,194,24],[40,0,194,40],[42,0,194,42],[60,0,194,60],[61,0,194,61],[65,0,194,65],[71,0,194,71],[72,0,194,72],[79,0,194,79],[80,0,194,80],[94,0,194,94],[95,0,194,95],[97,0,194,97]],[[16,0,195,16],[20,0,195,20],[43,0,195,43],[44,0,195,44],[45,0,195,45],[84,0,195,84]],[[16,0,196,16],[20,0,196,20],[28,0,196,28],[29,0,196,29]],[[16,0,197,16],[20,0,197,20],[40,0,197,40],[42,0,197,42]],[[20,0,198,20],[43,0,198,43],[46,0,198,46],[52,0,198,46],[72,0,198,66],[73,0,198,67],[77,0,198,71],[78,0,198,72],[85,0,198,79],[86,0,198,80],[88,0,198,82],[89,0,198,83],[96,0,198,90],[97,0,198,91],[101,0,198,95],[106,0,198,100],[122,0,198,116],[123,0,198,117],[165,0,198,119],[179,0,198,133],[180,0,198,134]],[[20,0,199,20],[28,0,199,28],[31,0,199,31],[37,0,199,31],[57,0,199,51],[58,0,199,52],[62,0,199,56],[63,0,199,57],[70,0,199,64],[71,0,199,65],[73,0,199,67],[74,0,199,68],[81,0,199,75],[82,0,199,76],[86,0,199,80],[91,0,199,85],[107,0,199,101],[108,0,199,102],[150,0,199,104],[155,0,199,109],[156,0,199,110]],[[17,0,200,17]],[[16,0,201,16],[22,0,201,22],[38,0,201,38],[41,0,201,41],[57,0,201,57],[58,0,201,58],[69,0,201,69],[70,0,201,70],[87,0,201,87],[88,0,201,88],[91,0,201,91],[93,0,201,93],[109,0,201,109],[110,0,201,110],[111,0,201,111]],[[16,0,202,16]],[],[],[[139,0,205,139]],[[16,0,206,16],[20,0,206,20],[25,0,206,25],[26,0,206,26],[33,0,206,33],[34,0,206,34],[52,0,206,52],[53,0,206,53],[55,0,206,55]],[[20,0,207,20],[24,0,207,24],[32,0,207,32],[37,0,207,37],[46,0,207,46],[48,0,207,48],[50,0,207,50],[113,0,207,113]],[[24,0,208,24],[110,0,208,110]],[[24,0,209,24],[30,0,209,30],[39,0,209,39],[42,0,209,42],[46,0,209,46],[47,0,209,47],[51,0,209,51],[52,0,209,52],[70,0,209,70],[72,0,209,72],[88,0,209,88],[90,0,209,90],[113,0,209,113],[115,0,209,115],[125,0,209,125],[127,0,209,127],[135,0,209,135],[136,0,209,136],[137,0,209,137],[141,0,209,141],[142,0,209,142],[145,0,209,145],[146,0,209,146],[150,0,209,150],[151,0,209,151],[153,0,209,153]],[[28,0,210,28],[52,0,210,52]],[[28,0,211,28],[35,0,211,35],[37,0,211,37],[40,0,211,40],[42,0,211,42],[58,0,211,58],[60,0,211,60],[65,0,211,65],[67,0,211,67],[71,0,211,71],[73,0,211,73],[74,0,211,74],[75,0,211,75],[134,0,211,134]],[[24,0,212,24],[25,0,212,25],[26,0,212,26],[27,0,212,27],[28,0,212,28]],[[24,0,213,24],[34,0,213,34],[35,0,213,35],[39,0,213,39],[40,0,213,40],[49,0,213,49],[50,0,213,50],[51,0,213,51]],[[21,0,214,21]],[[25,0,215,25],[27,0,215,27],[96,0,215,96]],[[24,0,216,24],[42,0,216,42],[43,0,216,43],[50,0,216,50],[51,0,216,51],[52,0,216,52],[62,0,216,62],[64,0,216,64],[66,0,216,66]],[[28,0,217,28],[114,0,217,114]],[[28,0,218,28],[34,0,218,34],[43,0,218,43],[46,0,218,46],[50,0,218,50],[51,0,218,51],[55,0,218,55],[56,0,218,56],[66,0,218,66],[68,0,218,68],[84,0,218,84],[86,0,218,86],[109,0,218,109],[111,0,218,111],[121,0,218,121],[122,0,218,122],[123,0,218,123],[127,0,218,127],[128,0,218,128],[131,0,218,131],[132,0,218,132],[136,0,218,136],[137,0,218,137],[139,0,218,139]],[[32,0,219,32],[58,0,219,58]],[[32,0,220,32],[125,0,220,125]],[[32,0,221,32],[39,0,221,39],[41,0,221,41],[44,0,221,44],[46,0,221,46],[62,0,221,62],[64,0,221,64],[69,0,221,69],[71,0,221,71],[72,0,221,72],[76,0,221,76],[77,0,221,77],[79,0,221,79],[80,0,221,80]],[[28,0,222,28],[29,0,222,29],[30,0,222,30],[31,0,222,31],[32,0,222,32]],[[28,0,223,28],[38,0,223,38],[39,0,223,39],[43,0,223,43],[44,0,223,44],[53,0,223,53],[54,0,223,54],[55,0,223,55]],[[24,0,224,24],[25,0,224,25],[26,0,224,26],[27,0,224,27]],[[21,0,225,21]],[[17,0,226,17]],[[21,0,227,21],[23,0,227,23],[59,0,227,59]],[[20,0,228,20],[28,0,228,28],[31,0,228,31],[39,0,228,39],[44,0,228,44],[53,0,228,53],[54,0,228,54],[55,0,228,55],[56,0,228,56],[64,0,228,64],[65,0,228,65],[66,0,228,66],[67,0,228,67],[71,0,228,71],[72,0,228,72],[84,0,228,84],[85,0,228,85]],[[20,0,229,20],[106,0,229,106]],[[20,0,230,20],[26,0,230,26],[35,0,230,35],[38,0,230,38],[42,0,230,42],[43,0,230,43],[47,0,230,47],[48,0,230,48],[66,0,230,66],[68,0,230,68],[84,0,230,84],[86,0,230,86],[109,0,230,109],[111,0,230,111],[121,0,230,121],[123,0,230,123],[131,0,230,131],[132,0,230,132],[133,0,230,133],[137,0,230,137],[138,0,230,138],[141,0,230,141],[142,0,230,142],[146,0,230,146],[147,0,230,147],[149,0,230,149]],[[24,0,231,24],[48,0,231,48]],[[24,0,232,24],[31,0,232,31],[33,0,232,33],[36,0,232,36],[38,0,232,38],[54,0,232,54],[56,0,232,56],[61,0,232,61],[63,0,232,63],[67,0,232,67],[69,0,232,69],[70,0,232,70],[71,0,232,71],[130,0,232,130]],[[20,0,233,20],[21,0,233,21],[22,0,233,22],[23,0,233,23],[24,0,233,24]],[[20,0,234,20],[30,0,234,30],[31,0,234,31],[35,0,234,35],[36,0,234,36],[45,0,234,45],[46,0,234,46],[47,0,234,47]],[[17,0,235,17]],[[13,0,236,13],[14,0,236,14],[36,0,236,36]],[[12,0,237,12],[16,0,237,16],[26,0,237,26],[27,0,237,27],[33,0,237,33],[36,0,237,36],[37,0,237,37],[39,0,237,39],[41,0,237,41],[113,0,237,113]],[[16,0,238,16],[89,0,238,89]],[[16,0,239,16],[23,0,239,23],[36,0,239,36],[37,0,239,37],[47,0,239,47],[48,0,239,48],[49,0,239,49],[53,0,239,53]],[[16,0,240,16],[48,0,240,48]],[[16,0,241,16],[139,0,241,139]],[[16,0,242,16],[141,0,242,141]],[[16,0,243,16],[34,0,243,34]],[[16,0,244,16],[19,0,244,19],[20,0,244,20],[21,0,244,21],[29,0,244,29],[31,0,244,31],[33,0,244,33]],[[20,0,245,20],[26,0,245,26],[37,0,245,37],[40,0,245,40],[42,0,245,42],[43,0,245,43]],[[20,0,246,20],[28,0,246,28],[29,0,246,29],[36,0,246,36],[37,0,246,37],[38,0,246,38],[41,0,246,41],[43,0,246,43],[45,0,246,45]],[[24,0,247,24],[30,0,247,30],[33,0,247,33],[36,0,247,36],[39,0,247,39],[40,0,247,40],[43,0,247,43],[44,0,247,44]],[[24,0,248,24],[30,0,248,30],[35,0,248,35],[38,0,248,38],[41,0,248,41],[42,0,248,42],[47,0,248,47],[48,0,248,48]],[[24,0,249,24],[126,0,249,126]],[[24,0,250,24],[37,0,250,37]],[[24,0,251,24],[28,0,251,28],[39,0,251,39],[40,0,251,40],[54,0,251,54],[55,0,251,55],[58,0,251,58],[59,0,251,59],[63,0,251,63],[68,0,251,68],[69,0,251,69],[76,0,251,76],[77,0,251,77],[88,0,251,88],[89,0,251,89],[92,0,251,92],[93,0,251,93],[94,0,251,94],[96,0,251,96]],[[28,0,252,28],[123,0,252,123]],[[28,0,253,28],[41,0,253,41]],[[28,0,254,28],[39,0,254,39],[40,0,254,40],[43,0,254,43],[44,0,254,44],[45,0,254,45],[49,0,254,49],[50,0,254,50],[55,0,254,55],[56,0,254,56],[57,0,254,57],[58,0,254,58],[59,0,254,59],[60,0,254,60]],[[25,0,255,25]],[[29,0,256,29]],[[28,0,257,28],[41,0,257,41]],[[28,0,258,28],[39,0,258,39],[40,0,258,40],[43,0,258,43],[44,0,258,44],[47,0,258,47],[52,0,258,52],[53,0,258,53]],[[25,0,259,25]],[[20,0,260,20],[21,0,260,21],[22,0,260,22],[23,0,260,23]],[[20,0,261,20],[27,0,261,27],[38,0,261,38],[39,0,261,39]],[[16,0,262,16],[17,0,262,17],[18,0,262,18]],[[16,0,263,16],[64,0,263,64]],[[16,0,264,16],[19,0,264,19],[20,0,264,20],[21,0,264,21],[32,0,264,32],[34,0,264,34],[36,0,264,36]],[[20,0,265,20],[59,0,265,32],[70,0,265,43],[73,0,265,48],[84,0,265,59],[86,0,265,62]],[[16,0,266,16],[17,0,266,17],[18,0,266,18],[19,0,266,19],[20,0,266,20]],[[13,0,267,13]],[[17,0,268,17]],[[16,0,269,16],[23,0,269,23],[25,0,269,25],[26,0,269,26],[37,0,269,37],[38,0,269,38],[39,0,269,39]],[[13,0,270,13]],[[8,0,271,8],[9,0,271,9],[10,0,271,10],[11,0,271,11],[12,0,271,12],[16,0,271,16]],[[8,0,272,8],[21,0,272,21]],[[8,0,273,8],[12,0,273,12],[13,0,273,13],[14,0,273,14],[15,0,273,15],[16,0,273,16],[17,0,273,17]],[[4,0,274,4],[5,0,274,5]],[[4,0,275,4],[41,0,275,41]],[[4,0,276,4]],[],[],[],[],[],[],[],[],[],[[7,0,286,7]],[[4,0,287,4],[11,0,287,11],[12,0,287,12],[16,0,287,16],[18,0,287,18],[24,0,287,24],[26,0,287,26],[46,0,287,46],[49,0,287,49],[51,0,287,51],[53,0,287,53],[70,0,287,70],[73,0,287,73],[77,0,287,77]],[[8,0,288,8],[12,0,288,12],[32,0,288,32],[36,0,288,36],[40,0,288,40],[44,0,288,44],[64,0,288,64],[65,0,288,65],[71,0,288,71],[76,0,288,76],[77,0,288,77],[79,0,288,79]],[[12,0,289,12],[19,0,289,19],[23,0,289,23],[24,0,289,24],[37,0,289,37],[38,0,289,38],[42,0,289,42],[44,0,289,44],[50,0,289,50],[52,0,289,52],[69,0,289,69],[70,0,289,70],[71,0,289,71],[72,0,289,72],[125,0,289,125]],[[9,0,290,9]],[[8,0,291,8],[14,0,291,14],[19,0,291,19],[22,0,291,22],[26,0,291,26],[27,0,291,27],[50,0,291,50],[51,0,291,51],[55,0,291,55],[57,0,291,57],[63,0,291,63],[65,0,291,65],[85,0,291,85],[87,0,291,87],[104,0,291,104],[105,0,291,105],[106,0,291,106]],[[8,0,292,8],[15,0,292,15],[19,0,292,19],[20,0,292,20],[32,0,292,32],[33,0,292,33],[38,0,292,38],[39,0,292,39],[40,0,292,40]],[[4,0,293,4],[5,0,293,5]],[[4,0,294,4]],[],[],[],[],[],[[7,0,300,7]],[[4,0,301,4],[19,0,301,19],[20,0,301,20],[27,0,301,27],[29,0,301,29],[33,0,301,33],[35,0,301,35],[52,0,301,52],[55,0,301,55],[59,0,301,59]],[[8,0,302,8],[65,0,302,65]],[[8,0,303,8],[14,0,303,14],[19,0,303,19],[22,0,303,22],[32,0,303,32],[33,0,303,33],[37,0,303,37],[38,0,303,38],[40,0,303,40],[41,0,303,41],[50,0,303,50],[51,0,303,51],[52,0,303,52]],[[8,0,304,8],[12,0,304,12],[29,0,304,29],[31,0,304,31]],[[12,0,305,12],[16,0,305,16],[19,0,305,19],[34,0,305,34],[35,0,305,35],[39,0,305,39],[41,0,305,41],[46,0,305,46],[47,0,305,47],[48,0,305,48]],[[9,0,306,9]],[[8,0,307,8],[15,0,307,15],[16,0,307,16],[23,0,307,23],[24,0,307,24],[25,0,307,25],[31,0,307,31],[33,0,307,33],[35,0,307,35]],[[12,0,308,12],[17,0,308,17],[18,0,308,18],[24,0,308,24],[25,0,308,25],[31,0,308,31],[33,0,308,33],[37,0,308,37],[38,0,308,38],[39,0,308,39]],[[8,0,309,8],[9,0,309,9],[10,0,309,10],[11,0,309,11]],[[8,0,310,8],[15,0,310,15],[19,0,310,19],[20,0,310,20],[32,0,310,32],[33,0,310,33],[38,0,310,38],[39,0,310,39],[40,0,310,40]],[[4,0,311,4],[5,0,311,5]],[[4,0,312,4]],[],[],[],[],[],[],[],[],[[7,0,321,7]],[[4,0,322,4],[16,0,322,16],[17,0,322,17],[23,0,322,23],[25,0,322,25],[30,0,322,30],[32,0,322,32],[52,0,322,52],[55,0,322,55],[57,0,322,57],[59,0,322,59],[79,0,322,79]],[[8,0,323,8],[12,0,323,12],[32,0,323,32],[36,0,323,36],[40,0,323,40],[42,0,323,42]],[[12,0,324,12],[32,0,324,32],[35,0,324,35],[55,0,324,55],[56,0,324,56]],[[9,0,325,9]],[[8,0,326,8],[14,0,326,14],[27,0,326,27],[30,0,326,30],[36,0,326,36],[37,0,326,37],[43,0,326,43],[44,0,326,44]],[[8,0,327,8],[15,0,327,15],[19,0,327,19],[20,0,327,20],[33,0,327,33],[34,0,327,34],[40,0,327,40],[42,0,327,42],[62,0,327,62],[63,0,327,63],[64,0,327,64],[68,0,327,68]],[[8,0,328,8],[21,0,328,21]],[[8,0,329,8],[12,0,329,12],[13,0,329,13],[14,0,329,14],[15,0,329,15],[17,0,329,17],[20,0,329,20],[21,0,329,21],[22,0,329,22],[29,0,329,29],[31,0,329,31],[33,0,329,33],[34,0,329,34],[38,0,329,38],[39,0,329,39],[58,0,329,58],[59,0,329,59],[66,0,329,66],[68,0,329,68],[88,0,329,88],[89,0,329,89],[90,0,329,90],[92,0,329,92],[101,0,329,101],[102,0,329,102],[103,0,329,103],[110,0,329,110],[112,0,329,112],[114,0,329,114]],[[12,0,330,12],[19,0,330,19],[23,0,330,23],[24,0,330,24],[28,0,330,28],[29,0,330,29],[36,0,330,36],[38,0,330,38],[51,0,330,51],[53,0,330,53],[73,0,330,73],[75,0,330,75],[80,0,330,80],[82,0,330,82],[87,0,330,87],[88,0,330,88],[89,0,330,89],[93,0,330,93],[94,0,330,94],[120,0,330,120],[121,0,330,121],[129,0,330,129],[130,0,330,130],[137,0,330,137],[138,0,330,138],[140,0,330,140]],[[16,0,331,16],[23,0,331,23],[27,0,331,27],[28,0,331,28],[35,0,331,35],[36,0,331,36],[42,0,331,42],[44,0,331,44],[64,0,331,64],[65,0,331,65],[66,0,331,66],[70,0,331,70],[71,0,331,71],[74,0,331,74],[75,0,331,75],[78,0,331,78],[80,0,331,80],[81,0,331,81],[88,0,331,88],[89,0,331,89],[90,0,331,90],[113,0,331,113],[114,0,331,114],[115,0,331,115]],[[12,0,332,12],[13,0,332,13],[14,0,332,14],[15,0,332,15],[16,0,332,16]],[[8,0,333,8],[9,0,333,9],[10,0,333,10],[12,0,333,12],[22,0,333,22],[23,0,333,23],[26,0,333,26],[27,0,333,27],[29,0,333,29]],[[12,0,334,12],[19,0,334,19],[20,0,334,20],[23,0,334,23],[24,0,334,24],[51,0,334,51],[54,0,334,54],[57,0,334,57],[58,0,334,58],[59,0,334,59]],[[12,0,335,12],[18,0,335,18],[21,0,335,21],[22,0,335,22]],[[8,0,336,8],[9,0,336,9],[10,0,336,10],[12,0,336,12],[16,0,336,16],[17,0,336,17],[18,0,336,18],[19,0,336,19],[20,0,336,20],[21,0,336,21]],[[4,0,337,4],[5,0,337,5]],[[4,0,338,4],[28,0,338,28]],[[4,0,339,4]],[],[],[],[],[],[],[],[],[[7,0,348,7]],[[4,0,349,4],[20,0,349,20],[21,0,349,21],[26,0,349,26],[28,0,349,28],[37,0,349,37],[39,0,349,39],[46,0,349,46],[48,0,349,48],[55,0,349,55],[58,0,349,58],[63,0,349,63]],[],[[8,0,350,8],[12,0,350,12],[21,0,350,21],[25,0,350,25],[29,0,350,29],[33,0,350,33],[40,0,350,40],[44,0,350,44],[48,0,350,48],[52,0,350,52],[61,0,350,61],[66,0,350,66],[73,0,350,73],[77,0,350,77],[82,0,350,82],[83,0,350,83],[89,0,350,89],[93,0,350,93],[94,0,350,94],[96,0,350,96],[98,0,350,98],[130,0,350,130]],[[12,0,351,12],[19,0,351,19],[21,0,351,21],[23,0,351,23],[24,0,351,24]],[[9,0,352,9]],[[8,0,353,8],[12,0,353,12],[13,0,353,12],[19,0,353,12],[24,0,353,17],[25,0,353,18],[26,0,353,19],[27,0,353,20],[69,0,353,22],[86,0,353,39],[91,0,353,43],[95,0,353,47],[97,0,353,49]],[[12,0,354,12],[18,0,354,18],[23,0,354,23],[26,0,354,26]],[[16,0,355,16],[20,0,355,20],[22,0,355,22],[75,0,355,75]],[[16,0,356,16],[20,0,356,20],[22,0,356,22],[33,0,356,33]],[[16,0,357,16],[23,0,357,23],[25,0,357,25],[124,0,357,124]],[[13,0,358,13],[14,0,358,14]],[[12,0,359,12],[18,0,359,18],[23,0,359,23],[24,0,359,24]],[[9,0,360,9]],[[8,0,361,8],[14,0,361,14],[19,0,361,19],[22,0,361,22],[26,0,361,26],[27,0,361,27],[60,0,361,60],[61,0,361,61],[66,0,361,66],[68,0,361,68],[77,0,361,77],[79,0,361,79],[86,0,361,86],[88,0,361,88],[95,0,361,95],[96,0,361,96],[97,0,361,97]],[[8,0,362,8],[15,0,362,15],[19,0,362,19],[20,0,362,20],[32,0,362,32],[33,0,362,33],[38,0,362,38],[39,0,362,39],[40,0,362,40]],[[4,0,363,4],[5,0,363,5]],[[4,0,364,4]],[],[],[],[],[],[],[],[],[[7,0,373,7]],[[4,0,374,4],[37,0,374,37],[38,0,374,38],[43,0,374,43],[45,0,374,45],[54,0,374,54],[56,0,374,56],[63,0,374,63],[65,0,374,65],[72,0,374,72],[75,0,374,75],[80,0,374,80]],[[8,0,375,8],[14,0,375,14],[25,0,375,25],[28,0,375,28],[32,0,375,32],[33,0,375,33],[36,0,375,36],[37,0,375,37],[46,0,375,46],[48,0,375,48],[55,0,375,55],[56,0,375,56],[57,0,375,57]],[[8,0,376,8],[14,0,376,14],[19,0,376,19],[22,0,376,22],[32,0,376,32],[33,0,376,33],[37,0,376,37],[38,0,376,38],[40,0,376,40],[41,0,376,41],[50,0,376,50],[51,0,376,51],[52,0,376,52]],[[8,0,377,8],[12,0,377,12],[21,0,377,21],[25,0,377,25],[29,0,377,29],[33,0,377,33],[40,0,377,40],[44,0,377,44],[48,0,377,48],[52,0,377,52],[61,0,377,61],[66,0,377,66],[73,0,377,73],[75,0,377,75],[77,0,377,77],[109,0,377,109]],[[12,0,378,12],[19,0,378,19],[24,0,378,24],[25,0,378,25]],[[9,0,379,9]],[[8,0,380,8],[12,0,380,12],[21,0,380,21],[22,0,380,22]],[[8,0,381,8],[12,0,381,12],[19,0,381,19],[21,0,381,21]],[[12,0,382,12],[21,0,382,21],[24,0,382,24],[30,0,382,30],[31,0,382,31],[37,0,382,37],[38,0,382,38],[40,0,382,40],[42,0,382,42],[47,0,382,47],[48,0,382,48],[49,0,382,49]],[[9,0,383,9]],[[13,0,384,13]],[[12,0,385,12],[21,0,385,21],[24,0,385,24],[29,0,385,29],[30,0,385,30]],[[9,0,386,9]],[[8,0,387,8],[23,0,387,23],[24,0,387,24],[33,0,387,33],[35,0,387,35],[44,0,387,44],[46,0,387,46],[53,0,387,53],[54,0,387,54],[55,0,387,55]],[[8,0,388,8],[14,0,388,14],[31,0,388,31],[34,0,388,34],[43,0,388,43],[44,0,388,44],[49,0,388,49],[50,0,388,50],[61,0,388,61],[62,0,388,62],[63,0,388,63]],[[8,0,389,8],[12,0,389,12],[13,0,389,13],[16,0,389,16],[27,0,389,27],[28,0,389,28]],[[8,0,390,8],[13,0,390,13],[19,0,390,19],[23,0,390,23],[27,0,390,27],[44,0,390,44],[46,0,390,46]],[[12,0,391,12],[16,0,391,16],[17,0,391,17],[24,0,391,24],[26,0,391,26],[28,0,391,28],[103,0,391,103]],[[16,0,392,16],[20,0,392,20],[21,0,392,21],[26,0,392,26],[29,0,392,29],[30,0,392,30],[31,0,392,31]],[[13,0,393,13]],[[12,0,394,12],[18,0,394,18],[21,0,394,21],[24,0,394,24],[38,0,394,38],[39,0,394,39],[43,0,394,43],[44,0,394,44],[61,0,394,61],[62,0,394,62],[66,0,394,66],[68,0,394,68],[72,0,394,72],[73,0,394,73],[75,0,394,75],[76,0,394,76],[85,0,394,85],[86,0,394,86],[87,0,394,87]],[[12,0,395,12],[17,0,395,17],[18,0,395,18],[24,0,395,24],[25,0,395,25],[28,0,395,28],[30,0,395,30],[32,0,395,32],[37,0,395,37],[39,0,395,39],[40,0,395,40],[42,0,395,42],[43,0,395,43],[44,0,395,44]],[[12,0,396,12],[13,0,396,13],[15,0,396,15],[16,0,396,16]],[[9,0,397,9]],[[8,0,398,8],[15,0,398,15],[20,0,398,20],[21,0,398,21]],[[4,0,399,4],[5,0,399,5]],[[4,0,400,4]],[],[],[],[],[],[],[[7,0,407,7]],[[4,0,408,4],[29,0,408,29],[30,0,408,30],[35,0,408,35],[37,0,408,37],[50,0,408,50],[52,0,408,52],[72,0,408,72],[75,0,408,75],[77,0,408,77],[79,0,408,79],[86,0,408,86],[89,0,408,89],[94,0,408,94]],[[8,0,409,8],[12,0,409,12],[21,0,409,21],[22,0,409,22]],[[8,0,410,8],[12,0,410,12],[19,0,410,19],[21,0,410,21]],[[12,0,411,12],[21,0,411,21],[24,0,411,24],[30,0,411,30],[31,0,411,31],[37,0,411,37],[38,0,411,38],[40,0,411,40],[42,0,411,42],[47,0,411,47],[48,0,411,48],[49,0,411,49]],[[9,0,412,9]],[[13,0,413,13]],[[12,0,414,12],[21,0,414,21],[24,0,414,24],[29,0,414,29],[30,0,414,30]],[[9,0,415,9]],[[8,0,416,8],[14,0,416,14],[26,0,416,26],[29,0,416,29],[38,0,416,38],[39,0,416,39],[52,0,416,52],[53,0,416,53],[54,0,416,54]],[[8,0,417,8],[82,0,417,82]],[[8,0,418,8],[15,0,418,15],[19,0,418,19],[20,0,418,20],[35,0,418,35],[36,0,418,36],[48,0,418,48],[49,0,418,49],[66,0,418,66],[67,0,418,67],[70,0,418,70],[72,0,418,72],[92,0,418,92],[93,0,418,93],[94,0,418,94],[98,0,418,98],[99,0,418,99],[102,0,418,102],[103,0,418,103],[104,0,418,104],[109,0,418,109],[111,0,418,111],[113,0,418,113]],[[12,0,419,12],[101,0,419,101]],[[12,0,420,12],[21,0,420,21],[22,0,420,22],[26,0,420,26],[27,0,420,27],[31,0,420,31],[32,0,420,32],[34,0,420,34],[35,0,420,35],[39,0,420,39],[40,0,420,40],[45,0,420,45],[46,0,420,46],[47,0,420,47],[48,0,420,48],[85,0,420,85]],[[12,0,421,12],[21,0,421,21],[22,0,421,22],[28,0,421,28],[29,0,421,29],[42,0,421,42],[44,0,421,44],[45,0,421,45],[46,0,421,46],[47,0,421,47]],[[12,0,422,12],[16,0,422,16],[17,0,422,17],[54,0,422,54],[55,0,422,55],[64,0,422,64],[66,0,422,66],[71,0,422,71],[72,0,422,72],[73,0,422,73]],[[12,0,423,12],[19,0,423,19],[24,0,423,24],[25,0,423,25]],[[8,0,424,8],[9,0,424,9],[10,0,424,10],[12,0,424,12],[21,0,424,21],[22,0,424,22],[23,0,424,23],[28,0,424,28],[30,0,424,30],[32,0,424,32],[33,0,424,33],[37,0,424,37],[38,0,424,38],[50,0,424,50],[51,0,424,51],[56,0,424,56],[57,0,424,57],[58,0,424,58],[59,0,424,59],[60,0,424,60]],[[4,0,425,4],[5,0,425,5]],[[4,0,426,4]],[],[],[],[],[],[],[[7,0,433,7]],[[4,0,434,4],[30,0,434,30],[31,0,434,31],[36,0,434,36],[38,0,434,38],[53,0,434,53],[55,0,434,55],[75,0,434,75],[78,0,434,78],[80,0,434,80],[82,0,434,82],[89,0,434,89],[92,0,434,92],[97,0,434,97]],[[8,0,435,8],[12,0,435,12],[21,0,435,21],[22,0,435,22]],[[8,0,436,8],[12,0,436,12],[19,0,436,19],[21,0,436,21]],[[12,0,437,12],[21,0,437,21],[24,0,437,24],[30,0,437,30],[31,0,437,31],[37,0,437,37],[38,0,437,38],[40,0,437,40],[42,0,437,42],[47,0,437,47],[48,0,437,48],[49,0,437,49]],[[9,0,438,9]],[[13,0,439,13]],[[12,0,440,12],[21,0,440,21],[24,0,440,24],[29,0,440,29],[30,0,440,30]],[[9,0,441,9]],[[8,0,442,8],[17,0,442,17],[18,0,442,18],[22,0,442,22],[23,0,442,23],[27,0,442,27],[28,0,442,28],[30,0,442,30],[31,0,442,31],[35,0,442,35],[36,0,442,36],[41,0,442,41],[42,0,442,42],[43,0,442,43],[44,0,442,44],[81,0,442,81]],[[8,0,443,8],[14,0,443,14],[27,0,443,27],[30,0,443,30],[39,0,443,39],[40,0,443,40],[46,0,443,46],[47,0,443,47],[48,0,443,48],[52,0,443,52],[54,0,443,54],[55,0,443,55],[57,0,443,57],[59,0,443,59]],[[12,0,444,12],[19,0,444,19],[34,0,444,34],[35,0,444,35],[44,0,444,44],[45,0,444,45],[47,0,444,47],[48,0,444,48],[50,0,444,50],[51,0,444,51],[53,0,444,53],[58,0,444,58],[59,0,444,59],[60,0,444,60],[65,0,444,65],[66,0,444,66],[67,0,444,67],[68,0,444,68]],[[8,0,445,8],[9,0,445,9],[10,0,445,10],[11,0,445,11]],[[8,0,446,8],[62,0,446,62]],[[8,0,447,8],[52,0,447,52]],[[8,0,448,8],[23,0,448,23],[24,0,448,24],[28,0,448,28],[30,0,448,30],[31,0,448,31]],[[8,0,449,8],[13,0,449,13],[17,0,449,17],[18,0,449,18],[21,0,449,21],[36,0,449,36],[37,0,449,37],[43,0,449,43],[46,0,449,46],[47,0,449,47],[49,0,449,49],[50,0,449,50],[54,0,449,54],[55,0,449,55],[57,0,449,57],[58,0,449,58],[60,0,449,60],[62,0,449,62]],[[12,0,450,12],[21,0,450,21],[22,0,450,22],[28,0,450,28],[29,0,450,29],[44,0,450,44],[45,0,450,45],[46,0,450,46],[47,0,450,47],[49,0,450,49],[50,0,450,50],[51,0,450,51],[52,0,450,52]],[[9,0,451,9]],[[8,0,452,8],[14,0,452,14],[25,0,452,25],[28,0,452,28],[30,0,452,30],[31,0,452,31]],[[8,0,453,8],[91,0,453,91]],[[8,0,454,8],[21,0,454,21],[22,0,454,22],[29,0,454,29],[30,0,454,30],[42,0,454,42],[43,0,454,43],[45,0,454,45]],[[12,0,455,12],[18,0,455,18],[22,0,455,22],[25,0,455,25],[29,0,455,29],[30,0,455,30],[56,0,455,56],[57,0,455,57],[69,0,455,69],[70,0,455,70],[87,0,455,87],[88,0,455,88],[91,0,455,91],[93,0,455,93],[113,0,455,113],[114,0,455,114],[115,0,455,115],[119,0,455,119],[120,0,455,120],[124,0,455,124],[125,0,455,125],[126,0,455,126],[127,0,455,127],[128,0,455,128],[129,0,455,129]],[[12,0,456,12],[23,0,456,23],[24,0,456,24],[28,0,456,28],[29,0,456,29],[33,0,456,33],[34,0,456,34],[35,0,456,35]],[[8,0,457,8],[9,0,457,9],[10,0,457,10],[11,0,457,11]],[[8,0,458,8],[15,0,458,15],[23,0,458,23],[24,0,458,24],[35,0,458,35],[36,0,458,36],[37,0,458,37],[41,0,458,41],[42,0,458,42],[46,0,458,46],[47,0,458,47],[48,0,458,48],[49,0,458,49],[51,0,458,51],[54,0,458,54],[55,0,458,55],[56,0,458,56],[69,0,458,69],[71,0,458,71],[73,0,458,73]],[[12,0,459,12],[78,0,459,78]],[[12,0,460,12],[16,0,460,16],[23,0,460,23],[26,0,460,26],[28,0,460,28],[29,0,460,29]],[[12,0,461,12],[25,0,461,25],[26,0,461,26],[33,0,461,33],[34,0,461,34],[38,0,461,38],[39,0,461,39],[41,0,461,41]],[[16,0,462,16],[23,0,462,23],[26,0,462,26],[33,0,462,33],[34,0,462,34],[40,0,462,40],[41,0,462,41],[45,0,462,45],[46,0,462,46],[47,0,462,47]],[[12,0,463,12],[13,0,463,13],[14,0,463,14],[15,0,463,15]],[[12,0,464,12],[19,0,464,19],[26,0,464,26],[27,0,464,27]],[[8,0,465,8],[9,0,465,9],[10,0,465,10],[12,0,465,12],[15,0,465,15],[16,0,465,16],[17,0,465,17],[24,0,465,24],[26,0,465,26],[28,0,465,28],[29,0,465,29],[33,0,465,33],[34,0,465,34],[62,0,465,62],[63,0,465,63],[70,0,465,70],[71,0,465,71],[72,0,465,72],[74,0,465,74],[77,0,465,77],[78,0,465,78],[79,0,465,79],[84,0,465,84],[86,0,465,86],[88,0,465,88],[89,0,465,89],[93,0,465,93],[94,0,465,94],[131,0,465,131],[132,0,465,132],[141,0,465,141],[143,0,465,143],[148,0,465,148],[149,0,465,149],[150,0,465,150],[152,0,465,152],[161,0,465,161],[162,0,465,162],[163,0,465,163],[168,0,465,168],[170,0,465,170],[172,0,465,172],[173,0,465,173],[177,0,465,177],[178,0,465,178],[190,0,465,190],[191,0,465,191],[196,0,465,196],[197,0,465,197],[198,0,465,198],[199,0,465,199],[200,0,465,200]],[[4,0,466,4],[5,0,466,5]],[[4,0,467,4]],[],[],[],[],[],[],[],[[7,0,475,7]],[[4,0,476,4],[41,0,476,41],[42,0,476,42],[47,0,476,47],[49,0,476,49],[54,0,476,54],[57,0,476,57],[67,0,476,67],[68,0,476,68],[72,0,476,72],[73,0,476,73],[75,0,476,75],[76,0,476,76],[85,0,476,85],[86,0,476,86]],[[8,0,477,8],[13,0,477,13],[14,0,477,14],[21,0,477,21],[22,0,477,22],[23,0,477,23],[27,0,477,27],[29,0,477,29],[34,0,477,34],[36,0,477,36],[38,0,477,38]],[[12,0,478,12],[16,0,478,16],[20,0,478,20],[21,0,478,21],[26,0,478,26],[31,0,478,31],[36,0,478,36],[38,0,478,38]],[[16,0,479,16],[20,0,479,20],[21,0,479,21],[26,0,479,26],[29,0,479,29],[34,0,479,34],[35,0,479,35],[36,0,479,36],[111,0,479,111]],[[16,0,480,16],[22,0,480,22],[25,0,480,25],[28,0,480,28],[42,0,480,42],[43,0,480,43],[47,0,480,47],[48,0,480,48],[65,0,480,65],[66,0,480,66],[70,0,480,70],[72,0,480,72],[76,0,480,76],[77,0,480,77],[79,0,480,79],[80,0,480,80],[89,0,480,89],[90,0,480,90],[91,0,480,91]],[[16,0,481,16],[21,0,481,21],[22,0,481,22],[28,0,481,28],[29,0,481,29],[32,0,481,32],[34,0,481,34],[36,0,481,36],[41,0,481,41],[43,0,481,43],[44,0,481,44],[45,0,481,45]],[[13,0,482,13]],[[8,0,483,8],[9,0,483,9],[10,0,483,10],[11,0,483,11]],[[8,0,484,8],[15,0,484,15],[20,0,484,20],[21,0,484,21]],[[4,0,485,4],[5,0,485,5]],[[4,0,486,4],[29,0,486,29],[30,0,486,30],[43,0,486,43],[45,0,486,45],[57,0,486,57],[59,0,486,59],[72,0,486,72],[74,0,486,74],[86,0,486,86],[88,0,486,88],[104,0,486,104],[106,0,486,106],[137,0,486,137],[139,0,486,139],[170,0,486,170],[173,0,486,173],[177,0,486,177],[179,0,486,179],[186,0,486,186],[189,0,486,189],[194,0,486,194]],[[8,0,487,8],[14,0,487,14],[19,0,487,19],[22,0,487,22],[26,0,487,26],[27,0,487,27],[64,0,487,64],[65,0,487,65],[78,0,487,78],[80,0,487,80],[92,0,487,92],[94,0,487,94],[107,0,487,107],[109,0,487,109],[121,0,487,121],[123,0,487,123],[139,0,487,139],[141,0,487,141],[172,0,487,172],[174,0,487,174],[205,0,487,205],[207,0,487,207],[214,0,487,214],[215,0,487,215],[216,0,487,216]],[[8,0,488,8],[15,0,488,15],[19,0,488,19],[20,0,488,20],[32,0,488,32],[33,0,488,33],[38,0,488,38],[39,0,488,39],[40,0,488,40]],[[4,0,489,4],[5,0,489,5]],[[4,0,490,4],[43,0,490,43]],[[4,0,491,4]],[],[],[],[],[[7,0,496,7]],[[4,0,497,4],[11,0,497,11],[12,0,497,12],[18,0,497,18],[20,0,497,20],[40,0,497,40],[43,0,497,43],[45,0,497,45]],[[8,0,498,8],[12,0,498,12],[32,0,498,32],[36,0,498,36],[40,0,498,40],[44,0,498,44],[64,0,498,64],[65,0,498,65],[71,0,498,71],[76,0,498,76],[77,0,498,77],[79,0,498,79]],[[12,0,499,12],[54,0,499,54]],[[12,0,500,12],[19,0,500,19],[23,0,500,23],[24,0,500,24],[26,0,500,26],[27,0,500,27],[33,0,500,33],[34,0,500,34],[40,0,500,40],[41,0,500,41],[42,0,500,42]],[[9,0,501,9]],[[8,0,502,8],[15,0,502,15],[19,0,502,19],[20,0,502,20],[46,0,502,46],[47,0,502,47],[53,0,502,53],[55,0,502,55],[75,0,502,75],[76,0,502,76],[77,0,502,77],[81,0,502,81],[82,0,502,82],[91,0,502,91],[92,0,502,92],[93,0,502,93],[103,0,502,103],[105,0,502,105],[107,0,502,107],[108,0,502,108],[112,0,502,112],[113,0,502,113],[134,0,502,134],[135,0,502,135],[145,0,502,145],[146,0,502,146],[147,0,502,147],[148,0,502,148],[149,0,502,149]],[[4,0,503,4],[5,0,503,5]],[[4,0,504,4]],[],[],[],[],[],[[7,0,510,7]],[[4,0,511,4],[19,0,511,19],[20,0,511,20],[26,0,511,26],[28,0,511,28],[48,0,511,48],[51,0,511,51],[53,0,511,53],[55,0,511,55],[60,0,511,60],[63,0,511,63],[73,0,511,73],[74,0,511,74],[78,0,511,78],[79,0,511,79],[81,0,511,81],[82,0,511,82],[91,0,511,91],[92,0,511,92]],[[8,0,512,8],[12,0,512,12],[32,0,512,32],[36,0,512,36],[40,0,512,40],[44,0,512,44],[64,0,512,64],[65,0,512,65],[71,0,512,71],[76,0,512,76],[77,0,512,77],[79,0,512,79]],[[12,0,513,12],[54,0,513,54]],[[12,0,514,12],[17,0,514,17],[18,0,514,18],[24,0,514,24],[25,0,514,25],[31,0,514,31],[32,0,514,32],[33,0,514,33]],[[12,0,515,12],[19,0,515,19],[21,0,515,21],[22,0,515,22],[27,0,515,27],[28,0,515,28],[29,0,515,29]],[[9,0,516,9]],[[8,0,517,8],[15,0,517,15],[19,0,517,19],[20,0,517,20],[46,0,517,46],[47,0,517,47],[53,0,517,53],[55,0,517,55],[75,0,517,75],[76,0,517,76],[77,0,517,77],[81,0,517,81],[82,0,517,82],[85,0,517,85],[86,0,517,86],[87,0,517,87],[94,0,517,94],[96,0,517,96],[98,0,517,98],[99,0,517,99],[103,0,517,103],[104,0,517,104],[132,0,517,132],[133,0,517,133],[140,0,517,140],[141,0,517,141],[142,0,517,142],[144,0,517,144],[148,0,517,148],[149,0,517,149],[150,0,517,150],[151,0,517,151],[152,0,517,152],[153,0,517,153]],[[4,0,518,4],[5,0,518,5]],[[4,0,519,4],[26,0,519,26],[27,0,519,27],[35,0,519,35]],[[8,0,520,8],[14,0,520,14],[21,0,520,21],[24,0,520,24],[32,0,520,32],[33,0,520,33],[36,0,520,36],[37,0,520,37],[41,0,520,41],[42,0,520,42],[44,0,520,44],[45,0,520,45],[59,0,520,59],[60,0,520,60],[64,0,520,64],[66,0,520,66],[70,0,520,70],[71,0,520,71],[73,0,520,73],[74,0,520,74],[83,0,520,83],[84,0,520,84],[85,0,520,85],[86,0,520,86]],[[8,0,521,8],[15,0,521,15],[19,0,521,19],[20,0,521,20],[41,0,521,41],[42,0,521,42],[49,0,521,49],[50,0,521,50],[51,0,521,51]],[[4,0,522,4],[5,0,522,5]],[[4,0,523,4]],[],[],[],[],[[7,0,528,7]],[[4,0,529,4],[19,0,529,19],[20,0,529,20],[27,0,529,27],[29,0,529,29],[49,0,529,49],[52,0,529,52],[54,0,529,54]],[[8,0,530,8],[12,0,530,12],[32,0,530,32],[36,0,530,36],[40,0,530,40],[44,0,530,44],[64,0,530,64],[65,0,530,65],[71,0,530,71],[76,0,530,76],[77,0,530,77],[79,0,530,79]],[[12,0,531,12],[19,0,531,19],[23,0,531,23],[24,0,531,24],[45,0,531,45],[46,0,531,46],[53,0,531,53],[54,0,531,54],[55,0,531,55]],[[9,0,532,9]],[[8,0,533,8],[14,0,533,14],[26,0,533,26],[29,0,533,29],[31,0,533,31],[32,0,533,32]],[[8,0,534,8],[15,0,534,15],[16,0,534,16],[23,0,534,23],[24,0,534,24],[30,0,534,30],[31,0,534,31],[33,0,534,33]],[[12,0,535,12],[18,0,535,18],[26,0,535,26],[29,0,535,29],[33,0,535,33],[34,0,535,34],[60,0,535,60],[61,0,535,61],[67,0,535,67],[69,0,535,69],[89,0,535,89],[90,0,535,90],[91,0,535,91]],[[12,0,536,12],[24,0,536,24],[25,0,536,25],[29,0,536,29],[30,0,536,30],[38,0,536,38],[39,0,536,39],[40,0,536,40]],[[8,0,537,8],[9,0,537,9],[10,0,537,10],[11,0,537,11]],[[8,0,538,8],[15,0,538,15],[28,0,538,28],[29,0,538,29],[41,0,538,41],[42,0,538,42],[43,0,538,43],[47,0,538,47]],[[8,0,539,8],[44,0,539,44]],[[8,0,540,8],[11,0,540,11],[12,0,540,12],[13,0,540,13],[18,0,540,18],[20,0,540,20],[22,0,540,22]],[[12,0,541,12],[16,0,541,16],[30,0,541,30],[33,0,541,33],[35,0,541,35],[36,0,541,36]],[[12,0,542,12],[17,0,542,17],[18,0,542,18],[25,0,542,25],[26,0,542,26],[30,0,542,30],[31,0,542,31],[33,0,542,33]],[[16,0,543,16],[30,0,543,30],[33,0,543,33],[47,0,543,47],[48,0,543,48],[54,0,543,54],[55,0,543,55],[59,0,543,59],[60,0,543,60],[61,0,543,61]],[[12,0,544,12],[13,0,544,13],[14,0,544,14],[15,0,544,15]],[[12,0,545,12],[19,0,545,19],[33,0,545,33],[34,0,545,34]],[[8,0,546,8],[9,0,546,9],[10,0,546,10]],[[8,0,547,8],[44,0,547,44]],[[8,0,548,8],[17,0,548,17],[18,0,548,18],[19,0,548,19],[29,0,548,29],[31,0,548,31],[33,0,548,33],[34,0,548,34],[38,0,548,38],[39,0,548,39],[60,0,548,60],[61,0,548,61],[71,0,548,71],[72,0,548,72],[73,0,548,73],[74,0,548,74],[75,0,548,75]],[[4,0,549,4],[5,0,549,5]],[[4,0,550,4]],[],[],[],[],[],[],[[7,0,557,7]],[[4,0,558,4],[21,0,558,21],[22,0,558,22],[35,0,558,35],[37,0,558,37],[57,0,558,57],[60,0,558,60],[62,0,558,62]],[[8,0,559,8],[15,0,559,15],[19,0,559,19],[20,0,559,20],[59,0,559,59],[60,0,559,60],[73,0,559,73],[75,0,559,75],[95,0,559,95],[96,0,559,96],[97,0,559,97],[101,0,559,101],[102,0,559,102],[111,0,559,111],[112,0,559,112],[119,0,559,119],[120,0,559,120],[122,0,559,122],[123,0,559,123],[127,0,559,127],[128,0,559,128],[143,0,559,143],[144,0,559,144],[151,0,559,151],[152,0,559,152],[153,0,559,153],[154,0,559,154],[155,0,559,155],[159,0,559,159],[160,0,559,160],[164,0,559,164],[165,0,559,165],[166,0,559,166],[167,0,559,167],[168,0,559,168],[169,0,559,169]],[[4,0,560,4],[5,0,560,5]],[[4,0,561,4]],[],[],[],[],[],[[7,0,567,7]],[[4,0,568,4],[20,0,568,20],[21,0,568,21],[28,0,568,28],[30,0,568,30],[50,0,568,50],[53,0,568,53],[55,0,568,55]],[[8,0,569,8],[14,0,569,14],[20,0,569,20],[23,0,569,23],[37,0,569,37],[38,0,569,38],[45,0,569,45],[47,0,569,47],[51,0,569,51],[52,0,569,52],[54,0,569,54],[55,0,569,55],[64,0,569,64],[65,0,569,65],[66,0,569,66]],[[8,0,570,8],[15,0,570,15],[19,0,570,19],[20,0,570,20],[27,0,570,27],[28,0,570,28],[34,0,570,34],[36,0,570,36],[56,0,570,56],[57,0,570,57],[58,0,570,58]],[[4,0,571,4],[5,0,571,5]],[[4,0,572,4]],[],[],[],[],[],[],[[7,0,579,7]],[[4,0,580,4],[15,0,580,15],[16,0,580,16],[20,0,580,20],[22,0,580,22],[42,0,580,42],[45,0,580,45],[47,0,580,47]],[[8,0,581,8],[14,0,581,14],[21,0,581,21],[24,0,581,24],[28,0,581,28],[29,0,581,29],[58,0,581,58],[59,0,581,59],[63,0,581,63],[65,0,581,65],[85,0,581,85],[86,0,581,86],[87,0,581,87]],[[8,0,582,8],[15,0,582,15],[19,0,582,19],[20,0,582,20],[41,0,582,41],[42,0,582,42],[49,0,582,49],[50,0,582,50],[51,0,582,51],[55,0,582,55]],[[8,0,583,8],[105,0,583,105]],[[8,0,584,8],[73,0,584,73]],[[8,0,585,8],[32,0,585,32]],[[8,0,586,8],[14,0,586,14]],[[8,0,587,8],[12,0,587,12],[13,0,587,13],[14,0,587,14],[15,0,587,15],[16,0,587,16],[17,0,587,17]],[[4,0,588,4],[5,0,588,5]],[[4,0,589,4],[23,0,589,23],[24,0,589,24],[28,0,589,28],[30,0,589,30],[50,0,589,50],[53,0,589,53],[55,0,589,55],[57,0,589,57],[81,0,589,81],[84,0,589,84],[86,0,589,86]],[[8,0,590,8],[99,0,590,99]],[[8,0,591,8],[40,0,591,40]],[[8,0,592,8],[12,0,592,12],[17,0,592,17],[18,0,592,18],[25,0,592,25],[26,0,592,26],[30,0,592,30],[31,0,592,31],[33,0,592,33]],[[12,0,593,12],[18,0,593,18],[28,0,593,28],[31,0,593,31],[33,0,593,33],[34,0,593,34]],[[12,0,594,12],[16,0,594,16],[17,0,594,17],[24,0,594,24],[25,0,594,25],[26,0,594,26],[27,0,594,27],[29,0,594,29]],[[16,0,595,16],[26,0,595,26],[27,0,595,27],[31,0,595,31],[32,0,595,32],[36,0,595,36],[37,0,595,37],[68,0,595,68],[69,0,595,69],[70,0,595,70],[72,0,595,72],[92,0,595,92],[94,0,595,94],[118,0,595,118],[119,0,595,119],[120,0,595,120],[121,0,595,121]],[[12,0,596,12],[13,0,596,13],[14,0,596,14],[15,0,596,15]],[[12,0,597,12],[19,0,597,19],[29,0,597,29],[30,0,597,30]],[[9,0,598,9]],[[13,0,599,13]],[[12,0,600,12],[19,0,600,19],[23,0,600,23],[24,0,600,24],[55,0,600,55],[56,0,600,56],[60,0,600,60],[62,0,600,62],[82,0,600,82],[84,0,600,84],[108,0,600,108],[109,0,600,109],[110,0,600,110]],[[9,0,601,9]],[[4,0,602,4],[5,0,602,5]],[[4,0,603,4],[54,0,603,54]],[[4,0,604,4]],[],[],[],[],[],[],[],[[7,0,612,7]],[[4,0,613,4],[23,0,613,23],[24,0,613,24],[30,0,613,30],[32,0,613,32],[48,0,613,48],[51,0,613,51],[68,0,613,68],[69,0,613,69],[88,0,613,88]],[[8,0,614,8],[15,0,614,15],[19,0,614,19],[20,0,614,20],[22,0,614,22],[23,0,614,23],[26,0,614,26],[27,0,614,27],[33,0,614,33],[34,0,614,34],[35,0,614,35],[39,0,614,39],[40,0,614,40],[43,0,614,43],[44,0,614,44],[45,0,614,45],[53,0,614,53],[55,0,614,55],[57,0,614,57]],[[12,0,615,12],[16,0,615,16],[17,0,615,17],[25,0,615,25],[26,0,615,26],[32,0,615,32],[34,0,615,34],[38,0,615,38],[54,0,615,54],[59,0,615,59],[76,0,615,76],[77,0,615,77],[96,0,615,96],[98,0,615,98]],[[16,0,616,16],[22,0,616,22],[27,0,616,27],[30,0,616,30]],[[20,0,617,20],[24,0,617,24],[26,0,617,26],[44,0,617,44]],[[20,0,618,20],[24,0,618,24],[26,0,618,26],[37,0,618,37]],[[20,0,619,20],[27,0,619,27],[29,0,619,29],[100,0,619,100]],[[20,0,620,20],[26,0,620,26]],[[17,0,621,17],[18,0,621,18]],[[16,0,622,16],[22,0,622,22],[27,0,622,27],[28,0,622,28]],[[13,0,623,13]],[[8,0,624,8],[9,0,624,9],[10,0,624,10],[12,0,624,12],[18,0,624,18],[19,0,624,19],[20,0,624,20],[28,0,624,28],[30,0,624,30],[32,0,624,32]],[[12,0,625,12],[19,0,625,19],[20,0,625,20],[21,0,625,21],[29,0,625,29],[30,0,625,30],[36,0,625,36],[38,0,625,38],[42,0,625,42],[58,0,625,58],[63,0,625,63],[80,0,625,80],[81,0,625,81],[87,0,625,87],[88,0,625,88],[89,0,625,89]],[[8,0,626,8],[9,0,626,9],[10,0,626,10],[12,0,626,12],[15,0,626,15],[16,0,626,16],[17,0,626,17],[25,0,626,25],[27,0,626,27],[29,0,626,29]],[[12,0,627,12],[19,0,627,19],[20,0,627,20],[23,0,627,23],[24,0,627,24],[32,0,627,32],[33,0,627,33],[39,0,627,39],[41,0,627,41],[42,0,627,42],[43,0,627,43]],[[12,0,628,12],[16,0,628,16],[24,0,628,24],[25,0,628,25],[31,0,628,31],[33,0,628,33],[37,0,628,37],[53,0,628,53],[58,0,628,58],[75,0,628,75],[76,0,628,76],[95,0,628,95],[97,0,628,97]],[[16,0,629,16],[22,0,629,22],[26,0,629,26],[29,0,629,29],[37,0,629,37],[38,0,629,38],[42,0,629,42],[44,0,629,44],[45,0,629,45]],[[16,0,630,16],[22,0,630,22],[39,0,630,39],[42,0,630,42]],[[20,0,631,20],[22,0,631,22],[24,0,631,24],[32,0,631,32],[33,0,631,33],[35,0,631,35]],[[20,0,632,20],[23,0,632,23],[25,0,632,25],[33,0,632,33],[34,0,632,34],[37,0,632,37]],[[20,0,633,20],[24,0,633,24],[26,0,633,26],[32,0,633,32],[33,0,633,33],[37,0,633,37]],[[20,0,634,20],[28,0,634,28],[30,0,634,30],[38,0,634,38],[39,0,634,39],[45,0,634,45],[47,0,634,47]],[[20,0,635,20],[36,0,635,36],[38,0,635,38],[46,0,635,46],[47,0,635,47],[55,0,635,55]],[[17,0,636,17],[18,0,636,18]],[[16,0,637,16],[55,0,637,28],[59,0,637,32],[64,0,637,34],[81,0,637,51],[85,0,637,54]],[[13,0,638,13]],[[17,0,639,17],[21,0,639,21],[37,0,639,37],[42,0,639,42],[59,0,639,59],[60,0,639,60],[71,0,639,71],[73,0,639,73],[75,0,639,75],[98,0,639,98]],[[16,0,640,16],[23,0,640,23],[27,0,640,27],[28,0,640,28]],[[13,0,641,13]],[[12,0,642,12],[19,0,642,19],[23,0,642,23],[24,0,642,24]],[[8,0,643,8],[9,0,643,9],[10,0,643,10],[12,0,643,12],[15,0,643,15],[16,0,643,16],[17,0,643,17],[21,0,643,21],[23,0,643,23],[25,0,643,25]],[[12,0,644,12],[16,0,644,16],[20,0,644,20],[24,0,644,24],[28,0,644,28],[30,0,644,30]],[[16,0,645,16],[23,0,645,23],[45,0,645,45],[46,0,645,46],[50,0,645,50],[51,0,645,51],[52,0,645,52]],[[13,0,646,13]],[[17,0,647,17]],[[16,0,648,16],[23,0,648,23],[27,0,648,27],[28,0,648,28]],[[13,0,649,13]],[[8,0,650,8],[9,0,650,9],[10,0,650,10],[11,0,650,11],[12,0,650,12]],[[4,0,651,4],[5,0,651,5]],[[4,0,652,4]],[],[],[],[],[],[[7,0,658,7]],[[4,0,659,4],[30,0,659,30],[31,0,659,31],[37,0,659,37]],[[8,0,660,8]],[],[],[[11,0,663,11]],[[8,0,664,8],[15,0,664,15],[19,0,664,19],[20,0,664,20],[22,0,664,22],[23,0,664,23],[33,0,664,33],[34,0,664,34],[40,0,664,40],[41,0,664,41],[42,0,664,42],[46,0,664,46],[47,0,664,47],[50,0,664,50],[51,0,664,51],[52,0,664,52],[56,0,664,56],[58,0,664,58],[60,0,664,60]],[[12,0,665,12],[19,0,665,19],[23,0,665,23],[24,0,665,24],[28,0,665,28],[29,0,665,29],[32,0,665,32],[33,0,665,33],[41,0,665,41],[42,0,665,42],[44,0,665,44]],[[16,0,666,16],[22,0,666,22],[26,0,666,26],[29,0,666,29],[37,0,666,37],[38,0,666,38],[42,0,666,42],[44,0,666,44],[45,0,666,45]],[[16,0,667,16],[22,0,667,22],[24,0,667,24],[27,0,667,27],[35,0,667,35],[36,0,667,36],[38,0,667,38],[39,0,667,39]],[[16,0,668,16],[22,0,668,22],[25,0,668,25],[28,0,668,28],[36,0,668,36],[37,0,668,37],[40,0,668,40],[41,0,668,41]],[[16,0,669,16],[22,0,669,22],[26,0,669,26],[29,0,669,29],[32,0,669,32],[33,0,669,33],[37,0,669,37],[38,0,669,38]],[[16,0,670,16],[22,0,670,22],[38,0,670,38],[41,0,670,41],[49,0,670,49],[50,0,670,50],[58,0,670,58],[59,0,670,59]],[[16,0,671,16],[22,0,671,22],[39,0,671,39],[42,0,671,42]],[[20,0,672,20],[22,0,672,22]],[[20,0,673,20],[24,0,673,24]],[[20,0,674,20],[23,0,674,23]],[[20,0,675,20],[36,0,675,36]],[[20,0,676,20],[28,0,676,28],[30,0,676,30],[34,0,676,34]],[[17,0,677,17],[18,0,677,18]],[[16,0,678,16],[55,0,678,28],[59,0,678,32],[64,0,678,34],[81,0,678,51],[85,0,678,54]],[[12,0,679,12],[13,0,679,13],[14,0,679,14],[15,0,679,15]],[[8,0,680,8],[9,0,680,9],[10,0,680,10],[12,0,680,12],[15,0,680,15],[16,0,680,16],[17,0,680,17],[22,0,680,22],[24,0,680,24],[26,0,680,26],[27,0,680,27],[32,0,680,32],[33,0,680,33],[36,0,680,36],[37,0,680,37],[41,0,680,41],[42,0,680,42],[44,0,680,44]],[[12,0,681,12],[34,0,681,34],[35,0,681,35],[39,0,681,39],[40,0,681,40],[41,0,681,41]],[[12,0,682,12],[19,0,682,19],[23,0,682,23],[24,0,682,24]],[[8,0,683,8],[9,0,683,9],[10,0,683,10],[11,0,683,11],[12,0,683,12],[13,0,683,13]],[[4,0,684,4],[5,0,684,5]],[[4,0,685,4]],[],[],[],[],[],[],[],[[7,0,693,7]],[[4,0,694,4],[28,0,694,28],[29,0,694,29],[33,0,694,33],[35,0,694,35],[55,0,694,55],[58,0,694,58],[60,0,694,60]],[[8,0,695,8],[12,0,695,12],[16,0,695,16],[20,0,695,20],[24,0,695,24],[26,0,695,26]],[[12,0,696,12],[19,0,696,19],[21,0,696,21],[22,0,696,22],[23,0,696,23],[27,0,696,27],[28,0,696,28],[29,0,696,29],[30,0,696,30]],[[9,0,697,9]],[[8,0,698,8],[12,0,698,12],[32,0,698,32],[33,0,698,33],[39,0,698,39],[43,0,698,43],[44,0,698,44],[46,0,698,46]],[[12,0,699,12],[19,0,699,19],[21,0,699,21],[22,0,699,22],[23,0,699,23],[27,0,699,27],[28,0,699,28],[29,0,699,29],[30,0,699,30]],[[9,0,700,9]],[[8,0,701,8],[14,0,701,14],[33,0,701,33],[36,0,701,36],[38,0,701,38],[39,0,701,39]],[[8,0,702,8],[91,0,702,91]],[[8,0,703,8],[28,0,703,28],[29,0,703,29],[36,0,703,36],[37,0,703,37],[55,0,703,55],[56,0,703,56],[58,0,703,58]],[[12,0,704,12],[18,0,704,18],[32,0,704,32],[35,0,704,35],[39,0,704,39],[53,0,704,53],[54,0,704,54],[70,0,704,70],[71,0,704,71],[75,0,704,75],[76,0,704,76],[93,0,704,93],[94,0,704,94],[97,0,704,97],[99,0,704,99],[117,0,704,117],[118,0,704,118],[122,0,704,122],[123,0,704,123],[124,0,704,124],[125,0,704,125]],[[12,0,705,12],[16,0,705,16],[34,0,705,34],[35,0,705,35],[51,0,705,51],[53,0,705,53]],[[16,0,706,16],[30,0,706,30],[31,0,706,31],[47,0,706,47],[50,0,706,50],[68,0,706,68],[69,0,706,69],[85,0,706,85],[86,0,706,86]],[[16,0,707,16],[100,0,707,100]],[[13,0,708,13]],[[12,0,709,12],[48,0,709,48]],[[12,0,710,12],[98,0,710,98]],[[12,0,711,12],[16,0,711,16]],[[12,0,712,12],[18,0,712,18],[36,0,712,36],[39,0,712,39],[43,0,712,43],[44,0,712,44],[70,0,712,70],[71,0,712,71],[85,0,712,85],[86,0,712,86],[91,0,712,91],[92,0,712,92],[93,0,712,93],[97,0,712,97]],[[12,0,713,12],[115,0,713,115]],[[12,0,714,12],[54,0,714,54]],[[12,0,715,12],[40,0,715,40]],[[12,0,716,12],[44,0,716,44]],[[12,0,717,12],[58,0,717,58]],[[12,0,718,12],[77,0,718,77]],[[12,0,719,12],[20,0,719,20],[21,0,719,21],[22,0,719,22],[27,0,719,27],[29,0,719,29],[31,0,719,31]],[[16,0,720,16],[20,0,720,20],[21,0,720,21],[39,0,720,39],[40,0,720,40],[54,0,720,54],[56,0,720,56]],[[20,0,721,20],[27,0,721,27],[29,0,721,29],[30,0,721,30],[35,0,721,35],[36,0,721,36],[37,0,721,37]],[[17,0,722,17]],[[16,0,723,16],[22,0,723,22],[34,0,723,34],[37,0,723,37],[39,0,723,39],[40,0,723,40]],[[16,0,724,16],[21,0,724,21],[24,0,724,24],[29,0,724,29],[30,0,724,30],[36,0,724,36],[37,0,724,37],[38,0,724,38],[39,0,724,39],[41,0,724,41],[42,0,724,42],[43,0,724,43],[47,0,724,47],[51,0,724,51],[52,0,724,52],[53,0,724,53],[54,0,724,54],[83,0,724,83]],[[16,0,725,16],[21,0,725,21],[22,0,725,22],[29,0,725,29],[30,0,725,30],[31,0,725,31],[38,0,725,38],[40,0,725,40],[42,0,725,42]],[[20,0,726,20],[26,0,726,26],[47,0,726,47],[50,0,726,50],[54,0,726,54],[55,0,726,55],[79,0,726,79],[80,0,726,80],[87,0,726,87],[89,0,726,89],[107,0,726,107],[108,0,726,108],[122,0,726,122],[123,0,726,123],[124,0,726,124]],[[20,0,727,20],[32,0,727,32],[33,0,727,33],[37,0,727,37],[38,0,727,38],[59,0,727,59],[60,0,727,60],[61,0,727,61]],[[16,0,728,16],[17,0,728,17],[18,0,728,18],[19,0,728,19]],[[16,0,729,16],[20,0,729,20],[32,0,729,32],[33,0,729,33],[39,0,729,39],[43,0,729,43],[44,0,729,44],[46,0,729,46]],[[20,0,730,20],[27,0,730,27],[29,0,730,29],[30,0,730,30],[32,0,730,32],[33,0,730,33],[34,0,730,34]],[[17,0,731,17],[18,0,731,18],[67,0,731,67]],[[16,0,732,16],[23,0,732,23],[36,0,732,36],[37,0,732,37],[49,0,732,49],[50,0,732,50],[51,0,732,51],[55,0,732,55]],[[16,0,733,16],[47,0,733,47]],[[17,0,734,17],[18,0,734,18]],[[12,0,735,12],[13,0,735,13],[14,0,735,14],[16,0,735,16],[51,0,735,51]],[[12,0,736,12]],[],[[66,0,738,66]],[[12,0,739,12],[15,0,739,15],[16,0,739,16],[17,0,739,17],[22,0,739,22],[24,0,739,24],[26,0,739,26]],[[16,0,740,16],[22,0,740,22],[27,0,740,27],[30,0,740,30],[48,0,740,48],[49,0,740,49],[54,0,740,54],[59,0,740,59],[68,0,740,68],[69,0,740,69],[70,0,740,70],[71,0,740,71],[89,0,740,89],[90,0,740,90],[95,0,740,95],[96,0,740,96],[97,0,740,97],[98,0,740,98],[102,0,740,102],[103,0,740,103],[115,0,740,115],[116,0,740,116]],[[16,0,741,16],[20,0,741,20],[25,0,741,25],[26,0,741,26],[32,0,741,32],[37,0,741,37],[38,0,741,38],[42,0,741,42],[47,0,741,47],[48,0,741,48],[49,0,741,49],[50,0,741,50],[51,0,741,51],[68,0,741,68],[69,0,741,69],[71,0,741,71],[76,0,741,76],[81,0,741,81],[83,0,741,83]],[[20,0,742,20],[27,0,742,27],[29,0,742,29],[30,0,742,30],[48,0,742,48],[49,0,742,49],[53,0,742,53],[54,0,742,54],[56,0,742,56],[61,0,742,61],[62,0,742,62],[63,0,742,63],[64,0,742,64],[66,0,742,66],[67,0,742,67]],[[17,0,743,17]],[[21,0,744,21]],[[20,0,745,20],[27,0,745,27],[29,0,745,29],[30,0,745,30],[48,0,745,48],[49,0,745,49],[53,0,745,53],[54,0,745,54],[56,0,745,56],[61,0,745,61],[63,0,745,63],[64,0,745,64]],[[17,0,746,17]],[[12,0,747,12],[13,0,747,13],[14,0,747,14],[15,0,747,15],[16,0,747,16]],[[12,0,748,12],[31,0,748,31],[32,0,748,32],[36,0,748,36],[37,0,748,37],[55,0,748,55],[56,0,748,56],[57,0,748,57]],[[8,0,749,8],[9,0,749,9],[10,0,749,10],[11,0,749,11]],[[8,0,750,8],[61,0,750,61]],[[8,0,751,8],[21,0,751,21]],[[8,0,752,8],[15,0,752,15],[28,0,752,28],[29,0,752,29],[48,0,752,48],[49,0,752,49],[50,0,752,50],[54,0,752,54],[55,0,752,55],[58,0,752,58],[59,0,752,59],[60,0,752,60],[75,0,752,75],[77,0,752,77],[79,0,752,79]],[[12,0,753,12],[41,0,753,41]],[[12,0,754,12],[18,0,754,18],[26,0,754,26],[29,0,754,29],[31,0,754,31],[32,0,754,32]],[[12,0,755,12],[27,0,755,27],[28,0,755,28],[35,0,755,35],[36,0,755,36],[37,0,755,37],[51,0,755,51],[53,0,755,53],[55,0,755,55]],[[16,0,756,16],[21,0,756,21],[27,0,756,27],[28,0,756,28],[42,0,756,42],[44,0,756,44],[49,0,756,49],[50,0,756,50],[54,0,756,54],[60,0,756,60],[61,0,756,61],[68,0,756,68],[69,0,756,69],[83,0,756,83],[84,0,756,84],[86,0,756,86]],[[20,0,757,20],[28,0,757,28],[29,0,757,29],[43,0,757,43],[44,0,757,44],[47,0,757,47],[52,0,757,52],[53,0,757,53]],[[17,0,758,17]],[[12,0,759,12],[13,0,759,13],[14,0,759,14],[15,0,759,15]],[[12,0,760,12],[19,0,760,19],[27,0,760,27],[28,0,760,28]],[[8,0,761,8],[9,0,761,9],[10,0,761,10],[12,0,761,12],[15,0,761,15],[16,0,761,16],[17,0,761,17],[21,0,761,21],[23,0,761,23],[25,0,761,25]],[[12,0,762,12],[51,0,762,24],[55,0,762,28],[58,0,762,33],[62,0,762,37],[64,0,762,40]],[[8,0,763,8],[9,0,763,9],[10,0,763,10],[11,0,763,11],[12,0,763,12]],[[4,0,764,4],[5,0,764,5]],[[4,0,765,4]],[],[[7,0,767,7]],[[4,0,768,4],[36,0,768,36],[37,0,768,37],[43,0,768,43],[45,0,768,45],[65,0,768,65],[68,0,768,68],[70,0,768,70],[72,0,768,72],[88,0,768,88],[91,0,768,91],[108,0,768,108],[109,0,768,109],[120,0,768,120]],[[8,0,769,8],[33,0,769,33]],[[8,0,770,8],[15,0,770,15],[19,0,770,19],[20,0,770,20],[39,0,770,39],[40,0,770,40],[46,0,770,46],[48,0,770,48],[64,0,770,64],[65,0,770,65],[66,0,770,66],[70,0,770,70],[71,0,770,71],[79,0,770,79],[80,0,770,80],[81,0,770,81],[85,0,770,85],[87,0,770,87],[89,0,770,89]],[[12,0,771,12],[16,0,771,16],[20,0,771,20],[25,0,771,25],[29,0,771,29],[31,0,771,31]],[[16,0,772,16],[23,0,772,23],[25,0,772,25],[26,0,772,26],[30,0,772,30],[31,0,772,31],[32,0,772,32]],[[13,0,773,13]],[[12,0,774,12],[16,0,774,16],[36,0,774,36],[37,0,774,37],[43,0,774,43],[47,0,774,47],[48,0,774,48],[50,0,774,50]],[[16,0,775,16],[23,0,775,23],[25,0,775,25],[26,0,775,26],[30,0,775,30],[31,0,775,31],[32,0,775,32]],[[13,0,776,13]],[[12,0,777,12],[19,0,777,19],[23,0,777,23],[24,0,777,24],[48,0,777,48],[49,0,777,49],[53,0,777,53],[55,0,777,55],[75,0,777,75],[76,0,777,76],[77,0,777,77]],[[8,0,778,8],[9,0,778,9],[10,0,778,10],[11,0,778,11],[12,0,778,12]],[[4,0,779,4],[5,0,779,5]],[[4,0,780,4]],[],[],[],[],[],[],[],[],[],[],[[7,0,791,7]],[[4,0,792,4],[14,0,792,14],[15,0,792,15],[19,0,792,19],[21,0,792,21],[34,0,792,34],[36,0,792,36],[46,0,792,46],[49,0,792,49],[53,0,792,53],[55,0,792,55],[57,0,792,57]],[[8,0,793,8],[58,0,793,58]],[[8,0,794,8],[12,0,794,12],[16,0,794,16],[17,0,794,17]],[[8,0,795,8],[12,0,795,12],[22,0,795,22],[24,0,795,24]],[[12,0,796,12],[18,0,796,18],[22,0,796,22],[25,0,796,25],[29,0,796,29],[33,0,796,33],[35,0,796,35],[36,0,796,36]],[[12,0,797,12],[16,0,797,16],[19,0,797,19],[33,0,797,33],[34,0,797,34],[38,0,797,38],[40,0,797,40],[45,0,797,45],[47,0,797,47],[51,0,797,51],[52,0,797,52],[53,0,797,53]],[[12,0,798,12],[16,0,798,16],[19,0,798,19],[34,0,798,34],[35,0,798,35],[39,0,798,39],[41,0,798,41],[46,0,798,46],[48,0,798,48],[52,0,798,52],[53,0,798,53],[54,0,798,54]],[[9,0,799,9]],[[8,0,800,8],[12,0,800,12],[14,0,800,14],[19,0,800,19],[28,0,800,28],[30,0,800,30]],[[12,0,801,12],[18,0,801,18],[24,0,801,24],[27,0,801,27],[42,0,801,42],[43,0,801,43],[56,0,801,56],[58,0,801,58],[60,0,801,60],[61,0,801,61],[62,0,801,62]],[[12,0,802,12],[16,0,802,16],[19,0,802,19],[23,0,802,23],[24,0,802,24],[26,0,802,26],[27,0,802,27],[30,0,802,30],[31,0,802,31],[37,0,802,37],[39,0,802,39],[43,0,802,43],[44,0,802,44],[45,0,802,45]],[[9,0,803,9]],[[13,0,804,13]],[[12,0,805,12],[16,0,805,16],[19,0,805,19],[23,0,805,23],[24,0,805,24],[26,0,805,26],[27,0,805,27],[30,0,805,30],[31,0,805,31],[44,0,805,44],[46,0,805,46],[50,0,805,50],[51,0,805,51],[52,0,805,52]],[[9,0,806,9]],[[8,0,807,8],[51,0,807,51]],[[8,0,808,8],[38,0,808,38]],[[8,0,809,8],[114,0,809,114]],[[8,0,810,8],[15,0,810,15]],[[8,0,811,8],[12,0,811,12]],[[8,0,812,8],[12,0,812,12],[15,0,812,15],[19,0,812,19],[20,0,812,20],[24,0,812,24]],[[8,0,813,8],[79,0,813,79]],[[8,0,814,8],[40,0,814,40]],[[8,0,815,8],[40,0,815,40]],[[8,0,816,8],[11,0,816,11],[12,0,816,12],[13,0,816,13],[16,0,816,16],[18,0,816,18],[20,0,816,20]],[[12,0,817,12],[16,0,817,16],[18,0,817,18],[23,0,817,23],[32,0,817,32],[36,0,817,36],[39,0,817,39],[41,0,817,41]],[[16,0,818,16],[22,0,818,22],[26,0,818,26],[29,0,818,29],[32,0,818,32],[33,0,818,33],[37,0,818,37],[38,0,818,38]],[[16,0,819,16],[22,0,819,22],[39,0,819,39],[42,0,819,42]],[[20,0,820,20],[22,0,820,22],[24,0,820,24],[27,0,820,27],[28,0,820,28],[30,0,820,30]],[[20,0,821,20],[24,0,821,24]],[[20,0,822,20],[23,0,822,23]],[[20,0,823,20],[28,0,823,28],[30,0,823,30],[34,0,823,34]],[[17,0,824,17],[18,0,824,18]],[[16,0,825,16],[55,0,825,28],[59,0,825,32],[64,0,825,34],[81,0,825,51],[85,0,825,54]],[[13,0,826,13]],[[17,0,827,17],[19,0,827,19],[87,0,827,87]],[[16,0,828,16],[22,0,828,22],[26,0,828,26],[29,0,828,29],[42,0,828,42],[43,0,828,43],[47,0,828,47],[50,0,828,50],[53,0,828,53],[56,0,828,56],[58,0,828,58],[59,0,828,59]],[[16,0,829,16],[19,0,829,19],[22,0,829,22],[36,0,829,36],[37,0,829,37],[41,0,829,41],[43,0,829,43],[47,0,829,47],[48,0,829,48],[50,0,829,50],[51,0,829,51],[60,0,829,60],[61,0,829,61],[62,0,829,62]],[[16,0,830,16],[22,0,830,22],[39,0,830,39],[42,0,830,42]],[[20,0,831,20],[22,0,831,22],[24,0,831,24],[26,0,831,26]],[[20,0,832,20],[23,0,832,23]],[[20,0,833,20],[24,0,833,24]],[[20,0,834,20],[28,0,834,28],[30,0,834,30],[34,0,834,34]],[[17,0,835,17],[18,0,835,18]],[[16,0,836,16],[55,0,836,28],[59,0,836,32],[64,0,836,34],[81,0,836,51],[85,0,836,54]],[[13,0,837,13]],[[8,0,838,8],[9,0,838,9],[10,0,838,10],[11,0,838,11],[12,0,838,12]],[[8,0,839,8],[15,0,839,15],[19,0,839,19],[20,0,839,20],[24,0,839,24],[25,0,839,25],[29,0,839,29],[30,0,839,30],[31,0,839,31],[32,0,839,32],[33,0,839,33],[34,0,839,34]],[[4,0,840,4],[5,0,840,5]],[[4,0,841,4],[74,0,841,74]],[[4,0,842,4],[17,0,842,17],[18,0,842,18],[22,0,842,22],[24,0,842,24],[30,0,842,30],[32,0,842,32],[49,0,842,49],[52,0,842,52],[56,0,842,56]],[[8,0,843,8],[12,0,843,12],[29,0,843,29],[31,0,843,31]],[[12,0,844,12],[16,0,844,16],[19,0,844,19],[34,0,844,34],[35,0,844,35],[39,0,844,39],[41,0,844,41],[46,0,844,46],[47,0,844,47],[48,0,844,48]],[[9,0,845,9]],[[8,0,846,8],[15,0,846,15],[19,0,846,19],[20,0,846,20],[22,0,846,22],[23,0,846,23],[29,0,846,29],[30,0,846,30],[36,0,846,36],[38,0,846,38],[42,0,846,42],[43,0,846,43],[44,0,846,44]],[[4,0,847,4],[5,0,847,5]],[[4,0,848,4]],[],[[7,0,850,7]],[[4,0,851,4],[27,0,851,27],[28,0,851,28],[32,0,851,32],[34,0,851,34],[40,0,851,40],[42,0,851,42],[62,0,851,62],[65,0,851,65],[67,0,851,67],[69,0,851,69],[86,0,851,86],[89,0,851,89],[93,0,851,93],[95,0,851,95],[100,0,851,100]],[],[[8,0,852,8],[12,0,852,12],[17,0,852,17],[22,0,852,22],[31,0,852,31],[33,0,852,33]],[[12,0,853,12],[17,0,853,17],[20,0,853,20],[30,0,853,30],[31,0,853,31],[35,0,853,35],[36,0,853,36],[38,0,853,38],[39,0,853,39],[48,0,853,48],[49,0,853,49],[50,0,853,50]],[[9,0,854,9]],[[8,0,855,8],[12,0,855,12],[29,0,855,29],[31,0,855,31]],[[12,0,856,12],[16,0,856,16],[19,0,856,19],[34,0,856,34],[35,0,856,35],[39,0,856,39],[41,0,856,41],[46,0,856,46],[47,0,856,47],[48,0,856,48]],[[9,0,857,9]],[[8,0,858,8],[14,0,858,14],[19,0,858,19],[22,0,858,22],[26,0,858,26],[27,0,858,27],[67,0,858,67],[68,0,858,68],[72,0,858,72],[74,0,858,74],[94,0,858,94],[95,0,858,95],[96,0,858,96]],[[8,0,859,8],[14,0,859,14],[24,0,859,24],[27,0,859,27],[32,0,859,32],[33,0,859,33],[43,0,859,43],[44,0,859,44]],[[8,0,860,8],[14,0,860,14],[28,0,860,28],[31,0,860,31],[36,0,860,36],[37,0,860,37],[51,0,860,51],[52,0,860,52]],[[8,0,861,8],[51,0,861,51]],[[8,0,862,8],[13,0,862,13],[14,0,862,14],[20,0,862,20],[21,0,862,21],[27,0,862,27],[29,0,862,29],[39,0,862,39],[40,0,862,40],[41,0,862,41]],[[8,0,863,8],[13,0,863,13],[19,0,863,19],[20,0,863,20],[36,0,863,36],[38,0,863,38],[55,0,863,55],[56,0,863,56],[60,0,863,60],[66,0,863,66],[67,0,863,67],[74,0,863,74],[75,0,863,75],[89,0,863,89],[90,0,863,90],[92,0,863,92]],[[12,0,864,12],[16,0,864,16],[39,0,864,39],[40,0,864,40],[41,0,864,41],[80,0,864,80]],[[12,0,865,12],[16,0,865,16],[24,0,865,24],[25,0,865,25]],[[12,0,866,12],[16,0,866,16],[36,0,866,36],[38,0,866,38]],[[16,0,867,16],[39,0,867,39],[42,0,867,42],[48,0,867,42],[68,0,867,62],[69,0,867,63],[73,0,867,67],[74,0,867,68],[81,0,867,75],[82,0,867,76],[84,0,867,78],[85,0,867,79],[92,0,867,86],[93,0,867,87],[97,0,867,91],[102,0,867,96],[118,0,867,112],[119,0,867,113],[161,0,867,115],[175,0,867,129],[176,0,867,130]],[[16,0,868,16],[24,0,868,24],[27,0,868,27],[33,0,868,27],[53,0,868,47],[54,0,868,48],[58,0,868,52],[59,0,868,53],[66,0,868,60],[67,0,868,61],[69,0,868,63],[70,0,868,64],[77,0,868,71],[78,0,868,72],[82,0,868,76],[87,0,868,81],[103,0,868,97],[104,0,868,98],[146,0,868,100],[151,0,868,105],[152,0,868,106]],[[13,0,869,13]],[[12,0,870,12],[20,0,870,20],[23,0,870,23],[31,0,870,31],[36,0,870,36],[45,0,870,45],[46,0,870,46],[47,0,870,47],[48,0,870,48],[56,0,870,56],[57,0,870,57],[58,0,870,58],[59,0,870,59],[63,0,870,63],[64,0,870,64],[76,0,870,76],[77,0,870,77],[78,0,870,78],[109,0,870,109]],[[12,0,871,12],[82,0,871,82]],[[12,0,872,12],[18,0,872,18],[31,0,872,31],[34,0,872,34],[50,0,872,50],[51,0,872,51],[57,0,872,57],[59,0,872,59],[75,0,872,75],[76,0,872,76],[77,0,872,77]],[[12,0,873,12],[18,0,873,18],[26,0,873,26],[29,0,873,29],[44,0,873,44],[45,0,873,45],[58,0,873,58],[60,0,873,60],[68,0,873,68],[69,0,873,69],[70,0,873,70]],[[12,0,874,12],[17,0,874,17],[20,0,874,20],[24,0,874,24],[25,0,874,25],[48,0,874,48],[49,0,874,49],[66,0,874,66],[68,0,874,68],[76,0,874,76],[78,0,874,78],[101,0,874,101],[103,0,874,103],[120,0,874,120],[122,0,874,122],[127,0,874,127],[128,0,874,128],[129,0,874,129]],[[9,0,875,9]],[[8,0,876,8],[15,0,876,15],[20,0,876,20],[21,0,876,21]],[[4,0,877,4],[5,0,877,5]],[[4,0,878,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,891,7]],[[4,0,892,4],[41,0,892,41],[42,0,892,42],[55,0,892,55],[57,0,892,57],[69,0,892,69],[71,0,892,71],[84,0,892,84],[86,0,892,86],[98,0,892,98],[100,0,892,100],[116,0,892,116],[118,0,892,118],[149,0,892,149],[151,0,892,151],[182,0,892,182],[185,0,892,185],[189,0,892,189],[191,0,892,191],[198,0,892,198],[201,0,892,201],[206,0,892,206]],[[8,0,893,8],[12,0,893,12],[29,0,893,29],[30,0,893,30]],[[8,0,894,8],[12,0,894,12],[28,0,894,28],[29,0,894,29]],[[8,0,895,8],[12,0,895,12],[19,0,895,19],[21,0,895,21]],[[12,0,896,12],[29,0,896,29],[32,0,896,32],[38,0,896,38],[39,0,896,39],[45,0,896,45],[46,0,896,46],[48,0,896,48],[50,0,896,50],[63,0,896,63],[64,0,896,64],[65,0,896,65]],[[12,0,897,12],[28,0,897,28],[31,0,897,31],[37,0,897,37],[38,0,897,38],[44,0,897,44],[45,0,897,45],[47,0,897,47],[49,0,897,49],[61,0,897,61],[62,0,897,62],[63,0,897,63]],[[9,0,898,9]],[[13,0,899,13]],[[12,0,900,12],[29,0,900,29],[32,0,900,32],[45,0,900,45],[46,0,900,46]],[[12,0,901,12],[28,0,901,28],[31,0,901,31],[43,0,901,43],[44,0,901,44]],[[9,0,902,9]],[[8,0,903,8],[25,0,903,25],[26,0,903,26],[43,0,903,43],[45,0,903,45],[61,0,903,61],[63,0,903,63],[76,0,903,76],[78,0,903,78],[90,0,903,90],[91,0,903,91],[92,0,903,92]],[[8,0,904,8],[14,0,904,14],[19,0,904,19],[22,0,904,22],[32,0,904,32],[33,0,904,33],[37,0,904,37],[38,0,904,38],[40,0,904,40],[41,0,904,41],[50,0,904,50],[51,0,904,51],[52,0,904,52]],[[8,0,905,8],[12,0,905,12],[43,0,905,43],[48,0,905,48],[57,0,905,57],[59,0,905,59]],[[12,0,906,12],[18,0,906,18],[27,0,906,27],[30,0,906,30],[46,0,906,46],[47,0,906,47],[59,0,906,59],[60,0,906,60],[61,0,906,61]],[[12,0,907,12],[18,0,907,18],[30,0,907,30],[33,0,907,33],[42,0,907,42],[43,0,907,43],[60,0,907,60],[61,0,907,61],[64,0,907,64],[65,0,907,65]],[[12,0,908,12],[18,0,908,18],[22,0,908,22],[57,0,908,30],[88,0,908,61],[93,0,908,63],[102,0,908,72],[104,0,908,74],[120,0,908,90],[123,0,908,92],[124,0,908,93]],[[12,0,909,12],[16,0,909,16],[17,0,909,17],[24,0,909,24],[26,0,909,26]],[[16,0,910,16],[29,0,910,29],[30,0,910,30],[39,0,910,39],[41,0,910,41],[45,0,910,45],[47,0,910,47],[51,0,910,51],[52,0,910,52],[53,0,910,53]],[[13,0,911,13]],[[12,0,912,12],[16,0,912,16],[47,0,912,47],[49,0,912,49]],[[16,0,913,16],[22,0,913,22],[26,0,913,26],[29,0,913,29],[33,0,913,33],[37,0,913,37],[39,0,913,39],[40,0,913,40]],[[16,0,914,16],[31,0,914,31],[32,0,914,32],[36,0,914,36],[38,0,914,38],[42,0,914,42],[44,0,914,44],[48,0,914,48],[49,0,914,49],[50,0,914,50]],[[16,0,915,16],[20,0,915,20],[21,0,915,21],[28,0,915,28],[30,0,915,30]],[[20,0,916,20],[35,0,916,35],[36,0,916,36],[45,0,916,45],[47,0,916,47],[51,0,916,51],[53,0,916,53],[57,0,916,57],[58,0,916,58],[59,0,916,59]],[[17,0,917,17]],[[13,0,918,13]],[[12,0,919,12],[17,0,919,17],[18,0,919,18],[24,0,919,24],[25,0,919,25],[37,0,919,37],[39,0,919,39],[43,0,919,43],[44,0,919,44],[45,0,919,45]],[[9,0,920,9]],[[8,0,921,8],[14,0,921,14],[39,0,921,39],[42,0,921,42],[58,0,921,58],[59,0,921,59],[64,0,921,64],[65,0,921,65],[77,0,921,77],[78,0,921,78],[79,0,921,79]],[[8,0,922,8],[12,0,922,12],[13,0,922,13],[16,0,922,16],[28,0,922,28],[29,0,922,29]],[[8,0,923,8],[13,0,923,13],[19,0,923,19],[23,0,923,23],[27,0,923,27],[52,0,923,52],[54,0,923,54]],[[12,0,924,12],[25,0,924,25]],[[12,0,925,12],[17,0,925,17],[18,0,925,18],[24,0,925,24],[25,0,925,25],[29,0,925,29],[30,0,925,30],[47,0,925,47],[48,0,925,48],[51,0,925,51],[53,0,925,53],[55,0,925,55],[60,0,925,60],[62,0,925,62],[63,0,925,63],[65,0,925,65],[66,0,925,66],[67,0,925,67]],[[12,0,926,12],[16,0,926,16],[17,0,926,17],[24,0,926,24],[26,0,926,26]],[[16,0,927,16],[20,0,927,20],[21,0,927,21],[26,0,927,26],[29,0,927,29],[30,0,927,30],[31,0,927,31]],[[13,0,928,13]],[[12,0,929,12],[13,0,929,13],[15,0,929,15],[16,0,929,16]],[[9,0,930,9]],[[8,0,931,8],[14,0,931,14],[36,0,931,36],[39,0,931,39],[56,0,931,56],[57,0,931,57],[62,0,931,62],[63,0,931,63],[76,0,931,76],[77,0,931,77],[78,0,931,78]],[[8,0,932,8],[9,0,932,9],[12,0,932,12],[25,0,932,25],[26,0,932,26]],[[8,0,933,8],[13,0,933,13],[19,0,933,19],[23,0,933,23],[27,0,933,27],[49,0,933,49],[51,0,933,51]],[[12,0,934,12],[25,0,934,25]],[[12,0,935,12],[17,0,935,17],[18,0,935,18],[24,0,935,24],[25,0,935,25],[29,0,935,29],[30,0,935,30],[47,0,935,47],[48,0,935,48],[51,0,935,51],[53,0,935,53],[55,0,935,55],[60,0,935,60],[62,0,935,62],[63,0,935,63],[65,0,935,65],[66,0,935,66],[67,0,935,67]],[[12,0,936,12],[16,0,936,16],[17,0,936,17],[24,0,936,24],[26,0,936,26]],[[16,0,937,16],[20,0,937,20],[21,0,937,21],[26,0,937,26],[29,0,937,29],[30,0,937,30],[31,0,937,31]],[[13,0,938,13]],[[12,0,939,12],[13,0,939,13],[15,0,939,15],[16,0,939,16]],[[9,0,940,9]],[[8,0,941,8],[15,0,941,15],[20,0,941,20],[21,0,941,21]],[[4,0,942,4],[5,0,942,5]],[[4,0,943,4]],[],[],[],[[7,0,947,7]],[[4,0,948,4],[25,0,948,25],[26,0,948,26],[33,0,948,33]],[[8,0,949,8],[14,0,949,14],[19,0,949,19],[22,0,949,22],[26,0,949,26],[27,0,949,27],[55,0,949,55],[56,0,949,56],[63,0,949,63],[64,0,949,64],[65,0,949,65]],[[8,0,950,8],[15,0,950,15],[19,0,950,19],[20,0,950,20],[32,0,950,32],[33,0,950,33],[38,0,950,38],[39,0,950,39],[40,0,950,40]],[[4,0,951,4],[5,0,951,5]],[[4,0,952,4],[32,0,952,32],[33,0,952,33],[40,0,952,40],[42,0,952,42],[47,0,952,47],[50,0,952,50],[60,0,952,60],[61,0,952,61],[65,0,952,65],[66,0,952,66],[68,0,952,68],[69,0,952,69],[78,0,952,78],[79,0,952,79]],[[8,0,953,8],[15,0,953,15],[16,0,953,16],[23,0,953,23],[24,0,953,24],[25,0,953,25],[31,0,953,31],[33,0,953,33],[35,0,953,35]],[[12,0,954,12],[17,0,954,17],[18,0,954,18],[24,0,954,24],[25,0,954,25],[31,0,954,31],[32,0,954,32],[33,0,954,33]],[[8,0,955,8],[9,0,955,9],[10,0,955,10],[11,0,955,11]],[[8,0,956,8],[15,0,956,15],[20,0,956,20],[21,0,956,21]],[[4,0,957,4],[5,0,957,5]],[[4,0,958,4]],[],[],[],[],[],[[7,0,964,7]],[[4,0,965,4],[35,0,965,35],[36,0,965,36],[42,0,965,42],[44,0,965,44],[64,0,965,64],[67,0,965,67],[69,0,965,69],[71,0,965,71],[95,0,965,95],[98,0,965,98],[100,0,965,100]],[[8,0,966,8],[95,0,966,95]],[[8,0,967,8],[14,0,967,14],[32,0,967,32],[35,0,967,35],[36,0,967,36],[55,0,967,55],[56,0,967,56],[57,0,967,57],[63,0,967,63],[64,0,967,64],[88,0,967,88],[89,0,967,89],[90,0,967,90]],[[8,0,968,8],[34,0,968,34]],[[8,0,969,8],[13,0,969,13],[19,0,969,19],[36,0,969,36],[40,0,969,40],[58,0,969,58],[60,0,969,60]],[[12,0,970,12],[19,0,970,19],[25,0,970,25],[26,0,970,26],[43,0,970,43],[44,0,970,44],[45,0,970,45]],[[9,0,971,9]],[[8,0,972,8],[28,0,972,28],[29,0,972,29],[36,0,972,36],[37,0,972,37],[40,0,972,40],[41,0,972,41],[43,0,972,43]],[[12,0,973,12],[16,0,973,16],[21,0,973,21],[22,0,973,22],[29,0,973,29],[30,0,973,30],[36,0,973,36],[37,0,973,37],[40,0,973,40],[41,0,973,41],[45,0,973,45],[46,0,973,46],[47,0,973,47],[49,0,973,49],[51,0,973,51],[104,0,973,104]],[[16,0,974,16],[22,0,974,22],[26,0,974,26],[29,0,974,29],[35,0,974,35],[36,0,974,36],[39,0,974,39],[40,0,974,40],[44,0,974,44],[45,0,974,45],[46,0,974,46]],[[16,0,975,16],[20,0,975,20],[21,0,975,21],[28,0,975,28],[29,0,975,29],[30,0,975,30],[31,0,975,31],[33,0,975,33],[34,0,975,34],[36,0,975,36],[38,0,975,38]],[[20,0,976,20],[24,0,976,24],[27,0,976,27],[28,0,976,28],[42,0,976,42],[44,0,976,44]],[[24,0,977,24],[28,0,977,28],[29,0,977,29],[60,0,977,60],[61,0,977,61],[62,0,977,62],[64,0,977,64],[67,0,977,67],[68,0,977,68],[82,0,977,82],[84,0,977,84],[108,0,977,108],[109,0,977,109],[110,0,977,110]],[[21,0,978,21]],[[25,0,979,25]],[[24,0,980,24],[30,0,980,30]],[[24,0,981,24],[29,0,981,29],[35,0,981,35],[52,0,981,52],[56,0,981,56],[74,0,981,74],[76,0,981,76]],[[28,0,982,28],[35,0,982,35],[41,0,982,41],[42,0,982,42],[45,0,982,45],[46,0,982,46],[50,0,982,50],[51,0,982,51],[52,0,982,52],[53,0,982,53],[54,0,982,54],[55,0,982,55],[72,0,982,72],[73,0,982,73],[74,0,982,74]],[[25,0,983,25]],[[21,0,984,21]],[[16,0,985,16],[17,0,985,17],[18,0,985,18],[19,0,985,19]],[[13,0,986,13]],[[17,0,987,17],[19,0,987,19],[52,0,987,52]],[[16,0,988,16],[20,0,988,20],[23,0,988,23],[24,0,988,24],[38,0,988,38],[40,0,988,40]],[[20,0,989,20],[24,0,989,24],[25,0,989,25],[56,0,989,56],[57,0,989,57],[63,0,989,63],[64,0,989,64],[67,0,989,67],[68,0,989,68],[72,0,989,72],[73,0,989,73],[75,0,989,75],[78,0,989,78],[79,0,989,79],[93,0,989,93],[95,0,989,95],[119,0,989,119],[120,0,989,120],[121,0,989,121]],[[17,0,990,17]],[[21,0,991,21]],[[20,0,992,20],[25,0,992,25],[31,0,992,31],[48,0,992,48],[52,0,992,52],[70,0,992,70],[72,0,992,72]],[[24,0,993,24],[31,0,993,31],[37,0,993,37],[38,0,993,38],[41,0,993,41],[42,0,993,42],[46,0,993,46],[47,0,993,47],[48,0,993,48],[65,0,993,65],[66,0,993,66],[67,0,993,67]],[[21,0,994,21]],[[17,0,995,17]],[[13,0,996,13]],[[8,0,997,8],[9,0,997,9],[10,0,997,10],[11,0,997,11]],[[8,0,998,8],[15,0,998,15],[21,0,998,21],[22,0,998,22]],[[4,0,999,4],[5,0,999,5]],[[4,0,1000,4]],[],[],[],[],[[7,0,1005,7]],[[4,0,1006,4],[30,0,1006,30],[31,0,1006,31],[34,0,1006,34],[36,0,1006,36],[56,0,1006,56],[59,0,1006,59],[61,0,1006,61]],[[8,0,1007,8],[12,0,1007,12],[15,0,1007,15],[27,0,1007,27],[44,0,1007,44],[46,0,1007,46]],[[12,0,1008,12],[19,0,1008,19],[23,0,1008,23],[24,0,1008,24],[56,0,1008,56],[57,0,1008,57],[60,0,1008,60],[62,0,1008,62],[82,0,1008,82],[83,0,1008,83],[84,0,1008,84]],[[9,0,1009,9]],[[13,0,1010,13],[15,0,1010,15],[37,0,1010,37]],[[12,0,1011,12],[19,0,1011,19],[23,0,1011,23],[24,0,1011,24],[63,0,1011,63],[64,0,1011,64],[67,0,1011,67],[69,0,1011,69],[89,0,1011,89],[90,0,1011,90],[91,0,1011,91]],[[9,0,1012,9]],[[4,0,1013,4],[5,0,1013,5]],[[4,0,1014,4],[36,0,1014,36],[37,0,1014,37],[43,0,1014,43],[45,0,1014,45],[65,0,1014,65],[68,0,1014,68],[70,0,1014,70]],[[8,0,1015,8],[15,0,1015,15],[19,0,1015,19],[20,0,1015,20],[33,0,1015,33],[34,0,1015,34],[40,0,1015,40],[42,0,1015,42],[62,0,1015,62],[63,0,1015,63],[64,0,1015,64],[68,0,1015,68],[69,0,1015,69],[73,0,1015,73],[74,0,1015,74],[75,0,1015,75],[76,0,1015,76],[78,0,1015,78],[81,0,1015,81],[82,0,1015,82],[86,0,1015,86],[87,0,1015,87],[89,0,1015,89],[90,0,1015,90],[94,0,1015,94],[95,0,1015,95],[130,0,1015,130],[131,0,1015,131],[135,0,1015,135],[137,0,1015,137],[157,0,1015,157],[158,0,1015,158],[159,0,1015,159]],[[8,0,1016,8],[50,0,1016,50]],[[8,0,1017,8],[11,0,1017,11],[12,0,1017,12],[13,0,1017,13],[21,0,1017,21],[23,0,1017,23],[25,0,1017,25]],[[12,0,1018,12],[19,0,1018,19],[27,0,1018,27]],[[17,0,1019,17],[20,0,1019,20],[21,0,1019,21],[25,0,1019,25],[26,0,1019,26],[28,0,1019,28],[29,0,1019,29],[43,0,1019,43],[44,0,1019,44],[48,0,1019,48],[50,0,1019,50],[54,0,1019,54],[55,0,1019,55],[57,0,1019,57],[58,0,1019,58],[67,0,1019,67],[68,0,1019,68],[69,0,1019,69],[70,0,1019,70]],[[8,0,1020,8],[9,0,1020,9],[10,0,1020,10],[11,0,1020,11],[12,0,1020,12]],[[4,0,1021,4],[5,0,1021,5]],[[4,0,1022,4],[43,0,1022,43],[44,0,1022,44],[57,0,1022,57],[59,0,1022,59],[79,0,1022,79],[82,0,1022,82],[84,0,1022,84]],[[8,0,1023,8],[15,0,1023,15],[19,0,1023,19],[20,0,1023,20],[46,0,1023,46],[47,0,1023,47],[60,0,1023,60],[61,0,1023,61],[62,0,1023,62],[66,0,1023,66]],[[8,0,1024,8],[21,0,1024,21]],[[8,0,1025,8],[12,0,1025,12],[13,0,1025,13],[14,0,1025,14],[15,0,1025,15],[17,0,1025,17],[25,0,1025,25],[26,0,1025,26],[27,0,1025,27],[32,0,1025,32],[34,0,1025,34],[36,0,1025,36]],[[12,0,1026,12],[16,0,1026,16],[28,0,1026,28],[29,0,1026,29]],[[12,0,1027,12],[24,0,1027,24],[27,0,1027,27],[32,0,1027,32],[33,0,1027,33],[36,0,1027,36],[37,0,1027,37],[41,0,1027,41],[42,0,1027,42],[44,0,1027,44],[45,0,1027,45],[49,0,1027,49],[50,0,1027,50],[63,0,1027,63],[64,0,1027,64],[68,0,1027,68],[69,0,1027,69],[86,0,1027,86],[87,0,1027,87],[90,0,1027,90],[92,0,1027,92],[112,0,1027,112],[113,0,1027,113],[114,0,1027,114],[115,0,1027,115]],[[12,0,1028,12],[19,0,1028,19],[32,0,1028,32],[33,0,1028,33],[45,0,1028,45],[46,0,1028,46],[47,0,1028,47]],[[8,0,1029,8],[9,0,1029,9],[10,0,1029,10],[12,0,1029,12],[15,0,1029,15],[16,0,1029,16],[17,0,1029,17],[22,0,1029,22],[24,0,1029,24],[26,0,1029,26]],[[12,0,1030,12],[16,0,1030,16],[21,0,1030,21],[24,0,1030,24],[26,0,1030,26],[27,0,1030,27]],[[12,0,1031,12],[17,0,1031,17],[18,0,1031,18],[25,0,1031,25],[26,0,1031,26],[30,0,1031,30],[31,0,1031,31],[33,0,1031,33]],[[16,0,1032,16],[21,0,1032,21],[24,0,1032,24],[29,0,1032,29],[30,0,1032,30],[36,0,1032,36],[37,0,1032,37],[41,0,1032,41],[42,0,1032,42],[77,0,1032,77],[78,0,1032,78],[82,0,1032,82],[84,0,1032,84],[104,0,1032,104],[105,0,1032,105],[106,0,1032,106],[107,0,1032,107]],[[12,0,1033,12],[13,0,1033,13],[14,0,1033,14],[15,0,1033,15]],[[12,0,1034,12],[19,0,1034,19],[24,0,1034,24],[25,0,1034,25]],[[8,0,1035,8],[9,0,1035,9],[10,0,1035,10],[12,0,1035,12],[15,0,1035,15],[16,0,1035,16],[17,0,1035,17],[25,0,1035,25],[27,0,1035,27],[29,0,1035,29]],[[12,0,1036,12],[19,0,1036,19],[27,0,1036,27]],[[17,0,1037,17],[20,0,1037,20],[21,0,1037,21],[25,0,1037,25],[26,0,1037,26],[28,0,1037,28],[29,0,1037,29],[43,0,1037,43],[44,0,1037,44],[48,0,1037,48],[50,0,1037,50],[54,0,1037,54],[55,0,1037,55],[57,0,1037,57],[58,0,1037,58],[67,0,1037,67],[68,0,1037,68],[69,0,1037,69],[70,0,1037,70]],[[8,0,1038,8],[9,0,1038,9],[10,0,1038,10],[11,0,1038,11],[12,0,1038,12]],[[4,0,1039,4],[5,0,1039,5]],[[4,0,1040,4]],[],[],[],[],[],[],[[7,0,1047,7]],[[4,0,1048,4],[33,0,1048,33],[34,0,1048,34],[38,0,1048,38],[40,0,1048,40],[60,0,1048,60],[63,0,1048,63],[65,0,1048,65]],[[8,0,1049,8],[14,0,1049,14],[19,0,1049,19],[22,0,1049,22],[26,0,1049,26],[27,0,1049,27],[62,0,1049,62],[63,0,1049,63],[67,0,1049,67],[69,0,1049,69],[89,0,1049,89],[90,0,1049,90],[91,0,1049,91]],[[8,0,1050,8],[15,0,1050,15],[20,0,1050,20],[21,0,1050,21],[24,0,1050,24],[25,0,1050,25],[29,0,1050,29],[30,0,1050,30],[32,0,1050,32],[33,0,1050,33],[47,0,1050,47],[48,0,1050,48],[52,0,1050,52],[54,0,1050,54],[58,0,1050,58],[59,0,1050,59],[61,0,1050,61],[62,0,1050,62],[71,0,1050,71],[72,0,1050,72],[73,0,1050,73],[74,0,1050,74]],[[4,0,1051,4],[5,0,1051,5]],[[4,0,1052,4]],[],[[7,0,1054,7]],[[4,0,1055,4],[39,0,1055,39],[40,0,1055,40],[44,0,1055,44],[46,0,1055,46],[66,0,1055,66],[69,0,1055,69],[71,0,1055,71]],[[8,0,1056,8],[12,0,1056,12],[32,0,1056,32],[36,0,1056,36],[40,0,1056,40],[44,0,1056,44],[64,0,1056,64],[65,0,1056,65],[71,0,1056,71],[76,0,1056,76],[77,0,1056,77],[79,0,1056,79]],[[12,0,1057,12],[19,0,1057,19],[20,0,1057,20],[24,0,1057,24],[25,0,1057,25],[42,0,1057,42],[43,0,1057,43],[47,0,1057,47],[48,0,1057,48],[49,0,1057,49]],[[9,0,1058,9]],[[8,0,1059,8],[12,0,1059,12],[20,0,1059,20],[23,0,1059,23],[25,0,1059,25],[26,0,1059,26]],[[8,0,1060,8],[16,0,1060,16],[17,0,1060,17],[21,0,1060,21],[22,0,1060,22],[26,0,1060,26],[27,0,1060,27],[44,0,1060,44],[45,0,1060,45],[49,0,1060,49],[50,0,1060,50],[51,0,1060,51]],[[8,0,1061,8],[28,0,1061,28],[29,0,1061,29],[36,0,1061,36],[37,0,1061,37],[40,0,1061,40],[41,0,1061,41],[43,0,1061,43]],[[12,0,1062,12],[16,0,1062,16],[21,0,1062,21],[22,0,1062,22],[29,0,1062,29],[30,0,1062,30],[34,0,1062,34],[35,0,1062,35],[38,0,1062,38],[39,0,1062,39],[43,0,1062,43],[44,0,1062,44],[45,0,1062,45],[49,0,1062,49],[50,0,1062,50],[53,0,1062,53],[54,0,1062,54],[59,0,1062,59],[61,0,1062,61]],[[16,0,1063,16],[89,0,1063,89]],[[16,0,1064,16],[22,0,1064,22],[27,0,1064,27],[30,0,1064,30],[34,0,1064,34],[35,0,1064,35],[38,0,1064,38],[39,0,1064,39],[43,0,1064,43],[44,0,1064,44],[45,0,1064,45]],[[16,0,1065,16],[21,0,1065,21],[22,0,1065,22],[29,0,1065,29],[30,0,1065,30],[37,0,1065,37],[38,0,1065,38],[40,0,1065,40]],[[20,0,1066,20],[24,0,1066,24],[27,0,1066,27],[28,0,1066,28],[42,0,1066,42],[44,0,1066,44]],[[24,0,1067,24],[32,0,1067,32],[35,0,1067,35],[43,0,1067,43],[44,0,1067,44],[50,0,1067,50],[51,0,1067,51],[55,0,1067,55],[56,0,1067,56],[91,0,1067,91],[92,0,1067,92],[99,0,1067,99],[101,0,1067,101],[104,0,1067,104],[105,0,1067,105],[119,0,1067,119],[120,0,1067,120],[121,0,1067,121],[122,0,1067,122]],[[21,0,1068,21]],[[25,0,1069,25]],[[24,0,1070,24],[32,0,1070,32],[33,0,1070,33],[37,0,1070,37],[38,0,1070,38],[45,0,1070,45],[46,0,1070,46],[63,0,1070,63],[64,0,1070,64],[68,0,1070,68],[69,0,1070,69],[70,0,1070,70]],[[21,0,1071,21]],[[16,0,1072,16],[17,0,1072,17],[18,0,1072,18],[19,0,1072,19]],[[13,0,1073,13]],[[17,0,1074,17],[19,0,1074,19],[52,0,1074,52]],[[16,0,1075,16],[20,0,1075,20],[23,0,1075,23],[24,0,1075,24],[38,0,1075,38],[40,0,1075,40]],[[20,0,1076,20],[28,0,1076,28],[31,0,1076,31],[39,0,1076,39],[40,0,1076,40],[46,0,1076,46],[47,0,1076,47],[51,0,1076,51],[52,0,1076,52],[87,0,1076,87],[88,0,1076,88],[92,0,1076,92],[94,0,1076,94],[97,0,1076,97],[98,0,1076,98],[112,0,1076,112],[113,0,1076,113],[114,0,1076,114],[115,0,1076,115]],[[17,0,1077,17]],[[21,0,1078,21]],[[20,0,1079,20],[26,0,1079,26],[33,0,1079,33],[36,0,1079,36],[40,0,1079,40],[41,0,1079,41],[44,0,1079,44],[45,0,1079,45],[49,0,1079,49],[50,0,1079,50],[51,0,1079,51]],[[20,0,1080,20],[24,0,1080,24],[31,0,1080,31],[35,0,1080,35],[39,0,1080,39],[43,0,1080,43],[49,0,1080,49],[53,0,1080,53],[60,0,1080,60],[61,0,1080,61],[78,0,1080,78],[80,0,1080,80]],[[24,0,1081,24],[32,0,1081,32],[33,0,1081,33],[37,0,1081,37],[38,0,1081,38],[45,0,1081,45],[46,0,1081,46],[63,0,1081,63],[64,0,1081,64],[68,0,1081,68],[69,0,1081,69],[70,0,1081,70]],[[21,0,1082,21]],[[20,0,1083,20],[77,0,1083,77]],[[17,0,1084,17]],[[13,0,1085,13]],[[8,0,1086,8],[9,0,1086,9],[10,0,1086,10],[11,0,1086,11]],[[8,0,1087,8],[15,0,1087,15],[23,0,1087,23],[24,0,1087,24]],[[4,0,1088,4],[5,0,1088,5]],[[4,0,1089,4]],[],[],[[7,0,1092,7]],[[4,0,1093,4],[44,0,1093,44],[45,0,1093,45],[49,0,1093,49],[51,0,1093,51],[71,0,1093,71],[74,0,1093,74],[76,0,1093,76]],[[8,0,1094,8],[61,0,1094,61]],[[8,0,1095,8],[12,0,1095,12],[22,0,1095,22],[25,0,1095,25],[27,0,1095,27],[28,0,1095,28]],[[8,0,1096,8],[14,0,1096,14],[28,0,1096,28],[31,0,1096,31],[33,0,1096,33],[34,0,1096,34]],[[8,0,1097,8],[116,0,1097,116]],[[8,0,1098,8],[30,0,1098,30]],[[8,0,1099,8],[13,0,1099,13],[19,0,1099,19],[20,0,1099,20],[23,0,1099,23],[25,0,1099,25],[30,0,1099,30],[31,0,1099,31],[35,0,1099,35],[41,0,1099,41],[42,0,1099,42],[49,0,1099,49],[50,0,1099,50],[54,0,1099,54],[55,0,1099,55],[57,0,1099,57]],[[12,0,1100,12],[39,0,1100,39]],[[12,0,1101,12],[16,0,1101,16],[36,0,1101,36],[40,0,1101,40],[60,0,1101,60],[61,0,1101,61],[67,0,1101,67],[70,0,1101,70],[71,0,1101,71],[73,0,1101,73]],[[16,0,1102,16],[22,0,1102,22],[41,0,1102,41],[44,0,1102,44],[64,0,1102,64],[65,0,1102,65],[69,0,1102,69],[70,0,1102,70],[77,0,1102,77],[78,0,1102,78],[80,0,1102,80],[81,0,1102,81],[88,0,1102,88],[89,0,1102,89],[93,0,1102,93],[98,0,1102,98],[101,0,1102,101],[102,0,1102,102],[103,0,1102,103]],[[16,0,1103,16],[20,0,1103,20],[39,0,1103,39],[41,0,1103,41]],[[20,0,1104,20],[34,0,1104,34],[35,0,1104,35],[38,0,1104,38],[39,0,1104,39],[42,0,1104,42],[47,0,1104,47],[48,0,1104,48]],[[17,0,1105,17]],[[21,0,1106,21]],[[20,0,1107,20],[30,0,1107,30],[31,0,1107,31],[34,0,1107,34],[35,0,1107,35],[38,0,1107,38],[43,0,1107,43],[44,0,1107,44]],[[17,0,1108,17]],[[13,0,1109,13]],[[17,0,1110,17]],[[16,0,1111,16],[26,0,1111,26],[29,0,1111,29],[33,0,1111,33],[34,0,1111,34]],[[13,0,1112,13]],[[9,0,1113,9]],[[8,0,1114,8],[15,0,1114,15]],[[12,0,1115,12],[22,0,1115,22]],[[12,0,1116,12],[26,0,1116,26]],[[9,0,1117,9],[10,0,1117,10]],[[4,0,1118,4],[5,0,1118,5]],[[4,0,1119,4]],[],[],[],[],[],[],[[7,0,1126,7]],[[4,0,1127,4],[16,0,1127,16],[17,0,1127,17],[22,0,1127,22]],[[8,0,1128,8],[15,0,1128,15],[19,0,1128,19],[20,0,1128,20],[25,0,1128,25],[26,0,1128,26],[32,0,1128,32],[34,0,1128,34],[35,0,1128,35],[36,0,1128,36],[40,0,1128,40],[41,0,1128,41],[45,0,1128,45],[46,0,1128,46],[47,0,1128,47],[48,0,1128,48],[49,0,1128,49],[50,0,1128,50]],[[4,0,1129,4],[5,0,1129,5]],[[1,0,1130,1]],[[0,0,1131,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,1144,3]],[[0,0,1145,0],[6,0,1145,6],[13,0,1145,13],[27,0,1145,27]],[[4,0,1146,4],[16,0,1146,16],[19,0,1146,19]],[[8,0,1147,8],[12,0,1147,12],[13,0,1147,13],[16,0,1147,16],[19,0,1147,19],[22,0,1147,22],[23,0,1147,23]],[[8,0,1148,8],[12,0,1148,12],[13,0,1148,13],[29,0,1148,29],[32,0,1148,32],[34,0,1148,34],[35,0,1148,35]],[[4,0,1149,4],[5,0,1149,5]],[[4,0,1150,4],[55,0,1150,55]],[[4,0,1151,4],[10,0,1151,10],[11,0,1151,11],[19,0,1151,19],[20,0,1151,20],[29,0,1151,29],[31,0,1151,31],[35,0,1151,35]],[[8,0,1152,8],[14,0,1152,14],[17,0,1152,17],[20,0,1152,20],[30,0,1152,30],[31,0,1152,31],[40,0,1152,40],[42,0,1152,42],[46,0,1152,46],[47,0,1152,47],[48,0,1152,48]],[[8,0,1153,8],[15,0,1153,15],[19,0,1153,19],[23,0,1153,23],[24,0,1153,24],[27,0,1153,27],[28,0,1153,28],[29,0,1153,29]],[[4,0,1154,4],[5,0,1154,5]],[[4,0,1155,4],[59,0,1155,59]],[[4,0,1156,4],[8,0,1156,8],[13,0,1156,13]],[[8,0,1157,8],[15,0,1157,15],[20,0,1157,20],[21,0,1157,21],[25,0,1157,25],[26,0,1157,26],[29,0,1157,29],[31,0,1157,31],[34,0,1157,34],[38,0,1157,38],[39,0,1157,39],[55,0,1157,55],[56,0,1157,56],[57,0,1157,57]],[[4,0,1158,4],[5,0,1158,5]],[[4,0,1159,4],[90,0,1159,90]],[[4,0,1160,4],[12,0,1160,12]],[[8,0,1161,8],[15,0,1161,15],[19,0,1161,19],[20,0,1161,20],[27,0,1161,27],[28,0,1161,28],[32,0,1161,32],[33,0,1161,33],[38,0,1161,38],[39,0,1161,39],[40,0,1161,40],[41,0,1161,41]],[[4,0,1162,4],[5,0,1162,5]],[[4,0,1163,4],[9,0,1163,9],[10,0,1163,10],[19,0,1163,19],[21,0,1163,21],[26,0,1163,26],[28,0,1163,28],[33,0,1163,33]],[[8,0,1164,8],[12,0,1164,12],[13,0,1164,13],[29,0,1164,29],[30,0,1164,30],[34,0,1164,34],[35,0,1164,35],[40,0,1164,40],[41,0,1164,41],[50,0,1164,50],[52,0,1164,52],[57,0,1164,57],[59,0,1164,59],[64,0,1164,64],[65,0,1164,65],[66,0,1164,66],[67,0,1164,67]],[[8,0,1165,8],[15,0,1165,15],[19,0,1165,19],[20,0,1165,20]],[[4,0,1166,4],[5,0,1166,5]],[[4,0,1167,4],[11,0,1167,11],[12,0,1167,12],[21,0,1167,21],[23,0,1167,23],[35,0,1167,35]],[[8,0,1168,8],[12,0,1168,12],[13,0,1168,13],[29,0,1168,29],[30,0,1168,30],[34,0,1168,34],[35,0,1168,35],[42,0,1168,42],[43,0,1168,43],[52,0,1168,52],[54,0,1168,54],[66,0,1168,66],[67,0,1168,67],[68,0,1168,68],[69,0,1168,69]],[[8,0,1169,8],[15,0,1169,15],[19,0,1169,19],[20,0,1169,20]],[[4,0,1170,4],[5,0,1170,5]],[[4,0,1171,4],[9,0,1171,9],[10,0,1171,10],[16,0,1171,16]],[[8,0,1172,8],[12,0,1172,12],[13,0,1172,13],[29,0,1172,29],[30,0,1172,30],[34,0,1172,34],[35,0,1172,35],[40,0,1172,40],[41,0,1172,41],[47,0,1172,47],[48,0,1172,48],[49,0,1172,49],[50,0,1172,50]],[[8,0,1173,8],[15,0,1173,15],[19,0,1173,19],[20,0,1173,20]],[[4,0,1174,4],[5,0,1174,5]],[[4,0,1175,4],[15,0,1175,15],[16,0,1175,16],[22,0,1175,22]],[[8,0,1176,8],[12,0,1176,12],[13,0,1176,13],[29,0,1176,29],[30,0,1176,30],[34,0,1176,34],[35,0,1176,35],[46,0,1176,46],[47,0,1176,47],[53,0,1176,53],[54,0,1176,54],[55,0,1176,55],[56,0,1176,56]],[[8,0,1177,8],[15,0,1177,15],[19,0,1177,19],[20,0,1177,20]],[[4,0,1178,4],[5,0,1178,5]],[[4,0,1179,4],[11,0,1179,11],[12,0,1179,12],[20,0,1179,20],[22,0,1179,22],[25,0,1179,25],[36,0,1179,36]],[[8,0,1180,8],[12,0,1180,12],[20,0,1180,20],[22,0,1180,22]],[[12,0,1181,12],[16,0,1181,16],[17,0,1181,17],[33,0,1181,33],[34,0,1181,34],[38,0,1181,38],[39,0,1181,39],[46,0,1181,46],[47,0,1181,47],[55,0,1181,55],[56,0,1181,56],[57,0,1181,57],[58,0,1181,58]],[[9,0,1182,9]],[[13,0,1183,13],[17,0,1183,17],[28,0,1183,28],[30,0,1183,30]],[[12,0,1184,12],[16,0,1184,16],[17,0,1184,17],[33,0,1184,33],[34,0,1184,34],[38,0,1184,38],[39,0,1184,39],[46,0,1184,46],[47,0,1184,47],[50,0,1184,50],[61,0,1184,61],[62,0,1184,62],[63,0,1184,63],[64,0,1184,64]],[[9,0,1185,9]],[[8,0,1186,8],[15,0,1186,15],[19,0,1186,19],[20,0,1186,20]],[[4,0,1187,4],[5,0,1187,5]],[[4,0,1188,4],[14,0,1188,14],[15,0,1188,15],[23,0,1188,23],[25,0,1188,25],[28,0,1188,28],[39,0,1188,39]],[[8,0,1189,8],[12,0,1189,12],[20,0,1189,20],[22,0,1189,22]],[[12,0,1190,12],[16,0,1190,16],[17,0,1190,17],[33,0,1190,33],[34,0,1190,34],[38,0,1190,38],[39,0,1190,39],[49,0,1190,49],[50,0,1190,50],[58,0,1190,58],[59,0,1190,59],[60,0,1190,60],[61,0,1190,61]],[[9,0,1191,9]],[[13,0,1192,13],[17,0,1192,17],[28,0,1192,28],[30,0,1192,30]],[[12,0,1193,12],[16,0,1193,16],[17,0,1193,17],[33,0,1193,33],[34,0,1193,34],[38,0,1193,38],[39,0,1193,39],[49,0,1193,49],[50,0,1193,50],[53,0,1193,53],[64,0,1193,64],[65,0,1193,65],[66,0,1193,66],[67,0,1193,67]],[[9,0,1194,9]],[[8,0,1195,8],[15,0,1195,15],[19,0,1195,19],[20,0,1195,20]],[[4,0,1196,4],[5,0,1196,5]],[[4,0,1197,4],[9,0,1197,9],[10,0,1197,10],[18,0,1197,18],[20,0,1197,20],[23,0,1197,23],[34,0,1197,34]],[[8,0,1198,8],[12,0,1198,12],[20,0,1198,20],[22,0,1198,22]],[[12,0,1199,12],[16,0,1199,16],[17,0,1199,17],[33,0,1199,33],[34,0,1199,34],[38,0,1199,38],[39,0,1199,39],[44,0,1199,44],[45,0,1199,45],[53,0,1199,53],[54,0,1199,54],[55,0,1199,55],[56,0,1199,56]],[[9,0,1200,9]],[[13,0,1201,13],[17,0,1201,17],[28,0,1201,28],[30,0,1201,30]],[[12,0,1202,12],[16,0,1202,16],[17,0,1202,17],[33,0,1202,33],[34,0,1202,34],[38,0,1202,38],[39,0,1202,39],[44,0,1202,44],[45,0,1202,45],[48,0,1202,48],[59,0,1202,59],[60,0,1202,60],[61,0,1202,61],[62,0,1202,62]],[[9,0,1203,9]],[[8,0,1204,8],[15,0,1204,15],[19,0,1204,19],[20,0,1204,20]],[[4,0,1205,4],[5,0,1205,5]],[[4,0,1206,4],[13,0,1206,13],[14,0,1206,14],[22,0,1206,22],[24,0,1206,24],[27,0,1206,27],[38,0,1206,38]],[[8,0,1207,8],[12,0,1207,12],[20,0,1207,20],[22,0,1207,22]],[[12,0,1208,12],[16,0,1208,16],[17,0,1208,17],[33,0,1208,33],[34,0,1208,34],[38,0,1208,38],[39,0,1208,39],[48,0,1208,48],[49,0,1208,49],[57,0,1208,57],[58,0,1208,58],[59,0,1208,59],[60,0,1208,60]],[[9,0,1209,9]],[[13,0,1210,13],[17,0,1210,17],[28,0,1210,28],[30,0,1210,30]],[[12,0,1211,12],[16,0,1211,16],[17,0,1211,17],[33,0,1211,33],[34,0,1211,34],[38,0,1211,38],[39,0,1211,39],[48,0,1211,48],[49,0,1211,49],[52,0,1211,52],[63,0,1211,63],[64,0,1211,64],[65,0,1211,65],[66,0,1211,66]],[[9,0,1212,9]],[[8,0,1213,8],[15,0,1213,15],[19,0,1213,19],[20,0,1213,20]],[[4,0,1214,4],[5,0,1214,5]],[[1,0,1215,1]],[[0,0,1216,0],[134434,0,1216,134434]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1829,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","start":12,"end":1706},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":1708,"end":1829}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"sub-collection-query.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/sub-collection-query.ts"],"names":[],"mappings":[[[0,0,0,0],[69,0,0,69]]],"sourcesContent":["/* For Listening to a Doc and multiple sub collections in that doc */\r\n\r\nimport {QueryConstraint} from 'firebase/firestore';\r\n\r\n/**\r\n * For Listening to a Document and multiple sub Collections in that Document\r\n */\r\n\r\nexport interface SubCollectionQuery {\r\n\r\n  /** the name of the subCollection to be read. */\r\n  name: string;\r\n\r\n  /** Specified Document name if multiple documents in collection is not used */\r\n  docId?: string;\r\n\r\n  /** Any SubCollections to be read in the Collection */\r\n  subCollections?: SubCollectionQuery[];\r\n\r\n  /**\r\n   *\r\n   * The Collection QueryFn.\r\n   *\r\n   * Example:\r\n   * const query = ref.where('type', '==', 'Book')\r\n   *                  .where('price', '>' 18.00)\r\n   *                  .where('price', '<' 100.00)\r\n   *                  .where('category', '==', 'Fiction')\r\n   *                  .where('publisher', '==', 'BigPublisher')\r\n   *\r\n   */\r\n  // queryFn?: QueryFn;\r\n  queryConstraints?: QueryConstraint[];\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,2,0],[1694,0,2,1694]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8121,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","start":12,"end":7998},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":8000,"end":8121}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViY29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YmNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[7986,0,1,7986]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2925,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","start":12,"end":2802},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":2804,"end":2925}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[2790,0,1,2790]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4564,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":28,"imported":{"type":"Identifier","start":24,"end":28,"name":"noop"},"local":{"type":"Identifier","start":24,"end":28,"name":"noop"}}],"source":{"type":"Literal","start":36,"end":42,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":45,"end":98,"specifiers":[{"type":"ImportSpecifier","start":54,"end":57,"imported":{"type":"Identifier","start":54,"end":57,"name":"map"},"local":{"type":"Identifier","start":54,"end":57,"name":"map"}},{"type":"ImportSpecifier","start":59,"end":68,"imported":{"type":"Identifier","start":59,"end":68,"name":"startWith"},"local":{"type":"Identifier","start":59,"end":68,"name":"startWith"}},{"type":"ImportSpecifier","start":70,"end":73,"imported":{"type":"Identifier","start":70,"end":73,"name":"tap"},"local":{"type":"Identifier","start":70,"end":73,"name":"tap"}}],"source":{"type":"Literal","start":81,"end":97,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":100,"end":128,"declarations":[{"type":"VariableDeclarator","start":106,"end":127,"id":{"type":"Identifier","start":106,"end":109,"name":"nop"},"init":{"type":"ArrowFunctionExpression","start":112,"end":127,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":118,"end":127,"callee":{"type":"Identifier","start":118,"end":121,"name":"tap"},"arguments":[{"type":"Identifier","start":122,"end":126,"name":"noop"}],"optional":false}}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":512,"end":924,"declaration":{"type":"VariableDeclaration","start":519,"end":924,"declarations":[{"type":"VariableDeclarator","start":525,"end":923,"id":{"type":"Identifier","start":525,"end":546,"name":"combineLatestToObject"},"init":{"type":"ArrowFunctionExpression","start":549,"end":923,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":550,"end":561,"name":"observables"}],"body":{"type":"BlockStatement","start":566,"end":923,"body":[{"type":"VariableDeclaration","start":573,"end":611,"declarations":[{"type":"VariableDeclarator","start":579,"end":610,"id":{"type":"Identifier","start":579,"end":583,"name":"keys"},"init":{"type":"CallExpression","start":586,"end":610,"callee":{"type":"MemberExpression","start":586,"end":597,"object":{"type":"Identifier","start":586,"end":592,"name":"Object"},"property":{"type":"Identifier","start":593,"end":597,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":598,"end":609,"name":"observables"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":617,"end":920,"argument":{"type":"CallExpression","start":624,"end":919,"callee":{"type":"MemberExpression","start":624,"end":817,"object":{"type":"CallExpression","start":624,"end":812,"callee":{"type":"Identifier","start":624,"end":637,"name":"combineLatest"},"arguments":[{"type":"CallExpression","start":638,"end":811,"callee":{"type":"MemberExpression","start":638,"end":646,"object":{"type":"Identifier","start":638,"end":642,"name":"keys"},"property":{"type":"Identifier","start":643,"end":646,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":647,"end":810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":647,"end":648,"name":"k"}],"body":{"type":"BlockStatement","start":652,"end":810,"body":[{"type":"VariableDeclaration","start":663,"end":690,"declarations":[{"type":"VariableDeclarator","start":669,"end":689,"id":{"type":"Identifier","start":669,"end":672,"name":"obs"},"init":{"type":"MemberExpression","start":675,"end":689,"object":{"type":"Identifier","start":675,"end":686,"name":"observables"},"property":{"type":"Identifier","start":687,"end":688,"name":"k"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":700,"end":803,"argument":{"type":"ConditionalExpression","start":707,"end":802,"test":{"type":"CallExpression","start":707,"end":725,"callee":{"type":"MemberExpression","start":707,"end":720,"object":{"type":"Identifier","start":707,"end":712,"name":"Array"},"property":{"type":"Identifier","start":713,"end":720,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":721,"end":724,"name":"obs"}],"optional":false},"consequent":{"type":"CallExpression","start":741,"end":771,"callee":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"MemberExpression","start":741,"end":747,"object":{"type":"Identifier","start":741,"end":744,"name":"obs"},"property":{"type":"Literal","start":745,"end":746,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":748,"end":752,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":753,"end":770,"callee":{"type":"Identifier","start":753,"end":762,"name":"startWith"},"arguments":[{"type":"MemberExpression","start":763,"end":769,"object":{"type":"Identifier","start":763,"end":766,"name":"obs"},"property":{"type":"Literal","start":767,"end":768,"value":1,"raw":"1"},"computed":true,"optional":false}],"optional":false}],"optional":false},"alternate":{"type":"CallExpression","start":787,"end":802,"callee":{"type":"MemberExpression","start":787,"end":795,"object":{"type":"Identifier","start":787,"end":790,"name":"obs"},"property":{"type":"Identifier","start":791,"end":795,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":796,"end":801,"callee":{"type":"Identifier","start":796,"end":799,"name":"nop"},"arguments":[],"optional":false}],"optional":false}}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":813,"end":817,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":818,"end":918,"callee":{"type":"Identifier","start":818,"end":821,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":822,"end":917,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":822,"end":823,"name":"b"}],"body":{"type":"CallExpression","start":827,"end":917,"callee":{"type":"MemberExpression","start":827,"end":835,"object":{"type":"Identifier","start":827,"end":828,"name":"b"},"property":{"type":"Identifier","start":829,"end":835,"name":"reduce"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":836,"end":912,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":837,"end":840,"name":"acc"},{"type":"Identifier","start":842,"end":845,"name":"val"},{"type":"Identifier","start":847,"end":848,"name":"i"}],"body":{"type":"CallExpression","start":854,"end":911,"callee":{"type":"MemberExpression","start":854,"end":867,"object":{"type":"Identifier","start":854,"end":860,"name":"Object"},"property":{"type":"Identifier","start":861,"end":867,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":868,"end":890,"callee":{"type":"MemberExpression","start":868,"end":881,"object":{"type":"Identifier","start":868,"end":874,"name":"Object"},"property":{"type":"Identifier","start":875,"end":881,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":882,"end":884,"properties":[]},{"type":"Identifier","start":886,"end":889,"name":"acc"}],"optional":false},{"type":"ObjectExpression","start":892,"end":910,"properties":[{"type":"Property","start":894,"end":908,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":895,"end":902,"object":{"type":"Identifier","start":895,"end":899,"name":"keys"},"property":{"type":"Identifier","start":900,"end":901,"name":"i"},"computed":true,"optional":false},"value":{"type":"Identifier","start":905,"end":908,"name":"val"},"kind":"init"}]}],"optional":false}},{"type":"ObjectExpression","start":914,"end":916,"properties":[]}],"optional":false}}],"optional":false}],"optional":false}}]}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","start":926,"end":4432},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/rxjs-ops/module.js.map","start":4434,"end":4564}]},"code":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => (Object.assign(Object.assign({}, acc), { [keys[i]]: val })), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/rxjs-ops/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","originalSourcemap":{"version":3,"file":"combine-latest-to-object.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/rxjs-ops/combine-latest-to-object.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,42],[36,0,0,48],[42,0,0,54],[43,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[12,0,1,11],[14,0,1,13],[23,0,1,22],[25,0,1,24],[28,0,1,27],[30,0,1,29],[36,0,1,35],[52,0,1,51],[53,0,1,52]],[[0,0,13,0],[6,0,13,6],[9,0,13,9],[12,0,13,12],[15,0,13,18],[17,0,13,20],[18,0,13,21],[21,0,13,24],[22,0,13,28],[26,0,13,32],[27,0,13,33],[28,0,13,34]],[[0,0,15,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[7,0,35,7],[13,0,35,13],[34,0,35,34],[37,0,35,37],[38,0,39,4],[49,0,39,20],[51,0,39,40],[53,0,39,42]],[[4,0,40,2],[10,0,40,8],[14,0,40,12],[17,0,40,15],[23,0,40,21],[24,0,40,22],[28,0,40,26],[29,0,40,27],[40,0,40,38],[41,0,40,39],[42,0,40,40]],[[4,0,42,2],[11,0,42,9],[24,0,42,22],[25,0,43,4],[29,0,43,8],[30,0,43,9],[33,0,43,12],[34,0,43,13],[35,0,43,14],[36,0,43,15],[38,0,43,17]],[[8,0,44,6],[14,0,44,12],[17,0,44,15],[20,0,44,18],[31,0,44,29],[32,0,44,30],[33,0,44,31],[34,0,44,32],[35,0,44,33]],[[8,0,46,6],[15,0,46,13],[20,0,46,18],[21,0,46,19],[28,0,46,26],[29,0,46,27],[32,0,46,30],[33,0,46,31]],[[12,0,47,8],[13,0,47,9],[14,0,47,10],[17,0,47,13],[18,0,47,14],[19,0,47,15],[20,0,47,16],[21,0,47,17],[25,0,47,21],[26,0,47,22],[35,0,47,31],[36,0,47,32],[39,0,47,35],[40,0,47,36],[41,0,47,37],[42,0,47,38],[43,0,47,39],[44,0,47,40]],[[12,0,48,8],[13,0,48,9],[14,0,48,10],[17,0,48,13],[18,0,48,14],[22,0,48,18],[23,0,48,20],[26,0,48,23],[28,0,48,25],[29,0,48,26],[30,0,48,27]],[[4,0,49,4],[5,0,49,5],[6,0,49,6],[7,0,50,3],[8,0,50,4],[12,0,50,8],[13,0,51,4],[16,0,51,7],[17,0,51,8],[18,0,51,9],[19,0,51,10],[21,0,51,12],[22,0,51,13],[23,0,51,14],[24,0,51,15],[30,0,51,21],[31,0,51,22],[32,0,51,23],[35,0,51,26],[37,0,51,28],[40,0,51,31],[42,0,51,33],[43,0,51,34],[45,0,51,36],[47,0,51,38],[48,0,51,39],[49,0,51,40],[51,0,51,42],[54,0,51,45],[57,0,51,48],[59,0,51,50],[60,0,51,51],[64,0,51,55],[65,0,51,56],[66,0,51,57],[67,0,51,58],[68,0,51,59],[70,0,51,61],[73,0,51,64],[75,0,51,66],[76,0,51,67],[78,0,51,69],[80,0,51,71],[81,0,51,72],[82,0,51,73],[83,0,52,3],[84,0,52,4]],[[0,0,53,0],[1,0,53,1],[2,0,53,2]]],"sourcesContent":["import { combineLatest, noop, Observable } from 'rxjs';\r\nimport {map, startWith, tap } from 'rxjs/operators';\r\n\r\nexport interface OperatorDict<X> {\r\n  [key: string]: Observable<X> | [Observable<X>, X];\r\n}\r\n\r\n/**\r\n * Extracts the type `T` of an `Observable<T>`\r\n */\r\nexport type ExtractObservableType<A> = A extends Observable<infer B> ? B : never;\r\n\r\n\r\nconst nop = <T>() => tap<T>(noop);\r\n\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = <\r\n  TIn extends OperatorDict<any>, TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K]> }\r\n  // TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K] extends Array<any> ? TIn[K][0] : TIn[K]> }\r\n\r\n  >(observables: TIn): Observable<TOut> => {\r\n  const keys = Object.keys(observables);\r\n\r\n  return combineLatest(\r\n    keys.map(k => {\r\n      const obs = observables[k];\r\n\r\n      return Array.isArray(obs)\r\n        ? obs[0].pipe(startWith(obs[1]))\r\n        : obs.pipe( nop());\r\n    }),\r\n  ).pipe(\r\n    map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {}))\r\n  );\r\n};\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,30],[36,0,0,36],[42,0,0,42],[43,0,0,43]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[12,0,1,12],[14,0,1,14],[23,0,1,23],[25,0,1,25],[28,0,1,28],[30,0,1,30],[36,0,1,36],[52,0,1,52],[53,0,1,53]],[[0,0,2,0],[6,0,2,6],[9,0,2,9],[12,0,2,12],[15,0,2,15],[17,0,2,17],[18,0,2,18],[21,0,2,21],[22,0,2,22],[26,0,2,26],[27,0,2,27],[28,0,2,28]],[[0,0,3,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,22,3]],[[0,0,23,0],[6,0,23,6],[7,0,23,7],[13,0,23,13],[34,0,23,34],[37,0,23,37],[38,0,23,38],[49,0,23,49],[51,0,23,51],[53,0,23,53]],[[4,0,24,4],[10,0,24,10],[14,0,24,14],[17,0,24,17],[23,0,24,23],[24,0,24,24],[28,0,24,28],[29,0,24,29],[40,0,24,40],[41,0,24,41],[42,0,24,42]],[[4,0,25,4],[11,0,25,11],[24,0,25,24],[25,0,25,25],[29,0,25,29],[30,0,25,30],[33,0,25,33],[34,0,25,34],[35,0,25,35],[36,0,25,36],[38,0,25,38]],[[8,0,26,8],[14,0,26,14],[17,0,26,17],[20,0,26,20],[31,0,26,31],[32,0,26,32],[33,0,26,33],[34,0,26,34],[35,0,26,35]],[[8,0,27,8],[15,0,27,15],[20,0,27,20],[21,0,27,21],[28,0,27,28],[29,0,27,29],[32,0,27,32],[33,0,27,33]],[[12,0,28,12],[13,0,28,13],[14,0,28,14],[17,0,28,17],[18,0,28,18],[19,0,28,19],[20,0,28,20],[21,0,28,21],[25,0,28,25],[26,0,28,26],[35,0,28,35],[36,0,28,36],[39,0,28,39],[40,0,28,40],[41,0,28,41],[42,0,28,42],[43,0,28,43],[44,0,28,44]],[[12,0,29,12],[13,0,29,13],[14,0,29,14],[17,0,29,17],[18,0,29,18],[22,0,29,22],[23,0,29,23],[26,0,29,26],[28,0,29,28],[29,0,29,29],[30,0,29,30]],[[4,0,30,4],[5,0,30,5],[6,0,30,6],[7,0,30,7],[8,0,30,8],[12,0,30,12],[13,0,30,13],[16,0,30,16],[17,0,30,17],[18,0,30,18],[19,0,30,19],[21,0,30,21],[22,0,30,22],[23,0,30,23],[24,0,30,24],[30,0,30,30],[31,0,30,31],[32,0,30,32],[35,0,30,35],[37,0,30,37],[40,0,30,40],[42,0,30,42],[43,0,30,43],[45,0,30,45],[47,0,30,47],[48,0,30,48],[81,0,30,54],[84,0,30,57],[89,0,30,59],[90,0,30,60],[94,0,30,64],[95,0,30,65],[96,0,30,66],[97,0,30,67],[98,0,30,68],[100,0,30,70],[103,0,30,73],[107,0,30,76],[109,0,30,78],[111,0,30,80],[112,0,30,81],[113,0,30,82],[114,0,30,83],[115,0,30,84]],[[0,0,31,0],[1,0,31,1],[2,0,31,2]],[[0,0,32,0],[3506,0,32,3506]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5963,"body":[{"type":"ImportDeclaration","start":0,"end":28,"specifiers":[{"type":"ImportSpecifier","start":9,"end":13,"imported":{"type":"Identifier","start":9,"end":13,"name":"from"},"local":{"type":"Identifier","start":9,"end":13,"name":"from"}}],"source":{"type":"Literal","start":21,"end":27,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":30,"end":68,"specifiers":[{"type":"ImportSpecifier","start":39,"end":43,"imported":{"type":"Identifier","start":39,"end":43,"name":"take"},"local":{"type":"Identifier","start":39,"end":43,"name":"take"}}],"source":{"type":"Literal","start":51,"end":67,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":70,"end":176,"specifiers":[{"type":"ImportSpecifier","start":79,"end":85,"imported":{"type":"Identifier","start":79,"end":85,"name":"addDoc"},"local":{"type":"Identifier","start":79,"end":85,"name":"addDoc"}},{"type":"ImportSpecifier","start":87,"end":96,"imported":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"},"local":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"}},{"type":"ImportSpecifier","start":98,"end":104,"imported":{"type":"Identifier","start":98,"end":104,"name":"getDoc"},"local":{"type":"Identifier","start":98,"end":104,"name":"getDoc"}},{"type":"ImportSpecifier","start":106,"end":113,"imported":{"type":"Identifier","start":106,"end":113,"name":"getDocs"},"local":{"type":"Identifier","start":106,"end":113,"name":"getDocs"}},{"type":"ImportSpecifier","start":115,"end":127,"imported":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"},"local":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"}},{"type":"ImportSpecifier","start":129,"end":135,"imported":{"type":"Identifier","start":129,"end":135,"name":"setDoc"},"local":{"type":"Identifier","start":129,"end":135,"name":"setDoc"}},{"type":"ImportSpecifier","start":137,"end":146,"imported":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"},"local":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"}}],"source":{"type":"Literal","start":155,"end":175,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":178,"end":1156,"declaration":{"type":"ClassDeclaration","start":185,"end":1156,"id":{"type":"Identifier","start":191,"end":207,"name":"FirestoreWrapper"},"superClass":null,"body":{"type":"ClassBody","start":208,"end":1156,"body":[{"type":"MethodDefinition","start":334,"end":408,"static":false,"computed":false,"key":{"type":"Identifier","start":334,"end":345,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":345,"end":408,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":346,"end":357,"name":"firebaseApp"}],"body":{"type":"BlockStatement","start":359,"end":408,"body":[{"type":"ExpressionStatement","start":370,"end":401,"expression":{"type":"AssignmentExpression","start":370,"end":400,"operator":"=","left":{"type":"MemberExpression","start":370,"end":386,"object":{"type":"ThisExpression","start":370,"end":374},"property":{"type":"Identifier","start":375,"end":386,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":389,"end":400,"name":"firebaseApp"}}}]}}},{"type":"MethodDefinition","start":414,"end":486,"static":false,"computed":false,"key":{"type":"Identifier","start":418,"end":427,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":427,"end":486,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":430,"end":486,"body":[{"type":"ReturnStatement","start":441,"end":479,"argument":{"type":"CallExpression","start":448,"end":478,"callee":{"type":"Identifier","start":448,"end":460,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":461,"end":477,"object":{"type":"ThisExpression","start":461,"end":465},"property":{"type":"Identifier","start":466,"end":477,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":504,"end":562,"static":false,"computed":false,"key":{"type":"Identifier","start":504,"end":507,"name":"doc"},"kind":"method","value":{"type":"FunctionExpression","start":507,"end":562,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":508,"end":514,"name":"docRef"}],"body":{"type":"BlockStatement","start":516,"end":562,"body":[{"type":"ReturnStatement","start":527,"end":555,"argument":{"type":"CallExpression","start":534,"end":554,"callee":{"type":"Identifier","start":534,"end":538,"name":"from"},"arguments":[{"type":"CallExpression","start":539,"end":553,"callee":{"type":"Identifier","start":539,"end":545,"name":"getDoc"},"arguments":[{"type":"Identifier","start":546,"end":552,"name":"docRef"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":568,"end":666,"static":false,"computed":false,"key":{"type":"Identifier","start":568,"end":571,"name":"add"},"kind":"method","value":{"type":"FunctionExpression","start":571,"end":666,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":572,"end":585,"name":"collectionRef"},{"type":"Identifier","start":587,"end":591,"name":"data"}],"body":{"type":"BlockStatement","start":593,"end":666,"body":[{"type":"ReturnStatement","start":604,"end":659,"argument":{"type":"CallExpression","start":611,"end":658,"callee":{"type":"MemberExpression","start":611,"end":649,"object":{"type":"CallExpression","start":611,"end":644,"callee":{"type":"Identifier","start":611,"end":615,"name":"from"},"arguments":[{"type":"CallExpression","start":616,"end":643,"callee":{"type":"Identifier","start":616,"end":622,"name":"addDoc"},"arguments":[{"type":"Identifier","start":623,"end":636,"name":"collectionRef"},{"type":"Identifier","start":638,"end":642,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":645,"end":649,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":650,"end":657,"callee":{"type":"Identifier","start":650,"end":654,"name":"take"},"arguments":[{"type":"Literal","start":655,"end":656,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":672,"end":902,"static":false,"computed":false,"key":{"type":"Identifier","start":672,"end":675,"name":"set"},"kind":"method","value":{"type":"FunctionExpression","start":675,"end":902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":676,"end":682,"name":"docRef"},{"type":"Identifier","start":684,"end":688,"name":"data"},{"type":"Identifier","start":690,"end":697,"name":"options"}],"body":{"type":"BlockStatement","start":699,"end":902,"body":[{"type":"IfStatement","start":710,"end":895,"test":{"type":"Identifier","start":714,"end":721,"name":"options"},"consequent":{"type":"BlockStatement","start":723,"end":806,"body":[{"type":"ReturnStatement","start":738,"end":795,"argument":{"type":"CallExpression","start":745,"end":794,"callee":{"type":"MemberExpression","start":745,"end":785,"object":{"type":"CallExpression","start":745,"end":780,"callee":{"type":"Identifier","start":745,"end":749,"name":"from"},"arguments":[{"type":"CallExpression","start":750,"end":779,"callee":{"type":"Identifier","start":750,"end":756,"name":"setDoc"},"arguments":[{"type":"Identifier","start":757,"end":763,"name":"docRef"},{"type":"Identifier","start":765,"end":769,"name":"data"},{"type":"Identifier","start":771,"end":778,"name":"options"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":781,"end":785,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":786,"end":793,"callee":{"type":"Identifier","start":786,"end":790,"name":"take"},"arguments":[{"type":"Literal","start":791,"end":792,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":821,"end":895,"body":[{"type":"ReturnStatement","start":836,"end":884,"argument":{"type":"CallExpression","start":843,"end":883,"callee":{"type":"MemberExpression","start":843,"end":874,"object":{"type":"CallExpression","start":843,"end":869,"callee":{"type":"Identifier","start":843,"end":847,"name":"from"},"arguments":[{"type":"CallExpression","start":848,"end":868,"callee":{"type":"Identifier","start":848,"end":854,"name":"setDoc"},"arguments":[{"type":"Identifier","start":855,"end":861,"name":"docRef"},{"type":"Identifier","start":863,"end":867,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":870,"end":874,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":875,"end":882,"callee":{"type":"Identifier","start":875,"end":879,"name":"take"},"arguments":[{"type":"Literal","start":880,"end":881,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":908,"end":986,"static":false,"computed":false,"key":{"type":"Identifier","start":908,"end":914,"name":"delete"},"kind":"method","value":{"type":"FunctionExpression","start":914,"end":986,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":915,"end":921,"name":"docRef"}],"body":{"type":"BlockStatement","start":923,"end":986,"body":[{"type":"ReturnStatement","start":934,"end":979,"argument":{"type":"CallExpression","start":941,"end":978,"callee":{"type":"MemberExpression","start":941,"end":969,"object":{"type":"CallExpression","start":941,"end":964,"callee":{"type":"Identifier","start":941,"end":945,"name":"from"},"arguments":[{"type":"CallExpression","start":946,"end":963,"callee":{"type":"Identifier","start":946,"end":955,"name":"deleteDoc"},"arguments":[{"type":"Identifier","start":956,"end":962,"name":"docRef"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":965,"end":969,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":970,"end":977,"callee":{"type":"Identifier","start":970,"end":974,"name":"take"},"arguments":[{"type":"Literal","start":975,"end":976,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":992,"end":1091,"static":false,"computed":false,"key":{"type":"Identifier","start":992,"end":998,"name":"update"},"kind":"method","value":{"type":"FunctionExpression","start":998,"end":1091,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":999,"end":1005,"name":"docRef"},{"type":"Identifier","start":1007,"end":1011,"name":"data"},{"type":"Identifier","start":1013,"end":1020,"name":"options"}],"body":{"type":"BlockStatement","start":1022,"end":1091,"body":[{"type":"ReturnStatement","start":1033,"end":1084,"argument":{"type":"CallExpression","start":1040,"end":1083,"callee":{"type":"MemberExpression","start":1040,"end":1074,"object":{"type":"CallExpression","start":1040,"end":1069,"callee":{"type":"Identifier","start":1040,"end":1044,"name":"from"},"arguments":[{"type":"CallExpression","start":1045,"end":1068,"callee":{"type":"Identifier","start":1045,"end":1054,"name":"updateDoc"},"arguments":[{"type":"Identifier","start":1055,"end":1061,"name":"docRef"},{"type":"Identifier","start":1063,"end":1067,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1070,"end":1074,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1075,"end":1082,"callee":{"type":"Identifier","start":1075,"end":1079,"name":"take"},"arguments":[{"type":"Literal","start":1080,"end":1081,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1097,"end":1153,"static":false,"computed":false,"key":{"type":"Identifier","start":1097,"end":1107,"name":"collection"},"kind":"method","value":{"type":"FunctionExpression","start":1107,"end":1153,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1108,"end":1109,"name":"q"}],"body":{"type":"BlockStatement","start":1111,"end":1153,"body":[{"type":"ReturnStatement","start":1122,"end":1146,"argument":{"type":"CallExpression","start":1129,"end":1145,"callee":{"type":"Identifier","start":1129,"end":1133,"name":"from"},"arguments":[{"type":"CallExpression","start":1134,"end":1144,"callee":{"type":"Identifier","start":1134,"end":1141,"name":"getDocs"},"arguments":[{"type":"Identifier","start":1142,"end":1143,"name":"q"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","start":1158,"end":5840},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":5842,"end":5963}]},"code":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-wrapper.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-wrapper.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[13,0,0,12],[15,0,0,25],[21,0,0,31],[27,0,0,37],[28,0,0,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[13,0,2,12],[15,0,2,13],[21,0,2,19],[37,0,2,35],[38,0,2,36]],[[0,0,4,0],[7,0,4,7],[9,0,5,2],[15,0,5,8],[17,0,7,2],[26,0,7,11],[28,0,12,2],[34,0,12,8],[36,0,13,2],[43,0,13,9],[45,0,14,2],[57,0,14,14],[59,0,17,2],[65,0,17,8],[67,0,20,2],[76,0,20,11],[79,0,21,1],[85,0,21,7],[105,0,21,27],[106,0,21,28]],[[0,0,24,0],[6,0,24,6],[13,0,24,13],[29,0,24,29]],[[4,0,25,2]],[],[],[[7,0,28,5]],[[4,0,30,2],[16,0,30,21],[27,0,30,45]],[[8,0,30,21],[24,0,30,32],[27,0,30,21],[38,0,30,32],[39,0,30,45]],[[4,0,31,2],[5,0,31,3]],[[4,0,33,2],[8,0,33,6],[17,0,33,15]],[[8,0,34,4],[15,0,34,11],[27,0,34,23],[28,0,34,24],[32,0,34,28],[33,0,34,29],[44,0,34,40],[45,0,34,41],[46,0,34,42]],[[4,0,35,2],[5,0,35,3]],[[4,0,37,2],[10,0,37,8]],[[4,0,38,9],[7,0,38,12],[8,0,38,31],[14,0,38,59]],[[8,0,39,4],[15,0,39,11],[19,0,39,15],[20,0,39,16],[26,0,39,22],[27,0,39,23],[33,0,39,29],[34,0,39,30],[35,0,39,31],[36,0,39,32]],[[4,0,40,2],[5,0,40,3]],[[4,0,42,9],[7,0,42,12],[8,0,42,16],[21,0,42,53],[23,0,42,55],[27,0,42,62]],[[8,0,43,4],[15,0,43,11],[19,0,43,15],[20,0,43,16],[26,0,43,22],[27,0,43,23],[40,0,43,36],[42,0,43,38],[46,0,43,42],[47,0,43,43],[48,0,43,44],[49,0,43,45],[53,0,43,49],[54,0,44,6],[58,0,44,10],[59,0,44,11],[60,0,44,12],[61,0,44,13],[62,0,45,5],[63,0,45,6]],[[4,0,46,2],[5,0,46,3]],[[4,0,48,9],[7,0,48,12],[8,0,48,16],[14,0,48,44],[16,0,48,46],[20,0,48,53],[22,0,48,55],[29,0,48,75]],[[8,0,50,4],[12,0,50,8],[19,0,50,15],[21,0,50,17]],[[12,0,51,6],[19,0,51,13],[23,0,51,17],[24,0,51,18],[30,0,51,24],[31,0,51,25],[37,0,51,31],[39,0,51,33],[43,0,51,37],[45,0,51,39],[52,0,51,46],[53,0,51,47],[54,0,51,48],[55,0,51,49],[59,0,51,53],[60,0,52,8],[64,0,52,12],[65,0,52,13],[66,0,52,14],[67,0,52,15],[68,0,53,7],[69,0,53,8]],[[9,0,54,5]],[[13,0,54,11]],[[12,0,55,6],[19,0,55,13],[23,0,55,17],[24,0,55,18],[30,0,55,24],[31,0,55,25],[37,0,55,31],[39,0,55,33],[43,0,55,37],[44,0,55,38],[45,0,55,39],[46,0,55,40],[50,0,55,44],[51,0,56,8],[55,0,56,12],[56,0,56,13],[57,0,56,14],[58,0,56,15],[59,0,57,7],[60,0,57,8]],[[9,0,58,5]],[[4,0,59,2],[5,0,59,3]],[[4,0,61,2],[10,0,61,8],[11,0,61,12],[17,0,61,40]],[[8,0,62,4],[15,0,62,11],[19,0,62,15],[20,0,62,16],[29,0,62,25],[30,0,62,26],[36,0,62,32],[37,0,62,33],[38,0,62,34],[39,0,62,35],[43,0,62,39],[44,0,63,6],[48,0,63,10],[49,0,63,11],[50,0,63,12],[51,0,63,13],[52,0,64,5],[53,0,64,6]],[[4,0,65,2],[5,0,65,3]],[[4,0,67,2],[10,0,67,8],[11,0,67,12],[17,0,67,40],[19,0,67,42],[23,0,67,70],[25,0,67,72],[32,0,67,92]],[[8,0,68,4],[15,0,68,11],[19,0,68,15],[20,0,68,16],[29,0,68,25],[30,0,68,38],[36,0,68,44],[38,0,68,46],[42,0,68,50],[43,0,68,51],[44,0,68,52],[45,0,68,53],[49,0,68,57],[50,0,69,6],[54,0,69,10],[55,0,69,11],[56,0,69,12],[57,0,69,13],[58,0,70,5],[59,0,70,6]],[[4,0,71,2],[5,0,71,3]],[[4,0,73,9],[14,0,73,19],[15,0,73,23],[16,0,73,34]],[[8,0,74,4],[15,0,74,11],[19,0,74,15],[20,0,74,16],[27,0,74,23],[28,0,74,24],[29,0,74,25],[30,0,74,26],[31,0,74,27],[32,0,74,28]],[[4,0,75,2],[5,0,75,3]],[[1,0,77,1]]],"sourcesContent":["import {from, Observable} from 'rxjs';\r\nimport {BaseFirestoreWrapper} from './interfaces';\r\nimport {take} from 'rxjs/operators';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {\r\n  addDoc,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  Query,\r\n  QuerySnapshot,\r\n  setDoc,\r\n  SetOptions,\r\n  UpdateData,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\n\r\n\r\nexport class FirestoreWrapper implements BaseFirestoreWrapper {\r\n  /**\r\n   * Uses firebase/firestore directly\r\n   * Simply makes the returned Promises into Observables\r\n   */\r\n\r\n  constructor(public firebaseApp: FirebaseApp) {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return getFirestore(this.firebaseApp);\r\n  }\r\n\r\n  // doc\r\n  public doc<T = DocumentData>(docRef: DocumentReference<T>): Observable<DocumentSnapshot<T>> {\r\n    return from(getDoc(docRef));\r\n  }\r\n\r\n  public add<T>(collectionRef: CollectionReference<T>, data: T): Observable<DocumentReference<T>> {\r\n    return from(addDoc(collectionRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public set<A>(docRef: DocumentReference<A>, data: A, options?: SetOptions): Observable<void> {\r\n\r\n    if (options) {\r\n      return from(setDoc(docRef, data, options)).pipe(\r\n        take(1)\r\n      );\r\n    } else {\r\n      return from(setDoc(docRef, data)).pipe(\r\n        take(1)\r\n      );\r\n    }\r\n  }\r\n\r\n  delete<T>(docRef: DocumentReference<T>): Observable<void> {\r\n    return from(deleteDoc(docRef)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  update<T>(docRef: DocumentReference<T>, data: UpdateData<Partial<T>>, options?: SetOptions): Observable<void> {\r\n    return from(updateDoc<Partial<T>>(docRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public collection<T>(q: Query<T>): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs(q));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[13,0,0,13],[15,0,0,15],[21,0,0,21],[27,0,0,27],[28,0,0,28]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[13,0,1,13],[15,0,1,15],[21,0,1,21],[37,0,1,37],[38,0,1,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[15,0,2,15],[17,0,2,17],[26,0,2,26],[28,0,2,28],[34,0,2,34],[36,0,2,36],[43,0,2,43],[45,0,2,45],[57,0,2,57],[59,0,2,59],[65,0,2,65],[67,0,2,67],[76,0,2,76],[79,0,2,79],[85,0,2,85],[105,0,2,105],[106,0,2,106]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[29,0,3,29]],[[4,0,4,4]],[],[],[[7,0,7,7]],[[4,0,8,4],[16,0,8,16],[27,0,8,27]],[[8,0,9,8],[12,0,9,12],[13,0,9,13],[24,0,9,24],[27,0,9,27],[38,0,9,38],[39,0,9,39]],[[4,0,10,4],[5,0,10,5]],[[4,0,11,4],[8,0,11,8],[17,0,11,17]],[[8,0,12,8],[15,0,12,15],[27,0,12,27],[28,0,12,28],[32,0,12,32],[33,0,12,33],[44,0,12,44],[45,0,12,45],[46,0,12,46]],[[4,0,13,4],[5,0,13,5]],[[4,0,14,4],[10,0,14,10]],[[4,0,15,4],[7,0,15,7],[8,0,15,8],[14,0,15,14]],[[8,0,16,8],[15,0,16,15],[19,0,16,19],[20,0,16,20],[26,0,16,26],[27,0,16,27],[33,0,16,33],[34,0,16,34],[35,0,16,35],[36,0,16,36]],[[4,0,17,4],[5,0,17,5]],[[4,0,18,4],[7,0,18,7],[8,0,18,8],[21,0,18,21],[23,0,18,23],[27,0,18,27]],[[8,0,19,8],[15,0,19,15],[19,0,19,19],[20,0,19,20],[26,0,19,26],[27,0,19,27],[40,0,19,40],[42,0,19,42],[46,0,19,46],[47,0,19,47],[48,0,19,48],[49,0,19,49],[53,0,19,53],[54,0,19,54],[58,0,19,58],[59,0,19,59],[60,0,19,60],[61,0,19,61],[62,0,19,62],[63,0,19,63]],[[4,0,20,4],[5,0,20,5]],[[4,0,21,4],[7,0,21,7],[8,0,21,8],[14,0,21,14],[16,0,21,16],[20,0,21,20],[22,0,21,22],[29,0,21,29]],[[8,0,22,8],[12,0,22,12],[19,0,22,19],[21,0,22,21]],[[12,0,23,12],[19,0,23,19],[23,0,23,23],[24,0,23,24],[30,0,23,30],[31,0,23,31],[37,0,23,37],[39,0,23,39],[43,0,23,43],[45,0,23,45],[52,0,23,52],[53,0,23,53],[54,0,23,54],[55,0,23,55],[59,0,23,59],[60,0,23,60],[64,0,23,64],[65,0,23,65],[66,0,23,66],[67,0,23,67],[68,0,23,68],[69,0,23,69]],[[9,0,24,9]],[[13,0,25,13]],[[12,0,26,12],[19,0,26,19],[23,0,26,23],[24,0,26,24],[30,0,26,30],[31,0,26,31],[37,0,26,37],[39,0,26,39],[43,0,26,43],[44,0,26,44],[45,0,26,45],[46,0,26,46],[50,0,26,50],[51,0,26,51],[55,0,26,55],[56,0,26,56],[57,0,26,57],[58,0,26,58],[59,0,26,59],[60,0,26,60]],[[9,0,27,9]],[[4,0,28,4],[5,0,28,5]],[[4,0,29,4],[10,0,29,10],[11,0,29,11],[17,0,29,17]],[[8,0,30,8],[15,0,30,15],[19,0,30,19],[20,0,30,20],[29,0,30,29],[30,0,30,30],[36,0,30,36],[37,0,30,37],[38,0,30,38],[39,0,30,39],[43,0,30,43],[44,0,30,44],[48,0,30,48],[49,0,30,49],[50,0,30,50],[51,0,30,51],[52,0,30,52],[53,0,30,53]],[[4,0,31,4],[5,0,31,5]],[[4,0,32,4],[10,0,32,10],[11,0,32,11],[17,0,32,17],[19,0,32,19],[23,0,32,23],[25,0,32,25],[32,0,32,32]],[[8,0,33,8],[15,0,33,15],[19,0,33,19],[20,0,33,20],[29,0,33,29],[30,0,33,30],[36,0,33,36],[38,0,33,38],[42,0,33,42],[43,0,33,43],[44,0,33,44],[45,0,33,45],[49,0,33,49],[50,0,33,50],[54,0,33,54],[55,0,33,55],[56,0,33,56],[57,0,33,57],[58,0,33,58],[59,0,33,59]],[[4,0,34,4],[5,0,34,5]],[[4,0,35,4],[14,0,35,14],[15,0,35,15],[16,0,35,16]],[[8,0,36,8],[15,0,36,15],[19,0,36,19],[20,0,36,20],[27,0,36,27],[28,0,36,28],[29,0,36,29],[30,0,36,30],[31,0,36,31],[32,0,36,32]],[[4,0,37,4],[5,0,37,5]],[[1,0,38,1]],[[0,0,39,0],[4682,0,39,4682]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1976,"body":[{"type":"ImportDeclaration","start":0,"end":55,"specifiers":[{"type":"ImportSpecifier","start":9,"end":25,"imported":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"},"local":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"}}],"source":{"type":"Literal","start":33,"end":54,"value":"./firestore-wrapper","raw":"'./firestore-wrapper'"}},{"type":"ImportDeclaration","start":57,"end":114,"specifiers":[{"type":"ImportSpecifier","start":66,"end":83,"imported":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"},"local":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"}}],"source":{"type":"Literal","start":91,"end":113,"value":"./firestore-extended","raw":"'./firestore-extended'"}},{"type":"ExportNamedDeclaration","start":286,"end":469,"declaration":{"type":"ClassDeclaration","start":293,"end":469,"id":{"type":"Identifier","start":299,"end":311,"name":"FirestoreExt"},"superClass":{"type":"Identifier","start":320,"end":337,"name":"FirestoreExtended"},"body":{"type":"ClassBody","start":338,"end":469,"body":[{"type":"MethodDefinition","start":345,"end":466,"static":false,"computed":false,"key":{"type":"Identifier","start":345,"end":356,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":356,"end":466,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":357,"end":368,"name":"firebaseApp"},{"type":"AssignmentPattern","start":370,"end":391,"left":{"type":"Identifier","start":370,"end":382,"name":"defaultDocId"},"right":{"type":"Literal","start":385,"end":391,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":393,"end":466,"body":[{"type":"ExpressionStatement","start":404,"end":459,"expression":{"type":"CallExpression","start":404,"end":458,"callee":{"type":"Super","start":404,"end":409},"arguments":[{"type":"NewExpression","start":410,"end":443,"callee":{"type":"Identifier","start":414,"end":430,"name":"FirestoreWrapper"},"arguments":[{"type":"Identifier","start":431,"end":442,"name":"firebaseApp"}]},{"type":"Identifier","start":445,"end":457,"name":"defaultDocId"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","start":471,"end":1853},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":1855,"end":1976}]},"code":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"firestore-extended.class.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.class.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,8],[25,0,1,24],[27,0,1,25],[33,0,1,31],[54,0,1,52],[55,0,1,53]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,26],[34,0,2,32],[56,0,2,54],[57,0,2,55]],[[0,0,4,0]],[],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[25,0,8,26],[34,0,8,34],[51,0,8,51]],[[4,0,9,2],[16,0,9,14],[27,0,9,38],[29,0,9,40],[44,0,9,63],[50,0,9,69]],[[8,0,10,4],[13,0,10,9],[14,0,10,10],[18,0,10,14],[34,0,10,30],[35,0,10,31],[46,0,10,42],[47,0,10,43],[49,0,10,45],[61,0,10,57],[62,0,10,58],[63,0,10,59]],[[4,0,11,2],[5,0,11,3]],[[1,0,12,1]]],"sourcesContent":["import {FirebaseApp} from 'firebase/app';\r\nimport {FirestoreWrapper} from './firestore-wrapper';\r\nimport {FirestoreExtended} from './firestore-extended';\r\n\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n  constructor(firebaseApp: FirebaseApp, defaultDocId: string = 'data') {\r\n    super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n  }\r\n}\r\n"]},"resolvedIds":{"./firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[25,0,0,25],[27,0,0,27],[33,0,0,33],[54,0,0,54],[55,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[26,0,1,26],[28,0,1,28],[34,0,1,34],[56,0,1,56],[57,0,1,57]],[[0,0,2,0]],[],[],[[3,0,5,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[25,0,6,26],[34,0,6,34],[51,0,6,51]],[[4,0,7,4],[16,0,7,16],[27,0,7,27],[29,0,7,29],[41,0,7,41],[44,0,7,44],[50,0,7,50]],[[8,0,8,8],[13,0,8,13],[14,0,8,14],[18,0,8,18],[34,0,8,34],[35,0,8,35],[46,0,8,46],[47,0,8,47],[49,0,8,49],[61,0,8,61],[62,0,8,62],[63,0,8,63]],[[4,0,9,4],[5,0,9,5]],[[1,0,10,1]],[[0,0,11,0],[1382,0,11,1382]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2081,"body":[{"type":"ExportNamedDeclaration","start":96,"end":128,"declaration":{"type":"ClassDeclaration","start":103,"end":128,"id":{"type":"Identifier","start":109,"end":123,"name":"FirebaseConfig"},"superClass":null,"body":{"type":"ClassBody","start":124,"end":128,"body":[]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":218,"end":330,"declaration":{"type":"VariableDeclaration","start":225,"end":330,"declarations":[{"type":"VariableDeclarator","start":231,"end":329,"id":{"type":"Identifier","start":231,"end":253,"name":"FIRESTORE_USE_EMULATOR"},"init":{"type":"ObjectExpression","start":256,"end":329,"properties":[{"type":"Property","start":291,"end":308,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":291,"end":295,"name":"host"},"value":{"type":"Literal","start":297,"end":308,"value":"localhost","raw":"'localhost'"},"kind":"init"},{"type":"Property","start":315,"end":325,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":315,"end":319,"name":"port"},"value":{"type":"Literal","start":321,"end":325,"value":8080,"raw":"8080"},"kind":"init"}]}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","start":464,"end":1954},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":1956,"end":2081}]},"code":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"originalCode":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/config.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[27,0,3,27]],[[1,0,5,1]],[[0,0,13,0],[86,0,13,86]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[35,0,15,35],[38,0,15,63]],[[4,0,16,2],[26,0,16,24]],[[4,0,17,2],[8,0,17,6],[10,0,17,8],[21,0,17,19]],[[4,0,18,2],[8,0,18,6],[10,0,18,8],[14,0,18,12]],[[1,0,19,1],[2,0,19,2]],[[0,0,22,0],[43,0,22,43]],[[0,0,23,0],[26,0,23,26]],[[0,0,24,0],[26,0,24,26]],[[0,0,25,0],[23,0,25,23]],[[0,0,26,0],[4,0,26,4]]],"sourcesContent":["// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\n\r\nexport class FirebaseConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FirestoreEmulatorConfig {\r\n  // useEmulator: boolean;\r\n  host: string;\r\n  port: number;\r\n}\r\n\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\n\r\nexport const FIRESTORE_USE_EMULATOR: FirestoreEmulatorConfig = {\r\n  // useEmulator: false,\r\n  host: 'localhost',\r\n  port: 8080,\r\n};\r\n\r\n\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,2,0],[6,0,2,6],[13,0,2,13],[27,0,2,27]],[[1,0,3,1]],[[0,0,4,0],[86,0,4,86]],[[0,0,5,0],[6,0,5,6],[7,0,5,7],[13,0,5,13],[35,0,5,35],[38,0,5,38]],[[4,0,6,4],[26,0,6,26]],[[4,0,7,4],[8,0,7,8],[10,0,7,10],[21,0,7,21]],[[4,0,8,4],[8,0,8,8],[10,0,8,10],[14,0,8,14]],[[1,0,9,1],[2,0,9,2]],[[0,0,10,0],[43,0,10,43]],[[0,0,11,0],[26,0,11,26]],[[0,0,12,0],[26,0,12,26]],[[0,0,13,0],[23,0,13,23]],[[0,0,14,0],[4,0,14,4]],[[0,0,15,0],[1490,0,15,1490]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5250,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}},{"type":"ImportSpecifier","start":19,"end":27,"imported":{"type":"Identifier","start":19,"end":27,"name":"Optional"},"local":{"type":"Identifier","start":19,"end":27,"name":"Optional"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"},"local":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":110,"specifiers":[{"type":"ImportSpecifier","start":72,"end":84,"imported":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"},"local":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"}}],"source":{"type":"Literal","start":92,"end":109,"value":"@angular/common","raw":"'@angular/common'"}},{"type":"ImportDeclaration","start":112,"end":154,"specifiers":[{"type":"ImportSpecifier","start":121,"end":135,"imported":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"},"local":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"}}],"source":{"type":"Literal","start":143,"end":153,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":156,"end":192,"specifiers":[{"type":"ImportNamespaceSpecifier","start":163,"end":170,"local":{"type":"Identifier","start":168,"end":170,"name":"i0"}}],"source":{"type":"Literal","start":176,"end":191,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":194,"end":1127,"declaration":{"type":"ClassDeclaration","start":201,"end":1127,"id":{"type":"Identifier","start":207,"end":224,"name":"NgxFirebaseModule"},"superClass":null,"body":{"type":"ClassBody","start":225,"end":1127,"body":[{"type":"MethodDefinition","start":726,"end":911,"static":false,"computed":false,"key":{"type":"Identifier","start":726,"end":737,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":737,"end":911,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":738,"end":750,"name":"parentModule"}],"body":{"type":"BlockStatement","start":752,"end":911,"body":[{"type":"IfStatement","start":763,"end":904,"test":{"type":"Identifier","start":767,"end":779,"name":"parentModule"},"consequent":{"type":"BlockStatement","start":781,"end":904,"body":[{"type":"ThrowStatement","start":796,"end":893,"argument":{"type":"NewExpression","start":802,"end":892,"callee":{"type":"Identifier","start":806,"end":811,"name":"Error"},"arguments":[{"type":"Literal","start":812,"end":891,"value":"NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only","raw":"'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":917,"end":1124,"static":true,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"forRoot"},"kind":"method","value":{"type":"FunctionExpression","start":931,"end":1124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":932,"end":938,"name":"config"}],"body":{"type":"BlockStatement","start":940,"end":1124,"body":[{"type":"ReturnStatement","start":951,"end":1117,"argument":{"type":"ObjectExpression","start":958,"end":1116,"properties":[{"type":"Property","start":973,"end":1000,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":973,"end":981,"name":"ngModule"},"value":{"type":"Identifier","start":983,"end":1000,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1015,"end":1105,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1024,"name":"providers"},"value":{"type":"ArrayExpression","start":1026,"end":1105,"elements":[{"type":"ObjectExpression","start":1045,"end":1090,"properties":[{"type":"Property","start":1047,"end":1070,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"provide"},"value":{"type":"Identifier","start":1056,"end":1070,"name":"FirebaseConfig"},"kind":"init"},{"type":"Property","start":1072,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1072,"end":1080,"name":"useValue"},"value":{"type":"Identifier","start":1082,"end":1088,"name":"config"},"kind":"init"}]}]},"kind":"init"}]}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1129,"end":1367,"expression":{"type":"AssignmentExpression","start":1129,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1129,"end":1151,"object":{"type":"Identifier","start":1129,"end":1146,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1147,"end":1151,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1154,"end":1366,"callee":{"type":"MemberExpression","start":1154,"end":1175,"object":{"type":"Identifier","start":1154,"end":1156,"name":"i0"},"property":{"type":"Identifier","start":1157,"end":1175,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1176,"end":1365,"properties":[{"type":"Property","start":1178,"end":1198,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1178,"end":1188,"name":"minVersion"},"value":{"type":"Literal","start":1190,"end":1198,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1200,"end":1217,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1200,"end":1207,"name":"version"},"value":{"type":"Literal","start":1209,"end":1217,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1219,"end":1231,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1219,"end":1227,"name":"ngImport"},"value":{"type":"Identifier","start":1229,"end":1231,"name":"i0"},"kind":"init"},{"type":"Property","start":1233,"end":1256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1233,"end":1237,"name":"type"},"value":{"type":"Identifier","start":1239,"end":1256,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1258,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1258,"end":1262,"name":"deps"},"value":{"type":"ArrayExpression","start":1264,"end":1326,"elements":[{"type":"ObjectExpression","start":1265,"end":1325,"properties":[{"type":"Property","start":1267,"end":1291,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1267,"end":1272,"name":"token"},"value":{"type":"Identifier","start":1274,"end":1291,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1293,"end":1307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1301,"name":"optional"},"value":{"type":"Literal","start":1303,"end":1307,"value":true,"raw":"true"},"kind":"init"},{"type":"Property","start":1309,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1309,"end":1317,"name":"skipSelf"},"value":{"type":"Literal","start":1319,"end":1323,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1328,"end":1363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1328,"end":1334,"name":"target"},"value":{"type":"MemberExpression","start":1336,"end":1363,"object":{"type":"MemberExpression","start":1336,"end":1354,"object":{"type":"Identifier","start":1336,"end":1338,"name":"i0"},"property":{"type":"Identifier","start":1339,"end":1354,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1355,"end":1363,"name":"NgModule"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1369,"end":1526,"expression":{"type":"AssignmentExpression","start":1369,"end":1525,"operator":"=","left":{"type":"MemberExpression","start":1369,"end":1391,"object":{"type":"Identifier","start":1369,"end":1386,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1387,"end":1391,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1416,"object":{"type":"Identifier","start":1394,"end":1396,"name":"i0"},"property":{"type":"Identifier","start":1397,"end":1416,"name":"ɵɵngDeclareNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1417,"end":1524,"properties":[{"type":"Property","start":1419,"end":1439,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1419,"end":1429,"name":"minVersion"},"value":{"type":"Literal","start":1431,"end":1439,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1441,"end":1458,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1441,"end":1448,"name":"version"},"value":{"type":"Literal","start":1450,"end":1458,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1460,"end":1472,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1460,"end":1468,"name":"ngImport"},"value":{"type":"Identifier","start":1470,"end":1472,"name":"i0"},"kind":"init"},{"type":"Property","start":1474,"end":1497,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1474,"end":1478,"name":"type"},"value":{"type":"Identifier","start":1480,"end":1497,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1499,"end":1522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1499,"end":1506,"name":"imports"},"value":{"type":"ArrayExpression","start":1508,"end":1522,"elements":[{"type":"Identifier","start":1509,"end":1521,"name":"CommonModule"}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1711,"expression":{"type":"AssignmentExpression","start":1528,"end":1710,"operator":"=","left":{"type":"MemberExpression","start":1528,"end":1550,"object":{"type":"Identifier","start":1528,"end":1545,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1546,"end":1550,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1553,"end":1710,"callee":{"type":"MemberExpression","start":1553,"end":1575,"object":{"type":"Identifier","start":1553,"end":1555,"name":"i0"},"property":{"type":"Identifier","start":1556,"end":1575,"name":"ɵɵngDeclareInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1576,"end":1709,"properties":[{"type":"Property","start":1578,"end":1598,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1578,"end":1588,"name":"minVersion"},"value":{"type":"Literal","start":1590,"end":1598,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1600,"end":1617,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1600,"end":1607,"name":"version"},"value":{"type":"Literal","start":1609,"end":1617,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1619,"end":1631,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1619,"end":1627,"name":"ngImport"},"value":{"type":"Identifier","start":1629,"end":1631,"name":"i0"},"kind":"init"},{"type":"Property","start":1633,"end":1656,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1633,"end":1637,"name":"type"},"value":{"type":"Identifier","start":1639,"end":1656,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1658,"end":1707,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1658,"end":1665,"name":"imports"},"value":{"type":"ArrayExpression","start":1667,"end":1707,"elements":[{"type":"ArrayExpression","start":1668,"end":1706,"elements":[{"type":"Identifier","start":1683,"end":1695,"name":"CommonModule"}]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1713,"end":2287,"expression":{"type":"CallExpression","start":1713,"end":2286,"callee":{"type":"MemberExpression","start":1713,"end":1740,"object":{"type":"Identifier","start":1713,"end":1715,"name":"i0"},"property":{"type":"Identifier","start":1716,"end":1740,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1741,"end":2285,"properties":[{"type":"Property","start":1743,"end":1763,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1743,"end":1753,"name":"minVersion"},"value":{"type":"Literal","start":1755,"end":1763,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1765,"end":1782,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1765,"end":1772,"name":"version"},"value":{"type":"Literal","start":1774,"end":1782,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1784,"end":1796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1792,"name":"ngImport"},"value":{"type":"Identifier","start":1794,"end":1796,"name":"i0"},"kind":"init"},{"type":"Property","start":1798,"end":1821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1798,"end":1802,"name":"type"},"value":{"type":"Identifier","start":1804,"end":1821,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1823,"end":2052,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1833,"name":"decorators"},"value":{"type":"ArrayExpression","start":1835,"end":2052,"elements":[{"type":"ObjectExpression","start":1836,"end":2051,"properties":[{"type":"Property","start":1851,"end":1865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1851,"end":1855,"name":"type"},"value":{"type":"Identifier","start":1857,"end":1865,"name":"NgModule"},"kind":"init"},{"type":"Property","start":1880,"end":2040,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1880,"end":1884,"name":"args"},"value":{"type":"ArrayExpression","start":1886,"end":2040,"elements":[{"type":"ObjectExpression","start":1887,"end":2039,"properties":[{"type":"Property","start":1910,"end":1926,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1922,"name":"declarations"},"value":{"type":"ArrayExpression","start":1924,"end":1926,"elements":[]},"kind":"init"},{"type":"Property","start":1949,"end":2020,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1949,"end":1956,"name":"imports"},"value":{"type":"ArrayExpression","start":1958,"end":2020,"elements":[{"type":"Identifier","start":1985,"end":1997,"name":"CommonModule"}]},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":2054,"end":2283,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2054,"end":2068,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":2070,"end":2283,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2082,"end":2283,"body":[{"type":"ReturnStatement","start":2093,"end":2276,"argument":{"type":"ArrayExpression","start":2100,"end":2275,"elements":[{"type":"ObjectExpression","start":2101,"end":2274,"properties":[{"type":"Property","start":2103,"end":2126,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2103,"end":2107,"name":"type"},"value":{"type":"Identifier","start":2109,"end":2126,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":2128,"end":2272,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2128,"end":2138,"name":"decorators"},"value":{"type":"ArrayExpression","start":2140,"end":2272,"elements":[{"type":"ObjectExpression","start":2141,"end":2205,"properties":[{"type":"Property","start":2168,"end":2182,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2168,"end":2172,"name":"type"},"value":{"type":"Identifier","start":2174,"end":2182,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2207,"end":2271,"properties":[{"type":"Property","start":2234,"end":2248,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2234,"end":2238,"name":"type"},"value":{"type":"Identifier","start":2240,"end":2248,"name":"SkipSelf"},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","start":2289,"end":5123},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":5125,"end":5250}]},"code":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgxFirebaseModule, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: SkipSelf\r\n                    }] }];\r\n    } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","@angular/common","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","originalSourcemap":{"version":3,"file":"ngx-firebase.module.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,29],[17,0,0,37],[19,0,0,39],[27,0,0,47],[29,0,0,49],[37,0,0,57],[39,0,0,58],[45,0,0,64],[60,0,0,79],[61,0,0,80]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[21,0,1,20],[23,0,1,21],[29,0,1,27],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[23,0,2,22],[25,0,2,23],[31,0,2,29],[41,0,2,39],[42,0,2,40]],[],[[0,0,13,0],[6,0,13,6],[13,0,13,13],[30,0,13,30]],[[4,0,14,2]],[],[],[],[],[],[[7,0,20,5]],[[4,0,21,2],[16,0,21,38],[28,0,21,70]],[[8,0,22,4],[12,0,22,8],[24,0,22,20],[26,0,22,22]],[[12,0,23,6],[18,0,23,12],[22,0,23,16],[27,0,23,21],[28,0,24,8],[107,0,24,87],[108,0,24,88],[109,0,24,89]],[[9,0,25,5]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2],[10,0,28,8],[11,0,28,9],[18,0,28,16],[19,0,28,17],[25,0,28,40]],[[8,0,29,4],[15,0,29,11]],[[12,0,30,6],[20,0,30,14],[22,0,30,16],[39,0,30,33]],[[12,0,31,6],[21,0,31,15],[23,0,31,17]],[[16,0,32,8],[18,0,32,9],[25,0,32,16],[27,0,32,18],[41,0,32,32],[43,0,32,34],[51,0,32,42],[53,0,32,44],[59,0,32,50],[61,0,32,51]],[[13,0,33,7]],[[9,0,34,5],[10,0,34,6]],[[4,0,35,2],[5,0,35,3]],[],[[110,0,13,13],[127,0,13,30],[145,0,21,53],[162,0,21,70]],[[111,0,13,13],[128,0,13,30],[140,0,8,4],[152,0,8,16]],[[111,0,13,13],[128,0,13,30],[140,0,7,11]],[[12,0,8,4],[24,0,8,16]],[[9,0,9,3]],[[91,0,13,13],[108,0,13,30]],[[18,0,5,1],[26,0,5,9]],[[19,0,5,10]],[[20,0,6,2],[32,0,6,14],[34,0,6,16],[36,0,6,18]],[[20,0,7,2],[27,0,7,9],[29,0,7,11]],[[24,0,8,4],[36,0,8,16]],[[21,0,9,3]],[[17,0,10,1]],[[58,0,21,53],[75,0,21,70]],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[34,0,21,35]]],"sourcesContent":["import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseConfig} from './config';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\n\nexport class NgxFirebaseModule {\n  /**\n   * To be used as an Angular Module to inject the FirebaseConfig\n   * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\n   * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\n   * additional connections.\n   * The purpose is simply to make sure that we only create a single Firebase App and a single connection\n   */\n  constructor(@Optional() @SkipSelf() parentModule?: NgxFirebaseModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config?: FirebaseConfig): ModuleWithProviders<NgxFirebaseModule> {\n    return {\n      ngModule: NgxFirebaseModule,\n      providers: [\n        {provide: FirebaseConfig, useValue: config}\n      ]\n    };\n  }\n\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@angular/common":{"external":true,"id":"@angular/common","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[17,0,0,17],[19,0,0,19],[27,0,0,27],[29,0,0,29],[37,0,0,37],[39,0,0,39],[45,0,0,45],[60,0,0,60],[61,0,0,61]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[21,0,1,21],[23,0,1,23],[29,0,1,29],[46,0,1,46],[47,0,1,47]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[23,0,2,23],[25,0,2,25],[31,0,2,31],[41,0,2,41],[42,0,2,42]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[14,0,3,14],[20,0,3,20],[35,0,3,35],[36,0,3,36]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[30,0,4,30]],[[4,0,5,4]],[],[],[],[],[],[[7,0,11,7]],[[4,0,12,4],[16,0,12,16],[28,0,12,28]],[[8,0,13,8],[12,0,13,12],[24,0,13,24],[26,0,13,26]],[[12,0,14,12],[18,0,14,18],[22,0,14,22],[27,0,14,27],[28,0,14,28],[107,0,14,107],[108,0,14,108],[109,0,14,109]],[[9,0,15,9]],[[4,0,16,4],[5,0,16,5]],[[4,0,17,4],[10,0,17,10],[11,0,17,11],[18,0,17,18],[19,0,17,19],[25,0,17,25]],[[8,0,18,8],[15,0,18,15]],[[12,0,19,12],[20,0,19,20],[22,0,19,22],[39,0,19,39]],[[12,0,20,12],[21,0,20,21],[23,0,20,23]],[[16,0,21,16],[18,0,21,18],[25,0,21,25],[27,0,21,27],[41,0,21,41],[43,0,21,43],[51,0,21,51],[53,0,21,53],[59,0,21,59],[61,0,21,61]],[[13,0,22,13]],[[9,0,23,9],[10,0,23,10]],[[4,0,24,4],[5,0,24,5]],[[1,0,25,1]],[[0,0,26,0],[17,0,26,17],[18,0,26,18],[22,0,26,22],[25,0,26,25],[27,0,26,27],[28,0,26,28],[46,0,26,46],[47,0,26,47],[49,0,26,49],[59,0,26,59],[61,0,26,61],[69,0,26,69],[71,0,26,71],[78,0,26,78],[80,0,26,80],[88,0,26,88],[90,0,26,90],[98,0,26,98],[100,0,26,100],[102,0,26,102],[104,0,26,104],[108,0,26,108],[110,0,26,110],[127,0,26,127],[129,0,26,129],[133,0,26,133],[135,0,26,135],[136,0,26,136],[138,0,26,138],[143,0,26,143],[145,0,26,145],[162,0,26,162],[164,0,26,164],[172,0,26,172],[174,0,26,174],[178,0,26,178],[180,0,26,180],[188,0,26,188],[190,0,26,190],[194,0,26,194],[196,0,26,196],[197,0,26,197],[199,0,26,199],[205,0,26,205],[207,0,26,207],[209,0,26,209],[210,0,26,210],[225,0,26,225],[226,0,26,226],[234,0,26,234],[236,0,26,236],[237,0,26,237],[238,0,26,238]],[[0,0,27,0],[17,0,27,17],[18,0,27,18],[22,0,27,22],[25,0,27,25],[27,0,27,27],[28,0,27,28],[47,0,27,47],[48,0,27,48],[50,0,27,50],[60,0,27,60],[62,0,27,62],[70,0,27,70],[72,0,27,72],[79,0,27,79],[81,0,27,81],[89,0,27,89],[91,0,27,91],[99,0,27,99],[101,0,27,101],[103,0,27,103],[105,0,27,105],[109,0,27,109],[111,0,27,111],[128,0,27,128],[130,0,27,130],[137,0,27,137],[139,0,27,139],[140,0,27,140],[152,0,27,152],[153,0,27,153],[155,0,27,155],[156,0,27,156],[157,0,27,157]],[[0,0,28,0],[17,0,28,17],[18,0,28,18],[22,0,28,22],[25,0,28,25],[27,0,28,27],[28,0,28,28],[47,0,28,47],[48,0,28,48],[50,0,28,50],[60,0,28,60],[62,0,28,62],[70,0,28,70],[72,0,28,72],[79,0,28,79],[81,0,28,81],[89,0,28,89],[91,0,28,91],[99,0,28,99],[101,0,28,101],[103,0,28,103],[105,0,28,105],[109,0,28,109],[111,0,28,111],[128,0,28,128],[130,0,28,130],[137,0,28,137],[139,0,28,139],[140,0,28,140]],[[12,0,29,12],[24,0,29,24]],[[9,0,30,9],[10,0,30,10],[12,0,30,12],[13,0,30,13],[14,0,30,14]],[[0,0,31,0],[2,0,31,2],[3,0,31,3],[27,0,31,27],[28,0,31,28],[30,0,31,30],[40,0,31,40],[42,0,31,42],[50,0,31,50],[52,0,31,52],[59,0,31,59],[61,0,31,61],[69,0,31,69],[71,0,31,71],[79,0,31,79],[81,0,31,81],[83,0,31,83],[85,0,31,85],[89,0,31,89],[91,0,31,91],[108,0,31,108],[110,0,31,110],[120,0,31,120],[122,0,31,122],[123,0,31,123]],[[12,0,32,12],[16,0,32,16],[18,0,32,18],[26,0,32,26]],[[12,0,33,12],[16,0,33,16],[18,0,33,18],[19,0,33,19]],[[20,0,34,20],[32,0,34,32],[34,0,34,34],[36,0,34,36]],[[20,0,35,20],[27,0,35,27],[29,0,35,29]],[[24,0,36,24],[36,0,36,36]],[[21,0,37,21]],[[17,0,38,17],[18,0,38,18]],[[9,0,39,9],[10,0,39,10],[12,0,39,12],[26,0,39,26],[28,0,39,28]],[[8,0,39,42],[15,0,39,49],[16,0,39,50],[18,0,39,52],[22,0,39,56],[24,0,39,58],[41,0,39,75],[43,0,39,77],[53,0,39,87],[55,0,39,89],[56,0,39,90]],[[24,0,40,20],[28,0,40,24],[30,0,40,26],[38,0,40,34]],[[21,0,41,17],[23,0,41,19]],[[24,0,42,20],[28,0,42,24],[30,0,42,26],[38,0,42,34]],[[21,0,43,17],[22,0,43,18],[24,0,43,20],[25,0,43,21],[26,0,43,22]],[[4,0,43,23],[5,0,43,24],[7,0,43,26],[8,0,43,27],[9,0,43,28]],[[0,0,44,0],[2834,0,44,2834]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5724,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"Inject"},"local":{"type":"Identifier","start":9,"end":15,"name":"Inject"}},{"type":"ImportSpecifier","start":17,"end":27,"imported":{"type":"Identifier","start":17,"end":27,"name":"Injectable"},"local":{"type":"Identifier","start":17,"end":27,"name":"Injectable"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"Optional"},"local":{"type":"Identifier","start":29,"end":37,"name":"Optional"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":113,"specifiers":[{"type":"ImportSpecifier","start":72,"end":94,"imported":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"},"local":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"}}],"source":{"type":"Literal","start":102,"end":112,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":115,"end":170,"specifiers":[{"type":"ImportDefaultSpecifier","start":122,"end":130,"local":{"type":"Identifier","start":122,"end":130,"name":"firebase"}},{"type":"ImportSpecifier","start":134,"end":147,"imported":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"},"local":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"}}],"source":{"type":"Literal","start":155,"end":169,"value":"firebase/app","raw":"'firebase/app'"}},{"type":"ImportDeclaration","start":172,"end":248,"specifiers":[{"type":"ImportSpecifier","start":181,"end":205,"imported":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"},"local":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"}},{"type":"ImportSpecifier","start":207,"end":219,"imported":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"},"local":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"}}],"source":{"type":"Literal","start":227,"end":247,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":250,"end":286,"specifiers":[{"type":"ImportNamespaceSpecifier","start":257,"end":264,"local":{"type":"Identifier","start":262,"end":264,"name":"i0"}}],"source":{"type":"Literal","start":270,"end":285,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":288,"end":319,"specifiers":[{"type":"ImportNamespaceSpecifier","start":295,"end":302,"local":{"type":"Identifier","start":300,"end":302,"name":"i1"}}],"source":{"type":"Literal","start":308,"end":318,"value":"./config","raw":"\"./config\""}},{"type":"ExportNamedDeclaration","start":321,"end":1144,"declaration":{"type":"ClassDeclaration","start":328,"end":1144,"id":{"type":"Identifier","start":334,"end":352,"name":"NgxFirebaseService"},"superClass":null,"body":{"type":"ClassBody","start":353,"end":1144,"body":[{"type":"MethodDefinition","start":360,"end":1141,"static":false,"computed":false,"key":{"type":"Identifier","start":360,"end":371,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":371,"end":1141,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":372,"end":378,"name":"config"},{"type":"Identifier","start":380,"end":394,"name":"emulatorConfig"}],"body":{"type":"BlockStatement","start":396,"end":1141,"body":[{"type":"ExpressionStatement","start":407,"end":444,"expression":{"type":"AssignmentExpression","start":407,"end":443,"operator":"=","left":{"type":"MemberExpression","start":407,"end":426,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":426,"name":"emulatorConfig"},"computed":false,"optional":false},"right":{"type":"Identifier","start":429,"end":443,"name":"emulatorConfig"}}},{"type":"IfStatement","start":454,"end":865,"test":{"type":"UnaryExpression","start":458,"end":484,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":459,"end":484,"object":{"type":"CallExpression","start":459,"end":477,"callee":{"type":"MemberExpression","start":459,"end":475,"object":{"type":"Identifier","start":459,"end":467,"name":"firebase"},"property":{"type":"Identifier","start":468,"end":475,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":478,"end":484,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":486,"end":743,"body":[{"type":"IfStatement","start":501,"end":732,"test":{"type":"Identifier","start":505,"end":511,"name":"config"},"consequent":{"type":"BlockStatement","start":513,"end":588,"body":[{"type":"ExpressionStatement","start":532,"end":573,"expression":{"type":"AssignmentExpression","start":532,"end":572,"operator":"=","left":{"type":"MemberExpression","start":532,"end":548,"object":{"type":"ThisExpression","start":532,"end":536},"property":{"type":"Identifier","start":537,"end":548,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":551,"end":572,"callee":{"type":"Identifier","start":551,"end":564,"name":"initializeApp"},"arguments":[{"type":"Identifier","start":565,"end":571,"name":"config"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":607,"end":732,"body":[{"type":"ThrowStatement","start":626,"end":717,"argument":{"type":"NewExpression","start":632,"end":716,"callee":{"type":"Identifier","start":636,"end":641,"name":"Error"},"arguments":[{"type":"Literal","start":642,"end":715,"value":"No previous Firebase App initialized so please provide a FirebaseConfig","raw":"'No previous Firebase App initialized so please provide a FirebaseConfig'"}]}}]}}]},"alternate":{"type":"BlockStatement","start":758,"end":865,"body":[{"type":"ExpressionStatement","start":773,"end":814,"expression":{"type":"AssignmentExpression","start":773,"end":813,"operator":"=","left":{"type":"MemberExpression","start":773,"end":789,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":789,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":792,"end":813,"object":{"type":"CallExpression","start":792,"end":810,"callee":{"type":"MemberExpression","start":792,"end":808,"object":{"type":"Identifier","start":792,"end":800,"name":"firebase"},"property":{"type":"Identifier","start":801,"end":808,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Literal","start":811,"end":812,"value":0,"raw":"0"},"computed":true,"optional":false}}}]}},{"type":"IfStatement","start":875,"end":1134,"test":{"type":"Identifier","start":879,"end":893,"name":"emulatorConfig"},"consequent":{"type":"BlockStatement","start":895,"end":1134,"body":[{"type":"ExpressionStatement","start":910,"end":1009,"expression":{"type":"CallExpression","start":910,"end":1008,"callee":{"type":"Identifier","start":910,"end":934,"name":"connectFirestoreEmulator"},"arguments":[{"type":"CallExpression","start":935,"end":965,"callee":{"type":"Identifier","start":935,"end":947,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":948,"end":964,"object":{"type":"ThisExpression","start":948,"end":952},"property":{"type":"Identifier","start":953,"end":964,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false},{"type":"MemberExpression","start":967,"end":986,"object":{"type":"Identifier","start":967,"end":981,"name":"emulatorConfig"},"property":{"type":"Identifier","start":982,"end":986,"name":"host"},"computed":false,"optional":false},{"type":"MemberExpression","start":988,"end":1007,"object":{"type":"Identifier","start":988,"end":1002,"name":"emulatorConfig"},"property":{"type":"Identifier","start":1003,"end":1007,"name":"port"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1146,"end":1423,"expression":{"type":"AssignmentExpression","start":1146,"end":1422,"operator":"=","left":{"type":"MemberExpression","start":1146,"end":1169,"object":{"type":"Identifier","start":1146,"end":1164,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1165,"end":1169,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1172,"end":1422,"callee":{"type":"MemberExpression","start":1172,"end":1193,"object":{"type":"Identifier","start":1172,"end":1174,"name":"i0"},"property":{"type":"Identifier","start":1175,"end":1193,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1194,"end":1421,"properties":[{"type":"Property","start":1196,"end":1216,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1196,"end":1206,"name":"minVersion"},"value":{"type":"Literal","start":1208,"end":1216,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1218,"end":1235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1218,"end":1225,"name":"version"},"value":{"type":"Literal","start":1227,"end":1235,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1237,"end":1249,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1237,"end":1245,"name":"ngImport"},"value":{"type":"Identifier","start":1247,"end":1249,"name":"i0"},"kind":"init"},{"type":"Property","start":1251,"end":1275,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1251,"end":1255,"name":"type"},"value":{"type":"Identifier","start":1257,"end":1275,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1277,"end":1380,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1277,"end":1281,"name":"deps"},"value":{"type":"ArrayExpression","start":1283,"end":1380,"elements":[{"type":"ObjectExpression","start":1284,"end":1328,"properties":[{"type":"Property","start":1286,"end":1310,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1286,"end":1291,"name":"token"},"value":{"type":"MemberExpression","start":1293,"end":1310,"object":{"type":"Identifier","start":1293,"end":1295,"name":"i1"},"property":{"type":"Identifier","start":1296,"end":1310,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1312,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1312,"end":1320,"name":"optional"},"value":{"type":"Literal","start":1322,"end":1326,"value":true,"raw":"true"},"kind":"init"}]},{"type":"ObjectExpression","start":1330,"end":1379,"properties":[{"type":"Property","start":1332,"end":1361,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1332,"end":1337,"name":"token"},"value":{"type":"Identifier","start":1339,"end":1361,"name":"FIRESTORE_USE_EMULATOR"},"kind":"init"},{"type":"Property","start":1363,"end":1377,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1363,"end":1371,"name":"optional"},"value":{"type":"Literal","start":1373,"end":1377,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1382,"end":1419,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1382,"end":1388,"name":"target"},"value":{"type":"MemberExpression","start":1390,"end":1419,"object":{"type":"MemberExpression","start":1390,"end":1408,"object":{"type":"Identifier","start":1390,"end":1392,"name":"i0"},"property":{"type":"Identifier","start":1393,"end":1408,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1409,"end":1419,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1425,"end":1582,"expression":{"type":"AssignmentExpression","start":1425,"end":1581,"operator":"=","left":{"type":"MemberExpression","start":1425,"end":1449,"object":{"type":"Identifier","start":1425,"end":1443,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1444,"end":1449,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1452,"end":1581,"callee":{"type":"MemberExpression","start":1452,"end":1476,"object":{"type":"Identifier","start":1452,"end":1454,"name":"i0"},"property":{"type":"Identifier","start":1455,"end":1476,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1477,"end":1580,"properties":[{"type":"Property","start":1479,"end":1499,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1479,"end":1489,"name":"minVersion"},"value":{"type":"Literal","start":1491,"end":1499,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1501,"end":1518,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1501,"end":1508,"name":"version"},"value":{"type":"Literal","start":1510,"end":1518,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1520,"end":1532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1520,"end":1528,"name":"ngImport"},"value":{"type":"Identifier","start":1530,"end":1532,"name":"i0"},"kind":"init"},{"type":"Property","start":1534,"end":1558,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1534,"end":1538,"name":"type"},"value":{"type":"Identifier","start":1540,"end":1558,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1560,"end":1578,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1560,"end":1570,"name":"providedIn"},"value":{"type":"Literal","start":1572,"end":1578,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1584,"end":2225,"expression":{"type":"CallExpression","start":1584,"end":2224,"callee":{"type":"MemberExpression","start":1584,"end":1611,"object":{"type":"Identifier","start":1584,"end":1586,"name":"i0"},"property":{"type":"Identifier","start":1587,"end":1611,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1612,"end":2223,"properties":[{"type":"Property","start":1614,"end":1634,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1614,"end":1624,"name":"minVersion"},"value":{"type":"Literal","start":1626,"end":1634,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1636,"end":1653,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1636,"end":1643,"name":"version"},"value":{"type":"Literal","start":1645,"end":1653,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1655,"end":1667,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1655,"end":1663,"name":"ngImport"},"value":{"type":"Identifier","start":1665,"end":1667,"name":"i0"},"kind":"init"},{"type":"Property","start":1669,"end":1693,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1669,"end":1673,"name":"type"},"value":{"type":"Identifier","start":1675,"end":1693,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1695,"end":1834,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1695,"end":1705,"name":"decorators"},"value":{"type":"ArrayExpression","start":1707,"end":1834,"elements":[{"type":"ObjectExpression","start":1708,"end":1833,"properties":[{"type":"Property","start":1723,"end":1739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1723,"end":1727,"name":"type"},"value":{"type":"Identifier","start":1729,"end":1739,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1754,"end":1822,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1754,"end":1758,"name":"args"},"value":{"type":"ArrayExpression","start":1760,"end":1822,"elements":[{"type":"ObjectExpression","start":1761,"end":1821,"properties":[{"type":"Property","start":1784,"end":1802,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1794,"name":"providedIn"},"value":{"type":"Literal","start":1796,"end":1802,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1836,"end":2221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1836,"end":1850,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1852,"end":2221,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2221,"body":[{"type":"ReturnStatement","start":1875,"end":2214,"argument":{"type":"ArrayExpression","start":1882,"end":2213,"elements":[{"type":"ObjectExpression","start":1883,"end":1990,"properties":[{"type":"Property","start":1885,"end":1908,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1885,"end":1889,"name":"type"},"value":{"type":"MemberExpression","start":1891,"end":1908,"object":{"type":"Identifier","start":1891,"end":1893,"name":"i1"},"property":{"type":"Identifier","start":1894,"end":1908,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1910,"end":1988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1920,"name":"decorators"},"value":{"type":"ArrayExpression","start":1922,"end":1988,"elements":[{"type":"ObjectExpression","start":1923,"end":1987,"properties":[{"type":"Property","start":1950,"end":1964,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1950,"end":1954,"name":"type"},"value":{"type":"Identifier","start":1956,"end":1964,"name":"Optional"},"kind":"init"}]}]},"kind":"init"}]},{"type":"ObjectExpression","start":1992,"end":2212,"properties":[{"type":"Property","start":1994,"end":2009,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1994,"end":1998,"name":"type"},"value":{"type":"Identifier","start":2000,"end":2009,"name":"undefined"},"kind":"init"},{"type":"Property","start":2011,"end":2210,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2011,"end":2021,"name":"decorators"},"value":{"type":"ArrayExpression","start":2023,"end":2210,"elements":[{"type":"ObjectExpression","start":2024,"end":2088,"properties":[{"type":"Property","start":2051,"end":2065,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2051,"end":2055,"name":"type"},"value":{"type":"Identifier","start":2057,"end":2065,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2090,"end":2209,"properties":[{"type":"Property","start":2117,"end":2129,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2117,"end":2121,"name":"type"},"value":{"type":"Identifier","start":2123,"end":2129,"name":"Inject"},"kind":"init"},{"type":"Property","start":2156,"end":2186,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2156,"end":2160,"name":"args"},"value":{"type":"ArrayExpression","start":2162,"end":2186,"elements":[{"type":"Identifier","start":2163,"end":2185,"name":"FIRESTORE_USE_EMULATOR"}]},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","start":2227,"end":5597},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":5599,"end":5724}]},"code":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i1.FirebaseConfig, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [FIRESTORE_USE_EMULATOR]\r\n                    }] }];\r\n    } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","firebase/app","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firebase.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,16],[27,0,0,26],[29,0,0,28],[37,0,0,36],[39,0,0,37],[45,0,0,43],[60,0,0,58],[61,0,0,59]],[[0,0,2,0],[7,0,2,7],[9,0,2,24],[31,0,2,46],[33,0,2,72],[39,0,2,78],[49,0,2,88],[50,0,2,89]],[[0,0,3,0],[7,0,3,7],[15,0,3,15],[17,0,3,17],[19,0,3,31],[32,0,3,44],[34,0,3,45],[40,0,3,51],[54,0,3,65],[55,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[33,0,4,32],[35,0,4,34],[47,0,4,46],[49,0,4,48],[55,0,4,54],[75,0,4,74],[76,0,4,75]],[],[],[[0,0,11,0],[6,0,11,6],[13,0,11,13],[31,0,11,31]],[[4,0,20,2],[16,0,20,26],[22,0,20,49],[24,0,21,65],[38,0,21,105]],[[8,0,21,65],[27,0,21,79],[30,0,21,65],[44,0,21,79],[45,0,21,105]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[22,0,23,18],[29,0,23,25],[31,0,23,27],[32,0,23,28],[38,0,23,34],[40,0,23,36]],[[12,0,24,6],[16,0,24,10],[22,0,24,16],[24,0,24,18]],[[16,0,25,8],[20,0,25,12],[21,0,25,13],[32,0,25,24],[35,0,25,27],[48,0,25,40],[49,0,25,41],[55,0,25,47],[56,0,25,48],[57,0,25,49]],[[13,0,26,7]],[[17,0,26,13]],[[16,0,27,8],[22,0,27,14],[26,0,27,18],[31,0,27,23],[32,0,27,24],[105,0,27,97],[106,0,27,98],[107,0,27,98]],[[13,0,28,7]],[[9,0,30,5]],[[13,0,30,11]],[[12,0,31,6],[16,0,31,10],[17,0,31,11],[28,0,31,22],[31,0,31,25],[39,0,31,33],[40,0,31,34],[47,0,31,41],[49,0,31,43],[50,0,31,44],[51,0,31,45],[52,0,31,46],[53,0,31,47],[54,0,31,48],[93,0,31,87]],[[9,0,32,5]],[[8,0,34,4],[12,0,34,8],[26,0,34,22],[28,0,34,24]],[[12,0,35,6],[36,0,35,30],[37,0,35,31],[49,0,35,43],[50,0,35,44],[54,0,35,48],[55,0,35,49],[66,0,35,60],[67,0,35,61],[69,0,35,63],[83,0,35,77],[84,0,35,78],[88,0,35,82],[90,0,35,84],[104,0,35,98],[105,0,35,99],[109,0,35,103],[110,0,35,104],[111,0,35,105],[112,0,35,106],[117,0,35,111]],[[12,0,36,6],[106,0,36,100]],[[9,0,37,5]],[[4,0,38,2],[5,0,38,3]],[],[[111,0,11,13],[129,0,11,31],[193,0,21,34],[215,0,21,56]],[[115,0,11,13],[133,0,11,31],[147,0,8,14],[153,0,8,20]],[[91,0,11,13],[109,0,11,31]],[[18,0,7,1],[28,0,7,11]],[[19,0,7,12]],[[20,0,8,2],[30,0,8,12],[32,0,8,14],[38,0,8,20]],[[17,0,9,1]],[],[[26,0,20,15],[34,0,20,23]],[],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[32,0,21,33]],[[27,0,21,34],[49,0,21,56]]],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\n\nimport {FirebaseConfig, FIRESTORE_USE_EMULATOR, FirestoreEmulatorConfig} from './config';\nimport firebase, {FirebaseApp, initializeApp} from 'firebase/app';\nimport {connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxFirebaseService {\n  /**\n   * Service that holds the Firebase App\n   * Inject this service into any other service that requires the Firebase App\n   *\n   * For example NgxFireStoreExtendedService injects this service\n   */\n  public firebaseApp: FirebaseApp;\n\n  constructor(@Optional() config?: FirebaseConfig,\n              @Optional() @Inject(FIRESTORE_USE_EMULATOR) public emulatorConfig?: FirestoreEmulatorConfig) {\n\n    if (!firebase.getApps().length) {\n      if (config) {\n        this.firebaseApp = initializeApp(config);\n      } else {\n        throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig')\n      }\n\n    } else {\n      this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\n    }\n\n    if (emulatorConfig) {\n      connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\n      // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\n    }\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/app":{"external":true,"id":"firebase/app","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[15,0,0,15],[17,0,0,17],[27,0,0,27],[29,0,0,29],[37,0,0,37],[39,0,0,39],[45,0,0,45],[60,0,0,60],[61,0,0,61]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[31,0,1,31],[33,0,1,33],[39,0,1,39],[49,0,1,49],[50,0,1,50]],[[0,0,2,0],[7,0,2,7],[15,0,2,15],[17,0,2,17],[19,0,2,19],[32,0,2,32],[34,0,2,34],[40,0,2,40],[54,0,2,54],[55,0,2,55]],[[0,0,3,0],[7,0,3,7],[9,0,3,9],[33,0,3,33],[35,0,3,35],[47,0,3,47],[49,0,3,49],[55,0,3,55],[75,0,3,75],[76,0,3,76]],[[0,0,4,0],[7,0,4,7],[12,0,4,12],[14,0,4,14],[20,0,4,20],[35,0,4,35],[36,0,4,36]],[[0,0,5,0],[7,0,5,7],[12,0,5,12],[14,0,5,14],[20,0,5,20],[30,0,5,30],[31,0,5,31]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[31,0,6,31]],[[4,0,7,4],[16,0,7,16],[22,0,7,22],[24,0,7,24],[38,0,7,38]],[[8,0,8,8],[12,0,8,12],[13,0,8,13],[27,0,8,27],[30,0,8,30],[44,0,8,44],[45,0,8,45]],[[8,0,9,8],[12,0,9,12],[13,0,9,13],[21,0,9,21],[22,0,9,22],[29,0,9,29],[31,0,9,31],[32,0,9,32],[38,0,9,38],[40,0,9,40]],[[12,0,10,12],[16,0,10,16],[22,0,10,22],[24,0,10,24]],[[16,0,11,16],[20,0,11,20],[21,0,11,21],[32,0,11,32],[35,0,11,35],[48,0,11,48],[49,0,11,49],[55,0,11,55],[56,0,11,56],[57,0,11,57]],[[13,0,12,13]],[[17,0,13,17]],[[16,0,14,16],[22,0,14,22],[26,0,14,26],[31,0,14,31],[32,0,14,32],[105,0,14,105],[106,0,14,106],[107,0,14,107]],[[13,0,15,13]],[[9,0,16,9]],[[13,0,17,13]],[[12,0,18,12],[16,0,18,16],[17,0,18,17],[28,0,18,28],[31,0,18,31],[39,0,18,39],[40,0,18,40],[47,0,18,47],[49,0,18,49],[50,0,18,50],[51,0,18,51],[52,0,18,52],[53,0,18,53],[54,0,18,54],[93,0,18,93]],[[9,0,19,9]],[[8,0,20,8],[12,0,20,12],[26,0,20,26],[28,0,20,28]],[[12,0,21,12],[36,0,21,36],[37,0,21,37],[49,0,21,49],[50,0,21,50],[54,0,21,54],[55,0,21,55],[66,0,21,66],[67,0,21,67],[69,0,21,69],[83,0,21,83],[84,0,21,84],[88,0,21,88],[90,0,21,90],[104,0,21,104],[105,0,21,105],[109,0,21,109],[110,0,21,110],[111,0,21,111],[112,0,21,112],[117,0,21,117]],[[12,0,22,12],[106,0,22,106]],[[9,0,23,9]],[[4,0,24,4],[5,0,24,5]],[[1,0,25,1]],[[0,0,26,0],[18,0,26,18],[19,0,26,19],[23,0,26,23],[26,0,26,26],[28,0,26,28],[29,0,26,29],[47,0,26,47],[48,0,26,48],[50,0,26,50],[60,0,26,60],[62,0,26,62],[70,0,26,70],[72,0,26,72],[79,0,26,79],[81,0,26,81],[89,0,26,89],[91,0,26,91],[99,0,26,99],[101,0,26,101],[103,0,26,103],[105,0,26,105],[109,0,26,109],[111,0,26,111],[129,0,26,129],[131,0,26,131],[135,0,26,135],[137,0,26,137],[138,0,26,138],[140,0,26,140],[145,0,26,145],[147,0,26,147],[149,0,26,149],[150,0,26,150],[164,0,26,164],[166,0,26,166],[174,0,26,174],[176,0,26,176],[180,0,26,180],[182,0,26,182],[184,0,26,184],[186,0,26,186],[191,0,26,191],[193,0,26,193],[215,0,26,215],[217,0,26,217],[225,0,26,225],[227,0,26,227],[231,0,26,231],[233,0,26,233],[234,0,26,234],[236,0,26,236],[242,0,26,242],[244,0,26,244],[246,0,26,246],[247,0,26,247],[262,0,26,262],[263,0,26,263],[273,0,26,273],[275,0,26,275],[276,0,26,276],[277,0,26,277]],[[0,0,27,0],[18,0,27,18],[19,0,27,19],[24,0,27,24],[27,0,27,27],[29,0,27,29],[30,0,27,30],[51,0,27,51],[52,0,27,52],[54,0,27,54],[64,0,27,64],[66,0,27,66],[74,0,27,74],[76,0,27,76],[83,0,27,83],[85,0,27,85],[93,0,27,93],[95,0,27,95],[103,0,27,103],[105,0,27,105],[107,0,27,107],[109,0,27,109],[113,0,27,113],[115,0,27,115],[133,0,27,133],[135,0,27,135],[145,0,27,145],[147,0,27,147],[153,0,27,153],[155,0,27,155],[156,0,27,156],[157,0,27,157]],[[0,0,28,0],[2,0,28,2],[3,0,28,3],[27,0,28,27],[28,0,28,28],[30,0,28,30],[40,0,28,40],[42,0,28,42],[50,0,28,50],[52,0,28,52],[59,0,28,59],[61,0,28,61],[69,0,28,69],[71,0,28,71],[79,0,28,79],[81,0,28,81],[83,0,28,83],[85,0,28,85],[89,0,28,89],[91,0,28,91],[109,0,28,109],[111,0,28,111],[121,0,28,121],[123,0,28,123],[124,0,28,124]],[[12,0,29,12],[16,0,29,16],[18,0,29,18],[28,0,29,28]],[[12,0,30,12],[16,0,30,16],[18,0,30,18],[19,0,30,19]],[[20,0,31,20],[30,0,31,30],[32,0,31,32],[38,0,31,38]],[[17,0,32,17],[18,0,32,18]],[[9,0,33,9],[10,0,33,10],[12,0,33,12],[26,0,33,26],[28,0,33,28]],[[8,0,33,42],[15,0,33,49],[16,0,33,50],[18,0,33,52],[22,0,33,56],[24,0,33,58],[26,0,33,60],[27,0,33,61],[41,0,33,75],[43,0,33,77],[53,0,33,87],[55,0,33,89],[56,0,33,90]],[[24,0,34,20],[28,0,34,24],[30,0,34,26],[38,0,34,34]],[[21,0,35,17],[22,0,35,18],[24,0,35,20],[26,0,35,22],[28,0,35,24],[32,0,35,28],[34,0,35,30],[43,0,35,39],[45,0,35,41],[55,0,35,51],[57,0,35,53],[58,0,35,54]],[[24,0,36,20],[28,0,36,24],[30,0,36,26],[38,0,36,34]],[[21,0,37,17],[23,0,37,19]],[[24,0,38,20],[28,0,38,24],[30,0,38,26],[36,0,38,32]],[[24,0,39,20],[28,0,39,24],[30,0,39,26],[31,0,39,27],[53,0,39,49],[54,0,39,50]],[[21,0,40,17],[22,0,40,18],[24,0,40,20],[25,0,40,21],[26,0,40,22]],[[4,0,40,23],[5,0,40,24],[7,0,40,26],[8,0,40,27],[9,0,40,28]],[[0,0,41,0],[3370,0,41,3370]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3243,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"Injectable"},"local":{"type":"Identifier","start":9,"end":19,"name":"Injectable"}}],"source":{"type":"Literal","start":27,"end":42,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":45,"end":104,"specifiers":[{"type":"ImportSpecifier","start":54,"end":66,"imported":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"},"local":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"}}],"source":{"type":"Literal","start":74,"end":103,"value":"../firestore-extended.class","raw":"'../firestore-extended.class'"}},{"type":"ImportDeclaration","start":106,"end":142,"specifiers":[{"type":"ImportNamespaceSpecifier","start":113,"end":120,"local":{"type":"Identifier","start":118,"end":120,"name":"i0"}}],"source":{"type":"Literal","start":126,"end":141,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":144,"end":189,"specifiers":[{"type":"ImportNamespaceSpecifier","start":151,"end":158,"local":{"type":"Identifier","start":156,"end":158,"name":"i1"}}],"source":{"type":"Literal","start":164,"end":188,"value":"./ngx-firebase.service","raw":"\"./ngx-firebase.service\""}},{"type":"ExportNamedDeclaration","start":191,"end":581,"declaration":{"type":"ClassDeclaration","start":198,"end":581,"id":{"type":"Identifier","start":204,"end":231,"name":"NgxFirestoreExtendedService"},"superClass":null,"body":{"type":"ClassBody","start":232,"end":581,"body":[{"type":"MethodDefinition","start":239,"end":458,"static":false,"computed":false,"key":{"type":"Identifier","start":239,"end":250,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":250,"end":458,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":251,"end":269,"name":"ngxFirebaseService"}],"body":{"type":"BlockStatement","start":271,"end":458,"body":[{"type":"ExpressionStatement","start":282,"end":327,"expression":{"type":"AssignmentExpression","start":282,"end":326,"operator":"=","left":{"type":"MemberExpression","start":282,"end":305,"object":{"type":"ThisExpression","start":282,"end":286},"property":{"type":"Identifier","start":287,"end":305,"name":"ngxFirebaseService"},"computed":false,"optional":false},"right":{"type":"Identifier","start":308,"end":326,"name":"ngxFirebaseService"}}},{"type":"ExpressionStatement","start":337,"end":401,"expression":{"type":"AssignmentExpression","start":337,"end":400,"operator":"=","left":{"type":"MemberExpression","start":337,"end":349,"object":{"type":"ThisExpression","start":337,"end":341},"property":{"type":"Identifier","start":342,"end":349,"name":"fireExt"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":352,"end":400,"callee":{"type":"Identifier","start":356,"end":368,"name":"FirestoreExt"},"arguments":[{"type":"MemberExpression","start":369,"end":399,"object":{"type":"Identifier","start":369,"end":387,"name":"ngxFirebaseService"},"property":{"type":"Identifier","start":388,"end":399,"name":"firebaseApp"},"computed":false,"optional":false}]}}}]}}},{"type":"MethodDefinition","start":464,"end":578,"static":false,"computed":false,"key":{"type":"Identifier","start":468,"end":479,"name":"firebaseApp"},"kind":"get","value":{"type":"FunctionExpression","start":479,"end":578,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":482,"end":578,"body":[{"type":"ReturnStatement","start":528,"end":571,"argument":{"type":"MemberExpression","start":535,"end":570,"object":{"type":"MemberExpression","start":535,"end":558,"object":{"type":"ThisExpression","start":535,"end":539},"property":{"type":"Identifier","start":540,"end":558,"name":"ngxFirebaseService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":559,"end":570,"name":"firebaseApp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":583,"end":815,"expression":{"type":"AssignmentExpression","start":583,"end":814,"operator":"=","left":{"type":"MemberExpression","start":583,"end":615,"object":{"type":"Identifier","start":583,"end":610,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":611,"end":615,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":618,"end":814,"callee":{"type":"MemberExpression","start":618,"end":639,"object":{"type":"Identifier","start":618,"end":620,"name":"i0"},"property":{"type":"Identifier","start":621,"end":639,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":640,"end":813,"properties":[{"type":"Property","start":642,"end":662,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":642,"end":652,"name":"minVersion"},"value":{"type":"Literal","start":654,"end":662,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":664,"end":681,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":664,"end":671,"name":"version"},"value":{"type":"Literal","start":673,"end":681,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":683,"end":695,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":683,"end":691,"name":"ngImport"},"value":{"type":"Identifier","start":693,"end":695,"name":"i0"},"kind":"init"},{"type":"Property","start":697,"end":730,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":697,"end":701,"name":"type"},"value":{"type":"Identifier","start":703,"end":730,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":732,"end":772,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":732,"end":736,"name":"deps"},"value":{"type":"ArrayExpression","start":738,"end":772,"elements":[{"type":"ObjectExpression","start":739,"end":771,"properties":[{"type":"Property","start":741,"end":769,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":741,"end":746,"name":"token"},"value":{"type":"MemberExpression","start":748,"end":769,"object":{"type":"Identifier","start":748,"end":750,"name":"i1"},"property":{"type":"Identifier","start":751,"end":769,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":774,"end":811,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":774,"end":780,"name":"target"},"value":{"type":"MemberExpression","start":782,"end":811,"object":{"type":"MemberExpression","start":782,"end":800,"object":{"type":"Identifier","start":782,"end":784,"name":"i0"},"property":{"type":"Identifier","start":785,"end":800,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":801,"end":811,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":817,"end":992,"expression":{"type":"AssignmentExpression","start":817,"end":991,"operator":"=","left":{"type":"MemberExpression","start":817,"end":850,"object":{"type":"Identifier","start":817,"end":844,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":845,"end":850,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":853,"end":991,"callee":{"type":"MemberExpression","start":853,"end":877,"object":{"type":"Identifier","start":853,"end":855,"name":"i0"},"property":{"type":"Identifier","start":856,"end":877,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":878,"end":990,"properties":[{"type":"Property","start":880,"end":900,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":880,"end":890,"name":"minVersion"},"value":{"type":"Literal","start":892,"end":900,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":902,"end":919,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":902,"end":909,"name":"version"},"value":{"type":"Literal","start":911,"end":919,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":921,"end":933,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":921,"end":929,"name":"ngImport"},"value":{"type":"Identifier","start":931,"end":933,"name":"i0"},"kind":"init"},{"type":"Property","start":935,"end":968,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":935,"end":939,"name":"type"},"value":{"type":"Identifier","start":941,"end":968,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":970,"end":988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":970,"end":980,"name":"providedIn"},"value":{"type":"Literal","start":982,"end":988,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":994,"end":1332,"expression":{"type":"CallExpression","start":994,"end":1331,"callee":{"type":"MemberExpression","start":994,"end":1021,"object":{"type":"Identifier","start":994,"end":996,"name":"i0"},"property":{"type":"Identifier","start":997,"end":1021,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1022,"end":1330,"properties":[{"type":"Property","start":1024,"end":1044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1024,"end":1034,"name":"minVersion"},"value":{"type":"Literal","start":1036,"end":1044,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1046,"end":1063,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1046,"end":1053,"name":"version"},"value":{"type":"Literal","start":1055,"end":1063,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1065,"end":1077,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1065,"end":1073,"name":"ngImport"},"value":{"type":"Identifier","start":1075,"end":1077,"name":"i0"},"kind":"init"},{"type":"Property","start":1079,"end":1112,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1079,"end":1083,"name":"type"},"value":{"type":"Identifier","start":1085,"end":1112,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":1114,"end":1253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1114,"end":1124,"name":"decorators"},"value":{"type":"ArrayExpression","start":1126,"end":1253,"elements":[{"type":"ObjectExpression","start":1127,"end":1252,"properties":[{"type":"Property","start":1142,"end":1158,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1142,"end":1146,"name":"type"},"value":{"type":"Identifier","start":1148,"end":1158,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1173,"end":1241,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1173,"end":1177,"name":"args"},"value":{"type":"ArrayExpression","start":1179,"end":1241,"elements":[{"type":"ObjectExpression","start":1180,"end":1240,"properties":[{"type":"Property","start":1203,"end":1221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1203,"end":1213,"name":"providedIn"},"value":{"type":"Literal","start":1215,"end":1221,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1255,"end":1328,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1255,"end":1269,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1271,"end":1328,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1283,"end":1328,"body":[{"type":"ReturnStatement","start":1285,"end":1326,"argument":{"type":"ArrayExpression","start":1292,"end":1325,"elements":[{"type":"ObjectExpression","start":1293,"end":1324,"properties":[{"type":"Property","start":1295,"end":1322,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1295,"end":1299,"name":"type"},"value":{"type":"MemberExpression","start":1301,"end":1322,"object":{"type":"Identifier","start":1301,"end":1303,"name":"i1"},"property":{"type":"Identifier","start":1304,"end":1322,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","start":1334,"end":3116},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":3118,"end":3243}]},"code":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firestore-extended.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firestore-extended.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[19,0,0,18],[21,0,0,19],[27,0,0,25],[42,0,0,40],[43,0,0,41]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[58,0,4,56],[59,0,4,57]],[],[],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[40,0,9,40]],[[4,0,13,2],[16,0,13,22],[34,0,13,60]],[[8,0,13,22],[31,0,13,40],[34,0,13,22],[52,0,13,40],[53,0,13,60]],[[8,0,14,4],[12,0,14,8],[13,0,14,9],[20,0,14,16],[23,0,14,19],[27,0,14,23],[39,0,14,35],[40,0,14,36],[58,0,14,54],[59,0,14,55],[70,0,14,66],[71,0,14,67],[72,0,14,68],[73,0,14,70],[122,0,14,119]],[[4,0,15,2],[5,0,15,3]],[[4,0,17,2],[8,0,17,6],[19,0,17,17]],[[8,0,18,4],[33,0,18,29]],[[8,0,19,4],[15,0,19,11],[19,0,19,15],[20,0,19,16],[38,0,19,34],[39,0,19,35],[50,0,19,46],[51,0,19,47]],[[4,0,20,2],[5,0,20,3]],[],[[120,0,9,13],[147,0,9,40]],[[124,0,9,13],[151,0,9,40],[165,0,7,14],[171,0,7,20]],[[91,0,9,13],[118,0,9,40]],[[18,0,6,1],[28,0,6,11]],[[19,0,6,12]],[[20,0,7,2],[30,0,7,12],[32,0,7,14],[38,0,7,20]],[[17,0,8,1]]],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {NgxFirebaseService} from './ngx-firebase.service';\nimport {FirebaseApp} from 'firebase/app';\nimport {FirestoreExt} from '../firestore-extended.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFirestoreExtendedService {\n\n  public fireExt: FirestoreExt;\n\n  constructor(private ngxFirebaseService: NgxFirebaseService) {\n    this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp);  /* inject Firebase App from NgxFirebaseService */\n  }\n\n  get firebaseApp(): FirebaseApp {\n    /** Convenience getter */\n    return this.ngxFirebaseService.firebaseApp;\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[19,0,0,19],[21,0,0,21],[27,0,0,27],[42,0,0,42],[43,0,0,43]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[21,0,1,21],[23,0,1,23],[29,0,1,29],[58,0,1,58],[59,0,1,59]],[[0,0,2,0],[7,0,2,7],[12,0,2,12],[14,0,2,14],[20,0,2,20],[35,0,2,35],[36,0,2,36]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[14,0,3,14],[20,0,3,20],[44,0,3,44],[45,0,3,45]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[40,0,4,40]],[[4,0,5,4],[16,0,5,16],[34,0,5,34]],[[8,0,6,8],[12,0,6,12],[13,0,6,13],[31,0,6,31],[34,0,6,34],[52,0,6,52],[53,0,6,53]],[[8,0,7,8],[12,0,7,12],[13,0,7,13],[20,0,7,20],[23,0,7,23],[27,0,7,27],[39,0,7,39],[40,0,7,40],[58,0,7,58],[59,0,7,59],[70,0,7,70],[71,0,7,71],[72,0,7,72],[73,0,7,73],[122,0,7,122]],[[4,0,8,4],[5,0,8,5]],[[4,0,9,4],[8,0,9,8],[19,0,9,19]],[[8,0,10,8],[33,0,10,33]],[[8,0,11,8],[15,0,11,15],[19,0,11,19],[20,0,11,20],[38,0,11,38],[39,0,11,39],[50,0,11,50],[51,0,11,51]],[[4,0,12,4],[5,0,12,5]],[[1,0,13,1]],[[0,0,14,0],[27,0,14,27],[28,0,14,28],[32,0,14,32],[35,0,14,35],[37,0,14,37],[38,0,14,38],[56,0,14,56],[57,0,14,57],[59,0,14,59],[69,0,14,69],[71,0,14,71],[79,0,14,79],[81,0,14,81],[88,0,14,88],[90,0,14,90],[98,0,14,98],[100,0,14,100],[108,0,14,108],[110,0,14,110],[112,0,14,112],[114,0,14,114],[118,0,14,118],[120,0,14,120],[147,0,14,147],[149,0,14,149],[153,0,14,153],[155,0,14,155],[156,0,14,156],[158,0,14,158],[163,0,14,163],[165,0,14,165],[167,0,14,167],[168,0,14,168],[186,0,14,186],[188,0,14,188],[189,0,14,189],[191,0,14,191],[197,0,14,197],[199,0,14,199],[201,0,14,201],[202,0,14,202],[217,0,14,217],[218,0,14,218],[228,0,14,228],[230,0,14,230],[231,0,14,231],[232,0,14,232]],[[0,0,15,0],[27,0,15,27],[28,0,15,28],[33,0,15,33],[36,0,15,36],[38,0,15,38],[39,0,15,39],[60,0,15,60],[61,0,15,61],[63,0,15,63],[73,0,15,73],[75,0,15,75],[83,0,15,83],[85,0,15,85],[92,0,15,92],[94,0,15,94],[102,0,15,102],[104,0,15,104],[112,0,15,112],[114,0,15,114],[116,0,15,116],[118,0,15,118],[122,0,15,122],[124,0,15,124],[151,0,15,151],[153,0,15,153],[163,0,15,163],[165,0,15,165],[171,0,15,171],[173,0,15,173],[174,0,15,174],[175,0,15,175]],[[0,0,16,0],[2,0,16,2],[3,0,16,3],[27,0,16,27],[28,0,16,28],[30,0,16,30],[40,0,16,40],[42,0,16,42],[50,0,16,50],[52,0,16,52],[59,0,16,59],[61,0,16,61],[69,0,16,69],[71,0,16,71],[79,0,16,79],[81,0,16,81],[83,0,16,83],[85,0,16,85],[89,0,16,89],[91,0,16,91],[118,0,16,118],[120,0,16,120],[130,0,16,130],[132,0,16,132],[133,0,16,133]],[[12,0,17,12],[16,0,17,16],[18,0,17,18],[28,0,17,28]],[[12,0,18,12],[16,0,18,16],[18,0,18,18],[19,0,18,19]],[[20,0,19,20],[30,0,19,30],[32,0,19,32],[38,0,19,38]],[[17,0,20,17],[18,0,20,18]],[[9,0,21,9],[10,0,21,10],[12,0,21,12],[26,0,21,26],[28,0,21,28],[42,0,21,42],[49,0,21,49],[50,0,21,50],[52,0,21,52],[56,0,21,56],[58,0,21,58],[60,0,21,60],[61,0,21,61],[79,0,21,79],[81,0,21,81],[82,0,21,82],[83,0,21,83],[84,0,21,84],[85,0,21,85],[87,0,21,87],[88,0,21,88],[89,0,21,89]],[[0,0,22,0],[1782,0,22,1782]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2643,"body":[{"type":"ExportAllDeclaration","start":81,"end":124,"exported":null,"source":{"type":"Literal","start":95,"end":123,"value":"./lib/models/firestoreItem","raw":"'./lib/models/firestoreItem'"}},{"type":"ExportAllDeclaration","start":126,"end":167,"exported":null,"source":{"type":"Literal","start":140,"end":166,"value":"./lib/firestore-extended","raw":"'./lib/firestore-extended'"}},{"type":"ExportAllDeclaration","start":169,"end":212,"exported":null,"source":{"type":"Literal","start":183,"end":211,"value":"./lib/sub-collection-query","raw":"'./lib/sub-collection-query'"}},{"type":"ExportAllDeclaration","start":214,"end":258,"exported":null,"source":{"type":"Literal","start":228,"end":257,"value":"./lib/sub-collection-writer","raw":"'./lib/sub-collection-writer'"}},{"type":"ExportAllDeclaration","start":260,"end":290,"exported":null,"source":{"type":"Literal","start":274,"end":289,"value":"./lib/helpers","raw":"'./lib/helpers'"}},{"type":"ExportAllDeclaration","start":292,"end":325,"exported":null,"source":{"type":"Literal","start":306,"end":324,"value":"./lib/interfaces","raw":"'./lib/interfaces'"}},{"type":"ExportAllDeclaration","start":351,"end":407,"exported":null,"source":{"type":"Literal","start":365,"end":406,"value":"./lib/rxjs-ops/combine-latest-to-object","raw":"'./lib/rxjs-ops/combine-latest-to-object'"}},{"type":"ExportAllDeclaration","start":449,"end":496,"exported":null,"source":{"type":"Literal","start":463,"end":495,"value":"./lib/firestore-extended.class","raw":"'./lib/firestore-extended.class'"}},{"type":"ExportAllDeclaration","start":498,"end":538,"exported":null,"source":{"type":"Literal","start":512,"end":537,"value":"./lib/firestore-wrapper","raw":"'./lib/firestore-wrapper'"}},{"type":"ExportAllDeclaration","start":563,"end":596,"exported":null,"source":{"type":"Literal","start":577,"end":595,"value":"./lib/ngx/config","raw":"'./lib/ngx/config'"}},{"type":"ExportAllDeclaration","start":598,"end":644,"exported":null,"source":{"type":"Literal","start":612,"end":643,"value":"./lib/ngx/ngx-firebase.module","raw":"'./lib/ngx/ngx-firebase.module'"}},{"type":"ExportAllDeclaration","start":646,"end":693,"exported":null,"source":{"type":"Literal","start":660,"end":692,"value":"./lib/ngx/ngx-firebase.service","raw":"'./lib/ngx/ngx-firebase.service'"}},{"type":"ExportAllDeclaration","start":695,"end":752,"exported":null,"source":{"type":"Literal","start":709,"end":751,"value":"./lib/ngx/ngx-firestore-extended.service","raw":"'./lib/ngx/ngx-firestore-extended.service'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","start":754,"end":2524},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","start":2526,"end":2643}]},"code":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[22,0,3,22]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,11,0],[22,0,11,22]],[[0,0,12,0],[14,0,12,14],[55,0,12,55],[56,0,12,56]],[[0,0,14,0],[38,0,14,38]],[[0,0,15,0],[14,0,15,14],[46,0,15,46],[47,0,15,47]],[[0,0,16,0],[14,0,16,14],[39,0,16,39],[40,0,16,40]],[[0,0,18,0],[21,0,18,21]],[[0,0,19,0],[14,0,19,14],[32,0,19,32],[33,0,19,33]],[[0,0,20,0],[14,0,20,14],[45,0,20,45],[46,0,20,46]],[[0,0,21,0],[14,0,21,14],[46,0,21,46],[47,0,21,47]],[[0,0,22,0],[14,0,22,14],[56,0,22,56],[57,0,22,57]]],"sourcesContent":["/*\n * Public API Surface of firestore-extended.ts\n */\n/* Base Api exports */\nexport * from './lib/models/firestoreItem';\nexport * from './lib/firestore-extended';\nexport * from './lib/sub-collection-query';\nexport * from './lib/sub-collection-writer';\nexport * from './lib/helpers';\nexport * from './lib/interfaces';\n\n/* Helper functions */\nexport * from './lib/rxjs-ops/combine-latest-to-object';\n\n/* Wrappers and Convenience Classes */\nexport * from './lib/firestore-extended.class';\nexport * from './lib/firestore-wrapper';\n\n/* Angular Exports */\nexport * from './lib/ngx/config';\nexport * from './lib/ngx/ngx-firebase.module';\nexport * from './lib/ngx/ngx-firebase.service';\nexport * from './lib/ngx/ngx-firestore-extended.service';\n\n"]},"resolvedIds":{"./lib/firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-query":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-writer":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/interfaces":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/models/firestoreItem":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/rxjs-ops/combine-latest-to-object":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.module":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firestore-extended.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[22,0,3,22]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,10,0],[22,0,10,22]],[[0,0,11,0],[14,0,11,14],[55,0,11,55],[56,0,11,56]],[[0,0,12,0],[38,0,12,38]],[[0,0,13,0],[14,0,13,14],[46,0,13,46],[47,0,13,47]],[[0,0,14,0],[14,0,14,14],[39,0,14,39],[40,0,14,40]],[[0,0,15,0],[21,0,15,21]],[[0,0,16,0],[14,0,16,14],[32,0,16,32],[33,0,16,33]],[[0,0,17,0],[14,0,17,14],[45,0,17,45],[46,0,17,46]],[[0,0,18,0],[14,0,18,14],[46,0,18,46],[47,0,18,47]],[[0,0,19,0],[14,0,19,14],[56,0,19,56],[57,0,19,57]],[[0,0,20,0],[1770,0,20,1770]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":651,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","start":82,"end":532},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","start":534,"end":651}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[14,0,3,14],[28,0,3,28],[29,0,3,29]],[[0,0,4,0],[450,0,4,450]]]}],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{},"downlevel-ts":{}}}