{"modules":[{"ast":{"type":"Program","start":0,"end":4432,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","start":12,"end":4302},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/models/module.js.map","start":4304,"end":4432}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/models/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[4290,0,1,4290]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11740,"body":[{"type":"ImportDeclaration","start":0,"end":53,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"collection"},"local":{"type":"Identifier","start":9,"end":19,"name":"collection"}},{"type":"ImportSpecifier","start":21,"end":24,"imported":{"type":"Identifier","start":21,"end":24,"name":"doc"},"local":{"type":"Identifier","start":21,"end":24,"name":"doc"}}],"source":{"type":"Literal","start":32,"end":52,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":156,"end":463,"declaration":{"type":"FunctionDeclaration","start":163,"end":463,"id":{"type":"Identifier","start":172,"end":186,"name":"getRefFromPath"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":187,"end":191,"name":"path"},{"type":"Identifier","start":193,"end":202,"name":"firestore"}],"body":{"type":"BlockStatement","start":204,"end":463,"body":[{"type":"VariableDeclaration","start":211,"end":260,"declarations":[{"type":"VariableDeclarator","start":217,"end":259,"id":{"type":"Identifier","start":217,"end":234,"name":"pathSegmentAmount"},"init":{"type":"MemberExpression","start":237,"end":259,"object":{"type":"CallExpression","start":237,"end":252,"callee":{"type":"MemberExpression","start":237,"end":247,"object":{"type":"Identifier","start":237,"end":241,"name":"path"},"property":{"type":"Identifier","start":242,"end":247,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":248,"end":251,"value":"/","raw":"'/'"}],"optional":false},"property":{"type":"Identifier","start":253,"end":259,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":266,"end":460,"test":{"type":"BinaryExpression","start":270,"end":297,"left":{"type":"BinaryExpression","start":270,"end":291,"left":{"type":"Identifier","start":270,"end":287,"name":"pathSegmentAmount"},"operator":"%","right":{"type":"Literal","start":290,"end":291,"value":2,"raw":"2"}},"operator":"===","right":{"type":"Literal","start":296,"end":297,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":299,"end":370,"body":[{"type":"ReturnStatement","start":335,"end":363,"argument":{"type":"CallExpression","start":342,"end":362,"callee":{"type":"Identifier","start":342,"end":345,"name":"doc"},"arguments":[{"type":"Identifier","start":346,"end":355,"name":"firestore"},{"type":"Identifier","start":357,"end":361,"name":"path"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":381,"end":460,"body":[{"type":"ReturnStatement","start":418,"end":453,"argument":{"type":"CallExpression","start":425,"end":452,"callee":{"type":"Identifier","start":425,"end":435,"name":"collection"},"arguments":[{"type":"Identifier","start":436,"end":445,"name":"firestore"},{"type":"Identifier","start":447,"end":451,"name":"path"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":465,"end":653,"declaration":{"type":"FunctionDeclaration","start":472,"end":653,"id":{"type":"Identifier","start":481,"end":497,"name":"getSubCollection"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":498,"end":504,"name":"docRef"},{"type":"Identifier","start":506,"end":520,"name":"collectionName"}],"body":{"type":"BlockStatement","start":522,"end":653,"body":[{"type":"VariableDeclaration","start":529,"end":592,"declarations":[{"type":"VariableDeclarator","start":535,"end":591,"id":{"type":"Identifier","start":535,"end":549,"name":"collectionPath"},"init":{"type":"CallExpression","start":552,"end":591,"callee":{"type":"MemberExpression","start":552,"end":570,"object":{"type":"MemberExpression","start":552,"end":563,"object":{"type":"Identifier","start":552,"end":558,"name":"docRef"},"property":{"type":"Identifier","start":559,"end":563,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":564,"end":570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":571,"end":574,"value":"/","raw":"'/'"},{"type":"Identifier","start":576,"end":590,"name":"collectionName"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":598,"end":650,"argument":{"type":"CallExpression","start":605,"end":649,"callee":{"type":"Identifier","start":605,"end":615,"name":"collection"},"arguments":[{"type":"MemberExpression","start":616,"end":632,"object":{"type":"Identifier","start":616,"end":622,"name":"docRef"},"property":{"type":"Identifier","start":623,"end":632,"name":"firestore"},"computed":false,"optional":false},{"type":"Identifier","start":634,"end":648,"name":"collectionPath"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":655,"end":776,"declaration":{"type":"FunctionDeclaration","start":662,"end":776,"id":{"type":"Identifier","start":671,"end":686,"name":"getDocRefWithId"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":687,"end":700,"name":"collectionRef"},{"type":"Identifier","start":702,"end":704,"name":"id"}],"body":{"type":"BlockStatement","start":706,"end":776,"body":[{"type":"ReturnStatement","start":713,"end":773,"argument":{"type":"CallExpression","start":720,"end":772,"callee":{"type":"Identifier","start":720,"end":723,"name":"doc"},"arguments":[{"type":"MemberExpression","start":724,"end":747,"object":{"type":"Identifier","start":724,"end":737,"name":"collectionRef"},"property":{"type":"Identifier","start":738,"end":747,"name":"firestore"},"computed":false,"optional":false},{"type":"MemberExpression","start":749,"end":767,"object":{"type":"Identifier","start":749,"end":762,"name":"collectionRef"},"property":{"type":"Identifier","start":763,"end":767,"name":"path"},"computed":false,"optional":false},{"type":"Identifier","start":769,"end":771,"name":"id"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":961,"end":1260,"declaration":{"type":"FunctionDeclaration","start":968,"end":1260,"id":{"type":"Identifier","start":977,"end":990,"name":"addDataToItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":991,"end":995,"name":"item"},{"type":"Identifier","start":997,"end":1006,"name":"dataToAdd"},{"type":"AssignmentPattern","start":1008,"end":1023,"left":{"type":"Identifier","start":1008,"end":1015,"name":"inplace"},"right":{"type":"Literal","start":1018,"end":1023,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":1025,"end":1260,"body":[{"type":"IfStatement","start":1032,"end":1257,"test":{"type":"Identifier","start":1036,"end":1043,"name":"inplace"},"consequent":{"type":"BlockStatement","start":1045,"end":1171,"body":[{"type":"ExpressionStatement","start":1056,"end":1142,"expression":{"type":"CallExpression","start":1056,"end":1141,"callee":{"type":"MemberExpression","start":1056,"end":1089,"object":{"type":"CallExpression","start":1056,"end":1081,"callee":{"type":"MemberExpression","start":1056,"end":1070,"object":{"type":"Identifier","start":1056,"end":1062,"name":"Object"},"property":{"type":"Identifier","start":1063,"end":1070,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1071,"end":1080,"name":"dataToAdd"}],"optional":false},"property":{"type":"Identifier","start":1082,"end":1089,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1090,"end":1140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"ArrayPattern","start":1091,"end":1097,"elements":[{"type":"Identifier","start":1092,"end":1093,"name":"k"},{"type":"Identifier","start":1095,"end":1096,"name":"v"}]}],"body":{"type":"BlockStatement","start":1102,"end":1140,"body":[{"type":"ExpressionStatement","start":1117,"end":1129,"expression":{"type":"AssignmentExpression","start":1117,"end":1128,"operator":"=","left":{"type":"MemberExpression","start":1117,"end":1124,"object":{"type":"Identifier","start":1117,"end":1121,"name":"item"},"property":{"type":"Identifier","start":1122,"end":1123,"name":"k"},"computed":true,"optional":false},"right":{"type":"Identifier","start":1127,"end":1128,"name":"v"}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1152,"end":1164,"argument":{"type":"Identifier","start":1159,"end":1163,"name":"item"}}]},"alternate":{"type":"BlockStatement","start":1182,"end":1257,"body":[{"type":"ReturnStatement","start":1193,"end":1250,"argument":{"type":"CallExpression","start":1200,"end":1249,"callee":{"type":"MemberExpression","start":1200,"end":1213,"object":{"type":"Identifier","start":1200,"end":1206,"name":"Object"},"property":{"type":"Identifier","start":1207,"end":1213,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1214,"end":1237,"callee":{"type":"MemberExpression","start":1214,"end":1227,"object":{"type":"Identifier","start":1214,"end":1220,"name":"Object"},"property":{"type":"Identifier","start":1221,"end":1227,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1228,"end":1230,"properties":[]},{"type":"Identifier","start":1232,"end":1236,"name":"item"}],"optional":false},{"type":"Identifier","start":1239,"end":1248,"name":"dataToAdd"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1579,"end":1831,"declaration":{"type":"FunctionDeclaration","start":1586,"end":1831,"id":{"type":"Identifier","start":1595,"end":1609,"name":"addCreatedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1610,"end":1614,"name":"item"},{"type":"AssignmentPattern","start":1616,"end":1631,"left":{"type":"Identifier","start":1616,"end":1623,"name":"inplace"},"right":{"type":"Literal","start":1626,"end":1631,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":1633,"end":1657,"left":{"type":"Identifier","start":1633,"end":1644,"name":"createdDate"},"right":{"type":"NewExpression","start":1647,"end":1657,"callee":{"type":"Identifier","start":1651,"end":1655,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":1659,"end":1831,"body":[{"type":"IfStatement","start":1712,"end":1769,"test":{"type":"BinaryExpression","start":1716,"end":1737,"left":{"type":"Literal","start":1716,"end":1729,"value":"createdDate","raw":"'createdDate'"},"operator":"in","right":{"type":"Identifier","start":1733,"end":1737,"name":"item"}},"consequent":{"type":"BlockStatement","start":1739,"end":1769,"body":[{"type":"ReturnStatement","start":1750,"end":1762,"argument":{"type":"Identifier","start":1757,"end":1761,"name":"item"}}]},"alternate":null},{"type":"ReturnStatement","start":1775,"end":1828,"argument":{"type":"CallExpression","start":1782,"end":1827,"callee":{"type":"Identifier","start":1782,"end":1795,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":1796,"end":1800,"name":"item"},{"type":"ObjectExpression","start":1802,"end":1817,"properties":[{"type":"Property","start":1804,"end":1815,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":1804,"end":1815,"name":"createdDate"},"kind":"init","value":{"type":"Identifier","start":1804,"end":1815,"name":"createdDate"}}]},{"type":"Identifier","start":1819,"end":1826,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2086,"end":2232,"declaration":{"type":"FunctionDeclaration","start":2093,"end":2232,"id":{"type":"Identifier","start":2102,"end":2117,"name":"addModifiedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2118,"end":2122,"name":"item"},{"type":"AssignmentPattern","start":2124,"end":2139,"left":{"type":"Identifier","start":2124,"end":2131,"name":"inplace"},"right":{"type":"Literal","start":2134,"end":2139,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":2141,"end":2166,"left":{"type":"Identifier","start":2141,"end":2153,"name":"modifiedDate"},"right":{"type":"NewExpression","start":2156,"end":2166,"callee":{"type":"Identifier","start":2160,"end":2164,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":2168,"end":2232,"body":[{"type":"ReturnStatement","start":2175,"end":2229,"argument":{"type":"CallExpression","start":2182,"end":2228,"callee":{"type":"Identifier","start":2182,"end":2195,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2196,"end":2200,"name":"item"},{"type":"ObjectExpression","start":2202,"end":2218,"properties":[{"type":"Property","start":2204,"end":2216,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2204,"end":2216,"name":"modifiedDate"},"kind":"init","value":{"type":"Identifier","start":2204,"end":2216,"name":"modifiedDate"}}]},{"type":"Identifier","start":2220,"end":2227,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2452,"end":2576,"declaration":{"type":"FunctionDeclaration","start":2459,"end":2576,"id":{"type":"Identifier","start":2468,"end":2480,"name":"addCreatedBy"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2481,"end":2485,"name":"item"},{"type":"Identifier","start":2487,"end":2496,"name":"createdBy"},{"type":"AssignmentPattern","start":2498,"end":2513,"left":{"type":"Identifier","start":2498,"end":2505,"name":"inplace"},"right":{"type":"Literal","start":2508,"end":2513,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":2515,"end":2576,"body":[{"type":"ReturnStatement","start":2522,"end":2573,"argument":{"type":"CallExpression","start":2529,"end":2572,"callee":{"type":"Identifier","start":2529,"end":2542,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2543,"end":2547,"name":"item"},{"type":"ObjectExpression","start":2549,"end":2562,"properties":[{"type":"Property","start":2551,"end":2560,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2551,"end":2560,"name":"createdBy"},"kind":"init","value":{"type":"Identifier","start":2551,"end":2560,"name":"createdBy"}}]},{"type":"Identifier","start":2564,"end":2571,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2847,"end":3229,"declaration":{"type":"FunctionDeclaration","start":2854,"end":3229,"id":{"type":"Identifier","start":2863,"end":2885,"name":"convertTimestampToDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2886,"end":2890,"name":"item"}],"body":{"type":"BlockStatement","start":2892,"end":3229,"body":[{"type":"IfStatement","start":2899,"end":3048,"test":{"type":"CallExpression","start":2903,"end":2937,"callee":{"type":"MemberExpression","start":2903,"end":2922,"object":{"type":"Identifier","start":2903,"end":2907,"name":"item"},"property":{"type":"Identifier","start":2908,"end":2922,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2923,"end":2936,"value":"createdDate","raw":"'createdDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2939,"end":3048,"body":[{"type":"ExpressionStatement","start":2950,"end":2986,"expression":{"type":"AssignmentExpression","start":2950,"end":2985,"operator":"=","left":{"type":"MemberExpression","start":2950,"end":2966,"object":{"type":"Identifier","start":2950,"end":2954,"name":"item"},"property":{"type":"Identifier","start":2955,"end":2966,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2969,"end":2985,"object":{"type":"Identifier","start":2969,"end":2973,"name":"item"},"property":{"type":"Identifier","start":2974,"end":2985,"name":"createdDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2996,"end":3041,"expression":{"type":"AssignmentExpression","start":2996,"end":3040,"operator":"=","left":{"type":"MemberExpression","start":2996,"end":3012,"object":{"type":"Identifier","start":2996,"end":3000,"name":"item"},"property":{"type":"Identifier","start":3001,"end":3012,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3015,"end":3040,"callee":{"type":"MemberExpression","start":3015,"end":3038,"object":{"type":"MemberExpression","start":3015,"end":3031,"object":{"type":"Identifier","start":3015,"end":3019,"name":"item"},"property":{"type":"Identifier","start":3020,"end":3031,"name":"createdDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3032,"end":3038,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":3054,"end":3208,"test":{"type":"CallExpression","start":3058,"end":3093,"callee":{"type":"MemberExpression","start":3058,"end":3077,"object":{"type":"Identifier","start":3058,"end":3062,"name":"item"},"property":{"type":"Identifier","start":3063,"end":3077,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3078,"end":3092,"value":"modifiedDate","raw":"'modifiedDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3095,"end":3208,"body":[{"type":"ExpressionStatement","start":3106,"end":3144,"expression":{"type":"AssignmentExpression","start":3106,"end":3143,"operator":"=","left":{"type":"MemberExpression","start":3106,"end":3123,"object":{"type":"Identifier","start":3106,"end":3110,"name":"item"},"property":{"type":"Identifier","start":3111,"end":3123,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":3126,"end":3143,"object":{"type":"Identifier","start":3126,"end":3130,"name":"item"},"property":{"type":"Identifier","start":3131,"end":3143,"name":"modifiedDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":3154,"end":3201,"expression":{"type":"AssignmentExpression","start":3154,"end":3200,"operator":"=","left":{"type":"MemberExpression","start":3154,"end":3171,"object":{"type":"Identifier","start":3154,"end":3158,"name":"item"},"property":{"type":"Identifier","start":3159,"end":3171,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3174,"end":3200,"callee":{"type":"MemberExpression","start":3174,"end":3198,"object":{"type":"MemberExpression","start":3174,"end":3191,"object":{"type":"Identifier","start":3174,"end":3178,"name":"item"},"property":{"type":"Identifier","start":3179,"end":3191,"name":"modifiedDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3192,"end":3198,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":3214,"end":3226,"argument":{"type":"Identifier","start":3221,"end":3225,"name":"item"}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":3231,"end":11617},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":11619,"end":11740}]},"code":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, item), dataToAdd);\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/helpers.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,1,2],[19,0,1,12],[21,0,3,2],[24,0,3,5],[26,0,8,1],[32,0,8,7],[52,0,8,27],[53,0,8,28]],[[0,0,10,0],[99,0,10,99]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[30,0,11,30],[31,0,11,34],[35,0,11,46],[37,0,11,48],[46,0,11,68]],[[4,0,12,2],[10,0,12,8],[27,0,12,25],[30,0,12,36],[34,0,12,40],[35,0,12,41],[40,0,12,46],[41,0,12,47],[44,0,12,50],[45,0,12,51],[46,0,12,52],[52,0,12,58],[53,0,12,59]],[[4,0,13,2],[8,0,13,6],[25,0,13,23],[28,0,13,26],[29,0,13,27],[34,0,13,32],[35,0,13,33],[37,0,13,35],[39,0,13,37],[63,0,13,61]],[[8,0,14,4],[15,0,14,11],[18,0,14,14],[19,0,14,15],[28,0,14,24],[30,0,14,26],[34,0,14,30],[35,0,14,55],[36,0,14,56]],[[5,0,15,3]],[[9,0,15,9],[11,0,15,11],[36,0,15,36]],[[8,0,16,4],[15,0,16,11],[25,0,16,21],[26,0,16,22],[35,0,16,31],[37,0,16,33],[41,0,16,37],[42,0,16,64],[43,0,16,65]],[[5,0,17,3]],[[0,0,18,0],[1,0,18,1]],[[0,0,20,0],[6,0,20,6],[16,0,20,16],[32,0,20,32],[33,0,20,81],[39,0,20,109],[41,0,20,111],[55,0,20,133]],[[4,0,21,2],[10,0,21,8],[24,0,21,22],[27,0,21,33],[33,0,21,39],[34,0,21,40],[38,0,21,44],[39,0,21,45],[45,0,21,51],[46,0,21,52],[49,0,21,55],[51,0,21,57],[65,0,21,71],[66,0,21,72],[67,0,21,73]],[[4,0,22,2],[11,0,22,9],[21,0,22,19],[22,0,22,20],[28,0,22,26],[29,0,22,27],[38,0,22,36],[40,0,22,38],[54,0,22,52],[55,0,22,79],[56,0,22,80]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0],[6,0,25,6],[16,0,25,16],[31,0,25,31],[32,0,25,56],[45,0,25,93],[47,0,25,95],[49,0,25,105]],[[4,0,26,2],[11,0,26,9],[14,0,26,12],[15,0,26,13],[28,0,26,26],[29,0,26,27],[38,0,26,36],[40,0,26,38],[53,0,26,51],[54,0,26,52],[58,0,26,56],[60,0,26,58],[62,0,26,60],[63,0,26,85],[64,0,26,86]],[[0,0,27,0],[1,0,27,1]],[[0,0,29,0]],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[29,0,35,29],[30,0,36,2],[34,0,36,9],[36,0,36,11],[45,0,36,46],[47,0,36,48],[54,0,36,55],[57,0,36,58],[62,0,36,63]],[[4,0,38,2],[8,0,38,6],[15,0,38,13],[17,0,38,15]],[[8,0,39,4],[14,0,39,10],[15,0,39,11],[22,0,39,18],[23,0,39,19],[32,0,39,28],[33,0,39,29],[34,0,39,30],[41,0,39,37],[42,0,39,38],[43,0,39,39],[44,0,39,40],[45,0,39,41],[47,0,39,43],[48,0,39,44],[49,0,39,45],[51,0,39,47],[53,0,39,49]],[[12,0,40,7],[16,0,40,40],[17,0,40,41],[18,0,40,42],[19,0,40,43],[22,0,40,46],[23,0,40,47],[24,0,40,48]],[[8,0,41,4],[9,0,41,5],[10,0,41,6],[11,0,41,7]],[[8,0,42,4],[15,0,42,11],[19,0,42,15],[20,0,42,16]],[[5,0,43,3]],[[9,0,43,9]],[[8,0,44,4],[15,0,44,11],[17,0,44,12],[20,0,44,15],[24,0,44,19],[26,0,44,21],[29,0,44,24],[38,0,44,33],[40,0,44,34],[41,0,44,35]],[[5,0,45,3]],[[0,0,46,0],[1,0,46,1]],[[0,0,48,0]],[],[],[],[],[],[[3,0,54,3]],[[0,0,55,0],[6,0,55,6],[16,0,55,16],[30,0,55,30],[31,0,55,34],[35,0,55,41],[37,0,55,43],[44,0,55,50],[47,0,55,53],[52,0,55,58],[54,0,55,60],[68,0,55,80],[72,0,55,84],[76,0,55,88],[78,0,55,90]],[[4,0,56,2],[44,0,56,42]],[[4,0,57,2],[8,0,57,6],[21,0,57,19],[25,0,57,23],[29,0,57,27],[31,0,57,29]],[[8,0,58,4],[15,0,58,11],[19,0,58,15],[20,0,58,16]],[[5,0,59,3]],[[4,0,61,2],[11,0,61,9],[24,0,61,22],[25,0,61,23],[29,0,61,27],[31,0,61,29],[33,0,61,30],[44,0,61,41],[46,0,61,42],[48,0,61,44],[55,0,61,51],[56,0,61,52],[57,0,61,53]],[[0,0,62,0],[1,0,62,1]],[[0,0,64,0]],[],[],[],[],[],[[3,0,70,3]],[[0,0,71,0],[6,0,71,6],[16,0,71,16],[31,0,71,31],[32,0,71,35],[36,0,71,42],[38,0,71,44],[45,0,71,51],[48,0,71,54],[53,0,71,59],[55,0,71,61],[70,0,71,82],[74,0,71,86],[78,0,71,90],[80,0,71,92]],[[4,0,72,2],[11,0,72,9],[24,0,72,22],[25,0,72,23],[29,0,72,27],[31,0,72,29],[33,0,72,30],[45,0,72,42],[47,0,72,43],[49,0,72,45],[56,0,72,52],[57,0,72,53],[58,0,72,54]],[[0,0,73,0],[1,0,73,1]],[[0,0,75,0]],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[16,0,82,16],[28,0,82,28],[29,0,82,32],[33,0,82,39],[35,0,82,41],[44,0,82,76],[46,0,82,78],[53,0,82,85],[56,0,82,88],[61,0,82,93]],[[4,0,84,2],[11,0,84,9],[24,0,84,22],[25,0,84,23],[29,0,84,27],[31,0,84,29],[33,0,84,30],[42,0,84,39],[44,0,84,40],[46,0,84,42],[53,0,84,49],[54,0,84,50],[55,0,84,51]],[[0,0,85,0],[1,0,85,1]],[[0,0,88,0]],[],[],[],[],[],[],[],[[3,0,96,3]],[[0,0,98,0],[6,0,98,6],[16,0,98,16],[38,0,98,38],[39,0,98,92],[43,0,98,99]],[[4,0,99,2],[8,0,99,6],[12,0,99,10],[13,0,99,11],[27,0,99,25],[28,0,99,26],[41,0,99,39],[42,0,99,40],[44,0,99,42]],[[8,0,100,4],[12,0,100,8],[13,0,100,9],[24,0,100,20],[27,0,100,23],[31,0,100,27],[32,0,100,28],[43,0,100,60],[44,0,100,61]],[[8,0,101,4],[12,0,101,8],[13,0,101,9],[24,0,101,20],[27,0,101,23],[31,0,101,27],[32,0,101,28],[43,0,101,39],[44,0,101,40],[50,0,101,46],[52,0,101,48],[53,0,101,49]],[[5,0,102,3]],[[4,0,103,2],[8,0,103,6],[12,0,103,10],[13,0,103,11],[27,0,103,25],[28,0,103,26],[42,0,103,40],[43,0,103,41],[45,0,103,43]],[[8,0,104,4],[12,0,104,8],[13,0,104,9],[25,0,104,21],[28,0,104,24],[32,0,104,28],[33,0,104,29],[45,0,104,62],[46,0,104,63]],[[8,0,105,4],[12,0,105,8],[13,0,105,9],[25,0,105,21],[28,0,105,24],[32,0,105,28],[33,0,105,29],[45,0,105,41],[46,0,105,42],[52,0,105,48],[54,0,105,50],[55,0,105,51]],[[5,0,106,3]],[[4,0,108,2],[11,0,108,9],[15,0,108,13],[16,0,108,14]],[[0,0,109,0],[1,0,109,1]]],"sourcesContent":["import {\r\n  collection,\r\n  CollectionReference,\r\n  doc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  Firestore,\r\n  Timestamp as FirebaseTimestamp\r\n} from 'firebase/firestore';\r\n\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath<A>(path: string, firestore: Firestore): DocumentReference<A> | CollectionReference<A> {\r\n  const pathSegmentAmount: number = path.split('/').length;\r\n  if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n    return doc(firestore, path) as DocumentReference<A>;\r\n  } else { // odd meaning collection\r\n    return collection(firestore, path) as CollectionReference<A>;\r\n  }\r\n}\r\n\r\nexport function getSubCollection<T extends DocumentData, A extends DocumentData>(docRef: DocumentReference<T>, collectionName: string): CollectionReference<A> {\r\n  const collectionPath: string = docRef.path.concat('/', collectionName);\r\n  return collection(docRef.firestore, collectionPath) as CollectionReference<A>;\r\n}\r\n\r\nexport function getDocRefWithId<T extends DocumentData>(collectionRef: CollectionReference<T>, id: string): DocumentReference<T> {\r\n  return doc(collectionRef.firestore, collectionRef.path, id) as DocumentReference<T>;\r\n}\r\n\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem<A extends { [field: string]: any }>(\r\n  item: A, dataToAdd: { [field: string]: any }, inplace = false): A {\r\n\r\n  if (inplace) {\r\n    Object.entries(dataToAdd).forEach(([k, v]) => {\r\n      (item as { [field: string]: any })[k] = v;\r\n    });\r\n    return item;\r\n  } else {\r\n    return {...item, ...dataToAdd};\r\n  }\r\n}\r\n\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate<A>(item: A, inplace = false, createdDate: Date = new Date()): A {\r\n  // do not overwrite previous createdDate\r\n  if ('createdDate' in item) {\r\n    return item;\r\n  }\r\n\r\n  return addDataToItem(item, {createdDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate<A>(item: A, inplace = false, modifiedDate: Date = new Date()): A {\r\n  return addDataToItem(item, {modifiedDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy<A>(item: A, createdBy: { [field: string]: any }, inplace = false): A {\r\n\r\n  return addDataToItem(item, {createdBy}, inplace);\r\n}\r\n\r\n\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\n\r\nexport function convertTimestampToDate<A extends { createdDate?: any, modifiedDate?: any }>(item: A): A {\r\n  if (item.hasOwnProperty('createdDate')) {\r\n    item.createdDate = item.createdDate as FirebaseTimestamp;\r\n    item.createdDate = item.createdDate.toDate();\r\n  }\r\n  if (item.hasOwnProperty('modifiedDate')) {\r\n    item.modifiedDate = item.modifiedDate as FirebaseTimestamp;\r\n    item.modifiedDate = item.modifiedDate.toDate();\r\n  }\r\n\r\n  return item;\r\n}\r\n"]},"resolvedIds":{"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[19,0,0,19],[21,0,0,21],[24,0,0,24],[26,0,0,26],[32,0,0,32],[52,0,0,52],[53,0,0,53]],[[0,0,1,0],[99,0,1,99]],[[0,0,2,0],[6,0,2,6],[16,0,2,16],[30,0,2,30],[31,0,2,31],[35,0,2,35],[37,0,2,37],[46,0,2,46]],[[4,0,3,4],[10,0,3,10],[27,0,3,27],[30,0,3,30],[34,0,3,34],[35,0,3,35],[40,0,3,40],[41,0,3,41],[44,0,3,44],[45,0,3,45],[46,0,3,46],[52,0,3,52],[53,0,3,53]],[[4,0,4,4],[8,0,4,8],[25,0,4,25],[28,0,4,28],[29,0,4,29],[34,0,4,34],[35,0,4,35],[37,0,4,37],[39,0,4,39],[63,0,4,63]],[[8,0,5,8],[15,0,5,15],[18,0,5,18],[19,0,5,19],[28,0,5,28],[30,0,5,30],[34,0,5,34],[35,0,5,35],[36,0,5,36]],[[5,0,6,5]],[[9,0,7,9],[11,0,7,11],[36,0,7,36]],[[8,0,8,8],[15,0,8,15],[25,0,8,25],[26,0,8,26],[35,0,8,35],[37,0,8,37],[41,0,8,41],[42,0,8,42],[43,0,8,43]],[[5,0,9,5]],[[0,0,10,0],[1,0,10,1]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[32,0,11,32],[33,0,11,33],[39,0,11,39],[41,0,11,41],[55,0,11,55]],[[4,0,12,4],[10,0,12,10],[24,0,12,24],[27,0,12,27],[33,0,12,33],[34,0,12,34],[38,0,12,38],[39,0,12,39],[45,0,12,45],[46,0,12,46],[49,0,12,49],[51,0,12,51],[65,0,12,65],[66,0,12,66],[67,0,12,67]],[[4,0,13,4],[11,0,13,11],[21,0,13,21],[22,0,13,22],[28,0,13,28],[29,0,13,29],[38,0,13,38],[40,0,13,40],[54,0,13,54],[55,0,13,55],[56,0,13,56]],[[0,0,14,0],[1,0,14,1]],[[0,0,15,0],[6,0,15,6],[16,0,15,16],[31,0,15,31],[32,0,15,32],[45,0,15,45],[47,0,15,47],[49,0,15,49]],[[4,0,16,4],[11,0,16,11],[14,0,16,14],[15,0,16,15],[28,0,16,28],[29,0,16,29],[38,0,16,38],[40,0,16,40],[53,0,16,53],[54,0,16,54],[58,0,16,58],[60,0,16,60],[62,0,16,62],[63,0,16,63],[64,0,16,64]],[[0,0,17,0],[1,0,17,1]],[[0,0,18,0]],[],[],[],[],[[3,0,23,3]],[[0,0,24,0],[6,0,24,6],[16,0,24,16],[29,0,24,29],[30,0,24,30],[34,0,24,34],[36,0,24,36],[45,0,24,45],[47,0,24,47],[54,0,24,54],[57,0,24,57],[62,0,24,62]],[[4,0,25,4],[8,0,25,8],[15,0,25,15],[17,0,25,17]],[[8,0,26,8],[14,0,26,14],[15,0,26,15],[22,0,26,22],[23,0,26,23],[32,0,26,32],[33,0,26,33],[34,0,26,34],[41,0,26,41],[42,0,26,42],[43,0,26,43],[44,0,26,44],[45,0,26,45],[47,0,26,47],[48,0,26,48],[49,0,26,49],[51,0,26,51],[53,0,26,53]],[[12,0,27,12],[16,0,27,16],[17,0,27,17],[18,0,27,18],[19,0,27,19],[22,0,27,22],[23,0,27,23],[24,0,27,24]],[[8,0,28,8],[9,0,28,9],[10,0,28,10],[11,0,28,11]],[[8,0,29,8],[15,0,29,15],[19,0,29,19],[20,0,29,20]],[[5,0,30,5]],[[9,0,31,9]],[[8,0,32,8],[47,0,32,20],[51,0,32,24],[54,0,32,29],[63,0,32,38],[65,0,32,41]],[[5,0,33,5]],[[0,0,34,0],[1,0,34,1]],[[0,0,35,0]],[],[],[],[],[],[[3,0,41,3]],[[0,0,42,0],[6,0,42,6],[16,0,42,16],[30,0,42,30],[31,0,42,31],[35,0,42,35],[37,0,42,37],[44,0,42,44],[47,0,42,47],[52,0,42,52],[54,0,42,54],[65,0,42,65],[68,0,42,68],[72,0,42,72],[76,0,42,76],[78,0,42,78]],[[4,0,43,4],[44,0,43,44]],[[4,0,44,4],[8,0,44,8],[21,0,44,21],[25,0,44,25],[29,0,44,29],[31,0,44,31]],[[8,0,45,8],[15,0,45,15],[19,0,45,19],[20,0,45,20]],[[5,0,46,5]],[[4,0,47,4],[11,0,47,11],[24,0,47,24],[25,0,47,25],[29,0,47,29],[31,0,47,31],[33,0,47,33],[44,0,47,44],[46,0,47,46],[48,0,47,48],[55,0,47,55],[56,0,47,56],[57,0,47,57]],[[0,0,48,0],[1,0,48,1]],[[0,0,49,0]],[],[],[],[],[],[[3,0,55,3]],[[0,0,56,0],[6,0,56,6],[16,0,56,16],[31,0,56,31],[32,0,56,32],[36,0,56,36],[38,0,56,38],[45,0,56,45],[48,0,56,48],[53,0,56,53],[55,0,56,55],[67,0,56,67],[70,0,56,70],[74,0,56,74],[78,0,56,78],[80,0,56,80]],[[4,0,57,4],[11,0,57,11],[24,0,57,24],[25,0,57,25],[29,0,57,29],[31,0,57,31],[33,0,57,33],[45,0,57,45],[47,0,57,47],[49,0,57,49],[56,0,57,56],[57,0,57,57],[58,0,57,58]],[[0,0,58,0],[1,0,58,1]],[[0,0,59,0]],[],[],[],[],[],[[3,0,65,3]],[[0,0,66,0],[6,0,66,6],[16,0,66,16],[28,0,66,28],[29,0,66,29],[33,0,66,33],[35,0,66,35],[44,0,66,44],[46,0,66,46],[53,0,66,53],[56,0,66,56],[61,0,66,61]],[[4,0,67,4],[11,0,67,11],[24,0,67,24],[25,0,67,25],[29,0,67,29],[31,0,67,31],[33,0,67,33],[42,0,67,42],[44,0,67,44],[46,0,67,46],[53,0,67,53],[54,0,67,54],[55,0,67,55]],[[0,0,68,0],[1,0,68,1]],[[0,0,69,0]],[],[],[],[],[],[],[],[[3,0,77,3]],[[0,0,78,0],[6,0,78,6],[16,0,78,16],[38,0,78,38],[39,0,78,39],[43,0,78,43]],[[4,0,79,4],[8,0,79,8],[12,0,79,12],[13,0,79,13],[27,0,79,27],[28,0,79,28],[41,0,79,41],[42,0,79,42],[44,0,79,44]],[[8,0,80,8],[12,0,80,12],[13,0,80,13],[24,0,80,24],[27,0,80,27],[31,0,80,31],[32,0,80,32],[43,0,80,43],[44,0,80,44]],[[8,0,81,8],[12,0,81,12],[13,0,81,13],[24,0,81,24],[27,0,81,27],[31,0,81,31],[32,0,81,32],[43,0,81,43],[44,0,81,44],[50,0,81,50],[52,0,81,52],[53,0,81,53]],[[5,0,82,5]],[[4,0,83,4],[8,0,83,8],[12,0,83,12],[13,0,83,13],[27,0,83,27],[28,0,83,28],[42,0,83,42],[43,0,83,43],[45,0,83,45]],[[8,0,84,8],[12,0,84,12],[13,0,84,13],[25,0,84,25],[28,0,84,28],[32,0,84,32],[33,0,84,33],[45,0,84,45],[46,0,84,46]],[[8,0,85,8],[12,0,85,12],[13,0,85,13],[25,0,85,25],[28,0,85,28],[32,0,85,32],[33,0,85,33],[45,0,85,45],[46,0,85,46],[52,0,85,52],[54,0,85,54],[55,0,85,55]],[[5,0,86,5]],[[4,0,87,4],[11,0,87,11],[15,0,87,15],[16,0,87,16]],[[0,0,88,0],[1,0,88,1]],[[0,0,89,0],[8386,0,89,8386]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8103,"body":[{"type":"ExportNamedDeclaration","start":430,"end":835,"declaration":{"type":"FunctionDeclaration","start":437,"end":835,"id":{"type":"Identifier","start":446,"end":461,"name":"moveItemInArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":462,"end":467,"name":"array"},{"type":"Identifier","start":469,"end":478,"name":"fromIndex"},{"type":"Identifier","start":480,"end":487,"name":"toIndex"}],"body":{"type":"BlockStatement","start":489,"end":835,"body":[{"type":"VariableDeclaration","start":496,"end":544,"declarations":[{"type":"VariableDeclarator","start":502,"end":543,"id":{"type":"Identifier","start":502,"end":506,"name":"from"},"init":{"type":"CallExpression","start":509,"end":543,"callee":{"type":"Identifier","start":509,"end":514,"name":"clamp"},"arguments":[{"type":"Identifier","start":515,"end":524,"name":"fromIndex"},{"type":"BinaryExpression","start":526,"end":542,"left":{"type":"MemberExpression","start":526,"end":538,"object":{"type":"Identifier","start":526,"end":531,"name":"array"},"property":{"type":"Identifier","start":532,"end":538,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":541,"end":542,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":550,"end":594,"declarations":[{"type":"VariableDeclarator","start":556,"end":593,"id":{"type":"Identifier","start":556,"end":558,"name":"to"},"init":{"type":"CallExpression","start":561,"end":593,"callee":{"type":"Identifier","start":561,"end":566,"name":"clamp"},"arguments":[{"type":"Identifier","start":567,"end":574,"name":"toIndex"},{"type":"BinaryExpression","start":576,"end":592,"left":{"type":"MemberExpression","start":576,"end":588,"object":{"type":"Identifier","start":576,"end":581,"name":"array"},"property":{"type":"Identifier","start":582,"end":588,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":591,"end":592,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":600,"end":642,"test":{"type":"BinaryExpression","start":604,"end":615,"left":{"type":"Identifier","start":604,"end":608,"name":"from"},"operator":"===","right":{"type":"Identifier","start":613,"end":615,"name":"to"}},"consequent":{"type":"BlockStatement","start":617,"end":642,"body":[{"type":"ReturnStatement","start":628,"end":635,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":648,"end":675,"declarations":[{"type":"VariableDeclarator","start":654,"end":674,"id":{"type":"Identifier","start":654,"end":660,"name":"target"},"init":{"type":"MemberExpression","start":663,"end":674,"object":{"type":"Identifier","start":663,"end":668,"name":"array"},"property":{"type":"Identifier","start":669,"end":673,"name":"from"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":681,"end":714,"declarations":[{"type":"VariableDeclarator","start":687,"end":713,"id":{"type":"Identifier","start":687,"end":692,"name":"delta"},"init":{"type":"ConditionalExpression","start":695,"end":713,"test":{"type":"BinaryExpression","start":695,"end":704,"left":{"type":"Identifier","start":695,"end":697,"name":"to"},"operator":"<","right":{"type":"Identifier","start":700,"end":704,"name":"from"}},"consequent":{"type":"UnaryExpression","start":707,"end":709,"operator":"-","prefix":true,"argument":{"type":"Literal","start":708,"end":709,"value":1,"raw":"1"}},"alternate":{"type":"Literal","start":712,"end":713,"value":1,"raw":"1"}}}],"kind":"const"},{"type":"ForStatement","start":720,"end":807,"init":{"type":"VariableDeclaration","start":725,"end":737,"declarations":[{"type":"VariableDeclarator","start":729,"end":737,"id":{"type":"Identifier","start":729,"end":730,"name":"i"},"init":{"type":"Identifier","start":733,"end":737,"name":"from"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":739,"end":747,"left":{"type":"Identifier","start":739,"end":740,"name":"i"},"operator":"!==","right":{"type":"Identifier","start":745,"end":747,"name":"to"}},"update":{"type":"AssignmentExpression","start":749,"end":759,"operator":"+=","left":{"type":"Identifier","start":749,"end":750,"name":"i"},"right":{"type":"Identifier","start":754,"end":759,"name":"delta"}},"body":{"type":"BlockStatement","start":761,"end":807,"body":[{"type":"ExpressionStatement","start":772,"end":800,"expression":{"type":"AssignmentExpression","start":772,"end":799,"operator":"=","left":{"type":"MemberExpression","start":772,"end":780,"object":{"type":"Identifier","start":772,"end":777,"name":"array"},"property":{"type":"Identifier","start":778,"end":779,"name":"i"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":783,"end":799,"object":{"type":"Identifier","start":783,"end":788,"name":"array"},"property":{"type":"BinaryExpression","start":789,"end":798,"left":{"type":"Identifier","start":789,"end":790,"name":"i"},"operator":"+","right":{"type":"Identifier","start":793,"end":798,"name":"delta"}},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":813,"end":832,"expression":{"type":"AssignmentExpression","start":813,"end":831,"operator":"=","left":{"type":"MemberExpression","start":813,"end":822,"object":{"type":"Identifier","start":813,"end":818,"name":"array"},"property":{"type":"Identifier","start":819,"end":821,"name":"to"},"computed":true,"optional":false},"right":{"type":"Identifier","start":825,"end":831,"name":"target"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1134,"end":1454,"declaration":{"type":"FunctionDeclaration","start":1141,"end":1454,"id":{"type":"Identifier","start":1150,"end":1167,"name":"transferArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1168,"end":1180,"name":"currentArray"},{"type":"Identifier","start":1182,"end":1193,"name":"targetArray"},{"type":"Identifier","start":1195,"end":1207,"name":"currentIndex"},{"type":"Identifier","start":1209,"end":1220,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1222,"end":1454,"body":[{"type":"VariableDeclaration","start":1229,"end":1287,"declarations":[{"type":"VariableDeclarator","start":1235,"end":1286,"id":{"type":"Identifier","start":1235,"end":1239,"name":"from"},"init":{"type":"CallExpression","start":1242,"end":1286,"callee":{"type":"Identifier","start":1242,"end":1247,"name":"clamp"},"arguments":[{"type":"Identifier","start":1248,"end":1260,"name":"currentIndex"},{"type":"BinaryExpression","start":1262,"end":1285,"left":{"type":"MemberExpression","start":1262,"end":1281,"object":{"type":"Identifier","start":1262,"end":1274,"name":"currentArray"},"property":{"type":"Identifier","start":1275,"end":1281,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":1284,"end":1285,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1293,"end":1343,"declarations":[{"type":"VariableDeclarator","start":1299,"end":1342,"id":{"type":"Identifier","start":1299,"end":1301,"name":"to"},"init":{"type":"CallExpression","start":1304,"end":1342,"callee":{"type":"Identifier","start":1304,"end":1309,"name":"clamp"},"arguments":[{"type":"Identifier","start":1310,"end":1321,"name":"targetIndex"},{"type":"MemberExpression","start":1323,"end":1341,"object":{"type":"Identifier","start":1323,"end":1334,"name":"targetArray"},"property":{"type":"Identifier","start":1335,"end":1341,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1349,"end":1451,"test":{"type":"MemberExpression","start":1353,"end":1372,"object":{"type":"Identifier","start":1353,"end":1365,"name":"currentArray"},"property":{"type":"Identifier","start":1366,"end":1372,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1374,"end":1451,"body":[{"type":"ExpressionStatement","start":1385,"end":1444,"expression":{"type":"CallExpression","start":1385,"end":1443,"callee":{"type":"MemberExpression","start":1385,"end":1403,"object":{"type":"Identifier","start":1385,"end":1396,"name":"targetArray"},"property":{"type":"Identifier","start":1397,"end":1403,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1404,"end":1406,"name":"to"},{"type":"Literal","start":1408,"end":1409,"value":0,"raw":"0"},{"type":"MemberExpression","start":1411,"end":1442,"object":{"type":"CallExpression","start":1411,"end":1439,"callee":{"type":"MemberExpression","start":1411,"end":1430,"object":{"type":"Identifier","start":1411,"end":1423,"name":"currentArray"},"property":{"type":"Identifier","start":1424,"end":1430,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1431,"end":1435,"name":"from"},{"type":"Literal","start":1437,"end":1438,"value":1,"raw":"1"}],"optional":false},"property":{"type":"Literal","start":1440,"end":1441,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1813,"end":2060,"declaration":{"type":"FunctionDeclaration","start":1820,"end":2060,"id":{"type":"Identifier","start":1829,"end":1842,"name":"copyArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1855,"name":"currentArray"},{"type":"Identifier","start":1857,"end":1868,"name":"targetArray"},{"type":"Identifier","start":1870,"end":1882,"name":"currentIndex"},{"type":"Identifier","start":1884,"end":1895,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1897,"end":2060,"body":[{"type":"VariableDeclaration","start":1904,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1910,"end":1953,"id":{"type":"Identifier","start":1910,"end":1912,"name":"to"},"init":{"type":"CallExpression","start":1915,"end":1953,"callee":{"type":"Identifier","start":1915,"end":1920,"name":"clamp"},"arguments":[{"type":"Identifier","start":1921,"end":1932,"name":"targetIndex"},{"type":"MemberExpression","start":1934,"end":1952,"object":{"type":"Identifier","start":1934,"end":1945,"name":"targetArray"},"property":{"type":"Identifier","start":1946,"end":1952,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1960,"end":2057,"test":{"type":"MemberExpression","start":1964,"end":1983,"object":{"type":"Identifier","start":1964,"end":1976,"name":"currentArray"},"property":{"type":"Identifier","start":1977,"end":1983,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1985,"end":2057,"body":[{"type":"ExpressionStatement","start":1996,"end":2050,"expression":{"type":"CallExpression","start":1996,"end":2049,"callee":{"type":"MemberExpression","start":1996,"end":2014,"object":{"type":"Identifier","start":1996,"end":2007,"name":"targetArray"},"property":{"type":"Identifier","start":2008,"end":2014,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2015,"end":2017,"name":"to"},{"type":"Literal","start":2019,"end":2020,"value":0,"raw":"0"},{"type":"MemberExpression","start":2022,"end":2048,"object":{"type":"Identifier","start":2022,"end":2034,"name":"currentArray"},"property":{"type":"Identifier","start":2035,"end":2047,"name":"currentIndex"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"FunctionDeclaration","start":2114,"end":2192,"id":{"type":"Identifier","start":2123,"end":2128,"name":"clamp"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2129,"end":2134,"name":"value"},{"type":"Identifier","start":2136,"end":2139,"name":"max"}],"body":{"type":"BlockStatement","start":2141,"end":2192,"body":[{"type":"ReturnStatement","start":2148,"end":2189,"argument":{"type":"CallExpression","start":2155,"end":2188,"callee":{"type":"MemberExpression","start":2155,"end":2163,"object":{"type":"Identifier","start":2155,"end":2159,"name":"Math"},"property":{"type":"Identifier","start":2160,"end":2163,"name":"max"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2164,"end":2165,"value":0,"raw":"0"},{"type":"CallExpression","start":2167,"end":2187,"callee":{"type":"MemberExpression","start":2167,"end":2175,"object":{"type":"Identifier","start":2167,"end":2171,"name":"Math"},"property":{"type":"Identifier","start":2172,"end":2175,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2176,"end":2179,"name":"max"},{"type":"Identifier","start":2181,"end":2186,"name":"value"}],"optional":false}],"optional":false}}]}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","start":2194,"end":7980},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":7982,"end":8103}]},"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"drag-utils.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/drag-utils.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,8,0]],[],[],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[31,0,14,31],[32,0,14,41],[37,0,14,51],[39,0,14,53],[48,0,14,70],[50,0,14,72],[57,0,14,87]],[[4,0,15,2],[10,0,15,8],[14,0,15,12],[17,0,15,15],[22,0,15,20],[23,0,15,21],[32,0,15,30],[34,0,15,32],[39,0,15,37],[40,0,15,38],[46,0,15,44],[49,0,15,47],[50,0,15,48],[51,0,15,49],[52,0,15,50]],[[4,0,16,2],[10,0,16,8],[12,0,16,10],[15,0,16,13],[20,0,16,18],[21,0,16,19],[28,0,16,26],[30,0,16,28],[35,0,16,33],[36,0,16,34],[42,0,16,40],[45,0,16,43],[46,0,16,44],[47,0,16,45],[48,0,16,46]],[[4,0,18,2],[8,0,18,6],[12,0,18,10],[17,0,18,15],[19,0,18,17],[21,0,18,19]],[[8,0,19,4],[15,0,19,11]],[[5,0,20,3]],[[4,0,22,2],[10,0,22,8],[16,0,22,14],[19,0,22,17],[24,0,22,22],[25,0,22,23],[29,0,22,27],[30,0,22,28],[31,0,22,29]],[[4,0,23,2],[10,0,23,8],[15,0,23,13],[18,0,23,16],[20,0,23,18],[23,0,23,21],[27,0,23,25],[28,0,23,26],[29,0,23,27],[30,0,23,28],[31,0,23,29],[32,0,23,30],[33,0,23,31],[34,0,23,32],[35,0,23,33],[36,0,23,34],[37,0,23,35]],[[4,0,25,2],[9,0,25,7],[13,0,25,11],[14,0,25,12],[17,0,25,15],[21,0,25,19],[23,0,25,21],[24,0,25,22],[29,0,25,27],[31,0,25,29],[33,0,25,31],[34,0,25,32],[38,0,25,36],[43,0,25,41],[45,0,25,43]],[[8,0,26,4],[13,0,26,9],[14,0,26,10],[15,0,26,11],[16,0,26,12],[19,0,26,15],[24,0,26,20],[25,0,26,21],[26,0,26,22],[29,0,26,25],[34,0,26,30],[35,0,26,31],[36,0,26,32]],[[5,0,27,3]],[[4,0,29,2],[9,0,29,7],[10,0,29,8],[12,0,29,10],[13,0,29,11],[16,0,29,14],[22,0,29,20],[23,0,29,21]],[[0,0,30,0],[1,0,30,1]],[[0,0,33,0]],[],[],[],[],[],[[3,0,39,3]],[[0,0,40,0],[6,0,40,6],[16,0,40,16],[33,0,40,33],[34,0,40,43],[46,0,40,60],[48,0,41,43],[59,0,41,59],[61,0,42,43],[73,0,42,63],[75,0,43,43],[86,0,43,62]],[[4,0,44,2],[10,0,44,8],[14,0,44,12],[17,0,44,15],[22,0,44,20],[23,0,44,21],[35,0,44,33],[37,0,44,35],[49,0,44,47],[50,0,44,48],[56,0,44,54],[59,0,44,57],[60,0,44,58],[61,0,44,59],[62,0,44,60]],[[4,0,45,2],[10,0,45,8],[12,0,45,10],[15,0,45,13],[20,0,45,18],[21,0,45,19],[32,0,45,30],[34,0,45,32],[45,0,45,43],[46,0,45,44],[52,0,45,50],[53,0,45,51],[54,0,45,52]],[[4,0,47,2],[8,0,47,6],[20,0,47,18],[21,0,47,19],[27,0,47,25],[29,0,47,27]],[[8,0,48,4],[19,0,48,15],[20,0,48,16],[26,0,48,22],[27,0,48,23],[29,0,48,25],[31,0,48,27],[32,0,48,28],[34,0,48,30],[46,0,48,42],[47,0,48,43],[53,0,48,49],[54,0,48,50],[58,0,48,54],[60,0,48,56],[61,0,48,57],[62,0,48,58],[63,0,48,59],[64,0,48,60],[65,0,48,61],[66,0,48,62],[67,0,48,63]],[[5,0,49,3]],[[0,0,50,0],[1,0,50,1]],[[0,0,52,0]],[],[],[],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[16,0,61,16],[29,0,61,29],[30,0,61,39],[42,0,61,56],[44,0,62,39],[55,0,62,55],[57,0,63,39],[69,0,63,59],[71,0,64,39],[82,0,64,58]],[[4,0,65,2],[10,0,65,8],[12,0,65,10],[15,0,65,13],[20,0,65,18],[21,0,65,19],[32,0,65,30],[34,0,65,32],[45,0,65,43],[46,0,65,44],[52,0,65,50],[53,0,65,51],[54,0,65,52]],[[4,0,67,2],[8,0,67,6],[20,0,67,18],[21,0,67,19],[27,0,67,25],[29,0,67,27]],[[8,0,68,4],[19,0,68,15],[20,0,68,16],[26,0,68,22],[27,0,68,23],[29,0,68,25],[31,0,68,27],[32,0,68,28],[34,0,68,30],[46,0,68,42],[47,0,68,43],[59,0,68,55],[60,0,68,56],[61,0,68,57],[62,0,68,58]],[[5,0,69,3]],[[0,0,70,0],[1,0,70,1]],[[0,0,72,0],[50,0,72,50]],[[0,0,73,0],[9,0,73,9],[14,0,73,14],[15,0,73,15],[20,0,73,28],[22,0,73,30],[25,0,73,41]],[[4,0,74,2],[11,0,74,9],[15,0,74,13],[16,0,74,14],[19,0,74,17],[20,0,74,18],[21,0,74,19],[23,0,74,21],[27,0,74,25],[28,0,74,26],[31,0,74,29],[32,0,74,30],[35,0,74,33],[37,0,74,35],[42,0,74,40],[43,0,74,41],[44,0,74,42],[45,0,74,43]],[[0,0,75,0],[1,0,75,1]]],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\r\n  const from = clamp(fromIndex, array.length - 1);\r\n  const to = clamp(toIndex, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n}\r\n\r\n\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem<T = any>(currentArray: T[],\r\n                                           targetArray: T[],\r\n                                           currentIndex: number,\r\n                                           targetIndex: number): void {\r\n  const from = clamp(currentIndex, currentArray.length - 1);\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n  }\r\n}\r\n\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem<T = any>(currentArray: T[],\r\n                                       targetArray: T[],\r\n                                       currentIndex: number,\r\n                                       targetIndex: number): void {\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray[currentIndex]);\r\n  }\r\n}\r\n\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value: number, max: number): number {\r\n  return Math.max(0, Math.min(max, value));\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,7,0]],[],[],[],[],[[3,0,12,3]],[[0,0,13,0],[6,0,13,6],[16,0,13,16],[31,0,13,31],[32,0,13,32],[37,0,13,37],[39,0,13,39],[48,0,13,48],[50,0,13,50],[57,0,13,57]],[[4,0,14,4],[10,0,14,10],[14,0,14,14],[17,0,14,17],[22,0,14,22],[23,0,14,23],[32,0,14,32],[34,0,14,34],[39,0,14,39],[40,0,14,40],[46,0,14,46],[49,0,14,49],[50,0,14,50],[51,0,14,51],[52,0,14,52]],[[4,0,15,4],[10,0,15,10],[12,0,15,12],[15,0,15,15],[20,0,15,20],[21,0,15,21],[28,0,15,28],[30,0,15,30],[35,0,15,35],[36,0,15,36],[42,0,15,42],[45,0,15,45],[46,0,15,46],[47,0,15,47],[48,0,15,48]],[[4,0,16,4],[8,0,16,8],[12,0,16,12],[17,0,16,17],[19,0,16,19],[21,0,16,21]],[[8,0,17,8],[15,0,17,15]],[[5,0,18,5]],[[4,0,19,4],[10,0,19,10],[16,0,19,16],[19,0,19,19],[24,0,19,24],[25,0,19,25],[29,0,19,29],[30,0,19,30],[31,0,19,31]],[[4,0,20,4],[10,0,20,10],[15,0,20,15],[18,0,20,18],[20,0,20,20],[23,0,20,23],[27,0,20,27],[28,0,20,28],[29,0,20,29],[30,0,20,30],[31,0,20,31],[32,0,20,32],[33,0,20,33],[34,0,20,34],[35,0,20,35],[36,0,20,36],[37,0,20,37]],[[4,0,21,4],[9,0,21,9],[13,0,21,13],[14,0,21,14],[17,0,21,17],[21,0,21,21],[23,0,21,23],[24,0,21,24],[29,0,21,29],[31,0,21,31],[33,0,21,33],[34,0,21,34],[38,0,21,38],[43,0,21,43],[45,0,21,45]],[[8,0,22,8],[13,0,22,13],[14,0,22,14],[15,0,22,15],[16,0,22,16],[19,0,22,19],[24,0,22,24],[25,0,22,25],[26,0,22,26],[29,0,22,29],[34,0,22,34],[35,0,22,35],[36,0,22,36]],[[5,0,23,5]],[[4,0,24,4],[9,0,24,9],[10,0,24,10],[12,0,24,12],[13,0,24,13],[16,0,24,16],[22,0,24,22],[23,0,24,23]],[[0,0,25,0],[1,0,25,1]],[[0,0,26,0]],[],[],[],[],[],[[3,0,32,3]],[[0,0,33,0],[6,0,33,6],[16,0,33,16],[33,0,33,33],[34,0,33,34],[46,0,33,46],[48,0,33,48],[59,0,33,59],[61,0,33,61],[73,0,33,73],[75,0,33,75],[86,0,33,86]],[[4,0,34,4],[10,0,34,10],[14,0,34,14],[17,0,34,17],[22,0,34,22],[23,0,34,23],[35,0,34,35],[37,0,34,37],[49,0,34,49],[50,0,34,50],[56,0,34,56],[59,0,34,59],[60,0,34,60],[61,0,34,61],[62,0,34,62]],[[4,0,35,4],[10,0,35,10],[12,0,35,12],[15,0,35,15],[20,0,35,20],[21,0,35,21],[32,0,35,32],[34,0,35,34],[45,0,35,45],[46,0,35,46],[52,0,35,52],[53,0,35,53],[54,0,35,54]],[[4,0,36,4],[8,0,36,8],[20,0,36,20],[21,0,36,21],[27,0,36,27],[29,0,36,29]],[[8,0,37,8],[19,0,37,19],[20,0,37,20],[26,0,37,26],[27,0,37,27],[29,0,37,29],[31,0,37,31],[32,0,37,32],[34,0,37,34],[46,0,37,46],[47,0,37,47],[53,0,37,53],[54,0,37,54],[58,0,37,58],[60,0,37,60],[61,0,37,61],[62,0,37,62],[63,0,37,63],[64,0,37,64],[65,0,37,65],[66,0,37,66],[67,0,37,67]],[[5,0,38,5]],[[0,0,39,0],[1,0,39,1]],[[0,0,40,0]],[],[],[],[],[],[],[],[[3,0,48,3]],[[0,0,49,0],[6,0,49,6],[16,0,49,16],[29,0,49,29],[30,0,49,30],[42,0,49,42],[44,0,49,44],[55,0,49,55],[57,0,49,57],[69,0,49,69],[71,0,49,71],[82,0,49,82]],[[4,0,50,4],[10,0,50,10],[12,0,50,12],[15,0,50,15],[20,0,50,20],[21,0,50,21],[32,0,50,32],[34,0,50,34],[45,0,50,45],[46,0,50,46],[52,0,50,52],[53,0,50,53],[54,0,50,54]],[[4,0,51,4],[8,0,51,8],[20,0,51,20],[21,0,51,21],[27,0,51,27],[29,0,51,29]],[[8,0,52,8],[19,0,52,19],[20,0,52,20],[26,0,52,26],[27,0,52,27],[29,0,52,29],[31,0,52,31],[32,0,52,32],[34,0,52,34],[46,0,52,46],[47,0,52,47],[59,0,52,59],[60,0,52,60],[61,0,52,61],[62,0,52,62]],[[5,0,53,5]],[[0,0,54,0],[1,0,54,1]],[[0,0,55,0],[50,0,55,50]],[[0,0,56,0],[9,0,56,9],[14,0,56,14],[15,0,56,15],[20,0,56,20],[22,0,56,22],[25,0,56,25]],[[4,0,57,4],[11,0,57,11],[15,0,57,15],[16,0,57,16],[19,0,57,19],[20,0,57,20],[21,0,57,21],[23,0,57,23],[27,0,57,27],[28,0,57,28],[31,0,57,31],[32,0,57,32],[35,0,57,35],[37,0,57,37],[42,0,57,42],[43,0,57,43],[44,0,57,44],[45,0,57,45]],[[0,0,58,0],[1,0,58,1]],[[0,0,59,0],[5786,0,59,5786]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":193082,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":32,"imported":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"},"local":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"}},{"type":"ImportSpecifier","start":34,"end":38,"imported":{"type":"Identifier","start":34,"end":38,"name":"from"},"local":{"type":"Identifier","start":34,"end":38,"name":"from"}},{"type":"ImportSpecifier","start":40,"end":42,"imported":{"type":"Identifier","start":40,"end":42,"name":"of"},"local":{"type":"Identifier","start":40,"end":42,"name":"of"}}],"source":{"type":"Literal","start":50,"end":56,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":59,"end":148,"specifiers":[{"type":"ImportSpecifier","start":68,"end":78,"imported":{"type":"Identifier","start":68,"end":78,"name":"catchError"},"local":{"type":"Identifier","start":68,"end":78,"name":"catchError"}},{"type":"ImportSpecifier","start":80,"end":86,"imported":{"type":"Identifier","start":80,"end":86,"name":"filter"},"local":{"type":"Identifier","start":80,"end":86,"name":"filter"}},{"type":"ImportSpecifier","start":88,"end":91,"imported":{"type":"Identifier","start":88,"end":91,"name":"map"},"local":{"type":"Identifier","start":88,"end":91,"name":"map"}},{"type":"ImportSpecifier","start":93,"end":101,"imported":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"},"local":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"}},{"type":"ImportSpecifier","start":103,"end":112,"imported":{"type":"Identifier","start":103,"end":112,"name":"switchMap"},"local":{"type":"Identifier","start":103,"end":112,"name":"switchMap"}},{"type":"ImportSpecifier","start":114,"end":118,"imported":{"type":"Identifier","start":114,"end":118,"name":"take"},"local":{"type":"Identifier","start":114,"end":118,"name":"take"}},{"type":"ImportSpecifier","start":120,"end":123,"imported":{"type":"Identifier","start":120,"end":123,"name":"tap"},"local":{"type":"Identifier","start":120,"end":123,"name":"tap"}}],"source":{"type":"Literal","start":131,"end":147,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":150,"end":320,"specifiers":[{"type":"ImportSpecifier","start":159,"end":169,"imported":{"type":"Identifier","start":159,"end":169,"name":"collection"},"local":{"type":"Identifier","start":159,"end":169,"name":"collection"}},{"type":"ImportSpecifier","start":171,"end":188,"imported":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"},"local":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"}},{"type":"ImportSpecifier","start":190,"end":195,"imported":{"type":"Identifier","start":190,"end":195,"name":"endAt"},"local":{"type":"Identifier","start":190,"end":195,"name":"endAt"}},{"type":"ImportSpecifier","start":197,"end":206,"imported":{"type":"Identifier","start":197,"end":206,"name":"endBefore"},"local":{"type":"Identifier","start":197,"end":206,"name":"endBefore"}},{"type":"ImportSpecifier","start":208,"end":215,"imported":{"type":"Identifier","start":208,"end":215,"name":"getDocs"},"local":{"type":"Identifier","start":208,"end":215,"name":"getDocs"}},{"type":"ImportSpecifier","start":217,"end":222,"imported":{"type":"Identifier","start":217,"end":222,"name":"limit"},"local":{"type":"Identifier","start":217,"end":222,"name":"limit"}},{"type":"ImportSpecifier","start":224,"end":235,"imported":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"},"local":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"}},{"type":"ImportSpecifier","start":237,"end":244,"imported":{"type":"Identifier","start":237,"end":244,"name":"orderBy"},"local":{"type":"Identifier","start":237,"end":244,"name":"orderBy"}},{"type":"ImportSpecifier","start":246,"end":251,"imported":{"type":"Identifier","start":246,"end":251,"name":"query"},"local":{"type":"Identifier","start":246,"end":251,"name":"query"}},{"type":"ImportSpecifier","start":253,"end":263,"imported":{"type":"Identifier","start":253,"end":263,"name":"startAfter"},"local":{"type":"Identifier","start":253,"end":263,"name":"startAfter"}},{"type":"ImportSpecifier","start":265,"end":272,"imported":{"type":"Identifier","start":265,"end":272,"name":"startAt"},"local":{"type":"Identifier","start":265,"end":272,"name":"startAt"}},{"type":"ImportSpecifier","start":274,"end":279,"imported":{"type":"Identifier","start":274,"end":279,"name":"where"},"local":{"type":"Identifier","start":274,"end":279,"name":"where"}},{"type":"ImportSpecifier","start":281,"end":291,"imported":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"},"local":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"}}],"source":{"type":"Literal","start":299,"end":319,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":322,"end":472,"specifiers":[{"type":"ImportSpecifier","start":331,"end":345,"imported":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"},"local":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"}},{"type":"ImportSpecifier","start":347,"end":360,"imported":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"},"local":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"}},{"type":"ImportSpecifier","start":362,"end":377,"imported":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"},"local":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"}},{"type":"ImportSpecifier","start":379,"end":401,"imported":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"},"local":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"}},{"type":"ImportSpecifier","start":403,"end":418,"imported":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"},"local":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"}},{"type":"ImportSpecifier","start":420,"end":434,"imported":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"},"local":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"}},{"type":"ImportSpecifier","start":436,"end":452,"imported":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"},"local":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"}}],"source":{"type":"Literal","start":460,"end":471,"value":"./helpers","raw":"'./helpers'"}},{"type":"ImportDeclaration","start":474,"end":540,"specifiers":[{"type":"ImportSpecifier","start":483,"end":498,"imported":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"},"local":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"}},{"type":"ImportSpecifier","start":500,"end":517,"imported":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"},"local":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"}}],"source":{"type":"Literal","start":525,"end":539,"value":"./drag-utils","raw":"'./drag-utils'"}},{"type":"ExportNamedDeclaration","start":619,"end":648,"declaration":{"type":"VariableDeclaration","start":626,"end":648,"declarations":[{"type":"VariableDeclarator","start":630,"end":647,"id":{"type":"Identifier","start":630,"end":647,"name":"DocNotExistAction"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":650,"end":1328,"expression":{"type":"CallExpression","start":650,"end":1327,"callee":{"type":"FunctionExpression","start":651,"end":1279,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":661,"end":678,"name":"DocNotExistAction"}],"body":{"type":"BlockStatement","start":680,"end":1279,"body":[{"type":"ExpressionStatement","start":721,"end":793,"expression":{"type":"AssignmentExpression","start":721,"end":792,"operator":"=","left":{"type":"MemberExpression","start":721,"end":776,"object":{"type":"Identifier","start":721,"end":738,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":739,"end":775,"operator":"=","left":{"type":"MemberExpression","start":739,"end":771,"object":{"type":"Identifier","start":739,"end":756,"name":"DocNotExistAction"},"property":{"type":"Literal","start":757,"end":770,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""},"computed":true,"optional":false},"right":{"type":"Literal","start":774,"end":775,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":779,"end":792,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""}}},{"type":"ExpressionStatement","start":918,"end":1006,"expression":{"type":"AssignmentExpression","start":918,"end":1005,"operator":"=","left":{"type":"MemberExpression","start":918,"end":981,"object":{"type":"Identifier","start":918,"end":935,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":936,"end":980,"operator":"=","left":{"type":"MemberExpression","start":936,"end":976,"object":{"type":"Identifier","start":936,"end":953,"name":"DocNotExistAction"},"property":{"type":"Literal","start":954,"end":975,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""},"computed":true,"optional":false},"right":{"type":"Literal","start":979,"end":980,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":984,"end":1005,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""}}},{"type":"ExpressionStatement","start":1065,"end":1127,"expression":{"type":"AssignmentExpression","start":1065,"end":1126,"operator":"=","left":{"type":"MemberExpression","start":1065,"end":1115,"object":{"type":"Identifier","start":1065,"end":1082,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1083,"end":1114,"operator":"=","left":{"type":"MemberExpression","start":1083,"end":1110,"object":{"type":"Identifier","start":1083,"end":1100,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1101,"end":1109,"value":"FILTER","raw":"\"FILTER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1113,"end":1114,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1118,"end":1126,"value":"FILTER","raw":"\"FILTER\""}}},{"type":"ExpressionStatement","start":1188,"end":1276,"expression":{"type":"AssignmentExpression","start":1188,"end":1275,"operator":"=","left":{"type":"MemberExpression","start":1188,"end":1251,"object":{"type":"Identifier","start":1188,"end":1205,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1206,"end":1250,"operator":"=","left":{"type":"MemberExpression","start":1206,"end":1246,"object":{"type":"Identifier","start":1206,"end":1223,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1224,"end":1245,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1249,"end":1250,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1254,"end":1275,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""}}}]}},"arguments":[{"type":"LogicalExpression","start":1281,"end":1326,"left":{"type":"Identifier","start":1281,"end":1298,"name":"DocNotExistAction"},"operator":"||","right":{"type":"AssignmentExpression","start":1303,"end":1325,"operator":"=","left":{"type":"Identifier","start":1303,"end":1320,"name":"DocNotExistAction"},"right":{"type":"ObjectExpression","start":1323,"end":1325,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":1368,"end":55428,"declaration":{"type":"ClassDeclaration","start":1375,"end":55428,"id":{"type":"Identifier","start":1381,"end":1398,"name":"FirestoreExtended"},"superClass":null,"body":{"type":"ClassBody","start":1399,"end":55428,"body":[{"type":"MethodDefinition","start":1682,"end":1795,"static":false,"computed":false,"key":{"type":"Identifier","start":1682,"end":1693,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1693,"end":1795,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1694,"end":1696,"name":"fs"},{"type":"AssignmentPattern","start":1698,"end":1719,"left":{"type":"Identifier","start":1698,"end":1710,"name":"defaultDocId"},"right":{"type":"Literal","start":1713,"end":1719,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":1721,"end":1795,"body":[{"type":"ExpressionStatement","start":1732,"end":1745,"expression":{"type":"AssignmentExpression","start":1732,"end":1744,"operator":"=","left":{"type":"MemberExpression","start":1732,"end":1739,"object":{"type":"ThisExpression","start":1732,"end":1736},"property":{"type":"Identifier","start":1737,"end":1739,"name":"fs"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1742,"end":1744,"name":"fs"}}},{"type":"ExpressionStatement","start":1755,"end":1788,"expression":{"type":"AssignmentExpression","start":1755,"end":1787,"operator":"=","left":{"type":"MemberExpression","start":1755,"end":1772,"object":{"type":"ThisExpression","start":1755,"end":1759},"property":{"type":"Identifier","start":1760,"end":1772,"name":"defaultDocId"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1775,"end":1787,"name":"defaultDocId"}}}]}}},{"type":"MethodDefinition","start":1801,"end":1860,"static":false,"computed":false,"key":{"type":"Identifier","start":1805,"end":1814,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":1814,"end":1860,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1817,"end":1860,"body":[{"type":"ReturnStatement","start":1828,"end":1853,"argument":{"type":"MemberExpression","start":1835,"end":1852,"object":{"type":"MemberExpression","start":1835,"end":1842,"object":{"type":"ThisExpression","start":1835,"end":1839},"property":{"type":"Identifier","start":1840,"end":1842,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1843,"end":1852,"name":"firestore"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2986,"end":3228,"static":false,"computed":false,"key":{"type":"Identifier","start":2986,"end":2999,"name":"listenForDoc$"},"kind":"method","value":{"type":"FunctionExpression","start":2999,"end":3228,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3000,"end":3006,"name":"docRef"},{"type":"AssignmentPattern","start":3008,"end":3033,"left":{"type":"Identifier","start":3008,"end":3028,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":3031,"end":3033,"elements":[]}},{"type":"AssignmentPattern","start":3035,"end":3091,"left":{"type":"Identifier","start":3035,"end":3051,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":3054,"end":3091,"object":{"type":"Identifier","start":3054,"end":3071,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":3072,"end":3091,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":3093,"end":3228,"body":[{"type":"ReturnStatement","start":3104,"end":3221,"argument":{"type":"CallExpression","start":3111,"end":3220,"callee":{"type":"MemberExpression","start":3111,"end":3201,"object":{"type":"CallExpression","start":3111,"end":3196,"callee":{"type":"MemberExpression","start":3111,"end":3148,"object":{"type":"ThisExpression","start":3111,"end":3115},"property":{"type":"Identifier","start":3116,"end":3148,"name":"listenForDocDeepRecursiveHelper$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3149,"end":3155,"name":"docRef"},{"type":"Identifier","start":3157,"end":3177,"name":"subCollectionQueries"},{"type":"Identifier","start":3179,"end":3195,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":3197,"end":3201,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3202,"end":3219,"callee":{"type":"Identifier","start":3202,"end":3205,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3206,"end":3218,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3206,"end":3210,"name":"data"}],"body":{"type":"Identifier","start":3214,"end":3218,"name":"data"}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4866,"end":5786,"static":false,"computed":false,"key":{"type":"Identifier","start":4866,"end":4886,"name":"listenForCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":4886,"end":5786,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4887,"end":4893,"name":"_query"},{"type":"AssignmentPattern","start":4895,"end":4920,"left":{"type":"Identifier","start":4895,"end":4915,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":4918,"end":4920,"elements":[]}}],"body":{"type":"BlockStatement","start":4922,"end":5786,"body":[{"type":"ReturnStatement","start":5097,"end":5779,"argument":{"type":"CallExpression","start":5104,"end":5778,"callee":{"type":"MemberExpression","start":5104,"end":5148,"object":{"type":"CallExpression","start":5104,"end":5143,"callee":{"type":"MemberExpression","start":5104,"end":5135,"object":{"type":"ThisExpression","start":5104,"end":5108},"property":{"type":"Identifier","start":5109,"end":5135,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5136,"end":5142,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":5144,"end":5148,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5149,"end":5777,"callee":{"type":"Identifier","start":5149,"end":5157,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":5158,"end":5776,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5159,"end":5164,"name":"items"}],"body":{"type":"BlockStatement","start":5169,"end":5776,"body":[{"type":"IfStatement","start":5184,"end":5273,"test":{"type":"LogicalExpression","start":5188,"end":5223,"left":{"type":"BinaryExpression","start":5188,"end":5201,"left":{"type":"Identifier","start":5188,"end":5193,"name":"items"},"operator":"==","right":{"type":"Literal","start":5197,"end":5201,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":5205,"end":5223,"left":{"type":"MemberExpression","start":5205,"end":5217,"object":{"type":"Identifier","start":5205,"end":5210,"name":"items"},"property":{"type":"Identifier","start":5211,"end":5217,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5222,"end":5223,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":5225,"end":5273,"body":[{"type":"ReturnStatement","start":5244,"end":5258,"argument":{"type":"CallExpression","start":5251,"end":5257,"callee":{"type":"Identifier","start":5251,"end":5253,"name":"of"},"arguments":[{"type":"ArrayExpression","start":5254,"end":5256,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5287,"end":5376,"test":{"type":"BinaryExpression","start":5291,"end":5323,"left":{"type":"MemberExpression","start":5291,"end":5318,"object":{"type":"Identifier","start":5291,"end":5311,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":5312,"end":5318,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":5322,"end":5323,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5325,"end":5376,"body":[{"type":"ReturnStatement","start":5344,"end":5361,"argument":{"type":"CallExpression","start":5351,"end":5360,"callee":{"type":"Identifier","start":5351,"end":5353,"name":"of"},"arguments":[{"type":"Identifier","start":5354,"end":5359,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":5390,"end":5421,"declarations":[{"type":"VariableDeclarator","start":5396,"end":5420,"id":{"type":"Identifier","start":5396,"end":5415,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":5418,"end":5420,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":5435,"end":5641,"expression":{"type":"CallExpression","start":5435,"end":5640,"callee":{"type":"MemberExpression","start":5435,"end":5448,"object":{"type":"Identifier","start":5435,"end":5440,"name":"items"},"property":{"type":"Identifier","start":5441,"end":5448,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5449,"end":5639,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5449,"end":5453,"name":"item"}],"body":{"type":"BlockStatement","start":5457,"end":5639,"body":[{"type":"VariableDeclaration","start":5476,"end":5561,"declarations":[{"type":"VariableDeclarator","start":5482,"end":5560,"id":{"type":"Identifier","start":5482,"end":5500,"name":"collectionListener"},"init":{"type":"CallExpression","start":5503,"end":5560,"callee":{"type":"MemberExpression","start":5503,"end":5532,"object":{"type":"ThisExpression","start":5503,"end":5507},"property":{"type":"Identifier","start":5508,"end":5532,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5533,"end":5537,"name":"item"},{"type":"Identifier","start":5539,"end":5559,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5579,"end":5624,"expression":{"type":"CallExpression","start":5579,"end":5623,"callee":{"type":"MemberExpression","start":5579,"end":5603,"object":{"type":"Identifier","start":5579,"end":5598,"name":"collectionListeners"},"property":{"type":"Identifier","start":5599,"end":5603,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5604,"end":5622,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":5723,"end":5765,"argument":{"type":"CallExpression","start":5730,"end":5764,"callee":{"type":"Identifier","start":5730,"end":5743,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":5744,"end":5763,"name":"collectionListeners"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5937,"end":7622,"static":false,"computed":false,"key":{"type":"Identifier","start":5937,"end":5968,"name":"listenForCollectionRecursively$"},"kind":"method","value":{"type":"FunctionExpression","start":5968,"end":7622,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5969,"end":5983,"name":"collectionPath"},{"type":"Identifier","start":5985,"end":5998,"name":"collectionKey"},{"type":"Identifier","start":6000,"end":6008,"name":"orderKey"}],"body":{"type":"BlockStatement","start":6010,"end":7622,"body":[{"type":"VariableDeclaration","start":6132,"end":6226,"declarations":[{"type":"VariableDeclarator","start":6138,"end":6225,"id":{"type":"Identifier","start":6138,"end":6153,"name":"collectionQuery"},"init":{"type":"NewExpression","start":6156,"end":6225,"callee":{"type":"Identifier","start":6160,"end":6174,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":6175,"end":6224,"callee":{"type":"Identifier","start":6175,"end":6189,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":6190,"end":6204,"name":"collectionPath"},{"type":"MemberExpression","start":6206,"end":6223,"object":{"type":"MemberExpression","start":6206,"end":6213,"object":{"type":"ThisExpression","start":6206,"end":6210},"property":{"type":"Identifier","start":6211,"end":6213,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6214,"end":6223,"name":"firestore"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":6236,"end":6318,"test":{"type":"BinaryExpression","start":6240,"end":6256,"left":{"type":"Identifier","start":6240,"end":6248,"name":"orderKey"},"operator":"!=","right":{"type":"Literal","start":6252,"end":6256,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6258,"end":6318,"body":[{"type":"ExpressionStatement","start":6273,"end":6307,"expression":{"type":"CallExpression","start":6273,"end":6306,"callee":{"type":"MemberExpression","start":6273,"end":6296,"object":{"type":"Identifier","start":6273,"end":6288,"name":"collectionQuery"},"property":{"type":"Identifier","start":6289,"end":6296,"name":"orderBy"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6297,"end":6305,"name":"orderKey"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6328,"end":7615,"argument":{"type":"CallExpression","start":6335,"end":7614,"callee":{"type":"MemberExpression","start":6335,"end":6394,"object":{"type":"CallExpression","start":6335,"end":6389,"callee":{"type":"MemberExpression","start":6335,"end":6366,"object":{"type":"ThisExpression","start":6335,"end":6339},"property":{"type":"Identifier","start":6340,"end":6366,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6367,"end":6388,"object":{"type":"Identifier","start":6367,"end":6382,"name":"collectionQuery"},"property":{"type":"Identifier","start":6383,"end":6388,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":6390,"end":6394,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6395,"end":7613,"callee":{"type":"Identifier","start":6395,"end":6403,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":6404,"end":7612,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6405,"end":6410,"name":"items"}],"body":{"type":"BlockStatement","start":6415,"end":7612,"body":[{"type":"IfStatement","start":6430,"end":6501,"test":{"type":"BinaryExpression","start":6434,"end":6451,"left":{"type":"MemberExpression","start":6434,"end":6446,"object":{"type":"Identifier","start":6434,"end":6439,"name":"items"},"property":{"type":"Identifier","start":6440,"end":6446,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6450,"end":6451,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6453,"end":6501,"body":[{"type":"ReturnStatement","start":6472,"end":6486,"argument":{"type":"CallExpression","start":6479,"end":6485,"callee":{"type":"Identifier","start":6479,"end":6481,"name":"of"},"arguments":[{"type":"ArrayExpression","start":6482,"end":6484,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":6647,"end":6671,"declarations":[{"type":"VariableDeclarator","start":6653,"end":6670,"id":{"type":"Identifier","start":6653,"end":6665,"name":"nextLevelObs"},"init":{"type":"ArrayExpression","start":6668,"end":6670,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":6685,"end":7517,"await":false,"left":{"type":"VariableDeclaration","start":6690,"end":6700,"declarations":[{"type":"VariableDeclarator","start":6696,"end":6700,"id":{"type":"Identifier","start":6696,"end":6700,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":6704,"end":6709,"name":"items"},"body":{"type":"BlockStatement","start":6711,"end":7517,"body":[{"type":"VariableDeclaration","start":6852,"end":6933,"declarations":[{"type":"VariableDeclarator","start":6858,"end":6932,"id":{"type":"Identifier","start":6858,"end":6871,"name":"nextLevelPath"},"init":{"type":"CallExpression","start":6874,"end":6932,"callee":{"type":"MemberExpression","start":6874,"end":6912,"object":{"type":"MemberExpression","start":6874,"end":6905,"object":{"type":"MemberExpression","start":6874,"end":6900,"object":{"type":"MemberExpression","start":6874,"end":6896,"object":{"type":"Identifier","start":6874,"end":6878,"name":"item"},"property":{"type":"Identifier","start":6879,"end":6896,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6897,"end":6900,"name":"ref"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6901,"end":6905,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6906,"end":6912,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6913,"end":6916,"value":"/","raw":"'/'"},{"type":"Identifier","start":6918,"end":6931,"name":"collectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6971,"end":7449,"declarations":[{"type":"VariableDeclarator","start":6977,"end":7448,"id":{"type":"Identifier","start":6977,"end":6992,"name":"nextLevelItems$"},"init":{"type":"CallExpression","start":6995,"end":7448,"callee":{"type":"MemberExpression","start":6995,"end":7076,"object":{"type":"CallExpression","start":6995,"end":7071,"callee":{"type":"MemberExpression","start":6995,"end":7031,"object":{"type":"ThisExpression","start":6995,"end":6999},"property":{"type":"Identifier","start":7000,"end":7031,"name":"listenForCollectionRecursively$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7032,"end":7045,"name":"nextLevelPath"},{"type":"Identifier","start":7047,"end":7060,"name":"collectionKey"},{"type":"Identifier","start":7062,"end":7070,"name":"orderKey"}],"optional":false},"property":{"type":"Identifier","start":7072,"end":7076,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7077,"end":7447,"callee":{"type":"Identifier","start":7077,"end":7080,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":7081,"end":7446,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7082,"end":7096,"name":"nextLevelItems"}],"body":{"type":"BlockStatement","start":7101,"end":7446,"body":[{"type":"IfStatement","start":7124,"end":7396,"test":{"type":"BinaryExpression","start":7128,"end":7153,"left":{"type":"MemberExpression","start":7128,"end":7149,"object":{"type":"Identifier","start":7128,"end":7142,"name":"nextLevelItems"},"property":{"type":"Identifier","start":7143,"end":7149,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":7152,"end":7153,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7155,"end":7288,"body":[{"type":"ReturnStatement","start":7182,"end":7265,"argument":{"type":"CallExpression","start":7189,"end":7264,"callee":{"type":"MemberExpression","start":7189,"end":7202,"object":{"type":"Identifier","start":7189,"end":7195,"name":"Object"},"property":{"type":"Identifier","start":7196,"end":7202,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7203,"end":7226,"callee":{"type":"MemberExpression","start":7203,"end":7216,"object":{"type":"Identifier","start":7203,"end":7209,"name":"Object"},"property":{"type":"Identifier","start":7210,"end":7216,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":7217,"end":7219,"properties":[]},{"type":"Identifier","start":7221,"end":7225,"name":"item"}],"optional":false},{"type":"ObjectExpression","start":7228,"end":7263,"properties":[{"type":"Property","start":7230,"end":7261,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":7231,"end":7244,"name":"collectionKey"},"value":{"type":"Identifier","start":7247,"end":7261,"name":"nextLevelItems"},"kind":"init"}]}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":7315,"end":7396,"body":[{"type":"ReturnStatement","start":7342,"end":7373,"argument":{"type":"CallExpression","start":7349,"end":7372,"callee":{"type":"MemberExpression","start":7349,"end":7362,"object":{"type":"Identifier","start":7349,"end":7355,"name":"Object"},"property":{"type":"Identifier","start":7356,"end":7362,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":7363,"end":7365,"properties":[]},{"type":"Identifier","start":7367,"end":7371,"name":"item"}],"optional":false}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7467,"end":7502,"expression":{"type":"CallExpression","start":7467,"end":7501,"callee":{"type":"MemberExpression","start":7467,"end":7484,"object":{"type":"Identifier","start":7467,"end":7479,"name":"nextLevelObs"},"property":{"type":"Identifier","start":7480,"end":7484,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7485,"end":7500,"name":"nextLevelItems$"}],"optional":false}}]}},{"type":"ReturnStatement","start":7531,"end":7601,"argument":{"type":"CallExpression","start":7538,"end":7600,"callee":{"type":"MemberExpression","start":7538,"end":7570,"object":{"type":"CallExpression","start":7538,"end":7565,"callee":{"type":"Identifier","start":7538,"end":7551,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":7552,"end":7564,"name":"nextLevelObs"}],"optional":false},"property":{"type":"Identifier","start":7566,"end":7570,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7571,"end":7599,"callee":{"type":"Identifier","start":7571,"end":7574,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":7575,"end":7598,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":7575,"end":7578,"name":"val"}],"body":{"type":"CallExpression","start":7582,"end":7598,"callee":{"type":"MemberExpression","start":7582,"end":7593,"object":{"type":"Identifier","start":7582,"end":7589,"name":"console"},"property":{"type":"Identifier","start":7590,"end":7593,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7594,"end":7597,"name":"val"}],"optional":false}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":8256,"end":15205,"static":false,"computed":false,"key":{"type":"Identifier","start":8256,"end":8260,"name":"add$"},"kind":"method","value":{"type":"FunctionExpression","start":8260,"end":15205,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8261,"end":8265,"name":"data"},{"type":"Identifier","start":8267,"end":8280,"name":"collectionRef"},{"type":"AssignmentPattern","start":8282,"end":8307,"left":{"type":"Identifier","start":8282,"end":8302,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":8305,"end":8307,"elements":[]}},{"type":"AssignmentPattern","start":8309,"end":8326,"left":{"type":"Identifier","start":8309,"end":8319,"name":"isAddDates"},"right":{"type":"Literal","start":8322,"end":8326,"value":true,"raw":"true"}},{"type":"Identifier","start":8328,"end":8333,"name":"docId"}],"body":{"type":"BlockStatement","start":8335,"end":15205,"body":[{"type":"IfStatement","start":8346,"end":8831,"test":{"type":"LogicalExpression","start":8350,"end":8413,"left":{"type":"LogicalExpression","start":8350,"end":8378,"left":{"type":"CallExpression","start":8350,"end":8369,"callee":{"type":"MemberExpression","start":8350,"end":8363,"object":{"type":"Identifier","start":8350,"end":8355,"name":"Array"},"property":{"type":"Identifier","start":8356,"end":8363,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8364,"end":8368,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":8373,"end":8378,"name":"docId"}},"operator":"&&","right":{"type":"BinaryExpression","start":8382,"end":8413,"left":{"type":"MemberExpression","start":8382,"end":8409,"object":{"type":"Identifier","start":8382,"end":8402,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":8403,"end":8409,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":8412,"end":8413,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":8415,"end":8831,"body":[{"type":"VariableDeclaration","start":8430,"end":8794,"declarations":[{"type":"VariableDeclarator","start":8436,"end":8793,"id":{"type":"Identifier","start":8436,"end":8441,"name":"error"},"init":{"type":"ObjectExpression","start":8444,"end":8793,"properties":[{"type":"Property","start":8463,"end":8514,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8463,"end":8467,"name":"name"},"value":{"type":"Literal","start":8469,"end":8514,"value":"firestoreExt/invalid-sub-collection-writers","raw":"'firestoreExt/invalid-sub-collection-writers'"},"kind":"init"},{"type":"Property","start":8533,"end":8548,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8533,"end":8537,"name":"code"},"value":{"type":"Literal","start":8539,"end":8548,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":8567,"end":8664,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8567,"end":8574,"name":"message"},"value":{"type":"Literal","start":8576,"end":8664,"value":"Cannot have both docId and subCollectionWriters at the same time when data is an array","raw":"'Cannot have both docId and subCollectionWriters at the same time when data is an array'"},"kind":"init"},{"type":"Property","start":8683,"end":8692,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8683,"end":8688,"name":"stack"},"value":{"type":"Literal","start":8690,"end":8692,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":8711,"end":8715,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8711,"end":8715,"name":"data"},"kind":"init","value":{"type":"Identifier","start":8711,"end":8715,"name":"data"}},{"type":"Property","start":8734,"end":8754,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8734,"end":8754,"name":"subCollectionWriters"},"kind":"init","value":{"type":"Identifier","start":8734,"end":8754,"name":"subCollectionWriters"}},{"type":"Property","start":8773,"end":8778,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8773,"end":8778,"name":"docId"},"kind":"init","value":{"type":"Identifier","start":8773,"end":8778,"name":"docId"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":8808,"end":8820,"argument":{"type":"Identifier","start":8814,"end":8819,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":8841,"end":8856,"declarations":[{"type":"VariableDeclarator","start":8845,"end":8855,"id":{"type":"Identifier","start":8845,"end":8855,"name":"currentDoc"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8866,"end":8890,"declarations":[{"type":"VariableDeclarator","start":8870,"end":8889,"id":{"type":"Identifier","start":8870,"end":8884,"name":"subCollections"},"init":{"type":"ObjectExpression","start":8887,"end":8889,"properties":[]}}],"kind":"let"},{"type":"IfStatement","start":9220,"end":9523,"test":{"type":"LogicalExpression","start":9224,"end":9252,"left":{"type":"CallExpression","start":9224,"end":9243,"callee":{"type":"MemberExpression","start":9224,"end":9237,"object":{"type":"Identifier","start":9224,"end":9229,"name":"Array"},"property":{"type":"Identifier","start":9230,"end":9237,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9238,"end":9242,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":9247,"end":9252,"name":"docId"}},"consequent":{"type":"BlockStatement","start":9254,"end":9298,"body":[{"type":"ExpressionStatement","start":9269,"end":9287,"expression":{"type":"AssignmentExpression","start":9269,"end":9286,"operator":"=","left":{"type":"Identifier","start":9269,"end":9279,"name":"currentDoc"},"right":{"type":"Identifier","start":9282,"end":9286,"name":"data"}}}]},"alternate":{"type":"BlockStatement","start":9313,"end":9523,"body":[{"type":"VariableDeclaration","start":9328,"end":9416,"declarations":[{"type":"VariableDeclarator","start":9334,"end":9415,"id":{"type":"Identifier","start":9334,"end":9339,"name":"split"},"init":{"type":"CallExpression","start":9342,"end":9415,"callee":{"type":"MemberExpression","start":9342,"end":9387,"object":{"type":"ThisExpression","start":9342,"end":9346},"property":{"type":"Identifier","start":9347,"end":9387,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9388,"end":9392,"name":"data"},{"type":"Identifier","start":9394,"end":9414,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9430,"end":9460,"expression":{"type":"AssignmentExpression","start":9430,"end":9459,"operator":"=","left":{"type":"Identifier","start":9430,"end":9440,"name":"currentDoc"},"right":{"type":"MemberExpression","start":9443,"end":9459,"object":{"type":"Identifier","start":9443,"end":9448,"name":"split"},"property":{"type":"Identifier","start":9449,"end":9459,"name":"currentDoc"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":9474,"end":9512,"expression":{"type":"AssignmentExpression","start":9474,"end":9511,"operator":"=","left":{"type":"Identifier","start":9474,"end":9488,"name":"subCollections"},"right":{"type":"MemberExpression","start":9491,"end":9511,"object":{"type":"Identifier","start":9491,"end":9496,"name":"split"},"property":{"type":"Identifier","start":9497,"end":9511,"name":"subCollections"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":9533,"end":15198,"argument":{"type":"CallExpression","start":9540,"end":15197,"callee":{"type":"MemberExpression","start":9540,"end":15155,"object":{"type":"CallExpression","start":9540,"end":15150,"callee":{"type":"MemberExpression","start":9540,"end":9606,"object":{"type":"CallExpression","start":9540,"end":9601,"callee":{"type":"MemberExpression","start":9540,"end":9555,"object":{"type":"ThisExpression","start":9540,"end":9544},"property":{"type":"Identifier","start":9545,"end":9555,"name":"addSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9556,"end":9566,"name":"currentDoc"},{"type":"Identifier","start":9568,"end":9581,"name":"collectionRef"},{"type":"Identifier","start":9583,"end":9593,"name":"isAddDates"},{"type":"Identifier","start":9595,"end":9600,"name":"docId"}],"optional":false},"property":{"type":"Identifier","start":9602,"end":9606,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9655,"end":15149,"callee":{"type":"Identifier","start":9655,"end":9663,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":9664,"end":15148,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9665,"end":9676,"name":"currentData"}],"body":{"type":"BlockStatement","start":9681,"end":15148,"body":[{"type":"VariableDeclaration","start":9696,"end":9707,"declarations":[{"type":"VariableDeclarator","start":9700,"end":9702,"id":{"type":"Identifier","start":9700,"end":9702,"name":"_a"},"init":null},{"type":"VariableDeclarator","start":9704,"end":9706,"id":{"type":"Identifier","start":9704,"end":9706,"name":"_b"},"init":null}],"kind":"var"},{"type":"VariableDeclaration","start":9721,"end":9743,"declarations":[{"type":"VariableDeclarator","start":9727,"end":9742,"id":{"type":"Identifier","start":9727,"end":9737,"name":"subWriters"},"init":{"type":"ArrayExpression","start":9740,"end":9742,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":9757,"end":13180,"await":false,"left":{"type":"VariableDeclaration","start":9762,"end":9806,"declarations":[{"type":"VariableDeclarator","start":9768,"end":9806,"id":{"type":"ArrayPattern","start":9768,"end":9806,"elements":[{"type":"Identifier","start":9769,"end":9785,"name":"subCollectionKey"},{"type":"Identifier","start":9787,"end":9805,"name":"subCollectionValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":9810,"end":9840,"callee":{"type":"MemberExpression","start":9810,"end":9824,"object":{"type":"Identifier","start":9810,"end":9816,"name":"Object"},"property":{"type":"Identifier","start":9817,"end":9824,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9825,"end":9839,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":9842,"end":13180,"body":[{"type":"VariableDeclaration","start":9861,"end":9889,"declarations":[{"type":"VariableDeclarator","start":9865,"end":9888,"id":{"type":"Identifier","start":9865,"end":9888,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":9947,"end":9960,"declarations":[{"type":"VariableDeclarator","start":9951,"end":9959,"id":{"type":"Identifier","start":9951,"end":9959,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9978,"end":10364,"test":{"type":"Identifier","start":9982,"end":10002,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":10004,"end":10364,"body":[{"type":"ExpressionStatement","start":10027,"end":10187,"expression":{"type":"AssignmentExpression","start":10027,"end":10186,"operator":"=","left":{"type":"Identifier","start":10027,"end":10050,"name":"subSubCollectionWriters"},"right":{"type":"ConditionalExpression","start":10053,"end":10186,"test":{"type":"LogicalExpression","start":10053,"end":10157,"left":{"type":"BinaryExpression","start":10053,"end":10140,"left":{"type":"AssignmentExpression","start":10054,"end":10130,"operator":"=","left":{"type":"Identifier","start":10054,"end":10056,"name":"_a"},"right":{"type":"CallExpression","start":10059,"end":10130,"callee":{"type":"MemberExpression","start":10059,"end":10084,"object":{"type":"Identifier","start":10059,"end":10079,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10080,"end":10084,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10085,"end":10129,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10085,"end":10092,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10096,"end":10129,"left":{"type":"MemberExpression","start":10096,"end":10108,"object":{"type":"Identifier","start":10096,"end":10103,"name":"subColl"},"property":{"type":"Identifier","start":10104,"end":10108,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10113,"end":10129,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":10136,"end":10140,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":10144,"end":10157,"left":{"type":"Identifier","start":10144,"end":10146,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":10151,"end":10157,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10156,"end":10157,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":10160,"end":10166,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10165,"end":10166,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":10169,"end":10186,"object":{"type":"Identifier","start":10169,"end":10171,"name":"_a"},"property":{"type":"Identifier","start":10172,"end":10186,"name":"subCollections"},"computed":false,"optional":false}}}},{"type":"ExpressionStatement","start":10209,"end":10345,"expression":{"type":"AssignmentExpression","start":10209,"end":10344,"operator":"=","left":{"type":"Identifier","start":10209,"end":10217,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":10220,"end":10344,"test":{"type":"LogicalExpression","start":10220,"end":10324,"left":{"type":"BinaryExpression","start":10220,"end":10307,"left":{"type":"AssignmentExpression","start":10221,"end":10297,"operator":"=","left":{"type":"Identifier","start":10221,"end":10223,"name":"_b"},"right":{"type":"CallExpression","start":10226,"end":10297,"callee":{"type":"MemberExpression","start":10226,"end":10251,"object":{"type":"Identifier","start":10226,"end":10246,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10247,"end":10251,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10252,"end":10296,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10252,"end":10259,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10263,"end":10296,"left":{"type":"MemberExpression","start":10263,"end":10275,"object":{"type":"Identifier","start":10263,"end":10270,"name":"subColl"},"property":{"type":"Identifier","start":10271,"end":10275,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10280,"end":10296,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":10303,"end":10307,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":10311,"end":10324,"left":{"type":"Identifier","start":10311,"end":10313,"name":"_b"},"operator":"===","right":{"type":"UnaryExpression","start":10318,"end":10324,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10323,"end":10324,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":10327,"end":10333,"operator":"void","prefix":true,"argument":{"type":"Literal","start":10332,"end":10333,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":10336,"end":10344,"object":{"type":"Identifier","start":10336,"end":10338,"name":"_b"},"property":{"type":"Identifier","start":10339,"end":10344,"name":"docId"},"computed":false,"optional":false}}}}]},"alternate":null},{"type":"VariableDeclaration","start":10382,"end":10477,"declarations":[{"type":"VariableDeclarator","start":10388,"end":10476,"id":{"type":"Identifier","start":10388,"end":10404,"name":"subCollectionRef"},"init":{"type":"CallExpression","start":10407,"end":10476,"callee":{"type":"Identifier","start":10407,"end":10423,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":10424,"end":10457,"object":{"type":"MemberExpression","start":10424,"end":10453,"object":{"type":"Identifier","start":10424,"end":10435,"name":"currentData"},"property":{"type":"Identifier","start":10436,"end":10453,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10454,"end":10457,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":10459,"end":10475,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10902,"end":13165,"test":{"type":"CallExpression","start":10906,"end":10939,"callee":{"type":"MemberExpression","start":10906,"end":10919,"object":{"type":"Identifier","start":10906,"end":10911,"name":"Array"},"property":{"type":"Identifier","start":10912,"end":10919,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10920,"end":10938,"name":"subCollectionValue"}],"optional":false},"consequent":{"type":"BlockStatement","start":10941,"end":12480,"body":[{"type":"IfStatement","start":10964,"end":12461,"test":{"type":"BinaryExpression","start":10968,"end":10990,"left":{"type":"Identifier","start":10968,"end":10976,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":10981,"end":10990,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":10992,"end":11622,"body":[{"type":"VariableDeclaration","start":11195,"end":11546,"declarations":[{"type":"VariableDeclarator","start":11201,"end":11545,"id":{"type":"Identifier","start":11201,"end":11210,"name":"subWriter"},"init":{"type":"CallExpression","start":11213,"end":11545,"callee":{"type":"MemberExpression","start":11213,"end":11312,"object":{"type":"CallExpression","start":11213,"end":11307,"callee":{"type":"MemberExpression","start":11213,"end":11222,"object":{"type":"ThisExpression","start":11213,"end":11217},"property":{"type":"Identifier","start":11218,"end":11222,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11223,"end":11241,"name":"subCollectionValue"},{"type":"Identifier","start":11243,"end":11259,"name":"subCollectionRef"},{"type":"Identifier","start":11261,"end":11284,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11286,"end":11296,"name":"isAddDates"},{"type":"Identifier","start":11298,"end":11306,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":11308,"end":11312,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11313,"end":11544,"callee":{"type":"Identifier","start":11313,"end":11316,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11317,"end":11543,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11317,"end":11321,"name":"item"}],"body":{"type":"BlockStatement","start":11325,"end":11543,"body":[{"type":"ReturnStatement","start":11410,"end":11456,"argument":{"type":"ObjectExpression","start":11417,"end":11455,"properties":[{"type":"Property","start":11419,"end":11440,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11419,"end":11422,"name":"key"},"value":{"type":"Identifier","start":11424,"end":11440,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11442,"end":11453,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11442,"end":11447,"name":"value"},"value":{"type":"Identifier","start":11449,"end":11453,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11572,"end":11599,"expression":{"type":"CallExpression","start":11572,"end":11598,"callee":{"type":"MemberExpression","start":11572,"end":11587,"object":{"type":"Identifier","start":11572,"end":11582,"name":"subWriters"},"property":{"type":"Identifier","start":11583,"end":11587,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11588,"end":11597,"name":"subWriter"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11649,"end":12461,"body":[{"type":"ExpressionStatement","start":11746,"end":12438,"expression":{"type":"CallExpression","start":11746,"end":12437,"callee":{"type":"MemberExpression","start":11746,"end":11772,"object":{"type":"Identifier","start":11746,"end":11764,"name":"subCollectionValue"},"property":{"type":"Identifier","start":11765,"end":11772,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11773,"end":12436,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11774,"end":11784,"name":"arrayValue"}],"body":{"type":"BlockStatement","start":11789,"end":12436,"body":[{"type":"VariableDeclaration","start":11936,"end":12352,"declarations":[{"type":"VariableDeclarator","start":11942,"end":12351,"id":{"type":"Identifier","start":11942,"end":11951,"name":"subWriter"},"init":{"type":"CallExpression","start":11954,"end":12351,"callee":{"type":"MemberExpression","start":11954,"end":12035,"object":{"type":"CallExpression","start":11954,"end":12030,"callee":{"type":"MemberExpression","start":11954,"end":11963,"object":{"type":"ThisExpression","start":11954,"end":11958},"property":{"type":"Identifier","start":11959,"end":11963,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11964,"end":11974,"name":"arrayValue"},{"type":"Identifier","start":11976,"end":11992,"name":"subCollectionRef"},{"type":"Identifier","start":11994,"end":12017,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12019,"end":12029,"name":"isAddDates"}],"optional":false},"property":{"type":"Identifier","start":12031,"end":12035,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12036,"end":12350,"callee":{"type":"Identifier","start":12036,"end":12039,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12040,"end":12349,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12040,"end":12044,"name":"item"}],"body":{"type":"BlockStatement","start":12048,"end":12349,"body":[{"type":"ReturnStatement","start":12270,"end":12318,"argument":{"type":"ObjectExpression","start":12277,"end":12317,"properties":[{"type":"Property","start":12279,"end":12300,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12279,"end":12282,"name":"key"},"value":{"type":"Identifier","start":12284,"end":12300,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12302,"end":12315,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12302,"end":12307,"name":"value"},"value":{"type":"ArrayExpression","start":12309,"end":12315,"elements":[{"type":"Identifier","start":12310,"end":12314,"name":"item"}]},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12382,"end":12409,"expression":{"type":"CallExpression","start":12382,"end":12408,"callee":{"type":"MemberExpression","start":12382,"end":12397,"object":{"type":"Identifier","start":12382,"end":12392,"name":"subWriters"},"property":{"type":"Identifier","start":12393,"end":12397,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12398,"end":12407,"name":"subWriter"}],"optional":false}}]}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":12503,"end":13165,"body":[{"type":"ExpressionStatement","start":12563,"end":12628,"expression":{"type":"AssignmentExpression","start":12563,"end":12627,"operator":"=","left":{"type":"Identifier","start":12563,"end":12571,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":12574,"end":12627,"test":{"type":"BinaryExpression","start":12574,"end":12596,"left":{"type":"Identifier","start":12574,"end":12582,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":12587,"end":12596,"name":"undefined"}},"consequent":{"type":"Identifier","start":12599,"end":12607,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":12610,"end":12627,"object":{"type":"ThisExpression","start":12610,"end":12614},"property":{"type":"Identifier","start":12615,"end":12627,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":12758,"end":13097,"declarations":[{"type":"VariableDeclarator","start":12764,"end":13096,"id":{"type":"Identifier","start":12764,"end":12773,"name":"subWriter"},"init":{"type":"CallExpression","start":12776,"end":13096,"callee":{"type":"MemberExpression","start":12776,"end":12875,"object":{"type":"CallExpression","start":12776,"end":12870,"callee":{"type":"MemberExpression","start":12776,"end":12785,"object":{"type":"ThisExpression","start":12776,"end":12780},"property":{"type":"Identifier","start":12781,"end":12785,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12786,"end":12804,"name":"subCollectionValue"},{"type":"Identifier","start":12806,"end":12822,"name":"subCollectionRef"},{"type":"Identifier","start":12824,"end":12847,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12849,"end":12859,"name":"isAddDates"},{"type":"Identifier","start":12861,"end":12869,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":12871,"end":12875,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12876,"end":13095,"callee":{"type":"Identifier","start":12876,"end":12879,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12880,"end":13094,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12880,"end":12884,"name":"item"}],"body":{"type":"BlockStatement","start":12888,"end":13094,"body":[{"type":"ReturnStatement","start":12965,"end":13011,"argument":{"type":"ObjectExpression","start":12972,"end":13010,"properties":[{"type":"Property","start":12974,"end":12995,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12974,"end":12977,"name":"key"},"value":{"type":"Identifier","start":12979,"end":12995,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12997,"end":13008,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12997,"end":13002,"name":"value"},"value":{"type":"Identifier","start":13004,"end":13008,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":13119,"end":13146,"expression":{"type":"CallExpression","start":13119,"end":13145,"callee":{"type":"MemberExpression","start":13119,"end":13134,"object":{"type":"Identifier","start":13119,"end":13129,"name":"subWriters"},"property":{"type":"Identifier","start":13130,"end":13134,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13135,"end":13144,"name":"subWriter"}],"optional":false}}]}}]}},{"type":"IfStatement","start":13217,"end":15137,"test":{"type":"BinaryExpression","start":13221,"end":13242,"left":{"type":"MemberExpression","start":13221,"end":13238,"object":{"type":"Identifier","start":13221,"end":13231,"name":"subWriters"},"property":{"type":"Identifier","start":13232,"end":13238,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":13241,"end":13242,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":13244,"end":15061,"body":[{"type":"ReturnStatement","start":13427,"end":15046,"argument":{"type":"CallExpression","start":13434,"end":15045,"callee":{"type":"MemberExpression","start":13434,"end":13464,"object":{"type":"CallExpression","start":13434,"end":13459,"callee":{"type":"Identifier","start":13434,"end":13447,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":13448,"end":13458,"name":"subWriters"}],"optional":false},"property":{"type":"Identifier","start":13460,"end":13464,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13853,"end":14828,"callee":{"type":"Identifier","start":13853,"end":13856,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":13857,"end":14827,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13858,"end":13866,"name":"docDatas"}],"body":{"type":"BlockStatement","start":13871,"end":14827,"body":[{"type":"VariableDeclaration","start":13894,"end":13917,"declarations":[{"type":"VariableDeclarator","start":13900,"end":13916,"id":{"type":"Identifier","start":13900,"end":13911,"name":"groupedData"},"init":{"type":"ObjectExpression","start":13914,"end":13916,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13939,"end":14767,"expression":{"type":"CallExpression","start":13939,"end":14766,"callee":{"type":"MemberExpression","start":13939,"end":13955,"object":{"type":"Identifier","start":13939,"end":13947,"name":"docDatas"},"property":{"type":"Identifier","start":13948,"end":13955,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13956,"end":14765,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13957,"end":13960,"name":"doc"}],"body":{"type":"BlockStatement","start":13965,"end":14765,"body":[{"type":"VariableDeclaration","start":13992,"end":14012,"declarations":[{"type":"VariableDeclarator","start":13998,"end":14011,"id":{"type":"Identifier","start":13998,"end":14001,"name":"key"},"init":{"type":"MemberExpression","start":14004,"end":14011,"object":{"type":"Identifier","start":14004,"end":14007,"name":"doc"},"property":{"type":"Identifier","start":14008,"end":14011,"name":"key"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":14038,"end":14062,"declarations":[{"type":"VariableDeclarator","start":14044,"end":14061,"id":{"type":"Identifier","start":14044,"end":14049,"name":"value"},"init":{"type":"MemberExpression","start":14052,"end":14061,"object":{"type":"Identifier","start":14052,"end":14055,"name":"doc"},"property":{"type":"Identifier","start":14056,"end":14061,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":14255,"end":14742,"test":{"type":"LogicalExpression","start":14259,"end":14325,"left":{"type":"CallExpression","start":14259,"end":14290,"callee":{"type":"MemberExpression","start":14259,"end":14285,"object":{"type":"Identifier","start":14259,"end":14270,"name":"groupedData"},"property":{"type":"Identifier","start":14271,"end":14285,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14286,"end":14289,"name":"key"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":14294,"end":14325,"callee":{"type":"MemberExpression","start":14294,"end":14307,"object":{"type":"Identifier","start":14294,"end":14299,"name":"Array"},"property":{"type":"Identifier","start":14300,"end":14307,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14308,"end":14324,"object":{"type":"Identifier","start":14308,"end":14319,"name":"groupedData"},"property":{"type":"Identifier","start":14320,"end":14323,"name":"key"},"computed":true,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":14327,"end":14585,"body":[{"type":"ExpressionStatement","start":14526,"end":14558,"expression":{"type":"CallExpression","start":14526,"end":14557,"callee":{"type":"MemberExpression","start":14526,"end":14547,"object":{"type":"MemberExpression","start":14526,"end":14542,"object":{"type":"Identifier","start":14526,"end":14537,"name":"groupedData"},"property":{"type":"Identifier","start":14538,"end":14541,"name":"key"},"computed":true,"optional":false},"property":{"type":"Identifier","start":14543,"end":14547,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14548,"end":14556,"object":{"type":"Identifier","start":14548,"end":14553,"name":"value"},"property":{"type":"Literal","start":14554,"end":14555,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14616,"end":14742,"body":[{"type":"ExpressionStatement","start":14690,"end":14715,"expression":{"type":"AssignmentExpression","start":14690,"end":14714,"operator":"=","left":{"type":"MemberExpression","start":14690,"end":14706,"object":{"type":"Identifier","start":14690,"end":14701,"name":"groupedData"},"property":{"type":"Identifier","start":14702,"end":14705,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":14709,"end":14714,"name":"value"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":14789,"end":14808,"argument":{"type":"Identifier","start":14796,"end":14807,"name":"groupedData"}}]}}],"optional":false},{"type":"CallExpression","start":14914,"end":15044,"callee":{"type":"Identifier","start":14914,"end":14917,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":14918,"end":15043,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14919,"end":14930,"name":"groupedData"}],"body":{"type":"BlockStatement","start":14935,"end":15043,"body":[{"type":"ReturnStatement","start":14958,"end":15024,"argument":{"type":"CallExpression","start":14965,"end":15023,"callee":{"type":"MemberExpression","start":14965,"end":14978,"object":{"type":"Identifier","start":14965,"end":14971,"name":"Object"},"property":{"type":"Identifier","start":14972,"end":14978,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":14979,"end":15009,"callee":{"type":"MemberExpression","start":14979,"end":14992,"object":{"type":"Identifier","start":14979,"end":14985,"name":"Object"},"property":{"type":"Identifier","start":14986,"end":14992,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":14993,"end":14995,"properties":[]},{"type":"Identifier","start":14997,"end":15008,"name":"currentData"}],"optional":false},{"type":"Identifier","start":15011,"end":15022,"name":"groupedData"}],"optional":false}}]}}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":15080,"end":15137,"body":[{"type":"ReturnStatement","start":15099,"end":15122,"argument":{"type":"CallExpression","start":15106,"end":15121,"callee":{"type":"Identifier","start":15106,"end":15108,"name":"of"},"arguments":[{"type":"Identifier","start":15109,"end":15120,"name":"currentData"}],"optional":false}}]}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":15151,"end":15155,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15189,"end":15196,"callee":{"type":"Identifier","start":15189,"end":15193,"name":"take"},"arguments":[{"type":"Literal","start":15194,"end":15195,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":15940,"end":16393,"static":false,"computed":false,"key":{"type":"Identifier","start":15940,"end":15947,"name":"update$"},"kind":"method","value":{"type":"FunctionExpression","start":15947,"end":16393,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15948,"end":15952,"name":"data"},{"type":"Identifier","start":15954,"end":15960,"name":"docRef"},{"type":"AssignmentPattern","start":15962,"end":15987,"left":{"type":"Identifier","start":15962,"end":15982,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":15985,"end":15987,"elements":[]}},{"type":"AssignmentPattern","start":15989,"end":16013,"left":{"type":"Identifier","start":15989,"end":16006,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16009,"end":16013,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16015,"end":16393,"body":[{"type":"IfStatement","start":16026,"end":16236,"test":{"type":"LogicalExpression","start":16030,"end":16095,"left":{"type":"BinaryExpression","start":16030,"end":16058,"left":{"type":"Identifier","start":16030,"end":16050,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":16054,"end":16058,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":16062,"end":16095,"left":{"type":"MemberExpression","start":16062,"end":16089,"object":{"type":"Identifier","start":16062,"end":16082,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":16083,"end":16089,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":16094,"end":16095,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":16097,"end":16236,"body":[{"type":"ReturnStatement","start":16112,"end":16171,"argument":{"type":"CallExpression","start":16119,"end":16170,"callee":{"type":"MemberExpression","start":16119,"end":16137,"object":{"type":"ThisExpression","start":16119,"end":16123},"property":{"type":"Identifier","start":16124,"end":16137,"name":"updateSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16138,"end":16142,"name":"data"},{"type":"Identifier","start":16144,"end":16150,"name":"docRef"},{"type":"Identifier","start":16152,"end":16169,"name":"isAddModifiedDate"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":16246,"end":16344,"declarations":[{"type":"VariableDeclarator","start":16252,"end":16343,"id":{"type":"Identifier","start":16252,"end":16257,"name":"batch"},"init":{"type":"CallExpression","start":16260,"end":16343,"callee":{"type":"MemberExpression","start":16260,"end":16288,"object":{"type":"ThisExpression","start":16260,"end":16264},"property":{"type":"Identifier","start":16265,"end":16288,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16289,"end":16293,"name":"data"},{"type":"Identifier","start":16295,"end":16301,"name":"docRef"},{"type":"Identifier","start":16303,"end":16323,"name":"subCollectionWriters"},{"type":"Identifier","start":16325,"end":16342,"name":"isAddModifiedDate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":16354,"end":16386,"argument":{"type":"CallExpression","start":16361,"end":16385,"callee":{"type":"MemberExpression","start":16361,"end":16378,"object":{"type":"ThisExpression","start":16361,"end":16365},"property":{"type":"Identifier","start":16366,"end":16378,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16379,"end":16384,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16670,"end":17086,"static":false,"computed":false,"key":{"type":"Identifier","start":16670,"end":16685,"name":"updateMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":16685,"end":17086,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16686,"end":16693,"name":"docRefs"},{"type":"Identifier","start":16695,"end":16699,"name":"data"},{"type":"AssignmentPattern","start":16701,"end":16725,"left":{"type":"Identifier","start":16701,"end":16718,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16721,"end":16725,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16727,"end":17086,"body":[{"type":"VariableDeclaration","start":16805,"end":16849,"declarations":[{"type":"VariableDeclarator","start":16811,"end":16848,"id":{"type":"Identifier","start":16811,"end":16816,"name":"batch"},"init":{"type":"CallExpression","start":16819,"end":16848,"callee":{"type":"Identifier","start":16819,"end":16829,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":16830,"end":16847,"object":{"type":"MemberExpression","start":16830,"end":16837,"object":{"type":"ThisExpression","start":16830,"end":16834},"property":{"type":"Identifier","start":16835,"end":16837,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16838,"end":16847,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":16859,"end":16944,"test":{"type":"Identifier","start":16863,"end":16880,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":16882,"end":16944,"body":[{"type":"ExpressionStatement","start":16897,"end":16933,"expression":{"type":"AssignmentExpression","start":16897,"end":16932,"operator":"=","left":{"type":"Identifier","start":16897,"end":16901,"name":"data"},"right":{"type":"CallExpression","start":16904,"end":16932,"callee":{"type":"Identifier","start":16904,"end":16919,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":16920,"end":16924,"name":"data"},{"type":"Literal","start":16926,"end":16931,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":16954,"end":17037,"expression":{"type":"CallExpression","start":16954,"end":17036,"callee":{"type":"MemberExpression","start":16954,"end":16969,"object":{"type":"Identifier","start":16954,"end":16961,"name":"docRefs"},"property":{"type":"Identifier","start":16962,"end":16969,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16970,"end":17035,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16971,"end":16977,"name":"docRef"}],"body":{"type":"BlockStatement","start":16982,"end":17035,"body":[{"type":"ExpressionStatement","start":16997,"end":17024,"expression":{"type":"CallExpression","start":16997,"end":17023,"callee":{"type":"MemberExpression","start":16997,"end":17009,"object":{"type":"Identifier","start":16997,"end":17002,"name":"batch"},"property":{"type":"Identifier","start":17003,"end":17009,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17010,"end":17016,"name":"docRef"},{"type":"Identifier","start":17018,"end":17022,"name":"data"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":17047,"end":17079,"argument":{"type":"CallExpression","start":17054,"end":17078,"callee":{"type":"MemberExpression","start":17054,"end":17071,"object":{"type":"ThisExpression","start":17054,"end":17058},"property":{"type":"Identifier","start":17059,"end":17071,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17072,"end":17077,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":17685,"end":18562,"static":false,"computed":false,"key":{"type":"Identifier","start":17685,"end":17697,"name":"changeDocId$"},"kind":"method","value":{"type":"FunctionExpression","start":17697,"end":18562,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17698,"end":17704,"name":"docRef"},{"type":"Identifier","start":17706,"end":17711,"name":"newId"},{"type":"AssignmentPattern","start":17713,"end":17738,"left":{"type":"Identifier","start":17713,"end":17733,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":17736,"end":17738,"elements":[]}},{"type":"Identifier","start":17740,"end":17760,"name":"subCollectionWriters"}],"body":{"type":"BlockStatement","start":17762,"end":18562,"body":[{"type":"IfStatement","start":17773,"end":17877,"test":{"type":"BinaryExpression","start":17777,"end":17805,"left":{"type":"Identifier","start":17777,"end":17797,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":17801,"end":17805,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":17807,"end":17877,"body":[{"type":"ExpressionStatement","start":17822,"end":17866,"expression":{"type":"AssignmentExpression","start":17822,"end":17865,"operator":"=","left":{"type":"Identifier","start":17822,"end":17842,"name":"subCollectionWriters"},"right":{"type":"Identifier","start":17845,"end":17865,"name":"subCollectionQueries"}}}]},"alternate":null},{"type":"VariableDeclaration","start":17887,"end":17923,"declarations":[{"type":"VariableDeclarator","start":17893,"end":17922,"id":{"type":"Identifier","start":17893,"end":17906,"name":"collectionRef"},"init":{"type":"MemberExpression","start":17909,"end":17922,"object":{"type":"Identifier","start":17909,"end":17915,"name":"docRef"},"property":{"type":"Identifier","start":17916,"end":17922,"name":"parent"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":17933,"end":18555,"argument":{"type":"CallExpression","start":17940,"end":18554,"callee":{"type":"MemberExpression","start":17940,"end":17993,"object":{"type":"CallExpression","start":17940,"end":17988,"callee":{"type":"MemberExpression","start":17940,"end":17958,"object":{"type":"ThisExpression","start":17940,"end":17944},"property":{"type":"Identifier","start":17945,"end":17958,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17959,"end":17965,"name":"docRef"},{"type":"Identifier","start":17967,"end":17987,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17989,"end":17993,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18027,"end":18034,"callee":{"type":"Identifier","start":18027,"end":18031,"name":"take"},"arguments":[{"type":"Literal","start":18032,"end":18033,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":18036,"end":18109,"callee":{"type":"Identifier","start":18036,"end":18039,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":18040,"end":18108,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":18041,"end":18048,"name":"oldData"}],"body":{"type":"CallExpression","start":18053,"end":18108,"callee":{"type":"MemberExpression","start":18053,"end":18077,"object":{"type":"ThisExpression","start":18053,"end":18057},"property":{"type":"Identifier","start":18058,"end":18077,"name":"cleanExtrasFromData"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18078,"end":18085,"name":"oldData"},{"type":"Identifier","start":18087,"end":18107,"name":"subCollectionWriters"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":18111,"end":18426,"callee":{"type":"Identifier","start":18111,"end":18120,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18121,"end":18425,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18122,"end":18129,"name":"oldData"}],"body":{"type":"BlockStatement","start":18134,"end":18425,"body":[{"type":"ReturnStatement","start":18149,"end":18414,"argument":{"type":"CallExpression","start":18156,"end":18413,"callee":{"type":"MemberExpression","start":18156,"end":18230,"object":{"type":"CallExpression","start":18156,"end":18225,"callee":{"type":"MemberExpression","start":18156,"end":18165,"object":{"type":"ThisExpression","start":18156,"end":18160},"property":{"type":"Identifier","start":18161,"end":18165,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18166,"end":18173,"name":"oldData"},{"type":"Identifier","start":18175,"end":18188,"name":"collectionRef"},{"type":"Identifier","start":18190,"end":18210,"name":"subCollectionWriters"},{"type":"Literal","start":18212,"end":18217,"value":false,"raw":"false"},{"type":"Identifier","start":18219,"end":18224,"name":"newId"}],"optional":false},"property":{"type":"Identifier","start":18226,"end":18230,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18258,"end":18412,"callee":{"type":"Identifier","start":18258,"end":18266,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18267,"end":18411,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18267,"end":18274,"name":"newData"}],"body":{"type":"BlockStatement","start":18278,"end":18411,"body":[{"type":"ReturnStatement","start":18297,"end":18396,"argument":{"type":"CallExpression","start":18304,"end":18395,"callee":{"type":"MemberExpression","start":18304,"end":18351,"object":{"type":"CallExpression","start":18304,"end":18346,"callee":{"type":"MemberExpression","start":18304,"end":18316,"object":{"type":"ThisExpression","start":18304,"end":18308},"property":{"type":"Identifier","start":18309,"end":18316,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18317,"end":18323,"name":"docRef"},{"type":"Identifier","start":18325,"end":18345,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":18347,"end":18351,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18352,"end":18370,"callee":{"type":"Identifier","start":18352,"end":18355,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":18356,"end":18369,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"Identifier","start":18362,"end":18369,"name":"newData"}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":18428,"end":18544,"callee":{"type":"Identifier","start":18428,"end":18438,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":18439,"end":18543,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18439,"end":18442,"name":"err"}],"body":{"type":"BlockStatement","start":18446,"end":18543,"body":[{"type":"ExpressionStatement","start":18461,"end":18508,"expression":{"type":"CallExpression","start":18461,"end":18507,"callee":{"type":"MemberExpression","start":18461,"end":18472,"object":{"type":"Identifier","start":18461,"end":18468,"name":"console"},"property":{"type":"Identifier","start":18469,"end":18472,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":18473,"end":18506,"left":{"type":"Literal","start":18473,"end":18500,"value":"Failed to Change Doc Id: ","raw":"'Failed to Change Doc Id: '"},"operator":"+","right":{"type":"Identifier","start":18503,"end":18506,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":18522,"end":18532,"argument":{"type":"Identifier","start":18528,"end":18531,"name":"err"}}]}}],"optional":false},{"type":"CallExpression","start":18546,"end":18553,"callee":{"type":"Identifier","start":18546,"end":18550,"name":"take"},"arguments":[{"type":"Literal","start":18551,"end":18552,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":19187,"end":20006,"static":false,"computed":false,"key":{"type":"Identifier","start":19187,"end":19203,"name":"moveItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":19203,"end":20006,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":19204,"end":19209,"name":"items"},{"type":"Identifier","start":19211,"end":19220,"name":"fromIndex"},{"type":"Identifier","start":19222,"end":19229,"name":"toIndex"},{"type":"AssignmentPattern","start":19231,"end":19246,"left":{"type":"Identifier","start":19231,"end":19238,"name":"useCopy"},"right":{"type":"Literal","start":19241,"end":19246,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":19248,"end":20006,"body":[{"type":"VariableDeclaration","start":19259,"end":19266,"declarations":[{"type":"VariableDeclarator","start":19263,"end":19265,"id":{"type":"Identifier","start":19263,"end":19265,"name":"_a"},"init":null}],"kind":"var"},{"type":"IfStatement","start":19276,"end":19435,"test":{"type":"LogicalExpression","start":19280,"end":19362,"left":{"type":"LogicalExpression","start":19280,"end":19341,"left":{"type":"LogicalExpression","start":19280,"end":19316,"left":{"type":"BinaryExpression","start":19280,"end":19297,"left":{"type":"Identifier","start":19280,"end":19289,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":19293,"end":19297,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19301,"end":19316,"left":{"type":"Identifier","start":19301,"end":19308,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":19312,"end":19316,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":19320,"end":19341,"left":{"type":"Identifier","start":19320,"end":19329,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":19334,"end":19341,"name":"toIndex"}}},"operator":"||","right":{"type":"BinaryExpression","start":19345,"end":19362,"left":{"type":"MemberExpression","start":19345,"end":19357,"object":{"type":"Identifier","start":19345,"end":19350,"name":"items"},"property":{"type":"Identifier","start":19351,"end":19357,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":19361,"end":19362,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":19364,"end":19435,"body":[{"type":"ReturnStatement","start":19412,"end":19424,"argument":{"type":"CallExpression","start":19419,"end":19423,"callee":{"type":"Identifier","start":19419,"end":19421,"name":"of"},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":19445,"end":19858,"test":{"type":"BinaryExpression","start":19449,"end":19532,"left":{"type":"ConditionalExpression","start":19450,"end":19523,"test":{"type":"LogicalExpression","start":19450,"end":19491,"left":{"type":"BinaryExpression","start":19450,"end":19474,"left":{"type":"AssignmentExpression","start":19451,"end":19464,"operator":"=","left":{"type":"Identifier","start":19451,"end":19453,"name":"_a"},"right":{"type":"MemberExpression","start":19456,"end":19464,"object":{"type":"Identifier","start":19456,"end":19461,"name":"items"},"property":{"type":"Literal","start":19462,"end":19463,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"===","right":{"type":"Literal","start":19470,"end":19474,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19478,"end":19491,"left":{"type":"Identifier","start":19478,"end":19480,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":19485,"end":19491,"operator":"void","prefix":true,"argument":{"type":"Literal","start":19490,"end":19491,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":19494,"end":19500,"operator":"void","prefix":true,"argument":{"type":"Literal","start":19499,"end":19500,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":19503,"end":19523,"object":{"type":"Identifier","start":19503,"end":19505,"name":"_a"},"property":{"type":"Identifier","start":19506,"end":19523,"name":"firestoreMetadata"},"computed":false,"optional":false}},"operator":"==","right":{"type":"Literal","start":19528,"end":19532,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":19534,"end":19858,"body":[{"type":"VariableDeclaration","start":19549,"end":19821,"declarations":[{"type":"VariableDeclarator","start":19555,"end":19820,"id":{"type":"Identifier","start":19555,"end":19560,"name":"error"},"init":{"type":"ObjectExpression","start":19563,"end":19820,"properties":[{"type":"Property","start":19582,"end":19641,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19582,"end":19586,"name":"name"},"value":{"type":"Literal","start":19588,"end":19641,"value":"firestoreExt/unable-to-change-index-of-non-document","raw":"'firestoreExt/unable-to-change-index-of-non-document'"},"kind":"init"},{"type":"Property","start":19660,"end":19677,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19660,"end":19664,"name":"code"},"value":{"type":"Literal","start":19666,"end":19677,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":19696,"end":19804,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19696,"end":19703,"name":"message"},"value":{"type":"Literal","start":19705,"end":19804,"value":"The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata","raw":"'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata'"},"kind":"init"}]}}],"kind":"const"},{"type":"ThrowStatement","start":19835,"end":19847,"argument":{"type":"Identifier","start":19841,"end":19846,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":19868,"end":19957,"declarations":[{"type":"VariableDeclarator","start":19874,"end":19956,"id":{"type":"Identifier","start":19874,"end":19879,"name":"batch"},"init":{"type":"CallExpression","start":19882,"end":19956,"callee":{"type":"MemberExpression","start":19882,"end":19920,"object":{"type":"ThisExpression","start":19882,"end":19886},"property":{"type":"Identifier","start":19887,"end":19920,"name":"getBatchFromMoveItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19921,"end":19926,"name":"items"},{"type":"Identifier","start":19928,"end":19937,"name":"fromIndex"},{"type":"Identifier","start":19939,"end":19946,"name":"toIndex"},{"type":"Identifier","start":19948,"end":19955,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":19967,"end":19999,"argument":{"type":"CallExpression","start":19974,"end":19998,"callee":{"type":"MemberExpression","start":19974,"end":19991,"object":{"type":"ThisExpression","start":19974,"end":19978},"property":{"type":"Identifier","start":19979,"end":19991,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19992,"end":19997,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":20377,"end":21435,"static":false,"computed":false,"key":{"type":"Identifier","start":20377,"end":20410,"name":"getBatchFromMoveItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":20410,"end":21435,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20411,"end":20416,"name":"items"},{"type":"Identifier","start":20418,"end":20427,"name":"fromIndex"},{"type":"Identifier","start":20429,"end":20436,"name":"toIndex"},{"type":"AssignmentPattern","start":20438,"end":20453,"left":{"type":"Identifier","start":20438,"end":20445,"name":"useCopy"},"right":{"type":"Literal","start":20448,"end":20453,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":20455,"end":21435,"body":[{"type":"VariableDeclaration","start":20466,"end":20515,"declarations":[{"type":"VariableDeclarator","start":20472,"end":20514,"id":{"type":"Identifier","start":20472,"end":20483,"name":"lowestIndex"},"init":{"type":"CallExpression","start":20486,"end":20514,"callee":{"type":"MemberExpression","start":20486,"end":20494,"object":{"type":"Identifier","start":20486,"end":20490,"name":"Math"},"property":{"type":"Identifier","start":20491,"end":20494,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20495,"end":20504,"name":"fromIndex"},{"type":"Identifier","start":20506,"end":20513,"name":"toIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20525,"end":20569,"declarations":[{"type":"VariableDeclarator","start":20531,"end":20568,"id":{"type":"Identifier","start":20531,"end":20536,"name":"batch"},"init":{"type":"CallExpression","start":20539,"end":20568,"callee":{"type":"Identifier","start":20539,"end":20549,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":20550,"end":20567,"object":{"type":"MemberExpression","start":20550,"end":20557,"object":{"type":"ThisExpression","start":20550,"end":20554},"property":{"type":"Identifier","start":20555,"end":20557,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20558,"end":20567,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20579,"end":20718,"test":{"type":"LogicalExpression","start":20583,"end":20644,"left":{"type":"LogicalExpression","start":20583,"end":20619,"left":{"type":"BinaryExpression","start":20583,"end":20600,"left":{"type":"Identifier","start":20583,"end":20592,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":20596,"end":20600,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":20604,"end":20619,"left":{"type":"Identifier","start":20604,"end":20611,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":20615,"end":20619,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":20623,"end":20644,"left":{"type":"Identifier","start":20623,"end":20632,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":20637,"end":20644,"name":"toIndex"}}},"consequent":{"type":"BlockStatement","start":20646,"end":20718,"body":[{"type":"ReturnStatement","start":20694,"end":20707,"argument":{"type":"Identifier","start":20701,"end":20706,"name":"batch"}}]},"alternate":null},{"type":"VariableDeclaration","start":20728,"end":20742,"declarations":[{"type":"VariableDeclarator","start":20732,"end":20741,"id":{"type":"Identifier","start":20732,"end":20741,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":20752,"end":20887,"test":{"type":"Identifier","start":20756,"end":20763,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":20765,"end":20828,"body":[{"type":"ExpressionStatement","start":20780,"end":20817,"expression":{"type":"AssignmentExpression","start":20780,"end":20816,"operator":"=","left":{"type":"Identifier","start":20780,"end":20789,"name":"usedItems"},"right":{"type":"CallExpression","start":20792,"end":20816,"callee":{"type":"MemberExpression","start":20792,"end":20805,"object":{"type":"Identifier","start":20792,"end":20798,"name":"Object"},"property":{"type":"Identifier","start":20799,"end":20805,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":20806,"end":20808,"elements":[]},{"type":"Identifier","start":20810,"end":20815,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":20843,"end":20887,"body":[{"type":"ExpressionStatement","start":20858,"end":20876,"expression":{"type":"AssignmentExpression","start":20858,"end":20875,"operator":"=","left":{"type":"Identifier","start":20858,"end":20867,"name":"usedItems"},"right":{"type":"Identifier","start":20870,"end":20875,"name":"items"}}}]}},{"type":"ExpressionStatement","start":20897,"end":20944,"expression":{"type":"CallExpression","start":20897,"end":20943,"callee":{"type":"Identifier","start":20897,"end":20912,"name":"moveItemInArray"},"arguments":[{"type":"Identifier","start":20913,"end":20922,"name":"usedItems"},{"type":"Identifier","start":20924,"end":20933,"name":"fromIndex"},{"type":"Identifier","start":20935,"end":20942,"name":"toIndex"}],"optional":false}},{"type":"VariableDeclaration","start":20954,"end":21009,"declarations":[{"type":"VariableDeclarator","start":20960,"end":21008,"id":{"type":"Identifier","start":20960,"end":20977,"name":"listSliceToUpdate"},"init":{"type":"CallExpression","start":20980,"end":21008,"callee":{"type":"MemberExpression","start":20980,"end":20995,"object":{"type":"Identifier","start":20980,"end":20989,"name":"usedItems"},"property":{"type":"Identifier","start":20990,"end":20995,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20996,"end":21007,"name":"lowestIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":21019,"end":21039,"declarations":[{"type":"VariableDeclarator","start":21023,"end":21038,"id":{"type":"Identifier","start":21023,"end":21024,"name":"i"},"init":{"type":"Identifier","start":21027,"end":21038,"name":"lowestIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":21049,"end":21405,"await":false,"left":{"type":"VariableDeclaration","start":21054,"end":21064,"declarations":[{"type":"VariableDeclarator","start":21060,"end":21064,"id":{"type":"Identifier","start":21060,"end":21064,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":21068,"end":21085,"name":"listSliceToUpdate"},"body":{"type":"BlockStatement","start":21087,"end":21405,"body":[{"type":"IfStatement","start":21102,"end":21241,"test":{"type":"UnaryExpression","start":21106,"end":21114,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":21107,"end":21114,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":21116,"end":21241,"body":[{"type":"ExpressionStatement","start":21211,"end":21226,"expression":{"type":"AssignmentExpression","start":21211,"end":21225,"operator":"=","left":{"type":"MemberExpression","start":21211,"end":21221,"object":{"type":"Identifier","start":21211,"end":21215,"name":"item"},"property":{"type":"Identifier","start":21216,"end":21221,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":21224,"end":21225,"name":"i"}}}]},"alternate":null},{"type":"VariableDeclaration","start":21255,"end":21330,"declarations":[{"type":"VariableDeclarator","start":21261,"end":21329,"id":{"type":"Identifier","start":21261,"end":21264,"name":"ref"},"init":{"type":"CallExpression","start":21267,"end":21329,"callee":{"type":"Identifier","start":21267,"end":21281,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":21282,"end":21309,"object":{"type":"MemberExpression","start":21282,"end":21304,"object":{"type":"Identifier","start":21282,"end":21286,"name":"item"},"property":{"type":"Identifier","start":21287,"end":21304,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21305,"end":21309,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":21311,"end":21328,"object":{"type":"MemberExpression","start":21311,"end":21318,"object":{"type":"ThisExpression","start":21311,"end":21315},"property":{"type":"Identifier","start":21316,"end":21318,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21319,"end":21328,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":21344,"end":21376,"expression":{"type":"CallExpression","start":21344,"end":21375,"callee":{"type":"MemberExpression","start":21344,"end":21356,"object":{"type":"Identifier","start":21344,"end":21349,"name":"batch"},"property":{"type":"Identifier","start":21350,"end":21356,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":21357,"end":21360,"name":"ref"},{"type":"ObjectExpression","start":21362,"end":21374,"properties":[{"type":"Property","start":21364,"end":21372,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":21364,"end":21369,"name":"index"},"value":{"type":"Identifier","start":21371,"end":21372,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":21390,"end":21394,"expression":{"type":"UpdateExpression","start":21390,"end":21393,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":21390,"end":21391,"name":"i"}}}]}},{"type":"ReturnStatement","start":21415,"end":21428,"argument":{"type":"Identifier","start":21422,"end":21427,"name":"batch"}}]}}},{"type":"MethodDefinition","start":21770,"end":22699,"static":false,"computed":false,"key":{"type":"Identifier","start":21770,"end":21795,"name":"deleteIndexedItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":21795,"end":22699,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21796,"end":21801,"name":"items"},{"type":"Identifier","start":21803,"end":21816,"name":"indexToDelete"},{"type":"AssignmentPattern","start":21818,"end":21843,"left":{"type":"Identifier","start":21818,"end":21838,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":21841,"end":21843,"elements":[]}},{"type":"AssignmentPattern","start":21845,"end":21860,"left":{"type":"Identifier","start":21845,"end":21852,"name":"useCopy"},"right":{"type":"Literal","start":21855,"end":21860,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":21862,"end":22699,"body":[{"type":"VariableDeclaration","start":21873,"end":21887,"declarations":[{"type":"VariableDeclarator","start":21877,"end":21886,"id":{"type":"Identifier","start":21877,"end":21886,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":21897,"end":22032,"test":{"type":"Identifier","start":21901,"end":21908,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":21910,"end":21973,"body":[{"type":"ExpressionStatement","start":21925,"end":21962,"expression":{"type":"AssignmentExpression","start":21925,"end":21961,"operator":"=","left":{"type":"Identifier","start":21925,"end":21934,"name":"usedItems"},"right":{"type":"CallExpression","start":21937,"end":21961,"callee":{"type":"MemberExpression","start":21937,"end":21950,"object":{"type":"Identifier","start":21937,"end":21943,"name":"Object"},"property":{"type":"Identifier","start":21944,"end":21950,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":21951,"end":21953,"elements":[]},{"type":"Identifier","start":21955,"end":21960,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":21988,"end":22032,"body":[{"type":"ExpressionStatement","start":22003,"end":22021,"expression":{"type":"AssignmentExpression","start":22003,"end":22020,"operator":"=","left":{"type":"Identifier","start":22003,"end":22012,"name":"usedItems"},"right":{"type":"Identifier","start":22015,"end":22020,"name":"items"}}}]}},{"type":"VariableDeclaration","start":22042,"end":22088,"declarations":[{"type":"VariableDeclarator","start":22048,"end":22087,"id":{"type":"Identifier","start":22048,"end":22060,"name":"itemToDelete"},"init":{"type":"MemberExpression","start":22063,"end":22087,"object":{"type":"Identifier","start":22063,"end":22072,"name":"usedItems"},"property":{"type":"Identifier","start":22073,"end":22086,"name":"indexToDelete"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":22182,"end":22692,"argument":{"type":"CallExpression","start":22189,"end":22691,"callee":{"type":"MemberExpression","start":22189,"end":22272,"object":{"type":"CallExpression","start":22189,"end":22267,"callee":{"type":"MemberExpression","start":22189,"end":22209,"object":{"type":"ThisExpression","start":22189,"end":22193},"property":{"type":"Identifier","start":22194,"end":22209,"name":"getDeleteBatch$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":22210,"end":22244,"object":{"type":"MemberExpression","start":22210,"end":22240,"object":{"type":"Identifier","start":22210,"end":22222,"name":"itemToDelete"},"property":{"type":"Identifier","start":22223,"end":22240,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":22241,"end":22244,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":22246,"end":22266,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":22268,"end":22272,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":22273,"end":22642,"callee":{"type":"Identifier","start":22273,"end":22276,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":22277,"end":22641,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22278,"end":22283,"name":"batch"}],"body":{"type":"BlockStatement","start":22288,"end":22641,"body":[{"type":"ExpressionStatement","start":22406,"end":22441,"expression":{"type":"CallExpression","start":22406,"end":22440,"callee":{"type":"MemberExpression","start":22406,"end":22420,"object":{"type":"Identifier","start":22406,"end":22415,"name":"usedItems"},"property":{"type":"Identifier","start":22416,"end":22420,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22421,"end":22439,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22421,"end":22425,"name":"item"}],"body":{"type":"MemberExpression","start":22429,"end":22439,"object":{"type":"Identifier","start":22429,"end":22433,"name":"item"},"property":{"type":"Identifier","start":22434,"end":22439,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"ExpressionStatement","start":22493,"end":22528,"expression":{"type":"CallExpression","start":22493,"end":22527,"callee":{"type":"MemberExpression","start":22493,"end":22509,"object":{"type":"Identifier","start":22493,"end":22502,"name":"usedItems"},"property":{"type":"Identifier","start":22503,"end":22509,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22510,"end":22523,"name":"indexToDelete"},{"type":"Literal","start":22525,"end":22526,"value":1,"raw":"1"}],"optional":false}},{"type":"ExpressionStatement","start":22542,"end":22603,"expression":{"type":"CallExpression","start":22542,"end":22602,"callee":{"type":"MemberExpression","start":22542,"end":22584,"object":{"type":"ThisExpression","start":22542,"end":22546},"property":{"type":"Identifier","start":22547,"end":22584,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22585,"end":22594,"name":"usedItems"},{"type":"Identifier","start":22596,"end":22601,"name":"batch"}],"optional":false}},{"type":"ReturnStatement","start":22617,"end":22630,"argument":{"type":"Identifier","start":22624,"end":22629,"name":"batch"}}]}}],"optional":false},{"type":"CallExpression","start":22644,"end":22690,"callee":{"type":"Identifier","start":22644,"end":22653,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":22654,"end":22689,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22655,"end":22660,"name":"batch"}],"body":{"type":"CallExpression","start":22665,"end":22689,"callee":{"type":"MemberExpression","start":22665,"end":22682,"object":{"type":"ThisExpression","start":22665,"end":22669},"property":{"type":"Identifier","start":22670,"end":22682,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22683,"end":22688,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":23042,"end":24710,"static":false,"computed":false,"key":{"type":"Identifier","start":23042,"end":23068,"name":"deleteIndexedItemsInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":23068,"end":24710,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23069,"end":23074,"name":"items"},{"type":"Identifier","start":23076,"end":23091,"name":"indicesToDelete"},{"type":"AssignmentPattern","start":23093,"end":23118,"left":{"type":"Identifier","start":23093,"end":23113,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":23116,"end":23118,"elements":[]}},{"type":"AssignmentPattern","start":23120,"end":23135,"left":{"type":"Identifier","start":23120,"end":23127,"name":"useCopy"},"right":{"type":"Literal","start":23130,"end":23135,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":23137,"end":24710,"body":[{"type":"VariableDeclaration","start":23148,"end":23162,"declarations":[{"type":"VariableDeclarator","start":23152,"end":23161,"id":{"type":"Identifier","start":23152,"end":23161,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":23172,"end":23307,"test":{"type":"Identifier","start":23176,"end":23183,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":23185,"end":23248,"body":[{"type":"ExpressionStatement","start":23200,"end":23237,"expression":{"type":"AssignmentExpression","start":23200,"end":23236,"operator":"=","left":{"type":"Identifier","start":23200,"end":23209,"name":"usedItems"},"right":{"type":"CallExpression","start":23212,"end":23236,"callee":{"type":"MemberExpression","start":23212,"end":23225,"object":{"type":"Identifier","start":23212,"end":23218,"name":"Object"},"property":{"type":"Identifier","start":23219,"end":23225,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":23226,"end":23228,"elements":[]},{"type":"Identifier","start":23230,"end":23235,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":23263,"end":23307,"body":[{"type":"ExpressionStatement","start":23278,"end":23296,"expression":{"type":"AssignmentExpression","start":23278,"end":23295,"operator":"=","left":{"type":"Identifier","start":23278,"end":23287,"name":"usedItems"},"right":{"type":"Identifier","start":23290,"end":23295,"name":"items"}}}]}},{"type":"ExpressionStatement","start":23317,"end":23352,"expression":{"type":"CallExpression","start":23317,"end":23351,"callee":{"type":"MemberExpression","start":23317,"end":23331,"object":{"type":"Identifier","start":23317,"end":23326,"name":"usedItems"},"property":{"type":"Identifier","start":23327,"end":23331,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23332,"end":23350,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23332,"end":23336,"name":"item"}],"body":{"type":"MemberExpression","start":23340,"end":23350,"object":{"type":"Identifier","start":23340,"end":23344,"name":"item"},"property":{"type":"Identifier","start":23345,"end":23350,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"VariableDeclaration","start":23400,"end":23536,"declarations":[{"type":"VariableDeclarator","start":23406,"end":23535,"id":{"type":"Identifier","start":23406,"end":23419,"name":"itemsToDelete"},"init":{"type":"CallExpression","start":23422,"end":23535,"callee":{"type":"MemberExpression","start":23422,"end":23438,"object":{"type":"Identifier","start":23422,"end":23431,"name":"usedItems"},"property":{"type":"Identifier","start":23432,"end":23438,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23439,"end":23534,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23440,"end":23444,"name":"item"},{"type":"Identifier","start":23446,"end":23447,"name":"i"}],"body":{"type":"BlockStatement","start":23452,"end":23534,"body":[{"type":"ReturnStatement","start":23467,"end":23523,"argument":{"type":"BinaryExpression","start":23474,"end":23522,"left":{"type":"CallExpression","start":23474,"end":23515,"callee":{"type":"MemberExpression","start":23474,"end":23499,"object":{"type":"Identifier","start":23474,"end":23489,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23490,"end":23499,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23500,"end":23514,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23500,"end":23502,"name":"_i"}],"body":{"type":"BinaryExpression","start":23506,"end":23514,"left":{"type":"Identifier","start":23506,"end":23508,"name":"_i"},"operator":"===","right":{"type":"Identifier","start":23513,"end":23514,"name":"i"}}}],"optional":false},"operator":"!==","right":{"type":"UnaryExpression","start":23520,"end":23522,"operator":"-","prefix":true,"argument":{"type":"Literal","start":23521,"end":23522,"value":1,"raw":"1"}}}}]}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23664,"end":23687,"expression":{"type":"CallExpression","start":23664,"end":23686,"callee":{"type":"MemberExpression","start":23664,"end":23684,"object":{"type":"Identifier","start":23664,"end":23679,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23680,"end":23684,"name":"sort"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ForStatement","start":23697,"end":23817,"init":{"type":"VariableDeclaration","start":23702,"end":23736,"declarations":[{"type":"VariableDeclarator","start":23706,"end":23736,"id":{"type":"Identifier","start":23706,"end":23707,"name":"i"},"init":{"type":"BinaryExpression","start":23710,"end":23736,"left":{"type":"MemberExpression","start":23710,"end":23732,"object":{"type":"Identifier","start":23710,"end":23725,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23726,"end":23732,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":23735,"end":23736,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":23738,"end":23744,"left":{"type":"Identifier","start":23738,"end":23739,"name":"i"},"operator":">=","right":{"type":"Literal","start":23743,"end":23744,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":23746,"end":23749,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":23746,"end":23747,"name":"i"}},"body":{"type":"BlockStatement","start":23751,"end":23817,"body":[{"type":"ExpressionStatement","start":23766,"end":23806,"expression":{"type":"CallExpression","start":23766,"end":23805,"callee":{"type":"MemberExpression","start":23766,"end":23782,"object":{"type":"Identifier","start":23766,"end":23775,"name":"usedItems"},"property":{"type":"Identifier","start":23776,"end":23782,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23783,"end":23801,"object":{"type":"Identifier","start":23783,"end":23798,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23799,"end":23800,"name":"i"},"computed":true,"optional":false},{"type":"Literal","start":23803,"end":23804,"value":1,"raw":"1"}],"optional":false}}]}},{"type":"VariableDeclaration","start":23827,"end":23850,"declarations":[{"type":"VariableDeclarator","start":23833,"end":23849,"id":{"type":"Identifier","start":23833,"end":23844,"name":"docRefsObs$"},"init":{"type":"ArrayExpression","start":23847,"end":23849,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":23953,"end":24173,"expression":{"type":"CallExpression","start":23953,"end":24172,"callee":{"type":"MemberExpression","start":23953,"end":23974,"object":{"type":"Identifier","start":23953,"end":23966,"name":"itemsToDelete"},"property":{"type":"Identifier","start":23967,"end":23974,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23975,"end":24171,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23975,"end":23987,"name":"itemToDelete"}],"body":{"type":"BlockStatement","start":23991,"end":24171,"body":[{"type":"VariableDeclaration","start":24006,"end":24123,"declarations":[{"type":"VariableDeclarator","start":24012,"end":24122,"id":{"type":"Identifier","start":24012,"end":24016,"name":"obs$"},"init":{"type":"CallExpression","start":24019,"end":24122,"callee":{"type":"MemberExpression","start":24019,"end":24113,"object":{"type":"CallExpression","start":24019,"end":24108,"callee":{"type":"MemberExpression","start":24019,"end":24050,"object":{"type":"ThisExpression","start":24019,"end":24023},"property":{"type":"Identifier","start":24024,"end":24050,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":24051,"end":24085,"object":{"type":"MemberExpression","start":24051,"end":24081,"object":{"type":"Identifier","start":24051,"end":24063,"name":"itemToDelete"},"property":{"type":"Identifier","start":24064,"end":24081,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24082,"end":24085,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":24087,"end":24107,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":24109,"end":24113,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24114,"end":24121,"callee":{"type":"Identifier","start":24114,"end":24118,"name":"take"},"arguments":[{"type":"Literal","start":24119,"end":24120,"value":1,"raw":"1"}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":24137,"end":24160,"expression":{"type":"CallExpression","start":24137,"end":24159,"callee":{"type":"MemberExpression","start":24137,"end":24153,"object":{"type":"Identifier","start":24137,"end":24148,"name":"docRefsObs$"},"property":{"type":"Identifier","start":24149,"end":24153,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24154,"end":24158,"name":"obs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":24183,"end":24703,"argument":{"type":"CallExpression","start":24190,"end":24702,"callee":{"type":"MemberExpression","start":24190,"end":24216,"object":{"type":"CallExpression","start":24190,"end":24211,"callee":{"type":"Identifier","start":24190,"end":24198,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":24199,"end":24210,"name":"docRefsObs$"}],"optional":false},"property":{"type":"Identifier","start":24212,"end":24216,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24217,"end":24224,"callee":{"type":"Identifier","start":24217,"end":24221,"name":"take"},"arguments":[{"type":"Literal","start":24222,"end":24223,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":24226,"end":24513,"callee":{"type":"Identifier","start":24226,"end":24229,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24230,"end":24512,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24231,"end":24244,"name":"listOfDocRefs"}],"body":{"type":"BlockStatement","start":24249,"end":24512,"body":[{"type":"VariableDeclaration","start":24344,"end":24361,"declarations":[{"type":"VariableDeclarator","start":24348,"end":24360,"id":{"type":"Identifier","start":24348,"end":24355,"name":"docRefs"},"init":{"type":"ArrayExpression","start":24358,"end":24360,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":24375,"end":24472,"expression":{"type":"CallExpression","start":24375,"end":24471,"callee":{"type":"MemberExpression","start":24375,"end":24396,"object":{"type":"Identifier","start":24375,"end":24388,"name":"listOfDocRefs"},"property":{"type":"Identifier","start":24389,"end":24396,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24397,"end":24470,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24397,"end":24401,"name":"refs"}],"body":{"type":"BlockStatement","start":24405,"end":24470,"body":[{"type":"ExpressionStatement","start":24424,"end":24455,"expression":{"type":"AssignmentExpression","start":24424,"end":24454,"operator":"=","left":{"type":"Identifier","start":24424,"end":24431,"name":"docRefs"},"right":{"type":"CallExpression","start":24434,"end":24454,"callee":{"type":"MemberExpression","start":24434,"end":24448,"object":{"type":"Identifier","start":24434,"end":24441,"name":"docRefs"},"property":{"type":"Identifier","start":24442,"end":24448,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24449,"end":24453,"name":"refs"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":24486,"end":24501,"argument":{"type":"Identifier","start":24493,"end":24500,"name":"docRefs"}}]}}],"optional":false},{"type":"CallExpression","start":24515,"end":24575,"callee":{"type":"Identifier","start":24515,"end":24518,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24519,"end":24574,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24520,"end":24527,"name":"docRefs"}],"body":{"type":"CallExpression","start":24532,"end":24574,"callee":{"type":"MemberExpression","start":24532,"end":24565,"object":{"type":"ThisExpression","start":24532,"end":24536},"property":{"type":"Identifier","start":24537,"end":24565,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24566,"end":24573,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24577,"end":24653,"callee":{"type":"Identifier","start":24577,"end":24580,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24581,"end":24652,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24582,"end":24587,"name":"batch"}],"body":{"type":"CallExpression","start":24592,"end":24652,"callee":{"type":"MemberExpression","start":24592,"end":24634,"object":{"type":"ThisExpression","start":24592,"end":24596},"property":{"type":"Identifier","start":24597,"end":24634,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24635,"end":24644,"name":"usedItems"},{"type":"Identifier","start":24646,"end":24651,"name":"batch"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24655,"end":24701,"callee":{"type":"Identifier","start":24655,"end":24664,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":24665,"end":24700,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24666,"end":24671,"name":"batch"}],"body":{"type":"CallExpression","start":24676,"end":24700,"callee":{"type":"MemberExpression","start":24676,"end":24693,"object":{"type":"ThisExpression","start":24676,"end":24680},"property":{"type":"Identifier","start":24681,"end":24693,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24694,"end":24699,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":25050,"end":25529,"static":false,"computed":false,"key":{"type":"Identifier","start":25050,"end":25087,"name":"getBatchFromUpdateIndexFromListOfDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25087,"end":25529,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25088,"end":25093,"name":"items"},{"type":"AssignmentPattern","start":25095,"end":25132,"left":{"type":"Identifier","start":25095,"end":25100,"name":"batch"},"right":{"type":"CallExpression","start":25103,"end":25132,"callee":{"type":"Identifier","start":25103,"end":25113,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":25114,"end":25131,"object":{"type":"MemberExpression","start":25114,"end":25121,"object":{"type":"ThisExpression","start":25114,"end":25118},"property":{"type":"Identifier","start":25119,"end":25121,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25122,"end":25131,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":25134,"end":25529,"body":[{"type":"ExpressionStatement","start":25145,"end":25499,"expression":{"type":"CallExpression","start":25145,"end":25498,"callee":{"type":"MemberExpression","start":25145,"end":25158,"object":{"type":"Identifier","start":25145,"end":25150,"name":"items"},"property":{"type":"Identifier","start":25151,"end":25158,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":25159,"end":25497,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25160,"end":25164,"name":"item"},{"type":"Identifier","start":25166,"end":25171,"name":"index"}],"body":{"type":"BlockStatement","start":25176,"end":25497,"body":[{"type":"IfStatement","start":25191,"end":25486,"test":{"type":"BinaryExpression","start":25195,"end":25215,"left":{"type":"MemberExpression","start":25195,"end":25205,"object":{"type":"Identifier","start":25195,"end":25199,"name":"item"},"property":{"type":"Identifier","start":25200,"end":25205,"name":"index"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":25210,"end":25215,"name":"index"}},"consequent":{"type":"BlockStatement","start":25217,"end":25486,"body":[{"type":"ExpressionStatement","start":25236,"end":25255,"expression":{"type":"AssignmentExpression","start":25236,"end":25254,"operator":"=","left":{"type":"MemberExpression","start":25236,"end":25246,"object":{"type":"Identifier","start":25236,"end":25240,"name":"item"},"property":{"type":"Identifier","start":25241,"end":25246,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":25249,"end":25254,"name":"index"}}},{"type":"VariableDeclaration","start":25349,"end":25424,"declarations":[{"type":"VariableDeclarator","start":25355,"end":25423,"id":{"type":"Identifier","start":25355,"end":25358,"name":"ref"},"init":{"type":"CallExpression","start":25361,"end":25423,"callee":{"type":"Identifier","start":25361,"end":25375,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":25376,"end":25403,"object":{"type":"MemberExpression","start":25376,"end":25398,"object":{"type":"Identifier","start":25376,"end":25380,"name":"item"},"property":{"type":"Identifier","start":25381,"end":25398,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25399,"end":25403,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":25405,"end":25422,"object":{"type":"MemberExpression","start":25405,"end":25412,"object":{"type":"ThisExpression","start":25405,"end":25409},"property":{"type":"Identifier","start":25410,"end":25412,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25413,"end":25422,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":25442,"end":25471,"expression":{"type":"CallExpression","start":25442,"end":25470,"callee":{"type":"MemberExpression","start":25442,"end":25454,"object":{"type":"Identifier","start":25442,"end":25447,"name":"batch"},"property":{"type":"Identifier","start":25448,"end":25454,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25455,"end":25458,"name":"ref"},{"type":"ObjectExpression","start":25460,"end":25469,"properties":[{"type":"Property","start":25462,"end":25467,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":25462,"end":25467,"name":"index"},"kind":"init","value":{"type":"Identifier","start":25462,"end":25467,"name":"index"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":25509,"end":25522,"argument":{"type":"Identifier","start":25516,"end":25521,"name":"batch"}}]}}},{"type":"MethodDefinition","start":25535,"end":25995,"static":false,"computed":false,"key":{"type":"Identifier","start":25535,"end":25560,"name":"transferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25560,"end":25995,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25561,"end":25574,"name":"previousArray"},{"type":"Identifier","start":25576,"end":25588,"name":"currentArray"},{"type":"Identifier","start":25590,"end":25603,"name":"previousIndex"},{"type":"Identifier","start":25605,"end":25617,"name":"currentIndex"},{"type":"Identifier","start":25619,"end":25635,"name":"currentArrayName"},{"type":"Identifier","start":25637,"end":25668,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":25670,"end":25708,"left":{"type":"Identifier","start":25670,"end":25701,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":25704,"end":25708,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":25710,"end":25725,"left":{"type":"Identifier","start":25710,"end":25717,"name":"useCopy"},"right":{"type":"Literal","start":25720,"end":25725,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":25727,"end":25995,"body":[{"type":"VariableDeclaration","start":25738,"end":25946,"declarations":[{"type":"VariableDeclarator","start":25744,"end":25945,"id":{"type":"Identifier","start":25744,"end":25749,"name":"batch"},"init":{"type":"CallExpression","start":25752,"end":25945,"callee":{"type":"MemberExpression","start":25752,"end":25794,"object":{"type":"ThisExpression","start":25752,"end":25756},"property":{"type":"Identifier","start":25757,"end":25794,"name":"getBatchFromTransferItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25795,"end":25808,"name":"previousArray"},{"type":"Identifier","start":25810,"end":25822,"name":"currentArray"},{"type":"Identifier","start":25824,"end":25837,"name":"previousIndex"},{"type":"Identifier","start":25839,"end":25851,"name":"currentIndex"},{"type":"Identifier","start":25853,"end":25869,"name":"currentArrayName"},{"type":"Identifier","start":25871,"end":25902,"name":"additionalDataUpdateOnMovedItem"},{"type":"Identifier","start":25904,"end":25935,"name":"isUpdateModifiedDateOnMovedItem"},{"type":"Identifier","start":25937,"end":25944,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":25956,"end":25988,"argument":{"type":"CallExpression","start":25963,"end":25987,"callee":{"type":"MemberExpression","start":25963,"end":25980,"object":{"type":"ThisExpression","start":25963,"end":25967},"property":{"type":"Identifier","start":25968,"end":25980,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25981,"end":25986,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":26301,"end":26696,"static":false,"computed":false,"key":{"type":"Identifier","start":26301,"end":26308,"name":"delete$"},"kind":"method","value":{"type":"FunctionExpression","start":26308,"end":26696,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26309,"end":26315,"name":"docRef"},{"type":"AssignmentPattern","start":26317,"end":26342,"left":{"type":"Identifier","start":26317,"end":26337,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26340,"end":26342,"elements":[]}}],"body":{"type":"BlockStatement","start":26344,"end":26696,"body":[{"type":"IfStatement","start":26355,"end":26538,"test":{"type":"LogicalExpression","start":26359,"end":26424,"left":{"type":"BinaryExpression","start":26359,"end":26387,"left":{"type":"Identifier","start":26359,"end":26379,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26383,"end":26387,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26391,"end":26424,"left":{"type":"MemberExpression","start":26391,"end":26418,"object":{"type":"Identifier","start":26391,"end":26411,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26412,"end":26418,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26423,"end":26424,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26426,"end":26538,"body":[{"type":"ReturnStatement","start":26497,"end":26527,"argument":{"type":"CallExpression","start":26504,"end":26526,"callee":{"type":"MemberExpression","start":26504,"end":26518,"object":{"type":"MemberExpression","start":26504,"end":26511,"object":{"type":"ThisExpression","start":26504,"end":26508},"property":{"type":"Identifier","start":26509,"end":26511,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26512,"end":26518,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26519,"end":26525,"name":"docRef"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26548,"end":26689,"argument":{"type":"CallExpression","start":26555,"end":26688,"callee":{"type":"MemberExpression","start":26555,"end":26621,"object":{"type":"CallExpression","start":26555,"end":26616,"callee":{"type":"MemberExpression","start":26555,"end":26586,"object":{"type":"ThisExpression","start":26555,"end":26559},"property":{"type":"Identifier","start":26560,"end":26586,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26587,"end":26593,"name":"docRef"},{"type":"Identifier","start":26595,"end":26615,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26617,"end":26621,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26622,"end":26687,"callee":{"type":"Identifier","start":26622,"end":26631,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":26632,"end":26686,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26633,"end":26643,"name":"docRefList"}],"body":{"type":"CallExpression","start":26648,"end":26686,"callee":{"type":"MemberExpression","start":26648,"end":26674,"object":{"type":"ThisExpression","start":26648,"end":26652},"property":{"type":"Identifier","start":26653,"end":26674,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26675,"end":26685,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27028,"end":27496,"static":false,"computed":false,"key":{"type":"Identifier","start":27028,"end":27043,"name":"getDeleteBatch$"},"kind":"method","value":{"type":"FunctionExpression","start":27043,"end":27496,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27044,"end":27050,"name":"docRef"},{"type":"AssignmentPattern","start":27052,"end":27077,"left":{"type":"Identifier","start":27052,"end":27072,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27075,"end":27077,"elements":[]}},{"type":"AssignmentPattern","start":27079,"end":27116,"left":{"type":"Identifier","start":27079,"end":27084,"name":"batch"},"right":{"type":"CallExpression","start":27087,"end":27116,"callee":{"type":"Identifier","start":27087,"end":27097,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":27098,"end":27115,"object":{"type":"MemberExpression","start":27098,"end":27105,"object":{"type":"ThisExpression","start":27098,"end":27102},"property":{"type":"Identifier","start":27103,"end":27105,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27106,"end":27115,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":27118,"end":27496,"body":[{"type":"IfStatement","start":27129,"end":27334,"test":{"type":"LogicalExpression","start":27133,"end":27198,"left":{"type":"BinaryExpression","start":27133,"end":27161,"left":{"type":"Identifier","start":27133,"end":27153,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27157,"end":27161,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27165,"end":27198,"left":{"type":"MemberExpression","start":27165,"end":27192,"object":{"type":"Identifier","start":27165,"end":27185,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":27186,"end":27192,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":27197,"end":27198,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":27200,"end":27334,"body":[{"type":"ExpressionStatement","start":27271,"end":27292,"expression":{"type":"CallExpression","start":27271,"end":27291,"callee":{"type":"MemberExpression","start":27271,"end":27283,"object":{"type":"Identifier","start":27271,"end":27276,"name":"batch"},"property":{"type":"Identifier","start":27277,"end":27283,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27284,"end":27290,"name":"docRef"}],"optional":false}},{"type":"ReturnStatement","start":27306,"end":27323,"argument":{"type":"CallExpression","start":27313,"end":27322,"callee":{"type":"Identifier","start":27313,"end":27315,"name":"of"},"arguments":[{"type":"Identifier","start":27316,"end":27321,"name":"batch"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":27344,"end":27489,"argument":{"type":"CallExpression","start":27351,"end":27488,"callee":{"type":"MemberExpression","start":27351,"end":27417,"object":{"type":"CallExpression","start":27351,"end":27412,"callee":{"type":"MemberExpression","start":27351,"end":27382,"object":{"type":"ThisExpression","start":27351,"end":27355},"property":{"type":"Identifier","start":27356,"end":27382,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27383,"end":27389,"name":"docRef"},{"type":"Identifier","start":27391,"end":27411,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":27413,"end":27417,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":27418,"end":27478,"callee":{"type":"Identifier","start":27418,"end":27421,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":27422,"end":27477,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27423,"end":27430,"name":"docRefs"}],"body":{"type":"CallExpression","start":27435,"end":27477,"callee":{"type":"MemberExpression","start":27435,"end":27468,"object":{"type":"ThisExpression","start":27435,"end":27439},"property":{"type":"Identifier","start":27440,"end":27468,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27469,"end":27476,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":27480,"end":27487,"callee":{"type":"Identifier","start":27480,"end":27484,"name":"take"},"arguments":[{"type":"Literal","start":27485,"end":27486,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27502,"end":27684,"static":false,"computed":false,"key":{"type":"Identifier","start":27502,"end":27524,"name":"deleteMultipleByPaths$"},"kind":"method","value":{"type":"FunctionExpression","start":27524,"end":27684,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27525,"end":27533,"name":"docPaths"}],"body":{"type":"BlockStatement","start":27535,"end":27684,"body":[{"type":"VariableDeclaration","start":27546,"end":27624,"declarations":[{"type":"VariableDeclarator","start":27552,"end":27623,"id":{"type":"Identifier","start":27552,"end":27559,"name":"docRefs"},"init":{"type":"CallExpression","start":27562,"end":27623,"callee":{"type":"MemberExpression","start":27562,"end":27574,"object":{"type":"Identifier","start":27562,"end":27570,"name":"docPaths"},"property":{"type":"Identifier","start":27571,"end":27574,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27575,"end":27622,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27575,"end":27579,"name":"path"}],"body":{"type":"CallExpression","start":27583,"end":27622,"callee":{"type":"Identifier","start":27583,"end":27597,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":27598,"end":27602,"name":"path"},{"type":"MemberExpression","start":27604,"end":27621,"object":{"type":"MemberExpression","start":27604,"end":27611,"object":{"type":"ThisExpression","start":27604,"end":27608},"property":{"type":"Identifier","start":27609,"end":27611,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27612,"end":27621,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":27634,"end":27677,"argument":{"type":"CallExpression","start":27641,"end":27676,"callee":{"type":"MemberExpression","start":27641,"end":27667,"object":{"type":"ThisExpression","start":27641,"end":27645},"property":{"type":"Identifier","start":27646,"end":27667,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27668,"end":27675,"name":"docRefs"}],"optional":false}}]}}},{"type":"MethodDefinition","start":27960,"end":28839,"static":false,"computed":false,"key":{"type":"Identifier","start":27960,"end":27975,"name":"deleteMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":27975,"end":28839,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27976,"end":27983,"name":"docRefs"},{"type":"AssignmentPattern","start":27985,"end":28010,"left":{"type":"Identifier","start":27985,"end":28005,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":28008,"end":28010,"elements":[]}}],"body":{"type":"BlockStatement","start":28012,"end":28839,"body":[{"type":"IfStatement","start":28023,"end":28163,"test":{"type":"LogicalExpression","start":28027,"end":28092,"left":{"type":"BinaryExpression","start":28027,"end":28055,"left":{"type":"Identifier","start":28027,"end":28047,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":28051,"end":28055,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":28059,"end":28092,"left":{"type":"MemberExpression","start":28059,"end":28086,"object":{"type":"Identifier","start":28059,"end":28079,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":28080,"end":28086,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":28091,"end":28092,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":28094,"end":28163,"body":[{"type":"ReturnStatement","start":28109,"end":28152,"argument":{"type":"CallExpression","start":28116,"end":28151,"callee":{"type":"MemberExpression","start":28116,"end":28142,"object":{"type":"ThisExpression","start":28116,"end":28120},"property":{"type":"Identifier","start":28121,"end":28142,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28143,"end":28150,"name":"docRefs"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":28173,"end":28197,"declarations":[{"type":"VariableDeclarator","start":28179,"end":28196,"id":{"type":"Identifier","start":28179,"end":28191,"name":"deepDocRefs$"},"init":{"type":"ArrayExpression","start":28194,"end":28196,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":28207,"end":28382,"expression":{"type":"CallExpression","start":28207,"end":28381,"callee":{"type":"MemberExpression","start":28207,"end":28222,"object":{"type":"Identifier","start":28207,"end":28214,"name":"docRefs"},"property":{"type":"Identifier","start":28215,"end":28222,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28223,"end":28380,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28223,"end":28229,"name":"docRef"}],"body":{"type":"BlockStatement","start":28233,"end":28380,"body":[{"type":"VariableDeclaration","start":28248,"end":28327,"declarations":[{"type":"VariableDeclarator","start":28254,"end":28326,"id":{"type":"Identifier","start":28254,"end":28262,"name":"docRefs$"},"init":{"type":"CallExpression","start":28265,"end":28326,"callee":{"type":"MemberExpression","start":28265,"end":28296,"object":{"type":"ThisExpression","start":28265,"end":28269},"property":{"type":"Identifier","start":28270,"end":28296,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28297,"end":28303,"name":"docRef"},{"type":"Identifier","start":28305,"end":28325,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":28341,"end":28369,"expression":{"type":"CallExpression","start":28341,"end":28368,"callee":{"type":"MemberExpression","start":28341,"end":28358,"object":{"type":"Identifier","start":28341,"end":28353,"name":"deepDocRefs$"},"property":{"type":"Identifier","start":28354,"end":28358,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28359,"end":28367,"name":"docRefs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":28392,"end":28832,"argument":{"type":"CallExpression","start":28399,"end":28831,"callee":{"type":"MemberExpression","start":28399,"end":28431,"object":{"type":"CallExpression","start":28399,"end":28426,"callee":{"type":"Identifier","start":28399,"end":28412,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":28413,"end":28425,"name":"deepDocRefs$"}],"optional":false},"property":{"type":"Identifier","start":28427,"end":28431,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28488,"end":28707,"callee":{"type":"Identifier","start":28488,"end":28491,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":28492,"end":28706,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28493,"end":28498,"name":"lists"}],"body":{"type":"BlockStatement","start":28503,"end":28706,"body":[{"type":"VariableDeclaration","start":28518,"end":28542,"declarations":[{"type":"VariableDeclarator","start":28522,"end":28541,"id":{"type":"Identifier","start":28522,"end":28536,"name":"mainDocRefList"},"init":{"type":"ArrayExpression","start":28539,"end":28541,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":28556,"end":28659,"expression":{"type":"CallExpression","start":28556,"end":28658,"callee":{"type":"MemberExpression","start":28556,"end":28569,"object":{"type":"Identifier","start":28556,"end":28561,"name":"lists"},"property":{"type":"Identifier","start":28562,"end":28569,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28570,"end":28657,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28570,"end":28574,"name":"list"}],"body":{"type":"BlockStatement","start":28578,"end":28657,"body":[{"type":"ExpressionStatement","start":28597,"end":28642,"expression":{"type":"AssignmentExpression","start":28597,"end":28641,"operator":"=","left":{"type":"Identifier","start":28597,"end":28611,"name":"mainDocRefList"},"right":{"type":"CallExpression","start":28614,"end":28641,"callee":{"type":"MemberExpression","start":28614,"end":28635,"object":{"type":"Identifier","start":28614,"end":28628,"name":"mainDocRefList"},"property":{"type":"Identifier","start":28629,"end":28635,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28636,"end":28640,"name":"list"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":28673,"end":28695,"argument":{"type":"Identifier","start":28680,"end":28694,"name":"mainDocRefList"}}]}}],"optional":false},{"type":"CallExpression","start":28765,"end":28830,"callee":{"type":"Identifier","start":28765,"end":28774,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28775,"end":28829,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28776,"end":28786,"name":"docRefList"}],"body":{"type":"CallExpression","start":28791,"end":28829,"callee":{"type":"MemberExpression","start":28791,"end":28817,"object":{"type":"ThisExpression","start":28791,"end":28795},"property":{"type":"Identifier","start":28796,"end":28817,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28818,"end":28828,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29177,"end":29416,"static":false,"computed":false,"key":{"type":"Identifier","start":29177,"end":29194,"name":"deleteCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":29194,"end":29416,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29195,"end":29208,"name":"collectionRef"},{"type":"AssignmentPattern","start":29210,"end":29235,"left":{"type":"Identifier","start":29210,"end":29230,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29233,"end":29235,"elements":[]}}],"body":{"type":"BlockStatement","start":29237,"end":29416,"body":[{"type":"ReturnStatement","start":29248,"end":29409,"argument":{"type":"CallExpression","start":29255,"end":29408,"callee":{"type":"MemberExpression","start":29255,"end":29399,"object":{"type":"CallExpression","start":29255,"end":29394,"callee":{"type":"MemberExpression","start":29255,"end":29341,"object":{"type":"CallExpression","start":29255,"end":29336,"callee":{"type":"MemberExpression","start":29255,"end":29299,"object":{"type":"ThisExpression","start":29255,"end":29259},"property":{"type":"Identifier","start":29260,"end":29299,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29300,"end":29313,"name":"collectionRef"},{"type":"Identifier","start":29315,"end":29335,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":29337,"end":29341,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29342,"end":29393,"callee":{"type":"Identifier","start":29342,"end":29351,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":29352,"end":29392,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":29352,"end":29359,"name":"docRefs"}],"body":{"type":"CallExpression","start":29363,"end":29392,"callee":{"type":"MemberExpression","start":29363,"end":29383,"object":{"type":"ThisExpression","start":29363,"end":29367},"property":{"type":"Identifier","start":29368,"end":29383,"name":"deleteMultiple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29384,"end":29391,"name":"docRefs"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":29395,"end":29399,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29400,"end":29407,"callee":{"type":"Identifier","start":29400,"end":29404,"name":"take"},"arguments":[{"type":"Literal","start":29405,"end":29406,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29840,"end":30029,"static":false,"computed":false,"key":{"type":"Identifier","start":29840,"end":29856,"name":"deleteDocByPath$"},"kind":"method","value":{"type":"FunctionExpression","start":29856,"end":30029,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29857,"end":29864,"name":"docPath"},{"type":"AssignmentPattern","start":29866,"end":29891,"left":{"type":"Identifier","start":29866,"end":29886,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29889,"end":29891,"elements":[]}}],"body":{"type":"BlockStatement","start":29893,"end":30029,"body":[{"type":"VariableDeclaration","start":29904,"end":29962,"declarations":[{"type":"VariableDeclarator","start":29910,"end":29961,"id":{"type":"Identifier","start":29910,"end":29916,"name":"docRef"},"init":{"type":"CallExpression","start":29919,"end":29961,"callee":{"type":"Identifier","start":29919,"end":29933,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":29934,"end":29941,"name":"docPath"},{"type":"MemberExpression","start":29943,"end":29960,"object":{"type":"MemberExpression","start":29943,"end":29950,"object":{"type":"ThisExpression","start":29943,"end":29947},"property":{"type":"Identifier","start":29948,"end":29950,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":29951,"end":29960,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":29972,"end":30022,"argument":{"type":"CallExpression","start":29979,"end":30021,"callee":{"type":"MemberExpression","start":29979,"end":29991,"object":{"type":"ThisExpression","start":29979,"end":29983},"property":{"type":"Identifier","start":29984,"end":29991,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29992,"end":29998,"name":"docRef"},{"type":"Identifier","start":30000,"end":30020,"name":"subCollectionQueries"}],"optional":false}}]}}},{"type":"MethodDefinition","start":30383,"end":30834,"static":false,"computed":false,"key":{"type":"Identifier","start":30383,"end":30394,"name":"deleteItem$"},"kind":"method","value":{"type":"FunctionExpression","start":30394,"end":30834,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30395,"end":30399,"name":"item"},{"type":"AssignmentPattern","start":30401,"end":30426,"left":{"type":"Identifier","start":30401,"end":30421,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":30424,"end":30426,"elements":[]}}],"body":{"type":"BlockStatement","start":30428,"end":30834,"body":[{"type":"VariableDeclaration","start":30439,"end":30518,"declarations":[{"type":"VariableDeclarator","start":30445,"end":30517,"id":{"type":"Identifier","start":30445,"end":30452,"name":"docRefs"},"init":{"type":"CallExpression","start":30455,"end":30517,"callee":{"type":"MemberExpression","start":30455,"end":30489,"object":{"type":"ThisExpression","start":30455,"end":30459},"property":{"type":"Identifier","start":30460,"end":30489,"name":"getDocumentReferencesFromItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30490,"end":30494,"name":"item"},{"type":"Identifier","start":30496,"end":30516,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":30528,"end":30827,"argument":{"type":"CallExpression","start":30535,"end":30826,"callee":{"type":"MemberExpression","start":30535,"end":30575,"object":{"type":"CallExpression","start":30535,"end":30570,"callee":{"type":"MemberExpression","start":30535,"end":30561,"object":{"type":"ThisExpression","start":30535,"end":30539},"property":{"type":"Identifier","start":30540,"end":30561,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30562,"end":30569,"name":"docRefs"}],"optional":false},"property":{"type":"Identifier","start":30571,"end":30575,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30818,"end":30825,"callee":{"type":"Identifier","start":30818,"end":30822,"name":"take"},"arguments":[{"type":"Literal","start":30823,"end":30824,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":30840,"end":31502,"static":false,"computed":false,"key":{"type":"Identifier","start":30840,"end":30859,"name":"cleanExtrasFromData"},"kind":"method","value":{"type":"FunctionExpression","start":30859,"end":31502,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30860,"end":30864,"name":"data"},{"type":"AssignmentPattern","start":30866,"end":30891,"left":{"type":"Identifier","start":30866,"end":30886,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":30889,"end":30891,"elements":[]}},{"type":"AssignmentPattern","start":30893,"end":30922,"left":{"type":"Identifier","start":30893,"end":30917,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":30920,"end":30922,"elements":[]}}],"body":{"type":"BlockStatement","start":30924,"end":31502,"body":[{"type":"IfStatement","start":31078,"end":31495,"test":{"type":"CallExpression","start":31082,"end":31101,"callee":{"type":"MemberExpression","start":31082,"end":31095,"object":{"type":"Identifier","start":31082,"end":31087,"name":"Array"},"property":{"type":"Identifier","start":31088,"end":31095,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31096,"end":31100,"name":"data"}],"optional":false},"consequent":{"type":"BlockStatement","start":31103,"end":31356,"body":[{"type":"VariableDeclaration","start":31118,"end":31140,"declarations":[{"type":"VariableDeclarator","start":31124,"end":31139,"id":{"type":"Identifier","start":31124,"end":31134,"name":"cleanDatas"},"init":{"type":"ArrayExpression","start":31137,"end":31139,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":31154,"end":31313,"expression":{"type":"CallExpression","start":31154,"end":31312,"callee":{"type":"MemberExpression","start":31154,"end":31166,"object":{"type":"Identifier","start":31154,"end":31158,"name":"data"},"property":{"type":"Identifier","start":31159,"end":31166,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":31167,"end":31311,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31167,"end":31168,"name":"d"}],"body":{"type":"BlockStatement","start":31172,"end":31311,"body":[{"type":"ExpressionStatement","start":31191,"end":31296,"expression":{"type":"CallExpression","start":31191,"end":31295,"callee":{"type":"MemberExpression","start":31191,"end":31206,"object":{"type":"Identifier","start":31191,"end":31201,"name":"cleanDatas"},"property":{"type":"Identifier","start":31202,"end":31206,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":31207,"end":31294,"callee":{"type":"MemberExpression","start":31207,"end":31243,"object":{"type":"ThisExpression","start":31207,"end":31211},"property":{"type":"Identifier","start":31212,"end":31243,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31244,"end":31245,"name":"d"},{"type":"Identifier","start":31247,"end":31267,"name":"subCollectionWriters"},{"type":"Identifier","start":31269,"end":31293,"name":"additionalFieldsToRemove"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":31327,"end":31345,"argument":{"type":"Identifier","start":31334,"end":31344,"name":"cleanDatas"}}]},"alternate":{"type":"BlockStatement","start":31371,"end":31495,"body":[{"type":"ReturnStatement","start":31386,"end":31484,"argument":{"type":"CallExpression","start":31393,"end":31483,"callee":{"type":"MemberExpression","start":31393,"end":31429,"object":{"type":"ThisExpression","start":31393,"end":31397},"property":{"type":"Identifier","start":31398,"end":31429,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31430,"end":31434,"name":"data"},{"type":"Identifier","start":31436,"end":31456,"name":"subCollectionWriters"},{"type":"Identifier","start":31458,"end":31482,"name":"additionalFieldsToRemove"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":32035,"end":33732,"static":false,"computed":false,"key":{"type":"Identifier","start":32035,"end":32054,"name":"listenForDocSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":32054,"end":33732,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32055,"end":32061,"name":"docRef"},{"type":"AssignmentPattern","start":32063,"end":32119,"left":{"type":"Identifier","start":32063,"end":32079,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":32082,"end":32119,"object":{"type":"Identifier","start":32082,"end":32099,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32100,"end":32119,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":32121,"end":33732,"body":[{"type":"ReturnStatement","start":32132,"end":33725,"argument":{"type":"CallExpression","start":32139,"end":33724,"callee":{"type":"MemberExpression","start":32139,"end":32163,"object":{"type":"CallExpression","start":32139,"end":32158,"callee":{"type":"MemberExpression","start":32139,"end":32150,"object":{"type":"MemberExpression","start":32139,"end":32146,"object":{"type":"ThisExpression","start":32139,"end":32143},"property":{"type":"Identifier","start":32144,"end":32146,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":32147,"end":32150,"name":"doc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":32151,"end":32157,"name":"docRef"}],"optional":false},"property":{"type":"Identifier","start":32159,"end":32163,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":32164,"end":32612,"callee":{"type":"Identifier","start":32164,"end":32167,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":32168,"end":32611,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32169,"end":32177,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32182,"end":32611,"body":[{"type":"IfStatement","start":32197,"end":32600,"test":{"type":"LogicalExpression","start":32201,"end":32281,"left":{"type":"UnaryExpression","start":32201,"end":32219,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":32202,"end":32219,"callee":{"type":"MemberExpression","start":32202,"end":32217,"object":{"type":"Identifier","start":32202,"end":32210,"name":"snapshot"},"property":{"type":"Identifier","start":32211,"end":32217,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":32223,"end":32281,"left":{"type":"Identifier","start":32223,"end":32239,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32244,"end":32281,"object":{"type":"Identifier","start":32244,"end":32261,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32262,"end":32281,"name":"THROW_DOC_NOT_FOUND"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32283,"end":32600,"body":[{"type":"VariableDeclaration","start":32302,"end":32555,"declarations":[{"type":"VariableDeclarator","start":32308,"end":32554,"id":{"type":"Identifier","start":32308,"end":32313,"name":"error"},"init":{"type":"ObjectExpression","start":32316,"end":32554,"properties":[{"type":"Property","start":32339,"end":32363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32339,"end":32343,"name":"name"},"value":{"type":"Literal","start":32345,"end":32363,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":32386,"end":32403,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32386,"end":32390,"name":"code"},"value":{"type":"Literal","start":32392,"end":32403,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":32426,"end":32506,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32426,"end":32433,"name":"message"},"value":{"type":"Literal","start":32435,"end":32506,"value":"Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND","raw":"'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND'"},"kind":"init"},{"type":"Property","start":32529,"end":32535,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32529,"end":32535,"name":"docRef"},"kind":"init","value":{"type":"Identifier","start":32529,"end":32535,"name":"docRef"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":32573,"end":32585,"argument":{"type":"Identifier","start":32579,"end":32584,"name":"error"}}]},"alternate":null}]}}],"optional":false},{"type":"CallExpression","start":32614,"end":32739,"callee":{"type":"Identifier","start":32614,"end":32620,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":32621,"end":32738,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32622,"end":32630,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32635,"end":32738,"body":[{"type":"ReturnStatement","start":32650,"end":32727,"argument":{"type":"UnaryExpression","start":32657,"end":32726,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":32659,"end":32725,"left":{"type":"CallExpression","start":32659,"end":32676,"callee":{"type":"MemberExpression","start":32659,"end":32674,"object":{"type":"Identifier","start":32659,"end":32667,"name":"snapshot"},"property":{"type":"Identifier","start":32668,"end":32674,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":32680,"end":32725,"left":{"type":"Identifier","start":32680,"end":32696,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32701,"end":32725,"object":{"type":"Identifier","start":32701,"end":32718,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32719,"end":32725,"name":"FILTER"},"computed":false,"optional":false}}}}}]}}],"optional":false},{"type":"CallExpression","start":32741,"end":33527,"callee":{"type":"Identifier","start":32741,"end":32744,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32745,"end":33526,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32746,"end":32754,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32759,"end":33526,"body":[{"type":"ExpressionStatement","start":32774,"end":32805,"expression":{"type":"CallExpression","start":32774,"end":32804,"callee":{"type":"MemberExpression","start":32774,"end":32785,"object":{"type":"Identifier","start":32774,"end":32781,"name":"console"},"property":{"type":"Identifier","start":32782,"end":32785,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":32786,"end":32803,"callee":{"type":"MemberExpression","start":32786,"end":32801,"object":{"type":"Identifier","start":32786,"end":32794,"name":"snapshot"},"property":{"type":"Identifier","start":32795,"end":32801,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":32819,"end":33489,"test":{"type":"LogicalExpression","start":32823,"end":32902,"left":{"type":"CallExpression","start":32823,"end":32840,"callee":{"type":"MemberExpression","start":32823,"end":32838,"object":{"type":"Identifier","start":32823,"end":32831,"name":"snapshot"},"property":{"type":"Identifier","start":32832,"end":32838,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":32844,"end":32902,"left":{"type":"Identifier","start":32844,"end":32860,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32865,"end":32902,"object":{"type":"Identifier","start":32865,"end":32882,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32883,"end":32902,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32904,"end":33344,"body":[{"type":"VariableDeclaration","start":32923,"end":32952,"declarations":[{"type":"VariableDeclarator","start":32929,"end":32951,"id":{"type":"Identifier","start":32929,"end":32933,"name":"data"},"init":{"type":"CallExpression","start":32936,"end":32951,"callee":{"type":"MemberExpression","start":32936,"end":32949,"object":{"type":"Identifier","start":32936,"end":32944,"name":"snapshot"},"property":{"type":"Identifier","start":32945,"end":32949,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":32970,"end":33242,"declarations":[{"type":"VariableDeclarator","start":32976,"end":33241,"id":{"type":"Identifier","start":32976,"end":32993,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":32996,"end":33241,"properties":[{"type":"Property","start":33019,"end":33034,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33019,"end":33021,"name":"id"},"value":{"type":"MemberExpression","start":33023,"end":33034,"object":{"type":"Identifier","start":33023,"end":33031,"name":"snapshot"},"property":{"type":"Identifier","start":33032,"end":33034,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":33057,"end":33074,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33057,"end":33060,"name":"ref"},"value":{"type":"MemberExpression","start":33062,"end":33074,"object":{"type":"Identifier","start":33062,"end":33070,"name":"snapshot"},"property":{"type":"Identifier","start":33071,"end":33074,"name":"ref"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":33097,"end":33114,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33097,"end":33101,"name":"path"},"value":{"type":"MemberExpression","start":33103,"end":33114,"object":{"type":"Identifier","start":33103,"end":33109,"name":"docRef"},"property":{"type":"Identifier","start":33110,"end":33114,"name":"path"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":33137,"end":33164,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33137,"end":33145,"name":"isExists"},"value":{"type":"CallExpression","start":33147,"end":33164,"callee":{"type":"MemberExpression","start":33147,"end":33162,"object":{"type":"Identifier","start":33147,"end":33155,"name":"snapshot"},"property":{"type":"Identifier","start":33156,"end":33162,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":33187,"end":33222,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":33187,"end":33203,"name":"snapshotMetadata"},"value":{"type":"MemberExpression","start":33205,"end":33222,"object":{"type":"Identifier","start":33205,"end":33213,"name":"snapshot"},"property":{"type":"Identifier","start":33214,"end":33222,"name":"metadata"},"computed":false,"optional":false},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":33260,"end":33329,"argument":{"type":"CallExpression","start":33267,"end":33328,"callee":{"type":"MemberExpression","start":33267,"end":33280,"object":{"type":"Identifier","start":33267,"end":33273,"name":"Object"},"property":{"type":"Identifier","start":33274,"end":33280,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":33281,"end":33304,"callee":{"type":"MemberExpression","start":33281,"end":33294,"object":{"type":"Identifier","start":33281,"end":33287,"name":"Object"},"property":{"type":"Identifier","start":33288,"end":33294,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":33295,"end":33297,"properties":[]},{"type":"Identifier","start":33299,"end":33303,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":33306,"end":33327,"properties":[{"type":"Property","start":33308,"end":33325,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":33308,"end":33325,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":33308,"end":33325,"name":"firestoreMetadata"}}]}],"optional":false}}]},"alternate":{"type":"IfStatement","start":33363,"end":33489,"test":{"type":"BinaryExpression","start":33367,"end":33417,"left":{"type":"Identifier","start":33367,"end":33383,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":33388,"end":33417,"object":{"type":"Identifier","start":33388,"end":33405,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":33406,"end":33417,"name":"RETURN_NULL"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":33419,"end":33489,"body":[{"type":"ReturnStatement","start":33462,"end":33474,"argument":{"type":"Literal","start":33469,"end":33473,"value":null,"raw":"null"}}]},"alternate":null}},{"type":"ReturnStatement","start":33503,"end":33515,"argument":{"type":"Literal","start":33510,"end":33514,"value":null,"raw":"null"}}]}}],"optional":false},{"type":"CallExpression","start":33529,"end":33723,"callee":{"type":"Identifier","start":33529,"end":33532,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33533,"end":33722,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33534,"end":33538,"name":"data"}],"body":{"type":"BlockStatement","start":33543,"end":33722,"body":[{"type":"IfStatement","start":33558,"end":33711,"test":{"type":"BinaryExpression","start":33562,"end":33574,"left":{"type":"Identifier","start":33562,"end":33566,"name":"data"},"operator":"!=","right":{"type":"Literal","start":33570,"end":33574,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":33576,"end":33646,"body":[{"type":"ReturnStatement","start":33595,"end":33631,"argument":{"type":"CallExpression","start":33602,"end":33630,"callee":{"type":"Identifier","start":33602,"end":33624,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":33625,"end":33629,"name":"data"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":33665,"end":33711,"body":[{"type":"ReturnStatement","start":33684,"end":33696,"argument":{"type":"Identifier","start":33691,"end":33695,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":33998,"end":35003,"static":false,"computed":false,"key":{"type":"Identifier","start":33998,"end":34024,"name":"listenForCollectionSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":34024,"end":35003,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34025,"end":34031,"name":"_query"}],"body":{"type":"BlockStatement","start":34033,"end":35003,"body":[{"type":"ReturnStatement","start":34208,"end":34996,"argument":{"type":"CallExpression","start":34215,"end":34995,"callee":{"type":"MemberExpression","start":34215,"end":34246,"object":{"type":"CallExpression","start":34215,"end":34241,"callee":{"type":"MemberExpression","start":34215,"end":34233,"object":{"type":"MemberExpression","start":34215,"end":34222,"object":{"type":"ThisExpression","start":34215,"end":34219},"property":{"type":"Identifier","start":34220,"end":34222,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34223,"end":34233,"name":"collection"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":34234,"end":34240,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":34242,"end":34246,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":34247,"end":34876,"callee":{"type":"Identifier","start":34247,"end":34250,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34251,"end":34875,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34252,"end":34256,"name":"snap"}],"body":{"type":"BlockStatement","start":34261,"end":34875,"body":[{"type":"ReturnStatement","start":34276,"end":34864,"argument":{"type":"CallExpression","start":34283,"end":34863,"callee":{"type":"MemberExpression","start":34283,"end":34296,"object":{"type":"MemberExpression","start":34283,"end":34292,"object":{"type":"Identifier","start":34283,"end":34287,"name":"snap"},"property":{"type":"Identifier","start":34288,"end":34292,"name":"docs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34293,"end":34296,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34297,"end":34862,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34297,"end":34305,"name":"snapshot"}],"body":{"type":"BlockStatement","start":34309,"end":34862,"body":[{"type":"VariableDeclaration","start":34328,"end":34357,"declarations":[{"type":"VariableDeclarator","start":34334,"end":34356,"id":{"type":"Identifier","start":34334,"end":34338,"name":"data"},"init":{"type":"CallExpression","start":34341,"end":34356,"callee":{"type":"MemberExpression","start":34341,"end":34354,"object":{"type":"Identifier","start":34341,"end":34349,"name":"snapshot"},"property":{"type":"Identifier","start":34350,"end":34354,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34375,"end":34398,"declarations":[{"type":"VariableDeclarator","start":34381,"end":34397,"id":{"type":"Identifier","start":34381,"end":34383,"name":"id"},"init":{"type":"MemberExpression","start":34386,"end":34397,"object":{"type":"Identifier","start":34386,"end":34394,"name":"snapshot"},"property":{"type":"Identifier","start":34395,"end":34397,"name":"id"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34416,"end":34441,"declarations":[{"type":"VariableDeclarator","start":34422,"end":34440,"id":{"type":"Identifier","start":34422,"end":34425,"name":"ref"},"init":{"type":"MemberExpression","start":34428,"end":34440,"object":{"type":"Identifier","start":34428,"end":34436,"name":"snapshot"},"property":{"type":"Identifier","start":34437,"end":34440,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34459,"end":34481,"declarations":[{"type":"VariableDeclarator","start":34465,"end":34480,"id":{"type":"Identifier","start":34465,"end":34469,"name":"path"},"init":{"type":"MemberExpression","start":34472,"end":34480,"object":{"type":"Identifier","start":34472,"end":34475,"name":"ref"},"property":{"type":"Identifier","start":34476,"end":34480,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34499,"end":34542,"declarations":[{"type":"VariableDeclarator","start":34505,"end":34541,"id":{"type":"Identifier","start":34505,"end":34521,"name":"snapshotMetadata"},"init":{"type":"MemberExpression","start":34524,"end":34541,"object":{"type":"Identifier","start":34524,"end":34532,"name":"snapshot"},"property":{"type":"Identifier","start":34533,"end":34541,"name":"metadata"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34560,"end":34760,"declarations":[{"type":"VariableDeclarator","start":34566,"end":34759,"id":{"type":"Identifier","start":34566,"end":34583,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":34586,"end":34759,"properties":[{"type":"Property","start":34609,"end":34611,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34609,"end":34611,"name":"id"},"kind":"init","value":{"type":"Identifier","start":34609,"end":34611,"name":"id"}},{"type":"Property","start":34634,"end":34638,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34634,"end":34638,"name":"path"},"kind":"init","value":{"type":"Identifier","start":34634,"end":34638,"name":"path"}},{"type":"Property","start":34661,"end":34664,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34661,"end":34664,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":34661,"end":34664,"name":"ref"}},{"type":"Property","start":34687,"end":34703,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34687,"end":34703,"name":"snapshotMetadata"},"kind":"init","value":{"type":"Identifier","start":34687,"end":34703,"name":"snapshotMetadata"}},{"type":"Property","start":34726,"end":34740,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":34726,"end":34734,"name":"isExists"},"value":{"type":"Literal","start":34736,"end":34740,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":34778,"end":34847,"argument":{"type":"CallExpression","start":34785,"end":34846,"callee":{"type":"MemberExpression","start":34785,"end":34798,"object":{"type":"Identifier","start":34785,"end":34791,"name":"Object"},"property":{"type":"Identifier","start":34792,"end":34798,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":34799,"end":34822,"callee":{"type":"MemberExpression","start":34799,"end":34812,"object":{"type":"Identifier","start":34799,"end":34805,"name":"Object"},"property":{"type":"Identifier","start":34806,"end":34812,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":34813,"end":34815,"properties":[]},{"type":"Identifier","start":34817,"end":34821,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":34824,"end":34845,"properties":[{"type":"Property","start":34826,"end":34843,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34826,"end":34843,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":34826,"end":34843,"name":"firestoreMetadata"}}]}],"optional":false}}]}}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":34878,"end":34994,"callee":{"type":"Identifier","start":34878,"end":34881,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34882,"end":34993,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":34883,"end":34888,"name":"datas"}],"body":{"type":"CallExpression","start":34893,"end":34993,"callee":{"type":"MemberExpression","start":34893,"end":34902,"object":{"type":"Identifier","start":34893,"end":34898,"name":"datas"},"property":{"type":"Identifier","start":34899,"end":34902,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34903,"end":34992,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34903,"end":34907,"name":"data"}],"body":{"type":"BlockStatement","start":34911,"end":34992,"body":[{"type":"ExpressionStatement","start":34926,"end":34955,"expression":{"type":"CallExpression","start":34926,"end":34954,"callee":{"type":"Identifier","start":34926,"end":34948,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":34949,"end":34953,"name":"data"}],"optional":false}},{"type":"ReturnStatement","start":34969,"end":34981,"argument":{"type":"Identifier","start":34976,"end":34980,"name":"data"}}]}}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":35285,"end":39083,"static":false,"computed":false,"key":{"type":"Identifier","start":35285,"end":35309,"name":"listenForCollectionsDeep"},"kind":"method","value":{"type":"FunctionExpression","start":35309,"end":39083,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35310,"end":35314,"name":"item"},{"type":"AssignmentPattern","start":35316,"end":35341,"left":{"type":"Identifier","start":35316,"end":35336,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":35339,"end":35341,"elements":[]}}],"body":{"type":"BlockStatement","start":35343,"end":39083,"body":[{"type":"IfStatement","start":35354,"end":35416,"test":{"type":"BinaryExpression","start":35358,"end":35370,"left":{"type":"Identifier","start":35358,"end":35362,"name":"item"},"operator":"==","right":{"type":"Literal","start":35366,"end":35370,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":35372,"end":35416,"body":[{"type":"ReturnStatement","start":35387,"end":35405,"argument":{"type":"CallExpression","start":35394,"end":35404,"callee":{"type":"Identifier","start":35394,"end":35396,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35397,"end":35403,"elements":[{"type":"Identifier","start":35398,"end":35402,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":35426,"end":35508,"test":{"type":"BinaryExpression","start":35430,"end":35462,"left":{"type":"MemberExpression","start":35430,"end":35457,"object":{"type":"Identifier","start":35430,"end":35450,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35451,"end":35457,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":35461,"end":35462,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":35464,"end":35508,"body":[{"type":"ReturnStatement","start":35479,"end":35497,"argument":{"type":"CallExpression","start":35486,"end":35496,"callee":{"type":"Identifier","start":35486,"end":35488,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35489,"end":35495,"elements":[{"type":"Identifier","start":35490,"end":35494,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":35518,"end":35549,"declarations":[{"type":"VariableDeclarator","start":35524,"end":35548,"id":{"type":"Identifier","start":35524,"end":35543,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":35546,"end":35548,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":35652,"end":38452,"expression":{"type":"CallExpression","start":35652,"end":38451,"callee":{"type":"MemberExpression","start":35652,"end":35680,"object":{"type":"Identifier","start":35652,"end":35672,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35673,"end":35680,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":35681,"end":38450,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35681,"end":35699,"name":"subCollectionQuery"}],"body":{"type":"BlockStatement","start":35703,"end":38450,"body":[{"type":"VariableDeclaration","start":35718,"end":35831,"declarations":[{"type":"VariableDeclarator","start":35724,"end":35830,"id":{"type":"Identifier","start":35724,"end":35738,"name":"queryContainer"},"init":{"type":"NewExpression","start":35741,"end":35830,"callee":{"type":"Identifier","start":35745,"end":35759,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":35760,"end":35829,"callee":{"type":"Identifier","start":35760,"end":35776,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":35777,"end":35803,"object":{"type":"MemberExpression","start":35777,"end":35799,"object":{"type":"Identifier","start":35777,"end":35781,"name":"item"},"property":{"type":"Identifier","start":35782,"end":35799,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":35800,"end":35803,"name":"ref"},"computed":false,"optional":false},{"type":"MemberExpression","start":35805,"end":35828,"object":{"type":"Identifier","start":35805,"end":35823,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35824,"end":35828,"name":"name"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":35845,"end":36092,"test":{"type":"MemberExpression","start":35849,"end":35884,"object":{"type":"Identifier","start":35849,"end":35867,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35868,"end":35884,"name":"queryConstraints"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":35886,"end":36092,"body":[{"type":"ExpressionStatement","start":35905,"end":35975,"expression":{"type":"AssignmentExpression","start":35905,"end":35974,"operator":"=","left":{"type":"MemberExpression","start":35905,"end":35936,"object":{"type":"Identifier","start":35905,"end":35919,"name":"queryContainer"},"property":{"type":"Identifier","start":35920,"end":35936,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":35939,"end":35974,"object":{"type":"Identifier","start":35939,"end":35957,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35958,"end":35974,"name":"queryConstraints"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":36274,"end":38380,"declarations":[{"type":"VariableDeclarator","start":36280,"end":38379,"id":{"type":"Identifier","start":36280,"end":36298,"name":"collectionListener"},"init":{"type":"CallExpression","start":36301,"end":38379,"callee":{"type":"MemberExpression","start":36301,"end":36359,"object":{"type":"CallExpression","start":36301,"end":36354,"callee":{"type":"MemberExpression","start":36301,"end":36332,"object":{"type":"ThisExpression","start":36301,"end":36305},"property":{"type":"Identifier","start":36306,"end":36332,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":36333,"end":36353,"object":{"type":"Identifier","start":36333,"end":36347,"name":"queryContainer"},"property":{"type":"Identifier","start":36348,"end":36353,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":36355,"end":36359,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":36774,"end":37592,"callee":{"type":"Identifier","start":36774,"end":36782,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":36783,"end":37591,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36784,"end":36789,"name":"items"}],"body":{"type":"BlockStatement","start":36794,"end":37591,"body":[{"type":"IfStatement","start":36813,"end":36912,"test":{"type":"UnaryExpression","start":36817,"end":36851,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":36818,"end":36851,"object":{"type":"Identifier","start":36818,"end":36836,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36837,"end":36851,"name":"subCollections"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":36853,"end":36912,"body":[{"type":"ReturnStatement","start":36876,"end":36893,"argument":{"type":"CallExpression","start":36883,"end":36892,"callee":{"type":"Identifier","start":36883,"end":36885,"name":"of"},"arguments":[{"type":"Identifier","start":36886,"end":36891,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":36930,"end":36954,"declarations":[{"type":"VariableDeclarator","start":36936,"end":36953,"id":{"type":"Identifier","start":36936,"end":36948,"name":"docListeners"},"init":{"type":"ArrayExpression","start":36951,"end":36953,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":36972,"end":37009,"expression":{"type":"AssignmentExpression","start":36972,"end":37008,"operator":"=","left":{"type":"Identifier","start":36972,"end":36977,"name":"items"},"right":{"type":"CallExpression","start":36980,"end":37008,"callee":{"type":"MemberExpression","start":36980,"end":36992,"object":{"type":"Identifier","start":36980,"end":36985,"name":"items"},"property":{"type":"Identifier","start":36986,"end":36992,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36993,"end":37007,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":36993,"end":36994,"name":"d"}],"body":{"type":"BinaryExpression","start":36998,"end":37007,"left":{"type":"Identifier","start":36998,"end":36999,"name":"d"},"operator":"!=","right":{"type":"Literal","start":37003,"end":37007,"value":null,"raw":"null"}}}],"optional":false}}},{"type":"ExpressionStatement","start":37057,"end":37295,"expression":{"type":"CallExpression","start":37057,"end":37294,"callee":{"type":"MemberExpression","start":37057,"end":37070,"object":{"type":"Identifier","start":37057,"end":37062,"name":"items"},"property":{"type":"Identifier","start":37063,"end":37070,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":37071,"end":37293,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37072,"end":37079,"name":"subItem"}],"body":{"type":"BlockStatement","start":37084,"end":37293,"body":[{"type":"VariableDeclaration","start":37107,"end":37211,"declarations":[{"type":"VariableDeclarator","start":37113,"end":37210,"id":{"type":"Identifier","start":37113,"end":37134,"name":"subDocAndCollections$"},"init":{"type":"CallExpression","start":37137,"end":37210,"callee":{"type":"MemberExpression","start":37137,"end":37166,"object":{"type":"ThisExpression","start":37137,"end":37141},"property":{"type":"Identifier","start":37142,"end":37166,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":37167,"end":37174,"name":"subItem"},{"type":"MemberExpression","start":37176,"end":37209,"object":{"type":"Identifier","start":37176,"end":37194,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37195,"end":37209,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":37233,"end":37274,"expression":{"type":"CallExpression","start":37233,"end":37273,"callee":{"type":"MemberExpression","start":37233,"end":37250,"object":{"type":"Identifier","start":37233,"end":37245,"name":"docListeners"},"property":{"type":"Identifier","start":37246,"end":37250,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":37251,"end":37272,"name":"subDocAndCollections$"}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":37313,"end":37399,"test":{"type":"BinaryExpression","start":37317,"end":37341,"left":{"type":"MemberExpression","start":37317,"end":37336,"object":{"type":"Identifier","start":37317,"end":37329,"name":"docListeners"},"property":{"type":"Identifier","start":37330,"end":37336,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":37340,"end":37341,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":37343,"end":37399,"body":[{"type":"ReturnStatement","start":37366,"end":37380,"argument":{"type":"CallExpression","start":37373,"end":37379,"callee":{"type":"Identifier","start":37373,"end":37375,"name":"of"},"arguments":[{"type":"ArrayExpression","start":37376,"end":37378,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":37467,"end":37576,"argument":{"type":"CallExpression","start":37474,"end":37575,"callee":{"type":"MemberExpression","start":37474,"end":37506,"object":{"type":"CallExpression","start":37474,"end":37501,"callee":{"type":"Identifier","start":37474,"end":37487,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":37488,"end":37500,"name":"docListeners"}],"optional":false},"property":{"type":"Identifier","start":37502,"end":37506,"name":"pipe"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":37945,"end":38378,"callee":{"type":"Identifier","start":37945,"end":37948,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37949,"end":38377,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37950,"end":37955,"name":"items"}],"body":{"type":"BlockStatement","start":37960,"end":38377,"body":[{"type":"VariableDeclaration","start":37979,"end":38079,"declarations":[{"type":"VariableDeclarator","start":37985,"end":38078,"id":{"type":"Identifier","start":37985,"end":37990,"name":"docId"},"init":{"type":"ConditionalExpression","start":37993,"end":38078,"test":{"type":"BinaryExpression","start":37993,"end":38031,"left":{"type":"MemberExpression","start":37993,"end":38017,"object":{"type":"Identifier","start":37993,"end":38011,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38012,"end":38017,"name":"docId"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":38022,"end":38031,"name":"undefined"}},"consequent":{"type":"MemberExpression","start":38034,"end":38058,"object":{"type":"Identifier","start":38034,"end":38052,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38053,"end":38058,"name":"docId"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":38061,"end":38078,"object":{"type":"ThisExpression","start":38061,"end":38065},"property":{"type":"Identifier","start":38066,"end":38078,"name":"defaultDocId"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":38097,"end":38362,"test":{"type":"LogicalExpression","start":38101,"end":38162,"left":{"type":"BinaryExpression","start":38101,"end":38119,"left":{"type":"MemberExpression","start":38101,"end":38113,"object":{"type":"Identifier","start":38101,"end":38106,"name":"items"},"property":{"type":"Identifier","start":38107,"end":38113,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":38118,"end":38119,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":38123,"end":38162,"left":{"type":"MemberExpression","start":38123,"end":38152,"object":{"type":"MemberExpression","start":38123,"end":38149,"object":{"type":"MemberExpression","start":38123,"end":38131,"object":{"type":"Identifier","start":38123,"end":38128,"name":"items"},"property":{"type":"Literal","start":38129,"end":38130,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":38132,"end":38149,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":38150,"end":38152,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":38157,"end":38162,"name":"docId"}}},"consequent":{"type":"BlockStatement","start":38164,"end":38253,"body":[{"type":"ReturnStatement","start":38187,"end":38234,"argument":{"type":"ObjectExpression","start":38194,"end":38233,"properties":[{"type":"Property","start":38196,"end":38231,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":38197,"end":38220,"object":{"type":"Identifier","start":38197,"end":38215,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38216,"end":38220,"name":"name"},"computed":false,"optional":false},"value":{"type":"MemberExpression","start":38223,"end":38231,"object":{"type":"Identifier","start":38223,"end":38228,"name":"items"},"property":{"type":"Literal","start":38229,"end":38230,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":38276,"end":38362,"body":[{"type":"ReturnStatement","start":38299,"end":38343,"argument":{"type":"ObjectExpression","start":38306,"end":38342,"properties":[{"type":"Property","start":38308,"end":38340,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":38309,"end":38332,"object":{"type":"Identifier","start":38309,"end":38327,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38328,"end":38332,"name":"name"},"computed":false,"optional":false},"value":{"type":"Identifier","start":38335,"end":38340,"name":"items"},"kind":"init"}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":38394,"end":38439,"expression":{"type":"CallExpression","start":38394,"end":38438,"callee":{"type":"MemberExpression","start":38394,"end":38418,"object":{"type":"Identifier","start":38394,"end":38413,"name":"collectionListeners"},"property":{"type":"Identifier","start":38414,"end":38418,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38419,"end":38437,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":38548,"end":39076,"argument":{"type":"CallExpression","start":38555,"end":39075,"callee":{"type":"MemberExpression","start":38555,"end":38594,"object":{"type":"CallExpression","start":38555,"end":38589,"callee":{"type":"Identifier","start":38555,"end":38568,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":38569,"end":38588,"name":"collectionListeners"}],"optional":false},"property":{"type":"Identifier","start":38590,"end":38594,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38595,"end":38979,"callee":{"type":"Identifier","start":38595,"end":38598,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38599,"end":38978,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38600,"end":38615,"name":"collectionDatas"}],"body":{"type":"BlockStatement","start":38620,"end":38978,"body":[{"type":"VariableDeclaration","start":38678,"end":38698,"declarations":[{"type":"VariableDeclarator","start":38684,"end":38697,"id":{"type":"Identifier","start":38684,"end":38692,"name":"datasMap"},"init":{"type":"ObjectExpression","start":38695,"end":38697,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":38712,"end":38937,"expression":{"type":"CallExpression","start":38712,"end":38936,"callee":{"type":"MemberExpression","start":38712,"end":38735,"object":{"type":"Identifier","start":38712,"end":38727,"name":"collectionDatas"},"property":{"type":"Identifier","start":38728,"end":38735,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":38736,"end":38935,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38737,"end":38751,"name":"collectionData"}],"body":{"type":"BlockStatement","start":38756,"end":38935,"body":[{"type":"ForOfStatement","start":38775,"end":38920,"await":false,"left":{"type":"VariableDeclaration","start":38780,"end":38809,"declarations":[{"type":"VariableDeclarator","start":38786,"end":38809,"id":{"type":"ArrayPattern","start":38786,"end":38809,"elements":[{"type":"Identifier","start":38787,"end":38801,"name":"collectionName"},{"type":"Identifier","start":38803,"end":38808,"name":"items"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":38813,"end":38843,"callee":{"type":"MemberExpression","start":38813,"end":38827,"object":{"type":"Identifier","start":38813,"end":38819,"name":"Object"},"property":{"type":"Identifier","start":38820,"end":38827,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38828,"end":38842,"name":"collectionData"}],"optional":false},"body":{"type":"BlockStatement","start":38845,"end":38920,"body":[{"type":"ExpressionStatement","start":38868,"end":38901,"expression":{"type":"AssignmentExpression","start":38868,"end":38900,"operator":"=","left":{"type":"MemberExpression","start":38868,"end":38892,"object":{"type":"Identifier","start":38868,"end":38876,"name":"datasMap"},"property":{"type":"Identifier","start":38877,"end":38891,"name":"collectionName"},"computed":true,"optional":false},"right":{"type":"Identifier","start":38895,"end":38900,"name":"items"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":38951,"end":38967,"argument":{"type":"Identifier","start":38958,"end":38966,"name":"datasMap"}}]}}],"optional":false},{"type":"CallExpression","start":38981,"end":39074,"callee":{"type":"Identifier","start":38981,"end":38984,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38985,"end":39073,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38986,"end":38990,"name":"data"}],"body":{"type":"BlockStatement","start":38995,"end":39073,"body":[{"type":"ReturnStatement","start":39010,"end":39062,"argument":{"type":"CallExpression","start":39017,"end":39061,"callee":{"type":"MemberExpression","start":39017,"end":39030,"object":{"type":"Identifier","start":39017,"end":39023,"name":"Object"},"property":{"type":"Identifier","start":39024,"end":39030,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":39031,"end":39054,"callee":{"type":"MemberExpression","start":39031,"end":39044,"object":{"type":"Identifier","start":39031,"end":39037,"name":"Object"},"property":{"type":"Identifier","start":39038,"end":39044,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":39045,"end":39047,"properties":[]},{"type":"Identifier","start":39049,"end":39053,"name":"item"}],"optional":false},{"type":"Identifier","start":39056,"end":39060,"name":"data"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":39198,"end":39730,"static":false,"computed":false,"key":{"type":"Identifier","start":39198,"end":39230,"name":"listenForDocDeepRecursiveHelper$"},"kind":"method","value":{"type":"FunctionExpression","start":39230,"end":39730,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39231,"end":39237,"name":"docRef"},{"type":"AssignmentPattern","start":39239,"end":39264,"left":{"type":"Identifier","start":39239,"end":39259,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":39262,"end":39264,"elements":[]}},{"type":"AssignmentPattern","start":39266,"end":39314,"left":{"type":"Identifier","start":39266,"end":39282,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":39285,"end":39314,"object":{"type":"Identifier","start":39285,"end":39302,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":39303,"end":39314,"name":"RETURN_NULL"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":39316,"end":39730,"body":[{"type":"ReturnStatement","start":39362,"end":39723,"argument":{"type":"CallExpression","start":39369,"end":39722,"callee":{"type":"MemberExpression","start":39369,"end":39424,"object":{"type":"CallExpression","start":39369,"end":39419,"callee":{"type":"MemberExpression","start":39369,"end":39393,"object":{"type":"ThisExpression","start":39369,"end":39373},"property":{"type":"Identifier","start":39374,"end":39393,"name":"listenForDocSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39394,"end":39400,"name":"docRef"},{"type":"Identifier","start":39402,"end":39418,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":39420,"end":39424,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":39425,"end":39721,"callee":{"type":"Identifier","start":39425,"end":39433,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":39434,"end":39720,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39435,"end":39439,"name":"item"}],"body":{"type":"BlockStatement","start":39444,"end":39720,"body":[{"type":"IfStatement","start":39459,"end":39528,"test":{"type":"BinaryExpression","start":39463,"end":39476,"left":{"type":"Identifier","start":39463,"end":39467,"name":"item"},"operator":"===","right":{"type":"Literal","start":39472,"end":39476,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":39478,"end":39528,"body":[{"type":"ReturnStatement","start":39497,"end":39513,"argument":{"type":"CallExpression","start":39504,"end":39512,"callee":{"type":"Identifier","start":39504,"end":39506,"name":"of"},"arguments":[{"type":"Identifier","start":39507,"end":39511,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":39542,"end":39630,"test":{"type":"BinaryExpression","start":39546,"end":39578,"left":{"type":"MemberExpression","start":39546,"end":39573,"object":{"type":"Identifier","start":39546,"end":39566,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":39567,"end":39573,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":39577,"end":39578,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":39580,"end":39630,"body":[{"type":"ReturnStatement","start":39599,"end":39615,"argument":{"type":"CallExpression","start":39606,"end":39614,"callee":{"type":"Identifier","start":39606,"end":39608,"name":"of"},"arguments":[{"type":"Identifier","start":39609,"end":39613,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":39644,"end":39709,"argument":{"type":"CallExpression","start":39651,"end":39708,"callee":{"type":"MemberExpression","start":39651,"end":39680,"object":{"type":"ThisExpression","start":39651,"end":39655},"property":{"type":"Identifier","start":39656,"end":39680,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39681,"end":39685,"name":"item"},{"type":"Identifier","start":39687,"end":39707,"name":"subCollectionQueries"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":40421,"end":42364,"static":false,"computed":false,"key":{"type":"Identifier","start":40421,"end":40431,"name":"addSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":40431,"end":42364,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":40432,"end":40436,"name":"data"},{"type":"Identifier","start":40438,"end":40451,"name":"collectionRef"},{"type":"AssignmentPattern","start":40453,"end":40470,"left":{"type":"Identifier","start":40453,"end":40463,"name":"isAddDates"},"right":{"type":"Literal","start":40466,"end":40470,"value":true,"raw":"true"}},{"type":"Identifier","start":40472,"end":40474,"name":"id"}],"body":{"type":"BlockStatement","start":40476,"end":42364,"body":[{"type":"VariableDeclaration","start":40547,"end":40556,"declarations":[{"type":"VariableDeclarator","start":40551,"end":40555,"id":{"type":"Identifier","start":40551,"end":40555,"name":"res$"},"init":null}],"kind":"let"},{"type":"IfStatement","start":40566,"end":40743,"test":{"type":"Identifier","start":40570,"end":40580,"name":"isAddDates"},"consequent":{"type":"BlockStatement","start":40582,"end":40743,"body":[{"type":"VariableDeclaration","start":40597,"end":40621,"declarations":[{"type":"VariableDeclarator","start":40603,"end":40620,"id":{"type":"Identifier","start":40603,"end":40607,"name":"date"},"init":{"type":"NewExpression","start":40610,"end":40620,"callee":{"type":"Identifier","start":40614,"end":40618,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":40635,"end":40676,"expression":{"type":"AssignmentExpression","start":40635,"end":40675,"operator":"=","left":{"type":"Identifier","start":40635,"end":40639,"name":"data"},"right":{"type":"CallExpression","start":40642,"end":40675,"callee":{"type":"Identifier","start":40642,"end":40656,"name":"addCreatedDate"},"arguments":[{"type":"Identifier","start":40657,"end":40661,"name":"data"},{"type":"Literal","start":40663,"end":40668,"value":false,"raw":"false"},{"type":"Identifier","start":40670,"end":40674,"name":"date"}],"optional":false}}},{"type":"ExpressionStatement","start":40690,"end":40732,"expression":{"type":"AssignmentExpression","start":40690,"end":40731,"operator":"=","left":{"type":"Identifier","start":40690,"end":40694,"name":"data"},"right":{"type":"CallExpression","start":40697,"end":40731,"callee":{"type":"Identifier","start":40697,"end":40712,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":40713,"end":40717,"name":"data"},{"type":"Literal","start":40719,"end":40724,"value":false,"raw":"false"},{"type":"Identifier","start":40726,"end":40730,"name":"date"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":40753,"end":40979,"test":{"type":"BinaryExpression","start":40757,"end":40773,"left":{"type":"Identifier","start":40757,"end":40759,"name":"id"},"operator":"!==","right":{"type":"Identifier","start":40764,"end":40773,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":40775,"end":40898,"body":[{"type":"VariableDeclaration","start":40790,"end":40840,"declarations":[{"type":"VariableDeclarator","start":40796,"end":40839,"id":{"type":"Identifier","start":40796,"end":40802,"name":"docRef"},"init":{"type":"CallExpression","start":40805,"end":40839,"callee":{"type":"Identifier","start":40805,"end":40820,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":40821,"end":40834,"name":"collectionRef"},{"type":"Identifier","start":40836,"end":40838,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":40854,"end":40887,"expression":{"type":"AssignmentExpression","start":40854,"end":40886,"operator":"=","left":{"type":"Identifier","start":40854,"end":40858,"name":"res$"},"right":{"type":"CallExpression","start":40861,"end":40886,"callee":{"type":"MemberExpression","start":40861,"end":40872,"object":{"type":"MemberExpression","start":40861,"end":40868,"object":{"type":"ThisExpression","start":40861,"end":40865},"property":{"type":"Identifier","start":40866,"end":40868,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40869,"end":40872,"name":"set"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40873,"end":40879,"name":"docRef"},{"type":"Identifier","start":40881,"end":40885,"name":"data"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":40913,"end":40979,"body":[{"type":"ExpressionStatement","start":40928,"end":40968,"expression":{"type":"AssignmentExpression","start":40928,"end":40967,"operator":"=","left":{"type":"Identifier","start":40928,"end":40932,"name":"res$"},"right":{"type":"CallExpression","start":40935,"end":40967,"callee":{"type":"MemberExpression","start":40935,"end":40946,"object":{"type":"MemberExpression","start":40935,"end":40942,"object":{"type":"ThisExpression","start":40935,"end":40939},"property":{"type":"Identifier","start":40940,"end":40942,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40943,"end":40946,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40947,"end":40960,"name":"collectionRef"},{"type":"Identifier","start":40962,"end":40966,"name":"data"}],"optional":false}}}]}},{"type":"ExpressionStatement","start":41229,"end":42321,"expression":{"type":"AssignmentExpression","start":41229,"end":42320,"operator":"=","left":{"type":"Identifier","start":41229,"end":41233,"name":"res$"},"right":{"type":"CallExpression","start":41236,"end":42320,"callee":{"type":"MemberExpression","start":41236,"end":41245,"object":{"type":"Identifier","start":41236,"end":41240,"name":"res$"},"property":{"type":"Identifier","start":41241,"end":41245,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41421,"end":42319,"callee":{"type":"Identifier","start":41421,"end":41424,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":41425,"end":42318,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41426,"end":41429,"name":"ref"}],"body":{"type":"BlockStatement","start":41434,"end":42318,"body":[{"type":"IfStatement","start":41449,"end":42307,"test":{"type":"LogicalExpression","start":41453,"end":41476,"left":{"type":"BinaryExpression","start":41453,"end":41469,"left":{"type":"Identifier","start":41453,"end":41455,"name":"id"},"operator":"===","right":{"type":"Identifier","start":41460,"end":41469,"name":"undefined"}},"operator":"&&","right":{"type":"Identifier","start":41473,"end":41476,"name":"ref"}},"consequent":{"type":"BlockStatement","start":41478,"end":41808,"body":[{"type":"VariableDeclaration","start":41497,"end":41519,"declarations":[{"type":"VariableDeclarator","start":41503,"end":41518,"id":{"type":"Identifier","start":41503,"end":41507,"name":"path"},"init":{"type":"MemberExpression","start":41510,"end":41518,"object":{"type":"Identifier","start":41510,"end":41513,"name":"ref"},"property":{"type":"Identifier","start":41514,"end":41518,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":41537,"end":41706,"declarations":[{"type":"VariableDeclarator","start":41543,"end":41705,"id":{"type":"Identifier","start":41543,"end":41560,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41563,"end":41705,"properties":[{"type":"Property","start":41586,"end":41596,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41586,"end":41588,"name":"id"},"value":{"type":"MemberExpression","start":41590,"end":41596,"object":{"type":"Identifier","start":41590,"end":41593,"name":"ref"},"property":{"type":"Identifier","start":41594,"end":41596,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":41619,"end":41623,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41619,"end":41623,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41619,"end":41623,"name":"path"}},{"type":"Property","start":41646,"end":41649,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41646,"end":41649,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41646,"end":41649,"name":"ref"}},{"type":"Property","start":41672,"end":41686,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41672,"end":41680,"name":"isExists"},"value":{"type":"Literal","start":41682,"end":41686,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41724,"end":41793,"argument":{"type":"CallExpression","start":41731,"end":41792,"callee":{"type":"MemberExpression","start":41731,"end":41744,"object":{"type":"Identifier","start":41731,"end":41737,"name":"Object"},"property":{"type":"Identifier","start":41738,"end":41744,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41745,"end":41768,"callee":{"type":"MemberExpression","start":41745,"end":41758,"object":{"type":"Identifier","start":41745,"end":41751,"name":"Object"},"property":{"type":"Identifier","start":41752,"end":41758,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":41759,"end":41761,"properties":[]},{"type":"Identifier","start":41763,"end":41767,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":41770,"end":41791,"properties":[{"type":"Property","start":41772,"end":41789,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41772,"end":41789,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41772,"end":41789,"name":"firestoreMetadata"}}]}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":41827,"end":42307,"body":[{"type":"VariableDeclaration","start":41915,"end":41958,"declarations":[{"type":"VariableDeclarator","start":41921,"end":41957,"id":{"type":"Identifier","start":41921,"end":41925,"name":"path"},"init":{"type":"BinaryExpression","start":41928,"end":41957,"left":{"type":"BinaryExpression","start":41928,"end":41952,"left":{"type":"MemberExpression","start":41928,"end":41946,"object":{"type":"Identifier","start":41928,"end":41941,"name":"collectionRef"},"property":{"type":"Identifier","start":41942,"end":41946,"name":"path"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":41949,"end":41952,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":41955,"end":41957,"name":"id"}}}],"kind":"const"},{"type":"ExpressionStatement","start":41976,"end":42022,"expression":{"type":"AssignmentExpression","start":41976,"end":42021,"operator":"=","left":{"type":"Identifier","start":41976,"end":41979,"name":"ref"},"right":{"type":"CallExpression","start":41982,"end":42021,"callee":{"type":"Identifier","start":41982,"end":41996,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":41997,"end":42001,"name":"path"},{"type":"MemberExpression","start":42003,"end":42020,"object":{"type":"MemberExpression","start":42003,"end":42010,"object":{"type":"ThisExpression","start":42003,"end":42007},"property":{"type":"Identifier","start":42008,"end":42010,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42011,"end":42020,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":42040,"end":42205,"declarations":[{"type":"VariableDeclarator","start":42046,"end":42204,"id":{"type":"Identifier","start":42046,"end":42063,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":42066,"end":42204,"properties":[{"type":"Property","start":42089,"end":42095,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":42089,"end":42091,"name":"id"},"value":{"type":"Identifier","start":42093,"end":42095,"name":"id"},"kind":"init"},{"type":"Property","start":42118,"end":42121,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":42118,"end":42121,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":42118,"end":42121,"name":"ref"}},{"type":"Property","start":42144,"end":42148,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":42144,"end":42148,"name":"path"},"kind":"init","value":{"type":"Identifier","start":42144,"end":42148,"name":"path"}},{"type":"Property","start":42171,"end":42185,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":42171,"end":42179,"name":"isExists"},"value":{"type":"Literal","start":42181,"end":42185,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":42223,"end":42292,"argument":{"type":"CallExpression","start":42230,"end":42291,"callee":{"type":"MemberExpression","start":42230,"end":42243,"object":{"type":"Identifier","start":42230,"end":42236,"name":"Object"},"property":{"type":"Identifier","start":42237,"end":42243,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":42244,"end":42267,"callee":{"type":"MemberExpression","start":42244,"end":42257,"object":{"type":"Identifier","start":42244,"end":42250,"name":"Object"},"property":{"type":"Identifier","start":42251,"end":42257,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":42258,"end":42260,"properties":[]},{"type":"Identifier","start":42262,"end":42266,"name":"data"}],"optional":false},{"type":"ObjectExpression","start":42269,"end":42290,"properties":[{"type":"Property","start":42271,"end":42288,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":42271,"end":42288,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":42271,"end":42288,"name":"firestoreMetadata"}}]}],"optional":false}}]}}]}}],"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":42331,"end":42357,"argument":{"type":"CallExpression","start":42338,"end":42356,"callee":{"type":"MemberExpression","start":42338,"end":42347,"object":{"type":"Identifier","start":42338,"end":42342,"name":"res$"},"property":{"type":"Identifier","start":42343,"end":42347,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":42348,"end":42355,"callee":{"type":"Identifier","start":42348,"end":42352,"name":"take"},"arguments":[{"type":"Literal","start":42353,"end":42354,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":42446,"end":42649,"static":false,"computed":false,"key":{"type":"Identifier","start":42446,"end":42459,"name":"updateSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":42459,"end":42649,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42460,"end":42464,"name":"data"},{"type":"Identifier","start":42466,"end":42472,"name":"docRef"},{"type":"AssignmentPattern","start":42474,"end":42498,"left":{"type":"Identifier","start":42474,"end":42491,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42494,"end":42498,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":42500,"end":42649,"body":[{"type":"IfStatement","start":42511,"end":42596,"test":{"type":"Identifier","start":42515,"end":42532,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42534,"end":42596,"body":[{"type":"ExpressionStatement","start":42549,"end":42585,"expression":{"type":"AssignmentExpression","start":42549,"end":42584,"operator":"=","left":{"type":"Identifier","start":42549,"end":42553,"name":"data"},"right":{"type":"CallExpression","start":42556,"end":42584,"callee":{"type":"Identifier","start":42556,"end":42571,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42572,"end":42576,"name":"data"},{"type":"Literal","start":42578,"end":42583,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":42606,"end":42642,"argument":{"type":"CallExpression","start":42613,"end":42641,"callee":{"type":"MemberExpression","start":42613,"end":42627,"object":{"type":"MemberExpression","start":42613,"end":42620,"object":{"type":"ThisExpression","start":42613,"end":42617},"property":{"type":"Identifier","start":42618,"end":42620,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42621,"end":42627,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42628,"end":42634,"name":"docRef"},{"type":"Identifier","start":42636,"end":42640,"name":"data"}],"optional":false}}]}}},{"type":"MethodDefinition","start":42726,"end":44444,"static":false,"computed":false,"key":{"type":"Identifier","start":42726,"end":42749,"name":"updateDeepToBatchHelper"},"kind":"method","value":{"type":"FunctionExpression","start":42749,"end":44444,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42750,"end":42754,"name":"data"},{"type":"Identifier","start":42756,"end":42762,"name":"docRef"},{"type":"AssignmentPattern","start":42764,"end":42789,"left":{"type":"Identifier","start":42764,"end":42784,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":42787,"end":42789,"elements":[]}},{"type":"AssignmentPattern","start":42791,"end":42815,"left":{"type":"Identifier","start":42791,"end":42808,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42811,"end":42815,"value":true,"raw":"true"}},{"type":"Identifier","start":42817,"end":42822,"name":"batch"}],"body":{"type":"BlockStatement","start":42824,"end":44444,"body":[{"type":"VariableDeclaration","start":42835,"end":42846,"declarations":[{"type":"VariableDeclarator","start":42839,"end":42841,"id":{"type":"Identifier","start":42839,"end":42841,"name":"_a"},"init":null},{"type":"VariableDeclarator","start":42843,"end":42845,"id":{"type":"Identifier","start":42843,"end":42845,"name":"_b"},"init":null}],"kind":"var"},{"type":"IfStatement","start":42856,"end":42945,"test":{"type":"BinaryExpression","start":42860,"end":42879,"left":{"type":"Identifier","start":42860,"end":42865,"name":"batch"},"operator":"===","right":{"type":"Identifier","start":42870,"end":42879,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":42881,"end":42945,"body":[{"type":"ExpressionStatement","start":42896,"end":42934,"expression":{"type":"AssignmentExpression","start":42896,"end":42933,"operator":"=","left":{"type":"Identifier","start":42896,"end":42901,"name":"batch"},"right":{"type":"CallExpression","start":42904,"end":42933,"callee":{"type":"Identifier","start":42904,"end":42914,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":42915,"end":42932,"object":{"type":"MemberExpression","start":42915,"end":42922,"object":{"type":"ThisExpression","start":42915,"end":42919},"property":{"type":"Identifier","start":42920,"end":42922,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42923,"end":42932,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":42955,"end":43040,"test":{"type":"Identifier","start":42959,"end":42976,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42978,"end":43040,"body":[{"type":"ExpressionStatement","start":42993,"end":43029,"expression":{"type":"AssignmentExpression","start":42993,"end":43028,"operator":"=","left":{"type":"Identifier","start":42993,"end":42997,"name":"data"},"right":{"type":"CallExpression","start":43000,"end":43028,"callee":{"type":"Identifier","start":43000,"end":43015,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":43016,"end":43020,"name":"data"},{"type":"Literal","start":43022,"end":43027,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":43050,"end":43138,"declarations":[{"type":"VariableDeclarator","start":43056,"end":43137,"id":{"type":"Identifier","start":43056,"end":43061,"name":"split"},"init":{"type":"CallExpression","start":43064,"end":43137,"callee":{"type":"MemberExpression","start":43064,"end":43109,"object":{"type":"ThisExpression","start":43064,"end":43068},"property":{"type":"Identifier","start":43069,"end":43109,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43110,"end":43114,"name":"data"},{"type":"Identifier","start":43116,"end":43136,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43148,"end":43184,"declarations":[{"type":"VariableDeclarator","start":43154,"end":43183,"id":{"type":"Identifier","start":43154,"end":43164,"name":"currentDoc"},"init":{"type":"MemberExpression","start":43167,"end":43183,"object":{"type":"Identifier","start":43167,"end":43172,"name":"split"},"property":{"type":"Identifier","start":43173,"end":43183,"name":"currentDoc"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43194,"end":43238,"declarations":[{"type":"VariableDeclarator","start":43200,"end":43237,"id":{"type":"Identifier","start":43200,"end":43214,"name":"subCollections"},"init":{"type":"MemberExpression","start":43217,"end":43237,"object":{"type":"Identifier","start":43217,"end":43222,"name":"split"},"property":{"type":"Identifier","start":43223,"end":43237,"name":"subCollections"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":43301,"end":43334,"expression":{"type":"CallExpression","start":43301,"end":43333,"callee":{"type":"MemberExpression","start":43301,"end":43313,"object":{"type":"Identifier","start":43301,"end":43306,"name":"batch"},"property":{"type":"Identifier","start":43307,"end":43313,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43314,"end":43320,"name":"docRef"},{"type":"Identifier","start":43322,"end":43332,"name":"currentDoc"}],"optional":false}},{"type":"ForOfStatement","start":43344,"end":44414,"await":false,"left":{"type":"VariableDeclaration","start":43349,"end":43392,"declarations":[{"type":"VariableDeclarator","start":43355,"end":43392,"id":{"type":"ArrayPattern","start":43355,"end":43392,"elements":[{"type":"Identifier","start":43356,"end":43372,"name":"subCollectionKey"},{"type":"Identifier","start":43374,"end":43391,"name":"subDocUpdateValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":43396,"end":43426,"callee":{"type":"MemberExpression","start":43396,"end":43410,"object":{"type":"Identifier","start":43396,"end":43402,"name":"Object"},"property":{"type":"Identifier","start":43403,"end":43410,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43411,"end":43425,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":43428,"end":44414,"body":[{"type":"VariableDeclaration","start":43443,"end":43471,"declarations":[{"type":"VariableDeclarator","start":43447,"end":43470,"id":{"type":"Identifier","start":43447,"end":43470,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":43525,"end":43538,"declarations":[{"type":"VariableDeclarator","start":43529,"end":43537,"id":{"type":"Identifier","start":43529,"end":43537,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":43552,"end":43926,"test":{"type":"Identifier","start":43556,"end":43576,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":43578,"end":43926,"body":[{"type":"ExpressionStatement","start":43597,"end":43757,"expression":{"type":"AssignmentExpression","start":43597,"end":43756,"operator":"=","left":{"type":"Identifier","start":43597,"end":43620,"name":"subSubCollectionWriters"},"right":{"type":"ConditionalExpression","start":43623,"end":43756,"test":{"type":"LogicalExpression","start":43623,"end":43727,"left":{"type":"BinaryExpression","start":43623,"end":43710,"left":{"type":"AssignmentExpression","start":43624,"end":43700,"operator":"=","left":{"type":"Identifier","start":43624,"end":43626,"name":"_a"},"right":{"type":"CallExpression","start":43629,"end":43700,"callee":{"type":"MemberExpression","start":43629,"end":43654,"object":{"type":"Identifier","start":43629,"end":43649,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43650,"end":43654,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43655,"end":43699,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43655,"end":43662,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43666,"end":43699,"left":{"type":"MemberExpression","start":43666,"end":43678,"object":{"type":"Identifier","start":43666,"end":43673,"name":"subColl"},"property":{"type":"Identifier","start":43674,"end":43678,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43683,"end":43699,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":43706,"end":43710,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":43714,"end":43727,"left":{"type":"Identifier","start":43714,"end":43716,"name":"_a"},"operator":"===","right":{"type":"UnaryExpression","start":43721,"end":43727,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43726,"end":43727,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":43730,"end":43736,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43735,"end":43736,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":43739,"end":43756,"object":{"type":"Identifier","start":43739,"end":43741,"name":"_a"},"property":{"type":"Identifier","start":43742,"end":43756,"name":"subCollections"},"computed":false,"optional":false}}}},{"type":"ExpressionStatement","start":43775,"end":43911,"expression":{"type":"AssignmentExpression","start":43775,"end":43910,"operator":"=","left":{"type":"Identifier","start":43775,"end":43783,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43786,"end":43910,"test":{"type":"LogicalExpression","start":43786,"end":43890,"left":{"type":"BinaryExpression","start":43786,"end":43873,"left":{"type":"AssignmentExpression","start":43787,"end":43863,"operator":"=","left":{"type":"Identifier","start":43787,"end":43789,"name":"_b"},"right":{"type":"CallExpression","start":43792,"end":43863,"callee":{"type":"MemberExpression","start":43792,"end":43817,"object":{"type":"Identifier","start":43792,"end":43812,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43813,"end":43817,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43818,"end":43862,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43818,"end":43825,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43829,"end":43862,"left":{"type":"MemberExpression","start":43829,"end":43841,"object":{"type":"Identifier","start":43829,"end":43836,"name":"subColl"},"property":{"type":"Identifier","start":43837,"end":43841,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43846,"end":43862,"name":"subCollectionKey"}}}],"optional":false}},"operator":"===","right":{"type":"Literal","start":43869,"end":43873,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":43877,"end":43890,"left":{"type":"Identifier","start":43877,"end":43879,"name":"_b"},"operator":"===","right":{"type":"UnaryExpression","start":43884,"end":43890,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43889,"end":43890,"value":0,"raw":"0"}}}},"consequent":{"type":"UnaryExpression","start":43893,"end":43899,"operator":"void","prefix":true,"argument":{"type":"Literal","start":43898,"end":43899,"value":0,"raw":"0"}},"alternate":{"type":"MemberExpression","start":43902,"end":43910,"object":{"type":"Identifier","start":43902,"end":43904,"name":"_b"},"property":{"type":"Identifier","start":43905,"end":43910,"name":"docId"},"computed":false,"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":43940,"end":44005,"expression":{"type":"AssignmentExpression","start":43940,"end":44004,"operator":"=","left":{"type":"Identifier","start":43940,"end":43948,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43951,"end":44004,"test":{"type":"BinaryExpression","start":43951,"end":43973,"left":{"type":"Identifier","start":43951,"end":43959,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":43964,"end":43973,"name":"undefined"}},"consequent":{"type":"Identifier","start":43976,"end":43984,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":43987,"end":44004,"object":{"type":"ThisExpression","start":43987,"end":43991},"property":{"type":"Identifier","start":43992,"end":44004,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":44135,"end":44200,"declarations":[{"type":"VariableDeclarator","start":44141,"end":44199,"id":{"type":"Identifier","start":44141,"end":44154,"name":"subCollection"},"init":{"type":"CallExpression","start":44157,"end":44199,"callee":{"type":"Identifier","start":44157,"end":44173,"name":"getSubCollection"},"arguments":[{"type":"Identifier","start":44174,"end":44180,"name":"docRef"},{"type":"Identifier","start":44182,"end":44198,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":44214,"end":44272,"declarations":[{"type":"VariableDeclarator","start":44220,"end":44271,"id":{"type":"Identifier","start":44220,"end":44228,"name":"subDocFs"},"init":{"type":"CallExpression","start":44231,"end":44271,"callee":{"type":"Identifier","start":44231,"end":44246,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":44247,"end":44260,"name":"subCollection"},{"type":"Identifier","start":44262,"end":44270,"name":"subDocId"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":44286,"end":44403,"expression":{"type":"AssignmentExpression","start":44286,"end":44402,"operator":"=","left":{"type":"Identifier","start":44286,"end":44291,"name":"batch"},"right":{"type":"CallExpression","start":44294,"end":44402,"callee":{"type":"MemberExpression","start":44294,"end":44322,"object":{"type":"ThisExpression","start":44294,"end":44298},"property":{"type":"Identifier","start":44299,"end":44322,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":44323,"end":44340,"name":"subDocUpdateValue"},{"type":"Identifier","start":44342,"end":44350,"name":"subDocFs"},{"type":"Identifier","start":44352,"end":44375,"name":"subSubCollectionWriters"},{"type":"Identifier","start":44377,"end":44394,"name":"isAddModifiedDate"},{"type":"Identifier","start":44396,"end":44401,"name":"batch"}],"optional":false}}}]}},{"type":"ReturnStatement","start":44424,"end":44437,"argument":{"type":"Identifier","start":44431,"end":44436,"name":"batch"}}]}}},{"type":"MethodDefinition","start":44915,"end":47133,"static":false,"computed":false,"key":{"type":"Identifier","start":44915,"end":44952,"name":"getBatchFromTransferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":44952,"end":47133,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":44953,"end":44966,"name":"previousArray"},{"type":"Identifier","start":44968,"end":44980,"name":"currentArray"},{"type":"Identifier","start":44982,"end":44995,"name":"previousIndex"},{"type":"Identifier","start":44997,"end":45009,"name":"currentIndex"},{"type":"Identifier","start":45011,"end":45027,"name":"currentArrayName"},{"type":"Identifier","start":45029,"end":45060,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":45062,"end":45100,"left":{"type":"Identifier","start":45062,"end":45093,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":45096,"end":45100,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":45102,"end":45117,"left":{"type":"Identifier","start":45102,"end":45109,"name":"useCopy"},"right":{"type":"Literal","start":45112,"end":45117,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":45119,"end":47133,"body":[{"type":"VariableDeclaration","start":45130,"end":45152,"declarations":[{"type":"VariableDeclarator","start":45134,"end":45151,"id":{"type":"Identifier","start":45134,"end":45151,"name":"usedPreviousArray"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":45162,"end":45183,"declarations":[{"type":"VariableDeclarator","start":45166,"end":45182,"id":{"type":"Identifier","start":45166,"end":45182,"name":"usedCurrentArray"},"init":null}],"kind":"let"},{"type":"IfStatement","start":45193,"end":45471,"test":{"type":"Identifier","start":45197,"end":45204,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":45206,"end":45350,"body":[{"type":"ExpressionStatement","start":45221,"end":45274,"expression":{"type":"AssignmentExpression","start":45221,"end":45273,"operator":"=","left":{"type":"Identifier","start":45221,"end":45238,"name":"usedPreviousArray"},"right":{"type":"CallExpression","start":45241,"end":45273,"callee":{"type":"MemberExpression","start":45241,"end":45254,"object":{"type":"Identifier","start":45241,"end":45247,"name":"Object"},"property":{"type":"Identifier","start":45248,"end":45254,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":45255,"end":45257,"elements":[]},{"type":"Identifier","start":45259,"end":45272,"name":"previousArray"}],"optional":false}}},{"type":"ExpressionStatement","start":45288,"end":45339,"expression":{"type":"AssignmentExpression","start":45288,"end":45338,"operator":"=","left":{"type":"Identifier","start":45288,"end":45304,"name":"usedCurrentArray"},"right":{"type":"CallExpression","start":45307,"end":45338,"callee":{"type":"MemberExpression","start":45307,"end":45320,"object":{"type":"Identifier","start":45307,"end":45313,"name":"Object"},"property":{"type":"Identifier","start":45314,"end":45320,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":45321,"end":45323,"elements":[]},{"type":"Identifier","start":45325,"end":45337,"name":"currentArray"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":45365,"end":45471,"body":[{"type":"ExpressionStatement","start":45380,"end":45414,"expression":{"type":"AssignmentExpression","start":45380,"end":45413,"operator":"=","left":{"type":"Identifier","start":45380,"end":45397,"name":"usedPreviousArray"},"right":{"type":"Identifier","start":45400,"end":45413,"name":"previousArray"}}},{"type":"ExpressionStatement","start":45428,"end":45460,"expression":{"type":"AssignmentExpression","start":45428,"end":45459,"operator":"=","left":{"type":"Identifier","start":45428,"end":45444,"name":"usedCurrentArray"},"right":{"type":"Identifier","start":45447,"end":45459,"name":"currentArray"}}}]}},{"type":"ExpressionStatement","start":45481,"end":45565,"expression":{"type":"CallExpression","start":45481,"end":45564,"callee":{"type":"Identifier","start":45481,"end":45498,"name":"transferArrayItem"},"arguments":[{"type":"Identifier","start":45499,"end":45516,"name":"usedPreviousArray"},{"type":"Identifier","start":45518,"end":45534,"name":"usedCurrentArray"},{"type":"Identifier","start":45536,"end":45549,"name":"previousIndex"},{"type":"Identifier","start":45551,"end":45563,"name":"currentIndex"}],"optional":false}},{"type":"VariableDeclaration","start":45575,"end":45619,"declarations":[{"type":"VariableDeclarator","start":45581,"end":45618,"id":{"type":"Identifier","start":45581,"end":45586,"name":"batch"},"init":{"type":"CallExpression","start":45589,"end":45618,"callee":{"type":"Identifier","start":45589,"end":45599,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":45600,"end":45617,"object":{"type":"MemberExpression","start":45600,"end":45607,"object":{"type":"ThisExpression","start":45600,"end":45604},"property":{"type":"Identifier","start":45605,"end":45607,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45608,"end":45617,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45629,"end":46368,"test":{"type":"BinaryExpression","start":45633,"end":45678,"left":{"type":"Identifier","start":45633,"end":45664,"name":"additionalDataUpdateOnMovedItem"},"operator":"!==","right":{"type":"Identifier","start":45669,"end":45678,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":45680,"end":46368,"body":[{"type":"VariableDeclaration","start":45695,"end":45744,"declarations":[{"type":"VariableDeclarator","start":45701,"end":45743,"id":{"type":"Identifier","start":45701,"end":45710,"name":"movedItem"},"init":{"type":"MemberExpression","start":45713,"end":45743,"object":{"type":"Identifier","start":45713,"end":45729,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45730,"end":45742,"name":"currentIndex"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45758,"end":45811,"declarations":[{"type":"VariableDeclarator","start":45764,"end":45810,"id":{"type":"Identifier","start":45764,"end":45776,"name":"movedItemRef"},"init":{"type":"MemberExpression","start":45779,"end":45810,"object":{"type":"MemberExpression","start":45779,"end":45806,"object":{"type":"Identifier","start":45779,"end":45788,"name":"movedItem"},"property":{"type":"Identifier","start":45789,"end":45806,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45807,"end":45810,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45825,"end":45937,"declarations":[{"type":"VariableDeclarator","start":45831,"end":45936,"id":{"type":"Identifier","start":45831,"end":45835,"name":"data"},"init":{"type":"CallExpression","start":45838,"end":45936,"callee":{"type":"MemberExpression","start":45838,"end":45851,"object":{"type":"Identifier","start":45838,"end":45844,"name":"Object"},"property":{"type":"Identifier","start":45845,"end":45851,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":45852,"end":45902,"callee":{"type":"MemberExpression","start":45852,"end":45865,"object":{"type":"Identifier","start":45852,"end":45858,"name":"Object"},"property":{"type":"Identifier","start":45859,"end":45865,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":45866,"end":45868,"properties":[]},{"type":"Identifier","start":45870,"end":45901,"name":"additionalDataUpdateOnMovedItem"}],"optional":false},{"type":"ObjectExpression","start":45904,"end":45935,"properties":[{"type":"Property","start":45906,"end":45933,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45906,"end":45915,"name":"groupName"},"value":{"type":"Identifier","start":45917,"end":45933,"name":"currentArrayName"},"kind":"init"}]}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45951,"end":46036,"test":{"type":"UnaryExpression","start":45955,"end":45963,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45956,"end":45963,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45965,"end":46036,"body":[{"type":"ExpressionStatement","start":45984,"end":46021,"expression":{"type":"CallExpression","start":45984,"end":46020,"callee":{"type":"Identifier","start":45984,"end":45997,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":45998,"end":46007,"name":"movedItem"},{"type":"Identifier","start":46009,"end":46013,"name":"data"},{"type":"Literal","start":46015,"end":46019,"value":true,"raw":"true"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":46050,"end":46310,"test":{"type":"Identifier","start":46054,"end":46085,"name":"isUpdateModifiedDateOnMovedItem"},"consequent":{"type":"BlockStatement","start":46087,"end":46310,"body":[{"type":"VariableDeclaration","start":46106,"end":46130,"declarations":[{"type":"VariableDeclarator","start":46112,"end":46129,"id":{"type":"Identifier","start":46112,"end":46116,"name":"date"},"init":{"type":"NewExpression","start":46119,"end":46129,"callee":{"type":"Identifier","start":46123,"end":46127,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":46148,"end":46182,"expression":{"type":"CallExpression","start":46148,"end":46181,"callee":{"type":"Identifier","start":46148,"end":46163,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":46164,"end":46168,"name":"data"},{"type":"Literal","start":46170,"end":46174,"value":true,"raw":"true"},{"type":"Identifier","start":46176,"end":46180,"name":"date"}],"optional":false}},{"type":"IfStatement","start":46200,"end":46295,"test":{"type":"UnaryExpression","start":46204,"end":46212,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46205,"end":46212,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46214,"end":46295,"body":[{"type":"ExpressionStatement","start":46237,"end":46276,"expression":{"type":"CallExpression","start":46237,"end":46275,"callee":{"type":"Identifier","start":46237,"end":46252,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":46253,"end":46262,"name":"movedItem"},{"type":"Literal","start":46264,"end":46268,"value":true,"raw":"true"},{"type":"Identifier","start":46270,"end":46274,"name":"date"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":46324,"end":46357,"expression":{"type":"CallExpression","start":46324,"end":46356,"callee":{"type":"MemberExpression","start":46324,"end":46336,"object":{"type":"Identifier","start":46324,"end":46329,"name":"batch"},"property":{"type":"Identifier","start":46330,"end":46336,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46337,"end":46349,"name":"movedItemRef"},{"type":"Identifier","start":46351,"end":46355,"name":"data"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":46378,"end":46449,"declarations":[{"type":"VariableDeclarator","start":46384,"end":46448,"id":{"type":"Identifier","start":46384,"end":46409,"name":"currentArraySliceToUpdate"},"init":{"type":"CallExpression","start":46412,"end":46448,"callee":{"type":"MemberExpression","start":46412,"end":46434,"object":{"type":"Identifier","start":46412,"end":46428,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":46429,"end":46434,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46435,"end":46447,"name":"currentIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":46459,"end":46480,"declarations":[{"type":"VariableDeclarator","start":46463,"end":46479,"id":{"type":"Identifier","start":46463,"end":46464,"name":"i"},"init":{"type":"Identifier","start":46467,"end":46479,"name":"currentIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":46490,"end":46739,"await":false,"left":{"type":"VariableDeclaration","start":46495,"end":46505,"declarations":[{"type":"VariableDeclarator","start":46501,"end":46505,"id":{"type":"Identifier","start":46501,"end":46505,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46509,"end":46534,"name":"currentArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46536,"end":46739,"body":[{"type":"ExpressionStatement","start":46578,"end":46633,"expression":{"type":"CallExpression","start":46578,"end":46632,"callee":{"type":"MemberExpression","start":46578,"end":46590,"object":{"type":"Identifier","start":46578,"end":46583,"name":"batch"},"property":{"type":"Identifier","start":46584,"end":46590,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46591,"end":46617,"object":{"type":"MemberExpression","start":46591,"end":46613,"object":{"type":"Identifier","start":46591,"end":46595,"name":"item"},"property":{"type":"Identifier","start":46596,"end":46613,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46614,"end":46617,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46619,"end":46631,"properties":[{"type":"Property","start":46621,"end":46629,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46621,"end":46626,"name":"index"},"value":{"type":"Identifier","start":46628,"end":46629,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46647,"end":46710,"test":{"type":"UnaryExpression","start":46651,"end":46659,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46652,"end":46659,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46661,"end":46710,"body":[{"type":"ExpressionStatement","start":46680,"end":46695,"expression":{"type":"AssignmentExpression","start":46680,"end":46694,"operator":"=","left":{"type":"MemberExpression","start":46680,"end":46690,"object":{"type":"Identifier","start":46680,"end":46684,"name":"item"},"property":{"type":"Identifier","start":46685,"end":46690,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46693,"end":46694,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46724,"end":46728,"expression":{"type":"UpdateExpression","start":46724,"end":46727,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46724,"end":46725,"name":"i"}}}]}},{"type":"VariableDeclaration","start":46749,"end":46819,"declarations":[{"type":"VariableDeclarator","start":46755,"end":46818,"id":{"type":"Identifier","start":46755,"end":46777,"name":"prevArraySliceToUpdate"},"init":{"type":"CallExpression","start":46780,"end":46818,"callee":{"type":"MemberExpression","start":46780,"end":46803,"object":{"type":"Identifier","start":46780,"end":46797,"name":"usedPreviousArray"},"property":{"type":"Identifier","start":46798,"end":46803,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46804,"end":46817,"name":"previousIndex"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":46829,"end":46847,"expression":{"type":"AssignmentExpression","start":46829,"end":46846,"operator":"=","left":{"type":"Identifier","start":46829,"end":46830,"name":"i"},"right":{"type":"Identifier","start":46833,"end":46846,"name":"previousIndex"}}},{"type":"ForOfStatement","start":46857,"end":47103,"await":false,"left":{"type":"VariableDeclaration","start":46862,"end":46872,"declarations":[{"type":"VariableDeclarator","start":46868,"end":46872,"id":{"type":"Identifier","start":46868,"end":46872,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46876,"end":46898,"name":"prevArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46900,"end":47103,"body":[{"type":"ExpressionStatement","start":46942,"end":46997,"expression":{"type":"CallExpression","start":46942,"end":46996,"callee":{"type":"MemberExpression","start":46942,"end":46954,"object":{"type":"Identifier","start":46942,"end":46947,"name":"batch"},"property":{"type":"Identifier","start":46948,"end":46954,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46955,"end":46981,"object":{"type":"MemberExpression","start":46955,"end":46977,"object":{"type":"Identifier","start":46955,"end":46959,"name":"item"},"property":{"type":"Identifier","start":46960,"end":46977,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46978,"end":46981,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46983,"end":46995,"properties":[{"type":"Property","start":46985,"end":46993,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46985,"end":46990,"name":"index"},"value":{"type":"Identifier","start":46992,"end":46993,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":47011,"end":47074,"test":{"type":"UnaryExpression","start":47015,"end":47023,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":47016,"end":47023,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":47025,"end":47074,"body":[{"type":"ExpressionStatement","start":47044,"end":47059,"expression":{"type":"AssignmentExpression","start":47044,"end":47058,"operator":"=","left":{"type":"MemberExpression","start":47044,"end":47054,"object":{"type":"Identifier","start":47044,"end":47048,"name":"item"},"property":{"type":"Identifier","start":47049,"end":47054,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":47057,"end":47058,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":47088,"end":47092,"expression":{"type":"UpdateExpression","start":47088,"end":47091,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":47088,"end":47089,"name":"i"}}}]}},{"type":"ReturnStatement","start":47113,"end":47126,"argument":{"type":"Identifier","start":47120,"end":47125,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47266,"end":47414,"static":false,"computed":false,"key":{"type":"Identifier","start":47266,"end":47287,"name":"deleteMultipleSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":47287,"end":47414,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47288,"end":47295,"name":"docRefs"}],"body":{"type":"BlockStatement","start":47297,"end":47414,"body":[{"type":"VariableDeclaration","start":47308,"end":47365,"declarations":[{"type":"VariableDeclarator","start":47314,"end":47364,"id":{"type":"Identifier","start":47314,"end":47319,"name":"batch"},"init":{"type":"CallExpression","start":47322,"end":47364,"callee":{"type":"MemberExpression","start":47322,"end":47355,"object":{"type":"ThisExpression","start":47322,"end":47326},"property":{"type":"Identifier","start":47327,"end":47355,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47356,"end":47363,"name":"docRefs"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":47375,"end":47407,"argument":{"type":"CallExpression","start":47382,"end":47406,"callee":{"type":"MemberExpression","start":47382,"end":47399,"object":{"type":"ThisExpression","start":47382,"end":47386},"property":{"type":"Identifier","start":47387,"end":47399,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47400,"end":47405,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":47420,"end":47615,"static":false,"computed":false,"key":{"type":"Identifier","start":47420,"end":47448,"name":"getDeleteMultipleSimpleBatch"},"kind":"method","value":{"type":"FunctionExpression","start":47448,"end":47615,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47449,"end":47456,"name":"docRefs"},{"type":"AssignmentPattern","start":47458,"end":47495,"left":{"type":"Identifier","start":47458,"end":47463,"name":"batch"},"right":{"type":"CallExpression","start":47466,"end":47495,"callee":{"type":"Identifier","start":47466,"end":47476,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":47477,"end":47494,"object":{"type":"MemberExpression","start":47477,"end":47484,"object":{"type":"ThisExpression","start":47477,"end":47481},"property":{"type":"Identifier","start":47482,"end":47484,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":47485,"end":47494,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":47497,"end":47615,"body":[{"type":"ExpressionStatement","start":47508,"end":47585,"expression":{"type":"CallExpression","start":47508,"end":47584,"callee":{"type":"MemberExpression","start":47508,"end":47523,"object":{"type":"Identifier","start":47508,"end":47515,"name":"docRefs"},"property":{"type":"Identifier","start":47516,"end":47523,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47524,"end":47583,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47525,"end":47531,"name":"docRef"}],"body":{"type":"BlockStatement","start":47536,"end":47583,"body":[{"type":"ExpressionStatement","start":47551,"end":47572,"expression":{"type":"CallExpression","start":47551,"end":47571,"callee":{"type":"MemberExpression","start":47551,"end":47563,"object":{"type":"Identifier","start":47551,"end":47556,"name":"batch"},"property":{"type":"Identifier","start":47557,"end":47563,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47564,"end":47570,"name":"docRef"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":47595,"end":47608,"argument":{"type":"Identifier","start":47602,"end":47607,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47902,"end":49581,"static":false,"computed":false,"key":{"type":"Identifier","start":47902,"end":47933,"name":"removeDataExtrasRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":47933,"end":49581,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47934,"end":47940,"name":"dbItem"},{"type":"AssignmentPattern","start":47942,"end":47967,"left":{"type":"Identifier","start":47942,"end":47962,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":47965,"end":47967,"elements":[]}},{"type":"AssignmentPattern","start":47969,"end":47998,"left":{"type":"Identifier","start":47969,"end":47993,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":47996,"end":47998,"elements":[]}}],"body":{"type":"BlockStatement","start":48000,"end":49581,"body":[{"type":"VariableDeclaration","start":48108,"end":48190,"declarations":[{"type":"VariableDeclarator","start":48114,"end":48189,"id":{"type":"Identifier","start":48114,"end":48132,"name":"extraPropertyNames"},"init":{"type":"CallExpression","start":48135,"end":48189,"callee":{"type":"MemberExpression","start":48135,"end":48163,"object":{"type":"ArrayExpression","start":48135,"end":48156,"elements":[{"type":"Literal","start":48136,"end":48155,"value":"firestoreMetadata","raw":"'firestoreMetadata'"}]},"property":{"type":"Identifier","start":48157,"end":48163,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48164,"end":48188,"name":"additionalFieldsToRemove"}],"optional":false}}],"kind":"const"},{"type":"ForOfStatement","start":48236,"end":48347,"await":false,"left":{"type":"VariableDeclaration","start":48241,"end":48264,"declarations":[{"type":"VariableDeclarator","start":48247,"end":48264,"id":{"type":"Identifier","start":48247,"end":48264,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48268,"end":48286,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48288,"end":48347,"body":[{"type":"ExpressionStatement","start":48303,"end":48336,"expression":{"type":"UnaryExpression","start":48303,"end":48335,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48310,"end":48335,"object":{"type":"Identifier","start":48310,"end":48316,"name":"dbItem"},"property":{"type":"Identifier","start":48317,"end":48334,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":48357,"end":49550,"expression":{"type":"CallExpression","start":48357,"end":49549,"callee":{"type":"MemberExpression","start":48357,"end":48385,"object":{"type":"Identifier","start":48357,"end":48377,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":48378,"end":48385,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":48386,"end":49548,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48386,"end":48389,"name":"col"}],"body":{"type":"BlockStatement","start":48393,"end":49548,"body":[{"type":"IfStatement","start":48408,"end":49537,"test":{"type":"CallExpression","start":48412,"end":48443,"callee":{"type":"MemberExpression","start":48412,"end":48425,"object":{"type":"Identifier","start":48412,"end":48417,"name":"Array"},"property":{"type":"Identifier","start":48418,"end":48425,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":48426,"end":48442,"object":{"type":"Identifier","start":48426,"end":48432,"name":"dbItem"},"property":{"type":"MemberExpression","start":48433,"end":48441,"object":{"type":"Identifier","start":48433,"end":48436,"name":"col"},"property":{"type":"Identifier","start":48437,"end":48441,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":48445,"end":49073,"body":[{"type":"VariableDeclaration","start":48518,"end":48548,"declarations":[{"type":"VariableDeclarator","start":48524,"end":48547,"id":{"type":"Identifier","start":48524,"end":48528,"name":"docs"},"init":{"type":"MemberExpression","start":48531,"end":48547,"object":{"type":"Identifier","start":48531,"end":48537,"name":"dbItem"},"property":{"type":"MemberExpression","start":48538,"end":48546,"object":{"type":"Identifier","start":48538,"end":48541,"name":"col"},"property":{"type":"Identifier","start":48542,"end":48546,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":48566,"end":49058,"expression":{"type":"CallExpression","start":48566,"end":49057,"callee":{"type":"MemberExpression","start":48566,"end":48578,"object":{"type":"Identifier","start":48566,"end":48570,"name":"docs"},"property":{"type":"Identifier","start":48571,"end":48578,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":48579,"end":49056,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48580,"end":48581,"name":"d"},{"type":"Identifier","start":48583,"end":48584,"name":"i"}],"body":{"type":"BlockStatement","start":48589,"end":49056,"body":[{"type":"IfStatement","start":48612,"end":49037,"test":{"type":"MemberExpression","start":48616,"end":48634,"object":{"type":"Identifier","start":48616,"end":48619,"name":"col"},"property":{"type":"Identifier","start":48620,"end":48634,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48636,"end":48772,"body":[{"type":"ExpressionStatement","start":48663,"end":48749,"expression":{"type":"CallExpression","start":48663,"end":48748,"callee":{"type":"MemberExpression","start":48663,"end":48699,"object":{"type":"ThisExpression","start":48663,"end":48667},"property":{"type":"Identifier","start":48668,"end":48699,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48700,"end":48701,"name":"d"},{"type":"MemberExpression","start":48703,"end":48721,"object":{"type":"Identifier","start":48703,"end":48706,"name":"col"},"property":{"type":"Identifier","start":48707,"end":48721,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48723,"end":48747,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48799,"end":49037,"body":[{"type":"ForOfStatement","start":48858,"end":49014,"await":false,"left":{"type":"VariableDeclaration","start":48863,"end":48886,"declarations":[{"type":"VariableDeclarator","start":48869,"end":48886,"id":{"type":"Identifier","start":48869,"end":48886,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48890,"end":48908,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48910,"end":49014,"body":[{"type":"ExpressionStatement","start":48941,"end":48987,"expression":{"type":"UnaryExpression","start":48941,"end":48986,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48948,"end":48986,"object":{"type":"MemberExpression","start":48948,"end":48967,"object":{"type":"MemberExpression","start":48948,"end":48964,"object":{"type":"Identifier","start":48948,"end":48954,"name":"dbItem"},"property":{"type":"MemberExpression","start":48955,"end":48963,"object":{"type":"Identifier","start":48955,"end":48958,"name":"col"},"property":{"type":"Identifier","start":48959,"end":48963,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48965,"end":48966,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":48968,"end":48985,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49092,"end":49537,"body":[{"type":"IfStatement","start":49145,"end":49522,"test":{"type":"MemberExpression","start":49149,"end":49167,"object":{"type":"Identifier","start":49149,"end":49152,"name":"col"},"property":{"type":"Identifier","start":49153,"end":49167,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":49169,"end":49312,"body":[{"type":"ExpressionStatement","start":49192,"end":49293,"expression":{"type":"CallExpression","start":49192,"end":49292,"callee":{"type":"MemberExpression","start":49192,"end":49228,"object":{"type":"ThisExpression","start":49192,"end":49196},"property":{"type":"Identifier","start":49197,"end":49228,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":49229,"end":49245,"object":{"type":"Identifier","start":49229,"end":49235,"name":"dbItem"},"property":{"type":"MemberExpression","start":49236,"end":49244,"object":{"type":"Identifier","start":49236,"end":49239,"name":"col"},"property":{"type":"Identifier","start":49240,"end":49244,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},{"type":"MemberExpression","start":49247,"end":49265,"object":{"type":"Identifier","start":49247,"end":49250,"name":"col"},"property":{"type":"Identifier","start":49251,"end":49265,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":49267,"end":49291,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49335,"end":49522,"body":[{"type":"ForOfStatement","start":49358,"end":49503,"await":false,"left":{"type":"VariableDeclaration","start":49363,"end":49386,"declarations":[{"type":"VariableDeclarator","start":49369,"end":49386,"id":{"type":"Identifier","start":49369,"end":49386,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":49390,"end":49408,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":49410,"end":49503,"body":[{"type":"ExpressionStatement","start":49437,"end":49480,"expression":{"type":"UnaryExpression","start":49437,"end":49479,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":49444,"end":49479,"object":{"type":"MemberExpression","start":49444,"end":49460,"object":{"type":"Identifier","start":49444,"end":49450,"name":"dbItem"},"property":{"type":"MemberExpression","start":49451,"end":49459,"object":{"type":"Identifier","start":49451,"end":49454,"name":"col"},"property":{"type":"Identifier","start":49455,"end":49459,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":49461,"end":49478,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":49560,"end":49574,"argument":{"type":"Identifier","start":49567,"end":49573,"name":"dbItem"}}]}}},{"type":"MethodDefinition","start":49907,"end":50263,"static":false,"computed":false,"key":{"type":"Identifier","start":49907,"end":49933,"name":"getDocumentReferencesDeep$"},"kind":"method","value":{"type":"FunctionExpression","start":49933,"end":50263,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49934,"end":49937,"name":"ref"},{"type":"AssignmentPattern","start":49939,"end":49964,"left":{"type":"Identifier","start":49939,"end":49959,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49962,"end":49964,"elements":[]}}],"body":{"type":"BlockStatement","start":49966,"end":50263,"body":[{"type":"IfStatement","start":49977,"end":50256,"test":{"type":"BinaryExpression","start":49981,"end":50013,"left":{"type":"Identifier","start":49981,"end":49984,"name":"ref"},"operator":"instanceof","right":{"type":"Identifier","start":49996,"end":50013,"name":"DocumentReference"}},"consequent":{"type":"BlockStatement","start":50015,"end":50113,"body":[{"type":"ReturnStatement","start":50030,"end":50102,"argument":{"type":"CallExpression","start":50037,"end":50101,"callee":{"type":"MemberExpression","start":50037,"end":50074,"object":{"type":"ThisExpression","start":50037,"end":50041},"property":{"type":"Identifier","start":50042,"end":50074,"name":"getDocumentReferencesFromDocRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50075,"end":50078,"name":"ref"},{"type":"Identifier","start":50080,"end":50100,"name":"subCollectionQueries"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":50128,"end":50256,"body":[{"type":"ReturnStatement","start":50166,"end":50245,"argument":{"type":"CallExpression","start":50173,"end":50244,"callee":{"type":"MemberExpression","start":50173,"end":50217,"object":{"type":"ThisExpression","start":50173,"end":50177},"property":{"type":"Identifier","start":50178,"end":50217,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50218,"end":50221,"name":"ref"},{"type":"Identifier","start":50223,"end":50243,"name":"subCollectionQueries"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":50269,"end":50704,"static":false,"computed":false,"key":{"type":"Identifier","start":50269,"end":50301,"name":"getDocumentReferencesFromDocRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50301,"end":50704,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50302,"end":50308,"name":"docRef"},{"type":"AssignmentPattern","start":50310,"end":50335,"left":{"type":"Identifier","start":50310,"end":50330,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50333,"end":50335,"elements":[]}}],"body":{"type":"BlockStatement","start":50337,"end":50704,"body":[{"type":"ReturnStatement","start":50348,"end":50697,"argument":{"type":"CallExpression","start":50355,"end":50696,"callee":{"type":"MemberExpression","start":50355,"end":50408,"object":{"type":"CallExpression","start":50355,"end":50403,"callee":{"type":"MemberExpression","start":50355,"end":50373,"object":{"type":"ThisExpression","start":50355,"end":50359},"property":{"type":"Identifier","start":50360,"end":50373,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50374,"end":50380,"name":"docRef"},{"type":"Identifier","start":50382,"end":50402,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":50404,"end":50408,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50409,"end":50416,"callee":{"type":"Identifier","start":50409,"end":50413,"name":"take"},"arguments":[{"type":"Literal","start":50414,"end":50415,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50418,"end":50499,"callee":{"type":"Identifier","start":50418,"end":50421,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50422,"end":50498,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50422,"end":50426,"name":"item"}],"body":{"type":"CallExpression","start":50430,"end":50498,"callee":{"type":"MemberExpression","start":50430,"end":50470,"object":{"type":"ThisExpression","start":50430,"end":50434},"property":{"type":"Identifier","start":50435,"end":50470,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50471,"end":50475,"name":"item"},{"type":"Identifier","start":50477,"end":50497,"name":"subCollectionQueries"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":50563,"end":50695,"callee":{"type":"Identifier","start":50563,"end":50566,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50567,"end":50694,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50568,"end":50576,"name":"pathList"}],"body":{"type":"BlockStatement","start":50581,"end":50694,"body":[{"type":"ReturnStatement","start":50596,"end":50683,"argument":{"type":"CallExpression","start":50603,"end":50682,"callee":{"type":"MemberExpression","start":50603,"end":50633,"object":{"type":"Identifier","start":50603,"end":50611,"name":"pathList"},"property":{"type":"Identifier","start":50630,"end":50633,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50634,"end":50681,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50634,"end":50638,"name":"path"}],"body":{"type":"CallExpression","start":50642,"end":50681,"callee":{"type":"Identifier","start":50642,"end":50656,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50657,"end":50661,"name":"path"},{"type":"MemberExpression","start":50663,"end":50680,"object":{"type":"MemberExpression","start":50663,"end":50670,"object":{"type":"ThisExpression","start":50663,"end":50667},"property":{"type":"Identifier","start":50668,"end":50670,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50671,"end":50680,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":50710,"end":51526,"static":false,"computed":false,"key":{"type":"Identifier","start":50710,"end":50749,"name":"getDocumentReferencesFromCollectionRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50749,"end":51526,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50750,"end":50763,"name":"collectionRef"},{"type":"AssignmentPattern","start":50765,"end":50790,"left":{"type":"Identifier","start":50765,"end":50785,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50788,"end":50790,"elements":[]}}],"body":{"type":"BlockStatement","start":50792,"end":51526,"body":[{"type":"ReturnStatement","start":50803,"end":51519,"argument":{"type":"CallExpression","start":50810,"end":51518,"callee":{"type":"MemberExpression","start":50810,"end":50861,"object":{"type":"CallExpression","start":50810,"end":50856,"callee":{"type":"MemberExpression","start":50810,"end":50841,"object":{"type":"ThisExpression","start":50810,"end":50814},"property":{"type":"Identifier","start":50815,"end":50841,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50842,"end":50855,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":50857,"end":50861,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50895,"end":50902,"callee":{"type":"Identifier","start":50895,"end":50899,"name":"take"},"arguments":[{"type":"Literal","start":50900,"end":50901,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50904,"end":51134,"callee":{"type":"Identifier","start":50904,"end":50912,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":50913,"end":51133,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50914,"end":50919,"name":"items"}],"body":{"type":"BlockStatement","start":50924,"end":51133,"body":[{"type":"VariableDeclaration","start":50939,"end":50956,"declarations":[{"type":"VariableDeclarator","start":50943,"end":50955,"id":{"type":"Identifier","start":50943,"end":50955,"name":"docListeners"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":50970,"end":51073,"expression":{"type":"AssignmentExpression","start":50970,"end":51072,"operator":"=","left":{"type":"Identifier","start":50970,"end":50982,"name":"docListeners"},"right":{"type":"CallExpression","start":50985,"end":51072,"callee":{"type":"MemberExpression","start":50985,"end":50994,"object":{"type":"Identifier","start":50985,"end":50990,"name":"items"},"property":{"type":"Identifier","start":50991,"end":50994,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50995,"end":51071,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50995,"end":50999,"name":"item"}],"body":{"type":"CallExpression","start":51003,"end":51071,"callee":{"type":"MemberExpression","start":51003,"end":51021,"object":{"type":"ThisExpression","start":51003,"end":51007},"property":{"type":"Identifier","start":51008,"end":51021,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":51022,"end":51048,"object":{"type":"MemberExpression","start":51022,"end":51044,"object":{"type":"Identifier","start":51022,"end":51026,"name":"item"},"property":{"type":"Identifier","start":51027,"end":51044,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51045,"end":51048,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":51050,"end":51070,"name":"subCollectionQueries"}],"optional":false}}],"optional":false}}},{"type":"ReturnStatement","start":51087,"end":51122,"argument":{"type":"CallExpression","start":51094,"end":51121,"callee":{"type":"Identifier","start":51094,"end":51107,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":51108,"end":51120,"name":"docListeners"}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":51136,"end":51383,"callee":{"type":"Identifier","start":51136,"end":51139,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":51140,"end":51382,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51141,"end":51146,"name":"items"}],"body":{"type":"BlockStatement","start":51151,"end":51382,"body":[{"type":"VariableDeclaration","start":51166,"end":51181,"declarations":[{"type":"VariableDeclarator","start":51170,"end":51180,"id":{"type":"Identifier","start":51170,"end":51175,"name":"paths"},"init":{"type":"ArrayExpression","start":51178,"end":51180,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":51195,"end":51344,"expression":{"type":"CallExpression","start":51195,"end":51343,"callee":{"type":"MemberExpression","start":51195,"end":51208,"object":{"type":"Identifier","start":51195,"end":51200,"name":"items"},"property":{"type":"Identifier","start":51201,"end":51208,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51209,"end":51342,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51209,"end":51213,"name":"item"}],"body":{"type":"BlockStatement","start":51217,"end":51342,"body":[{"type":"ExpressionStatement","start":51236,"end":51327,"expression":{"type":"AssignmentExpression","start":51236,"end":51326,"operator":"=","left":{"type":"Identifier","start":51236,"end":51241,"name":"paths"},"right":{"type":"CallExpression","start":51244,"end":51326,"callee":{"type":"MemberExpression","start":51244,"end":51256,"object":{"type":"Identifier","start":51244,"end":51249,"name":"paths"},"property":{"type":"Identifier","start":51250,"end":51256,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":51257,"end":51325,"callee":{"type":"MemberExpression","start":51257,"end":51297,"object":{"type":"ThisExpression","start":51257,"end":51261},"property":{"type":"Identifier","start":51262,"end":51297,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51298,"end":51302,"name":"item"},{"type":"Identifier","start":51304,"end":51324,"name":"subCollectionQueries"}],"optional":false}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":51358,"end":51371,"argument":{"type":"Identifier","start":51365,"end":51370,"name":"paths"}}]}}],"optional":false},{"type":"CallExpression","start":51385,"end":51517,"callee":{"type":"Identifier","start":51385,"end":51388,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":51389,"end":51516,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51390,"end":51398,"name":"pathList"}],"body":{"type":"BlockStatement","start":51403,"end":51516,"body":[{"type":"ReturnStatement","start":51418,"end":51505,"argument":{"type":"CallExpression","start":51425,"end":51504,"callee":{"type":"MemberExpression","start":51425,"end":51455,"object":{"type":"Identifier","start":51425,"end":51433,"name":"pathList"},"property":{"type":"Identifier","start":51452,"end":51455,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51456,"end":51503,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":51456,"end":51460,"name":"path"}],"body":{"type":"CallExpression","start":51464,"end":51503,"callee":{"type":"Identifier","start":51464,"end":51478,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51479,"end":51483,"name":"path"},{"type":"MemberExpression","start":51485,"end":51502,"object":{"type":"MemberExpression","start":51485,"end":51492,"object":{"type":"ThisExpression","start":51485,"end":51489},"property":{"type":"Identifier","start":51490,"end":51492,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51493,"end":51502,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":51932,"end":52172,"static":false,"computed":false,"key":{"type":"Identifier","start":51932,"end":51961,"name":"getDocumentReferencesFromItem"},"kind":"method","value":{"type":"FunctionExpression","start":51961,"end":52172,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51962,"end":51966,"name":"item"},{"type":"AssignmentPattern","start":51968,"end":51993,"left":{"type":"Identifier","start":51968,"end":51988,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51991,"end":51993,"elements":[]}}],"body":{"type":"BlockStatement","start":51995,"end":52172,"body":[{"type":"VariableDeclaration","start":52006,"end":52089,"declarations":[{"type":"VariableDeclarator","start":52012,"end":52088,"id":{"type":"Identifier","start":52012,"end":52017,"name":"paths"},"init":{"type":"CallExpression","start":52020,"end":52088,"callee":{"type":"MemberExpression","start":52020,"end":52060,"object":{"type":"ThisExpression","start":52020,"end":52024},"property":{"type":"Identifier","start":52025,"end":52060,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52061,"end":52065,"name":"item"},{"type":"Identifier","start":52067,"end":52087,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":52099,"end":52165,"argument":{"type":"CallExpression","start":52106,"end":52164,"callee":{"type":"MemberExpression","start":52106,"end":52115,"object":{"type":"Identifier","start":52106,"end":52111,"name":"paths"},"property":{"type":"Identifier","start":52112,"end":52115,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52116,"end":52163,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":52116,"end":52120,"name":"path"}],"body":{"type":"CallExpression","start":52124,"end":52163,"callee":{"type":"Identifier","start":52124,"end":52138,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":52139,"end":52143,"name":"path"},{"type":"MemberExpression","start":52145,"end":52162,"object":{"type":"MemberExpression","start":52145,"end":52152,"object":{"type":"ThisExpression","start":52145,"end":52149},"property":{"type":"Identifier","start":52150,"end":52152,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52153,"end":52162,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":52272,"end":53860,"static":false,"computed":false,"key":{"type":"Identifier","start":52272,"end":52307,"name":"getPathsFromItemDeepRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":52307,"end":53860,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52308,"end":52312,"name":"item"},{"type":"AssignmentPattern","start":52314,"end":52339,"left":{"type":"Identifier","start":52314,"end":52334,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":52337,"end":52339,"elements":[]}}],"body":{"type":"BlockStatement","start":52341,"end":53860,"body":[{"type":"IfStatement","start":52352,"end":52486,"test":{"type":"LogicalExpression","start":52356,"end":52421,"left":{"type":"BinaryExpression","start":52356,"end":52384,"left":{"type":"Identifier","start":52356,"end":52376,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":52380,"end":52384,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":52388,"end":52421,"left":{"type":"MemberExpression","start":52388,"end":52415,"object":{"type":"Identifier","start":52388,"end":52408,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":52409,"end":52415,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":52420,"end":52421,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":52423,"end":52486,"body":[{"type":"ReturnStatement","start":52438,"end":52475,"argument":{"type":"ArrayExpression","start":52445,"end":52474,"elements":[{"type":"MemberExpression","start":52446,"end":52473,"object":{"type":"MemberExpression","start":52446,"end":52468,"object":{"type":"Identifier","start":52446,"end":52450,"name":"item"},"property":{"type":"Identifier","start":52451,"end":52468,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52469,"end":52473,"name":"path"},"computed":false,"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":52496,"end":52514,"declarations":[{"type":"VariableDeclarator","start":52500,"end":52513,"id":{"type":"Identifier","start":52500,"end":52508,"name":"pathList"},"init":{"type":"ArrayExpression","start":52511,"end":52513,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":52524,"end":52567,"expression":{"type":"CallExpression","start":52524,"end":52566,"callee":{"type":"MemberExpression","start":52524,"end":52537,"object":{"type":"Identifier","start":52524,"end":52532,"name":"pathList"},"property":{"type":"Identifier","start":52533,"end":52537,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52538,"end":52565,"object":{"type":"MemberExpression","start":52538,"end":52560,"object":{"type":"Identifier","start":52538,"end":52542,"name":"item"},"property":{"type":"Identifier","start":52543,"end":52560,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52561,"end":52565,"name":"path"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":52577,"end":53827,"expression":{"type":"CallExpression","start":52577,"end":53826,"callee":{"type":"MemberExpression","start":52577,"end":52605,"object":{"type":"Identifier","start":52577,"end":52597,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":52598,"end":52605,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52606,"end":53825,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52606,"end":52609,"name":"col"}],"body":{"type":"BlockStatement","start":52613,"end":53825,"body":[{"type":"IfStatement","start":52628,"end":53814,"test":{"type":"LogicalExpression","start":52632,"end":52675,"left":{"type":"CallExpression","start":52632,"end":52661,"callee":{"type":"MemberExpression","start":52632,"end":52645,"object":{"type":"Identifier","start":52632,"end":52637,"name":"Array"},"property":{"type":"Identifier","start":52638,"end":52645,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52646,"end":52660,"object":{"type":"Identifier","start":52646,"end":52650,"name":"item"},"property":{"type":"MemberExpression","start":52651,"end":52659,"object":{"type":"Identifier","start":52651,"end":52654,"name":"col"},"property":{"type":"Identifier","start":52655,"end":52659,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":52665,"end":52675,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":52666,"end":52675,"object":{"type":"Identifier","start":52666,"end":52669,"name":"col"},"property":{"type":"Identifier","start":52670,"end":52675,"name":"docId"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52677,"end":53213,"body":[{"type":"VariableDeclaration","start":52787,"end":52816,"declarations":[{"type":"VariableDeclarator","start":52793,"end":52815,"id":{"type":"Identifier","start":52793,"end":52798,"name":"items"},"init":{"type":"MemberExpression","start":52801,"end":52815,"object":{"type":"Identifier","start":52801,"end":52805,"name":"item"},"property":{"type":"MemberExpression","start":52806,"end":52814,"object":{"type":"Identifier","start":52806,"end":52809,"name":"col"},"property":{"type":"Identifier","start":52810,"end":52814,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":52834,"end":53198,"expression":{"type":"CallExpression","start":52834,"end":53197,"callee":{"type":"MemberExpression","start":52834,"end":52847,"object":{"type":"Identifier","start":52834,"end":52839,"name":"items"},"property":{"type":"Identifier","start":52840,"end":52847,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52848,"end":53196,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52848,"end":52855,"name":"subItem"}],"body":{"type":"BlockStatement","start":52859,"end":53196,"body":[{"type":"IfStatement","start":52882,"end":53177,"test":{"type":"MemberExpression","start":52886,"end":52904,"object":{"type":"Identifier","start":52886,"end":52889,"name":"col"},"property":{"type":"Identifier","start":52890,"end":52904,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52906,"end":53054,"body":[{"type":"ExpressionStatement","start":52933,"end":53031,"expression":{"type":"AssignmentExpression","start":52933,"end":53030,"operator":"=","left":{"type":"Identifier","start":52933,"end":52941,"name":"pathList"},"right":{"type":"CallExpression","start":52944,"end":53030,"callee":{"type":"MemberExpression","start":52944,"end":52959,"object":{"type":"Identifier","start":52944,"end":52952,"name":"pathList"},"property":{"type":"Identifier","start":52953,"end":52959,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52960,"end":53029,"callee":{"type":"MemberExpression","start":52960,"end":53000,"object":{"type":"ThisExpression","start":52960,"end":52964},"property":{"type":"Identifier","start":52965,"end":53000,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53001,"end":53008,"name":"subItem"},{"type":"MemberExpression","start":53010,"end":53028,"object":{"type":"Identifier","start":53010,"end":53013,"name":"col"},"property":{"type":"Identifier","start":53014,"end":53028,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":53081,"end":53177,"body":[{"type":"ExpressionStatement","start":53108,"end":53154,"expression":{"type":"CallExpression","start":53108,"end":53153,"callee":{"type":"MemberExpression","start":53108,"end":53121,"object":{"type":"Identifier","start":53108,"end":53116,"name":"pathList"},"property":{"type":"Identifier","start":53117,"end":53121,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53122,"end":53152,"object":{"type":"MemberExpression","start":53122,"end":53147,"object":{"type":"Identifier","start":53122,"end":53129,"name":"subItem"},"property":{"type":"Identifier","start":53130,"end":53147,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53148,"end":53152,"name":"path"},"computed":false,"optional":false}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":53232,"end":53814,"body":[{"type":"IfStatement","start":53285,"end":53799,"test":{"type":"MemberExpression","start":53289,"end":53307,"object":{"type":"Identifier","start":53289,"end":53292,"name":"col"},"property":{"type":"Identifier","start":53293,"end":53307,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":53309,"end":53446,"body":[{"type":"ExpressionStatement","start":53332,"end":53427,"expression":{"type":"AssignmentExpression","start":53332,"end":53426,"operator":"=","left":{"type":"Identifier","start":53332,"end":53340,"name":"pathList"},"right":{"type":"CallExpression","start":53343,"end":53426,"callee":{"type":"MemberExpression","start":53343,"end":53358,"object":{"type":"Identifier","start":53343,"end":53351,"name":"pathList"},"property":{"type":"Identifier","start":53352,"end":53358,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":53359,"end":53425,"callee":{"type":"MemberExpression","start":53359,"end":53399,"object":{"type":"ThisExpression","start":53359,"end":53363},"property":{"type":"Identifier","start":53364,"end":53399,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53400,"end":53404,"name":"item"},{"type":"MemberExpression","start":53406,"end":53424,"object":{"type":"Identifier","start":53406,"end":53409,"name":"col"},"property":{"type":"Identifier","start":53410,"end":53424,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":53469,"end":53799,"body":[{"type":"VariableDeclaration","start":53492,"end":53523,"declarations":[{"type":"VariableDeclarator","start":53498,"end":53522,"id":{"type":"Identifier","start":53498,"end":53505,"name":"subItem"},"init":{"type":"MemberExpression","start":53508,"end":53522,"object":{"type":"Identifier","start":53508,"end":53512,"name":"item"},"property":{"type":"MemberExpression","start":53513,"end":53521,"object":{"type":"Identifier","start":53513,"end":53516,"name":"col"},"property":{"type":"Identifier","start":53517,"end":53521,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":53545,"end":53701,"test":{"type":"LogicalExpression","start":53549,"end":53603,"left":{"type":"BinaryExpression","start":53549,"end":53564,"left":{"type":"Identifier","start":53549,"end":53556,"name":"subItem"},"operator":"!=","right":{"type":"Literal","start":53560,"end":53564,"value":null,"raw":"null"}},"operator":"&&","right":{"type":"BinaryExpression","start":53568,"end":53603,"left":{"type":"Literal","start":53568,"end":53574,"value":"path","raw":"'path'"},"operator":"in","right":{"type":"MemberExpression","start":53578,"end":53603,"object":{"type":"Identifier","start":53578,"end":53585,"name":"subItem"},"property":{"type":"Identifier","start":53586,"end":53603,"name":"firestoreMetadata"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":53605,"end":53701,"body":[{"type":"ExpressionStatement","start":53632,"end":53678,"expression":{"type":"CallExpression","start":53632,"end":53677,"callee":{"type":"MemberExpression","start":53632,"end":53645,"object":{"type":"Identifier","start":53632,"end":53640,"name":"pathList"},"property":{"type":"Identifier","start":53641,"end":53645,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53646,"end":53676,"object":{"type":"MemberExpression","start":53646,"end":53671,"object":{"type":"Identifier","start":53646,"end":53653,"name":"subItem"},"property":{"type":"Identifier","start":53654,"end":53671,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53672,"end":53676,"name":"path"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":53837,"end":53853,"argument":{"type":"Identifier","start":53844,"end":53852,"name":"pathList"}}]}}},{"type":"MethodDefinition","start":54041,"end":55066,"static":false,"computed":false,"key":{"type":"Identifier","start":54041,"end":54081,"name":"splitDataIntoCurrentDocAndSubCollections"},"kind":"method","value":{"type":"FunctionExpression","start":54081,"end":55066,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":54082,"end":54086,"name":"data"},{"type":"AssignmentPattern","start":54088,"end":54113,"left":{"type":"Identifier","start":54088,"end":54108,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":54111,"end":54113,"elements":[]}}],"body":{"type":"BlockStatement","start":54115,"end":55066,"body":[{"type":"VariableDeclaration","start":54189,"end":54209,"declarations":[{"type":"VariableDeclarator","start":54193,"end":54208,"id":{"type":"Identifier","start":54193,"end":54203,"name":"currentDoc"},"init":{"type":"ObjectExpression","start":54206,"end":54208,"properties":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":54219,"end":54245,"declarations":[{"type":"VariableDeclarator","start":54225,"end":54244,"id":{"type":"Identifier","start":54225,"end":54239,"name":"subCollections"},"init":{"type":"ObjectExpression","start":54242,"end":54244,"properties":[]}}],"kind":"const"},{"type":"ForOfStatement","start":54405,"end":54976,"await":false,"left":{"type":"VariableDeclaration","start":54410,"end":54428,"declarations":[{"type":"VariableDeclarator","start":54416,"end":54428,"id":{"type":"ArrayPattern","start":54416,"end":54428,"elements":[{"type":"Identifier","start":54417,"end":54420,"name":"key"},{"type":"Identifier","start":54422,"end":54427,"name":"value"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":54432,"end":54452,"callee":{"type":"MemberExpression","start":54432,"end":54446,"object":{"type":"Identifier","start":54432,"end":54438,"name":"Object"},"property":{"type":"Identifier","start":54439,"end":54446,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":54447,"end":54451,"name":"data"}],"optional":false},"body":{"type":"BlockStatement","start":54454,"end":54976,"body":[{"type":"IfStatement","start":54510,"end":54965,"test":{"type":"LogicalExpression","start":54514,"end":54569,"left":{"type":"Identifier","start":54514,"end":54534,"name":"subCollectionWriters"},"operator":"&&","right":{"type":"BinaryExpression","start":54538,"end":54569,"left":{"type":"MemberExpression","start":54538,"end":54565,"object":{"type":"Identifier","start":54538,"end":54558,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54559,"end":54565,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":54568,"end":54569,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":54571,"end":54894,"body":[{"type":"VariableDeclaration","start":54590,"end":54677,"declarations":[{"type":"VariableDeclarator","start":54596,"end":54676,"id":{"type":"Identifier","start":54596,"end":54615,"name":"subCollectionWriter"},"init":{"type":"CallExpression","start":54618,"end":54676,"callee":{"type":"MemberExpression","start":54618,"end":54643,"object":{"type":"Identifier","start":54618,"end":54638,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54639,"end":54643,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":54644,"end":54675,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":54644,"end":54651,"name":"subColl"}],"body":{"type":"BinaryExpression","start":54655,"end":54675,"left":{"type":"MemberExpression","start":54655,"end":54667,"object":{"type":"Identifier","start":54655,"end":54662,"name":"subColl"},"property":{"type":"Identifier","start":54663,"end":54667,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":54672,"end":54675,"name":"key"}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":54695,"end":54879,"test":{"type":"Identifier","start":54699,"end":54718,"name":"subCollectionWriter"},"consequent":{"type":"BlockStatement","start":54720,"end":54790,"body":[{"type":"ExpressionStatement","start":54743,"end":54771,"expression":{"type":"AssignmentExpression","start":54743,"end":54770,"operator":"=","left":{"type":"MemberExpression","start":54743,"end":54762,"object":{"type":"Identifier","start":54743,"end":54757,"name":"subCollections"},"property":{"type":"Identifier","start":54758,"end":54761,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54765,"end":54770,"name":"value"}}}]},"alternate":{"type":"BlockStatement","start":54813,"end":54879,"body":[{"type":"ExpressionStatement","start":54836,"end":54860,"expression":{"type":"AssignmentExpression","start":54836,"end":54859,"operator":"=","left":{"type":"MemberExpression","start":54836,"end":54851,"object":{"type":"Identifier","start":54836,"end":54846,"name":"currentDoc"},"property":{"type":"Identifier","start":54847,"end":54850,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54854,"end":54859,"name":"value"}}}]}}]},"alternate":{"type":"BlockStatement","start":54913,"end":54965,"body":[{"type":"ExpressionStatement","start":54932,"end":54950,"expression":{"type":"AssignmentExpression","start":54932,"end":54949,"operator":"=","left":{"type":"Identifier","start":54932,"end":54942,"name":"currentDoc"},"right":{"type":"Identifier","start":54945,"end":54949,"name":"data"}}}]}}]}},{"type":"ReturnStatement","start":54986,"end":55059,"argument":{"type":"ObjectExpression","start":54993,"end":55058,"properties":[{"type":"Property","start":55008,"end":55018,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":55008,"end":55018,"name":"currentDoc"},"kind":"init","value":{"type":"Identifier","start":55008,"end":55018,"name":"currentDoc"}},{"type":"Property","start":55033,"end":55047,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":55033,"end":55047,"name":"subCollections"},"kind":"init","value":{"type":"Identifier","start":55033,"end":55047,"name":"subCollections"}}]}}]}}},{"type":"MethodDefinition","start":55345,"end":55425,"static":false,"computed":false,"key":{"type":"Identifier","start":55345,"end":55357,"name":"batchCommit$"},"kind":"method","value":{"type":"FunctionExpression","start":55357,"end":55425,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":55358,"end":55363,"name":"batch"}],"body":{"type":"BlockStatement","start":55365,"end":55425,"body":[{"type":"ReturnStatement","start":55376,"end":55418,"argument":{"type":"CallExpression","start":55383,"end":55417,"callee":{"type":"MemberExpression","start":55383,"end":55408,"object":{"type":"CallExpression","start":55383,"end":55403,"callee":{"type":"Identifier","start":55383,"end":55387,"name":"from"},"arguments":[{"type":"CallExpression","start":55388,"end":55402,"callee":{"type":"MemberExpression","start":55388,"end":55400,"object":{"type":"Identifier","start":55388,"end":55393,"name":"batch"},"property":{"type":"Identifier","start":55394,"end":55400,"name":"commit"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"property":{"type":"Identifier","start":55404,"end":55408,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":55409,"end":55416,"callee":{"type":"Identifier","start":55409,"end":55413,"name":"take"},"arguments":[{"type":"Literal","start":55414,"end":55415,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":56110,"end":58331,"declaration":{"type":"ClassDeclaration","start":56117,"end":58331,"id":{"type":"Identifier","start":56123,"end":56137,"name":"QueryContainer"},"superClass":null,"body":{"type":"ClassBody","start":56138,"end":58331,"body":[{"type":"MethodDefinition","start":56145,"end":56232,"static":false,"computed":false,"key":{"type":"Identifier","start":56145,"end":56156,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":56156,"end":56232,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56157,"end":56160,"name":"ref"}],"body":{"type":"BlockStatement","start":56162,"end":56232,"body":[{"type":"ExpressionStatement","start":56173,"end":56188,"expression":{"type":"AssignmentExpression","start":56173,"end":56187,"operator":"=","left":{"type":"MemberExpression","start":56173,"end":56181,"object":{"type":"ThisExpression","start":56173,"end":56177},"property":{"type":"Identifier","start":56178,"end":56181,"name":"ref"},"computed":false,"optional":false},"right":{"type":"Identifier","start":56184,"end":56187,"name":"ref"}}},{"type":"ExpressionStatement","start":56198,"end":56225,"expression":{"type":"AssignmentExpression","start":56198,"end":56224,"operator":"=","left":{"type":"MemberExpression","start":56198,"end":56219,"object":{"type":"ThisExpression","start":56198,"end":56202},"property":{"type":"Identifier","start":56203,"end":56219,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":56222,"end":56224,"elements":[]}}}]}}},{"type":"MethodDefinition","start":56295,"end":56417,"static":true,"computed":false,"key":{"type":"Identifier","start":56302,"end":56310,"name":"fromPath"},"kind":"method","value":{"type":"FunctionExpression","start":56310,"end":56417,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56311,"end":56320,"name":"firestore"},{"type":"Identifier","start":56322,"end":56326,"name":"path"}],"body":{"type":"BlockStatement","start":56328,"end":56417,"body":[{"type":"VariableDeclaration","start":56339,"end":56379,"declarations":[{"type":"VariableDeclarator","start":56345,"end":56378,"id":{"type":"Identifier","start":56345,"end":56348,"name":"ref"},"init":{"type":"CallExpression","start":56351,"end":56378,"callee":{"type":"Identifier","start":56351,"end":56361,"name":"collection"},"arguments":[{"type":"Identifier","start":56362,"end":56371,"name":"firestore"},{"type":"Identifier","start":56373,"end":56377,"name":"path"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":56389,"end":56410,"argument":{"type":"NewExpression","start":56396,"end":56409,"callee":{"type":"ThisExpression","start":56400,"end":56404},"arguments":[{"type":"Identifier","start":56405,"end":56408,"name":"ref"}]}}]}}},{"type":"MethodDefinition","start":56484,"end":56563,"static":false,"computed":false,"key":{"type":"Identifier","start":56488,"end":56493,"name":"query"},"kind":"get","value":{"type":"FunctionExpression","start":56493,"end":56563,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":56496,"end":56563,"body":[{"type":"ReturnStatement","start":56507,"end":56556,"argument":{"type":"CallExpression","start":56514,"end":56555,"callee":{"type":"Identifier","start":56514,"end":56519,"name":"query"},"arguments":[{"type":"MemberExpression","start":56520,"end":56528,"object":{"type":"ThisExpression","start":56520,"end":56524},"property":{"type":"Identifier","start":56525,"end":56528,"name":"ref"},"computed":false,"optional":false},{"type":"SpreadElement","start":56530,"end":56554,"argument":{"type":"MemberExpression","start":56533,"end":56554,"object":{"type":"ThisExpression","start":56533,"end":56537},"property":{"type":"Identifier","start":56538,"end":56554,"name":"queryConstraints"},"computed":false,"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":56661,"end":56723,"static":false,"computed":false,"key":{"type":"Identifier","start":56661,"end":56669,"name":"getDocs$"},"kind":"method","value":{"type":"FunctionExpression","start":56669,"end":56723,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":56672,"end":56723,"body":[{"type":"ReturnStatement","start":56683,"end":56716,"argument":{"type":"CallExpression","start":56690,"end":56715,"callee":{"type":"Identifier","start":56690,"end":56694,"name":"from"},"arguments":[{"type":"CallExpression","start":56695,"end":56714,"callee":{"type":"Identifier","start":56695,"end":56702,"name":"getDocs"},"arguments":[{"type":"MemberExpression","start":56703,"end":56713,"object":{"type":"ThisExpression","start":56703,"end":56707},"property":{"type":"Identifier","start":56708,"end":56713,"name":"query"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":56729,"end":56859,"static":false,"computed":false,"key":{"type":"Identifier","start":56729,"end":56734,"name":"where"},"kind":"method","value":{"type":"FunctionExpression","start":56734,"end":56859,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56735,"end":56744,"name":"fieldPath"},{"type":"Identifier","start":56746,"end":56751,"name":"opStr"},{"type":"Identifier","start":56753,"end":56758,"name":"value"}],"body":{"type":"BlockStatement","start":56760,"end":56859,"body":[{"type":"ExpressionStatement","start":56771,"end":56830,"expression":{"type":"CallExpression","start":56771,"end":56829,"callee":{"type":"MemberExpression","start":56771,"end":56797,"object":{"type":"MemberExpression","start":56771,"end":56792,"object":{"type":"ThisExpression","start":56771,"end":56775},"property":{"type":"Identifier","start":56776,"end":56792,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56793,"end":56797,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56798,"end":56828,"callee":{"type":"Identifier","start":56798,"end":56803,"name":"where"},"arguments":[{"type":"Identifier","start":56804,"end":56813,"name":"fieldPath"},{"type":"Identifier","start":56815,"end":56820,"name":"opStr"},{"type":"Identifier","start":56822,"end":56827,"name":"value"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56840,"end":56852,"argument":{"type":"ThisExpression","start":56847,"end":56851}}]}}},{"type":"MethodDefinition","start":56865,"end":56999,"static":false,"computed":false,"key":{"type":"Identifier","start":56865,"end":56872,"name":"orderBy"},"kind":"method","value":{"type":"FunctionExpression","start":56872,"end":56999,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56873,"end":56882,"name":"fieldPath"},{"type":"Identifier","start":56884,"end":56896,"name":"directionStr"}],"body":{"type":"BlockStatement","start":56898,"end":56999,"body":[{"type":"ExpressionStatement","start":56909,"end":56970,"expression":{"type":"CallExpression","start":56909,"end":56969,"callee":{"type":"MemberExpression","start":56909,"end":56935,"object":{"type":"MemberExpression","start":56909,"end":56930,"object":{"type":"ThisExpression","start":56909,"end":56913},"property":{"type":"Identifier","start":56914,"end":56930,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56931,"end":56935,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56936,"end":56968,"callee":{"type":"Identifier","start":56936,"end":56943,"name":"orderBy"},"arguments":[{"type":"Identifier","start":56944,"end":56953,"name":"fieldPath"},{"type":"Identifier","start":56955,"end":56967,"name":"directionStr"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56980,"end":56992,"argument":{"type":"ThisExpression","start":56987,"end":56991}}]}}},{"type":"MethodDefinition","start":57005,"end":57101,"static":false,"computed":false,"key":{"type":"Identifier","start":57005,"end":57010,"name":"limit"},"kind":"method","value":{"type":"FunctionExpression","start":57010,"end":57101,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57011,"end":57017,"name":"_limit"}],"body":{"type":"BlockStatement","start":57019,"end":57101,"body":[{"type":"ExpressionStatement","start":57030,"end":57072,"expression":{"type":"CallExpression","start":57030,"end":57071,"callee":{"type":"MemberExpression","start":57030,"end":57056,"object":{"type":"MemberExpression","start":57030,"end":57051,"object":{"type":"ThisExpression","start":57030,"end":57034},"property":{"type":"Identifier","start":57035,"end":57051,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57052,"end":57056,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57057,"end":57070,"callee":{"type":"Identifier","start":57057,"end":57062,"name":"limit"},"arguments":[{"type":"Identifier","start":57063,"end":57069,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":57082,"end":57094,"argument":{"type":"ThisExpression","start":57089,"end":57093}}]}}},{"type":"MethodDefinition","start":57107,"end":57215,"static":false,"computed":false,"key":{"type":"Identifier","start":57107,"end":57118,"name":"limitToLast"},"kind":"method","value":{"type":"FunctionExpression","start":57118,"end":57215,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57119,"end":57125,"name":"_limit"}],"body":{"type":"BlockStatement","start":57127,"end":57215,"body":[{"type":"ExpressionStatement","start":57138,"end":57186,"expression":{"type":"CallExpression","start":57138,"end":57185,"callee":{"type":"MemberExpression","start":57138,"end":57164,"object":{"type":"MemberExpression","start":57138,"end":57159,"object":{"type":"ThisExpression","start":57138,"end":57142},"property":{"type":"Identifier","start":57143,"end":57159,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57160,"end":57164,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57165,"end":57184,"callee":{"type":"Identifier","start":57165,"end":57176,"name":"limitToLast"},"arguments":[{"type":"Identifier","start":57177,"end":57183,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":57196,"end":57208,"argument":{"type":"ThisExpression","start":57203,"end":57207}}]}}},{"type":"MethodDefinition","start":57221,"end":57491,"static":false,"computed":false,"key":{"type":"Identifier","start":57221,"end":57228,"name":"startAt"},"kind":"method","value":{"type":"FunctionExpression","start":57228,"end":57491,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57229,"end":57237,"name":"snapshot"},{"type":"RestElement","start":57239,"end":57253,"argument":{"type":"Identifier","start":57242,"end":57253,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57255,"end":57491,"body":[{"type":"IfStatement","start":57266,"end":57462,"test":{"type":"Identifier","start":57270,"end":57278,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57280,"end":57352,"body":[{"type":"ExpressionStatement","start":57295,"end":57341,"expression":{"type":"CallExpression","start":57295,"end":57340,"callee":{"type":"MemberExpression","start":57295,"end":57321,"object":{"type":"MemberExpression","start":57295,"end":57316,"object":{"type":"ThisExpression","start":57295,"end":57299},"property":{"type":"Identifier","start":57300,"end":57316,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57317,"end":57321,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57322,"end":57339,"callee":{"type":"Identifier","start":57322,"end":57329,"name":"startAt"},"arguments":[{"type":"Identifier","start":57330,"end":57338,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57367,"end":57462,"test":{"type":"Identifier","start":57371,"end":57382,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57384,"end":57462,"body":[{"type":"ExpressionStatement","start":57399,"end":57451,"expression":{"type":"CallExpression","start":57399,"end":57450,"callee":{"type":"MemberExpression","start":57399,"end":57425,"object":{"type":"MemberExpression","start":57399,"end":57420,"object":{"type":"ThisExpression","start":57399,"end":57403},"property":{"type":"Identifier","start":57404,"end":57420,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57421,"end":57425,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57426,"end":57449,"callee":{"type":"Identifier","start":57426,"end":57433,"name":"startAt"},"arguments":[{"type":"SpreadElement","start":57434,"end":57448,"argument":{"type":"Identifier","start":57437,"end":57448,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57472,"end":57484,"argument":{"type":"ThisExpression","start":57479,"end":57483}}]}}},{"type":"MethodDefinition","start":57497,"end":57776,"static":false,"computed":false,"key":{"type":"Identifier","start":57497,"end":57507,"name":"startAfter"},"kind":"method","value":{"type":"FunctionExpression","start":57507,"end":57776,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57508,"end":57516,"name":"snapshot"},{"type":"RestElement","start":57518,"end":57532,"argument":{"type":"Identifier","start":57521,"end":57532,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57534,"end":57776,"body":[{"type":"IfStatement","start":57545,"end":57747,"test":{"type":"Identifier","start":57549,"end":57557,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57559,"end":57634,"body":[{"type":"ExpressionStatement","start":57574,"end":57623,"expression":{"type":"CallExpression","start":57574,"end":57622,"callee":{"type":"MemberExpression","start":57574,"end":57600,"object":{"type":"MemberExpression","start":57574,"end":57595,"object":{"type":"ThisExpression","start":57574,"end":57578},"property":{"type":"Identifier","start":57579,"end":57595,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57596,"end":57600,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57601,"end":57621,"callee":{"type":"Identifier","start":57601,"end":57611,"name":"startAfter"},"arguments":[{"type":"Identifier","start":57612,"end":57620,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57649,"end":57747,"test":{"type":"Identifier","start":57653,"end":57664,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57666,"end":57747,"body":[{"type":"ExpressionStatement","start":57681,"end":57736,"expression":{"type":"CallExpression","start":57681,"end":57735,"callee":{"type":"MemberExpression","start":57681,"end":57707,"object":{"type":"MemberExpression","start":57681,"end":57702,"object":{"type":"ThisExpression","start":57681,"end":57685},"property":{"type":"Identifier","start":57686,"end":57702,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57703,"end":57707,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57708,"end":57734,"callee":{"type":"Identifier","start":57708,"end":57718,"name":"startAfter"},"arguments":[{"type":"SpreadElement","start":57719,"end":57733,"argument":{"type":"Identifier","start":57722,"end":57733,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57757,"end":57769,"argument":{"type":"ThisExpression","start":57764,"end":57768}}]}}},{"type":"MethodDefinition","start":57782,"end":58046,"static":false,"computed":false,"key":{"type":"Identifier","start":57782,"end":57787,"name":"endAt"},"kind":"method","value":{"type":"FunctionExpression","start":57787,"end":58046,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57788,"end":57796,"name":"snapshot"},{"type":"RestElement","start":57798,"end":57812,"argument":{"type":"Identifier","start":57801,"end":57812,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57814,"end":58046,"body":[{"type":"IfStatement","start":57825,"end":58017,"test":{"type":"Identifier","start":57829,"end":57837,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57839,"end":57909,"body":[{"type":"ExpressionStatement","start":57854,"end":57898,"expression":{"type":"CallExpression","start":57854,"end":57897,"callee":{"type":"MemberExpression","start":57854,"end":57880,"object":{"type":"MemberExpression","start":57854,"end":57875,"object":{"type":"ThisExpression","start":57854,"end":57858},"property":{"type":"Identifier","start":57859,"end":57875,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57876,"end":57880,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57881,"end":57896,"callee":{"type":"Identifier","start":57881,"end":57886,"name":"endAt"},"arguments":[{"type":"Identifier","start":57887,"end":57895,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57924,"end":58017,"test":{"type":"Identifier","start":57928,"end":57939,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57941,"end":58017,"body":[{"type":"ExpressionStatement","start":57956,"end":58006,"expression":{"type":"CallExpression","start":57956,"end":58005,"callee":{"type":"MemberExpression","start":57956,"end":57982,"object":{"type":"MemberExpression","start":57956,"end":57977,"object":{"type":"ThisExpression","start":57956,"end":57960},"property":{"type":"Identifier","start":57961,"end":57977,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57978,"end":57982,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57983,"end":58004,"callee":{"type":"Identifier","start":57983,"end":57988,"name":"endAt"},"arguments":[{"type":"SpreadElement","start":57989,"end":58003,"argument":{"type":"Identifier","start":57992,"end":58003,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":58027,"end":58039,"argument":{"type":"ThisExpression","start":58034,"end":58038}}]}}},{"type":"MethodDefinition","start":58052,"end":58328,"static":false,"computed":false,"key":{"type":"Identifier","start":58052,"end":58061,"name":"endBefore"},"kind":"method","value":{"type":"FunctionExpression","start":58061,"end":58328,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":58062,"end":58070,"name":"snapshot"},{"type":"RestElement","start":58072,"end":58086,"argument":{"type":"Identifier","start":58075,"end":58086,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":58088,"end":58328,"body":[{"type":"IfStatement","start":58099,"end":58299,"test":{"type":"Identifier","start":58103,"end":58111,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":58113,"end":58187,"body":[{"type":"ExpressionStatement","start":58128,"end":58176,"expression":{"type":"CallExpression","start":58128,"end":58175,"callee":{"type":"MemberExpression","start":58128,"end":58154,"object":{"type":"MemberExpression","start":58128,"end":58149,"object":{"type":"ThisExpression","start":58128,"end":58132},"property":{"type":"Identifier","start":58133,"end":58149,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":58150,"end":58154,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":58155,"end":58174,"callee":{"type":"Identifier","start":58155,"end":58164,"name":"endBefore"},"arguments":[{"type":"Identifier","start":58165,"end":58173,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":58202,"end":58299,"test":{"type":"Identifier","start":58206,"end":58217,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":58219,"end":58299,"body":[{"type":"ExpressionStatement","start":58234,"end":58288,"expression":{"type":"CallExpression","start":58234,"end":58287,"callee":{"type":"MemberExpression","start":58234,"end":58260,"object":{"type":"MemberExpression","start":58234,"end":58255,"object":{"type":"ThisExpression","start":58234,"end":58238},"property":{"type":"Identifier","start":58239,"end":58255,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":58256,"end":58260,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":58261,"end":58286,"callee":{"type":"Identifier","start":58261,"end":58270,"name":"endBefore"},"arguments":[{"type":"SpreadElement","start":58271,"end":58285,"argument":{"type":"Identifier","start":58274,"end":58285,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":58309,"end":58321,"argument":{"type":"ThisExpression","start":58316,"end":58320}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":58333,"end":192959},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":192961,"end":193082}]},"code":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    get firestore() {\r\n        return this.fs.firestore;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return Object.assign(Object.assign({}, item), { [collectionKey]: nextLevelItems });\r\n                    }\r\n                    else {\r\n                        return Object.assign({}, item);\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            var _a, _b;\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = (_a = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _a === void 0 ? void 0 : _a.subCollections;\r\n                    subDocId = (_b = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _b === void 0 ? void 0 : _b.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return Object.assign(Object.assign({}, currentData), groupedData);\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        var _a;\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.firestoreMetadata) == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return Object.assign(Object.assign({}, item), data);\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return Object.assign(Object.assign({}, data), { firestoreMetadata });\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        var _a, _b;\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = (_a = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _a === void 0 ? void 0 : _a.subCollections;\r\n                subDocId = (_b = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)) === null || _b === void 0 ? void 0 : _b.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = Object.assign(Object.assign({}, additionalDataUpdateOnMovedItem), { groupName: currentArrayName });\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    get firestore() {\r\n        return this.fs.firestore;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,23],[32,0,0,31],[34,0,0,33],[38,0,0,37],[40,0,0,51],[42,0,0,53],[44,0,0,54],[50,0,0,60],[56,0,0,66],[57,0,0,67]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,20],[27,0,2,26],[29,0,2,28],[32,0,2,31],[34,0,2,33],[42,0,2,41],[44,0,2,43],[53,0,2,52],[55,0,2,54],[59,0,2,58],[61,0,2,60],[64,0,2,63],[66,0,2,64],[72,0,2,70],[88,0,2,86],[89,0,2,87]],[[0,0,3,0],[7,0,3,7],[9,0,4,2],[19,0,4,12],[21,0,7,2],[38,0,7,19],[40,0,9,2],[45,0,9,7],[47,0,10,2],[56,0,10,11],[58,0,13,2],[65,0,13,9],[67,0,14,2],[72,0,14,7],[74,0,15,2],[85,0,15,13],[87,0,16,2],[94,0,16,9],[96,0,18,2],[101,0,18,7],[103,0,22,2],[113,0,22,12],[115,0,23,2],[122,0,23,9],[124,0,24,2],[129,0,24,7],[131,0,26,2],[141,0,26,12],[143,0,28,1],[149,0,28,7],[169,0,28,27],[170,0,28,28]],[[0,0,30,0],[7,0,30,7],[9,0,31,2],[23,0,31,16],[25,0,32,2],[38,0,32,15],[40,0,33,2],[55,0,33,17],[57,0,34,2],[79,0,34,24],[81,0,35,2],[96,0,35,17],[98,0,36,2],[112,0,36,16],[114,0,37,2],[130,0,37,18],[132,0,38,1],[138,0,38,7],[149,0,38,18],[150,0,38,19]],[[0,0,43,0],[7,0,43,7],[9,0,43,8],[24,0,43,23],[26,0,43,25],[43,0,43,42],[45,0,43,43],[51,0,43,49],[65,0,43,63],[66,0,43,64]],[[0,0,45,0]],[],[[3,0,47,3]],[[0,0,48,0],[6,0,48,6],[7,0,48,0],[11,0,48,12],[28,0,60,1]],[[0,0,48,0],[11,0,48,12],[28,0,48,29]],[[4,0,49,2],[32,0,49,30]],[[4,0,50,2],[75,0,50,13],[76,0,50,13]],[[4,0,52,2],[117,0,52,115]],[[4,0,53,2],[91,0,53,21],[92,0,53,21]],[[4,0,55,2],[51,0,55,49]],[[4,0,56,2],[65,0,56,8],[66,0,56,8]],[[4,0,58,2],[53,0,58,51]],[[4,0,59,2],[91,0,59,21],[92,0,59,21]],[[0,0,60,0],[1,0,60,1],[3,0,48,12],[20,0,48,29],[25,0,48,12],[42,0,48,29],[50,0,60,1]],[[0,0,71,0]],[],[],[],[],[[3,0,76,3]],[[0,0,77,0],[6,0,77,6],[13,0,77,13],[30,0,77,30]],[[4,0,79,2]],[],[],[],[],[[7,0,84,5]],[[4,0,85,2],[16,0,85,22],[18,0,85,46],[20,0,85,55],[35,0,85,78],[41,0,85,84]],[[8,0,85,22],[15,0,85,24],[18,0,85,22],[20,0,85,24],[21,0,85,46]],[[8,0,85,55],[25,0,85,67],[28,0,85,55],[40,0,85,67],[41,0,85,84]],[[4,0,86,2],[5,0,86,3]],[[4,0,88,2],[8,0,88,6],[17,0,88,15]],[[8,0,89,4],[15,0,89,11],[19,0,89,15],[20,0,89,16],[22,0,89,18],[23,0,89,19],[32,0,89,28],[33,0,89,29]],[[4,0,90,2],[5,0,90,3]],[[4,0,92,2],[43,0,92,41]],[[4,0,94,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,122,5]],[[4,0,123,9],[17,0,123,22],[18,0,124,4],[24,0,124,29],[26,0,125,4],[49,0,125,49],[51,0,125,51],[53,0,126,4],[72,0,126,42],[89,0,126,59],[90,0,126,60],[109,0,126,79]],[[8,0,128,4],[15,0,128,11],[19,0,128,15],[20,0,128,16],[52,0,128,48],[53,0,128,49],[59,0,128,55],[61,0,128,57],[81,0,128,77],[83,0,128,79],[99,0,128,95],[100,0,128,96],[101,0,128,97],[105,0,128,101],[106,0,129,6],[109,0,129,9],[110,0,129,10],[114,0,129,14],[115,0,129,15],[117,0,129,17],[118,0,129,18],[122,0,129,37],[123,0,129,38],[124,0,130,5],[125,0,130,6]],[[4,0,131,2],[5,0,131,3]],[[4,0,133,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,164,5]],[[4,0,165,9],[24,0,165,29],[25,0,166,4],[31,0,166,20],[33,0,167,4],[56,0,167,49],[58,0,167,51]],[[8,0,168,4]],[],[],[[11,0,171,7]],[[8,0,172,4],[15,0,172,11],[19,0,172,15],[20,0,172,16],[46,0,172,42],[47,0,172,46],[53,0,172,52],[54,0,172,53],[55,0,172,54],[59,0,172,58],[60,0,173,6],[68,0,173,14],[69,0,173,15],[70,0,173,16],[75,0,173,37],[77,0,173,39],[79,0,173,41]],[[12,0,175,8],[16,0,175,12],[21,0,175,17],[25,0,175,21],[29,0,175,25],[33,0,175,29],[38,0,175,34],[39,0,175,35],[45,0,175,41],[50,0,175,46],[51,0,175,47],[53,0,175,49]],[[16,0,176,10],[23,0,176,17],[25,0,176,19],[26,0,176,20],[28,0,176,22],[29,0,176,23],[30,0,176,24]],[[13,0,177,9]],[[12,0,178,8],[16,0,178,12],[36,0,178,32],[37,0,178,33],[43,0,178,39],[47,0,178,43],[48,0,178,44],[50,0,178,46]],[[16,0,179,10],[23,0,179,17],[25,0,179,19],[26,0,179,20],[31,0,179,25],[32,0,179,26],[33,0,179,27]],[[13,0,180,9]],[[12,0,182,8],[18,0,182,14],[37,0,182,33],[40,0,182,60],[42,0,182,62],[43,0,182,63]],[[12,0,184,8],[17,0,184,13],[18,0,184,14],[25,0,184,21],[26,0,184,22],[30,0,184,26],[31,0,184,27],[33,0,184,29]],[[16,0,186,10],[22,0,186,16],[40,0,186,34],[43,0,186,37],[47,0,186,41],[48,0,186,42],[72,0,186,66],[73,0,186,67],[77,0,186,71],[79,0,186,73],[99,0,186,93],[100,0,186,94],[101,0,186,95]],[[16,0,188,10],[35,0,188,29],[36,0,188,30],[40,0,188,34],[41,0,188,35],[59,0,188,53],[60,0,188,54],[61,0,188,55]],[[12,0,189,8],[13,0,189,9],[14,0,189,10],[15,0,189,11]],[[12,0,191,8],[66,0,191,62]],[[12,0,192,8],[19,0,192,15],[32,0,192,28],[33,0,192,29],[52,0,192,48],[53,0,192,49],[54,0,192,50]],[[8,0,193,6],[9,0,193,7],[10,0,193,8],[11,0,194,5],[12,0,194,6]],[[4,0,195,2],[5,0,195,3]],[[4,0,197,2]],[],[[7,0,199,5]],[[4,0,200,9],[35,0,200,40],[36,0,201,4],[50,0,201,26],[52,0,202,4],[65,0,202,25],[67,0,203,4],[75,0,203,21]],[[8,0,205,4],[109,0,205,105]],[[8,0,206,4],[14,0,206,10],[29,0,206,25],[32,0,206,28],[36,0,206,32],[50,0,206,46],[51,0,206,50],[65,0,206,64],[66,0,206,65],[80,0,206,79],[82,0,206,81],[86,0,206,85],[87,0,206,86],[89,0,206,88],[90,0,206,89],[99,0,206,98],[100,0,206,125],[101,0,206,126],[102,0,206,127]],[[8,0,207,4],[12,0,207,8],[20,0,207,16],[24,0,207,20],[28,0,207,24],[30,0,207,26]],[[12,0,208,6],[27,0,208,21],[28,0,208,22],[35,0,208,29],[36,0,208,30],[44,0,208,38],[45,0,208,39],[46,0,208,40]],[[9,0,209,5]],[[8,0,211,4],[15,0,211,11],[19,0,211,15],[20,0,211,16],[46,0,211,42],[47,0,211,46],[62,0,211,61],[63,0,211,62],[68,0,211,67],[69,0,211,68],[70,0,211,69],[74,0,211,73],[75,0,212,6],[83,0,212,14],[84,0,212,15],[85,0,212,16],[90,0,212,36],[92,0,212,38],[94,0,212,40]],[[12,0,214,8],[16,0,214,12],[21,0,214,17],[22,0,214,18],[28,0,214,24],[32,0,214,28],[33,0,214,29],[35,0,214,31]],[[16,0,215,10],[23,0,215,17],[25,0,215,19],[26,0,215,20],[28,0,215,22],[29,0,215,23],[30,0,215,24]],[[13,0,216,9],[14,0,216,10],[78,0,216,74]],[[12,0,218,8],[65,0,218,61]],[[12,0,220,8],[18,0,220,14],[30,0,220,26],[33,0,220,61],[35,0,220,63],[36,0,220,64]],[[12,0,222,8],[17,0,222,13],[23,0,222,19],[27,0,222,23],[31,0,222,27],[36,0,222,32],[38,0,222,34]],[[16,0,224,10],[120,0,224,114]],[[16,0,225,10],[22,0,225,16],[35,0,225,29],[38,0,225,32],[42,0,225,36],[43,0,225,37],[60,0,225,54],[61,0,225,55],[64,0,225,58],[65,0,225,59],[69,0,225,63],[70,0,225,64],[76,0,225,70],[77,0,225,71],[80,0,225,74],[82,0,225,76],[95,0,225,89],[96,0,225,90],[97,0,225,91],[98,0,225,93],[117,0,225,112]],[[16,0,227,10],[22,0,227,16],[37,0,227,31],[40,0,227,34],[44,0,227,38],[45,0,227,39],[76,0,227,70],[77,0,227,71],[90,0,227,84],[92,0,227,86],[105,0,227,99],[107,0,227,101],[115,0,227,109],[116,0,227,110],[117,0,227,111],[121,0,227,115],[122,0,228,12],[125,0,228,15],[126,0,228,16],[127,0,228,17],[141,0,228,51],[143,0,228,53],[145,0,228,55]],[[20,0,229,14],[24,0,229,18],[38,0,229,32],[39,0,229,33],[45,0,229,39],[48,0,229,42],[49,0,229,43],[51,0,229,45]],[[24,0,230,16],[31,0,230,23],[33,0,230,24],[36,0,230,27],[40,0,230,31],[42,0,230,33],[43,0,230,34],[56,0,230,47],[57,0,230,48],[59,0,230,50],[73,0,230,64],[75,0,230,80],[76,0,230,81]],[[21,0,231,15]],[[25,0,231,21]],[[24,0,232,16],[31,0,232,23],[33,0,232,24],[36,0,232,27],[40,0,232,31],[42,0,232,47],[43,0,232,48]],[[21,0,233,15],[22,0,233,17],[52,0,233,47]],[[16,0,234,12],[17,0,234,13],[18,0,234,14],[19,0,235,11],[20,0,235,12]],[[16,0,236,10],[28,0,236,22],[29,0,236,23],[33,0,236,27],[34,0,236,28],[49,0,236,43],[50,0,236,44],[51,0,236,45]],[[13,0,237,9]],[[12,0,239,8],[19,0,239,15],[32,0,239,28],[33,0,239,29],[45,0,239,41],[46,0,239,42],[47,0,239,43],[51,0,239,47],[52,0,240,10],[55,0,240,13],[56,0,240,14],[59,0,240,17],[60,0,240,18],[62,0,240,20],[63,0,240,21],[70,0,240,28],[71,0,240,29],[74,0,240,32],[75,0,240,33],[78,0,240,36],[79,0,240,37],[80,0,240,38],[81,0,241,9],[82,0,241,10]],[[8,0,242,6],[9,0,242,7],[10,0,242,8],[11,0,243,5],[12,0,243,6]],[[4,0,244,2],[5,0,244,3]],[[4,0,246,2],[39,0,246,37]],[[4,0,248,2]],[],[],[],[],[],[],[],[[7,0,256,5]],[[4,0,257,9],[8,0,257,13],[9,0,258,4],[13,0,258,11],[15,0,259,4],[28,0,259,41],[30,0,260,4],[53,0,260,50],[55,0,260,52],[57,0,261,4],[70,0,261,26],[74,0,261,30],[76,0,262,4],[81,0,262,18]],[[8,0,264,4],[12,0,264,8],[17,0,264,13],[18,0,264,14],[25,0,264,21],[26,0,264,22],[30,0,264,26],[31,0,264,27],[35,0,264,31],[40,0,264,36],[44,0,264,40],[64,0,264,60],[65,0,264,61],[71,0,264,67],[74,0,264,70],[75,0,264,71],[77,0,264,73]],[[12,0,265,6],[18,0,265,12],[23,0,265,17],[26,0,265,39]],[[16,0,266,8],[20,0,266,12],[22,0,266,14],[67,0,266,59]],[[16,0,267,8],[20,0,267,12],[22,0,267,14],[31,0,267,23]],[[16,0,268,8],[23,0,268,15],[25,0,268,17],[113,0,268,105]],[[16,0,269,8],[21,0,269,13],[23,0,269,15],[25,0,269,17]],[[16,0,270,8],[20,0,270,12]],[[16,0,271,8],[36,0,271,28]],[[16,0,272,8],[21,0,272,13]],[[13,0,273,7],[14,0,273,8]],[[12,0,275,6],[18,0,275,12],[23,0,275,17],[24,0,275,18]],[[9,0,276,5]],[[8,0,278,4],[12,0,278,8],[22,0,278,18],[23,0,278,19]],[[8,0,279,4],[12,0,279,8],[26,0,279,22],[29,0,279,52],[31,0,279,54],[32,0,279,55]],[[8,0,281,4]],[],[],[[10,0,284,6]],[[8,0,285,4],[12,0,285,8],[17,0,285,13],[18,0,285,14],[25,0,285,21],[26,0,285,22],[30,0,285,26],[31,0,285,27],[35,0,285,31],[40,0,285,36],[42,0,285,38]],[[12,0,286,6],[22,0,286,16],[25,0,286,19],[29,0,286,23],[30,0,286,24]],[[9,0,287,5]],[[13,0,287,11]],[[12,0,288,6],[18,0,288,12],[23,0,288,17],[26,0,288,20],[30,0,288,24],[31,0,288,25],[71,0,288,65],[72,0,288,66],[76,0,288,70],[78,0,288,72],[98,0,288,92],[99,0,288,93],[100,0,288,94]],[[12,0,289,6],[22,0,289,16],[25,0,289,19],[30,0,289,24],[31,0,289,25],[41,0,289,35],[42,0,289,36]],[[12,0,290,6],[26,0,290,20],[29,0,290,23],[34,0,290,28],[35,0,290,29],[49,0,290,43],[50,0,290,44]],[[9,0,291,5]],[[8,0,293,4],[15,0,293,11],[19,0,293,15],[20,0,293,16],[30,0,293,26],[31,0,293,30],[41,0,293,45],[43,0,293,47],[56,0,293,60],[58,0,293,62],[68,0,293,72],[70,0,293,74],[75,0,293,79],[76,0,293,80],[77,0,293,81],[81,0,293,85]],[[8,0,294,6],[36,0,294,34]],[[8,0,295,6],[16,0,295,14],[17,0,295,15],[18,0,295,16],[29,0,295,40],[31,0,295,42],[33,0,295,44]],[[12,0,297,8],[18,0,297,14],[28,0,297,24],[31,0,297,51],[33,0,297,53],[34,0,297,54]],[[12,0,299,8],[17,0,299,13],[23,0,299,19],[24,0,299,20],[40,0,299,36],[42,0,299,38],[60,0,299,56],[61,0,299,57],[65,0,299,61],[71,0,299,67],[72,0,299,68],[79,0,299,75],[80,0,299,76],[94,0,299,90],[95,0,299,91],[97,0,299,93]],[[16,0,300,10],[20,0,300,14],[43,0,300,72],[44,0,300,73],[45,0,300,74],[84,0,300,113]],[[16,0,301,10],[20,0,301,14],[28,0,301,42],[29,0,301,43]],[[16,0,303,10],[20,0,303,14],[40,0,303,34],[42,0,303,36]],[[20,0,304,12],[43,0,304,35],[46,0,304,38],[66,0,304,58],[67,0,304,59],[71,0,304,63],[72,0,304,64],[79,0,304,71],[80,0,304,72],[82,0,304,74],[83,0,304,75],[90,0,304,82],[91,0,304,83],[95,0,304,87],[100,0,304,92],[116,0,304,108],[117,0,304,109],[119,0,304,111],[133,0,304,125],[134,0,304,126]],[[20,0,305,12],[28,0,305,20],[31,0,305,23],[51,0,305,43],[52,0,305,44],[56,0,305,48],[57,0,305,49],[64,0,305,56],[65,0,305,57],[67,0,305,59],[68,0,305,60],[75,0,305,67],[76,0,305,68],[80,0,305,72],[85,0,305,77],[101,0,305,93],[102,0,305,94],[104,0,305,96],[109,0,305,101],[110,0,305,102]],[[17,0,306,11]],[[16,0,308,10],[22,0,308,16],[38,0,308,32],[41,0,308,56],[57,0,308,72],[58,0,308,73],[69,0,308,84],[70,0,308,85],[87,0,308,102],[88,0,308,103],[91,0,308,106],[93,0,308,108],[109,0,308,124],[110,0,308,125],[111,0,308,126]],[[16,0,310,10]],[],[],[[139,0,313,133]],[[16,0,314,10],[20,0,314,14],[25,0,314,19],[26,0,314,20],[33,0,314,27],[34,0,314,28],[52,0,314,46],[53,0,314,47],[55,0,314,49]],[[20,0,315,12],[24,0,315,16],[32,0,315,24],[37,0,315,29],[46,0,315,38],[48,0,315,40],[50,0,315,42],[113,0,315,105]],[[24,0,317,14],[110,0,317,100]],[[24,0,318,14],[30,0,318,20],[39,0,318,29],[42,0,318,32],[46,0,318,36],[47,0,318,37],[51,0,318,41],[52,0,318,42],[70,0,318,60],[72,0,318,62],[88,0,318,78],[90,0,318,80],[113,0,318,103],[115,0,318,105],[125,0,318,115],[127,0,318,117],[135,0,318,125],[136,0,318,126],[137,0,318,127],[141,0,318,131],[142,0,319,16],[145,0,319,19],[146,0,319,20],[150,0,319,24],[151,0,319,25],[153,0,319,27]],[[28,0,320,18],[52,0,320,42]],[[28,0,321,18],[35,0,321,25],[37,0,321,26],[40,0,321,29],[42,0,321,31],[58,0,321,47],[60,0,321,49],[65,0,321,54],[67,0,321,56],[71,0,321,60],[73,0,321,61],[74,0,321,62],[75,0,321,63],[134,0,321,122]],[[24,0,322,16],[25,0,322,17],[26,0,322,18],[27,0,323,15],[28,0,323,16]],[[24,0,324,14],[34,0,324,24],[35,0,324,25],[39,0,324,29],[40,0,324,30],[49,0,324,39],[50,0,324,40],[51,0,324,41]],[[21,0,326,13]],[[25,0,326,19],[27,0,326,21],[96,0,326,90]],[[24,0,327,14],[42,0,327,32],[43,0,327,33],[50,0,327,40],[51,0,327,41],[52,0,327,42],[62,0,327,66],[64,0,327,68],[66,0,327,70]],[[28,0,329,16],[114,0,329,102]],[[28,0,330,16],[34,0,330,22],[43,0,330,31],[46,0,330,34],[50,0,330,38],[51,0,330,39],[55,0,330,43],[56,0,330,44],[66,0,330,54],[68,0,330,56],[84,0,330,72],[86,0,330,74],[109,0,330,97],[111,0,330,99],[121,0,330,109],[122,0,330,110],[123,0,330,111],[127,0,330,115],[128,0,331,18],[131,0,331,21],[132,0,331,22],[136,0,331,26],[137,0,331,27],[139,0,331,29]],[[32,0,332,20],[58,0,332,46]],[[32,0,333,20],[125,0,333,113]],[[32,0,334,20],[39,0,334,27],[41,0,334,28],[44,0,334,31],[46,0,334,33],[62,0,334,49],[64,0,334,51],[69,0,334,56],[71,0,334,58],[72,0,334,59],[76,0,334,63],[77,0,334,64],[79,0,334,65],[80,0,334,66]],[[28,0,335,18],[29,0,335,19],[30,0,335,20],[31,0,336,17],[32,0,336,18]],[[28,0,338,16],[38,0,338,26],[39,0,338,27],[43,0,338,31],[44,0,338,32],[53,0,338,41],[54,0,338,42],[55,0,338,43]],[[24,0,339,14],[25,0,339,15],[26,0,339,16],[27,0,339,17]],[[21,0,340,13]],[[17,0,341,11]],[[21,0,341,17],[23,0,341,19],[59,0,341,55]],[[20,0,342,12],[28,0,342,20],[31,0,342,23],[39,0,342,31],[44,0,342,36],[53,0,342,45],[54,0,342,46],[55,0,342,47],[56,0,342,48],[64,0,342,56],[65,0,342,57],[66,0,342,58],[67,0,342,59],[71,0,342,63],[72,0,342,64],[84,0,342,76],[85,0,342,77]],[[20,0,344,12],[106,0,344,98]],[[20,0,345,12],[26,0,345,18],[35,0,345,27],[38,0,345,30],[42,0,345,34],[43,0,345,35],[47,0,345,39],[48,0,345,40],[66,0,345,58],[68,0,345,60],[84,0,345,76],[86,0,345,78],[109,0,345,101],[111,0,345,103],[121,0,345,113],[123,0,345,115],[131,0,345,123],[132,0,345,124],[133,0,345,125],[137,0,345,129],[138,0,346,14],[141,0,346,17],[142,0,346,18],[146,0,346,22],[147,0,346,23],[149,0,346,25]],[[24,0,347,16],[48,0,347,40]],[[24,0,348,16],[31,0,348,23],[33,0,348,24],[36,0,348,27],[38,0,348,29],[54,0,348,45],[56,0,348,47],[61,0,348,52],[63,0,348,54],[67,0,348,58],[69,0,348,59],[70,0,348,60],[71,0,348,61],[130,0,348,120]],[[20,0,349,14],[21,0,349,15],[22,0,349,16],[23,0,350,13],[24,0,350,14]],[[20,0,352,12],[30,0,352,22],[31,0,352,23],[35,0,352,27],[36,0,352,28],[45,0,352,37],[46,0,352,38],[47,0,352,39]],[[17,0,353,11]],[[13,0,354,9],[14,0,354,10],[36,0,354,32]],[[12,0,356,8],[16,0,356,12],[26,0,356,22],[27,0,356,23],[33,0,356,29],[36,0,356,32],[37,0,356,33],[39,0,356,35],[41,0,356,37],[113,0,356,109]],[[16,0,358,10],[89,0,358,83]],[[16,0,359,10],[23,0,359,17],[36,0,359,30],[37,0,359,31],[47,0,359,41],[48,0,359,42],[49,0,359,43],[53,0,359,47]],[[16,0,360,12],[48,0,360,44]],[[16,0,362,12],[139,0,362,135]],[[16,0,363,12],[141,0,363,137]],[[16,0,364,12],[34,0,364,30]],[[16,0,366,12],[19,0,366,15],[20,0,366,16],[21,0,366,17],[29,0,366,49],[31,0,366,51],[33,0,366,53]],[[20,0,367,14],[26,0,367,20],[37,0,367,31],[40,0,367,34],[42,0,367,36],[43,0,367,37]],[[20,0,369,14],[28,0,369,22],[29,0,369,23],[36,0,369,30],[37,0,369,31],[38,0,369,32],[41,0,369,61],[43,0,369,63],[45,0,369,65]],[[24,0,371,16],[30,0,371,22],[33,0,371,25],[36,0,371,28],[39,0,371,31],[40,0,371,32],[43,0,371,35],[44,0,371,36]],[[24,0,372,16],[30,0,372,22],[35,0,372,27],[38,0,372,30],[41,0,372,33],[42,0,372,34],[47,0,372,39],[48,0,372,40]],[[24,0,374,16],[126,0,374,118]],[[24,0,375,16],[37,0,375,29]],[[24,0,376,16],[28,0,376,20],[39,0,376,31],[40,0,376,32],[54,0,376,46],[55,0,376,47],[58,0,376,50],[59,0,376,51],[63,0,376,55],[68,0,376,60],[69,0,376,61],[76,0,376,68],[77,0,376,69],[88,0,376,80],[89,0,376,81],[92,0,376,84],[93,0,376,85],[94,0,376,86],[96,0,376,88]],[[28,0,377,18],[123,0,377,113]],[[28,0,378,18],[41,0,378,31]],[[28,0,379,19],[39,0,379,30],[40,0,379,31],[43,0,379,34],[44,0,379,50],[45,0,379,51],[49,0,379,55],[50,0,379,56],[55,0,379,61],[56,0,379,62],[57,0,379,63],[58,0,379,64],[59,0,379,65],[60,0,379,66]],[[25,0,380,17]],[[29,0,380,23]],[[28,0,381,18],[41,0,381,31]],[[28,0,382,18],[39,0,382,29],[40,0,382,30],[43,0,382,33],[44,0,382,34],[47,0,382,37],[52,0,382,42],[53,0,382,43]],[[25,0,383,17]],[[20,0,384,14],[21,0,384,15],[22,0,384,16],[23,0,384,17]],[[20,0,386,14],[27,0,386,21],[38,0,386,37],[39,0,386,38]],[[16,0,387,12],[17,0,387,13],[18,0,387,14]],[[16,0,389,12],[64,0,389,60]],[[16,0,391,12],[19,0,391,15],[20,0,391,16],[21,0,391,17],[32,0,391,31],[34,0,391,33],[36,0,391,35]],[[20,0,392,14],[27,0,392,21],[29,0,392,22],[32,0,392,25],[43,0,392,36],[45,0,392,38],[48,0,392,41],[59,0,392,52],[61,0,392,58],[62,0,392,59]],[[16,0,393,12],[17,0,393,13],[18,0,393,14],[19,0,395,11],[20,0,395,12]],[[13,0,396,9]],[[17,0,396,15]],[[16,0,397,10],[23,0,397,17],[25,0,397,19],[26,0,397,20],[37,0,397,31],[38,0,397,32],[39,0,397,33]],[[13,0,398,9]],[[8,0,399,6],[9,0,399,7],[10,0,399,8],[11,0,400,5],[12,0,400,6],[16,0,400,10]],[[8,0,401,6],[21,0,401,19]],[[8,0,402,6],[12,0,402,10],[13,0,402,11],[14,0,402,12],[15,0,402,13],[16,0,403,5],[17,0,403,6]],[[4,0,404,2],[5,0,404,3]],[[4,0,406,2],[41,0,406,39]],[[4,0,408,2]],[],[],[],[],[],[],[],[],[],[[7,0,418,5]],[[4,0,419,9],[11,0,419,16],[12,0,419,53],[16,0,419,69],[18,0,420,53],[24,0,420,78],[26,0,421,53],[49,0,421,99],[51,0,421,101],[53,0,422,53],[73,0,422,82],[77,0,422,86]],[[8,0,424,4],[12,0,424,8],[32,0,424,28],[36,0,424,32],[40,0,424,36],[44,0,424,40],[64,0,424,60],[65,0,424,61],[71,0,424,67],[76,0,424,72],[77,0,424,73],[79,0,424,75]],[[12,0,425,6],[19,0,425,13],[23,0,425,17],[24,0,425,18],[37,0,425,31],[38,0,425,32],[42,0,425,36],[44,0,425,38],[50,0,425,44],[52,0,425,46],[69,0,425,63],[70,0,425,64],[71,0,425,65],[72,0,425,66],[125,0,425,119]],[[9,0,426,5]],[[8,0,428,4],[14,0,428,10],[19,0,428,15],[22,0,428,18],[26,0,428,22],[27,0,428,23],[50,0,428,46],[51,0,428,47],[55,0,428,51],[57,0,428,53],[63,0,428,59],[65,0,428,61],[85,0,428,81],[87,0,428,83],[104,0,428,100],[105,0,428,101],[106,0,428,102]],[[8,0,429,4],[15,0,429,11],[19,0,429,15],[20,0,429,16],[32,0,429,28],[33,0,429,29],[38,0,429,34],[39,0,429,35],[40,0,429,36]],[[4,0,430,2],[5,0,430,3]],[[4,0,432,2]],[],[],[],[],[],[[7,0,438,5]],[[4,0,439,9],[19,0,439,24],[20,0,439,28],[27,0,439,56],[29,0,439,58],[33,0,439,65],[35,0,439,67],[55,0,439,96],[59,0,439,100]],[[8,0,440,4],[65,0,440,61]],[[8,0,441,4],[14,0,441,10],[19,0,441,15],[22,0,441,30],[32,0,441,40],[33,0,441,41],[37,0,441,45],[38,0,441,46],[40,0,441,48],[41,0,441,49],[50,0,441,58],[51,0,441,59],[52,0,441,60]],[[8,0,443,4],[12,0,443,8],[29,0,443,25],[31,0,443,27]],[[12,0,444,6],[16,0,444,10],[19,0,444,13],[34,0,444,28],[35,0,444,29],[39,0,444,33],[41,0,444,35],[46,0,444,40],[47,0,444,41],[48,0,444,42]],[[9,0,445,5]],[[8,0,447,4],[15,0,447,11],[16,0,447,12],[23,0,447,19],[24,0,447,20],[25,0,447,21],[31,0,447,27],[33,0,447,29],[35,0,447,31]],[[12,0,448,6],[17,0,448,11],[18,0,448,12],[24,0,448,18],[25,0,448,19],[31,0,448,25],[33,0,448,27],[37,0,448,31],[38,0,448,32],[39,0,448,33]],[[8,0,449,4],[9,0,449,5],[10,0,449,6],[11,0,449,7]],[[8,0,451,4],[15,0,451,11],[19,0,451,15],[20,0,451,16],[32,0,451,28],[33,0,451,29],[38,0,451,34],[39,0,451,35],[40,0,451,36]],[[4,0,452,2],[5,0,452,3]],[[4,0,455,2]],[],[],[],[],[],[],[],[],[[7,0,464,5]],[[4,0,465,9],[16,0,465,21],[17,0,465,25],[23,0,465,50],[25,0,466,25],[30,0,466,38],[32,0,467,25],[55,0,467,70],[57,0,467,72],[59,0,468,25],[79,0,468,69]],[[8,0,470,4],[12,0,470,8],[32,0,470,28],[36,0,470,32],[40,0,470,36],[42,0,470,38]],[[12,0,471,6],[32,0,471,26],[35,0,471,29],[55,0,471,74],[56,0,471,75]],[[9,0,472,5]],[[8,0,474,4],[14,0,474,10],[27,0,474,23],[30,0,474,47],[36,0,474,53],[37,0,474,54],[43,0,474,60],[44,0,474,61]],[[8,0,476,4],[15,0,476,11],[19,0,476,15],[20,0,476,16],[33,0,476,29],[34,0,476,30],[40,0,476,36],[42,0,476,38],[62,0,476,58],[63,0,476,59],[64,0,476,60],[68,0,476,64]],[[8,0,477,6],[21,0,477,19]],[[8,0,478,6],[12,0,478,10],[13,0,478,11],[14,0,478,12],[15,0,478,13],[17,0,479,6],[20,0,479,9],[21,0,479,10],[22,0,479,11],[29,0,479,21],[31,0,479,23],[33,0,479,25],[34,0,479,26],[38,0,479,30],[39,0,479,31],[58,0,479,50],[59,0,479,51],[66,0,479,58],[68,0,479,60],[88,0,479,80],[89,0,479,81],[90,0,479,82],[92,0,480,6],[101,0,480,15],[102,0,480,16],[103,0,480,17],[110,0,480,27],[112,0,480,29],[114,0,480,31]],[[12,0,481,8],[19,0,481,15],[23,0,481,19],[24,0,481,20],[28,0,481,24],[29,0,481,25],[36,0,481,32],[38,0,481,34],[51,0,481,47],[53,0,481,49],[73,0,481,69],[75,0,481,71],[80,0,481,76],[82,0,481,78],[87,0,481,83],[88,0,481,84],[89,0,481,85],[93,0,481,89],[94,0,481,91],[120,0,481,117],[121,0,482,10],[129,0,482,18],[130,0,482,19],[137,0,482,26],[138,0,482,27],[140,0,482,29]],[[16,0,483,12],[23,0,483,19],[27,0,483,23],[28,0,483,24],[35,0,483,31],[36,0,483,32],[42,0,483,38],[44,0,483,40],[64,0,483,60],[65,0,483,61],[66,0,483,62],[70,0,483,66],[71,0,484,14],[74,0,484,17],[75,0,484,18],[78,0,484,21],[80,0,484,23],[81,0,484,24],[88,0,484,31],[89,0,484,32],[90,0,484,33],[113,0,484,56],[114,0,485,13],[115,0,485,14]],[[12,0,486,10],[13,0,486,11],[14,0,486,12],[15,0,487,9],[16,0,487,10]],[[8,0,488,6],[9,0,488,7],[10,0,488,8],[12,0,489,6],[22,0,489,16],[23,0,489,17],[26,0,489,20],[27,0,489,21],[29,0,489,23]],[[12,0,490,8],[19,0,490,15],[20,0,490,16],[23,0,490,19],[24,0,490,20],[51,0,490,47],[54,0,490,50],[57,0,490,53],[58,0,490,54],[59,0,490,55]],[[12,0,491,8],[18,0,491,14],[21,0,491,17],[22,0,491,18]],[[8,0,492,6],[9,0,492,7],[10,0,492,8],[12,0,493,6],[16,0,493,10],[17,0,493,11],[18,0,493,12],[19,0,493,13],[20,0,494,5],[21,0,494,6]],[[4,0,496,2],[5,0,496,3]],[[4,0,498,2],[28,0,498,26]],[[4,0,501,2]],[],[],[],[],[],[],[],[],[[7,0,510,5]],[[4,0,511,9],[20,0,511,25],[21,0,511,55],[26,0,511,80],[28,0,512,55],[37,0,512,72],[39,0,513,55],[46,0,513,70],[48,0,514,55],[55,0,514,62],[58,0,514,65],[63,0,514,70]],[[8,0,516,4],[12,0,516,8],[21,0,516,17],[25,0,516,21],[29,0,516,25],[33,0,516,29],[40,0,516,36],[44,0,516,40],[48,0,516,44],[52,0,516,48],[61,0,516,57],[66,0,516,62],[73,0,516,69],[77,0,516,73],[82,0,516,78],[83,0,516,79],[89,0,516,85],[93,0,516,89],[94,0,516,90],[96,0,516,92],[98,0,516,94],[130,0,516,126]],[[12,0,517,6],[19,0,517,13],[21,0,517,15],[23,0,517,17],[24,0,517,18]],[[9,0,518,5]],[[8,0,520,4],[12,0,520,8],[17,0,520,13],[18,0,520,14],[19,0,520,15],[20,0,520,16],[22,0,520,18],[39,0,520,35],[43,0,520,39],[47,0,520,43],[49,0,520,45]],[[12,0,521,6],[18,0,521,12],[23,0,521,17],[26,0,521,39]],[[16,0,522,8],[20,0,522,12],[22,0,522,14],[75,0,522,67]],[[16,0,523,8],[20,0,523,12],[22,0,523,14],[33,0,523,25]],[[16,0,524,8],[23,0,524,15],[25,0,524,17],[124,0,524,116]],[[13,0,525,7],[14,0,525,8]],[[12,0,526,6],[18,0,526,12],[23,0,526,17],[24,0,526,18]],[[9,0,527,5]],[[8,0,529,4],[14,0,529,10],[19,0,529,15],[22,0,529,18],[26,0,529,22],[27,0,529,23],[60,0,529,56],[61,0,529,57],[66,0,529,62],[68,0,529,64],[77,0,529,73],[79,0,529,75],[86,0,529,82],[88,0,529,84],[95,0,529,91],[96,0,529,92],[97,0,529,93]],[[8,0,531,4],[15,0,531,11],[19,0,531,15],[20,0,531,16],[32,0,531,28],[33,0,531,29],[38,0,531,34],[39,0,531,35],[40,0,531,36]],[[4,0,532,2],[5,0,532,3]],[[4,0,534,2]],[],[],[],[],[],[],[],[],[[7,0,543,5]],[[4,0,544,12],[37,0,544,45],[38,0,544,75],[43,0,544,100],[45,0,545,75],[54,0,545,92],[56,0,546,75],[63,0,546,90],[65,0,547,75],[72,0,547,82],[75,0,547,85],[80,0,547,90]],[[8,0,549,4],[14,0,549,10],[25,0,549,21],[28,0,549,24],[32,0,549,28],[33,0,549,29],[36,0,549,32],[37,0,549,33],[46,0,549,42],[48,0,549,44],[55,0,549,51],[56,0,549,52],[57,0,549,53]],[[8,0,550,4],[14,0,550,10],[19,0,550,15],[22,0,550,30],[32,0,550,40],[33,0,550,41],[37,0,550,45],[38,0,550,46],[40,0,550,48],[41,0,550,49],[50,0,550,58],[51,0,550,59],[52,0,550,60]],[[8,0,552,4],[12,0,552,8],[21,0,552,17],[25,0,552,21],[29,0,552,25],[33,0,552,29],[40,0,552,36],[44,0,552,40],[48,0,552,44],[52,0,552,48],[61,0,552,57],[66,0,552,62],[73,0,552,69],[75,0,552,71],[77,0,552,73],[109,0,552,105]],[[12,0,553,6],[19,0,553,13],[24,0,553,18],[25,0,553,19]],[[9,0,554,5]],[[8,0,556,4],[12,0,556,8],[21,0,556,37],[22,0,556,38]],[[8,0,558,4],[12,0,558,8],[19,0,558,15],[21,0,558,17]],[[12,0,559,6],[21,0,559,15],[24,0,559,18],[30,0,559,24],[31,0,559,25],[37,0,559,31],[38,0,559,32],[40,0,559,34],[42,0,559,36],[47,0,559,41],[48,0,559,42],[49,0,559,43]],[[9,0,560,5]],[[13,0,560,11]],[[12,0,561,6],[21,0,561,15],[24,0,561,18],[29,0,561,23],[30,0,561,24]],[[9,0,562,5]],[[8,0,564,4],[23,0,564,19],[24,0,564,23],[33,0,564,32],[35,0,564,34],[44,0,564,43],[46,0,564,45],[53,0,564,52],[54,0,564,53],[55,0,564,54]],[[8,0,566,4],[14,0,566,10],[31,0,566,27],[34,0,566,50],[43,0,566,59],[44,0,566,60],[49,0,566,65],[50,0,566,66],[61,0,566,77],[62,0,566,78],[63,0,566,79]],[[8,0,568,4],[12,0,568,8],[13,0,568,9],[16,0,568,12],[27,0,568,23],[28,0,568,24]],[[8,0,569,4],[13,0,569,9],[19,0,569,15],[23,0,569,19],[27,0,569,23],[44,0,569,40],[46,0,569,42]],[[12,0,570,6],[16,0,570,10],[17,0,570,11],[24,0,570,18],[26,0,570,20],[28,0,570,22],[103,0,570,97]],[[16,0,571,8],[20,0,571,12],[21,0,571,13],[26,0,571,18],[29,0,571,21],[30,0,571,22],[31,0,571,23]],[[13,0,572,7]],[[12,0,573,6],[18,0,573,12],[21,0,573,15],[24,0,573,18],[38,0,573,32],[39,0,573,33],[43,0,573,37],[44,0,573,38],[61,0,573,55],[62,0,573,56],[66,0,573,60],[68,0,573,62],[72,0,573,66],[73,0,573,67],[75,0,573,69],[76,0,573,70],[85,0,573,79],[86,0,573,101],[87,0,573,102]],[[12,0,574,6],[17,0,574,11],[18,0,574,12],[24,0,574,18],[25,0,574,19],[28,0,574,22],[30,0,574,24],[32,0,574,25],[37,0,574,30],[39,0,574,32],[40,0,574,33],[42,0,574,34],[43,0,574,35],[44,0,574,36]],[[12,0,575,6],[13,0,575,7],[15,0,575,9],[16,0,575,10]],[[9,0,576,5]],[[8,0,578,4],[15,0,578,11],[20,0,578,16],[21,0,578,17]],[[4,0,579,2],[5,0,579,3]],[[4,0,581,2]],[],[],[],[],[],[],[[7,0,588,5]],[[4,0,589,9],[29,0,589,34],[30,0,589,64],[35,0,589,89],[37,0,590,64],[50,0,590,85],[52,0,591,64],[75,0,591,109],[77,0,591,111],[79,0,592,64],[89,0,592,83],[94,0,592,88]],[[8,0,594,4],[12,0,594,8],[21,0,594,37],[22,0,594,38]],[[8,0,596,4],[12,0,596,8],[19,0,596,15],[21,0,596,17]],[[12,0,597,6],[21,0,597,15],[24,0,597,18],[30,0,597,24],[31,0,597,25],[37,0,597,31],[38,0,597,32],[40,0,597,34],[42,0,597,36],[47,0,597,41],[48,0,597,42],[49,0,597,43]],[[9,0,598,5]],[[13,0,598,11]],[[12,0,599,6],[21,0,599,15],[24,0,599,18],[29,0,599,23],[30,0,599,24]],[[9,0,600,5]],[[8,0,602,4],[14,0,602,10],[26,0,602,22],[29,0,602,25],[38,0,602,34],[39,0,602,35],[52,0,602,48],[53,0,602,49],[54,0,602,50]],[[8,0,604,4],[82,0,604,78]],[[8,0,605,4],[15,0,605,11],[19,0,605,15],[20,0,605,16],[35,0,605,31],[36,0,605,32],[48,0,605,44],[49,0,605,45],[66,0,605,62],[67,0,605,63],[70,0,605,66],[72,0,605,68],[92,0,605,88],[93,0,605,89],[94,0,605,90],[98,0,605,94],[99,0,606,6],[102,0,606,9],[103,0,606,10],[104,0,606,11],[109,0,606,16],[111,0,606,18],[113,0,606,20]],[[12,0,607,8],[101,0,607,97]],[[12,0,608,8],[21,0,608,17],[22,0,608,18],[26,0,608,22],[27,0,608,23],[31,0,608,27],[32,0,608,28],[34,0,608,30],[35,0,608,31],[39,0,608,35],[40,0,608,36],[45,0,608,41],[46,0,608,42],[47,0,608,43],[48,0,608,44],[85,0,608,81]],[[12,0,609,8],[21,0,609,17],[22,0,609,18],[28,0,609,24],[29,0,609,25],[42,0,609,38],[44,0,609,40],[45,0,609,41],[46,0,609,42],[47,0,609,43]],[[12,0,611,8],[16,0,611,12],[17,0,611,13],[54,0,611,50],[55,0,611,54],[64,0,611,63],[66,0,611,65],[71,0,611,70],[72,0,611,71],[73,0,611,72]],[[12,0,613,8],[19,0,613,15],[24,0,613,20],[25,0,613,21]],[[8,0,614,6],[9,0,614,7],[10,0,614,8],[12,0,616,6],[21,0,616,15],[22,0,616,16],[23,0,616,17],[28,0,616,22],[30,0,616,24],[32,0,616,26],[33,0,616,27],[37,0,616,31],[38,0,616,32],[50,0,616,44],[51,0,616,45],[56,0,616,50],[57,0,616,51],[58,0,616,52],[59,0,617,5],[60,0,617,6]],[[4,0,618,2],[5,0,618,3]],[[4,0,620,2]],[],[],[],[],[],[],[[7,0,627,5]],[[4,0,628,9],[30,0,628,35],[31,0,628,65],[36,0,628,90],[38,0,629,65],[53,0,629,90],[55,0,630,65],[78,0,630,110],[80,0,630,112],[82,0,631,65],[92,0,631,84],[97,0,631,89]],[[8,0,633,4],[12,0,633,8],[21,0,633,37],[22,0,633,38]],[[8,0,635,4],[12,0,635,8],[19,0,635,15],[21,0,635,17]],[[12,0,636,6],[21,0,636,15],[24,0,636,18],[30,0,636,24],[31,0,636,25],[37,0,636,31],[38,0,636,32],[40,0,636,34],[42,0,636,36],[47,0,636,41],[48,0,636,42],[49,0,636,43]],[[9,0,637,5]],[[13,0,637,11]],[[12,0,638,6],[21,0,638,15],[24,0,638,18],[29,0,638,23],[30,0,638,24]],[[9,0,639,5]],[[8,0,641,4],[17,0,641,13],[18,0,641,14],[22,0,641,18],[23,0,641,19],[27,0,641,23],[28,0,641,24],[30,0,641,26],[31,0,641,27],[35,0,641,31],[36,0,641,32],[41,0,641,37],[42,0,641,38],[43,0,641,39],[44,0,641,40],[81,0,641,77]],[[8,0,643,4],[14,0,643,10],[27,0,643,23],[30,0,643,26],[39,0,643,35],[40,0,643,36],[46,0,643,42],[47,0,643,43],[48,0,643,44],[52,0,643,48],[54,0,643,50],[55,0,643,51],[57,0,643,53],[59,0,643,55]],[[12,0,644,6],[19,0,644,13],[34,0,644,28],[35,0,644,29],[44,0,644,38],[45,0,644,39],[47,0,644,41],[48,0,644,42],[50,0,644,44],[51,0,644,45],[53,0,644,47],[58,0,644,52],[59,0,644,53],[60,0,644,54],[65,0,644,59],[66,0,644,60],[67,0,644,61],[68,0,644,62]],[[8,0,645,4],[9,0,645,5],[10,0,645,6],[11,0,645,7]],[[8,0,647,4],[62,0,647,58]],[[8,0,648,4],[52,0,648,48]],[[8,0,649,4],[23,0,649,19],[24,0,649,20],[28,0,649,24],[30,0,649,26],[31,0,649,27]],[[8,0,650,4],[13,0,650,9],[17,0,650,13],[18,0,650,14],[21,0,650,17],[36,0,650,32],[37,0,650,33],[43,0,650,39],[46,0,650,42],[47,0,650,43],[49,0,650,45],[50,0,650,46],[54,0,650,50],[55,0,650,51],[57,0,650,53],[58,0,650,54],[60,0,650,56],[62,0,650,58]],[[12,0,651,6],[21,0,651,15],[22,0,651,16],[28,0,651,22],[29,0,651,23],[44,0,651,38],[45,0,651,39],[46,0,651,40],[47,0,651,41],[49,0,651,43],[50,0,651,44],[51,0,651,45],[52,0,651,46]],[[9,0,652,5]],[[8,0,654,4],[14,0,654,10],[25,0,654,21],[28,0,654,59],[30,0,654,61],[31,0,654,62]],[[8,0,656,4],[91,0,656,87]],[[8,0,657,4],[21,0,657,17],[22,0,657,18],[29,0,657,25],[30,0,657,26],[42,0,657,38],[43,0,657,39],[45,0,657,41]],[[12,0,659,6],[18,0,659,12],[22,0,659,16],[25,0,659,19],[29,0,659,23],[30,0,659,24],[56,0,659,50],[57,0,659,51],[69,0,659,63],[70,0,659,64],[87,0,659,81],[88,0,659,82],[91,0,659,85],[93,0,659,87],[113,0,659,107],[114,0,659,108],[115,0,659,109],[119,0,659,113],[120,0,660,8],[124,0,660,12],[125,0,660,13],[126,0,660,14],[127,0,660,15],[128,0,661,7],[129,0,661,8]],[[12,0,662,6],[23,0,662,17],[24,0,662,18],[28,0,662,22],[29,0,662,23],[33,0,662,27],[34,0,662,28],[35,0,662,29]],[[8,0,663,4],[9,0,663,5],[10,0,663,6],[11,0,663,7]],[[8,0,666,4],[15,0,666,11],[23,0,666,19],[24,0,666,20],[35,0,666,31],[36,0,666,32],[37,0,666,33],[41,0,666,37],[42,0,667,6],[46,0,667,10],[47,0,667,11],[48,0,667,12],[49,0,667,13],[51,0,668,6],[54,0,668,9],[55,0,668,10],[56,0,668,11],[69,0,668,24],[71,0,668,26],[73,0,668,28]],[[12,0,669,8],[78,0,669,74]],[[12,0,670,8],[16,0,670,12],[23,0,670,19],[26,0,670,43],[28,0,670,45],[29,0,670,46]],[[12,0,672,8],[25,0,672,21],[26,0,672,22],[33,0,672,29],[34,0,672,30],[38,0,672,34],[39,0,672,35],[41,0,672,37]],[[16,0,673,10],[23,0,673,17],[26,0,673,20],[33,0,673,27],[34,0,673,28],[40,0,673,34],[41,0,673,35],[45,0,673,39],[46,0,673,40],[47,0,673,41]],[[12,0,674,8],[13,0,674,9],[14,0,674,10],[15,0,674,11]],[[12,0,676,8],[19,0,676,15],[26,0,676,22],[27,0,676,23]],[[8,0,677,6],[9,0,677,7],[10,0,677,8],[12,0,678,6],[15,0,678,9],[16,0,678,10],[17,0,678,11],[24,0,678,53],[26,0,678,55],[28,0,678,57],[29,0,678,58],[33,0,678,62],[34,0,678,63],[62,0,678,91],[63,0,678,92],[70,0,678,99],[71,0,678,100],[72,0,678,101],[74,0,679,6],[77,0,679,9],[78,0,679,10],[79,0,679,11],[84,0,679,28],[86,0,679,30],[88,0,679,32],[89,0,679,33],[93,0,679,37],[94,0,679,38],[131,0,679,75],[132,0,679,79],[141,0,679,88],[143,0,679,90],[148,0,679,95],[149,0,679,96],[150,0,679,97],[152,0,680,6],[161,0,680,15],[162,0,680,16],[163,0,680,17],[168,0,680,22],[170,0,680,24],[172,0,680,26],[173,0,680,27],[177,0,680,31],[178,0,680,32],[190,0,680,44],[191,0,680,45],[196,0,680,50],[197,0,680,51],[198,0,680,52],[199,0,681,5],[200,0,681,6]],[[4,0,682,2],[5,0,682,3]],[[4,0,684,2]],[],[],[],[],[],[],[],[[7,0,692,5]],[[4,0,693,12],[41,0,693,49],[42,0,694,4],[47,0,694,29],[49,0,695,4],[57,0,695,24],[67,0,695,34],[68,0,695,35],[72,0,695,39],[73,0,695,40],[75,0,695,42],[76,0,695,43],[85,0,695,52],[86,0,695,53]],[[8,0,698,4],[13,0,698,9],[14,0,698,10],[21,0,698,17],[22,0,698,18],[23,0,698,19],[27,0,698,23],[29,0,698,25],[34,0,698,30],[36,0,698,32],[38,0,698,34]],[[12,0,699,6],[16,0,699,10],[20,0,699,14],[21,0,699,15],[26,0,699,20],[31,0,699,25],[36,0,699,30],[38,0,699,32]],[[16,0,700,8],[20,0,700,12],[21,0,700,13],[26,0,700,18],[29,0,700,21],[34,0,700,26],[35,0,700,27],[36,0,700,28],[111,0,700,103]],[[16,0,701,8],[22,0,701,14],[25,0,701,17],[28,0,701,20],[42,0,701,34],[43,0,701,35],[47,0,701,39],[48,0,701,40],[65,0,701,57],[66,0,701,58],[70,0,701,62],[72,0,701,64],[76,0,701,68],[77,0,701,69],[79,0,701,71],[80,0,701,72],[89,0,701,81],[90,0,701,103],[91,0,701,104]],[[16,0,702,8],[21,0,702,13],[22,0,702,14],[28,0,702,20],[29,0,702,21],[32,0,702,24],[34,0,702,26],[36,0,702,27],[41,0,702,32],[43,0,702,33],[44,0,702,34],[45,0,702,35]],[[13,0,703,7]],[[8,0,704,4],[9,0,704,5],[10,0,704,6],[11,0,704,7]],[[8,0,706,4],[15,0,706,11],[20,0,706,16],[21,0,706,17]],[[4,0,707,2],[5,0,707,3]],[[4,0,709,9],[29,0,709,34],[30,0,710,4],[43,0,710,37],[45,0,711,4],[57,0,711,36],[59,0,712,4],[72,0,712,25],[74,0,713,4],[86,0,713,24],[88,0,714,4],[104,0,714,28],[106,0,715,4],[137,0,715,60],[139,0,716,4],[170,0,716,35],[173,0,716,38],[177,0,716,42],[179,0,717,4],[186,0,717,11],[189,0,717,14],[194,0,717,19]],[[8,0,719,4],[14,0,719,10],[19,0,719,15],[22,0,719,30],[26,0,719,34],[27,0,719,35],[64,0,719,72],[65,0,719,73],[78,0,719,86],[80,0,720,6],[92,0,720,18],[94,0,721,6],[107,0,721,19],[109,0,722,6],[121,0,722,18],[123,0,723,6],[139,0,723,22],[141,0,724,6],[172,0,724,37],[174,0,725,6],[205,0,725,37],[207,0,726,6],[214,0,726,13],[215,0,726,14],[216,0,726,15]],[[8,0,728,4],[15,0,728,11],[19,0,728,15],[20,0,728,16],[32,0,728,28],[33,0,728,29],[38,0,728,34],[39,0,728,35],[40,0,728,36]],[[4,0,729,2],[5,0,729,3]],[[4,0,732,2],[43,0,732,41]],[[4,0,734,2]],[],[],[],[],[[7,0,739,5]],[[4,0,740,9],[11,0,740,16],[12,0,740,17],[18,0,740,42],[20,0,740,44],[43,0,740,89],[45,0,740,91]],[[8,0,742,4],[12,0,742,8],[32,0,742,28],[36,0,742,32],[40,0,742,36],[44,0,742,40],[64,0,742,60],[65,0,742,61],[71,0,742,67],[76,0,742,72],[77,0,742,73],[79,0,742,75]],[[12,0,743,6],[54,0,743,48]],[[12,0,744,6],[19,0,744,13],[23,0,744,17],[24,0,744,18],[26,0,744,20],[27,0,744,21],[33,0,744,27],[34,0,744,28],[40,0,744,34],[41,0,744,35],[42,0,744,36]],[[9,0,745,5]],[[8,0,747,4],[15,0,747,11],[19,0,747,15],[20,0,747,16],[46,0,747,42],[47,0,747,43],[53,0,747,49],[55,0,747,51],[75,0,747,71],[76,0,747,72],[77,0,747,73],[81,0,747,77],[82,0,748,6],[91,0,748,15],[92,0,748,16],[93,0,748,17],[103,0,748,62],[105,0,748,64],[107,0,748,66],[108,0,748,67],[112,0,748,71],[113,0,748,72],[134,0,748,93],[135,0,748,94],[145,0,748,104],[146,0,748,105],[147,0,748,106],[148,0,753,5],[149,0,753,6]],[[4,0,754,2],[5,0,754,3]],[[4,0,756,2]],[],[],[],[],[],[[7,0,762,5]],[[4,0,763,9],[19,0,763,24],[20,0,763,25],[26,0,763,50],[28,0,764,25],[51,0,764,70],[53,0,764,72],[55,0,765,25],[63,0,765,45],[73,0,765,55],[74,0,765,56],[78,0,765,60],[79,0,765,61],[81,0,765,63],[82,0,765,64],[91,0,765,73],[92,0,765,74]],[[8,0,767,4],[12,0,767,8],[32,0,767,28],[36,0,767,32],[40,0,767,36],[44,0,767,40],[64,0,767,60],[65,0,767,61],[71,0,767,67],[76,0,767,72],[77,0,767,73],[79,0,767,75]],[[12,0,768,6],[54,0,768,48]],[[12,0,769,6],[17,0,769,11],[18,0,769,12],[24,0,769,18],[25,0,769,19],[31,0,769,25],[32,0,769,26],[33,0,769,27]],[[12,0,770,6],[19,0,770,13],[21,0,770,15],[22,0,770,16],[27,0,770,21],[28,0,770,22],[29,0,770,23]],[[9,0,771,5]],[[8,0,773,4],[15,0,773,11],[19,0,773,15],[20,0,773,16],[46,0,773,42],[47,0,773,43],[53,0,773,49],[55,0,773,51],[75,0,773,71],[76,0,773,72],[77,0,773,73],[81,0,773,77],[82,0,774,6],[85,0,774,9],[86,0,774,10],[87,0,774,11],[94,0,774,53],[96,0,774,55],[98,0,774,57],[99,0,774,58],[103,0,774,62],[104,0,774,63],[132,0,774,91],[133,0,774,92],[140,0,774,99],[141,0,774,100],[142,0,774,101],[144,0,775,6],[148,0,775,10],[149,0,775,11],[150,0,775,12],[151,0,775,13],[152,0,776,5],[153,0,776,6]],[[4,0,777,2],[5,0,777,3]],[[4,0,779,9],[26,0,779,31],[27,0,779,32],[35,0,779,50]],[[8,0,780,4],[14,0,780,10],[21,0,780,17],[24,0,781,6],[32,0,781,14],[33,0,781,15],[36,0,781,18],[37,0,781,19],[41,0,781,23],[42,0,781,24],[44,0,781,26],[45,0,781,27],[59,0,781,41],[60,0,781,42],[64,0,781,46],[66,0,781,48],[70,0,781,52],[71,0,781,53],[73,0,781,55],[74,0,781,56],[83,0,781,65],[84,0,781,87],[85,0,781,88],[86,0,781,89]],[[8,0,783,4],[15,0,783,11],[19,0,783,15],[20,0,783,16],[41,0,783,37],[42,0,783,38],[49,0,783,45],[50,0,783,46],[51,0,783,47]],[[4,0,784,2],[5,0,784,3]],[[4,0,786,2]],[],[],[],[],[[7,0,791,5]],[[4,0,792,9],[19,0,792,24],[20,0,792,25],[27,0,792,53],[29,0,792,55],[52,0,792,100],[54,0,792,102]],[[8,0,794,4],[12,0,794,8],[32,0,794,28],[36,0,794,32],[40,0,794,36],[44,0,794,40],[64,0,794,60],[65,0,794,61],[71,0,794,67],[76,0,794,72],[77,0,794,73],[79,0,794,75]],[[12,0,795,6],[19,0,795,13],[23,0,795,17],[24,0,795,18],[45,0,795,39],[46,0,795,40],[53,0,795,47],[54,0,795,48],[55,0,795,49]],[[9,0,796,5]],[[8,0,798,4],[14,0,798,10],[26,0,798,22],[29,0,798,49],[31,0,798,51],[32,0,798,52]],[[8,0,800,4],[15,0,800,11],[16,0,800,12],[23,0,800,19],[24,0,800,20],[30,0,800,26],[31,0,800,27],[33,0,800,29]],[[12,0,801,6],[18,0,801,12],[26,0,801,20],[29,0,801,23],[33,0,801,27],[34,0,801,28],[60,0,801,54],[61,0,801,55],[67,0,801,61],[69,0,801,63],[89,0,801,83],[90,0,801,84],[91,0,801,85]],[[12,0,802,6],[24,0,802,18],[25,0,802,19],[29,0,802,23],[30,0,802,24],[38,0,802,32],[39,0,802,33],[40,0,802,34]],[[8,0,803,4],[9,0,803,5],[10,0,803,6],[11,0,803,7]],[[8,0,805,4],[15,0,805,11],[28,0,805,24],[29,0,805,25],[41,0,805,37],[42,0,805,38],[43,0,805,39],[47,0,805,43]],[[8,0,806,6],[44,0,806,42]],[[8,0,807,6],[11,0,807,9],[12,0,807,10],[13,0,807,11],[18,0,807,23],[20,0,807,25],[22,0,807,27]],[[12,0,808,8],[16,0,808,12],[30,0,808,26],[33,0,808,50],[35,0,808,52],[36,0,808,53]],[[12,0,809,8],[17,0,809,13],[18,0,809,14],[25,0,809,21],[26,0,809,22],[30,0,809,26],[31,0,809,27],[33,0,809,29]],[[16,0,810,10],[30,0,810,24],[33,0,810,27],[47,0,810,41],[48,0,810,42],[54,0,810,48],[55,0,810,49],[59,0,810,53],[60,0,810,54],[61,0,810,55]],[[12,0,811,8],[13,0,811,9],[14,0,811,10],[15,0,811,11]],[[12,0,812,8],[19,0,812,15],[33,0,812,29],[34,0,812,30]],[[8,0,813,6],[9,0,813,7],[10,0,813,8]],[[8,0,814,6],[44,0,814,42]],[[8,0,815,6],[17,0,815,15],[18,0,815,16],[19,0,815,17],[29,0,815,48],[31,0,815,50],[33,0,815,52],[34,0,815,53],[38,0,815,57],[39,0,815,58],[60,0,815,79],[61,0,815,80],[71,0,815,90],[72,0,815,91],[73,0,815,92],[74,0,820,5],[75,0,820,6]],[[4,0,821,2],[5,0,821,3]],[[4,0,823,2]],[],[],[],[],[],[],[[7,0,830,5]],[[4,0,831,9],[21,0,831,26],[22,0,831,27],[35,0,831,61],[37,0,831,63],[60,0,831,108],[62,0,831,110]],[[8,0,832,4],[15,0,832,11],[19,0,832,15],[20,0,832,16],[59,0,832,55],[60,0,832,56],[73,0,832,69],[75,0,832,71],[95,0,832,91],[96,0,832,92],[97,0,832,93],[101,0,832,97],[102,0,833,6],[111,0,833,15],[112,0,833,16],[119,0,833,23],[120,0,833,24],[122,0,833,26],[123,0,833,27],[127,0,833,31],[128,0,833,32],[143,0,833,47],[144,0,833,48],[151,0,833,55],[152,0,833,56],[153,0,833,57],[154,0,834,5],[155,0,834,6],[159,0,834,10],[160,0,835,6],[164,0,835,10],[165,0,835,11],[166,0,835,12],[167,0,835,13],[168,0,836,5],[169,0,836,6]],[[4,0,837,2],[5,0,837,3]],[[4,0,840,2]],[],[],[],[],[],[[7,0,846,5]],[[4,0,847,9],[20,0,847,25],[21,0,847,26],[28,0,847,41],[30,0,847,43],[53,0,847,88],[55,0,847,90]],[[8,0,848,4],[14,0,848,10],[20,0,848,16],[23,0,848,19],[37,0,848,33],[38,0,848,34],[45,0,848,41],[47,0,848,43],[51,0,848,47],[52,0,848,48],[54,0,848,50],[55,0,848,51],[64,0,848,60],[65,0,848,82],[66,0,848,83]],[[8,0,849,4],[15,0,849,11],[19,0,849,15],[20,0,849,16],[27,0,849,23],[28,0,849,24],[34,0,849,30],[36,0,849,32],[56,0,849,52],[57,0,849,53],[58,0,849,54]],[[4,0,850,2],[5,0,850,3]],[[4,0,852,2]],[],[],[],[],[],[],[[7,0,859,5]],[[4,0,860,9],[15,0,860,20],[16,0,860,24],[20,0,860,41],[22,0,860,43],[45,0,860,88],[47,0,860,90]],[[8,0,862,4],[14,0,862,10],[21,0,862,17],[24,0,862,20],[28,0,862,24],[29,0,862,25],[58,0,862,54],[59,0,862,55],[63,0,862,59],[65,0,862,61],[85,0,862,81],[86,0,862,82],[87,0,862,83]],[[8,0,864,4],[15,0,864,11],[19,0,864,15],[20,0,864,16],[41,0,864,37],[42,0,864,38],[49,0,864,45],[50,0,864,46],[51,0,864,47],[55,0,864,51]],[[8,0,865,6],[105,0,865,103]],[[8,0,866,6],[73,0,866,71]],[[8,0,867,6],[32,0,867,30]],[[8,0,868,6],[14,0,868,12]],[[8,0,869,6],[12,0,869,10],[13,0,869,11],[14,0,869,12],[15,0,869,13],[16,0,870,5],[17,0,870,6]],[[4,0,871,2],[5,0,871,3]],[[4,0,896,9],[23,0,896,28],[24,0,896,32],[28,0,896,80],[30,0,897,32],[53,0,897,78],[55,0,897,80],[57,0,898,32],[84,0,898,69],[86,0,898,71]],[[8,0,900,4],[99,0,900,95]],[[8,0,901,4],[40,0,901,36]],[[8,0,903,4],[12,0,903,8],[17,0,903,13],[18,0,903,14],[25,0,903,21],[26,0,903,22],[30,0,903,26],[31,0,903,27],[33,0,903,29]],[[12,0,905,6],[18,0,905,12],[28,0,905,22],[31,0,905,35],[33,0,905,37],[34,0,905,38]],[[12,0,907,6],[16,0,907,10],[17,0,907,11],[24,0,907,18],[25,0,907,19],[26,0,907,20],[27,0,907,21],[29,0,907,23]],[[16,0,908,8],[26,0,908,18],[27,0,908,19],[31,0,908,23],[32,0,909,10],[36,0,909,14],[37,0,909,15],[68,0,909,46],[69,0,909,47],[70,0,909,48],[72,0,909,50],[92,0,909,70],[94,0,909,72],[118,0,909,96],[119,0,909,102],[120,0,910,9],[121,0,910,10]],[[12,0,911,6],[13,0,911,7],[14,0,911,8],[15,0,911,9]],[[12,0,913,6],[19,0,913,13],[29,0,913,23],[30,0,913,24]],[[9,0,915,5]],[[13,0,915,11]],[[12,0,916,6],[19,0,916,13],[23,0,916,17],[24,0,916,18],[55,0,916,49],[56,0,916,50],[60,0,916,54],[62,0,916,56],[82,0,916,76],[84,0,916,78],[108,0,916,102],[109,0,916,108],[110,0,916,109]],[[9,0,917,5]],[[4,0,918,2],[5,0,918,3]],[[4,0,921,2],[54,0,921,52]],[[4,0,923,2]],[],[],[],[],[],[],[],[[7,0,931,5]],[[4,0,932,12],[23,0,932,31],[24,0,932,35],[30,0,932,65],[32,0,933,35],[51,0,933,73],[68,0,933,90],[69,0,933,91],[88,0,933,110]],[[8,0,936,4],[15,0,936,11],[19,0,936,15],[20,0,936,16],[22,0,936,18],[23,0,936,19],[26,0,936,22],[27,0,936,23],[33,0,936,29],[34,0,936,30],[35,0,936,31],[39,0,936,35],[40,0,937,6],[43,0,937,9],[44,0,937,10],[45,0,937,11],[53,0,937,37],[55,0,937,39],[57,0,937,41]],[[12,0,938,8],[16,0,938,12],[17,0,938,13],[25,0,938,21],[26,0,938,22],[32,0,938,28],[34,0,938,30],[38,0,938,34],[54,0,938,50],[59,0,938,55],[76,0,938,72],[77,0,938,73],[96,0,938,92],[98,0,938,94]],[[16,0,939,10],[22,0,939,16],[27,0,939,21],[30,0,939,43]],[[20,0,940,12],[24,0,940,16],[26,0,940,18],[44,0,940,36]],[[20,0,941,12],[24,0,941,16],[26,0,941,18],[37,0,941,29]],[[20,0,942,12],[27,0,942,19],[29,0,942,21],[100,0,942,92]],[[20,0,943,12],[26,0,943,18]],[[17,0,944,11],[18,0,944,12]],[[16,0,945,10],[22,0,945,16],[27,0,945,21],[28,0,945,22]],[[13,0,946,9]],[[8,0,947,6],[9,0,947,7],[10,0,947,8],[12,0,949,6],[18,0,949,12],[19,0,949,13],[20,0,949,14],[28,0,949,40],[30,0,949,42],[32,0,949,44]],[[12,0,950,8],[19,0,950,15],[20,0,950,16],[21,0,950,17],[29,0,950,25],[30,0,950,26],[36,0,950,32],[38,0,950,34],[42,0,950,38],[58,0,950,54],[63,0,950,59],[80,0,950,76],[81,0,950,77],[87,0,950,83],[88,0,950,84],[89,0,950,85]],[[8,0,951,6],[9,0,951,7],[10,0,951,8],[12,0,953,6],[15,0,953,9],[16,0,953,10],[17,0,953,11],[25,0,953,37],[27,0,953,39],[29,0,953,41]],[[12,0,955,8],[19,0,955,15],[20,0,955,16],[23,0,955,19],[24,0,955,20],[32,0,955,28],[33,0,955,29],[39,0,955,35],[41,0,955,37],[42,0,955,38],[43,0,955,39]],[[12,0,957,8],[16,0,957,12],[24,0,957,20],[25,0,957,21],[31,0,957,27],[33,0,957,29],[37,0,957,33],[53,0,957,49],[58,0,957,54],[75,0,957,71],[76,0,957,72],[95,0,957,91],[97,0,957,93]],[[16,0,958,10],[22,0,958,16],[26,0,958,20],[29,0,958,23],[37,0,958,31],[38,0,958,32],[42,0,958,36],[44,0,958,43],[45,0,958,44]],[[16,0,960,10],[22,0,960,16],[39,0,960,33],[42,0,960,58]],[[20,0,961,12],[22,0,961,14],[24,0,961,16],[32,0,961,24],[33,0,961,25],[35,0,961,27]],[[20,0,962,12],[23,0,962,15],[25,0,962,17],[33,0,962,25],[34,0,962,26],[37,0,962,53]],[[20,0,963,12],[24,0,963,16],[26,0,963,18],[32,0,963,24],[33,0,963,25],[37,0,963,29]],[[20,0,964,12],[28,0,964,20],[30,0,964,22],[38,0,964,30],[39,0,964,31],[45,0,964,37],[47,0,964,39]],[[20,0,965,12],[36,0,965,28],[38,0,965,30],[46,0,965,38],[47,0,965,39],[55,0,965,47]],[[17,0,966,11],[18,0,966,12]],[[16,0,968,10],[23,0,968,17],[25,0,968,18],[28,0,968,21],[32,0,968,25],[34,0,968,27],[51,0,968,44],[53,0,968,60],[54,0,968,61]],[[13,0,970,9]],[[17,0,970,15],[21,0,970,19],[37,0,970,35],[42,0,970,40],[59,0,970,57],[60,0,970,58],[71,0,970,69],[73,0,970,71],[75,0,970,73],[98,0,970,96]],[[16,0,971,10],[23,0,971,17],[27,0,971,21],[28,0,971,22]],[[13,0,972,9]],[[12,0,973,8],[19,0,973,15],[23,0,973,19],[24,0,973,20]],[[8,0,974,6],[9,0,974,7],[10,0,974,8],[12,0,975,6],[15,0,975,9],[16,0,975,10],[17,0,975,11],[21,0,975,15],[23,0,975,17],[25,0,975,19]],[[12,0,976,8],[16,0,976,12],[20,0,976,16],[24,0,976,20],[28,0,976,24],[30,0,976,26]],[[16,0,977,10],[23,0,977,17],[45,0,977,39],[46,0,977,40],[50,0,977,60],[51,0,977,61],[52,0,977,62]],[[13,0,978,9]],[[17,0,978,15]],[[16,0,979,10],[23,0,979,17],[27,0,979,21],[28,0,979,22]],[[13,0,980,9]],[[8,0,981,6],[9,0,981,7],[10,0,981,8],[11,0,982,32],[12,0,982,33]],[[4,0,983,2],[5,0,983,3]],[[4,0,985,2]],[],[],[],[],[],[[7,0,991,5]],[[4,0,992,12],[30,0,992,38],[31,0,992,42],[37,0,992,58]],[[8,0,993,4]],[],[],[[11,0,996,7]],[[8,0,997,4],[15,0,997,11],[19,0,997,15],[20,0,997,16],[22,0,997,18],[23,0,997,19],[33,0,997,29],[34,0,997,30],[40,0,997,36],[41,0,997,37],[42,0,997,38],[46,0,997,42],[47,0,998,6],[50,0,998,9],[51,0,998,10],[52,0,998,11],[56,0,998,33],[58,0,998,35],[60,0,998,37]],[[12,0,999,8],[19,0,999,15],[23,0,999,19],[24,0,999,20],[28,0,999,24],[29,0,999,25],[32,0,999,28],[33,0,999,29],[41,0,999,37],[42,0,999,38],[44,0,999,40]],[[16,0,1000,10],[22,0,1000,16],[26,0,1000,20],[29,0,1000,23],[37,0,1000,31],[38,0,1000,32],[42,0,1000,36],[44,0,1000,43],[45,0,1000,44]],[[16,0,1002,10],[22,0,1002,16],[24,0,1002,18],[27,0,1002,21],[35,0,1002,29],[36,0,1002,30],[38,0,1002,32],[39,0,1002,33]],[[16,0,1003,10],[22,0,1003,16],[25,0,1003,19],[28,0,1003,22],[36,0,1003,30],[37,0,1003,31],[40,0,1003,58],[41,0,1003,59]],[[16,0,1004,10],[22,0,1004,16],[26,0,1004,20],[29,0,1004,23],[32,0,1004,26],[33,0,1004,27],[37,0,1004,31],[38,0,1004,32]],[[16,0,1005,10],[22,0,1005,16],[38,0,1005,32],[41,0,1005,35],[49,0,1005,43],[50,0,1005,44],[58,0,1005,52],[59,0,1005,53]],[[16,0,1007,10],[22,0,1007,16],[39,0,1007,33],[42,0,1007,58]],[[20,0,1008,12],[22,0,1008,14]],[[20,0,1009,12],[24,0,1009,16]],[[20,0,1010,12],[23,0,1010,15]],[[20,0,1011,12],[36,0,1011,28]],[[20,0,1012,12],[28,0,1012,20],[30,0,1012,22],[34,0,1012,26]],[[17,0,1013,11],[18,0,1013,12]],[[16,0,1015,10],[23,0,1015,17],[25,0,1015,18],[28,0,1015,21],[32,0,1015,25],[34,0,1015,27],[51,0,1015,44],[53,0,1015,60],[54,0,1015,61]],[[12,0,1016,8],[13,0,1016,9],[14,0,1016,10],[15,0,1016,11]],[[8,0,1017,6],[9,0,1017,7],[10,0,1017,8],[12,0,1018,6],[15,0,1018,9],[16,0,1018,10],[17,0,1018,11],[22,0,1018,36],[24,0,1018,38],[26,0,1018,40],[27,0,1018,41],[32,0,1018,46],[33,0,1018,47],[36,0,1018,50],[37,0,1018,51],[41,0,1018,55],[42,0,1018,56],[44,0,1018,58]],[[12,0,1019,8],[34,0,1019,30],[35,0,1019,31],[39,0,1019,35],[40,0,1019,36],[41,0,1019,37]],[[12,0,1020,8],[19,0,1020,15],[23,0,1020,19],[24,0,1020,20]],[[8,0,1021,6],[9,0,1021,7],[10,0,1021,8],[11,0,1021,9],[12,0,1022,39],[13,0,1022,40]],[[4,0,1023,2],[5,0,1023,3]],[[4,0,1025,2]],[],[],[],[],[],[],[],[[7,0,1033,5]],[[4,0,1034,12],[28,0,1034,36],[29,0,1035,4],[33,0,1035,21],[35,0,1036,4],[58,0,1036,49],[60,0,1036,51]],[[8,0,1038,4],[12,0,1038,8],[16,0,1038,12],[20,0,1038,16],[24,0,1038,20],[26,0,1038,22]],[[12,0,1039,6],[19,0,1039,13],[21,0,1039,15],[22,0,1039,16],[23,0,1039,17],[27,0,1039,21],[28,0,1039,22],[29,0,1039,23],[30,0,1039,24]],[[9,0,1040,5]],[[8,0,1041,4],[12,0,1041,8],[32,0,1041,28],[33,0,1041,29],[39,0,1041,35],[43,0,1041,39],[44,0,1041,40],[46,0,1041,42]],[[12,0,1042,6],[19,0,1042,13],[21,0,1042,15],[22,0,1042,16],[23,0,1042,17],[27,0,1042,21],[28,0,1042,22],[29,0,1042,23],[30,0,1042,24]],[[9,0,1043,5]],[[8,0,1045,4],[14,0,1045,10],[33,0,1045,29],[36,0,1045,56],[38,0,1045,58],[39,0,1045,59]],[[8,0,1047,4],[91,0,1047,87]],[[8,0,1048,4],[28,0,1048,24],[29,0,1048,25],[36,0,1048,32],[37,0,1048,33],[55,0,1048,51],[56,0,1048,52],[58,0,1048,54]],[[12,0,1050,6],[18,0,1050,12],[32,0,1050,26],[35,0,1050,29],[39,0,1050,33],[53,0,1050,47],[54,0,1050,48],[70,0,1050,64],[71,0,1050,65],[75,0,1050,69],[76,0,1050,70],[93,0,1050,87],[94,0,1050,88],[97,0,1050,91],[99,0,1050,93],[117,0,1050,111],[118,0,1050,112],[122,0,1050,116],[123,0,1050,117],[124,0,1050,118],[125,0,1050,119]],[[12,0,1051,6],[16,0,1051,10],[34,0,1051,28],[35,0,1051,29],[51,0,1051,45],[53,0,1051,47]],[[16,0,1052,8],[30,0,1052,22],[31,0,1052,23],[47,0,1052,39],[50,0,1052,42],[68,0,1052,60],[69,0,1052,61],[85,0,1052,77],[86,0,1052,78]],[[16,0,1053,8],[100,0,1053,92]],[[13,0,1054,7]],[[12,0,1055,6],[48,0,1055,42]],[[12,0,1056,6],[98,0,1056,92]],[[12,0,1057,6],[16,0,1057,10]],[[12,0,1059,6],[18,0,1059,12],[36,0,1059,30],[39,0,1059,33],[43,0,1059,37],[44,0,1059,38],[70,0,1059,64],[71,0,1059,65],[85,0,1059,79],[86,0,1059,80],[91,0,1059,85],[92,0,1059,86],[93,0,1059,87],[97,0,1059,91]],[[12,0,1060,8],[115,0,1060,111]],[[12,0,1061,8],[54,0,1061,50]],[[12,0,1062,8],[40,0,1062,36]],[[12,0,1063,8],[44,0,1063,40]],[[12,0,1064,8],[58,0,1064,54]],[[12,0,1065,8],[77,0,1065,73]],[[12,0,1066,8],[20,0,1066,16],[21,0,1066,17],[22,0,1066,18],[27,0,1066,39],[29,0,1066,41],[31,0,1066,43]],[[16,0,1068,10],[20,0,1068,14],[21,0,1068,15],[39,0,1068,33],[40,0,1068,34],[54,0,1068,48],[56,0,1068,50]],[[20,0,1069,12],[27,0,1069,19],[29,0,1069,21],[30,0,1069,22],[35,0,1069,27],[36,0,1069,28],[37,0,1069,29]],[[17,0,1070,11]],[[16,0,1072,10],[22,0,1072,16],[34,0,1072,28],[37,0,1072,55],[39,0,1072,57],[40,0,1072,58]],[[16,0,1074,10],[21,0,1074,15],[24,0,1074,18],[29,0,1074,23],[30,0,1074,24],[36,0,1074,30],[37,0,1074,31],[38,0,1074,32],[39,0,1074,33],[41,0,1074,35],[42,0,1074,36],[43,0,1074,37],[47,0,1074,41],[51,0,1074,45],[52,0,1074,46],[53,0,1074,47],[54,0,1074,48],[83,0,1074,77]],[[16,0,1076,10],[21,0,1076,15],[22,0,1076,16],[29,0,1076,23],[30,0,1076,24],[31,0,1076,25],[38,0,1076,46],[40,0,1076,48],[42,0,1076,50]],[[20,0,1077,12],[26,0,1077,18],[47,0,1077,39],[50,0,1077,42],[54,0,1077,46],[55,0,1077,47],[79,0,1077,71],[80,0,1077,72],[87,0,1077,79],[89,0,1077,81],[107,0,1077,99],[108,0,1077,100],[122,0,1077,114],[123,0,1077,115],[124,0,1077,116]],[[20,0,1078,12],[32,0,1078,24],[33,0,1078,25],[37,0,1078,29],[38,0,1078,30],[59,0,1078,51],[60,0,1078,52],[61,0,1078,53]],[[16,0,1079,10],[17,0,1079,11],[18,0,1079,12],[19,0,1079,13]],[[16,0,1081,10],[20,0,1081,14],[32,0,1081,26],[33,0,1081,27],[39,0,1081,33],[43,0,1081,37],[44,0,1081,38],[46,0,1081,40]],[[20,0,1082,12],[27,0,1082,19],[29,0,1082,21],[30,0,1082,22],[32,0,1082,24],[33,0,1082,25],[34,0,1082,26]],[[17,0,1083,11],[18,0,1083,12],[67,0,1083,61]],[[16,0,1085,10],[23,0,1085,17],[36,0,1085,30],[37,0,1085,31],[49,0,1085,43],[50,0,1085,44],[51,0,1085,45],[55,0,1085,49]],[[16,0,1086,12],[47,0,1086,43]],[[17,0,1087,11],[18,0,1087,12]],[[12,0,1088,8],[13,0,1088,9],[14,0,1088,10],[16,0,1088,12],[51,0,1088,47]],[[12,0,1089,8]],[],[[66,0,1091,62]],[[12,0,1092,8],[15,0,1092,11],[16,0,1092,12],[17,0,1092,13],[22,0,1092,34],[24,0,1092,36],[26,0,1092,38]],[[16,0,1093,10],[22,0,1093,16],[27,0,1093,21],[30,0,1093,24],[48,0,1093,42],[49,0,1093,43],[54,0,1093,48],[59,0,1093,53],[68,0,1093,62],[69,0,1093,63],[70,0,1093,64],[71,0,1093,65],[89,0,1093,83],[90,0,1093,84],[95,0,1093,89],[96,0,1093,90],[97,0,1093,91],[98,0,1093,92],[102,0,1093,96],[103,0,1093,97],[115,0,1093,109],[116,0,1093,110]],[[16,0,1095,10],[20,0,1095,14],[25,0,1095,19],[26,0,1095,20],[32,0,1095,26],[37,0,1095,31],[38,0,1095,32],[42,0,1095,36],[47,0,1095,41],[48,0,1095,42],[49,0,1095,43],[50,0,1095,44],[51,0,1095,45],[68,0,1095,62],[69,0,1095,63],[71,0,1095,65],[76,0,1095,70],[81,0,1095,75],[83,0,1095,77]],[[20,0,1096,12],[27,0,1096,19],[29,0,1096,20],[30,0,1096,21],[48,0,1096,39],[49,0,1096,40],[53,0,1096,44],[54,0,1096,45],[56,0,1096,47],[61,0,1096,52],[62,0,1096,53],[63,0,1096,54],[64,0,1096,55],[66,0,1096,56],[67,0,1096,57]],[[17,0,1097,11]],[[21,0,1097,17]],[[20,0,1098,12],[27,0,1098,19],[29,0,1098,20],[30,0,1098,21],[48,0,1098,39],[49,0,1098,40],[53,0,1098,44],[54,0,1098,45],[56,0,1098,47],[61,0,1098,52],[63,0,1098,53],[64,0,1098,54]],[[17,0,1099,11]],[[12,0,1100,8],[13,0,1100,9],[14,0,1100,10],[15,0,1102,7],[16,0,1102,8]],[[12,0,1104,6],[31,0,1104,25],[32,0,1104,26],[36,0,1104,30],[37,0,1104,31],[55,0,1104,49],[56,0,1104,50],[57,0,1104,51]],[[8,0,1105,4],[9,0,1105,5],[10,0,1105,6],[11,0,1105,7]],[[8,0,1107,4],[61,0,1107,57]],[[8,0,1108,4],[21,0,1108,17]],[[8,0,1109,4],[15,0,1109,11],[28,0,1109,24],[29,0,1109,25],[48,0,1109,44],[49,0,1109,45],[50,0,1109,46],[54,0,1109,50],[55,0,1110,6],[58,0,1110,9],[59,0,1110,10],[60,0,1110,11],[75,0,1110,87],[77,0,1110,89],[79,0,1110,91]],[[12,0,1111,8],[41,0,1111,37]],[[12,0,1112,8],[18,0,1112,14],[26,0,1112,22],[29,0,1112,51],[31,0,1112,53],[32,0,1112,54]],[[12,0,1114,8],[27,0,1114,23],[28,0,1114,24],[35,0,1114,31],[36,0,1114,32],[37,0,1114,33],[51,0,1114,47],[53,0,1114,49],[55,0,1114,51]],[[16,0,1116,10],[21,0,1116,15],[27,0,1116,21],[28,0,1116,22],[42,0,1116,36],[44,0,1116,38],[49,0,1116,43],[50,0,1116,44],[54,0,1116,48],[60,0,1116,54],[61,0,1116,55],[68,0,1116,62],[69,0,1116,63],[83,0,1116,77],[84,0,1116,78],[86,0,1116,80]],[[20,0,1117,12],[28,0,1117,20],[29,0,1117,21],[43,0,1117,35],[44,0,1117,36],[47,0,1117,39],[52,0,1117,44],[53,0,1117,45]],[[17,0,1118,11]],[[12,0,1119,8],[13,0,1119,9],[14,0,1119,10],[15,0,1119,11]],[[12,0,1120,8],[19,0,1120,15],[27,0,1120,23],[28,0,1120,24]],[[8,0,1121,6],[9,0,1121,7],[10,0,1121,8],[12,0,1123,6],[15,0,1123,9],[16,0,1123,10],[17,0,1123,11],[21,0,1123,29],[23,0,1123,31],[25,0,1123,33]],[[12,0,1124,8],[19,0,1124,15],[21,0,1124,16],[24,0,1124,19],[28,0,1124,23],[30,0,1124,25],[33,0,1124,28],[37,0,1124,32],[39,0,1124,48],[40,0,1124,49]],[[8,0,1125,6],[9,0,1125,7],[10,0,1125,8],[11,0,1126,5],[12,0,1126,6]],[[4,0,1127,2],[5,0,1127,3]],[[4,0,1129,2]],[],[[7,0,1131,5]],[[4,0,1132,12],[36,0,1132,44],[37,0,1133,4],[43,0,1133,29],[45,0,1134,4],[68,0,1134,49],[70,0,1134,51],[72,0,1135,4],[91,0,1135,42],[108,0,1135,59],[109,0,1135,60],[120,0,1135,71]],[[8,0,1137,4],[33,0,1137,29]],[[8,0,1138,4],[15,0,1138,11],[19,0,1138,15],[20,0,1138,16],[39,0,1138,35],[40,0,1138,39],[46,0,1138,45],[48,0,1138,47],[64,0,1138,63],[65,0,1138,64],[66,0,1138,65],[70,0,1138,69],[71,0,1139,6],[79,0,1139,14],[80,0,1139,15],[81,0,1139,16],[85,0,1139,34],[87,0,1139,36],[89,0,1139,38]],[[12,0,1141,8],[16,0,1141,12],[20,0,1141,16],[25,0,1141,21],[29,0,1141,25],[31,0,1141,27]],[[16,0,1142,10],[23,0,1142,17],[25,0,1142,19],[26,0,1142,20],[30,0,1142,24],[31,0,1142,25],[32,0,1142,26]],[[13,0,1143,9]],[[12,0,1144,8],[16,0,1144,12],[36,0,1144,32],[37,0,1144,33],[43,0,1144,39],[47,0,1144,43],[48,0,1144,44],[50,0,1144,46]],[[16,0,1145,10],[23,0,1145,17],[25,0,1145,19],[26,0,1145,20],[30,0,1145,24],[31,0,1145,25],[32,0,1145,26]],[[13,0,1146,9]],[[12,0,1148,8],[19,0,1148,15],[23,0,1148,19],[24,0,1148,20],[48,0,1148,44],[49,0,1148,45],[53,0,1148,49],[55,0,1148,51],[75,0,1148,71],[76,0,1148,72],[77,0,1148,73]],[[8,0,1149,6],[9,0,1149,7],[10,0,1149,8],[11,0,1150,5],[12,0,1150,6]],[[4,0,1151,2],[5,0,1151,3]],[[4,0,1153,2]],[],[],[],[],[],[],[],[],[],[],[[7,0,1164,5]],[[4,0,1165,12],[14,0,1165,22],[15,0,1165,26],[19,0,1165,33],[21,0,1165,35],[34,0,1165,72],[36,0,1165,74],[49,0,1165,96],[53,0,1165,100],[55,0,1165,102],[57,0,1165,113]],[[8,0,1168,4],[58,0,1168,54]],[[8,0,1170,4],[12,0,1170,8],[16,0,1170,29],[17,0,1170,30]],[[8,0,1172,4],[12,0,1172,8],[22,0,1172,18],[24,0,1172,20]],[[12,0,1173,6],[18,0,1173,12],[22,0,1173,16],[25,0,1173,19],[29,0,1173,23],[33,0,1173,27],[35,0,1173,29],[36,0,1173,30]],[[12,0,1174,6],[16,0,1174,10],[19,0,1174,13],[33,0,1174,27],[34,0,1174,28],[38,0,1174,32],[40,0,1174,34],[45,0,1174,39],[47,0,1174,41],[51,0,1174,45],[52,0,1174,46],[53,0,1174,47]],[[12,0,1175,6],[16,0,1175,10],[19,0,1175,13],[34,0,1175,28],[35,0,1175,29],[39,0,1175,33],[41,0,1175,35],[46,0,1175,40],[48,0,1175,42],[52,0,1175,46],[53,0,1175,47],[54,0,1175,48]],[[9,0,1176,5]],[[8,0,1178,4],[12,0,1178,8],[14,0,1178,10],[19,0,1178,15],[28,0,1178,24],[30,0,1178,26]],[[12,0,1179,6],[18,0,1179,12],[24,0,1179,18],[27,0,1179,40],[42,0,1179,55],[43,0,1179,56],[56,0,1179,69],[58,0,1179,71],[60,0,1179,73],[61,0,1179,74],[62,0,1179,75]],[[12,0,1180,6],[16,0,1180,10],[19,0,1180,13],[23,0,1180,17],[24,0,1180,18],[26,0,1180,20],[27,0,1180,21],[30,0,1180,24],[31,0,1180,25],[37,0,1180,31],[39,0,1180,33],[43,0,1180,37],[44,0,1180,38],[45,0,1180,39]],[[9,0,1181,5]],[[13,0,1181,11]],[[12,0,1182,6],[16,0,1182,10],[19,0,1182,13],[23,0,1182,17],[24,0,1182,18],[26,0,1182,20],[27,0,1182,21],[30,0,1182,24],[31,0,1182,28],[44,0,1182,41],[46,0,1182,43],[50,0,1182,47],[51,0,1182,48],[52,0,1182,49]],[[9,0,1183,5]],[[8,0,1185,4],[51,0,1185,47]],[[8,0,1186,4],[38,0,1186,34]],[[8,0,1187,4],[114,0,1187,110]],[[8,0,1188,4],[15,0,1188,11]],[[8,0,1189,4],[12,0,1189,8]],[[8,0,1191,4],[12,0,1191,8],[15,0,1191,11],[19,0,1191,15],[20,0,1191,16],[24,0,1191,20]],[[8,0,1192,6],[79,0,1192,77]],[[8,0,1193,6],[40,0,1193,38]],[[8,0,1194,6],[40,0,1194,38]],[[8,0,1195,6],[11,0,1195,9],[12,0,1195,10],[13,0,1195,11],[16,0,1195,48],[18,0,1195,50],[20,0,1195,52]],[[12,0,1196,8],[16,0,1196,12],[18,0,1196,14],[23,0,1196,19],[32,0,1196,28],[36,0,1196,32],[39,0,1196,35],[41,0,1196,37]],[[16,0,1198,10],[22,0,1198,16],[26,0,1198,20],[29,0,1198,23],[32,0,1198,26],[33,0,1198,27],[37,0,1198,31],[38,0,1198,32]],[[16,0,1200,10],[22,0,1200,16],[39,0,1200,33],[42,0,1200,58]],[[20,0,1201,12],[22,0,1201,14],[24,0,1201,16],[27,0,1201,19],[28,0,1201,20],[30,0,1201,22]],[[20,0,1202,12],[24,0,1202,16]],[[20,0,1203,12],[23,0,1203,15]],[[20,0,1204,12],[28,0,1204,20],[30,0,1204,22],[34,0,1204,26]],[[17,0,1205,11],[18,0,1205,12]],[[16,0,1207,10],[23,0,1207,17],[25,0,1207,18],[28,0,1207,21],[32,0,1207,25],[34,0,1207,27],[51,0,1207,44],[53,0,1207,60],[54,0,1207,61]],[[13,0,1209,9]],[[17,0,1209,15],[19,0,1209,17],[87,0,1209,85]],[[16,0,1210,10],[22,0,1210,16],[26,0,1210,20],[29,0,1210,23],[42,0,1210,36],[43,0,1210,37],[47,0,1210,41],[50,0,1210,44],[53,0,1210,47],[56,0,1210,50],[58,0,1210,52],[59,0,1210,53]],[[16,0,1211,10],[19,0,1211,13],[22,0,1211,16],[36,0,1211,30],[37,0,1211,31],[41,0,1211,35],[43,0,1211,37],[47,0,1211,41],[48,0,1211,42],[50,0,1211,44],[51,0,1211,45],[60,0,1211,54],[61,0,1211,79],[62,0,1211,80]],[[16,0,1213,10],[22,0,1213,16],[39,0,1213,33],[42,0,1213,58]],[[20,0,1214,12],[22,0,1214,14],[24,0,1214,16],[26,0,1214,28]],[[20,0,1215,12],[23,0,1215,15]],[[20,0,1216,12],[24,0,1216,16]],[[20,0,1217,12],[28,0,1217,20],[30,0,1217,22],[34,0,1217,26]],[[17,0,1218,11],[18,0,1218,12]],[[16,0,1220,10],[23,0,1220,17],[25,0,1220,18],[28,0,1220,21],[32,0,1220,25],[34,0,1220,27],[51,0,1220,44],[53,0,1220,60],[54,0,1220,61]],[[13,0,1221,9]],[[8,0,1222,6],[9,0,1222,7],[10,0,1222,8],[11,0,1223,5],[12,0,1223,6]],[[8,0,1225,4],[15,0,1225,11],[19,0,1225,15],[20,0,1225,16],[24,0,1225,20],[25,0,1226,6],[29,0,1226,10],[30,0,1226,11],[31,0,1226,12],[32,0,1226,13],[33,0,1227,5],[34,0,1227,6]],[[4,0,1228,2],[5,0,1228,3]],[[4,0,1230,2],[74,0,1230,72]],[[4,0,1231,12],[17,0,1231,25],[18,0,1231,29],[22,0,1231,36],[24,0,1231,38],[30,0,1231,63],[32,0,1231,65],[52,0,1231,94],[56,0,1231,98]],[[8,0,1233,4],[12,0,1233,8],[29,0,1233,25],[31,0,1233,27]],[[12,0,1234,6],[16,0,1234,10],[19,0,1234,13],[34,0,1234,28],[35,0,1234,29],[39,0,1234,33],[41,0,1234,35],[46,0,1234,40],[47,0,1234,41],[48,0,1234,42]],[[9,0,1235,5]],[[8,0,1236,4],[15,0,1236,11],[19,0,1236,15],[20,0,1236,16],[22,0,1236,18],[23,0,1236,19],[29,0,1236,25],[30,0,1236,26],[36,0,1236,32],[38,0,1236,34],[42,0,1236,38],[43,0,1236,39],[44,0,1236,40]],[[4,0,1237,2],[5,0,1237,3]],[[4,0,1239,2]],[],[[7,0,1241,5]],[[4,0,1242,12],[27,0,1242,35],[28,0,1242,39],[32,0,1242,46],[34,0,1243,39],[40,0,1243,64],[42,0,1244,39],[65,0,1244,85],[67,0,1244,87],[69,0,1245,39],[89,0,1245,68],[93,0,1245,72],[95,0,1246,39],[100,0,1246,57]],[[8,0,1248,4],[12,0,1248,8],[17,0,1248,13],[22,0,1248,18],[31,0,1248,27],[33,0,1248,29]],[[12,0,1249,6],[17,0,1249,11],[20,0,1249,14],[30,0,1249,24],[31,0,1249,25],[35,0,1249,29],[36,0,1249,30],[38,0,1249,32],[39,0,1249,33],[48,0,1249,42],[49,0,1249,43],[50,0,1249,44]],[[9,0,1250,5]],[[8,0,1252,4],[12,0,1252,8],[29,0,1252,25],[31,0,1252,27]],[[12,0,1253,6],[16,0,1253,10],[19,0,1253,13],[34,0,1253,28],[35,0,1253,29],[39,0,1253,33],[41,0,1253,35],[46,0,1253,40],[47,0,1253,41],[48,0,1253,42]],[[9,0,1254,5]],[[8,0,1256,4],[14,0,1256,10],[19,0,1256,15],[22,0,1256,18],[26,0,1256,22],[27,0,1256,23],[67,0,1256,63],[68,0,1256,64],[72,0,1256,68],[74,0,1256,70],[94,0,1256,90],[95,0,1256,91],[96,0,1256,92]],[[8,0,1257,4],[14,0,1257,10],[24,0,1257,20],[27,0,1257,23],[32,0,1257,28],[33,0,1257,29],[43,0,1257,39],[44,0,1257,40]],[[8,0,1258,4],[14,0,1258,10],[28,0,1258,24],[31,0,1258,27],[36,0,1258,32],[37,0,1258,33],[51,0,1258,47],[52,0,1258,48]],[[8,0,1260,4],[51,0,1260,47]],[[8,0,1261,4],[13,0,1261,9],[14,0,1261,10],[20,0,1261,16],[21,0,1261,17],[27,0,1261,23],[29,0,1261,25],[39,0,1261,35],[40,0,1261,36],[41,0,1261,37]],[[8,0,1263,4],[13,0,1263,9],[19,0,1263,15],[20,0,1263,16],[36,0,1263,32],[38,0,1263,34],[55,0,1263,51],[56,0,1263,52],[60,0,1263,56],[66,0,1263,62],[67,0,1263,63],[74,0,1263,70],[75,0,1263,71],[89,0,1263,85],[90,0,1263,86],[92,0,1263,88]],[[12,0,1265,6],[16,0,1265,10],[39,0,1265,68],[40,0,1265,69],[41,0,1265,70],[80,0,1265,109]],[[12,0,1266,6],[16,0,1266,10],[24,0,1266,38],[25,0,1266,39]],[[12,0,1268,6],[16,0,1268,10],[36,0,1268,30],[38,0,1268,32]],[[16,0,1269,8],[39,0,1269,31],[42,0,1269,34],[62,0,1269,54],[63,0,1269,55],[67,0,1269,59],[68,0,1269,60],[75,0,1269,67],[76,0,1269,68],[78,0,1269,70],[79,0,1269,71],[86,0,1269,78],[87,0,1269,79],[91,0,1269,83],[96,0,1269,88],[112,0,1269,104],[113,0,1269,105],[115,0,1269,107],[129,0,1269,121],[130,0,1269,122]],[[16,0,1270,8],[24,0,1270,16],[27,0,1270,19],[47,0,1270,39],[48,0,1270,40],[52,0,1270,44],[53,0,1270,45],[60,0,1270,52],[61,0,1270,53],[63,0,1270,55],[64,0,1270,56],[71,0,1270,63],[72,0,1270,64],[76,0,1270,68],[81,0,1270,73],[97,0,1270,89],[98,0,1270,90],[100,0,1270,92],[105,0,1270,97],[106,0,1270,98]],[[13,0,1271,7]],[[12,0,1273,6],[20,0,1273,14],[23,0,1273,17],[31,0,1273,25],[36,0,1273,30],[45,0,1273,39],[46,0,1273,40],[47,0,1273,41],[48,0,1273,42],[56,0,1273,50],[57,0,1273,51],[58,0,1273,52],[59,0,1273,53],[63,0,1273,57],[64,0,1273,58],[76,0,1273,70],[77,0,1273,71],[78,0,1273,72],[109,0,1273,103]],[[12,0,1275,6],[82,0,1275,76]],[[12,0,1276,6],[18,0,1276,12],[31,0,1276,25],[34,0,1276,28],[50,0,1276,44],[51,0,1276,45],[57,0,1276,51],[59,0,1276,53],[75,0,1276,69],[76,0,1276,70],[77,0,1276,71]],[[12,0,1277,6],[18,0,1277,12],[26,0,1277,20],[29,0,1277,23],[44,0,1277,38],[45,0,1277,39],[58,0,1277,52],[60,0,1277,54],[68,0,1277,62],[69,0,1277,63],[70,0,1277,64]],[[12,0,1279,6],[17,0,1279,11],[20,0,1279,14],[24,0,1279,18],[25,0,1279,19],[48,0,1279,42],[49,0,1279,43],[66,0,1279,60],[68,0,1279,62],[76,0,1279,70],[78,0,1279,72],[101,0,1279,95],[103,0,1279,97],[120,0,1279,114],[122,0,1279,116],[127,0,1279,121],[128,0,1279,122],[129,0,1279,123]],[[9,0,1280,5]],[[8,0,1282,4],[15,0,1282,11],[20,0,1282,16],[21,0,1282,17]],[[4,0,1283,2],[5,0,1283,3]],[[4,0,1285,2]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,1298,5]],[[4,0,1299,12],[41,0,1299,49],[42,0,1300,4],[55,0,1300,37],[57,0,1301,4],[69,0,1301,36],[71,0,1302,4],[84,0,1302,25],[86,0,1303,4],[98,0,1303,24],[100,0,1304,4],[116,0,1304,28],[118,0,1305,4],[149,0,1305,60],[151,0,1306,4],[182,0,1306,35],[185,0,1306,38],[189,0,1306,42],[191,0,1307,4],[198,0,1307,11],[201,0,1307,14],[206,0,1307,19]],[[8,0,1309,4],[12,0,1309,8],[29,0,1309,45],[30,0,1309,46]],[[8,0,1310,4],[12,0,1310,8],[28,0,1310,44],[29,0,1310,45]],[[8,0,1311,4],[12,0,1311,8],[19,0,1311,15],[21,0,1311,17]],[[12,0,1312,6],[29,0,1312,23],[32,0,1312,26],[38,0,1312,32],[39,0,1312,33],[45,0,1312,39],[46,0,1312,40],[48,0,1312,42],[50,0,1312,44],[63,0,1312,57],[64,0,1312,58],[65,0,1312,59]],[[12,0,1313,6],[28,0,1313,22],[31,0,1313,25],[37,0,1313,31],[38,0,1313,32],[44,0,1313,38],[45,0,1313,39],[47,0,1313,41],[49,0,1313,43],[61,0,1313,55],[62,0,1313,56],[63,0,1313,57]],[[9,0,1314,5]],[[13,0,1314,11]],[[12,0,1315,6],[29,0,1315,23],[32,0,1315,26],[45,0,1315,39],[46,0,1315,40]],[[12,0,1316,6],[28,0,1316,22],[31,0,1316,25],[43,0,1316,37],[44,0,1316,38]],[[9,0,1317,5]],[[8,0,1319,4],[25,0,1319,21],[26,0,1319,22],[43,0,1319,39],[45,0,1319,41],[61,0,1319,57],[63,0,1319,59],[76,0,1319,72],[78,0,1319,74],[90,0,1319,86],[91,0,1319,87],[92,0,1319,88]],[[8,0,1321,4],[14,0,1321,10],[19,0,1321,15],[22,0,1321,30],[32,0,1321,40],[33,0,1321,41],[37,0,1321,45],[38,0,1321,46],[40,0,1321,48],[41,0,1321,49],[50,0,1321,58],[51,0,1321,59],[52,0,1321,60]],[[8,0,1323,4],[12,0,1323,8],[43,0,1323,39],[48,0,1323,44],[57,0,1323,53],[59,0,1323,55]],[[12,0,1324,6],[18,0,1324,12],[27,0,1324,21],[30,0,1324,24],[46,0,1324,40],[47,0,1324,41],[59,0,1324,53],[60,0,1324,54],[61,0,1324,55]],[[12,0,1325,6],[18,0,1325,12],[30,0,1325,24],[33,0,1325,27],[42,0,1325,36],[43,0,1325,37],[60,0,1325,54],[61,0,1325,55],[64,0,1325,58],[65,0,1325,59]],[[12,0,1327,6],[18,0,1327,12],[22,0,1327,16],[25,0,1327,19],[27,0,1327,20],[30,0,1327,23],[61,0,1327,54],[63,0,1327,56],[72,0,1327,65],[74,0,1327,67],[90,0,1327,83],[92,0,1327,84],[93,0,1327,85]],[[12,0,1329,6],[16,0,1329,10],[17,0,1329,11],[24,0,1329,18],[26,0,1329,20]],[[16,0,1330,8],[29,0,1330,21],[30,0,1330,22],[39,0,1330,31],[41,0,1330,33],[45,0,1330,37],[47,0,1330,39],[51,0,1330,43],[52,0,1330,44],[53,0,1330,45]],[[13,0,1331,7]],[[12,0,1333,6],[16,0,1333,10],[47,0,1333,41],[49,0,1333,43]],[[16,0,1334,8],[22,0,1334,14],[26,0,1334,18],[29,0,1334,21],[33,0,1334,25],[37,0,1334,29],[39,0,1334,31],[40,0,1334,32]],[[16,0,1335,8],[31,0,1335,23],[32,0,1335,24],[36,0,1335,28],[38,0,1335,30],[42,0,1335,34],[44,0,1335,36],[48,0,1335,40],[49,0,1335,41],[50,0,1335,42]],[[16,0,1337,8],[20,0,1337,12],[21,0,1337,13],[28,0,1337,20],[30,0,1337,22]],[[20,0,1338,10],[35,0,1338,25],[36,0,1338,26],[45,0,1338,35],[47,0,1338,37],[51,0,1338,41],[53,0,1338,43],[57,0,1338,47],[58,0,1338,48],[59,0,1338,49]],[[17,0,1339,9]],[[13,0,1340,7]],[[12,0,1341,6],[17,0,1341,11],[18,0,1341,12],[24,0,1341,18],[25,0,1341,19],[37,0,1341,31],[39,0,1341,33],[43,0,1341,37],[44,0,1341,38],[45,0,1341,39]],[[9,0,1342,5]],[[8,0,1344,4],[14,0,1344,10],[39,0,1344,35],[42,0,1344,58],[58,0,1344,74],[59,0,1344,75],[64,0,1344,80],[65,0,1344,81],[77,0,1344,93],[78,0,1344,94],[79,0,1344,95]],[[8,0,1345,4],[12,0,1345,8],[13,0,1345,9],[16,0,1345,12],[28,0,1345,24],[29,0,1345,25]],[[8,0,1346,4],[13,0,1346,9],[19,0,1346,15],[23,0,1346,19],[27,0,1346,23],[52,0,1346,48],[54,0,1346,50]],[[12,0,1347,6],[25,0,1347,19]],[[12,0,1348,6],[17,0,1348,11],[18,0,1348,12],[24,0,1348,18],[25,0,1348,19],[29,0,1348,23],[30,0,1348,24],[47,0,1348,41],[48,0,1348,42],[51,0,1348,45],[53,0,1348,47],[55,0,1348,48],[60,0,1348,53],[62,0,1348,55],[63,0,1348,56],[65,0,1348,57],[66,0,1348,58],[67,0,1348,59]],[[12,0,1350,6],[16,0,1350,10],[17,0,1350,11],[24,0,1350,18],[26,0,1350,20]],[[16,0,1351,8],[20,0,1351,12],[21,0,1351,13],[26,0,1351,18],[29,0,1351,21],[30,0,1351,22],[31,0,1351,23]],[[13,0,1352,7]],[[12,0,1354,6],[13,0,1354,7],[15,0,1354,9],[16,0,1354,10]],[[9,0,1355,5]],[[8,0,1357,4],[14,0,1357,10],[36,0,1357,32],[39,0,1357,55],[56,0,1357,72],[57,0,1357,73],[62,0,1357,78],[63,0,1357,79],[76,0,1357,92],[77,0,1357,93],[78,0,1357,94]],[[8,0,1358,4],[9,0,1358,5],[12,0,1358,8],[25,0,1358,21],[26,0,1358,22]],[[8,0,1359,4],[13,0,1359,9],[19,0,1359,15],[23,0,1359,19],[27,0,1359,23],[49,0,1359,45],[51,0,1359,47]],[[12,0,1360,6],[25,0,1360,19]],[[12,0,1361,6],[17,0,1361,11],[18,0,1361,12],[24,0,1361,18],[25,0,1361,19],[29,0,1361,23],[30,0,1361,24],[47,0,1361,41],[48,0,1361,42],[51,0,1361,45],[53,0,1361,47],[55,0,1361,48],[60,0,1361,53],[62,0,1361,55],[63,0,1361,56],[65,0,1361,57],[66,0,1361,58],[67,0,1361,59]],[[12,0,1363,6],[16,0,1363,10],[17,0,1363,11],[24,0,1363,18],[26,0,1363,20]],[[16,0,1364,8],[20,0,1364,12],[21,0,1364,13],[26,0,1364,18],[29,0,1364,21],[30,0,1364,22],[31,0,1364,23]],[[13,0,1365,7]],[[12,0,1367,6],[13,0,1367,7],[15,0,1367,9],[16,0,1367,10]],[[9,0,1368,5]],[[8,0,1370,4],[15,0,1370,11],[20,0,1370,16],[21,0,1370,17]],[[4,0,1371,2],[5,0,1371,3]],[[4,0,1374,2]],[],[],[],[[7,0,1378,5]],[[4,0,1379,12],[25,0,1379,33],[26,0,1379,34],[33,0,1379,62]],[[8,0,1381,4],[14,0,1381,10],[19,0,1381,15],[22,0,1381,18],[26,0,1381,22],[27,0,1381,23],[55,0,1381,51],[56,0,1381,52],[63,0,1381,59],[64,0,1381,60],[65,0,1381,61]],[[8,0,1383,4],[15,0,1383,11],[19,0,1383,15],[20,0,1383,16],[32,0,1383,28],[33,0,1383,29],[38,0,1383,34],[39,0,1383,35],[40,0,1383,36]],[[4,0,1384,2],[5,0,1384,3]],[[4,0,1386,12],[32,0,1386,40],[33,0,1386,41],[40,0,1386,69],[42,0,1386,71],[50,0,1386,91],[60,0,1386,101],[61,0,1386,102],[65,0,1386,106],[66,0,1386,107],[68,0,1386,109],[69,0,1386,110],[78,0,1386,119],[79,0,1386,120]],[[8,0,1388,4],[15,0,1388,11],[16,0,1388,12],[23,0,1388,19],[24,0,1388,20],[25,0,1388,21],[31,0,1388,27],[33,0,1388,29],[35,0,1388,31]],[[12,0,1389,6],[17,0,1389,11],[18,0,1389,12],[24,0,1389,18],[25,0,1389,19],[31,0,1389,25],[32,0,1389,26],[33,0,1389,27]],[[8,0,1390,4],[9,0,1390,5],[10,0,1390,6],[11,0,1390,7]],[[8,0,1392,4],[15,0,1392,11],[20,0,1392,16],[21,0,1392,17]],[[4,0,1393,2],[5,0,1393,3]],[[4,0,1395,2]],[],[],[],[],[],[[7,0,1401,5]],[[4,0,1402,12],[35,0,1402,43],[36,0,1402,47],[42,0,1402,71],[44,0,1403,47],[67,0,1403,93],[69,0,1403,95],[71,0,1404,47],[98,0,1404,84],[100,0,1404,86]],[[8,0,1406,4],[95,0,1406,91]],[[8,0,1407,4],[14,0,1407,10],[32,0,1407,28],[35,0,1407,41],[36,0,1407,42],[55,0,1407,61],[56,0,1407,62],[57,0,1407,63],[63,0,1407,69],[64,0,1407,70],[88,0,1407,94],[89,0,1407,95],[90,0,1407,96]],[[8,0,1409,4],[34,0,1409,30]],[[8,0,1410,4],[13,0,1410,9],[19,0,1410,15],[36,0,1410,32],[40,0,1410,36],[58,0,1410,54],[60,0,1410,56]],[[12,0,1411,6],[19,0,1411,13],[25,0,1411,19],[26,0,1411,20],[43,0,1411,37],[44,0,1411,38],[45,0,1411,39]],[[9,0,1412,5]],[[8,0,1414,4],[28,0,1414,24],[29,0,1414,25],[36,0,1414,32],[37,0,1414,33],[40,0,1414,36],[41,0,1414,37],[43,0,1414,39]],[[12,0,1415,6],[16,0,1415,10],[21,0,1415,15],[22,0,1415,16],[29,0,1415,23],[30,0,1415,24],[36,0,1415,30],[37,0,1415,31],[40,0,1415,34],[41,0,1415,35],[45,0,1415,39],[46,0,1415,40],[47,0,1415,41],[49,0,1415,43],[51,0,1415,45],[104,0,1415,98]],[[16,0,1417,8],[22,0,1417,14],[26,0,1417,18],[29,0,1417,36],[35,0,1417,42],[36,0,1417,43],[39,0,1417,46],[40,0,1417,47],[44,0,1417,51],[45,0,1417,52],[46,0,1417,53]],[[16,0,1418,8],[20,0,1418,12],[21,0,1418,13],[28,0,1418,20],[29,0,1418,21],[30,0,1418,22],[31,0,1418,23],[33,0,1418,25],[34,0,1418,26],[36,0,1418,28],[38,0,1418,30]],[[20,0,1420,10],[24,0,1420,14],[27,0,1420,17],[28,0,1420,18],[42,0,1420,32],[44,0,1420,34]],[[24,0,1421,12],[28,0,1421,16],[29,0,1421,17],[60,0,1421,48],[61,0,1421,49],[62,0,1421,50],[64,0,1421,52],[67,0,1421,55],[68,0,1421,56],[82,0,1421,70],[84,0,1421,72],[108,0,1421,96],[109,0,1421,97],[110,0,1421,98]],[[21,0,1422,11]],[[25,0,1422,17]],[[24,0,1423,12],[30,0,1423,18]],[[24,0,1424,12],[29,0,1424,17],[35,0,1424,23],[52,0,1424,40],[56,0,1424,44],[74,0,1424,62],[76,0,1424,64]],[[28,0,1425,14],[35,0,1425,21],[41,0,1425,27],[42,0,1425,28],[45,0,1425,31],[46,0,1425,32],[50,0,1425,36],[51,0,1425,37],[52,0,1425,38],[53,0,1425,39],[54,0,1425,40],[55,0,1425,41],[72,0,1425,58],[73,0,1425,59],[74,0,1425,60]],[[25,0,1426,13]],[[21,0,1427,11]],[[16,0,1428,8],[17,0,1428,9],[18,0,1428,10],[19,0,1428,11]],[[13,0,1430,7]],[[17,0,1430,13],[19,0,1430,15],[52,0,1430,48]],[[16,0,1432,8],[20,0,1432,12],[23,0,1432,15],[24,0,1432,16],[38,0,1432,30],[40,0,1432,32]],[[20,0,1433,10],[24,0,1433,14],[25,0,1433,15],[56,0,1433,46],[57,0,1433,47],[63,0,1433,53],[64,0,1433,54],[67,0,1433,57],[68,0,1433,58],[72,0,1433,62],[73,0,1433,63],[75,0,1433,65],[78,0,1433,68],[79,0,1433,69],[93,0,1433,83],[95,0,1433,85],[119,0,1433,109],[120,0,1433,110],[121,0,1433,111]],[[17,0,1434,9]],[[21,0,1434,15]],[[20,0,1435,10],[25,0,1435,15],[31,0,1435,21],[48,0,1435,38],[52,0,1435,42],[70,0,1435,60],[72,0,1435,62]],[[24,0,1436,12],[31,0,1436,19],[37,0,1436,25],[38,0,1436,26],[41,0,1436,29],[42,0,1436,30],[46,0,1436,34],[47,0,1436,35],[48,0,1436,36],[65,0,1436,53],[66,0,1436,54],[67,0,1436,55]],[[21,0,1437,11]],[[17,0,1438,9]],[[13,0,1440,7]],[[8,0,1441,4],[9,0,1441,5],[10,0,1441,6],[11,0,1441,7]],[[8,0,1443,4],[15,0,1443,11],[21,0,1443,17],[22,0,1443,18]],[[4,0,1445,2],[5,0,1445,3]],[[4,0,1447,2]],[],[],[],[],[[7,0,1452,5]],[[4,0,1453,12],[30,0,1453,38],[31,0,1453,39],[34,0,1453,83],[36,0,1454,39],[59,0,1454,84],[61,0,1454,86]],[[8,0,1457,4],[12,0,1457,8],[15,0,1457,11],[27,0,1457,23],[44,0,1457,40],[46,0,1457,42]],[[12,0,1458,6],[19,0,1458,13],[23,0,1458,17],[24,0,1458,18],[56,0,1458,50],[57,0,1458,51],[60,0,1458,54],[62,0,1458,56],[82,0,1458,76],[83,0,1458,77],[84,0,1458,78]],[[9,0,1459,5]],[[13,0,1459,11],[15,0,1459,13],[37,0,1459,35]],[[12,0,1460,6],[19,0,1460,13],[23,0,1460,17],[24,0,1460,18],[63,0,1460,57],[64,0,1460,58],[67,0,1460,61],[69,0,1460,63],[89,0,1460,83],[90,0,1460,84],[91,0,1460,85]],[[9,0,1461,5]],[[4,0,1462,2],[5,0,1462,3]],[[4,0,1464,12],[36,0,1464,44],[37,0,1464,45],[43,0,1464,70],[45,0,1465,45],[68,0,1465,90],[70,0,1465,92]],[[8,0,1468,4],[15,0,1468,11],[19,0,1468,15],[20,0,1468,16],[33,0,1468,29],[34,0,1468,30],[40,0,1468,36],[42,0,1468,38],[62,0,1468,58],[63,0,1468,59],[64,0,1468,60],[68,0,1468,64],[69,0,1469,6],[73,0,1469,10],[74,0,1469,11],[75,0,1469,12],[76,0,1469,13],[78,0,1470,6],[81,0,1470,9],[82,0,1470,10],[86,0,1470,14],[87,0,1470,15],[89,0,1470,17],[90,0,1470,18],[94,0,1470,22],[95,0,1470,23],[130,0,1470,58],[131,0,1470,59],[135,0,1470,63],[137,0,1470,65],[157,0,1470,85],[158,0,1470,86],[159,0,1470,87]],[[8,0,1471,6],[50,0,1471,48]],[[8,0,1472,6],[11,0,1472,9],[12,0,1472,10],[13,0,1472,11],[21,0,1472,29],[23,0,1472,31],[25,0,1472,33]],[[12,0,1473,8],[19,0,1473,15],[27,0,1473,23]],[[17,0,1474,11],[20,0,1474,14],[21,0,1474,15],[25,0,1474,19],[26,0,1474,20],[28,0,1474,22],[29,0,1474,23],[43,0,1474,37],[44,0,1474,38],[48,0,1474,42],[50,0,1474,44],[54,0,1474,48],[55,0,1474,49],[57,0,1474,51],[58,0,1474,52],[67,0,1474,61],[68,0,1474,83],[69,0,1474,84],[70,0,1474,85]],[[8,0,1475,6],[9,0,1475,7],[10,0,1475,8],[11,0,1477,5],[12,0,1477,6]],[[4,0,1478,2],[5,0,1478,3]],[[4,0,1480,12],[43,0,1480,51],[44,0,1480,52],[57,0,1480,86],[59,0,1481,52],[82,0,1481,97],[84,0,1481,99]],[[8,0,1484,4],[15,0,1484,11],[19,0,1484,15],[20,0,1484,16],[46,0,1484,42],[47,0,1484,43],[60,0,1484,56],[61,0,1484,57],[62,0,1484,58],[66,0,1484,62]],[[8,0,1485,6],[21,0,1485,19]],[[8,0,1486,6],[12,0,1486,10],[13,0,1486,11],[14,0,1486,12],[15,0,1486,13],[17,0,1487,6],[25,0,1487,14],[26,0,1487,15],[27,0,1487,16],[32,0,1487,37],[34,0,1487,39],[36,0,1487,41]],[[12,0,1488,8],[16,0,1488,12],[28,0,1488,48],[29,0,1488,49]],[[12,0,1489,8],[24,0,1489,20],[27,0,1489,23],[32,0,1489,28],[33,0,1489,29],[36,0,1489,32],[37,0,1489,33],[41,0,1489,37],[42,0,1489,38],[44,0,1489,40],[45,0,1489,41],[49,0,1489,45],[50,0,1489,46],[63,0,1489,59],[64,0,1489,60],[68,0,1489,64],[69,0,1489,65],[86,0,1489,82],[87,0,1489,83],[90,0,1489,86],[92,0,1489,88],[112,0,1489,108],[113,0,1489,109],[114,0,1489,110],[115,0,1489,111]],[[12,0,1490,8],[19,0,1490,15],[32,0,1490,28],[33,0,1490,29],[45,0,1490,41],[46,0,1490,42],[47,0,1490,43]],[[8,0,1491,6],[9,0,1491,7],[10,0,1491,8],[12,0,1492,6],[15,0,1492,9],[16,0,1492,10],[17,0,1492,11],[22,0,1492,32],[24,0,1492,34],[26,0,1492,36]],[[12,0,1494,8],[16,0,1494,12],[21,0,1494,17],[24,0,1494,30],[26,0,1494,32],[27,0,1494,33]],[[12,0,1496,8],[17,0,1496,13],[18,0,1496,14],[25,0,1496,21],[26,0,1496,22],[30,0,1496,26],[31,0,1496,27],[33,0,1496,29]],[[16,0,1497,10],[21,0,1497,15],[24,0,1497,18],[29,0,1497,23],[30,0,1497,24],[36,0,1497,30],[37,0,1497,31],[41,0,1497,35],[42,0,1497,36],[77,0,1497,71],[78,0,1497,72],[82,0,1497,76],[84,0,1497,78],[104,0,1497,98],[105,0,1497,99],[106,0,1497,100],[107,0,1497,101]],[[12,0,1498,8],[13,0,1498,9],[14,0,1498,10],[15,0,1498,11]],[[12,0,1499,8],[19,0,1499,15],[24,0,1499,20],[25,0,1499,21]],[[8,0,1500,6],[9,0,1500,7],[10,0,1500,8],[12,0,1501,6],[15,0,1501,9],[16,0,1501,10],[17,0,1501,11],[25,0,1501,29],[27,0,1501,31],[29,0,1501,33]],[[12,0,1502,8],[19,0,1502,15],[27,0,1502,23]],[[17,0,1503,11],[20,0,1503,14],[21,0,1503,15],[25,0,1503,19],[26,0,1503,20],[28,0,1503,22],[29,0,1503,23],[43,0,1503,37],[44,0,1503,38],[48,0,1503,42],[50,0,1503,44],[54,0,1503,48],[55,0,1503,49],[57,0,1503,51],[58,0,1503,52],[67,0,1503,61],[68,0,1503,83],[69,0,1503,84],[70,0,1503,85]],[[8,0,1504,6],[9,0,1504,7],[10,0,1504,8],[11,0,1505,5],[12,0,1505,6]],[[4,0,1506,2],[5,0,1506,3]],[[4,0,1508,2]],[],[],[],[],[],[],[[7,0,1515,5]],[[4,0,1516,12],[33,0,1516,41],[34,0,1517,4],[38,0,1517,21],[40,0,1518,4],[63,0,1518,49],[65,0,1518,51]],[[8,0,1520,4],[14,0,1520,10],[19,0,1520,15],[22,0,1520,18],[26,0,1520,22],[27,0,1520,23],[62,0,1520,58],[63,0,1520,59],[67,0,1520,63],[69,0,1520,65],[89,0,1520,85],[90,0,1520,86],[91,0,1520,87]],[[8,0,1521,4],[15,0,1521,11],[20,0,1521,16],[21,0,1521,17],[24,0,1521,20],[25,0,1521,21],[29,0,1521,25],[30,0,1521,26],[32,0,1521,28],[33,0,1521,29],[47,0,1521,43],[48,0,1521,44],[52,0,1521,48],[54,0,1521,50],[58,0,1521,54],[59,0,1521,55],[61,0,1521,57],[62,0,1521,58],[71,0,1521,67],[72,0,1521,89],[73,0,1521,90],[74,0,1521,91]],[[4,0,1522,2],[5,0,1522,3]],[[4,0,1524,2]],[],[[7,0,1526,5]],[[4,0,1527,12],[39,0,1527,47],[40,0,1527,51],[44,0,1527,68],[46,0,1528,51],[69,0,1528,96],[71,0,1528,98]],[[8,0,1530,4],[12,0,1530,8],[32,0,1530,28],[36,0,1530,32],[40,0,1530,36],[44,0,1530,40],[64,0,1530,60],[65,0,1530,61],[71,0,1530,67],[76,0,1530,72],[77,0,1530,73],[79,0,1530,75]],[[12,0,1531,6],[19,0,1531,13],[20,0,1531,14],[24,0,1531,18],[25,0,1531,19],[42,0,1531,36],[43,0,1531,37],[47,0,1531,41],[48,0,1531,42],[49,0,1531,43]],[[9,0,1532,5]],[[8,0,1533,4],[12,0,1533,8],[20,0,1533,16],[23,0,1533,29],[25,0,1533,31],[26,0,1533,32]],[[8,0,1534,4],[16,0,1534,12],[17,0,1534,13],[21,0,1534,17],[22,0,1534,18],[26,0,1534,22],[27,0,1534,23],[44,0,1534,40],[45,0,1534,41],[49,0,1534,45],[50,0,1534,46],[51,0,1534,47]],[[8,0,1536,4],[28,0,1536,24],[29,0,1536,25],[36,0,1536,32],[37,0,1536,33],[40,0,1536,36],[41,0,1536,37],[43,0,1536,39]],[[12,0,1537,6],[16,0,1537,10],[21,0,1537,15],[22,0,1537,16],[29,0,1537,23],[30,0,1537,25],[34,0,1537,46],[35,0,1537,47],[38,0,1537,50],[39,0,1537,51],[43,0,1537,55],[44,0,1537,56],[45,0,1537,57],[49,0,1537,61],[50,0,1537,62],[53,0,1537,65],[54,0,1537,66],[59,0,1537,71],[61,0,1537,73]],[[16,0,1538,8],[89,0,1538,81]],[[16,0,1540,8],[22,0,1540,14],[27,0,1540,19],[30,0,1540,39],[34,0,1540,60],[35,0,1540,61],[38,0,1540,64],[39,0,1540,65],[43,0,1540,69],[44,0,1540,70],[45,0,1540,71]],[[16,0,1541,8],[21,0,1541,13],[22,0,1541,14],[29,0,1541,21],[30,0,1541,22],[37,0,1541,29],[38,0,1541,30],[40,0,1541,32]],[[20,0,1543,10],[24,0,1543,14],[27,0,1543,17],[28,0,1543,18],[42,0,1543,32],[44,0,1543,34]],[[24,0,1544,12],[32,0,1544,20],[35,0,1544,23],[43,0,1544,31],[44,0,1544,32],[50,0,1544,38],[51,0,1544,39],[55,0,1544,43],[56,0,1544,44],[91,0,1544,79],[92,0,1544,80],[99,0,1544,87],[101,0,1544,89],[104,0,1544,92],[105,0,1544,93],[119,0,1544,107],[120,0,1544,108],[121,0,1544,109],[122,0,1544,110]],[[21,0,1545,11]],[[25,0,1545,17]],[[24,0,1546,12],[32,0,1546,20],[33,0,1546,21],[37,0,1546,25],[38,0,1546,26],[45,0,1546,33],[46,0,1546,34],[63,0,1546,51],[64,0,1546,52],[68,0,1546,56],[69,0,1546,57],[70,0,1546,58]],[[21,0,1547,11]],[[16,0,1548,8],[17,0,1548,9],[18,0,1548,10],[19,0,1548,11]],[[13,0,1550,7]],[[17,0,1550,13],[19,0,1550,15],[52,0,1550,48]],[[16,0,1552,8],[20,0,1552,12],[23,0,1552,15],[24,0,1552,16],[38,0,1552,30],[40,0,1552,32]],[[20,0,1553,10],[28,0,1553,18],[31,0,1553,21],[39,0,1553,29],[40,0,1553,30],[46,0,1553,36],[47,0,1553,37],[51,0,1553,41],[52,0,1553,42],[87,0,1553,77],[88,0,1553,78],[92,0,1553,82],[94,0,1553,84],[97,0,1553,87],[98,0,1553,88],[112,0,1553,102],[113,0,1553,103],[114,0,1553,104],[115,0,1553,105]],[[17,0,1554,9]],[[21,0,1554,15]],[[20,0,1555,10],[26,0,1555,16],[33,0,1555,23],[36,0,1555,28],[40,0,1555,49],[41,0,1555,50],[44,0,1555,53],[45,0,1555,54],[49,0,1555,58],[50,0,1555,76],[51,0,1555,77]],[[20,0,1556,10],[24,0,1556,14],[31,0,1556,21],[35,0,1556,25],[39,0,1556,29],[43,0,1556,33],[49,0,1556,39],[53,0,1556,43],[60,0,1556,50],[61,0,1556,51],[78,0,1556,68],[80,0,1556,70]],[[24,0,1557,12],[32,0,1557,20],[33,0,1557,21],[37,0,1557,25],[38,0,1557,26],[45,0,1557,33],[46,0,1557,34],[63,0,1557,51],[64,0,1557,52],[68,0,1557,56],[69,0,1557,57],[70,0,1557,58]],[[21,0,1558,11]],[[20,0,1559,10],[77,0,1559,67]],[[17,0,1560,9]],[[13,0,1562,7]],[[8,0,1563,4],[9,0,1563,5],[10,0,1563,6],[11,0,1563,7]],[[8,0,1565,4],[15,0,1565,11],[23,0,1565,19],[24,0,1565,20]],[[4,0,1566,2],[5,0,1566,3]],[[4,0,1568,2]],[],[],[[7,0,1571,5]],[[4,0,1572,12],[44,0,1572,52],[45,0,1573,4],[49,0,1573,11],[51,0,1574,4],[74,0,1574,50],[76,0,1574,52]],[[8,0,1576,4],[61,0,1576,57]],[[8,0,1577,4],[12,0,1577,8],[22,0,1577,18],[25,0,1577,48],[27,0,1577,50],[28,0,1577,51]],[[8,0,1578,4],[14,0,1578,10],[28,0,1578,24],[31,0,1578,54],[33,0,1578,56],[34,0,1578,57]],[[8,0,1580,4],[116,0,1580,112]],[[8,0,1582,4],[30,0,1582,26]],[[8,0,1583,4],[13,0,1583,9],[19,0,1583,15],[20,0,1583,16],[23,0,1583,19],[25,0,1583,21],[30,0,1583,26],[31,0,1583,27],[35,0,1583,31],[41,0,1583,37],[42,0,1583,38],[49,0,1583,45],[50,0,1583,46],[54,0,1583,50],[55,0,1583,51],[57,0,1583,53]],[[12,0,1584,6],[39,0,1584,33]],[[12,0,1585,6],[16,0,1585,10],[36,0,1585,30],[40,0,1585,34],[60,0,1585,54],[61,0,1585,55],[67,0,1585,61],[70,0,1585,64],[71,0,1585,65],[73,0,1585,67]],[[16,0,1586,8],[22,0,1586,14],[41,0,1586,33],[44,0,1586,69],[64,0,1586,89],[65,0,1586,90],[69,0,1586,94],[70,0,1586,95],[77,0,1586,102],[78,0,1586,103],[80,0,1586,105],[81,0,1586,106],[88,0,1586,113],[89,0,1586,114],[93,0,1586,118],[98,0,1586,123],[101,0,1586,126],[102,0,1586,127],[103,0,1586,128]],[[16,0,1588,8],[20,0,1588,12],[39,0,1588,31],[41,0,1588,33]],[[20,0,1589,10],[34,0,1589,24],[35,0,1589,25],[38,0,1589,28],[39,0,1589,29],[42,0,1589,32],[47,0,1589,37],[48,0,1589,38]],[[17,0,1590,9]],[[21,0,1590,15]],[[20,0,1591,10],[30,0,1591,20],[31,0,1591,21],[34,0,1591,24],[35,0,1591,25],[38,0,1591,28],[43,0,1591,33],[44,0,1591,34]],[[17,0,1592,9]],[[13,0,1593,7]],[[17,0,1593,13]],[[16,0,1594,8],[26,0,1594,18],[29,0,1594,21],[33,0,1594,25],[34,0,1594,26]],[[13,0,1595,7]],[[9,0,1596,5]],[[8,0,1599,4],[15,0,1599,11]],[[12,0,1600,6],[22,0,1600,16]],[[12,0,1601,6],[26,0,1601,20]],[[9,0,1602,37],[10,0,1602,38]],[[4,0,1603,2],[5,0,1603,3]],[[4,0,1605,2]],[],[],[],[],[],[],[[7,0,1612,5]],[[4,0,1613,12],[16,0,1613,24],[17,0,1613,25],[22,0,1613,42]],[[8,0,1614,4],[15,0,1614,11],[19,0,1614,15],[20,0,1614,16],[25,0,1614,21],[26,0,1614,22],[32,0,1614,28],[34,0,1614,30],[35,0,1614,31],[36,0,1614,32],[40,0,1614,36],[41,0,1615,6],[45,0,1615,10],[46,0,1615,11],[47,0,1615,12],[48,0,1615,13],[49,0,1616,5],[50,0,1616,6]],[[4,0,1617,2],[5,0,1617,3]],[[1,0,1618,1]],[[0,0,1621,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,1634,3]],[[0,0,1635,0],[6,0,1635,6],[13,0,1635,13],[27,0,1635,27]],[[4,0,1639,2],[16,0,1639,21],[19,0,1639,48]],[[8,0,1639,21],[16,0,1639,24],[19,0,1639,21],[22,0,1639,24],[23,0,1639,48]],[[8,0,1637,9],[29,0,1637,25],[32,0,1637,47],[34,0,1637,49],[35,0,1637,50]],[[4,0,1640,2],[5,0,1640,3]],[[4,0,1642,2],[55,0,1642,53]],[[4,0,1643,2],[10,0,1643,8],[11,0,1643,9],[19,0,1643,17],[20,0,1643,21],[29,0,1643,41],[31,0,1643,43],[35,0,1643,55]],[[8,0,1644,4],[14,0,1644,10],[17,0,1644,13],[20,0,1644,16],[30,0,1644,26],[31,0,1644,27],[40,0,1644,36],[42,0,1644,38],[46,0,1644,42],[47,0,1644,69],[48,0,1644,70]],[[8,0,1645,4],[15,0,1645,11],[19,0,1645,15],[23,0,1645,19],[24,0,1645,20],[27,0,1645,23],[28,0,1645,24],[29,0,1645,25]],[[4,0,1646,2],[5,0,1646,3]],[[4,0,1648,2],[59,0,1648,57]],[[4,0,1649,2],[8,0,1649,6],[13,0,1649,11]],[[8,0,1650,4],[15,0,1650,11],[20,0,1650,16],[21,0,1650,17],[25,0,1650,21],[26,0,1650,22],[29,0,1650,25],[31,0,1650,27],[34,0,1650,30],[38,0,1650,34],[39,0,1650,35],[55,0,1650,51],[56,0,1650,52],[57,0,1650,53]],[[4,0,1651,2],[5,0,1651,3]],[[4,0,1653,2],[90,0,1653,88]],[[4,0,1654,2],[12,0,1654,10]],[[8,0,1655,4],[15,0,1655,11],[19,0,1655,15],[20,0,1655,16],[27,0,1655,23],[28,0,1655,27],[32,0,1655,31],[33,0,1655,32],[38,0,1655,37],[39,0,1655,38],[40,0,1655,39],[41,0,1655,40]],[[4,0,1656,2],[5,0,1656,3]],[[4,0,1658,2],[9,0,1658,7],[10,0,1658,8],[19,0,1658,37],[21,0,1658,39],[26,0,1658,59],[28,0,1658,61],[33,0,1658,75]],[[8,0,1659,4],[12,0,1659,8],[13,0,1659,9],[29,0,1659,25],[30,0,1659,26],[34,0,1659,30],[35,0,1659,31],[40,0,1659,36],[41,0,1659,37],[50,0,1659,46],[52,0,1659,48],[57,0,1659,53],[59,0,1659,55],[64,0,1659,60],[65,0,1659,61],[66,0,1659,62],[67,0,1659,63]],[[8,0,1660,4],[15,0,1660,11],[19,0,1660,15],[20,0,1660,16]],[[4,0,1661,2],[5,0,1661,3]],[[4,0,1663,2],[11,0,1663,9],[12,0,1663,10],[21,0,1663,39],[23,0,1663,41],[35,0,1663,72]],[[8,0,1664,4],[12,0,1664,8],[13,0,1664,9],[29,0,1664,25],[30,0,1664,26],[34,0,1664,30],[35,0,1664,31],[42,0,1664,38],[43,0,1664,39],[52,0,1664,48],[54,0,1664,50],[66,0,1664,62],[67,0,1664,63],[68,0,1664,64],[69,0,1664,65]],[[8,0,1665,4],[15,0,1665,11],[19,0,1665,15],[20,0,1665,16]],[[4,0,1666,2],[5,0,1666,3]],[[4,0,1668,2],[9,0,1668,7],[10,0,1668,8],[16,0,1668,22]],[[8,0,1669,4],[12,0,1669,8],[13,0,1669,9],[29,0,1669,25],[30,0,1669,26],[34,0,1669,30],[35,0,1669,31],[40,0,1669,36],[41,0,1669,37],[47,0,1669,43],[48,0,1669,44],[49,0,1669,45],[50,0,1669,46]],[[8,0,1670,4],[15,0,1670,11],[19,0,1670,15],[20,0,1670,16]],[[4,0,1671,2],[5,0,1671,3]],[[4,0,1673,2],[15,0,1673,13],[16,0,1673,14],[22,0,1673,28]],[[8,0,1674,4],[12,0,1674,8],[13,0,1674,9],[29,0,1674,25],[30,0,1674,26],[34,0,1674,30],[35,0,1674,31],[46,0,1674,42],[47,0,1674,43],[53,0,1674,49],[54,0,1674,50],[55,0,1674,51],[56,0,1674,52]],[[8,0,1675,4],[15,0,1675,11],[19,0,1675,15],[20,0,1675,16]],[[4,0,1676,2],[5,0,1676,3]],[[4,0,1681,2],[11,0,1681,9],[12,0,1681,10],[20,0,1681,46],[22,0,1681,48],[25,0,1681,51],[36,0,1681,73]],[[8,0,1682,4],[12,0,1682,8],[20,0,1682,16],[22,0,1682,18]],[[12,0,1683,6],[16,0,1683,10],[17,0,1683,11],[33,0,1683,27],[34,0,1683,28],[38,0,1683,32],[39,0,1683,33],[46,0,1683,40],[47,0,1683,41],[55,0,1683,49],[56,0,1683,50],[57,0,1683,51],[58,0,1683,52]],[[9,0,1684,5]],[[13,0,1684,11],[17,0,1684,15],[28,0,1684,26],[30,0,1684,28]],[[12,0,1685,6],[16,0,1685,10],[17,0,1685,11],[33,0,1685,27],[34,0,1685,28],[38,0,1685,32],[39,0,1685,33],[46,0,1685,40],[47,0,1685,41],[50,0,1685,44],[61,0,1685,55],[62,0,1685,56],[63,0,1685,57],[64,0,1685,58]],[[9,0,1686,5]],[[8,0,1687,4],[15,0,1687,11],[19,0,1687,15],[20,0,1687,16]],[[4,0,1688,2],[5,0,1688,3]],[[4,0,1693,2],[14,0,1693,12],[15,0,1693,13],[23,0,1693,49],[25,0,1693,51],[28,0,1693,54],[39,0,1693,76]],[[8,0,1694,4],[12,0,1694,8],[20,0,1694,16],[22,0,1694,18]],[[12,0,1695,6],[16,0,1695,10],[17,0,1695,11],[33,0,1695,27],[34,0,1695,28],[38,0,1695,32],[39,0,1695,33],[49,0,1695,43],[50,0,1695,44],[58,0,1695,52],[59,0,1695,53],[60,0,1695,54],[61,0,1695,55]],[[9,0,1696,5]],[[13,0,1696,11],[17,0,1696,15],[28,0,1696,26],[30,0,1696,28]],[[12,0,1697,6],[16,0,1697,10],[17,0,1697,11],[33,0,1697,27],[34,0,1697,28],[38,0,1697,32],[39,0,1697,33],[49,0,1697,43],[50,0,1697,44],[53,0,1697,47],[64,0,1697,58],[65,0,1697,59],[66,0,1697,60],[67,0,1697,61]],[[9,0,1698,5]],[[8,0,1699,4],[15,0,1699,11],[19,0,1699,15],[20,0,1699,16]],[[4,0,1700,2],[5,0,1700,3]],[[4,0,1705,2],[9,0,1705,7],[10,0,1705,8],[18,0,1705,44],[20,0,1705,46],[23,0,1705,49],[34,0,1705,71]],[[8,0,1706,4],[12,0,1706,8],[20,0,1706,16],[22,0,1706,18]],[[12,0,1707,6],[16,0,1707,10],[17,0,1707,11],[33,0,1707,27],[34,0,1707,28],[38,0,1707,32],[39,0,1707,33],[44,0,1707,38],[45,0,1707,39],[53,0,1707,47],[54,0,1707,48],[55,0,1707,49],[56,0,1707,50]],[[9,0,1708,5]],[[13,0,1708,11],[17,0,1708,15],[28,0,1708,26],[30,0,1708,28]],[[12,0,1709,6],[16,0,1709,10],[17,0,1709,11],[33,0,1709,27],[34,0,1709,28],[38,0,1709,32],[39,0,1709,33],[44,0,1709,38],[45,0,1709,39],[48,0,1709,42],[59,0,1709,53],[60,0,1709,54],[61,0,1709,55],[62,0,1709,56]],[[9,0,1710,5]],[[8,0,1711,4],[15,0,1711,11],[19,0,1711,15],[20,0,1711,16]],[[4,0,1712,2],[5,0,1712,3]],[[4,0,1717,2],[13,0,1717,11],[14,0,1717,12],[22,0,1717,48],[24,0,1717,50],[27,0,1717,53],[38,0,1717,75]],[[8,0,1718,4],[12,0,1718,8],[20,0,1718,16],[22,0,1718,18]],[[12,0,1719,6],[16,0,1719,10],[17,0,1719,11],[33,0,1719,27],[34,0,1719,28],[38,0,1719,32],[39,0,1719,33],[48,0,1719,42],[49,0,1719,43],[57,0,1719,51],[58,0,1719,52],[59,0,1719,53],[60,0,1719,54]],[[9,0,1720,5]],[[13,0,1720,11],[17,0,1720,15],[28,0,1720,26],[30,0,1720,28]],[[12,0,1721,6],[16,0,1721,10],[17,0,1721,11],[33,0,1721,27],[34,0,1721,28],[38,0,1721,32],[39,0,1721,33],[48,0,1721,42],[49,0,1721,43],[52,0,1721,46],[63,0,1721,57],[64,0,1721,58],[65,0,1721,59],[66,0,1721,60]],[[9,0,1722,5]],[[8,0,1723,4],[15,0,1723,11],[19,0,1723,15],[20,0,1723,16]],[[4,0,1724,2],[5,0,1724,3]],[[1,0,1726,1]]],"sourcesContent":["import {combineLatest, forkJoin, from, Observable, of} from 'rxjs';\r\n\r\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\r\nimport {\r\n  collection,\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  endAt,\r\n  endBefore,\r\n  FieldPath,\r\n  Firestore,\r\n  getDocs,\r\n  limit,\r\n  limitToLast,\r\n  orderBy,\r\n  OrderByDirection,\r\n  query,\r\n  Query,\r\n  QueryConstraint,\r\n  QuerySnapshot,\r\n  startAfter,\r\n  startAt,\r\n  where,\r\n  WhereFilterOp,\r\n  writeBatch,\r\n  WriteBatch\r\n} from 'firebase/firestore';\r\n\r\nimport {\r\n  addCreatedDate,\r\n  addDataToItem,\r\n  addModifiedDate,\r\n  convertTimestampToDate,\r\n  getDocRefWithId,\r\n  getRefFromPath,\r\n  getSubCollection\r\n} from './helpers';\r\nimport {SubCollectionQuery} from './sub-collection-query';\r\nimport {BaseFirestoreWrapper, FirestoreErrorExt} from './interfaces';\r\nimport {FireItem, FirestoreItem, FirestoreMetadata} from './models/firestoreItem';\r\nimport {SubCollectionWriter} from './sub-collection-writer';\r\nimport {moveItemInArray, transferArrayItem} from './drag-utils';\r\n\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport enum DocNotExistAction {\r\n  /** returns a null object */\r\n  RETURN_NULL,\r\n\r\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n  RETURN_ALL_BUT_DATA,\r\n\r\n  /** do not return at all until it does exist */\r\n  FILTER,\r\n\r\n  /** return doc not found error 'doc_not_found' */\r\n  THROW_DOC_NOT_FOUND,\r\n}\r\n\r\n/** Used internally */\r\ninterface CurrentDocSubCollectionSplit {\r\n  /** contains the document that is considered the current */\r\n  currentDoc: FireItem<{}>;\r\n  /** sub collections of current document */\r\n  subCollections: { [index: string]: any };\r\n}\r\n\r\n\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n\r\n  /**\r\n   * Constructor for AngularFirestoreWrapper\r\n   *\r\n   * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n   * @param defaultDocId The default name given to a subCollection document when no name is given\r\n   */\r\n  constructor(private fs: BaseFirestoreWrapper, public defaultDocId: string = 'data') {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return this.fs.firestore;\r\n  }\r\n\r\n  /* ----------  LISTEN -------------- */\r\n\r\n  /**\r\n   *\r\n   * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n   *\r\n   * Triggers for any change in any document that is listened to.\r\n   *\r\n   *\r\n   * E.x:\r\n   *      const subCollectionQueries: SubCollectionQuery[] = [\r\n   *         { name: 'data' },\r\n   *         { name: 'secure' },\r\n   *         { name: 'variants' },\r\n   *         { name: 'images',\r\n   *           queryFn: ref => ref.orderBy('index'),\r\n   *           collectionWithNames: [\r\n   *             { name: 'secure'}\r\n   *           ]\r\n   *         },\r\n   *     ];\r\n   *\r\n   *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n   *\r\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n   * All logic is in listenForDocDeepRecursiveHelper$.\r\n   *\r\n   * @param docRef - a docRef with potential queryFn\r\n   * @param subCollectionQueries - see example\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  public listenForDoc$<T = FirestoreItem | DocumentData>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA): Observable<FireItem<T>> {\r\n\r\n    return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(\r\n      map(data => data as FireItem<T>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n   *\r\n   * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n   * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n   *\r\n   *\r\n   *    Example usage.\r\n   *\r\n   *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n   *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n   *\r\n   *    constructor(private ngFireStore: AngularFirestore) {\r\n   *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n   *    }\r\n   *\r\n   *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n   *    }\r\n   *\r\n   *    If you do not wish to listen for changes and only care about getting the values once\r\n   *\r\n   *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n   *          take(1)\r\n   *        );\r\n   *    }\r\n   *\r\n   * @param _query the collectionRef which will be listened to\r\n   * @param subCollectionQueries\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   */\r\n  public listenForCollection$<T = FirestoreItem | DocumentData>(\r\n    _query: Query<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.listenForCollectionSimple$<T>(_query).pipe(\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n\r\n        if (items == null || items.length === 0) {\r\n          return of([]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(items);\r\n        }\r\n\r\n        const collectionListeners: Array<Observable<any>> = [];\r\n\r\n        items.forEach(item => {\r\n\r\n          const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n\r\n          collectionListeners.push(collectionListener);\r\n        });\r\n\r\n        /* Finally return the combined collection listeners */\r\n        return combineLatest(collectionListeners);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n   */\r\n  public listenForCollectionRecursively$<T = FirestoreItem | DocumentData>(\r\n    collectionPath: string,\r\n    collectionKey: string,\r\n    orderKey?: string): Observable<any> {\r\n\r\n    // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n    const collectionQuery = new QueryContainer<T>(getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>);\r\n    if (orderKey != null) {\r\n      collectionQuery.orderBy(orderKey);\r\n    }\r\n\r\n    return this.listenForCollectionSimple$<T>(collectionQuery.query).pipe(\r\n      mergeMap((items: FireItem<T>[]) => {\r\n\r\n        if (items.length <= 0) {\r\n          return of([]);\r\n        } // TODO  perhaps make this throw an error so that we can skip it\r\n\r\n        // if (items.length <= 0) { throwError('No more '); }\r\n\r\n        const nextLevelObs: Array<Observable<FireItem<T>>> = [];\r\n\r\n        for (const item of items) {\r\n\r\n          // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n          const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey);  // one level deeper\r\n\r\n          const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(\r\n            map((nextLevelItems: Array<FireItem<T>>) => {\r\n              if (nextLevelItems.length > 0) {\r\n                return {...item, [collectionKey]: nextLevelItems} as FireItem<T>;\r\n              } else {\r\n                return {...item} as FireItem<T>;\r\n              }  // dont include an empty array\r\n            }),\r\n          );\r\n          nextLevelObs.push(nextLevelItems$);\r\n        }\r\n\r\n        return combineLatest(nextLevelObs).pipe(\r\n          tap(val => console.log(val))\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /* ---------- ADD -------------- */\r\n\r\n  /**\r\n   * Add document to firestore and split it up into sub collection.\r\n   *\r\n   * @param data the data to be saved\r\n   * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n   * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n   * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n   * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n   */\r\n  public add$<T = FirestoreItem>(\r\n    data: T,\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionWriters: SubCollectionWriter[] = [],\r\n    isAddDates: boolean = true,\r\n    docId?: string): Observable<FireItem<T>> {\r\n\r\n    if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/invalid-sub-collection-writers',\r\n        code: 'unknown',\r\n        message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n        stack: '',\r\n        data,\r\n        subCollectionWriters,\r\n        docId\r\n      };\r\n\r\n      throw error;\r\n    }\r\n\r\n    let currentDoc;\r\n    let subCollections: { [index: string]: any; } = {};\r\n\r\n    /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n    * Each item in the array will be saved as a map with the key being the array index\r\n    * We still want the return value of this function to be as an array non as a map\r\n    */\r\n    if (Array.isArray(data) && docId) {\r\n      currentDoc = data;\r\n    } else {\r\n      const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n      currentDoc = split.currentDoc;\r\n      subCollections = split.subCollections;\r\n    }\r\n\r\n    return this.addSimple$<T>(currentDoc as T, collectionRef, isAddDates, docId).pipe(\r\n      /* Add Sub/sub collections*/\r\n      mergeMap((currentData: FireItem<T>) => {\r\n\r\n        const subWriters: Array<Observable<any>> = [];\r\n\r\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n          let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n          let subDocId: string | undefined;\r\n\r\n          if (subCollectionWriters) {\r\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n          }\r\n\r\n          const subCollectionRef: CollectionReference = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n\r\n          /* Handle array and object differently\r\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n          * If a docId is given we should save it using that docId under a single doc.\r\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n          if (Array.isArray(subCollectionValue)) {\r\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n\r\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n              const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n                map(item => {\r\n                  // return {[key]: item};\r\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n                })\r\n              );\r\n              subWriters.push(subWriter);\r\n\r\n            } else { /* docId is undefined so we save each object in the array separate */\r\n              subCollectionValue.forEach((arrayValue: FireItem<{}>) => {\r\n\r\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(\r\n                  map(item => {\r\n                    // return {[key]: [item]};\r\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                    return {key: subCollectionKey, value: [item]};\r\n                  })\r\n                );\r\n\r\n                subWriters.push(subWriter);\r\n              });\r\n            }\r\n          } else { /* Not an array so a single Object*/\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n\r\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n            const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n              map(item => {\r\n                // return {[key]: item};\r\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n              })\r\n            );\r\n\r\n            subWriters.push(subWriter);\r\n          }\r\n        } /* end of iteration */\r\n\r\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n\r\n          /* the pipe only matters for the return value not for writing the data */\r\n          return combineLatest(subWriters).pipe(\r\n            // tap(sub => console.log(sub)),\r\n\r\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n            // TODO firestore.\r\n\r\n            map((docDatas: Array<Map<string, []>>) => { /* List of sub docs*/\r\n              const groupedData = {};\r\n\r\n              docDatas.forEach((doc: { [index: string]: any }) => { /* iterate over each doc */\r\n\r\n                const key = doc.key;\r\n                const value = doc.value;\r\n\r\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                // @ts-ignore\r\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                  // @ts-ignore\r\n                  (groupedData[key] as Array<any>).push(value[0]);\r\n                } else {\r\n                  // @ts-ignore\r\n                  groupedData[key] = value;\r\n                }\r\n              });\r\n\r\n              return groupedData as T;\r\n            }),\r\n\r\n            // tap(groupedData => console.log(groupedData)),\r\n\r\n            map((groupedData: T) => {\r\n              return {...currentData, ...groupedData} as T;\r\n            }),\r\n            // tap(d => console.log(d)),\r\n          );\r\n        } else {\r\n          return of(currentData);\r\n        }\r\n      })\r\n    ).pipe(\r\n      // @ts-ignore\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /* ----------  EDIT -------------- */\r\n\r\n  /**\r\n   * Update document and child documents\r\n   *\r\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n   * so its possible to introduce spelling mistakes on attributes and so forth\r\n   *\r\n   * @param data the data that is to be added or updated { [field: string]: any }\r\n   * @param docRef DocumentReference to be updated\r\n   * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n   * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n   */\r\n  public update$<A extends { [field: string]: any }>(data: Partial<A>,\r\n                                                     docRef: DocumentReference,\r\n                                                     subCollectionWriters: SubCollectionWriter[] = [],\r\n                                                     isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n      return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n    }\r\n\r\n    const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Update/ add data to the firestore documents\r\n   *\r\n   * @param docRefs list of DocumentReference to be have their data updated\r\n   * @param data data to add/update\r\n   * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n   */\r\n  public updateMultiple$<A>(docRefs: DocumentReference[], data: A, isAddModifiedDate: boolean = true): Observable<void> {\r\n    // const batch = this.fs.firebaseApp.firestore().batch();\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.update(docRef, data);\r\n    });\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /**\r\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n   * and then delete the old doc.\r\n   * returns the new doc once the delete is done.\r\n   *\r\n   * @param docRef DocumentReference to have its id changed\r\n   * @param newId the new id\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n   */\r\n  public changeDocId$<T>(docRef: DocumentReference,\r\n                         newId: string,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         subCollectionWriters?: SubCollectionWriter[]): Observable<FireItem<T>> {\r\n\r\n    if (subCollectionWriters == null) {\r\n      subCollectionWriters = subCollectionQueries as SubCollectionWriter[];\r\n    }\r\n\r\n    const collectionRef: CollectionReference = docRef.parent;\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      map((oldData: T) => this.cleanExtrasFromData(oldData, subCollectionWriters)),\r\n      switchMap((oldData: T) => {\r\n        return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe( /* add the data under id*/\r\n          mergeMap(newData => { /* delete the old doc */\r\n            return this.delete$(docRef, subCollectionQueries).pipe(\r\n              map(() => newData) /* keep the new data */\r\n            );\r\n          }),\r\n        );\r\n      }),\r\n      catchError(err => {\r\n        console.log('Failed to Change Doc Id: ' + err);\r\n        throw err;\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n  /* Move Item in Array */\r\n\r\n\r\n  /**\r\n   * Moved item within the same list so we need to update the index of all items in the list;\r\n   * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n   * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   */\r\n  public moveItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                       fromIndex: number,\r\n                                                       toIndex: number,\r\n                                                       useCopy = false): Observable<void> {\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n      return of();\r\n    }\r\n\r\n    if (items[0]?.firestoreMetadata == null) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n        code: 'not-found',\r\n        message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n      };\r\n      throw error;\r\n    }\r\n\r\n    const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n   * Not called directly.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   * @protected\r\n   */\r\n  protected getBatchFromMoveItemInIndexedDocs<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                           fromIndex: number,\r\n                                                                           toIndex: number,\r\n                                                                           useCopy = false): WriteBatch {\r\n\r\n    const lowestIndex = Math.min(fromIndex, toIndex);\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n      return batch;\r\n    }\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    moveItemInArray<A>(usedItems, fromIndex, toIndex);\r\n\r\n    const listSliceToUpdate: Array<FireItem<A>> = usedItems.slice(lowestIndex);\r\n\r\n    let i = lowestIndex;\r\n    for (const item of listSliceToUpdate) {\r\n      if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n        item.index = i;\r\n      }\r\n      const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n      batch.update(ref, {index: i});\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indexToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                indexToDelete: number,\r\n                                                                subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    const itemToDelete = usedItems[indexToDelete];\r\n\r\n    // get the delete batch that also contains any sub collections of the item\r\n    return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n      map((batch) => {\r\n        // sort and remove the item from the usedItems and then add the update index to the batch\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        usedItems.splice(indexToDelete, 1);\r\n\r\n        this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch);\r\n\r\n        return batch;\r\n      }),\r\n\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indicesToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemsInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                 indicesToDelete: number[],\r\n                                                                 subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                 useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    usedItems.sort(item => item.index); // make sure array is sorted by index\r\n\r\n    const itemsToDelete = usedItems.filter((item, i) => {\r\n      return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n    });\r\n\r\n    // iterate in reverse so as to not change the indices,\r\n    // the indices to delete must also be sorted\r\n    indicesToDelete.sort();\r\n    for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n      usedItems.splice(indicesToDelete[i], 1);\r\n    }\r\n\r\n    const docRefsObs$: Observable<DocumentReference[]>[] = [];\r\n\r\n    // get the docRefs for items to be deleted including the ones in the subCollections\r\n    itemsToDelete.forEach(itemToDelete => {\r\n\r\n      const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n        take(1)\r\n      );\r\n      docRefsObs$.push(obs$);\r\n    });\r\n\r\n\r\n    return forkJoin(docRefsObs$).pipe(\r\n      take(1),\r\n      map((listOfDocRefs) => {\r\n        // concat all the separate docRefs lists into one array of docRefs\r\n        let docRefs: DocumentReference[] = [];\r\n\r\n        listOfDocRefs.forEach(refs => {\r\n          docRefs = docRefs.concat(refs);\r\n        });\r\n\r\n        return docRefs;\r\n      }),\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      map((batch: WriteBatch) => this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch)),\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Run this on collections with a fixed order using an index: number attribute;\r\n   * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n   * Basically needs to be run after a delete\r\n   *\r\n   * @param items\r\n   * @param batch\r\n   * @protected\r\n   */\r\n  protected getBatchFromUpdateIndexFromListOfDocs<A extends { index: number }>(\r\n    items: Array<FireItem<A>>,\r\n    batch: WriteBatch = writeBatch(this.fs.firestore)\r\n  ): WriteBatch {\r\n\r\n    items.forEach((item, index) => {\r\n      if (item.index !== index) {\r\n        item.index = index; // this is just so that the given array's index is also updated immediately\r\n        const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n        batch.update(ref, {index});\r\n      }\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  public transferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): Observable<void> {\r\n\r\n    const batch: WriteBatch = this.getBatchFromTransferItemInIndexedDocs(previousArray,\r\n      currentArray,\r\n      previousIndex,\r\n      currentIndex,\r\n      currentArrayName,\r\n      additionalDataUpdateOnMovedItem,\r\n      isUpdateModifiedDateOnMovedItem,\r\n      useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /* ----------  DELETE -------------- */\r\n\r\n  /**\r\n   * Delete Document and child documents\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public delete$(docRef: DocumentReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<void> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      return this.fs.delete(docRef);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      switchMap((docRefList: DocumentReference<DocumentData>[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(); }\r\n      //   else { throw err; }\r\n      // }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param batch\r\n   */\r\n  public getDeleteBatch$(docRef: DocumentReference,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         batch: WriteBatch = writeBatch(this.fs.firestore)): Observable<WriteBatch> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      batch.delete(docRef);\r\n      return of(batch);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public deleteMultipleByPaths$(docPaths: string[]): Observable<any> {\r\n    const docRefs: DocumentReference[] =\r\n      docPaths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n\r\n    return this.deleteMultipleSimple$(docRefs);\r\n  }\r\n\r\n  /**\r\n   * Delete Documents and child documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteMultiple$(docRefs: DocumentReference[], subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n\r\n    const deepDocRefs$: Array<Observable<any>> = [];\r\n\r\n    docRefs.forEach(docRef => {\r\n      const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n      deepDocRefs$.push(docRefs$);\r\n    });\r\n\r\n    return combineLatest(deepDocRefs$).pipe(\r\n      // tap(lists => console.log(lists)),\r\n      map((lists: any[]) => {\r\n        let mainDocRefList: DocumentReference[] = [];\r\n        lists.forEach(list => {\r\n          mainDocRefList = mainDocRefList.concat(list);\r\n        });\r\n        return mainDocRefList;\r\n      }),\r\n      // tap(lists => console.log(lists)),\r\n      switchMap((docRefList: DocumentReference[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete all documents and sub collections as specified in subCollectionQueries.\r\n   * Not very efficient and causes a lot of db reads.\r\n   * If possible use the firebase CLI or the console instead when deleting large collections.\r\n   *\r\n   * @param collectionRef\r\n   * @param subCollectionQueries\r\n   */\r\n  public deleteCollection$(collectionRef: CollectionReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(\r\n      switchMap(docRefs => this.deleteMultiple$(docRefs))\r\n    ).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete firestore document by path\r\n   * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n   *\r\n   * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteDocByPath$(docPath: string, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    const docRef = getRefFromPath(docPath, this.fs.firestore) as DocumentReference;\r\n    return this.delete$(docRef, subCollectionQueries);\r\n  }\r\n\r\n  /**\r\n   * Delete document by FirestoreItem\r\n   *\r\n   * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n   *\r\n   * @param item FirestoreItem to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteItem$<T>(item: FireItem<T>, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n\r\n    return this.deleteMultipleSimple$(docRefs).pipe(\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /* ---- OTHER ---- */\r\n\r\n  /**\r\n   * clean FirestoreBaseItem properties from the data.\r\n   * Usually done if you wish to save the data to firestore, since some FirestoreBaseItem properties are of non allowed types.\r\n   *\r\n   * Goes through each level and removes DbItemExtras\r\n   * In case you wish to save the data\r\n   *\r\n   * @param data data to be cleaned, either single item or an array of items\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to locate them\r\n   * @param additionalFieldsToRemove\r\n   */\r\n\r\n  cleanExtrasFromData<T>(data: T & DocumentData,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): T;\r\n\r\n  cleanExtrasFromData<T>(datas: Array<T & DocumentData>,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): Array<T>;\r\n\r\n  public cleanExtrasFromData<T>(data: T & DocumentData | Array<T & DocumentData>,\r\n                                subCollectionWriters: SubCollectionWriter[] = [],\r\n                                additionalFieldsToRemove: string[] = []): T | Array<T> {\r\n\r\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n    // const dataToBeCleaned = data;\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n      const cleanDatas: Array<T> = [];\r\n\r\n      data.forEach(d => {\r\n        cleanDatas.push(\r\n          this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove) as T\r\n        );\r\n      });\r\n\r\n      return cleanDatas;\r\n\r\n    } else {\r\n      return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove) as T;\r\n    }\r\n  }\r\n\r\n\r\n  /* ----------  PROTECTED METHODS -------------- */\r\n\r\n  /**\r\n   * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n   * and also allows for to choose action to take when document does not exist\r\n   *\r\n   * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n   *\r\n   * @param docRef DocumentReference that will be listened to\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  protected listenForDocSimple$<T>(docRef: DocumentReference<any>,\r\n                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA\r\n  ): Observable<FireItem<T>> {\r\n\r\n    return this.fs.doc(docRef).pipe(\r\n      tap((snapshot: DocumentSnapshot) => {\r\n        if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n          const error: FirestoreErrorExt = {\r\n            name: 'FirebaseErrorExt',\r\n            code: 'not-found',\r\n            message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n            docRef\r\n          };\r\n          throw error;\r\n        }\r\n      }),\r\n\r\n      filter((snapshot: DocumentSnapshot) => {\r\n        return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n      }),\r\n\r\n      map((snapshot: DocumentSnapshot) => {\r\n\r\n        console.log(snapshot.exists());\r\n\r\n        if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n          const data = snapshot.data() as T;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: snapshot.id,\r\n            ref: snapshot.ref as DocumentReference<T>,\r\n            path: docRef.path,\r\n            isExists: snapshot.exists(),\r\n            snapshotMetadata: snapshot.metadata\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n          return null;\r\n        }\r\n        return null;\r\n      }),\r\n      map((data) => {\r\n        if (data != null) {\r\n          return convertTimestampToDate(data as FireItem<{}>);\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    ) as Observable<FireItem<T>>;\r\n  }\r\n\r\n  /**\r\n   * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n   * Used internally, please use listenForCollection$() instead.\r\n   *\r\n   * @param _query the Query which will be listened to\r\n   * @protected\r\n   */\r\n  protected listenForCollectionSimple$<T>(_query: Query<T>): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.fs.collection(_query).pipe(\r\n      map((snap: QuerySnapshot<T>) => {\r\n        return snap.docs.map(snapshot => {\r\n          const data = snapshot.data() as T;\r\n\r\n          const id = snapshot.id;\r\n          const ref = snapshot.ref as DocumentReference<T>;\r\n          const path = ref.path;\r\n          const snapshotMetadata = snapshot.metadata;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id,\r\n            path,\r\n            ref,\r\n            snapshotMetadata,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        });\r\n      }),\r\n      map((datas: Array<FireItem<T>>) => datas.map(data => {\r\n        convertTimestampToDate(data);\r\n        return data;\r\n      }))\r\n    ) as Observable<Array<FireItem<T>>>;\r\n  }\r\n\r\n  /**\r\n   * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n   *\r\n   * Please use listenForDoc or listenForCollection.\r\n   *\r\n   * @param item\r\n   * @param subCollectionQueries\r\n   * @protected\r\n   */\r\n  protected listenForCollectionsDeep<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<FireItem<T>[]> {\r\n\r\n    if (item == null) {\r\n      return of([item]);\r\n    }\r\n    if (subCollectionQueries.length <= 0) {\r\n      return of([item]);\r\n    }\r\n\r\n    const collectionListeners: Array<Observable<any>> = [];\r\n\r\n    /* Iterate over each sub collection we have given and create collection listeners*/\r\n    subCollectionQueries.forEach(subCollectionQuery => {\r\n\r\n      const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n      if (subCollectionQuery.queryConstraints) {\r\n        queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n        // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      }\r\n      // if (subCollectionQuery.queryFn) {\r\n      //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      // }\r\n\r\n      const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n        // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n        /* Uncomment to see data on each update */\r\n        // tap(d => console.log(d)),\r\n        // filter(docs => docs != null),\r\n        /* Listen For and Add any Potential Sub Docs*/\r\n        // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n        mergeMap((items: FireItem<{}>[]) => {\r\n\r\n          if (!subCollectionQuery.subCollections) {\r\n            return of(items);\r\n          }\r\n\r\n          const docListeners: Array<Observable<any>> = [];\r\n\r\n          items = items.filter(d => d != null); // filter out potential nulls\r\n\r\n          items.forEach((subItem: FireItem<{}>) => {\r\n            const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n            docListeners.push(subDocAndCollections$);\r\n          });\r\n\r\n          if (docListeners.length <= 0) {\r\n            return of([]);\r\n          } /* subCollectionQuery is empty or doesnt exist */\r\n\r\n          return combineLatest(docListeners).pipe(\r\n            // tap(val => console.log(val))\r\n          );\r\n        }), /* End of Listening for sub docs */\r\n        /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n        and we only care about the data. So we remove the array and just make it one object with the\r\n        subCollectionQuery name as key and docs[0] as value */\r\n        map((items: FireItem<{}>[]) => {\r\n          const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n\r\n          if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n            return {[subCollectionQuery.name]: items[0]};\r\n          } else {\r\n            return {[subCollectionQuery.name]: items};\r\n          }\r\n        }),\r\n        // tap(d => console.log(d)),\r\n      );\r\n\r\n      collectionListeners.push(collectionListener);\r\n    });\r\n\r\n    /* Finally return the combined collection listeners*/\r\n    // @ts-ignore\r\n    return combineLatest(collectionListeners).pipe(\r\n      map((collectionDatas: { [collectionKeyName: string]: FireItem<FireItem<{}>>[] }[]) => {\r\n        // map((collectionDatas) => {\r\n        const datasMap: { [field: string]: any } = {};\r\n\r\n        collectionDatas.forEach((collectionData) => {\r\n\r\n          for (const [collectionName, items] of Object.entries(collectionData)) {\r\n            datasMap[collectionName] = items;\r\n          }\r\n        });\r\n        return datasMap;\r\n      }),\r\n\r\n      map((data: DocumentData) => {\r\n        return {...item, ...data} as FireItem<T>;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n   */\r\n  protected listenForDocDeepRecursiveHelper$<T>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable<any> {\r\n\r\n    /* Listen for the docFs*/\r\n    return this.listenForDocSimple$<T>(docRef, actionIfNotExist).pipe(\r\n      mergeMap((item: FireItem<{}>) => {\r\n\r\n        if (item === null) {\r\n          return of(item);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(item);\r\n        }\r\n\r\n        return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A replacement/extension to the AngularFirestoreCollection.add.\r\n   * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n   * the data with the added properties in FirebaseDbItem\r\n   *\r\n   * Used internally\r\n   *\r\n   * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n   * @param collectionRef the CollectionReference where the document should be added\r\n   * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n   * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n   */\r\n  protected addSimple$<T>(data: T, collectionRef: CollectionReference<T>, isAddDates: boolean = true, id?: string):\r\n    Observable<FireItem<T>> {\r\n\r\n    // let dataToBeSaved: A = Object.assign({}, data);\r\n\r\n    let res$: Observable<any>;\r\n\r\n    if (isAddDates) {\r\n      const date = new Date();\r\n      data = addCreatedDate(data, false, date);\r\n      data = addModifiedDate(data, false, date);\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      const docRef: DocumentReference = getDocRefWithId(collectionRef, id);\r\n      res$ = this.fs.set(docRef, data);\r\n    } else {\r\n      res$ = this.fs.add<T>(collectionRef, data);\r\n    }\r\n\r\n    // if (Array.isArray(data) && isAddDates) {\r\n    //   data = data.map(item => {\r\n    //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n    //   })\r\n    // }\r\n\r\n    res$ = res$.pipe(\r\n      // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n      // tap(ref => console.log(ref)),\r\n      // tap(() => console.log(data)),\r\n      map((ref: DocumentReference<T> | undefined) => {\r\n        if (id === undefined && ref) {\r\n\r\n          const path = ref.path;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: ref.id,\r\n            path,\r\n            ref,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else { // if id is defined it means we used docRef.set and ref is undefined\r\n          const path = collectionRef.path + '/' + id;\r\n          ref = getRefFromPath(path, this.fs.firestore) as DocumentReference<T>;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: id as string,\r\n            ref,\r\n            path,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return res$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /** Used internally for updates that doesn't affect child documents */\r\n  protected updateSimple$<A>(data: A, docRef: DocumentReference, isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n    return this.fs.update(docRef, data);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, used by update deep\r\n   */\r\n  protected updateDeepToBatchHelper<A>(data: A,\r\n                                       docRef: DocumentReference,\r\n                                       subCollectionWriters: SubCollectionWriter[] = [],\r\n                                       isAddModifiedDate: boolean = true,\r\n                                       batch?: WriteBatch): WriteBatch {\r\n\r\n    if (batch === undefined) {\r\n      batch = writeBatch(this.fs.firestore);\r\n    }\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n    const currentDoc = split.currentDoc;\r\n    const subCollections = split.subCollections;\r\n\r\n    // console.log(currentDoc, subCollections);\r\n    batch.update(docRef, currentDoc);\r\n\r\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n\r\n      let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n      let subDocId: string | undefined;\r\n\r\n      if (subCollectionWriters) {\r\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n      }\r\n\r\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n\r\n      // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n      const subCollection = getSubCollection(docRef, subCollectionKey);\r\n      const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n\r\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n   * have an index value and a groupName.\r\n   *\r\n   * @param previousArray\r\n   * @param currentArray\r\n   * @param previousIndex\r\n   * @param currentIndex\r\n   * @param currentArrayName\r\n   * @param additionalDataUpdateOnMovedItem\r\n   * @param isUpdateModifiedDateOnMovedItem\r\n   * @param useCopy\r\n   * @protected\r\n   */\r\n  protected getBatchFromTransferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): WriteBatch {\r\n\r\n    let usedPreviousArray: Array<FireItem<A>>;\r\n    let usedCurrentArray: Array<FireItem<A>>;\r\n    if (useCopy) {\r\n      usedPreviousArray = Object.assign([], previousArray);\r\n      usedCurrentArray = Object.assign([], currentArray);\r\n    } else {\r\n      usedPreviousArray = previousArray;\r\n      usedCurrentArray = currentArray;\r\n    }\r\n\r\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (additionalDataUpdateOnMovedItem !== undefined) {\r\n      const movedItem = usedCurrentArray[currentIndex];\r\n      const movedItemRef = movedItem.firestoreMetadata.ref;\r\n\r\n      const data = {...additionalDataUpdateOnMovedItem, groupName: currentArrayName};\r\n\r\n      if (!useCopy) {\r\n        addDataToItem(movedItem, data, true);\r\n      }\r\n\r\n      if (isUpdateModifiedDateOnMovedItem) {\r\n        const date = new Date();\r\n        addModifiedDate(data, true, date);\r\n\r\n        if (!useCopy) {\r\n          addModifiedDate(movedItem, true, date);\r\n        }\r\n      }\r\n      batch.update(movedItemRef, data);\r\n    }\r\n\r\n    const currentArraySliceToUpdate: Array<FireItem<A>> = usedCurrentArray.slice(currentIndex);\r\n    let i = currentIndex;\r\n    for (const item of currentArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    const prevArraySliceToUpdate: Array<FireItem<A>> = usedPreviousArray.slice(previousIndex);\r\n    i = previousIndex;\r\n    for (const item of prevArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete Documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   */\r\n  protected deleteMultipleSimple$(docRefs: DocumentReference[]): Observable<void> {\r\n\r\n    const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  protected getDeleteMultipleSimpleBatch(docRefs: DocumentReference[], batch: WriteBatch = writeBatch(this.fs.firestore)): WriteBatch {\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.delete(docRef);\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n   *\r\n   * @param dbItem the data to be cleaned\r\n   * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n   * @param additionalFieldsToRemove\r\n   */\r\n  protected removeDataExtrasRecursiveHelper<T>(dbItem: T & DocumentData,\r\n                                               subCollectionWriters: SubCollectionWriter[] = [],\r\n                                               additionalFieldsToRemove: string[] = []): T {\r\n\r\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n    const extraPropertyNames: string[] = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n\r\n    /* Current level delete */\r\n    for (const extraPropertyName of extraPropertyNames) {\r\n      delete dbItem[extraPropertyName];\r\n    }\r\n\r\n    subCollectionWriters.forEach(col => {\r\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n\r\n        const docs: FireItem<T>[] = dbItem[col.name];\r\n        docs.forEach((d, i) => {\r\n\r\n          if (col.subCollections) {\r\n            this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n          } else {\r\n            /*  */\r\n            for (const extraPropertyName of extraPropertyNames) {\r\n              delete dbItem[col.name][i][extraPropertyName];\r\n            }\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n        } else {\r\n          for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[col.name][extraPropertyName];\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return dbItem;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n   * Mainly used to delete a docFs and its sub docs\r\n   * @param ref: DocumentReference | CollectionReference\r\n   * @param subCollectionQueries: SubCollectionQuery[]\r\n   */\r\n  protected getDocumentReferencesDeep$(ref: DocumentReference | CollectionReference,\r\n                                       subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    if (ref instanceof DocumentReference) {\r\n      return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n    } else { // CollectionReference\r\n      return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n    }\r\n  }\r\n\r\n  protected getDocumentReferencesFromDocRef$(docRef: DocumentReference,\r\n                                             subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      take(1),\r\n      map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)),\r\n      // tap(pathList => console.log(pathList)),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n      // tap(item => console.log(item)),\r\n    );\r\n  }\r\n\r\n  protected getDocumentReferencesFromCollectionRef$(collectionRef: CollectionReference,\r\n                                                    subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForCollectionSimple$(collectionRef).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n        let docListeners: Array<Observable<any>>;\r\n        docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n        return combineLatest(docListeners);\r\n      }),\r\n      map((items: FireItem<{}>[]) => {\r\n\r\n        let paths: string[] = [];\r\n\r\n        items.forEach(item => {\r\n          paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n        });\r\n        return paths;\r\n      }),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n   * including child documents using SubCollectionQueries\r\n   *\r\n   * Internal use\r\n   * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n   * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  protected getDocumentReferencesFromItem<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): DocumentReference[] {\r\n\r\n    const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n    return paths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n   */\r\n  protected getPathsFromItemDeepRecursiveHelper<T>(item: FireItem<T>,\r\n                                                   subCollectionQueries: SubCollectionQuery[] = []): string[] {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return [item.firestoreMetadata.path];\r\n    }\r\n    let pathList: string[] = [];\r\n    pathList.push(item.firestoreMetadata.path);\r\n\r\n    subCollectionQueries.forEach(col => {\r\n      if (Array.isArray((item as DocumentData)[col.name]) && !col.docId) {\r\n        /* property is array and not using docId so will contain multiple docs */\r\n\r\n        const items: FireItem<{}>[] = (item as DocumentData)[col.name];\r\n        items.forEach(subItem => {\r\n\r\n          if (col.subCollections) {\r\n            pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n          } else {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n        } else {\r\n          const subItem = ((item as DocumentData)[col.name] as FireItem<{}>);\r\n          if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n          // const path = (dbItem[col.name] as FirestoreItem).path;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return pathList;\r\n  }\r\n\r\n  /**\r\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n   * Only goes one sub level deep;\r\n   */\r\n  protected splitDataIntoCurrentDocAndSubCollections<T>(\r\n    data: T,\r\n    subCollectionWriters: SubCollectionWriter[] = []): CurrentDocSubCollectionSplit {\r\n\r\n    /* Split data into current doc and sub collections */\r\n    let currentDoc: { [index: string]: any; } = {};\r\n    const subCollections: { [index: string]: any; } = {};\r\n\r\n    /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n\r\n    // not array so object\r\n    for (const [key, value] of Object.entries(data)) {\r\n      // console.log(key, value);\r\n      if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n        const subCollectionWriter: SubCollectionWriter | undefined = subCollectionWriters.find(subColl => subColl.name === key);\r\n\r\n        if (subCollectionWriter) {\r\n          subCollections[key] = value;\r\n        } else {\r\n          currentDoc[key] = value;\r\n        }\r\n      } else {\r\n        currentDoc = data;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      currentDoc,\r\n      subCollections\r\n    } as CurrentDocSubCollectionSplit;\r\n  }\r\n\r\n  /**\r\n   * Turn a batch into an Observable instead of Promise.\r\n   *\r\n   * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n   * everything else.\r\n   *\r\n   * This method turns it into an observable\r\n   */\r\n  protected batchCommit$(batch: WriteBatch): Observable<void> {\r\n    return from(batch.commit()).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer<T> {\r\n\r\n  public queryConstraints: QueryConstraint[] = [];\r\n\r\n  constructor(public ref: CollectionReference<T>) {\r\n  }\r\n\r\n  /** factory method to create container from path */\r\n  static fromPath<T>(firestore: Firestore, path: string): QueryContainer<T> {\r\n    const ref = collection(firestore, path) as CollectionReference<T>;\r\n    return new this(ref);\r\n  }\r\n\r\n  /** Returns the query with all the query constraints */\r\n  get query(): Query<T> {\r\n    return query(this.ref, ...this.queryConstraints);\r\n  }\r\n\r\n  /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n  getDocs$(): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs<T>(this.query));\r\n  }\r\n\r\n  where(fieldPath: string | FieldPath, opStr: WhereFilterOp, value: unknown): QueryContainer<T> {\r\n    this.queryConstraints.push(where(fieldPath, opStr, value));\r\n    return this;\r\n  }\r\n\r\n  orderBy(fieldPath: string | FieldPath, directionStr?: OrderByDirection): QueryContainer<T> {\r\n    this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n    return this;\r\n  }\r\n\r\n  limit(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limit(_limit));\r\n    return this;\r\n  }\r\n\r\n  limitToLast(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limitToLast(_limit));\r\n    return this;\r\n  }\r\n\r\n  startAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  startAfter(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAfter(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAfter(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endBefore(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endBefore(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endBefore(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./drag-utils":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[32,0,0,32],[34,0,0,34],[38,0,0,38],[40,0,0,40],[42,0,0,42],[44,0,0,44],[50,0,0,50],[56,0,0,56],[57,0,0,57]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[19,0,1,19],[21,0,1,21],[27,0,1,27],[29,0,1,29],[32,0,1,32],[34,0,1,34],[42,0,1,42],[44,0,1,44],[53,0,1,53],[55,0,1,55],[59,0,1,59],[61,0,1,61],[64,0,1,64],[66,0,1,66],[72,0,1,72],[88,0,1,88],[89,0,1,89]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[19,0,2,19],[21,0,2,21],[38,0,2,38],[40,0,2,40],[45,0,2,45],[47,0,2,47],[56,0,2,56],[58,0,2,58],[65,0,2,65],[67,0,2,67],[72,0,2,72],[74,0,2,74],[85,0,2,85],[87,0,2,87],[94,0,2,94],[96,0,2,96],[101,0,2,101],[103,0,2,103],[113,0,2,113],[115,0,2,115],[122,0,2,122],[124,0,2,124],[129,0,2,129],[131,0,2,131],[141,0,2,141],[143,0,2,143],[149,0,2,149],[169,0,2,169],[170,0,2,170]],[[0,0,3,0],[7,0,3,7],[9,0,3,9],[23,0,3,23],[25,0,3,25],[38,0,3,38],[40,0,3,40],[55,0,3,55],[57,0,3,57],[79,0,3,79],[81,0,3,81],[96,0,3,96],[98,0,3,98],[112,0,3,112],[114,0,3,114],[130,0,3,130],[132,0,3,132],[138,0,3,138],[149,0,3,149],[150,0,3,150]],[[0,0,4,0],[7,0,4,7],[9,0,4,9],[24,0,4,24],[26,0,4,26],[43,0,4,43],[45,0,4,45],[51,0,4,51],[65,0,4,65],[66,0,4,66]],[[0,0,5,0]],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[7,0,8,7],[11,0,8,11],[28,0,8,28],[29,0,8,29]],[[0,0,9,0],[1,0,9,1],[11,0,9,11],[28,0,9,28]],[[4,0,10,4],[32,0,10,32]],[[4,0,11,4],[21,0,11,21],[22,0,11,22],[39,0,11,39],[40,0,11,40],[53,0,11,53],[54,0,11,54],[57,0,11,57],[58,0,11,58],[59,0,11,59],[62,0,11,62],[75,0,11,75],[76,0,11,76]],[[4,0,12,4],[117,0,12,117]],[[4,0,13,4],[21,0,13,21],[22,0,13,22],[39,0,13,39],[40,0,13,40],[61,0,13,61],[62,0,13,62],[65,0,13,65],[66,0,13,66],[67,0,13,67],[70,0,13,70],[91,0,13,91],[92,0,13,92]],[[4,0,14,4],[51,0,14,51]],[[4,0,15,4],[21,0,15,21],[22,0,15,22],[39,0,15,39],[40,0,15,40],[48,0,15,48],[49,0,15,49],[52,0,15,52],[53,0,15,53],[54,0,15,54],[57,0,15,57],[65,0,15,65],[66,0,15,66]],[[4,0,16,4],[53,0,16,53]],[[4,0,17,4],[21,0,17,21],[22,0,17,22],[39,0,17,39],[40,0,17,40],[61,0,17,61],[62,0,17,62],[65,0,17,65],[66,0,17,66],[67,0,17,67],[70,0,17,70],[91,0,17,91],[92,0,17,92]],[[0,0,18,0],[1,0,18,1],[2,0,18,2],[3,0,18,3],[20,0,18,20],[24,0,18,24],[25,0,18,25],[42,0,18,42],[45,0,18,45],[47,0,18,47],[48,0,18,48],[49,0,18,49],[50,0,18,50]],[[0,0,19,0]],[],[],[],[],[[3,0,24,3]],[[0,0,25,0],[6,0,25,6],[13,0,25,13],[30,0,25,30]],[[4,0,26,4]],[],[],[],[],[[7,0,31,7]],[[4,0,32,4],[16,0,32,16],[18,0,32,18],[20,0,32,20],[32,0,32,32],[35,0,32,35],[41,0,32,41]],[[8,0,33,8],[12,0,33,12],[13,0,33,13],[15,0,33,15],[18,0,33,18],[20,0,33,20],[21,0,33,21]],[[8,0,34,8],[12,0,34,12],[13,0,34,13],[25,0,34,25],[28,0,34,28],[40,0,34,40],[41,0,34,41]],[[4,0,35,4],[5,0,35,5]],[[4,0,36,4],[8,0,36,8],[17,0,36,17]],[[8,0,37,8],[15,0,37,15],[19,0,37,19],[20,0,37,20],[22,0,37,22],[23,0,37,23],[32,0,37,32],[33,0,37,33]],[[4,0,38,4],[5,0,38,5]],[[4,0,39,4],[43,0,39,43]],[[4,0,40,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,68,7]],[[4,0,69,4],[17,0,69,17],[18,0,69,18],[24,0,69,24],[26,0,69,26],[46,0,69,46],[49,0,69,49],[51,0,69,51],[53,0,69,53],[69,0,69,69],[72,0,69,72],[89,0,69,89],[90,0,69,90],[109,0,69,109]],[[8,0,70,8],[15,0,70,15],[19,0,70,19],[20,0,70,20],[52,0,70,52],[53,0,70,53],[59,0,70,59],[61,0,70,61],[81,0,70,81],[83,0,70,83],[99,0,70,99],[100,0,70,100],[101,0,70,101],[105,0,70,105],[106,0,70,106],[109,0,70,109],[110,0,70,110],[114,0,70,114],[115,0,70,115],[117,0,70,117],[118,0,70,118],[122,0,70,122],[123,0,70,123],[124,0,70,124],[125,0,70,125]],[[4,0,71,4],[5,0,71,5]],[[4,0,72,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,103,7]],[[4,0,104,4],[24,0,104,24],[25,0,104,25],[31,0,104,31],[33,0,104,33],[53,0,104,53],[56,0,104,56],[58,0,104,58]],[[8,0,105,8]],[],[],[[11,0,108,11]],[[8,0,109,8],[15,0,109,15],[19,0,109,19],[20,0,109,20],[46,0,109,46],[47,0,109,47],[53,0,109,53],[54,0,109,54],[55,0,109,55],[59,0,109,59],[60,0,109,60],[68,0,109,68],[69,0,109,69],[70,0,109,70],[75,0,109,75],[77,0,109,77],[79,0,109,79]],[[12,0,110,12],[16,0,110,16],[21,0,110,21],[25,0,110,25],[29,0,110,29],[33,0,110,33],[38,0,110,38],[39,0,110,39],[45,0,110,45],[50,0,110,50],[51,0,110,51],[53,0,110,53]],[[16,0,111,16],[23,0,111,23],[25,0,111,25],[26,0,111,26],[28,0,111,28],[29,0,111,29],[30,0,111,30]],[[13,0,112,13]],[[12,0,113,12],[16,0,113,16],[36,0,113,36],[37,0,113,37],[43,0,113,43],[47,0,113,47],[48,0,113,48],[50,0,113,50]],[[16,0,114,16],[23,0,114,23],[25,0,114,25],[26,0,114,26],[31,0,114,31],[32,0,114,32],[33,0,114,33]],[[13,0,115,13]],[[12,0,116,12],[18,0,116,18],[37,0,116,37],[40,0,116,40],[42,0,116,42],[43,0,116,43]],[[12,0,117,12],[17,0,117,17],[18,0,117,18],[25,0,117,25],[26,0,117,26],[30,0,117,30],[31,0,117,31],[33,0,117,33]],[[16,0,118,16],[22,0,118,22],[40,0,118,40],[43,0,118,43],[47,0,118,47],[48,0,118,48],[72,0,118,72],[73,0,118,73],[77,0,118,77],[79,0,118,79],[99,0,118,99],[100,0,118,100],[101,0,118,101]],[[16,0,119,16],[35,0,119,35],[36,0,119,36],[40,0,119,40],[41,0,119,41],[59,0,119,59],[60,0,119,60],[61,0,119,61]],[[12,0,120,12],[13,0,120,13],[14,0,120,14],[15,0,120,15]],[[12,0,121,12],[66,0,121,66]],[[12,0,122,12],[19,0,122,19],[32,0,122,32],[33,0,122,33],[52,0,122,52],[53,0,122,53],[54,0,122,54]],[[8,0,123,8],[9,0,123,9],[10,0,123,10],[11,0,123,11],[12,0,123,12]],[[4,0,124,4],[5,0,124,5]],[[4,0,125,4]],[],[[7,0,127,7]],[[4,0,128,4],[35,0,128,35],[36,0,128,36],[50,0,128,50],[52,0,128,52],[65,0,128,65],[67,0,128,67],[75,0,128,75]],[[8,0,129,8],[109,0,129,109]],[[8,0,130,8],[14,0,130,14],[29,0,130,29],[32,0,130,32],[36,0,130,36],[50,0,130,50],[51,0,130,51],[65,0,130,65],[66,0,130,66],[80,0,130,80],[82,0,130,82],[86,0,130,86],[87,0,130,87],[89,0,130,89],[90,0,130,90],[99,0,130,99],[100,0,130,100],[101,0,130,101],[102,0,130,102]],[[8,0,131,8],[12,0,131,12],[20,0,131,20],[24,0,131,24],[28,0,131,28],[30,0,131,30]],[[12,0,132,12],[27,0,132,27],[28,0,132,28],[35,0,132,35],[36,0,132,36],[44,0,132,44],[45,0,132,45],[46,0,132,46]],[[9,0,133,9]],[[8,0,134,8],[15,0,134,15],[19,0,134,19],[20,0,134,20],[46,0,134,46],[47,0,134,47],[62,0,134,62],[63,0,134,63],[68,0,134,68],[69,0,134,69],[70,0,134,70],[74,0,134,74],[75,0,134,75],[83,0,134,83],[84,0,134,84],[85,0,134,85],[90,0,134,90],[92,0,134,92],[94,0,134,94]],[[12,0,135,12],[16,0,135,16],[21,0,135,21],[22,0,135,22],[28,0,135,28],[32,0,135,32],[33,0,135,33],[35,0,135,35]],[[16,0,136,16],[23,0,136,23],[25,0,136,25],[26,0,136,26],[28,0,136,28],[29,0,136,29],[30,0,136,30]],[[13,0,137,13],[14,0,137,14],[78,0,137,78]],[[12,0,138,12],[65,0,138,65]],[[12,0,139,12],[18,0,139,18],[30,0,139,30],[33,0,139,33],[35,0,139,35],[36,0,139,36]],[[12,0,140,12],[17,0,140,17],[23,0,140,23],[27,0,140,27],[31,0,140,31],[36,0,140,36],[38,0,140,38]],[[16,0,141,16],[120,0,141,120]],[[16,0,142,16],[22,0,142,22],[35,0,142,35],[38,0,142,38],[42,0,142,42],[43,0,142,43],[60,0,142,60],[61,0,142,61],[64,0,142,64],[65,0,142,65],[69,0,142,69],[70,0,142,70],[76,0,142,76],[77,0,142,77],[80,0,142,80],[82,0,142,82],[95,0,142,95],[96,0,142,96],[97,0,142,97],[98,0,142,98],[117,0,142,117]],[[16,0,143,16],[22,0,143,22],[37,0,143,37],[40,0,143,40],[44,0,143,44],[45,0,143,45],[76,0,143,76],[77,0,143,77],[90,0,143,90],[92,0,143,92],[105,0,143,105],[107,0,143,107],[115,0,143,115],[116,0,143,116],[117,0,143,117],[121,0,143,121],[122,0,143,122],[125,0,143,125],[126,0,143,126],[127,0,143,127],[141,0,143,141],[143,0,143,143],[145,0,143,145]],[[20,0,144,20],[24,0,144,24],[38,0,144,38],[39,0,144,39],[45,0,144,45],[48,0,144,48],[49,0,144,49],[51,0,144,51]],[[24,0,145,24],[63,0,145,36],[67,0,145,40],[72,0,145,42],[73,0,145,43],[86,0,145,56],[87,0,145,57],[89,0,145,59],[103,0,145,73],[107,0,145,76]],[[21,0,146,21]],[[25,0,147,25]],[[24,0,148,24],[49,0,148,36],[53,0,148,40],[55,0,148,43]],[[21,0,149,21],[22,0,149,22],[52,0,149,52]],[[16,0,150,16],[17,0,150,17],[18,0,150,18],[19,0,150,19],[20,0,150,20]],[[16,0,151,16],[28,0,151,28],[29,0,151,29],[33,0,151,33],[34,0,151,34],[49,0,151,49],[50,0,151,50],[51,0,151,51]],[[13,0,152,13]],[[12,0,153,12],[19,0,153,19],[32,0,153,32],[33,0,153,33],[45,0,153,45],[46,0,153,46],[47,0,153,47],[51,0,153,51],[52,0,153,52],[55,0,153,55],[56,0,153,56],[59,0,153,59],[60,0,153,60],[62,0,153,62],[63,0,153,63],[70,0,153,70],[71,0,153,71],[74,0,153,74],[75,0,153,75],[78,0,153,78],[79,0,153,79],[80,0,153,80],[81,0,153,81],[82,0,153,82]],[[8,0,154,8],[9,0,154,9],[10,0,154,10],[11,0,154,11],[12,0,154,12]],[[4,0,155,4],[5,0,155,5]],[[4,0,156,4],[39,0,156,39]],[[4,0,157,4]],[],[],[],[],[],[],[],[[7,0,165,7]],[[4,0,166,4],[8,0,166,8],[9,0,166,9],[13,0,166,13],[15,0,166,15],[28,0,166,28],[30,0,166,30],[50,0,166,50],[53,0,166,53],[55,0,166,55],[57,0,166,57],[67,0,166,67],[70,0,166,70],[74,0,166,74],[76,0,166,76],[81,0,166,81]],[[8,0,167,8],[12,0,167,12],[17,0,167,17],[18,0,167,18],[25,0,167,25],[26,0,167,26],[30,0,167,30],[31,0,167,31],[35,0,167,35],[40,0,167,40],[44,0,167,44],[64,0,167,64],[65,0,167,65],[71,0,167,71],[74,0,167,74],[75,0,167,75],[77,0,167,77]],[[12,0,168,12],[18,0,168,18],[23,0,168,23],[26,0,168,26]],[[16,0,169,16],[20,0,169,20],[22,0,169,22],[67,0,169,67]],[[16,0,170,16],[20,0,170,20],[22,0,170,22],[31,0,170,31]],[[16,0,171,16],[23,0,171,23],[25,0,171,25],[113,0,171,113]],[[16,0,172,16],[21,0,172,21],[23,0,172,23],[25,0,172,25]],[[16,0,173,16],[20,0,173,20]],[[16,0,174,16],[36,0,174,36]],[[16,0,175,16],[21,0,175,21]],[[13,0,176,13],[14,0,176,14]],[[12,0,177,12],[18,0,177,18],[23,0,177,23],[24,0,177,24]],[[9,0,178,9]],[[8,0,179,8],[12,0,179,12],[22,0,179,22],[23,0,179,23]],[[8,0,180,8],[12,0,180,12],[26,0,180,26],[29,0,180,29],[31,0,180,31],[32,0,180,32]],[[8,0,181,8]],[],[],[[10,0,184,10]],[[8,0,185,8],[12,0,185,12],[17,0,185,17],[18,0,185,18],[25,0,185,25],[26,0,185,26],[30,0,185,30],[31,0,185,31],[35,0,185,35],[40,0,185,40],[42,0,185,42]],[[12,0,186,12],[22,0,186,22],[25,0,186,25],[29,0,186,29],[30,0,186,30]],[[9,0,187,9]],[[13,0,188,13]],[[12,0,189,12],[18,0,189,18],[23,0,189,23],[26,0,189,26],[30,0,189,30],[31,0,189,31],[71,0,189,71],[72,0,189,72],[76,0,189,76],[78,0,189,78],[98,0,189,98],[99,0,189,99],[100,0,189,100]],[[12,0,190,12],[22,0,190,22],[25,0,190,25],[30,0,190,30],[31,0,190,31],[41,0,190,41],[42,0,190,42]],[[12,0,191,12],[26,0,191,26],[29,0,191,29],[34,0,191,34],[35,0,191,35],[49,0,191,49],[50,0,191,50]],[[9,0,192,9]],[[8,0,193,8],[15,0,193,15],[19,0,193,19],[20,0,193,20],[30,0,193,30],[31,0,193,31],[41,0,193,41],[43,0,193,43],[56,0,193,56],[58,0,193,58],[68,0,193,68],[70,0,193,70],[75,0,193,75],[76,0,193,76],[77,0,193,77],[81,0,193,81]],[[8,0,194,8],[36,0,194,36]],[[8,0,195,8],[16,0,195,16],[17,0,195,17],[18,0,195,18],[29,0,195,29],[31,0,195,31],[33,0,195,33]],[],[[12,0,196,12],[18,0,196,18],[28,0,196,28],[31,0,196,31],[33,0,196,33],[34,0,196,34]],[[12,0,197,12],[17,0,197,17],[23,0,197,23],[24,0,197,24],[40,0,197,40],[42,0,197,42],[60,0,197,60],[61,0,197,61],[65,0,197,65],[71,0,197,71],[72,0,197,72],[79,0,197,79],[80,0,197,80],[94,0,197,94],[95,0,197,95],[97,0,197,97]],[[16,0,198,16],[20,0,198,20],[43,0,198,43],[44,0,198,44],[45,0,198,45],[84,0,198,84]],[[16,0,199,16],[20,0,199,20],[28,0,199,28],[29,0,199,29]],[[16,0,200,16],[20,0,200,20],[40,0,200,40],[42,0,200,42]],[[20,0,201,20],[43,0,201,43],[46,0,201,46],[52,0,201,46],[72,0,201,66],[73,0,201,67],[77,0,201,71],[78,0,201,72],[85,0,201,79],[86,0,201,80],[88,0,201,82],[89,0,201,83],[96,0,201,90],[97,0,201,91],[101,0,201,95],[106,0,201,100],[122,0,201,116],[123,0,201,117],[165,0,201,119],[179,0,201,133],[180,0,201,134]],[[20,0,202,20],[28,0,202,28],[31,0,202,31],[37,0,202,31],[57,0,202,51],[58,0,202,52],[62,0,202,56],[63,0,202,57],[70,0,202,64],[71,0,202,65],[73,0,202,67],[74,0,202,68],[81,0,202,75],[82,0,202,76],[86,0,202,80],[91,0,202,85],[107,0,202,101],[108,0,202,102],[150,0,202,104],[155,0,202,109],[156,0,202,110]],[[17,0,203,17]],[[16,0,204,16],[22,0,204,22],[38,0,204,38],[41,0,204,41],[57,0,204,57],[58,0,204,58],[69,0,204,69],[70,0,204,70],[87,0,204,87],[88,0,204,88],[91,0,204,91],[93,0,204,93],[109,0,204,109],[110,0,204,110],[111,0,204,111]],[[16,0,205,16]],[],[],[[139,0,208,139]],[[16,0,209,16],[20,0,209,20],[25,0,209,25],[26,0,209,26],[33,0,209,33],[34,0,209,34],[52,0,209,52],[53,0,209,53],[55,0,209,55]],[[20,0,210,20],[24,0,210,24],[32,0,210,32],[37,0,210,37],[46,0,210,46],[48,0,210,48],[50,0,210,50],[113,0,210,113]],[[24,0,211,24],[110,0,211,110]],[[24,0,212,24],[30,0,212,30],[39,0,212,39],[42,0,212,42],[46,0,212,46],[47,0,212,47],[51,0,212,51],[52,0,212,52],[70,0,212,70],[72,0,212,72],[88,0,212,88],[90,0,212,90],[113,0,212,113],[115,0,212,115],[125,0,212,125],[127,0,212,127],[135,0,212,135],[136,0,212,136],[137,0,212,137],[141,0,212,141],[142,0,212,142],[145,0,212,145],[146,0,212,146],[150,0,212,150],[151,0,212,151],[153,0,212,153]],[[28,0,213,28],[52,0,213,52]],[[28,0,214,28],[35,0,214,35],[37,0,214,37],[40,0,214,40],[42,0,214,42],[58,0,214,58],[60,0,214,60],[65,0,214,65],[67,0,214,67],[71,0,214,71],[73,0,214,73],[74,0,214,74],[75,0,214,75],[134,0,214,134]],[[24,0,215,24],[25,0,215,25],[26,0,215,26],[27,0,215,27],[28,0,215,28]],[[24,0,216,24],[34,0,216,34],[35,0,216,35],[39,0,216,39],[40,0,216,40],[49,0,216,49],[50,0,216,50],[51,0,216,51]],[[21,0,217,21]],[[25,0,218,25],[27,0,218,27],[96,0,218,96]],[[24,0,219,24],[42,0,219,42],[43,0,219,43],[50,0,219,50],[51,0,219,51],[52,0,219,52],[62,0,219,62],[64,0,219,64],[66,0,219,66]],[[28,0,220,28],[114,0,220,114]],[[28,0,221,28],[34,0,221,34],[43,0,221,43],[46,0,221,46],[50,0,221,50],[51,0,221,51],[55,0,221,55],[56,0,221,56],[66,0,221,66],[68,0,221,68],[84,0,221,84],[86,0,221,86],[109,0,221,109],[111,0,221,111],[121,0,221,121],[122,0,221,122],[123,0,221,123],[127,0,221,127],[128,0,221,128],[131,0,221,131],[132,0,221,132],[136,0,221,136],[137,0,221,137],[139,0,221,139]],[[32,0,222,32],[58,0,222,58]],[[32,0,223,32],[125,0,223,125]],[[32,0,224,32],[39,0,224,39],[41,0,224,41],[44,0,224,44],[46,0,224,46],[62,0,224,62],[64,0,224,64],[69,0,224,69],[71,0,224,71],[72,0,224,72],[76,0,224,76],[77,0,224,77],[79,0,224,79],[80,0,224,80]],[[28,0,225,28],[29,0,225,29],[30,0,225,30],[31,0,225,31],[32,0,225,32]],[[28,0,226,28],[38,0,226,38],[39,0,226,39],[43,0,226,43],[44,0,226,44],[53,0,226,53],[54,0,226,54],[55,0,226,55]],[[24,0,227,24],[25,0,227,25],[26,0,227,26],[27,0,227,27]],[[21,0,228,21]],[[17,0,229,17]],[[21,0,230,21],[23,0,230,23],[59,0,230,59]],[[20,0,231,20],[28,0,231,28],[31,0,231,31],[39,0,231,39],[44,0,231,44],[53,0,231,53],[54,0,231,54],[55,0,231,55],[56,0,231,56],[64,0,231,64],[65,0,231,65],[66,0,231,66],[67,0,231,67],[71,0,231,71],[72,0,231,72],[84,0,231,84],[85,0,231,85]],[[20,0,232,20],[106,0,232,106]],[[20,0,233,20],[26,0,233,26],[35,0,233,35],[38,0,233,38],[42,0,233,42],[43,0,233,43],[47,0,233,47],[48,0,233,48],[66,0,233,66],[68,0,233,68],[84,0,233,84],[86,0,233,86],[109,0,233,109],[111,0,233,111],[121,0,233,121],[123,0,233,123],[131,0,233,131],[132,0,233,132],[133,0,233,133],[137,0,233,137],[138,0,233,138],[141,0,233,141],[142,0,233,142],[146,0,233,146],[147,0,233,147],[149,0,233,149]],[[24,0,234,24],[48,0,234,48]],[[24,0,235,24],[31,0,235,31],[33,0,235,33],[36,0,235,36],[38,0,235,38],[54,0,235,54],[56,0,235,56],[61,0,235,61],[63,0,235,63],[67,0,235,67],[69,0,235,69],[70,0,235,70],[71,0,235,71],[130,0,235,130]],[[20,0,236,20],[21,0,236,21],[22,0,236,22],[23,0,236,23],[24,0,236,24]],[[20,0,237,20],[30,0,237,30],[31,0,237,31],[35,0,237,35],[36,0,237,36],[45,0,237,45],[46,0,237,46],[47,0,237,47]],[[17,0,238,17]],[[13,0,239,13],[14,0,239,14],[36,0,239,36]],[[12,0,240,12],[16,0,240,16],[26,0,240,26],[27,0,240,27],[33,0,240,33],[36,0,240,36],[37,0,240,37],[39,0,240,39],[41,0,240,41],[113,0,240,113]],[[16,0,241,16],[89,0,241,89]],[[16,0,242,16],[23,0,242,23],[36,0,242,36],[37,0,242,37],[47,0,242,47],[48,0,242,48],[49,0,242,49],[53,0,242,53]],[[16,0,243,16],[48,0,243,48]],[[16,0,244,16],[139,0,244,139]],[[16,0,245,16],[141,0,245,141]],[[16,0,246,16],[34,0,246,34]],[[16,0,247,16],[19,0,247,19],[20,0,247,20],[21,0,247,21],[29,0,247,29],[31,0,247,31],[33,0,247,33]],[[20,0,248,20],[26,0,248,26],[37,0,248,37],[40,0,248,40],[42,0,248,42],[43,0,248,43]],[[20,0,249,20],[28,0,249,28],[29,0,249,29],[36,0,249,36],[37,0,249,37],[38,0,249,38],[41,0,249,41],[43,0,249,43],[45,0,249,45]],[[24,0,250,24],[30,0,250,30],[33,0,250,33],[36,0,250,36],[39,0,250,39],[40,0,250,40],[43,0,250,43],[44,0,250,44]],[[24,0,251,24],[30,0,251,30],[35,0,251,35],[38,0,251,38],[41,0,251,41],[42,0,251,42],[47,0,251,47],[48,0,251,48]],[[24,0,252,24],[126,0,252,126]],[[24,0,253,24],[37,0,253,37]],[[24,0,254,24],[28,0,254,28],[39,0,254,39],[40,0,254,40],[54,0,254,54],[55,0,254,55],[58,0,254,58],[59,0,254,59],[63,0,254,63],[68,0,254,68],[69,0,254,69],[76,0,254,76],[77,0,254,77],[88,0,254,88],[89,0,254,89],[92,0,254,92],[93,0,254,93],[94,0,254,94],[96,0,254,96]],[[28,0,255,28],[123,0,255,123]],[[28,0,256,28],[41,0,256,41]],[[28,0,257,28],[39,0,257,39],[40,0,257,40],[43,0,257,43],[44,0,257,44],[45,0,257,45],[49,0,257,49],[50,0,257,50],[55,0,257,55],[56,0,257,56],[57,0,257,57],[58,0,257,58],[59,0,257,59],[60,0,257,60]],[[25,0,258,25]],[[29,0,259,29]],[[28,0,260,28],[41,0,260,41]],[[28,0,261,28],[39,0,261,39],[40,0,261,40],[43,0,261,43],[44,0,261,44],[47,0,261,47],[52,0,261,52],[53,0,261,53]],[[25,0,262,25]],[[20,0,263,20],[21,0,263,21],[22,0,263,22],[23,0,263,23]],[[20,0,264,20],[27,0,264,27],[38,0,264,38],[39,0,264,39]],[[16,0,265,16],[17,0,265,17],[18,0,265,18]],[[16,0,266,16],[64,0,266,64]],[[16,0,267,16],[19,0,267,19],[20,0,267,20],[21,0,267,21],[32,0,267,32],[34,0,267,34],[36,0,267,36]],[[20,0,268,20],[59,0,268,32],[70,0,268,43],[73,0,268,48],[84,0,268,59],[86,0,268,62]],[[16,0,269,16],[17,0,269,17],[18,0,269,18],[19,0,269,19],[20,0,269,20]],[[13,0,270,13]],[[17,0,271,17]],[[16,0,272,16],[23,0,272,23],[25,0,272,25],[26,0,272,26],[37,0,272,37],[38,0,272,38],[39,0,272,39]],[[13,0,273,13]],[[8,0,274,8],[9,0,274,9],[10,0,274,10],[11,0,274,11],[12,0,274,12],[16,0,274,16]],[[8,0,275,8],[21,0,275,21]],[[8,0,276,8],[12,0,276,12],[13,0,276,13],[14,0,276,14],[15,0,276,15],[16,0,276,16],[17,0,276,17]],[[4,0,277,4],[5,0,277,5]],[[4,0,278,4],[41,0,278,41]],[[4,0,279,4]],[],[],[],[],[],[],[],[],[],[[7,0,289,7]],[[4,0,290,4],[11,0,290,11],[12,0,290,12],[16,0,290,16],[18,0,290,18],[24,0,290,24],[26,0,290,26],[46,0,290,46],[49,0,290,49],[51,0,290,51],[53,0,290,53],[70,0,290,70],[73,0,290,73],[77,0,290,77]],[[8,0,291,8],[12,0,291,12],[32,0,291,32],[36,0,291,36],[40,0,291,40],[44,0,291,44],[64,0,291,64],[65,0,291,65],[71,0,291,71],[76,0,291,76],[77,0,291,77],[79,0,291,79]],[[12,0,292,12],[19,0,292,19],[23,0,292,23],[24,0,292,24],[37,0,292,37],[38,0,292,38],[42,0,292,42],[44,0,292,44],[50,0,292,50],[52,0,292,52],[69,0,292,69],[70,0,292,70],[71,0,292,71],[72,0,292,72],[125,0,292,125]],[[9,0,293,9]],[[8,0,294,8],[14,0,294,14],[19,0,294,19],[22,0,294,22],[26,0,294,26],[27,0,294,27],[50,0,294,50],[51,0,294,51],[55,0,294,55],[57,0,294,57],[63,0,294,63],[65,0,294,65],[85,0,294,85],[87,0,294,87],[104,0,294,104],[105,0,294,105],[106,0,294,106]],[[8,0,295,8],[15,0,295,15],[19,0,295,19],[20,0,295,20],[32,0,295,32],[33,0,295,33],[38,0,295,38],[39,0,295,39],[40,0,295,40]],[[4,0,296,4],[5,0,296,5]],[[4,0,297,4]],[],[],[],[],[],[[7,0,303,7]],[[4,0,304,4],[19,0,304,19],[20,0,304,20],[27,0,304,27],[29,0,304,29],[33,0,304,33],[35,0,304,35],[52,0,304,52],[55,0,304,55],[59,0,304,59]],[[8,0,305,8],[65,0,305,65]],[[8,0,306,8],[14,0,306,14],[19,0,306,19],[22,0,306,22],[32,0,306,32],[33,0,306,33],[37,0,306,37],[38,0,306,38],[40,0,306,40],[41,0,306,41],[50,0,306,50],[51,0,306,51],[52,0,306,52]],[[8,0,307,8],[12,0,307,12],[29,0,307,29],[31,0,307,31]],[[12,0,308,12],[16,0,308,16],[19,0,308,19],[34,0,308,34],[35,0,308,35],[39,0,308,39],[41,0,308,41],[46,0,308,46],[47,0,308,47],[48,0,308,48]],[[9,0,309,9]],[[8,0,310,8],[15,0,310,15],[16,0,310,16],[23,0,310,23],[24,0,310,24],[25,0,310,25],[31,0,310,31],[33,0,310,33],[35,0,310,35]],[[12,0,311,12],[17,0,311,17],[18,0,311,18],[24,0,311,24],[25,0,311,25],[31,0,311,31],[33,0,311,33],[37,0,311,37],[38,0,311,38],[39,0,311,39]],[[8,0,312,8],[9,0,312,9],[10,0,312,10],[11,0,312,11]],[[8,0,313,8],[15,0,313,15],[19,0,313,19],[20,0,313,20],[32,0,313,32],[33,0,313,33],[38,0,313,38],[39,0,313,39],[40,0,313,40]],[[4,0,314,4],[5,0,314,5]],[[4,0,315,4]],[],[],[],[],[],[],[],[],[[7,0,324,7]],[[4,0,325,4],[16,0,325,16],[17,0,325,17],[23,0,325,23],[25,0,325,25],[30,0,325,30],[32,0,325,32],[52,0,325,52],[55,0,325,55],[57,0,325,57],[59,0,325,59],[79,0,325,79]],[[8,0,326,8],[12,0,326,12],[32,0,326,32],[36,0,326,36],[40,0,326,40],[42,0,326,42]],[[12,0,327,12],[32,0,327,32],[35,0,327,35],[55,0,327,55],[56,0,327,56]],[[9,0,328,9]],[[8,0,329,8],[14,0,329,14],[27,0,329,27],[30,0,329,30],[36,0,329,36],[37,0,329,37],[43,0,329,43],[44,0,329,44]],[[8,0,330,8],[15,0,330,15],[19,0,330,19],[20,0,330,20],[33,0,330,33],[34,0,330,34],[40,0,330,40],[42,0,330,42],[62,0,330,62],[63,0,330,63],[64,0,330,64],[68,0,330,68]],[[8,0,331,8],[21,0,331,21]],[[8,0,332,8],[12,0,332,12],[13,0,332,13],[14,0,332,14],[15,0,332,15],[17,0,332,17],[20,0,332,20],[21,0,332,21],[22,0,332,22],[29,0,332,29],[31,0,332,31],[33,0,332,33],[34,0,332,34],[38,0,332,38],[39,0,332,39],[58,0,332,58],[59,0,332,59],[66,0,332,66],[68,0,332,68],[88,0,332,88],[89,0,332,89],[90,0,332,90],[92,0,332,92],[101,0,332,101],[102,0,332,102],[103,0,332,103],[110,0,332,110],[112,0,332,112],[114,0,332,114]],[[12,0,333,12],[19,0,333,19],[23,0,333,23],[24,0,333,24],[28,0,333,28],[29,0,333,29],[36,0,333,36],[38,0,333,38],[51,0,333,51],[53,0,333,53],[73,0,333,73],[75,0,333,75],[80,0,333,80],[82,0,333,82],[87,0,333,87],[88,0,333,88],[89,0,333,89],[93,0,333,93],[94,0,333,94],[120,0,333,120],[121,0,333,121],[129,0,333,129],[130,0,333,130],[137,0,333,137],[138,0,333,138],[140,0,333,140]],[[16,0,334,16],[23,0,334,23],[27,0,334,27],[28,0,334,28],[35,0,334,35],[36,0,334,36],[42,0,334,42],[44,0,334,44],[64,0,334,64],[65,0,334,65],[66,0,334,66],[70,0,334,70],[71,0,334,71],[74,0,334,74],[75,0,334,75],[78,0,334,78],[80,0,334,80],[81,0,334,81],[88,0,334,88],[89,0,334,89],[90,0,334,90],[113,0,334,113],[114,0,334,114],[115,0,334,115]],[[12,0,335,12],[13,0,335,13],[14,0,335,14],[15,0,335,15],[16,0,335,16]],[[8,0,336,8],[9,0,336,9],[10,0,336,10],[12,0,336,12],[22,0,336,22],[23,0,336,23],[26,0,336,26],[27,0,336,27],[29,0,336,29]],[[12,0,337,12],[19,0,337,19],[20,0,337,20],[23,0,337,23],[24,0,337,24],[51,0,337,51],[54,0,337,54],[57,0,337,57],[58,0,337,58],[59,0,337,59]],[[12,0,338,12],[18,0,338,18],[21,0,338,21],[22,0,338,22]],[[8,0,339,8],[9,0,339,9],[10,0,339,10],[12,0,339,12],[16,0,339,16],[17,0,339,17],[18,0,339,18],[19,0,339,19],[20,0,339,20],[21,0,339,21]],[[4,0,340,4],[5,0,340,5]],[[4,0,341,4],[28,0,341,28]],[[4,0,342,4]],[],[],[],[],[],[],[],[],[[7,0,351,7]],[[4,0,352,4],[20,0,352,20],[21,0,352,21],[26,0,352,26],[28,0,352,28],[37,0,352,37],[39,0,352,39],[46,0,352,46],[48,0,352,48],[55,0,352,55],[58,0,352,58],[63,0,352,63]],[],[[8,0,353,8],[12,0,353,12],[21,0,353,21],[25,0,353,25],[29,0,353,29],[33,0,353,33],[40,0,353,40],[44,0,353,44],[48,0,353,48],[52,0,353,52],[61,0,353,61],[66,0,353,66],[73,0,353,73],[77,0,353,77],[82,0,353,82],[83,0,353,83],[89,0,353,89],[93,0,353,93],[94,0,353,94],[96,0,353,96],[98,0,353,98],[130,0,353,130]],[[12,0,354,12],[19,0,354,19],[21,0,354,21],[23,0,354,23],[24,0,354,24]],[[9,0,355,9]],[[8,0,356,8],[12,0,356,12],[13,0,356,12],[19,0,356,12],[24,0,356,17],[25,0,356,18],[26,0,356,19],[27,0,356,20],[69,0,356,22],[86,0,356,39],[91,0,356,43],[95,0,356,47],[97,0,356,49]],[[12,0,357,12],[18,0,357,18],[23,0,357,23],[26,0,357,26]],[[16,0,358,16],[20,0,358,20],[22,0,358,22],[75,0,358,75]],[[16,0,359,16],[20,0,359,20],[22,0,359,22],[33,0,359,33]],[[16,0,360,16],[23,0,360,23],[25,0,360,25],[124,0,360,124]],[[13,0,361,13],[14,0,361,14]],[[12,0,362,12],[18,0,362,18],[23,0,362,23],[24,0,362,24]],[[9,0,363,9]],[[8,0,364,8],[14,0,364,14],[19,0,364,19],[22,0,364,22],[26,0,364,26],[27,0,364,27],[60,0,364,60],[61,0,364,61],[66,0,364,66],[68,0,364,68],[77,0,364,77],[79,0,364,79],[86,0,364,86],[88,0,364,88],[95,0,364,95],[96,0,364,96],[97,0,364,97]],[[8,0,365,8],[15,0,365,15],[19,0,365,19],[20,0,365,20],[32,0,365,32],[33,0,365,33],[38,0,365,38],[39,0,365,39],[40,0,365,40]],[[4,0,366,4],[5,0,366,5]],[[4,0,367,4]],[],[],[],[],[],[],[],[],[[7,0,376,7]],[[4,0,377,4],[37,0,377,37],[38,0,377,38],[43,0,377,43],[45,0,377,45],[54,0,377,54],[56,0,377,56],[63,0,377,63],[65,0,377,65],[72,0,377,72],[75,0,377,75],[80,0,377,80]],[[8,0,378,8],[14,0,378,14],[25,0,378,25],[28,0,378,28],[32,0,378,32],[33,0,378,33],[36,0,378,36],[37,0,378,37],[46,0,378,46],[48,0,378,48],[55,0,378,55],[56,0,378,56],[57,0,378,57]],[[8,0,379,8],[14,0,379,14],[19,0,379,19],[22,0,379,22],[32,0,379,32],[33,0,379,33],[37,0,379,37],[38,0,379,38],[40,0,379,40],[41,0,379,41],[50,0,379,50],[51,0,379,51],[52,0,379,52]],[[8,0,380,8],[12,0,380,12],[21,0,380,21],[25,0,380,25],[29,0,380,29],[33,0,380,33],[40,0,380,40],[44,0,380,44],[48,0,380,48],[52,0,380,52],[61,0,380,61],[66,0,380,66],[73,0,380,73],[75,0,380,75],[77,0,380,77],[109,0,380,109]],[[12,0,381,12],[19,0,381,19],[24,0,381,24],[25,0,381,25]],[[9,0,382,9]],[[8,0,383,8],[12,0,383,12],[21,0,383,21],[22,0,383,22]],[[8,0,384,8],[12,0,384,12],[19,0,384,19],[21,0,384,21]],[[12,0,385,12],[21,0,385,21],[24,0,385,24],[30,0,385,30],[31,0,385,31],[37,0,385,37],[38,0,385,38],[40,0,385,40],[42,0,385,42],[47,0,385,47],[48,0,385,48],[49,0,385,49]],[[9,0,386,9]],[[13,0,387,13]],[[12,0,388,12],[21,0,388,21],[24,0,388,24],[29,0,388,29],[30,0,388,30]],[[9,0,389,9]],[[8,0,390,8],[23,0,390,23],[24,0,390,24],[33,0,390,33],[35,0,390,35],[44,0,390,44],[46,0,390,46],[53,0,390,53],[54,0,390,54],[55,0,390,55]],[[8,0,391,8],[14,0,391,14],[31,0,391,31],[34,0,391,34],[43,0,391,43],[44,0,391,44],[49,0,391,49],[50,0,391,50],[61,0,391,61],[62,0,391,62],[63,0,391,63]],[[8,0,392,8],[12,0,392,12],[13,0,392,13],[16,0,392,16],[27,0,392,27],[28,0,392,28]],[[8,0,393,8],[13,0,393,13],[19,0,393,19],[23,0,393,23],[27,0,393,27],[44,0,393,44],[46,0,393,46]],[[12,0,394,12],[16,0,394,16],[17,0,394,17],[24,0,394,24],[26,0,394,26],[28,0,394,28],[103,0,394,103]],[[16,0,395,16],[20,0,395,20],[21,0,395,21],[26,0,395,26],[29,0,395,29],[30,0,395,30],[31,0,395,31]],[[13,0,396,13]],[[12,0,397,12],[18,0,397,18],[21,0,397,21],[24,0,397,24],[38,0,397,38],[39,0,397,39],[43,0,397,43],[44,0,397,44],[61,0,397,61],[62,0,397,62],[66,0,397,66],[68,0,397,68],[72,0,397,72],[73,0,397,73],[75,0,397,75],[76,0,397,76],[85,0,397,85],[86,0,397,86],[87,0,397,87]],[[12,0,398,12],[17,0,398,17],[18,0,398,18],[24,0,398,24],[25,0,398,25],[28,0,398,28],[30,0,398,30],[32,0,398,32],[37,0,398,37],[39,0,398,39],[40,0,398,40],[42,0,398,42],[43,0,398,43],[44,0,398,44]],[[12,0,399,12],[13,0,399,13],[15,0,399,15],[16,0,399,16]],[[9,0,400,9]],[[8,0,401,8],[15,0,401,15],[20,0,401,20],[21,0,401,21]],[[4,0,402,4],[5,0,402,5]],[[4,0,403,4]],[],[],[],[],[],[],[[7,0,410,7]],[[4,0,411,4],[29,0,411,29],[30,0,411,30],[35,0,411,35],[37,0,411,37],[50,0,411,50],[52,0,411,52],[72,0,411,72],[75,0,411,75],[77,0,411,77],[79,0,411,79],[86,0,411,86],[89,0,411,89],[94,0,411,94]],[[8,0,412,8],[12,0,412,12],[21,0,412,21],[22,0,412,22]],[[8,0,413,8],[12,0,413,12],[19,0,413,19],[21,0,413,21]],[[12,0,414,12],[21,0,414,21],[24,0,414,24],[30,0,414,30],[31,0,414,31],[37,0,414,37],[38,0,414,38],[40,0,414,40],[42,0,414,42],[47,0,414,47],[48,0,414,48],[49,0,414,49]],[[9,0,415,9]],[[13,0,416,13]],[[12,0,417,12],[21,0,417,21],[24,0,417,24],[29,0,417,29],[30,0,417,30]],[[9,0,418,9]],[[8,0,419,8],[14,0,419,14],[26,0,419,26],[29,0,419,29],[38,0,419,38],[39,0,419,39],[52,0,419,52],[53,0,419,53],[54,0,419,54]],[[8,0,420,8],[82,0,420,82]],[[8,0,421,8],[15,0,421,15],[19,0,421,19],[20,0,421,20],[35,0,421,35],[36,0,421,36],[48,0,421,48],[49,0,421,49],[66,0,421,66],[67,0,421,67],[70,0,421,70],[72,0,421,72],[92,0,421,92],[93,0,421,93],[94,0,421,94],[98,0,421,98],[99,0,421,99],[102,0,421,102],[103,0,421,103],[104,0,421,104],[109,0,421,109],[111,0,421,111],[113,0,421,113]],[[12,0,422,12],[101,0,422,101]],[[12,0,423,12],[21,0,423,21],[22,0,423,22],[26,0,423,26],[27,0,423,27],[31,0,423,31],[32,0,423,32],[34,0,423,34],[35,0,423,35],[39,0,423,39],[40,0,423,40],[45,0,423,45],[46,0,423,46],[47,0,423,47],[48,0,423,48],[85,0,423,85]],[[12,0,424,12],[21,0,424,21],[22,0,424,22],[28,0,424,28],[29,0,424,29],[42,0,424,42],[44,0,424,44],[45,0,424,45],[46,0,424,46],[47,0,424,47]],[[12,0,425,12],[16,0,425,16],[17,0,425,17],[54,0,425,54],[55,0,425,55],[64,0,425,64],[66,0,425,66],[71,0,425,71],[72,0,425,72],[73,0,425,73]],[[12,0,426,12],[19,0,426,19],[24,0,426,24],[25,0,426,25]],[[8,0,427,8],[9,0,427,9],[10,0,427,10],[12,0,427,12],[21,0,427,21],[22,0,427,22],[23,0,427,23],[28,0,427,28],[30,0,427,30],[32,0,427,32],[33,0,427,33],[37,0,427,37],[38,0,427,38],[50,0,427,50],[51,0,427,51],[56,0,427,56],[57,0,427,57],[58,0,427,58],[59,0,427,59],[60,0,427,60]],[[4,0,428,4],[5,0,428,5]],[[4,0,429,4]],[],[],[],[],[],[],[[7,0,436,7]],[[4,0,437,4],[30,0,437,30],[31,0,437,31],[36,0,437,36],[38,0,437,38],[53,0,437,53],[55,0,437,55],[75,0,437,75],[78,0,437,78],[80,0,437,80],[82,0,437,82],[89,0,437,89],[92,0,437,92],[97,0,437,97]],[[8,0,438,8],[12,0,438,12],[21,0,438,21],[22,0,438,22]],[[8,0,439,8],[12,0,439,12],[19,0,439,19],[21,0,439,21]],[[12,0,440,12],[21,0,440,21],[24,0,440,24],[30,0,440,30],[31,0,440,31],[37,0,440,37],[38,0,440,38],[40,0,440,40],[42,0,440,42],[47,0,440,47],[48,0,440,48],[49,0,440,49]],[[9,0,441,9]],[[13,0,442,13]],[[12,0,443,12],[21,0,443,21],[24,0,443,24],[29,0,443,29],[30,0,443,30]],[[9,0,444,9]],[[8,0,445,8],[17,0,445,17],[18,0,445,18],[22,0,445,22],[23,0,445,23],[27,0,445,27],[28,0,445,28],[30,0,445,30],[31,0,445,31],[35,0,445,35],[36,0,445,36],[41,0,445,41],[42,0,445,42],[43,0,445,43],[44,0,445,44],[81,0,445,81]],[[8,0,446,8],[14,0,446,14],[27,0,446,27],[30,0,446,30],[39,0,446,39],[40,0,446,40],[46,0,446,46],[47,0,446,47],[48,0,446,48],[52,0,446,52],[54,0,446,54],[55,0,446,55],[57,0,446,57],[59,0,446,59]],[[12,0,447,12],[19,0,447,19],[34,0,447,34],[35,0,447,35],[44,0,447,44],[45,0,447,45],[47,0,447,47],[48,0,447,48],[50,0,447,50],[51,0,447,51],[53,0,447,53],[58,0,447,58],[59,0,447,59],[60,0,447,60],[65,0,447,65],[66,0,447,66],[67,0,447,67],[68,0,447,68]],[[8,0,448,8],[9,0,448,9],[10,0,448,10],[11,0,448,11]],[[8,0,449,8],[62,0,449,62]],[[8,0,450,8],[52,0,450,52]],[[8,0,451,8],[23,0,451,23],[24,0,451,24],[28,0,451,28],[30,0,451,30],[31,0,451,31]],[[8,0,452,8],[13,0,452,13],[17,0,452,17],[18,0,452,18],[21,0,452,21],[36,0,452,36],[37,0,452,37],[43,0,452,43],[46,0,452,46],[47,0,452,47],[49,0,452,49],[50,0,452,50],[54,0,452,54],[55,0,452,55],[57,0,452,57],[58,0,452,58],[60,0,452,60],[62,0,452,62]],[[12,0,453,12],[21,0,453,21],[22,0,453,22],[28,0,453,28],[29,0,453,29],[44,0,453,44],[45,0,453,45],[46,0,453,46],[47,0,453,47],[49,0,453,49],[50,0,453,50],[51,0,453,51],[52,0,453,52]],[[9,0,454,9]],[[8,0,455,8],[14,0,455,14],[25,0,455,25],[28,0,455,28],[30,0,455,30],[31,0,455,31]],[[8,0,456,8],[91,0,456,91]],[[8,0,457,8],[21,0,457,21],[22,0,457,22],[29,0,457,29],[30,0,457,30],[42,0,457,42],[43,0,457,43],[45,0,457,45]],[[12,0,458,12],[18,0,458,18],[22,0,458,22],[25,0,458,25],[29,0,458,29],[30,0,458,30],[56,0,458,56],[57,0,458,57],[69,0,458,69],[70,0,458,70],[87,0,458,87],[88,0,458,88],[91,0,458,91],[93,0,458,93],[113,0,458,113],[114,0,458,114],[115,0,458,115],[119,0,458,119],[120,0,458,120],[124,0,458,124],[125,0,458,125],[126,0,458,126],[127,0,458,127],[128,0,458,128],[129,0,458,129]],[[12,0,459,12],[23,0,459,23],[24,0,459,24],[28,0,459,28],[29,0,459,29],[33,0,459,33],[34,0,459,34],[35,0,459,35]],[[8,0,460,8],[9,0,460,9],[10,0,460,10],[11,0,460,11]],[[8,0,461,8],[15,0,461,15],[23,0,461,23],[24,0,461,24],[35,0,461,35],[36,0,461,36],[37,0,461,37],[41,0,461,41],[42,0,461,42],[46,0,461,46],[47,0,461,47],[48,0,461,48],[49,0,461,49],[51,0,461,51],[54,0,461,54],[55,0,461,55],[56,0,461,56],[69,0,461,69],[71,0,461,71],[73,0,461,73]],[[12,0,462,12],[78,0,462,78]],[[12,0,463,12],[16,0,463,16],[23,0,463,23],[26,0,463,26],[28,0,463,28],[29,0,463,29]],[[12,0,464,12],[25,0,464,25],[26,0,464,26],[33,0,464,33],[34,0,464,34],[38,0,464,38],[39,0,464,39],[41,0,464,41]],[[16,0,465,16],[23,0,465,23],[26,0,465,26],[33,0,465,33],[34,0,465,34],[40,0,465,40],[41,0,465,41],[45,0,465,45],[46,0,465,46],[47,0,465,47]],[[12,0,466,12],[13,0,466,13],[14,0,466,14],[15,0,466,15]],[[12,0,467,12],[19,0,467,19],[26,0,467,26],[27,0,467,27]],[[8,0,468,8],[9,0,468,9],[10,0,468,10],[12,0,468,12],[15,0,468,15],[16,0,468,16],[17,0,468,17],[24,0,468,24],[26,0,468,26],[28,0,468,28],[29,0,468,29],[33,0,468,33],[34,0,468,34],[62,0,468,62],[63,0,468,63],[70,0,468,70],[71,0,468,71],[72,0,468,72],[74,0,468,74],[77,0,468,77],[78,0,468,78],[79,0,468,79],[84,0,468,84],[86,0,468,86],[88,0,468,88],[89,0,468,89],[93,0,468,93],[94,0,468,94],[131,0,468,131],[132,0,468,132],[141,0,468,141],[143,0,468,143],[148,0,468,148],[149,0,468,149],[150,0,468,150],[152,0,468,152],[161,0,468,161],[162,0,468,162],[163,0,468,163],[168,0,468,168],[170,0,468,170],[172,0,468,172],[173,0,468,173],[177,0,468,177],[178,0,468,178],[190,0,468,190],[191,0,468,191],[196,0,468,196],[197,0,468,197],[198,0,468,198],[199,0,468,199],[200,0,468,200]],[[4,0,469,4],[5,0,469,5]],[[4,0,470,4]],[],[],[],[],[],[],[],[[7,0,478,7]],[[4,0,479,4],[41,0,479,41],[42,0,479,42],[47,0,479,47],[49,0,479,49],[54,0,479,54],[57,0,479,57],[67,0,479,67],[68,0,479,68],[72,0,479,72],[73,0,479,73],[75,0,479,75],[76,0,479,76],[85,0,479,85],[86,0,479,86]],[[8,0,480,8],[13,0,480,13],[14,0,480,14],[21,0,480,21],[22,0,480,22],[23,0,480,23],[27,0,480,27],[29,0,480,29],[34,0,480,34],[36,0,480,36],[38,0,480,38]],[[12,0,481,12],[16,0,481,16],[20,0,481,20],[21,0,481,21],[26,0,481,26],[31,0,481,31],[36,0,481,36],[38,0,481,38]],[[16,0,482,16],[20,0,482,20],[21,0,482,21],[26,0,482,26],[29,0,482,29],[34,0,482,34],[35,0,482,35],[36,0,482,36],[111,0,482,111]],[[16,0,483,16],[22,0,483,22],[25,0,483,25],[28,0,483,28],[42,0,483,42],[43,0,483,43],[47,0,483,47],[48,0,483,48],[65,0,483,65],[66,0,483,66],[70,0,483,70],[72,0,483,72],[76,0,483,76],[77,0,483,77],[79,0,483,79],[80,0,483,80],[89,0,483,89],[90,0,483,90],[91,0,483,91]],[[16,0,484,16],[21,0,484,21],[22,0,484,22],[28,0,484,28],[29,0,484,29],[32,0,484,32],[34,0,484,34],[36,0,484,36],[41,0,484,41],[43,0,484,43],[44,0,484,44],[45,0,484,45]],[[13,0,485,13]],[[8,0,486,8],[9,0,486,9],[10,0,486,10],[11,0,486,11]],[[8,0,487,8],[15,0,487,15],[20,0,487,20],[21,0,487,21]],[[4,0,488,4],[5,0,488,5]],[[4,0,489,4],[29,0,489,29],[30,0,489,30],[43,0,489,43],[45,0,489,45],[57,0,489,57],[59,0,489,59],[72,0,489,72],[74,0,489,74],[86,0,489,86],[88,0,489,88],[104,0,489,104],[106,0,489,106],[137,0,489,137],[139,0,489,139],[170,0,489,170],[173,0,489,173],[177,0,489,177],[179,0,489,179],[186,0,489,186],[189,0,489,189],[194,0,489,194]],[[8,0,490,8],[14,0,490,14],[19,0,490,19],[22,0,490,22],[26,0,490,26],[27,0,490,27],[64,0,490,64],[65,0,490,65],[78,0,490,78],[80,0,490,80],[92,0,490,92],[94,0,490,94],[107,0,490,107],[109,0,490,109],[121,0,490,121],[123,0,490,123],[139,0,490,139],[141,0,490,141],[172,0,490,172],[174,0,490,174],[205,0,490,205],[207,0,490,207],[214,0,490,214],[215,0,490,215],[216,0,490,216]],[[8,0,491,8],[15,0,491,15],[19,0,491,19],[20,0,491,20],[32,0,491,32],[33,0,491,33],[38,0,491,38],[39,0,491,39],[40,0,491,40]],[[4,0,492,4],[5,0,492,5]],[[4,0,493,4],[43,0,493,43]],[[4,0,494,4]],[],[],[],[],[[7,0,499,7]],[[4,0,500,4],[11,0,500,11],[12,0,500,12],[18,0,500,18],[20,0,500,20],[40,0,500,40],[43,0,500,43],[45,0,500,45]],[[8,0,501,8],[12,0,501,12],[32,0,501,32],[36,0,501,36],[40,0,501,40],[44,0,501,44],[64,0,501,64],[65,0,501,65],[71,0,501,71],[76,0,501,76],[77,0,501,77],[79,0,501,79]],[[12,0,502,12],[54,0,502,54]],[[12,0,503,12],[19,0,503,19],[23,0,503,23],[24,0,503,24],[26,0,503,26],[27,0,503,27],[33,0,503,33],[34,0,503,34],[40,0,503,40],[41,0,503,41],[42,0,503,42]],[[9,0,504,9]],[[8,0,505,8],[15,0,505,15],[19,0,505,19],[20,0,505,20],[46,0,505,46],[47,0,505,47],[53,0,505,53],[55,0,505,55],[75,0,505,75],[76,0,505,76],[77,0,505,77],[81,0,505,81],[82,0,505,82],[91,0,505,91],[92,0,505,92],[93,0,505,93],[103,0,505,103],[105,0,505,105],[107,0,505,107],[108,0,505,108],[112,0,505,112],[113,0,505,113],[134,0,505,134],[135,0,505,135],[145,0,505,145],[146,0,505,146],[147,0,505,147],[148,0,505,148],[149,0,505,149]],[[4,0,506,4],[5,0,506,5]],[[4,0,507,4]],[],[],[],[],[],[[7,0,513,7]],[[4,0,514,4],[19,0,514,19],[20,0,514,20],[26,0,514,26],[28,0,514,28],[48,0,514,48],[51,0,514,51],[53,0,514,53],[55,0,514,55],[60,0,514,60],[63,0,514,63],[73,0,514,73],[74,0,514,74],[78,0,514,78],[79,0,514,79],[81,0,514,81],[82,0,514,82],[91,0,514,91],[92,0,514,92]],[[8,0,515,8],[12,0,515,12],[32,0,515,32],[36,0,515,36],[40,0,515,40],[44,0,515,44],[64,0,515,64],[65,0,515,65],[71,0,515,71],[76,0,515,76],[77,0,515,77],[79,0,515,79]],[[12,0,516,12],[54,0,516,54]],[[12,0,517,12],[17,0,517,17],[18,0,517,18],[24,0,517,24],[25,0,517,25],[31,0,517,31],[32,0,517,32],[33,0,517,33]],[[12,0,518,12],[19,0,518,19],[21,0,518,21],[22,0,518,22],[27,0,518,27],[28,0,518,28],[29,0,518,29]],[[9,0,519,9]],[[8,0,520,8],[15,0,520,15],[19,0,520,19],[20,0,520,20],[46,0,520,46],[47,0,520,47],[53,0,520,53],[55,0,520,55],[75,0,520,75],[76,0,520,76],[77,0,520,77],[81,0,520,81],[82,0,520,82],[85,0,520,85],[86,0,520,86],[87,0,520,87],[94,0,520,94],[96,0,520,96],[98,0,520,98],[99,0,520,99],[103,0,520,103],[104,0,520,104],[132,0,520,132],[133,0,520,133],[140,0,520,140],[141,0,520,141],[142,0,520,142],[144,0,520,144],[148,0,520,148],[149,0,520,149],[150,0,520,150],[151,0,520,151],[152,0,520,152],[153,0,520,153]],[[4,0,521,4],[5,0,521,5]],[[4,0,522,4],[26,0,522,26],[27,0,522,27],[35,0,522,35]],[[8,0,523,8],[14,0,523,14],[21,0,523,21],[24,0,523,24],[32,0,523,32],[33,0,523,33],[36,0,523,36],[37,0,523,37],[41,0,523,41],[42,0,523,42],[44,0,523,44],[45,0,523,45],[59,0,523,59],[60,0,523,60],[64,0,523,64],[66,0,523,66],[70,0,523,70],[71,0,523,71],[73,0,523,73],[74,0,523,74],[83,0,523,83],[84,0,523,84],[85,0,523,85],[86,0,523,86]],[[8,0,524,8],[15,0,524,15],[19,0,524,19],[20,0,524,20],[41,0,524,41],[42,0,524,42],[49,0,524,49],[50,0,524,50],[51,0,524,51]],[[4,0,525,4],[5,0,525,5]],[[4,0,526,4]],[],[],[],[],[[7,0,531,7]],[[4,0,532,4],[19,0,532,19],[20,0,532,20],[27,0,532,27],[29,0,532,29],[49,0,532,49],[52,0,532,52],[54,0,532,54]],[[8,0,533,8],[12,0,533,12],[32,0,533,32],[36,0,533,36],[40,0,533,40],[44,0,533,44],[64,0,533,64],[65,0,533,65],[71,0,533,71],[76,0,533,76],[77,0,533,77],[79,0,533,79]],[[12,0,534,12],[19,0,534,19],[23,0,534,23],[24,0,534,24],[45,0,534,45],[46,0,534,46],[53,0,534,53],[54,0,534,54],[55,0,534,55]],[[9,0,535,9]],[[8,0,536,8],[14,0,536,14],[26,0,536,26],[29,0,536,29],[31,0,536,31],[32,0,536,32]],[[8,0,537,8],[15,0,537,15],[16,0,537,16],[23,0,537,23],[24,0,537,24],[30,0,537,30],[31,0,537,31],[33,0,537,33]],[[12,0,538,12],[18,0,538,18],[26,0,538,26],[29,0,538,29],[33,0,538,33],[34,0,538,34],[60,0,538,60],[61,0,538,61],[67,0,538,67],[69,0,538,69],[89,0,538,89],[90,0,538,90],[91,0,538,91]],[[12,0,539,12],[24,0,539,24],[25,0,539,25],[29,0,539,29],[30,0,539,30],[38,0,539,38],[39,0,539,39],[40,0,539,40]],[[8,0,540,8],[9,0,540,9],[10,0,540,10],[11,0,540,11]],[[8,0,541,8],[15,0,541,15],[28,0,541,28],[29,0,541,29],[41,0,541,41],[42,0,541,42],[43,0,541,43],[47,0,541,47]],[[8,0,542,8],[44,0,542,44]],[[8,0,543,8],[11,0,543,11],[12,0,543,12],[13,0,543,13],[18,0,543,18],[20,0,543,20],[22,0,543,22]],[[12,0,544,12],[16,0,544,16],[30,0,544,30],[33,0,544,33],[35,0,544,35],[36,0,544,36]],[[12,0,545,12],[17,0,545,17],[18,0,545,18],[25,0,545,25],[26,0,545,26],[30,0,545,30],[31,0,545,31],[33,0,545,33]],[[16,0,546,16],[30,0,546,30],[33,0,546,33],[47,0,546,47],[48,0,546,48],[54,0,546,54],[55,0,546,55],[59,0,546,59],[60,0,546,60],[61,0,546,61]],[[12,0,547,12],[13,0,547,13],[14,0,547,14],[15,0,547,15]],[[12,0,548,12],[19,0,548,19],[33,0,548,33],[34,0,548,34]],[[8,0,549,8],[9,0,549,9],[10,0,549,10]],[[8,0,550,8],[44,0,550,44]],[[8,0,551,8],[17,0,551,17],[18,0,551,18],[19,0,551,19],[29,0,551,29],[31,0,551,31],[33,0,551,33],[34,0,551,34],[38,0,551,38],[39,0,551,39],[60,0,551,60],[61,0,551,61],[71,0,551,71],[72,0,551,72],[73,0,551,73],[74,0,551,74],[75,0,551,75]],[[4,0,552,4],[5,0,552,5]],[[4,0,553,4]],[],[],[],[],[],[],[[7,0,560,7]],[[4,0,561,4],[21,0,561,21],[22,0,561,22],[35,0,561,35],[37,0,561,37],[57,0,561,57],[60,0,561,60],[62,0,561,62]],[[8,0,562,8],[15,0,562,15],[19,0,562,19],[20,0,562,20],[59,0,562,59],[60,0,562,60],[73,0,562,73],[75,0,562,75],[95,0,562,95],[96,0,562,96],[97,0,562,97],[101,0,562,101],[102,0,562,102],[111,0,562,111],[112,0,562,112],[119,0,562,119],[120,0,562,120],[122,0,562,122],[123,0,562,123],[127,0,562,127],[128,0,562,128],[143,0,562,143],[144,0,562,144],[151,0,562,151],[152,0,562,152],[153,0,562,153],[154,0,562,154],[155,0,562,155],[159,0,562,159],[160,0,562,160],[164,0,562,164],[165,0,562,165],[166,0,562,166],[167,0,562,167],[168,0,562,168],[169,0,562,169]],[[4,0,563,4],[5,0,563,5]],[[4,0,564,4]],[],[],[],[],[],[[7,0,570,7]],[[4,0,571,4],[20,0,571,20],[21,0,571,21],[28,0,571,28],[30,0,571,30],[50,0,571,50],[53,0,571,53],[55,0,571,55]],[[8,0,572,8],[14,0,572,14],[20,0,572,20],[23,0,572,23],[37,0,572,37],[38,0,572,38],[45,0,572,45],[47,0,572,47],[51,0,572,51],[52,0,572,52],[54,0,572,54],[55,0,572,55],[64,0,572,64],[65,0,572,65],[66,0,572,66]],[[8,0,573,8],[15,0,573,15],[19,0,573,19],[20,0,573,20],[27,0,573,27],[28,0,573,28],[34,0,573,34],[36,0,573,36],[56,0,573,56],[57,0,573,57],[58,0,573,58]],[[4,0,574,4],[5,0,574,5]],[[4,0,575,4]],[],[],[],[],[],[],[[7,0,582,7]],[[4,0,583,4],[15,0,583,15],[16,0,583,16],[20,0,583,20],[22,0,583,22],[42,0,583,42],[45,0,583,45],[47,0,583,47]],[[8,0,584,8],[14,0,584,14],[21,0,584,21],[24,0,584,24],[28,0,584,28],[29,0,584,29],[58,0,584,58],[59,0,584,59],[63,0,584,63],[65,0,584,65],[85,0,584,85],[86,0,584,86],[87,0,584,87]],[[8,0,585,8],[15,0,585,15],[19,0,585,19],[20,0,585,20],[41,0,585,41],[42,0,585,42],[49,0,585,49],[50,0,585,50],[51,0,585,51],[55,0,585,55]],[[8,0,586,8],[105,0,586,105]],[[8,0,587,8],[73,0,587,73]],[[8,0,588,8],[32,0,588,32]],[[8,0,589,8],[14,0,589,14]],[[8,0,590,8],[12,0,590,12],[13,0,590,13],[14,0,590,14],[15,0,590,15],[16,0,590,16],[17,0,590,17]],[[4,0,591,4],[5,0,591,5]],[[4,0,592,4],[23,0,592,23],[24,0,592,24],[28,0,592,28],[30,0,592,30],[50,0,592,50],[53,0,592,53],[55,0,592,55],[57,0,592,57],[81,0,592,81],[84,0,592,84],[86,0,592,86]],[[8,0,593,8],[99,0,593,99]],[[8,0,594,8],[40,0,594,40]],[[8,0,595,8],[12,0,595,12],[17,0,595,17],[18,0,595,18],[25,0,595,25],[26,0,595,26],[30,0,595,30],[31,0,595,31],[33,0,595,33]],[[12,0,596,12],[18,0,596,18],[28,0,596,28],[31,0,596,31],[33,0,596,33],[34,0,596,34]],[[12,0,597,12],[16,0,597,16],[17,0,597,17],[24,0,597,24],[25,0,597,25],[26,0,597,26],[27,0,597,27],[29,0,597,29]],[[16,0,598,16],[26,0,598,26],[27,0,598,27],[31,0,598,31],[32,0,598,32],[36,0,598,36],[37,0,598,37],[68,0,598,68],[69,0,598,69],[70,0,598,70],[72,0,598,72],[92,0,598,92],[94,0,598,94],[118,0,598,118],[119,0,598,119],[120,0,598,120],[121,0,598,121]],[[12,0,599,12],[13,0,599,13],[14,0,599,14],[15,0,599,15]],[[12,0,600,12],[19,0,600,19],[29,0,600,29],[30,0,600,30]],[[9,0,601,9]],[[13,0,602,13]],[[12,0,603,12],[19,0,603,19],[23,0,603,23],[24,0,603,24],[55,0,603,55],[56,0,603,56],[60,0,603,60],[62,0,603,62],[82,0,603,82],[84,0,603,84],[108,0,603,108],[109,0,603,109],[110,0,603,110]],[[9,0,604,9]],[[4,0,605,4],[5,0,605,5]],[[4,0,606,4],[54,0,606,54]],[[4,0,607,4]],[],[],[],[],[],[],[],[[7,0,615,7]],[[4,0,616,4],[23,0,616,23],[24,0,616,24],[30,0,616,30],[32,0,616,32],[48,0,616,48],[51,0,616,51],[68,0,616,68],[69,0,616,69],[88,0,616,88]],[[8,0,617,8],[15,0,617,15],[19,0,617,19],[20,0,617,20],[22,0,617,22],[23,0,617,23],[26,0,617,26],[27,0,617,27],[33,0,617,33],[34,0,617,34],[35,0,617,35],[39,0,617,39],[40,0,617,40],[43,0,617,43],[44,0,617,44],[45,0,617,45],[53,0,617,53],[55,0,617,55],[57,0,617,57]],[[12,0,618,12],[16,0,618,16],[17,0,618,17],[25,0,618,25],[26,0,618,26],[32,0,618,32],[34,0,618,34],[38,0,618,38],[54,0,618,54],[59,0,618,59],[76,0,618,76],[77,0,618,77],[96,0,618,96],[98,0,618,98]],[[16,0,619,16],[22,0,619,22],[27,0,619,27],[30,0,619,30]],[[20,0,620,20],[24,0,620,24],[26,0,620,26],[44,0,620,44]],[[20,0,621,20],[24,0,621,24],[26,0,621,26],[37,0,621,37]],[[20,0,622,20],[27,0,622,27],[29,0,622,29],[100,0,622,100]],[[20,0,623,20],[26,0,623,26]],[[17,0,624,17],[18,0,624,18]],[[16,0,625,16],[22,0,625,22],[27,0,625,27],[28,0,625,28]],[[13,0,626,13]],[[8,0,627,8],[9,0,627,9],[10,0,627,10],[12,0,627,12],[18,0,627,18],[19,0,627,19],[20,0,627,20],[28,0,627,28],[30,0,627,30],[32,0,627,32]],[[12,0,628,12],[19,0,628,19],[20,0,628,20],[21,0,628,21],[29,0,628,29],[30,0,628,30],[36,0,628,36],[38,0,628,38],[42,0,628,42],[58,0,628,58],[63,0,628,63],[80,0,628,80],[81,0,628,81],[87,0,628,87],[88,0,628,88],[89,0,628,89]],[[8,0,629,8],[9,0,629,9],[10,0,629,10],[12,0,629,12],[15,0,629,15],[16,0,629,16],[17,0,629,17],[25,0,629,25],[27,0,629,27],[29,0,629,29]],[[12,0,630,12],[19,0,630,19],[20,0,630,20],[23,0,630,23],[24,0,630,24],[32,0,630,32],[33,0,630,33],[39,0,630,39],[41,0,630,41],[42,0,630,42],[43,0,630,43]],[[12,0,631,12],[16,0,631,16],[24,0,631,24],[25,0,631,25],[31,0,631,31],[33,0,631,33],[37,0,631,37],[53,0,631,53],[58,0,631,58],[75,0,631,75],[76,0,631,76],[95,0,631,95],[97,0,631,97]],[[16,0,632,16],[22,0,632,22],[26,0,632,26],[29,0,632,29],[37,0,632,37],[38,0,632,38],[42,0,632,42],[44,0,632,44],[45,0,632,45]],[[16,0,633,16],[22,0,633,22],[39,0,633,39],[42,0,633,42]],[[20,0,634,20],[22,0,634,22],[24,0,634,24],[32,0,634,32],[33,0,634,33],[35,0,634,35]],[[20,0,635,20],[23,0,635,23],[25,0,635,25],[33,0,635,33],[34,0,635,34],[37,0,635,37]],[[20,0,636,20],[24,0,636,24],[26,0,636,26],[32,0,636,32],[33,0,636,33],[37,0,636,37]],[[20,0,637,20],[28,0,637,28],[30,0,637,30],[38,0,637,38],[39,0,637,39],[45,0,637,45],[47,0,637,47]],[[20,0,638,20],[36,0,638,36],[38,0,638,38],[46,0,638,46],[47,0,638,47],[55,0,638,55]],[[17,0,639,17],[18,0,639,18]],[[16,0,640,16],[55,0,640,28],[59,0,640,32],[64,0,640,34],[81,0,640,51],[85,0,640,54]],[[13,0,641,13]],[[17,0,642,17],[21,0,642,21],[37,0,642,37],[42,0,642,42],[59,0,642,59],[60,0,642,60],[71,0,642,71],[73,0,642,73],[75,0,642,75],[98,0,642,98]],[[16,0,643,16],[23,0,643,23],[27,0,643,27],[28,0,643,28]],[[13,0,644,13]],[[12,0,645,12],[19,0,645,19],[23,0,645,23],[24,0,645,24]],[[8,0,646,8],[9,0,646,9],[10,0,646,10],[12,0,646,12],[15,0,646,15],[16,0,646,16],[17,0,646,17],[21,0,646,21],[23,0,646,23],[25,0,646,25]],[[12,0,647,12],[16,0,647,16],[20,0,647,20],[24,0,647,24],[28,0,647,28],[30,0,647,30]],[[16,0,648,16],[23,0,648,23],[45,0,648,45],[46,0,648,46],[50,0,648,50],[51,0,648,51],[52,0,648,52]],[[13,0,649,13]],[[17,0,650,17]],[[16,0,651,16],[23,0,651,23],[27,0,651,27],[28,0,651,28]],[[13,0,652,13]],[[8,0,653,8],[9,0,653,9],[10,0,653,10],[11,0,653,11],[12,0,653,12]],[[4,0,654,4],[5,0,654,5]],[[4,0,655,4]],[],[],[],[],[],[[7,0,661,7]],[[4,0,662,4],[30,0,662,30],[31,0,662,31],[37,0,662,37]],[[8,0,663,8]],[],[],[[11,0,666,11]],[[8,0,667,8],[15,0,667,15],[19,0,667,19],[20,0,667,20],[22,0,667,22],[23,0,667,23],[33,0,667,33],[34,0,667,34],[40,0,667,40],[41,0,667,41],[42,0,667,42],[46,0,667,46],[47,0,667,47],[50,0,667,50],[51,0,667,51],[52,0,667,52],[56,0,667,56],[58,0,667,58],[60,0,667,60]],[[12,0,668,12],[19,0,668,19],[23,0,668,23],[24,0,668,24],[28,0,668,28],[29,0,668,29],[32,0,668,32],[33,0,668,33],[41,0,668,41],[42,0,668,42],[44,0,668,44]],[[16,0,669,16],[22,0,669,22],[26,0,669,26],[29,0,669,29],[37,0,669,37],[38,0,669,38],[42,0,669,42],[44,0,669,44],[45,0,669,45]],[[16,0,670,16],[22,0,670,22],[24,0,670,24],[27,0,670,27],[35,0,670,35],[36,0,670,36],[38,0,670,38],[39,0,670,39]],[[16,0,671,16],[22,0,671,22],[25,0,671,25],[28,0,671,28],[36,0,671,36],[37,0,671,37],[40,0,671,40],[41,0,671,41]],[[16,0,672,16],[22,0,672,22],[26,0,672,26],[29,0,672,29],[32,0,672,32],[33,0,672,33],[37,0,672,37],[38,0,672,38]],[[16,0,673,16],[22,0,673,22],[38,0,673,38],[41,0,673,41],[49,0,673,49],[50,0,673,50],[58,0,673,58],[59,0,673,59]],[[16,0,674,16],[22,0,674,22],[39,0,674,39],[42,0,674,42]],[[20,0,675,20],[22,0,675,22]],[[20,0,676,20],[24,0,676,24]],[[20,0,677,20],[23,0,677,23]],[[20,0,678,20],[36,0,678,36]],[[20,0,679,20],[28,0,679,28],[30,0,679,30],[34,0,679,34]],[[17,0,680,17],[18,0,680,18]],[[16,0,681,16],[55,0,681,28],[59,0,681,32],[64,0,681,34],[81,0,681,51],[85,0,681,54]],[[12,0,682,12],[13,0,682,13],[14,0,682,14],[15,0,682,15]],[[8,0,683,8],[9,0,683,9],[10,0,683,10],[12,0,683,12],[15,0,683,15],[16,0,683,16],[17,0,683,17],[22,0,683,22],[24,0,683,24],[26,0,683,26],[27,0,683,27],[32,0,683,32],[33,0,683,33],[36,0,683,36],[37,0,683,37],[41,0,683,41],[42,0,683,42],[44,0,683,44]],[[12,0,684,12],[34,0,684,34],[35,0,684,35],[39,0,684,39],[40,0,684,40],[41,0,684,41]],[[12,0,685,12],[19,0,685,19],[23,0,685,23],[24,0,685,24]],[[8,0,686,8],[9,0,686,9],[10,0,686,10],[11,0,686,11],[12,0,686,12],[13,0,686,13]],[[4,0,687,4],[5,0,687,5]],[[4,0,688,4]],[],[],[],[],[],[],[],[[7,0,696,7]],[[4,0,697,4],[28,0,697,28],[29,0,697,29],[33,0,697,33],[35,0,697,35],[55,0,697,55],[58,0,697,58],[60,0,697,60]],[[8,0,698,8],[12,0,698,12],[16,0,698,16],[20,0,698,20],[24,0,698,24],[26,0,698,26]],[[12,0,699,12],[19,0,699,19],[21,0,699,21],[22,0,699,22],[23,0,699,23],[27,0,699,27],[28,0,699,28],[29,0,699,29],[30,0,699,30]],[[9,0,700,9]],[[8,0,701,8],[12,0,701,12],[32,0,701,32],[33,0,701,33],[39,0,701,39],[43,0,701,43],[44,0,701,44],[46,0,701,46]],[[12,0,702,12],[19,0,702,19],[21,0,702,21],[22,0,702,22],[23,0,702,23],[27,0,702,27],[28,0,702,28],[29,0,702,29],[30,0,702,30]],[[9,0,703,9]],[[8,0,704,8],[14,0,704,14],[33,0,704,33],[36,0,704,36],[38,0,704,38],[39,0,704,39]],[[8,0,705,8],[91,0,705,91]],[[8,0,706,8],[28,0,706,28],[29,0,706,29],[36,0,706,36],[37,0,706,37],[55,0,706,55],[56,0,706,56],[58,0,706,58]],[[12,0,707,12],[18,0,707,18],[32,0,707,32],[35,0,707,35],[39,0,707,39],[53,0,707,53],[54,0,707,54],[70,0,707,70],[71,0,707,71],[75,0,707,75],[76,0,707,76],[93,0,707,93],[94,0,707,94],[97,0,707,97],[99,0,707,99],[117,0,707,117],[118,0,707,118],[122,0,707,122],[123,0,707,123],[124,0,707,124],[125,0,707,125]],[[12,0,708,12],[16,0,708,16],[34,0,708,34],[35,0,708,35],[51,0,708,51],[53,0,708,53]],[[16,0,709,16],[30,0,709,30],[31,0,709,31],[47,0,709,47],[50,0,709,50],[68,0,709,68],[69,0,709,69],[85,0,709,85],[86,0,709,86]],[[16,0,710,16],[100,0,710,100]],[[13,0,711,13]],[[12,0,712,12],[48,0,712,48]],[[12,0,713,12],[98,0,713,98]],[[12,0,714,12],[16,0,714,16]],[[12,0,715,12],[18,0,715,18],[36,0,715,36],[39,0,715,39],[43,0,715,43],[44,0,715,44],[70,0,715,70],[71,0,715,71],[85,0,715,85],[86,0,715,86],[91,0,715,91],[92,0,715,92],[93,0,715,93],[97,0,715,97]],[[12,0,716,12],[115,0,716,115]],[[12,0,717,12],[54,0,717,54]],[[12,0,718,12],[40,0,718,40]],[[12,0,719,12],[44,0,719,44]],[[12,0,720,12],[58,0,720,58]],[[12,0,721,12],[77,0,721,77]],[[12,0,722,12],[20,0,722,20],[21,0,722,21],[22,0,722,22],[27,0,722,27],[29,0,722,29],[31,0,722,31]],[[16,0,723,16],[20,0,723,20],[21,0,723,21],[39,0,723,39],[40,0,723,40],[54,0,723,54],[56,0,723,56]],[[20,0,724,20],[27,0,724,27],[29,0,724,29],[30,0,724,30],[35,0,724,35],[36,0,724,36],[37,0,724,37]],[[17,0,725,17]],[[16,0,726,16],[22,0,726,22],[34,0,726,34],[37,0,726,37],[39,0,726,39],[40,0,726,40]],[[16,0,727,16],[21,0,727,21],[24,0,727,24],[29,0,727,29],[30,0,727,30],[36,0,727,36],[37,0,727,37],[38,0,727,38],[39,0,727,39],[41,0,727,41],[42,0,727,42],[43,0,727,43],[47,0,727,47],[51,0,727,51],[52,0,727,52],[53,0,727,53],[54,0,727,54],[83,0,727,83]],[[16,0,728,16],[21,0,728,21],[22,0,728,22],[29,0,728,29],[30,0,728,30],[31,0,728,31],[38,0,728,38],[40,0,728,40],[42,0,728,42]],[[20,0,729,20],[26,0,729,26],[47,0,729,47],[50,0,729,50],[54,0,729,54],[55,0,729,55],[79,0,729,79],[80,0,729,80],[87,0,729,87],[89,0,729,89],[107,0,729,107],[108,0,729,108],[122,0,729,122],[123,0,729,123],[124,0,729,124]],[[20,0,730,20],[32,0,730,32],[33,0,730,33],[37,0,730,37],[38,0,730,38],[59,0,730,59],[60,0,730,60],[61,0,730,61]],[[16,0,731,16],[17,0,731,17],[18,0,731,18],[19,0,731,19]],[[16,0,732,16],[20,0,732,20],[32,0,732,32],[33,0,732,33],[39,0,732,39],[43,0,732,43],[44,0,732,44],[46,0,732,46]],[[20,0,733,20],[27,0,733,27],[29,0,733,29],[30,0,733,30],[32,0,733,32],[33,0,733,33],[34,0,733,34]],[[17,0,734,17],[18,0,734,18],[67,0,734,67]],[[16,0,735,16],[23,0,735,23],[36,0,735,36],[37,0,735,37],[49,0,735,49],[50,0,735,50],[51,0,735,51],[55,0,735,55]],[[16,0,736,16],[47,0,736,47]],[[17,0,737,17],[18,0,737,18]],[[12,0,738,12],[13,0,738,13],[14,0,738,14],[16,0,738,16],[51,0,738,51]],[[12,0,739,12]],[],[[66,0,741,66]],[[12,0,742,12],[15,0,742,15],[16,0,742,16],[17,0,742,17],[22,0,742,22],[24,0,742,24],[26,0,742,26]],[[16,0,743,16],[22,0,743,22],[27,0,743,27],[30,0,743,30],[48,0,743,48],[49,0,743,49],[54,0,743,54],[59,0,743,59],[68,0,743,68],[69,0,743,69],[70,0,743,70],[71,0,743,71],[89,0,743,89],[90,0,743,90],[95,0,743,95],[96,0,743,96],[97,0,743,97],[98,0,743,98],[102,0,743,102],[103,0,743,103],[115,0,743,115],[116,0,743,116]],[[16,0,744,16],[20,0,744,20],[25,0,744,25],[26,0,744,26],[32,0,744,32],[37,0,744,37],[38,0,744,38],[42,0,744,42],[47,0,744,47],[48,0,744,48],[49,0,744,49],[50,0,744,50],[51,0,744,51],[68,0,744,68],[69,0,744,69],[71,0,744,71],[76,0,744,76],[81,0,744,81],[83,0,744,83]],[[20,0,745,20],[27,0,745,27],[29,0,745,29],[30,0,745,30],[48,0,745,48],[49,0,745,49],[53,0,745,53],[54,0,745,54],[56,0,745,56],[61,0,745,61],[62,0,745,62],[63,0,745,63],[64,0,745,64],[66,0,745,66],[67,0,745,67]],[[17,0,746,17]],[[21,0,747,21]],[[20,0,748,20],[27,0,748,27],[29,0,748,29],[30,0,748,30],[48,0,748,48],[49,0,748,49],[53,0,748,53],[54,0,748,54],[56,0,748,56],[61,0,748,61],[63,0,748,63],[64,0,748,64]],[[17,0,749,17]],[[12,0,750,12],[13,0,750,13],[14,0,750,14],[15,0,750,15],[16,0,750,16]],[[12,0,751,12],[31,0,751,31],[32,0,751,32],[36,0,751,36],[37,0,751,37],[55,0,751,55],[56,0,751,56],[57,0,751,57]],[[8,0,752,8],[9,0,752,9],[10,0,752,10],[11,0,752,11]],[[8,0,753,8],[61,0,753,61]],[[8,0,754,8],[21,0,754,21]],[[8,0,755,8],[15,0,755,15],[28,0,755,28],[29,0,755,29],[48,0,755,48],[49,0,755,49],[50,0,755,50],[54,0,755,54],[55,0,755,55],[58,0,755,58],[59,0,755,59],[60,0,755,60],[75,0,755,75],[77,0,755,77],[79,0,755,79]],[[12,0,756,12],[41,0,756,41]],[[12,0,757,12],[18,0,757,18],[26,0,757,26],[29,0,757,29],[31,0,757,31],[32,0,757,32]],[[12,0,758,12],[27,0,758,27],[28,0,758,28],[35,0,758,35],[36,0,758,36],[37,0,758,37],[51,0,758,51],[53,0,758,53],[55,0,758,55]],[[16,0,759,16],[21,0,759,21],[27,0,759,27],[28,0,759,28],[42,0,759,42],[44,0,759,44],[49,0,759,49],[50,0,759,50],[54,0,759,54],[60,0,759,60],[61,0,759,61],[68,0,759,68],[69,0,759,69],[83,0,759,83],[84,0,759,84],[86,0,759,86]],[[20,0,760,20],[28,0,760,28],[29,0,760,29],[43,0,760,43],[44,0,760,44],[47,0,760,47],[52,0,760,52],[53,0,760,53]],[[17,0,761,17]],[[12,0,762,12],[13,0,762,13],[14,0,762,14],[15,0,762,15]],[[12,0,763,12],[19,0,763,19],[27,0,763,27],[28,0,763,28]],[[8,0,764,8],[9,0,764,9],[10,0,764,10],[12,0,764,12],[15,0,764,15],[16,0,764,16],[17,0,764,17],[21,0,764,21],[23,0,764,23],[25,0,764,25]],[[12,0,765,12],[51,0,765,24],[55,0,765,28],[58,0,765,33],[62,0,765,37],[64,0,765,40]],[[8,0,766,8],[9,0,766,9],[10,0,766,10],[11,0,766,11],[12,0,766,12]],[[4,0,767,4],[5,0,767,5]],[[4,0,768,4]],[],[[7,0,770,7]],[[4,0,771,4],[36,0,771,36],[37,0,771,37],[43,0,771,43],[45,0,771,45],[65,0,771,65],[68,0,771,68],[70,0,771,70],[72,0,771,72],[88,0,771,88],[91,0,771,91],[108,0,771,108],[109,0,771,109],[120,0,771,120]],[[8,0,772,8],[33,0,772,33]],[[8,0,773,8],[15,0,773,15],[19,0,773,19],[20,0,773,20],[39,0,773,39],[40,0,773,40],[46,0,773,46],[48,0,773,48],[64,0,773,64],[65,0,773,65],[66,0,773,66],[70,0,773,70],[71,0,773,71],[79,0,773,79],[80,0,773,80],[81,0,773,81],[85,0,773,85],[87,0,773,87],[89,0,773,89]],[[12,0,774,12],[16,0,774,16],[20,0,774,20],[25,0,774,25],[29,0,774,29],[31,0,774,31]],[[16,0,775,16],[23,0,775,23],[25,0,775,25],[26,0,775,26],[30,0,775,30],[31,0,775,31],[32,0,775,32]],[[13,0,776,13]],[[12,0,777,12],[16,0,777,16],[36,0,777,36],[37,0,777,37],[43,0,777,43],[47,0,777,47],[48,0,777,48],[50,0,777,50]],[[16,0,778,16],[23,0,778,23],[25,0,778,25],[26,0,778,26],[30,0,778,30],[31,0,778,31],[32,0,778,32]],[[13,0,779,13]],[[12,0,780,12],[19,0,780,19],[23,0,780,23],[24,0,780,24],[48,0,780,48],[49,0,780,49],[53,0,780,53],[55,0,780,55],[75,0,780,75],[76,0,780,76],[77,0,780,77]],[[8,0,781,8],[9,0,781,9],[10,0,781,10],[11,0,781,11],[12,0,781,12]],[[4,0,782,4],[5,0,782,5]],[[4,0,783,4]],[],[],[],[],[],[],[],[],[],[],[[7,0,794,7]],[[4,0,795,4],[14,0,795,14],[15,0,795,15],[19,0,795,19],[21,0,795,21],[34,0,795,34],[36,0,795,36],[46,0,795,46],[49,0,795,49],[53,0,795,53],[55,0,795,55],[57,0,795,57]],[[8,0,796,8],[58,0,796,58]],[[8,0,797,8],[12,0,797,12],[16,0,797,16],[17,0,797,17]],[[8,0,798,8],[12,0,798,12],[22,0,798,22],[24,0,798,24]],[[12,0,799,12],[18,0,799,18],[22,0,799,22],[25,0,799,25],[29,0,799,29],[33,0,799,33],[35,0,799,35],[36,0,799,36]],[[12,0,800,12],[16,0,800,16],[19,0,800,19],[33,0,800,33],[34,0,800,34],[38,0,800,38],[40,0,800,40],[45,0,800,45],[47,0,800,47],[51,0,800,51],[52,0,800,52],[53,0,800,53]],[[12,0,801,12],[16,0,801,16],[19,0,801,19],[34,0,801,34],[35,0,801,35],[39,0,801,39],[41,0,801,41],[46,0,801,46],[48,0,801,48],[52,0,801,52],[53,0,801,53],[54,0,801,54]],[[9,0,802,9]],[[8,0,803,8],[12,0,803,12],[14,0,803,14],[19,0,803,19],[28,0,803,28],[30,0,803,30]],[[12,0,804,12],[18,0,804,18],[24,0,804,24],[27,0,804,27],[42,0,804,42],[43,0,804,43],[56,0,804,56],[58,0,804,58],[60,0,804,60],[61,0,804,61],[62,0,804,62]],[[12,0,805,12],[16,0,805,16],[19,0,805,19],[23,0,805,23],[24,0,805,24],[26,0,805,26],[27,0,805,27],[30,0,805,30],[31,0,805,31],[37,0,805,37],[39,0,805,39],[43,0,805,43],[44,0,805,44],[45,0,805,45]],[[9,0,806,9]],[[13,0,807,13]],[[12,0,808,12],[16,0,808,16],[19,0,808,19],[23,0,808,23],[24,0,808,24],[26,0,808,26],[27,0,808,27],[30,0,808,30],[31,0,808,31],[44,0,808,44],[46,0,808,46],[50,0,808,50],[51,0,808,51],[52,0,808,52]],[[9,0,809,9]],[[8,0,810,8],[51,0,810,51]],[[8,0,811,8],[38,0,811,38]],[[8,0,812,8],[114,0,812,114]],[[8,0,813,8],[15,0,813,15]],[[8,0,814,8],[12,0,814,12]],[[8,0,815,8],[12,0,815,12],[15,0,815,15],[19,0,815,19],[20,0,815,20],[24,0,815,24]],[[8,0,816,8],[79,0,816,79]],[[8,0,817,8],[40,0,817,40]],[[8,0,818,8],[40,0,818,40]],[[8,0,819,8],[11,0,819,11],[12,0,819,12],[13,0,819,13],[16,0,819,16],[18,0,819,18],[20,0,819,20]],[[12,0,820,12],[16,0,820,16],[18,0,820,18],[23,0,820,23],[32,0,820,32],[36,0,820,36],[39,0,820,39],[41,0,820,41]],[[16,0,821,16],[22,0,821,22],[26,0,821,26],[29,0,821,29],[32,0,821,32],[33,0,821,33],[37,0,821,37],[38,0,821,38]],[[16,0,822,16],[22,0,822,22],[39,0,822,39],[42,0,822,42]],[[20,0,823,20],[22,0,823,22],[24,0,823,24],[27,0,823,27],[28,0,823,28],[30,0,823,30]],[[20,0,824,20],[24,0,824,24]],[[20,0,825,20],[23,0,825,23]],[[20,0,826,20],[28,0,826,28],[30,0,826,30],[34,0,826,34]],[[17,0,827,17],[18,0,827,18]],[[16,0,828,16],[55,0,828,28],[59,0,828,32],[64,0,828,34],[81,0,828,51],[85,0,828,54]],[[13,0,829,13]],[[17,0,830,17],[19,0,830,19],[87,0,830,87]],[[16,0,831,16],[22,0,831,22],[26,0,831,26],[29,0,831,29],[42,0,831,42],[43,0,831,43],[47,0,831,47],[50,0,831,50],[53,0,831,53],[56,0,831,56],[58,0,831,58],[59,0,831,59]],[[16,0,832,16],[19,0,832,19],[22,0,832,22],[36,0,832,36],[37,0,832,37],[41,0,832,41],[43,0,832,43],[47,0,832,47],[48,0,832,48],[50,0,832,50],[51,0,832,51],[60,0,832,60],[61,0,832,61],[62,0,832,62]],[[16,0,833,16],[22,0,833,22],[39,0,833,39],[42,0,833,42]],[[20,0,834,20],[22,0,834,22],[24,0,834,24],[26,0,834,26]],[[20,0,835,20],[23,0,835,23]],[[20,0,836,20],[24,0,836,24]],[[20,0,837,20],[28,0,837,28],[30,0,837,30],[34,0,837,34]],[[17,0,838,17],[18,0,838,18]],[[16,0,839,16],[55,0,839,28],[59,0,839,32],[64,0,839,34],[81,0,839,51],[85,0,839,54]],[[13,0,840,13]],[[8,0,841,8],[9,0,841,9],[10,0,841,10],[11,0,841,11],[12,0,841,12]],[[8,0,842,8],[15,0,842,15],[19,0,842,19],[20,0,842,20],[24,0,842,24],[25,0,842,25],[29,0,842,29],[30,0,842,30],[31,0,842,31],[32,0,842,32],[33,0,842,33],[34,0,842,34]],[[4,0,843,4],[5,0,843,5]],[[4,0,844,4],[74,0,844,74]],[[4,0,845,4],[17,0,845,17],[18,0,845,18],[22,0,845,22],[24,0,845,24],[30,0,845,30],[32,0,845,32],[49,0,845,49],[52,0,845,52],[56,0,845,56]],[[8,0,846,8],[12,0,846,12],[29,0,846,29],[31,0,846,31]],[[12,0,847,12],[16,0,847,16],[19,0,847,19],[34,0,847,34],[35,0,847,35],[39,0,847,39],[41,0,847,41],[46,0,847,46],[47,0,847,47],[48,0,847,48]],[[9,0,848,9]],[[8,0,849,8],[15,0,849,15],[19,0,849,19],[20,0,849,20],[22,0,849,22],[23,0,849,23],[29,0,849,29],[30,0,849,30],[36,0,849,36],[38,0,849,38],[42,0,849,42],[43,0,849,43],[44,0,849,44]],[[4,0,850,4],[5,0,850,5]],[[4,0,851,4]],[],[[7,0,853,7]],[[4,0,854,4],[27,0,854,27],[28,0,854,28],[32,0,854,32],[34,0,854,34],[40,0,854,40],[42,0,854,42],[62,0,854,62],[65,0,854,65],[67,0,854,67],[69,0,854,69],[86,0,854,86],[89,0,854,89],[93,0,854,93],[95,0,854,95],[100,0,854,100]],[],[[8,0,855,8],[12,0,855,12],[17,0,855,17],[22,0,855,22],[31,0,855,31],[33,0,855,33]],[[12,0,856,12],[17,0,856,17],[20,0,856,20],[30,0,856,30],[31,0,856,31],[35,0,856,35],[36,0,856,36],[38,0,856,38],[39,0,856,39],[48,0,856,48],[49,0,856,49],[50,0,856,50]],[[9,0,857,9]],[[8,0,858,8],[12,0,858,12],[29,0,858,29],[31,0,858,31]],[[12,0,859,12],[16,0,859,16],[19,0,859,19],[34,0,859,34],[35,0,859,35],[39,0,859,39],[41,0,859,41],[46,0,859,46],[47,0,859,47],[48,0,859,48]],[[9,0,860,9]],[[8,0,861,8],[14,0,861,14],[19,0,861,19],[22,0,861,22],[26,0,861,26],[27,0,861,27],[67,0,861,67],[68,0,861,68],[72,0,861,72],[74,0,861,74],[94,0,861,94],[95,0,861,95],[96,0,861,96]],[[8,0,862,8],[14,0,862,14],[24,0,862,24],[27,0,862,27],[32,0,862,32],[33,0,862,33],[43,0,862,43],[44,0,862,44]],[[8,0,863,8],[14,0,863,14],[28,0,863,28],[31,0,863,31],[36,0,863,36],[37,0,863,37],[51,0,863,51],[52,0,863,52]],[[8,0,864,8],[51,0,864,51]],[[8,0,865,8],[13,0,865,13],[14,0,865,14],[20,0,865,20],[21,0,865,21],[27,0,865,27],[29,0,865,29],[39,0,865,39],[40,0,865,40],[41,0,865,41]],[[8,0,866,8],[13,0,866,13],[19,0,866,19],[20,0,866,20],[36,0,866,36],[38,0,866,38],[55,0,866,55],[56,0,866,56],[60,0,866,60],[66,0,866,66],[67,0,866,67],[74,0,866,74],[75,0,866,75],[89,0,866,89],[90,0,866,90],[92,0,866,92]],[[12,0,867,12],[16,0,867,16],[39,0,867,39],[40,0,867,40],[41,0,867,41],[80,0,867,80]],[[12,0,868,12],[16,0,868,16],[24,0,868,24],[25,0,868,25]],[[12,0,869,12],[16,0,869,16],[36,0,869,36],[38,0,869,38]],[[16,0,870,16],[39,0,870,39],[42,0,870,42],[48,0,870,42],[68,0,870,62],[69,0,870,63],[73,0,870,67],[74,0,870,68],[81,0,870,75],[82,0,870,76],[84,0,870,78],[85,0,870,79],[92,0,870,86],[93,0,870,87],[97,0,870,91],[102,0,870,96],[118,0,870,112],[119,0,870,113],[161,0,870,115],[175,0,870,129],[176,0,870,130]],[[16,0,871,16],[24,0,871,24],[27,0,871,27],[33,0,871,27],[53,0,871,47],[54,0,871,48],[58,0,871,52],[59,0,871,53],[66,0,871,60],[67,0,871,61],[69,0,871,63],[70,0,871,64],[77,0,871,71],[78,0,871,72],[82,0,871,76],[87,0,871,81],[103,0,871,97],[104,0,871,98],[146,0,871,100],[151,0,871,105],[152,0,871,106]],[[13,0,872,13]],[[12,0,873,12],[20,0,873,20],[23,0,873,23],[31,0,873,31],[36,0,873,36],[45,0,873,45],[46,0,873,46],[47,0,873,47],[48,0,873,48],[56,0,873,56],[57,0,873,57],[58,0,873,58],[59,0,873,59],[63,0,873,63],[64,0,873,64],[76,0,873,76],[77,0,873,77],[78,0,873,78],[109,0,873,109]],[[12,0,874,12],[82,0,874,82]],[[12,0,875,12],[18,0,875,18],[31,0,875,31],[34,0,875,34],[50,0,875,50],[51,0,875,51],[57,0,875,57],[59,0,875,59],[75,0,875,75],[76,0,875,76],[77,0,875,77]],[[12,0,876,12],[18,0,876,18],[26,0,876,26],[29,0,876,29],[44,0,876,44],[45,0,876,45],[58,0,876,58],[60,0,876,60],[68,0,876,68],[69,0,876,69],[70,0,876,70]],[[12,0,877,12],[17,0,877,17],[20,0,877,20],[24,0,877,24],[25,0,877,25],[48,0,877,48],[49,0,877,49],[66,0,877,66],[68,0,877,68],[76,0,877,76],[78,0,877,78],[101,0,877,101],[103,0,877,103],[120,0,877,120],[122,0,877,122],[127,0,877,127],[128,0,877,128],[129,0,877,129]],[[9,0,878,9]],[[8,0,879,8],[15,0,879,15],[20,0,879,20],[21,0,879,21]],[[4,0,880,4],[5,0,880,5]],[[4,0,881,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,894,7]],[[4,0,895,4],[41,0,895,41],[42,0,895,42],[55,0,895,55],[57,0,895,57],[69,0,895,69],[71,0,895,71],[84,0,895,84],[86,0,895,86],[98,0,895,98],[100,0,895,100],[116,0,895,116],[118,0,895,118],[149,0,895,149],[151,0,895,151],[182,0,895,182],[185,0,895,185],[189,0,895,189],[191,0,895,191],[198,0,895,198],[201,0,895,201],[206,0,895,206]],[[8,0,896,8],[12,0,896,12],[29,0,896,29],[30,0,896,30]],[[8,0,897,8],[12,0,897,12],[28,0,897,28],[29,0,897,29]],[[8,0,898,8],[12,0,898,12],[19,0,898,19],[21,0,898,21]],[[12,0,899,12],[29,0,899,29],[32,0,899,32],[38,0,899,38],[39,0,899,39],[45,0,899,45],[46,0,899,46],[48,0,899,48],[50,0,899,50],[63,0,899,63],[64,0,899,64],[65,0,899,65]],[[12,0,900,12],[28,0,900,28],[31,0,900,31],[37,0,900,37],[38,0,900,38],[44,0,900,44],[45,0,900,45],[47,0,900,47],[49,0,900,49],[61,0,900,61],[62,0,900,62],[63,0,900,63]],[[9,0,901,9]],[[13,0,902,13]],[[12,0,903,12],[29,0,903,29],[32,0,903,32],[45,0,903,45],[46,0,903,46]],[[12,0,904,12],[28,0,904,28],[31,0,904,31],[43,0,904,43],[44,0,904,44]],[[9,0,905,9]],[[8,0,906,8],[25,0,906,25],[26,0,906,26],[43,0,906,43],[45,0,906,45],[61,0,906,61],[63,0,906,63],[76,0,906,76],[78,0,906,78],[90,0,906,90],[91,0,906,91],[92,0,906,92]],[[8,0,907,8],[14,0,907,14],[19,0,907,19],[22,0,907,22],[32,0,907,32],[33,0,907,33],[37,0,907,37],[38,0,907,38],[40,0,907,40],[41,0,907,41],[50,0,907,50],[51,0,907,51],[52,0,907,52]],[[8,0,908,8],[12,0,908,12],[43,0,908,43],[48,0,908,48],[57,0,908,57],[59,0,908,59]],[[12,0,909,12],[18,0,909,18],[27,0,909,27],[30,0,909,30],[46,0,909,46],[47,0,909,47],[59,0,909,59],[60,0,909,60],[61,0,909,61]],[[12,0,910,12],[18,0,910,18],[30,0,910,30],[33,0,910,33],[42,0,910,42],[43,0,910,43],[60,0,910,60],[61,0,910,61],[64,0,910,64],[65,0,910,65]],[[12,0,911,12],[18,0,911,18],[22,0,911,22],[57,0,911,30],[88,0,911,61],[93,0,911,63],[102,0,911,72],[104,0,911,74],[120,0,911,90],[123,0,911,92],[124,0,911,93]],[[12,0,912,12],[16,0,912,16],[17,0,912,17],[24,0,912,24],[26,0,912,26]],[[16,0,913,16],[29,0,913,29],[30,0,913,30],[39,0,913,39],[41,0,913,41],[45,0,913,45],[47,0,913,47],[51,0,913,51],[52,0,913,52],[53,0,913,53]],[[13,0,914,13]],[[12,0,915,12],[16,0,915,16],[47,0,915,47],[49,0,915,49]],[[16,0,916,16],[22,0,916,22],[26,0,916,26],[29,0,916,29],[33,0,916,33],[37,0,916,37],[39,0,916,39],[40,0,916,40]],[[16,0,917,16],[31,0,917,31],[32,0,917,32],[36,0,917,36],[38,0,917,38],[42,0,917,42],[44,0,917,44],[48,0,917,48],[49,0,917,49],[50,0,917,50]],[[16,0,918,16],[20,0,918,20],[21,0,918,21],[28,0,918,28],[30,0,918,30]],[[20,0,919,20],[35,0,919,35],[36,0,919,36],[45,0,919,45],[47,0,919,47],[51,0,919,51],[53,0,919,53],[57,0,919,57],[58,0,919,58],[59,0,919,59]],[[17,0,920,17]],[[13,0,921,13]],[[12,0,922,12],[17,0,922,17],[18,0,922,18],[24,0,922,24],[25,0,922,25],[37,0,922,37],[39,0,922,39],[43,0,922,43],[44,0,922,44],[45,0,922,45]],[[9,0,923,9]],[[8,0,924,8],[14,0,924,14],[39,0,924,39],[42,0,924,42],[58,0,924,58],[59,0,924,59],[64,0,924,64],[65,0,924,65],[77,0,924,77],[78,0,924,78],[79,0,924,79]],[[8,0,925,8],[12,0,925,12],[13,0,925,13],[16,0,925,16],[28,0,925,28],[29,0,925,29]],[[8,0,926,8],[13,0,926,13],[19,0,926,19],[23,0,926,23],[27,0,926,27],[52,0,926,52],[54,0,926,54]],[[12,0,927,12],[25,0,927,25]],[[12,0,928,12],[17,0,928,17],[18,0,928,18],[24,0,928,24],[25,0,928,25],[29,0,928,29],[30,0,928,30],[47,0,928,47],[48,0,928,48],[51,0,928,51],[53,0,928,53],[55,0,928,55],[60,0,928,60],[62,0,928,62],[63,0,928,63],[65,0,928,65],[66,0,928,66],[67,0,928,67]],[[12,0,929,12],[16,0,929,16],[17,0,929,17],[24,0,929,24],[26,0,929,26]],[[16,0,930,16],[20,0,930,20],[21,0,930,21],[26,0,930,26],[29,0,930,29],[30,0,930,30],[31,0,930,31]],[[13,0,931,13]],[[12,0,932,12],[13,0,932,13],[15,0,932,15],[16,0,932,16]],[[9,0,933,9]],[[8,0,934,8],[14,0,934,14],[36,0,934,36],[39,0,934,39],[56,0,934,56],[57,0,934,57],[62,0,934,62],[63,0,934,63],[76,0,934,76],[77,0,934,77],[78,0,934,78]],[[8,0,935,8],[9,0,935,9],[12,0,935,12],[25,0,935,25],[26,0,935,26]],[[8,0,936,8],[13,0,936,13],[19,0,936,19],[23,0,936,23],[27,0,936,27],[49,0,936,49],[51,0,936,51]],[[12,0,937,12],[25,0,937,25]],[[12,0,938,12],[17,0,938,17],[18,0,938,18],[24,0,938,24],[25,0,938,25],[29,0,938,29],[30,0,938,30],[47,0,938,47],[48,0,938,48],[51,0,938,51],[53,0,938,53],[55,0,938,55],[60,0,938,60],[62,0,938,62],[63,0,938,63],[65,0,938,65],[66,0,938,66],[67,0,938,67]],[[12,0,939,12],[16,0,939,16],[17,0,939,17],[24,0,939,24],[26,0,939,26]],[[16,0,940,16],[20,0,940,20],[21,0,940,21],[26,0,940,26],[29,0,940,29],[30,0,940,30],[31,0,940,31]],[[13,0,941,13]],[[12,0,942,12],[13,0,942,13],[15,0,942,15],[16,0,942,16]],[[9,0,943,9]],[[8,0,944,8],[15,0,944,15],[20,0,944,20],[21,0,944,21]],[[4,0,945,4],[5,0,945,5]],[[4,0,946,4]],[],[],[],[[7,0,950,7]],[[4,0,951,4],[25,0,951,25],[26,0,951,26],[33,0,951,33]],[[8,0,952,8],[14,0,952,14],[19,0,952,19],[22,0,952,22],[26,0,952,26],[27,0,952,27],[55,0,952,55],[56,0,952,56],[63,0,952,63],[64,0,952,64],[65,0,952,65]],[[8,0,953,8],[15,0,953,15],[19,0,953,19],[20,0,953,20],[32,0,953,32],[33,0,953,33],[38,0,953,38],[39,0,953,39],[40,0,953,40]],[[4,0,954,4],[5,0,954,5]],[[4,0,955,4],[32,0,955,32],[33,0,955,33],[40,0,955,40],[42,0,955,42],[47,0,955,47],[50,0,955,50],[60,0,955,60],[61,0,955,61],[65,0,955,65],[66,0,955,66],[68,0,955,68],[69,0,955,69],[78,0,955,78],[79,0,955,79]],[[8,0,956,8],[15,0,956,15],[16,0,956,16],[23,0,956,23],[24,0,956,24],[25,0,956,25],[31,0,956,31],[33,0,956,33],[35,0,956,35]],[[12,0,957,12],[17,0,957,17],[18,0,957,18],[24,0,957,24],[25,0,957,25],[31,0,957,31],[32,0,957,32],[33,0,957,33]],[[8,0,958,8],[9,0,958,9],[10,0,958,10],[11,0,958,11]],[[8,0,959,8],[15,0,959,15],[20,0,959,20],[21,0,959,21]],[[4,0,960,4],[5,0,960,5]],[[4,0,961,4]],[],[],[],[],[],[[7,0,967,7]],[[4,0,968,4],[35,0,968,35],[36,0,968,36],[42,0,968,42],[44,0,968,44],[64,0,968,64],[67,0,968,67],[69,0,968,69],[71,0,968,71],[95,0,968,95],[98,0,968,98],[100,0,968,100]],[[8,0,969,8],[95,0,969,95]],[[8,0,970,8],[14,0,970,14],[32,0,970,32],[35,0,970,35],[36,0,970,36],[55,0,970,55],[56,0,970,56],[57,0,970,57],[63,0,970,63],[64,0,970,64],[88,0,970,88],[89,0,970,89],[90,0,970,90]],[[8,0,971,8],[34,0,971,34]],[[8,0,972,8],[13,0,972,13],[19,0,972,19],[36,0,972,36],[40,0,972,40],[58,0,972,58],[60,0,972,60]],[[12,0,973,12],[19,0,973,19],[25,0,973,25],[26,0,973,26],[43,0,973,43],[44,0,973,44],[45,0,973,45]],[[9,0,974,9]],[[8,0,975,8],[28,0,975,28],[29,0,975,29],[36,0,975,36],[37,0,975,37],[40,0,975,40],[41,0,975,41],[43,0,975,43]],[[12,0,976,12],[16,0,976,16],[21,0,976,21],[22,0,976,22],[29,0,976,29],[30,0,976,30],[36,0,976,36],[37,0,976,37],[40,0,976,40],[41,0,976,41],[45,0,976,45],[46,0,976,46],[47,0,976,47],[49,0,976,49],[51,0,976,51],[104,0,976,104]],[[16,0,977,16],[22,0,977,22],[26,0,977,26],[29,0,977,29],[35,0,977,35],[36,0,977,36],[39,0,977,39],[40,0,977,40],[44,0,977,44],[45,0,977,45],[46,0,977,46]],[[16,0,978,16],[20,0,978,20],[21,0,978,21],[28,0,978,28],[29,0,978,29],[30,0,978,30],[31,0,978,31],[33,0,978,33],[34,0,978,34],[36,0,978,36],[38,0,978,38]],[[20,0,979,20],[24,0,979,24],[27,0,979,27],[28,0,979,28],[42,0,979,42],[44,0,979,44]],[[24,0,980,24],[28,0,980,28],[29,0,980,29],[60,0,980,60],[61,0,980,61],[62,0,980,62],[64,0,980,64],[67,0,980,67],[68,0,980,68],[82,0,980,82],[84,0,980,84],[108,0,980,108],[109,0,980,109],[110,0,980,110]],[[21,0,981,21]],[[25,0,982,25]],[[24,0,983,24],[30,0,983,30]],[[24,0,984,24],[29,0,984,29],[35,0,984,35],[52,0,984,52],[56,0,984,56],[74,0,984,74],[76,0,984,76]],[[28,0,985,28],[35,0,985,35],[41,0,985,41],[42,0,985,42],[45,0,985,45],[46,0,985,46],[50,0,985,50],[51,0,985,51],[52,0,985,52],[53,0,985,53],[54,0,985,54],[55,0,985,55],[72,0,985,72],[73,0,985,73],[74,0,985,74]],[[25,0,986,25]],[[21,0,987,21]],[[16,0,988,16],[17,0,988,17],[18,0,988,18],[19,0,988,19]],[[13,0,989,13]],[[17,0,990,17],[19,0,990,19],[52,0,990,52]],[[16,0,991,16],[20,0,991,20],[23,0,991,23],[24,0,991,24],[38,0,991,38],[40,0,991,40]],[[20,0,992,20],[24,0,992,24],[25,0,992,25],[56,0,992,56],[57,0,992,57],[63,0,992,63],[64,0,992,64],[67,0,992,67],[68,0,992,68],[72,0,992,72],[73,0,992,73],[75,0,992,75],[78,0,992,78],[79,0,992,79],[93,0,992,93],[95,0,992,95],[119,0,992,119],[120,0,992,120],[121,0,992,121]],[[17,0,993,17]],[[21,0,994,21]],[[20,0,995,20],[25,0,995,25],[31,0,995,31],[48,0,995,48],[52,0,995,52],[70,0,995,70],[72,0,995,72]],[[24,0,996,24],[31,0,996,31],[37,0,996,37],[38,0,996,38],[41,0,996,41],[42,0,996,42],[46,0,996,46],[47,0,996,47],[48,0,996,48],[65,0,996,65],[66,0,996,66],[67,0,996,67]],[[21,0,997,21]],[[17,0,998,17]],[[13,0,999,13]],[[8,0,1000,8],[9,0,1000,9],[10,0,1000,10],[11,0,1000,11]],[[8,0,1001,8],[15,0,1001,15],[21,0,1001,21],[22,0,1001,22]],[[4,0,1002,4],[5,0,1002,5]],[[4,0,1003,4]],[],[],[],[],[[7,0,1008,7]],[[4,0,1009,4],[30,0,1009,30],[31,0,1009,31],[34,0,1009,34],[36,0,1009,36],[56,0,1009,56],[59,0,1009,59],[61,0,1009,61]],[[8,0,1010,8],[12,0,1010,12],[15,0,1010,15],[27,0,1010,27],[44,0,1010,44],[46,0,1010,46]],[[12,0,1011,12],[19,0,1011,19],[23,0,1011,23],[24,0,1011,24],[56,0,1011,56],[57,0,1011,57],[60,0,1011,60],[62,0,1011,62],[82,0,1011,82],[83,0,1011,83],[84,0,1011,84]],[[9,0,1012,9]],[[13,0,1013,13],[15,0,1013,15],[37,0,1013,37]],[[12,0,1014,12],[19,0,1014,19],[23,0,1014,23],[24,0,1014,24],[63,0,1014,63],[64,0,1014,64],[67,0,1014,67],[69,0,1014,69],[89,0,1014,89],[90,0,1014,90],[91,0,1014,91]],[[9,0,1015,9]],[[4,0,1016,4],[5,0,1016,5]],[[4,0,1017,4],[36,0,1017,36],[37,0,1017,37],[43,0,1017,43],[45,0,1017,45],[65,0,1017,65],[68,0,1017,68],[70,0,1017,70]],[[8,0,1018,8],[15,0,1018,15],[19,0,1018,19],[20,0,1018,20],[33,0,1018,33],[34,0,1018,34],[40,0,1018,40],[42,0,1018,42],[62,0,1018,62],[63,0,1018,63],[64,0,1018,64],[68,0,1018,68],[69,0,1018,69],[73,0,1018,73],[74,0,1018,74],[75,0,1018,75],[76,0,1018,76],[78,0,1018,78],[81,0,1018,81],[82,0,1018,82],[86,0,1018,86],[87,0,1018,87],[89,0,1018,89],[90,0,1018,90],[94,0,1018,94],[95,0,1018,95],[130,0,1018,130],[131,0,1018,131],[135,0,1018,135],[137,0,1018,137],[157,0,1018,157],[158,0,1018,158],[159,0,1018,159]],[[8,0,1019,8],[50,0,1019,50]],[[8,0,1020,8],[11,0,1020,11],[12,0,1020,12],[13,0,1020,13],[21,0,1020,21],[23,0,1020,23],[25,0,1020,25]],[[12,0,1021,12],[19,0,1021,19],[27,0,1021,27]],[[17,0,1022,17],[20,0,1022,20],[21,0,1022,21],[25,0,1022,25],[26,0,1022,26],[28,0,1022,28],[29,0,1022,29],[43,0,1022,43],[44,0,1022,44],[48,0,1022,48],[50,0,1022,50],[54,0,1022,54],[55,0,1022,55],[57,0,1022,57],[58,0,1022,58],[67,0,1022,67],[68,0,1022,68],[69,0,1022,69],[70,0,1022,70]],[[8,0,1023,8],[9,0,1023,9],[10,0,1023,10],[11,0,1023,11],[12,0,1023,12]],[[4,0,1024,4],[5,0,1024,5]],[[4,0,1025,4],[43,0,1025,43],[44,0,1025,44],[57,0,1025,57],[59,0,1025,59],[79,0,1025,79],[82,0,1025,82],[84,0,1025,84]],[[8,0,1026,8],[15,0,1026,15],[19,0,1026,19],[20,0,1026,20],[46,0,1026,46],[47,0,1026,47],[60,0,1026,60],[61,0,1026,61],[62,0,1026,62],[66,0,1026,66]],[[8,0,1027,8],[21,0,1027,21]],[[8,0,1028,8],[12,0,1028,12],[13,0,1028,13],[14,0,1028,14],[15,0,1028,15],[17,0,1028,17],[25,0,1028,25],[26,0,1028,26],[27,0,1028,27],[32,0,1028,32],[34,0,1028,34],[36,0,1028,36]],[[12,0,1029,12],[16,0,1029,16],[28,0,1029,28],[29,0,1029,29]],[[12,0,1030,12],[24,0,1030,24],[27,0,1030,27],[32,0,1030,32],[33,0,1030,33],[36,0,1030,36],[37,0,1030,37],[41,0,1030,41],[42,0,1030,42],[44,0,1030,44],[45,0,1030,45],[49,0,1030,49],[50,0,1030,50],[63,0,1030,63],[64,0,1030,64],[68,0,1030,68],[69,0,1030,69],[86,0,1030,86],[87,0,1030,87],[90,0,1030,90],[92,0,1030,92],[112,0,1030,112],[113,0,1030,113],[114,0,1030,114],[115,0,1030,115]],[[12,0,1031,12],[19,0,1031,19],[32,0,1031,32],[33,0,1031,33],[45,0,1031,45],[46,0,1031,46],[47,0,1031,47]],[[8,0,1032,8],[9,0,1032,9],[10,0,1032,10],[12,0,1032,12],[15,0,1032,15],[16,0,1032,16],[17,0,1032,17],[22,0,1032,22],[24,0,1032,24],[26,0,1032,26]],[[12,0,1033,12],[16,0,1033,16],[21,0,1033,21],[24,0,1033,24],[26,0,1033,26],[27,0,1033,27]],[[12,0,1034,12],[17,0,1034,17],[18,0,1034,18],[25,0,1034,25],[26,0,1034,26],[30,0,1034,30],[31,0,1034,31],[33,0,1034,33]],[[16,0,1035,16],[21,0,1035,21],[24,0,1035,24],[29,0,1035,29],[30,0,1035,30],[36,0,1035,36],[37,0,1035,37],[41,0,1035,41],[42,0,1035,42],[77,0,1035,77],[78,0,1035,78],[82,0,1035,82],[84,0,1035,84],[104,0,1035,104],[105,0,1035,105],[106,0,1035,106],[107,0,1035,107]],[[12,0,1036,12],[13,0,1036,13],[14,0,1036,14],[15,0,1036,15]],[[12,0,1037,12],[19,0,1037,19],[24,0,1037,24],[25,0,1037,25]],[[8,0,1038,8],[9,0,1038,9],[10,0,1038,10],[12,0,1038,12],[15,0,1038,15],[16,0,1038,16],[17,0,1038,17],[25,0,1038,25],[27,0,1038,27],[29,0,1038,29]],[[12,0,1039,12],[19,0,1039,19],[27,0,1039,27]],[[17,0,1040,17],[20,0,1040,20],[21,0,1040,21],[25,0,1040,25],[26,0,1040,26],[28,0,1040,28],[29,0,1040,29],[43,0,1040,43],[44,0,1040,44],[48,0,1040,48],[50,0,1040,50],[54,0,1040,54],[55,0,1040,55],[57,0,1040,57],[58,0,1040,58],[67,0,1040,67],[68,0,1040,68],[69,0,1040,69],[70,0,1040,70]],[[8,0,1041,8],[9,0,1041,9],[10,0,1041,10],[11,0,1041,11],[12,0,1041,12]],[[4,0,1042,4],[5,0,1042,5]],[[4,0,1043,4]],[],[],[],[],[],[],[[7,0,1050,7]],[[4,0,1051,4],[33,0,1051,33],[34,0,1051,34],[38,0,1051,38],[40,0,1051,40],[60,0,1051,60],[63,0,1051,63],[65,0,1051,65]],[[8,0,1052,8],[14,0,1052,14],[19,0,1052,19],[22,0,1052,22],[26,0,1052,26],[27,0,1052,27],[62,0,1052,62],[63,0,1052,63],[67,0,1052,67],[69,0,1052,69],[89,0,1052,89],[90,0,1052,90],[91,0,1052,91]],[[8,0,1053,8],[15,0,1053,15],[20,0,1053,20],[21,0,1053,21],[24,0,1053,24],[25,0,1053,25],[29,0,1053,29],[30,0,1053,30],[32,0,1053,32],[33,0,1053,33],[47,0,1053,47],[48,0,1053,48],[52,0,1053,52],[54,0,1053,54],[58,0,1053,58],[59,0,1053,59],[61,0,1053,61],[62,0,1053,62],[71,0,1053,71],[72,0,1053,72],[73,0,1053,73],[74,0,1053,74]],[[4,0,1054,4],[5,0,1054,5]],[[4,0,1055,4]],[],[[7,0,1057,7]],[[4,0,1058,4],[39,0,1058,39],[40,0,1058,40],[44,0,1058,44],[46,0,1058,46],[66,0,1058,66],[69,0,1058,69],[71,0,1058,71]],[[8,0,1059,8],[12,0,1059,12],[32,0,1059,32],[36,0,1059,36],[40,0,1059,40],[44,0,1059,44],[64,0,1059,64],[65,0,1059,65],[71,0,1059,71],[76,0,1059,76],[77,0,1059,77],[79,0,1059,79]],[[12,0,1060,12],[19,0,1060,19],[20,0,1060,20],[24,0,1060,24],[25,0,1060,25],[42,0,1060,42],[43,0,1060,43],[47,0,1060,47],[48,0,1060,48],[49,0,1060,49]],[[9,0,1061,9]],[[8,0,1062,8],[12,0,1062,12],[20,0,1062,20],[23,0,1062,23],[25,0,1062,25],[26,0,1062,26]],[[8,0,1063,8],[16,0,1063,16],[17,0,1063,17],[21,0,1063,21],[22,0,1063,22],[26,0,1063,26],[27,0,1063,27],[44,0,1063,44],[45,0,1063,45],[49,0,1063,49],[50,0,1063,50],[51,0,1063,51]],[[8,0,1064,8],[28,0,1064,28],[29,0,1064,29],[36,0,1064,36],[37,0,1064,37],[40,0,1064,40],[41,0,1064,41],[43,0,1064,43]],[[12,0,1065,12],[16,0,1065,16],[21,0,1065,21],[22,0,1065,22],[29,0,1065,29],[30,0,1065,30],[34,0,1065,34],[35,0,1065,35],[38,0,1065,38],[39,0,1065,39],[43,0,1065,43],[44,0,1065,44],[45,0,1065,45],[49,0,1065,49],[50,0,1065,50],[53,0,1065,53],[54,0,1065,54],[59,0,1065,59],[61,0,1065,61]],[[16,0,1066,16],[89,0,1066,89]],[[16,0,1067,16],[22,0,1067,22],[27,0,1067,27],[30,0,1067,30],[34,0,1067,34],[35,0,1067,35],[38,0,1067,38],[39,0,1067,39],[43,0,1067,43],[44,0,1067,44],[45,0,1067,45]],[[16,0,1068,16],[21,0,1068,21],[22,0,1068,22],[29,0,1068,29],[30,0,1068,30],[37,0,1068,37],[38,0,1068,38],[40,0,1068,40]],[[20,0,1069,20],[24,0,1069,24],[27,0,1069,27],[28,0,1069,28],[42,0,1069,42],[44,0,1069,44]],[[24,0,1070,24],[32,0,1070,32],[35,0,1070,35],[43,0,1070,43],[44,0,1070,44],[50,0,1070,50],[51,0,1070,51],[55,0,1070,55],[56,0,1070,56],[91,0,1070,91],[92,0,1070,92],[99,0,1070,99],[101,0,1070,101],[104,0,1070,104],[105,0,1070,105],[119,0,1070,119],[120,0,1070,120],[121,0,1070,121],[122,0,1070,122]],[[21,0,1071,21]],[[25,0,1072,25]],[[24,0,1073,24],[32,0,1073,32],[33,0,1073,33],[37,0,1073,37],[38,0,1073,38],[45,0,1073,45],[46,0,1073,46],[63,0,1073,63],[64,0,1073,64],[68,0,1073,68],[69,0,1073,69],[70,0,1073,70]],[[21,0,1074,21]],[[16,0,1075,16],[17,0,1075,17],[18,0,1075,18],[19,0,1075,19]],[[13,0,1076,13]],[[17,0,1077,17],[19,0,1077,19],[52,0,1077,52]],[[16,0,1078,16],[20,0,1078,20],[23,0,1078,23],[24,0,1078,24],[38,0,1078,38],[40,0,1078,40]],[[20,0,1079,20],[28,0,1079,28],[31,0,1079,31],[39,0,1079,39],[40,0,1079,40],[46,0,1079,46],[47,0,1079,47],[51,0,1079,51],[52,0,1079,52],[87,0,1079,87],[88,0,1079,88],[92,0,1079,92],[94,0,1079,94],[97,0,1079,97],[98,0,1079,98],[112,0,1079,112],[113,0,1079,113],[114,0,1079,114],[115,0,1079,115]],[[17,0,1080,17]],[[21,0,1081,21]],[[20,0,1082,20],[26,0,1082,26],[33,0,1082,33],[36,0,1082,36],[40,0,1082,40],[41,0,1082,41],[44,0,1082,44],[45,0,1082,45],[49,0,1082,49],[50,0,1082,50],[51,0,1082,51]],[[20,0,1083,20],[24,0,1083,24],[31,0,1083,31],[35,0,1083,35],[39,0,1083,39],[43,0,1083,43],[49,0,1083,49],[53,0,1083,53],[60,0,1083,60],[61,0,1083,61],[78,0,1083,78],[80,0,1083,80]],[[24,0,1084,24],[32,0,1084,32],[33,0,1084,33],[37,0,1084,37],[38,0,1084,38],[45,0,1084,45],[46,0,1084,46],[63,0,1084,63],[64,0,1084,64],[68,0,1084,68],[69,0,1084,69],[70,0,1084,70]],[[21,0,1085,21]],[[20,0,1086,20],[77,0,1086,77]],[[17,0,1087,17]],[[13,0,1088,13]],[[8,0,1089,8],[9,0,1089,9],[10,0,1089,10],[11,0,1089,11]],[[8,0,1090,8],[15,0,1090,15],[23,0,1090,23],[24,0,1090,24]],[[4,0,1091,4],[5,0,1091,5]],[[4,0,1092,4]],[],[],[[7,0,1095,7]],[[4,0,1096,4],[44,0,1096,44],[45,0,1096,45],[49,0,1096,49],[51,0,1096,51],[71,0,1096,71],[74,0,1096,74],[76,0,1096,76]],[[8,0,1097,8],[61,0,1097,61]],[[8,0,1098,8],[12,0,1098,12],[22,0,1098,22],[25,0,1098,25],[27,0,1098,27],[28,0,1098,28]],[[8,0,1099,8],[14,0,1099,14],[28,0,1099,28],[31,0,1099,31],[33,0,1099,33],[34,0,1099,34]],[[8,0,1100,8],[116,0,1100,116]],[[8,0,1101,8],[30,0,1101,30]],[[8,0,1102,8],[13,0,1102,13],[19,0,1102,19],[20,0,1102,20],[23,0,1102,23],[25,0,1102,25],[30,0,1102,30],[31,0,1102,31],[35,0,1102,35],[41,0,1102,41],[42,0,1102,42],[49,0,1102,49],[50,0,1102,50],[54,0,1102,54],[55,0,1102,55],[57,0,1102,57]],[[12,0,1103,12],[39,0,1103,39]],[[12,0,1104,12],[16,0,1104,16],[36,0,1104,36],[40,0,1104,40],[60,0,1104,60],[61,0,1104,61],[67,0,1104,67],[70,0,1104,70],[71,0,1104,71],[73,0,1104,73]],[[16,0,1105,16],[22,0,1105,22],[41,0,1105,41],[44,0,1105,44],[64,0,1105,64],[65,0,1105,65],[69,0,1105,69],[70,0,1105,70],[77,0,1105,77],[78,0,1105,78],[80,0,1105,80],[81,0,1105,81],[88,0,1105,88],[89,0,1105,89],[93,0,1105,93],[98,0,1105,98],[101,0,1105,101],[102,0,1105,102],[103,0,1105,103]],[[16,0,1106,16],[20,0,1106,20],[39,0,1106,39],[41,0,1106,41]],[[20,0,1107,20],[34,0,1107,34],[35,0,1107,35],[38,0,1107,38],[39,0,1107,39],[42,0,1107,42],[47,0,1107,47],[48,0,1107,48]],[[17,0,1108,17]],[[21,0,1109,21]],[[20,0,1110,20],[30,0,1110,30],[31,0,1110,31],[34,0,1110,34],[35,0,1110,35],[38,0,1110,38],[43,0,1110,43],[44,0,1110,44]],[[17,0,1111,17]],[[13,0,1112,13]],[[17,0,1113,17]],[[16,0,1114,16],[26,0,1114,26],[29,0,1114,29],[33,0,1114,33],[34,0,1114,34]],[[13,0,1115,13]],[[9,0,1116,9]],[[8,0,1117,8],[15,0,1117,15]],[[12,0,1118,12],[22,0,1118,22]],[[12,0,1119,12],[26,0,1119,26]],[[9,0,1120,9],[10,0,1120,10]],[[4,0,1121,4],[5,0,1121,5]],[[4,0,1122,4]],[],[],[],[],[],[],[[7,0,1129,7]],[[4,0,1130,4],[16,0,1130,16],[17,0,1130,17],[22,0,1130,22]],[[8,0,1131,8],[15,0,1131,15],[19,0,1131,19],[20,0,1131,20],[25,0,1131,25],[26,0,1131,26],[32,0,1131,32],[34,0,1131,34],[35,0,1131,35],[36,0,1131,36],[40,0,1131,40],[41,0,1131,41],[45,0,1131,45],[46,0,1131,46],[47,0,1131,47],[48,0,1131,48],[49,0,1131,49],[50,0,1131,50]],[[4,0,1132,4],[5,0,1132,5]],[[1,0,1133,1]],[[0,0,1134,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,1147,3]],[[0,0,1148,0],[6,0,1148,6],[13,0,1148,13],[27,0,1148,27]],[[4,0,1149,4],[16,0,1149,16],[19,0,1149,19]],[[8,0,1150,8],[12,0,1150,12],[13,0,1150,13],[16,0,1150,16],[19,0,1150,19],[22,0,1150,22],[23,0,1150,23]],[[8,0,1151,8],[12,0,1151,12],[13,0,1151,13],[29,0,1151,29],[32,0,1151,32],[34,0,1151,34],[35,0,1151,35]],[[4,0,1152,4],[5,0,1152,5]],[[4,0,1153,4],[55,0,1153,55]],[[4,0,1154,4],[10,0,1154,10],[11,0,1154,11],[19,0,1154,19],[20,0,1154,20],[29,0,1154,29],[31,0,1154,31],[35,0,1154,35]],[[8,0,1155,8],[14,0,1155,14],[17,0,1155,17],[20,0,1155,20],[30,0,1155,30],[31,0,1155,31],[40,0,1155,40],[42,0,1155,42],[46,0,1155,46],[47,0,1155,47],[48,0,1155,48]],[[8,0,1156,8],[15,0,1156,15],[19,0,1156,19],[23,0,1156,23],[24,0,1156,24],[27,0,1156,27],[28,0,1156,28],[29,0,1156,29]],[[4,0,1157,4],[5,0,1157,5]],[[4,0,1158,4],[59,0,1158,59]],[[4,0,1159,4],[8,0,1159,8],[13,0,1159,13]],[[8,0,1160,8],[15,0,1160,15],[20,0,1160,20],[21,0,1160,21],[25,0,1160,25],[26,0,1160,26],[29,0,1160,29],[31,0,1160,31],[34,0,1160,34],[38,0,1160,38],[39,0,1160,39],[55,0,1160,55],[56,0,1160,56],[57,0,1160,57]],[[4,0,1161,4],[5,0,1161,5]],[[4,0,1162,4],[90,0,1162,90]],[[4,0,1163,4],[12,0,1163,12]],[[8,0,1164,8],[15,0,1164,15],[19,0,1164,19],[20,0,1164,20],[27,0,1164,27],[28,0,1164,28],[32,0,1164,32],[33,0,1164,33],[38,0,1164,38],[39,0,1164,39],[40,0,1164,40],[41,0,1164,41]],[[4,0,1165,4],[5,0,1165,5]],[[4,0,1166,4],[9,0,1166,9],[10,0,1166,10],[19,0,1166,19],[21,0,1166,21],[26,0,1166,26],[28,0,1166,28],[33,0,1166,33]],[[8,0,1167,8],[12,0,1167,12],[13,0,1167,13],[29,0,1167,29],[30,0,1167,30],[34,0,1167,34],[35,0,1167,35],[40,0,1167,40],[41,0,1167,41],[50,0,1167,50],[52,0,1167,52],[57,0,1167,57],[59,0,1167,59],[64,0,1167,64],[65,0,1167,65],[66,0,1167,66],[67,0,1167,67]],[[8,0,1168,8],[15,0,1168,15],[19,0,1168,19],[20,0,1168,20]],[[4,0,1169,4],[5,0,1169,5]],[[4,0,1170,4],[11,0,1170,11],[12,0,1170,12],[21,0,1170,21],[23,0,1170,23],[35,0,1170,35]],[[8,0,1171,8],[12,0,1171,12],[13,0,1171,13],[29,0,1171,29],[30,0,1171,30],[34,0,1171,34],[35,0,1171,35],[42,0,1171,42],[43,0,1171,43],[52,0,1171,52],[54,0,1171,54],[66,0,1171,66],[67,0,1171,67],[68,0,1171,68],[69,0,1171,69]],[[8,0,1172,8],[15,0,1172,15],[19,0,1172,19],[20,0,1172,20]],[[4,0,1173,4],[5,0,1173,5]],[[4,0,1174,4],[9,0,1174,9],[10,0,1174,10],[16,0,1174,16]],[[8,0,1175,8],[12,0,1175,12],[13,0,1175,13],[29,0,1175,29],[30,0,1175,30],[34,0,1175,34],[35,0,1175,35],[40,0,1175,40],[41,0,1175,41],[47,0,1175,47],[48,0,1175,48],[49,0,1175,49],[50,0,1175,50]],[[8,0,1176,8],[15,0,1176,15],[19,0,1176,19],[20,0,1176,20]],[[4,0,1177,4],[5,0,1177,5]],[[4,0,1178,4],[15,0,1178,15],[16,0,1178,16],[22,0,1178,22]],[[8,0,1179,8],[12,0,1179,12],[13,0,1179,13],[29,0,1179,29],[30,0,1179,30],[34,0,1179,34],[35,0,1179,35],[46,0,1179,46],[47,0,1179,47],[53,0,1179,53],[54,0,1179,54],[55,0,1179,55],[56,0,1179,56]],[[8,0,1180,8],[15,0,1180,15],[19,0,1180,19],[20,0,1180,20]],[[4,0,1181,4],[5,0,1181,5]],[[4,0,1182,4],[11,0,1182,11],[12,0,1182,12],[20,0,1182,20],[22,0,1182,22],[25,0,1182,25],[36,0,1182,36]],[[8,0,1183,8],[12,0,1183,12],[20,0,1183,20],[22,0,1183,22]],[[12,0,1184,12],[16,0,1184,16],[17,0,1184,17],[33,0,1184,33],[34,0,1184,34],[38,0,1184,38],[39,0,1184,39],[46,0,1184,46],[47,0,1184,47],[55,0,1184,55],[56,0,1184,56],[57,0,1184,57],[58,0,1184,58]],[[9,0,1185,9]],[[13,0,1186,13],[17,0,1186,17],[28,0,1186,28],[30,0,1186,30]],[[12,0,1187,12],[16,0,1187,16],[17,0,1187,17],[33,0,1187,33],[34,0,1187,34],[38,0,1187,38],[39,0,1187,39],[46,0,1187,46],[47,0,1187,47],[50,0,1187,50],[61,0,1187,61],[62,0,1187,62],[63,0,1187,63],[64,0,1187,64]],[[9,0,1188,9]],[[8,0,1189,8],[15,0,1189,15],[19,0,1189,19],[20,0,1189,20]],[[4,0,1190,4],[5,0,1190,5]],[[4,0,1191,4],[14,0,1191,14],[15,0,1191,15],[23,0,1191,23],[25,0,1191,25],[28,0,1191,28],[39,0,1191,39]],[[8,0,1192,8],[12,0,1192,12],[20,0,1192,20],[22,0,1192,22]],[[12,0,1193,12],[16,0,1193,16],[17,0,1193,17],[33,0,1193,33],[34,0,1193,34],[38,0,1193,38],[39,0,1193,39],[49,0,1193,49],[50,0,1193,50],[58,0,1193,58],[59,0,1193,59],[60,0,1193,60],[61,0,1193,61]],[[9,0,1194,9]],[[13,0,1195,13],[17,0,1195,17],[28,0,1195,28],[30,0,1195,30]],[[12,0,1196,12],[16,0,1196,16],[17,0,1196,17],[33,0,1196,33],[34,0,1196,34],[38,0,1196,38],[39,0,1196,39],[49,0,1196,49],[50,0,1196,50],[53,0,1196,53],[64,0,1196,64],[65,0,1196,65],[66,0,1196,66],[67,0,1196,67]],[[9,0,1197,9]],[[8,0,1198,8],[15,0,1198,15],[19,0,1198,19],[20,0,1198,20]],[[4,0,1199,4],[5,0,1199,5]],[[4,0,1200,4],[9,0,1200,9],[10,0,1200,10],[18,0,1200,18],[20,0,1200,20],[23,0,1200,23],[34,0,1200,34]],[[8,0,1201,8],[12,0,1201,12],[20,0,1201,20],[22,0,1201,22]],[[12,0,1202,12],[16,0,1202,16],[17,0,1202,17],[33,0,1202,33],[34,0,1202,34],[38,0,1202,38],[39,0,1202,39],[44,0,1202,44],[45,0,1202,45],[53,0,1202,53],[54,0,1202,54],[55,0,1202,55],[56,0,1202,56]],[[9,0,1203,9]],[[13,0,1204,13],[17,0,1204,17],[28,0,1204,28],[30,0,1204,30]],[[12,0,1205,12],[16,0,1205,16],[17,0,1205,17],[33,0,1205,33],[34,0,1205,34],[38,0,1205,38],[39,0,1205,39],[44,0,1205,44],[45,0,1205,45],[48,0,1205,48],[59,0,1205,59],[60,0,1205,60],[61,0,1205,61],[62,0,1205,62]],[[9,0,1206,9]],[[8,0,1207,8],[15,0,1207,15],[19,0,1207,19],[20,0,1207,20]],[[4,0,1208,4],[5,0,1208,5]],[[4,0,1209,4],[13,0,1209,13],[14,0,1209,14],[22,0,1209,22],[24,0,1209,24],[27,0,1209,27],[38,0,1209,38]],[[8,0,1210,8],[12,0,1210,12],[20,0,1210,20],[22,0,1210,22]],[[12,0,1211,12],[16,0,1211,16],[17,0,1211,17],[33,0,1211,33],[34,0,1211,34],[38,0,1211,38],[39,0,1211,39],[48,0,1211,48],[49,0,1211,49],[57,0,1211,57],[58,0,1211,58],[59,0,1211,59],[60,0,1211,60]],[[9,0,1212,9]],[[13,0,1213,13],[17,0,1213,17],[28,0,1213,28],[30,0,1213,30]],[[12,0,1214,12],[16,0,1214,16],[17,0,1214,17],[33,0,1214,33],[34,0,1214,34],[38,0,1214,38],[39,0,1214,39],[48,0,1214,48],[49,0,1214,49],[52,0,1214,52],[63,0,1214,63],[64,0,1214,64],[65,0,1214,65],[66,0,1214,66]],[[9,0,1215,9]],[[8,0,1216,8],[15,0,1216,15],[19,0,1216,19],[20,0,1216,20]],[[4,0,1217,4],[5,0,1217,5]],[[1,0,1218,1]],[[0,0,1219,0],[134626,0,1219,134626]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1829,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","start":12,"end":1706},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":1708,"end":1829}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"sub-collection-query.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/sub-collection-query.ts"],"names":[],"mappings":[[[0,0,0,0],[69,0,0,69]]],"sourcesContent":["/* For Listening to a Doc and multiple sub collections in that doc */\r\n\r\nimport {QueryConstraint} from 'firebase/firestore';\r\n\r\n/**\r\n * For Listening to a Document and multiple sub Collections in that Document\r\n */\r\n\r\nexport interface SubCollectionQuery {\r\n\r\n  /** the name of the subCollection to be read. */\r\n  name: string;\r\n\r\n  /** Specified Document name if multiple documents in collection is not used */\r\n  docId?: string;\r\n\r\n  /** Any SubCollections to be read in the Collection */\r\n  subCollections?: SubCollectionQuery[];\r\n\r\n  /**\r\n   *\r\n   * The Collection QueryFn.\r\n   *\r\n   * Example:\r\n   * const query = ref.where('type', '==', 'Book')\r\n   *                  .where('price', '>' 18.00)\r\n   *                  .where('price', '<' 100.00)\r\n   *                  .where('category', '==', 'Fiction')\r\n   *                  .where('publisher', '==', 'BigPublisher')\r\n   *\r\n   */\r\n  // queryFn?: QueryFn;\r\n  queryConstraints?: QueryConstraint[];\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,2,0],[1694,0,2,1694]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8129,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViQ29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXHJcbiAgICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YkNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","start":12,"end":8006},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":8008,"end":8129}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViQ29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXHJcbiAgICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YkNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViQ29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXHJcbiAgICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YkNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[7994,0,1,7994]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2925,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","start":12,"end":2802},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":2804,"end":2925}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[],[[0,0,1,0],[2790,0,1,2790]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4564,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":28,"imported":{"type":"Identifier","start":24,"end":28,"name":"noop"},"local":{"type":"Identifier","start":24,"end":28,"name":"noop"}}],"source":{"type":"Literal","start":36,"end":42,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":45,"end":98,"specifiers":[{"type":"ImportSpecifier","start":54,"end":57,"imported":{"type":"Identifier","start":54,"end":57,"name":"map"},"local":{"type":"Identifier","start":54,"end":57,"name":"map"}},{"type":"ImportSpecifier","start":59,"end":68,"imported":{"type":"Identifier","start":59,"end":68,"name":"startWith"},"local":{"type":"Identifier","start":59,"end":68,"name":"startWith"}},{"type":"ImportSpecifier","start":70,"end":73,"imported":{"type":"Identifier","start":70,"end":73,"name":"tap"},"local":{"type":"Identifier","start":70,"end":73,"name":"tap"}}],"source":{"type":"Literal","start":81,"end":97,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":100,"end":128,"declarations":[{"type":"VariableDeclarator","start":106,"end":127,"id":{"type":"Identifier","start":106,"end":109,"name":"nop"},"init":{"type":"ArrowFunctionExpression","start":112,"end":127,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":118,"end":127,"callee":{"type":"Identifier","start":118,"end":121,"name":"tap"},"arguments":[{"type":"Identifier","start":122,"end":126,"name":"noop"}],"optional":false}}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":512,"end":924,"declaration":{"type":"VariableDeclaration","start":519,"end":924,"declarations":[{"type":"VariableDeclarator","start":525,"end":923,"id":{"type":"Identifier","start":525,"end":546,"name":"combineLatestToObject"},"init":{"type":"ArrowFunctionExpression","start":549,"end":923,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":550,"end":561,"name":"observables"}],"body":{"type":"BlockStatement","start":566,"end":923,"body":[{"type":"VariableDeclaration","start":573,"end":611,"declarations":[{"type":"VariableDeclarator","start":579,"end":610,"id":{"type":"Identifier","start":579,"end":583,"name":"keys"},"init":{"type":"CallExpression","start":586,"end":610,"callee":{"type":"MemberExpression","start":586,"end":597,"object":{"type":"Identifier","start":586,"end":592,"name":"Object"},"property":{"type":"Identifier","start":593,"end":597,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":598,"end":609,"name":"observables"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":617,"end":920,"argument":{"type":"CallExpression","start":624,"end":919,"callee":{"type":"MemberExpression","start":624,"end":817,"object":{"type":"CallExpression","start":624,"end":812,"callee":{"type":"Identifier","start":624,"end":637,"name":"combineLatest"},"arguments":[{"type":"CallExpression","start":638,"end":811,"callee":{"type":"MemberExpression","start":638,"end":646,"object":{"type":"Identifier","start":638,"end":642,"name":"keys"},"property":{"type":"Identifier","start":643,"end":646,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":647,"end":810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":647,"end":648,"name":"k"}],"body":{"type":"BlockStatement","start":652,"end":810,"body":[{"type":"VariableDeclaration","start":663,"end":690,"declarations":[{"type":"VariableDeclarator","start":669,"end":689,"id":{"type":"Identifier","start":669,"end":672,"name":"obs"},"init":{"type":"MemberExpression","start":675,"end":689,"object":{"type":"Identifier","start":675,"end":686,"name":"observables"},"property":{"type":"Identifier","start":687,"end":688,"name":"k"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":700,"end":803,"argument":{"type":"ConditionalExpression","start":707,"end":802,"test":{"type":"CallExpression","start":707,"end":725,"callee":{"type":"MemberExpression","start":707,"end":720,"object":{"type":"Identifier","start":707,"end":712,"name":"Array"},"property":{"type":"Identifier","start":713,"end":720,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":721,"end":724,"name":"obs"}],"optional":false},"consequent":{"type":"CallExpression","start":741,"end":771,"callee":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"MemberExpression","start":741,"end":747,"object":{"type":"Identifier","start":741,"end":744,"name":"obs"},"property":{"type":"Literal","start":745,"end":746,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":748,"end":752,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":753,"end":770,"callee":{"type":"Identifier","start":753,"end":762,"name":"startWith"},"arguments":[{"type":"MemberExpression","start":763,"end":769,"object":{"type":"Identifier","start":763,"end":766,"name":"obs"},"property":{"type":"Literal","start":767,"end":768,"value":1,"raw":"1"},"computed":true,"optional":false}],"optional":false}],"optional":false},"alternate":{"type":"CallExpression","start":787,"end":802,"callee":{"type":"MemberExpression","start":787,"end":795,"object":{"type":"Identifier","start":787,"end":790,"name":"obs"},"property":{"type":"Identifier","start":791,"end":795,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":796,"end":801,"callee":{"type":"Identifier","start":796,"end":799,"name":"nop"},"arguments":[],"optional":false}],"optional":false}}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":813,"end":817,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":818,"end":918,"callee":{"type":"Identifier","start":818,"end":821,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":822,"end":917,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":822,"end":823,"name":"b"}],"body":{"type":"CallExpression","start":827,"end":917,"callee":{"type":"MemberExpression","start":827,"end":835,"object":{"type":"Identifier","start":827,"end":828,"name":"b"},"property":{"type":"Identifier","start":829,"end":835,"name":"reduce"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":836,"end":912,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":837,"end":840,"name":"acc"},{"type":"Identifier","start":842,"end":845,"name":"val"},{"type":"Identifier","start":847,"end":848,"name":"i"}],"body":{"type":"CallExpression","start":854,"end":911,"callee":{"type":"MemberExpression","start":854,"end":867,"object":{"type":"Identifier","start":854,"end":860,"name":"Object"},"property":{"type":"Identifier","start":861,"end":867,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":868,"end":890,"callee":{"type":"MemberExpression","start":868,"end":881,"object":{"type":"Identifier","start":868,"end":874,"name":"Object"},"property":{"type":"Identifier","start":875,"end":881,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":882,"end":884,"properties":[]},{"type":"Identifier","start":886,"end":889,"name":"acc"}],"optional":false},{"type":"ObjectExpression","start":892,"end":910,"properties":[{"type":"Property","start":894,"end":908,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":895,"end":902,"object":{"type":"Identifier","start":895,"end":899,"name":"keys"},"property":{"type":"Identifier","start":900,"end":901,"name":"i"},"computed":true,"optional":false},"value":{"type":"Identifier","start":905,"end":908,"name":"val"},"kind":"init"}]}],"optional":false}},{"type":"ObjectExpression","start":914,"end":916,"properties":[]}],"optional":false}}],"optional":false}],"optional":false}}]}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","start":926,"end":4432},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/rxjs-ops/module.js.map","start":4434,"end":4564}]},"code":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => (Object.assign(Object.assign({}, acc), { [keys[i]]: val })), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/rxjs-ops/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","originalSourcemap":{"version":3,"file":"combine-latest-to-object.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/rxjs-ops/combine-latest-to-object.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,42],[36,0,0,48],[42,0,0,54],[43,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[12,0,1,11],[14,0,1,13],[23,0,1,22],[25,0,1,24],[28,0,1,27],[30,0,1,29],[36,0,1,35],[52,0,1,51],[53,0,1,52]],[[0,0,13,0],[6,0,13,6],[9,0,13,9],[12,0,13,12],[15,0,13,18],[17,0,13,20],[18,0,13,21],[21,0,13,24],[22,0,13,28],[26,0,13,32],[27,0,13,33],[28,0,13,34]],[[0,0,15,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[7,0,35,7],[13,0,35,13],[34,0,35,34],[37,0,35,37],[38,0,39,4],[49,0,39,20],[51,0,39,40],[53,0,39,42]],[[4,0,40,2],[10,0,40,8],[14,0,40,12],[17,0,40,15],[23,0,40,21],[24,0,40,22],[28,0,40,26],[29,0,40,27],[40,0,40,38],[41,0,40,39],[42,0,40,40]],[[4,0,42,2],[11,0,42,9],[24,0,42,22],[25,0,43,4],[29,0,43,8],[30,0,43,9],[33,0,43,12],[34,0,43,13],[35,0,43,14],[36,0,43,15],[38,0,43,17]],[[8,0,44,6],[14,0,44,12],[17,0,44,15],[20,0,44,18],[31,0,44,29],[32,0,44,30],[33,0,44,31],[34,0,44,32],[35,0,44,33]],[[8,0,46,6],[15,0,46,13],[20,0,46,18],[21,0,46,19],[28,0,46,26],[29,0,46,27],[32,0,46,30],[33,0,46,31]],[[12,0,47,8],[13,0,47,9],[14,0,47,10],[17,0,47,13],[18,0,47,14],[19,0,47,15],[20,0,47,16],[21,0,47,17],[25,0,47,21],[26,0,47,22],[35,0,47,31],[36,0,47,32],[39,0,47,35],[40,0,47,36],[41,0,47,37],[42,0,47,38],[43,0,47,39],[44,0,47,40]],[[12,0,48,8],[13,0,48,9],[14,0,48,10],[17,0,48,13],[18,0,48,14],[22,0,48,18],[23,0,48,20],[26,0,48,23],[28,0,48,25],[29,0,48,26],[30,0,48,27]],[[4,0,49,4],[5,0,49,5],[6,0,49,6],[7,0,50,3],[8,0,50,4],[12,0,50,8],[13,0,51,4],[16,0,51,7],[17,0,51,8],[18,0,51,9],[19,0,51,10],[21,0,51,12],[22,0,51,13],[23,0,51,14],[24,0,51,15],[30,0,51,21],[31,0,51,22],[32,0,51,23],[35,0,51,26],[37,0,51,28],[40,0,51,31],[42,0,51,33],[43,0,51,34],[45,0,51,36],[47,0,51,38],[48,0,51,39],[49,0,51,40],[51,0,51,42],[54,0,51,45],[57,0,51,48],[59,0,51,50],[60,0,51,51],[64,0,51,55],[65,0,51,56],[66,0,51,57],[67,0,51,58],[68,0,51,59],[70,0,51,61],[73,0,51,64],[75,0,51,66],[76,0,51,67],[78,0,51,69],[80,0,51,71],[81,0,51,72],[82,0,51,73],[83,0,52,3],[84,0,52,4]],[[0,0,53,0],[1,0,53,1],[2,0,53,2]]],"sourcesContent":["import { combineLatest, noop, Observable } from 'rxjs';\r\nimport {map, startWith, tap } from 'rxjs/operators';\r\n\r\nexport interface OperatorDict<X> {\r\n  [key: string]: Observable<X> | [Observable<X>, X];\r\n}\r\n\r\n/**\r\n * Extracts the type `T` of an `Observable<T>`\r\n */\r\nexport type ExtractObservableType<A> = A extends Observable<infer B> ? B : never;\r\n\r\n\r\nconst nop = <T>() => tap<T>(noop);\r\n\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = <\r\n  TIn extends OperatorDict<any>, TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K]> }\r\n  // TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K] extends Array<any> ? TIn[K][0] : TIn[K]> }\r\n\r\n  >(observables: TIn): Observable<TOut> => {\r\n  const keys = Object.keys(observables);\r\n\r\n  return combineLatest(\r\n    keys.map(k => {\r\n      const obs = observables[k];\r\n\r\n      return Array.isArray(obs)\r\n        ? obs[0].pipe(startWith(obs[1]))\r\n        : obs.pipe( nop());\r\n    }),\r\n  ).pipe(\r\n    map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {}))\r\n  );\r\n};\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,30],[36,0,0,36],[42,0,0,42],[43,0,0,43]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[12,0,1,12],[14,0,1,14],[23,0,1,23],[25,0,1,25],[28,0,1,28],[30,0,1,30],[36,0,1,36],[52,0,1,52],[53,0,1,53]],[[0,0,2,0],[6,0,2,6],[9,0,2,9],[12,0,2,12],[15,0,2,15],[17,0,2,17],[18,0,2,18],[21,0,2,21],[22,0,2,22],[26,0,2,26],[27,0,2,27],[28,0,2,28]],[[0,0,3,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,22,3]],[[0,0,23,0],[6,0,23,6],[7,0,23,7],[13,0,23,13],[34,0,23,34],[37,0,23,37],[38,0,23,38],[49,0,23,49],[51,0,23,51],[53,0,23,53]],[[4,0,24,4],[10,0,24,10],[14,0,24,14],[17,0,24,17],[23,0,24,23],[24,0,24,24],[28,0,24,28],[29,0,24,29],[40,0,24,40],[41,0,24,41],[42,0,24,42]],[[4,0,25,4],[11,0,25,11],[24,0,25,24],[25,0,25,25],[29,0,25,29],[30,0,25,30],[33,0,25,33],[34,0,25,34],[35,0,25,35],[36,0,25,36],[38,0,25,38]],[[8,0,26,8],[14,0,26,14],[17,0,26,17],[20,0,26,20],[31,0,26,31],[32,0,26,32],[33,0,26,33],[34,0,26,34],[35,0,26,35]],[[8,0,27,8],[15,0,27,15],[20,0,27,20],[21,0,27,21],[28,0,27,28],[29,0,27,29],[32,0,27,32],[33,0,27,33]],[[12,0,28,12],[13,0,28,13],[14,0,28,14],[17,0,28,17],[18,0,28,18],[19,0,28,19],[20,0,28,20],[21,0,28,21],[25,0,28,25],[26,0,28,26],[35,0,28,35],[36,0,28,36],[39,0,28,39],[40,0,28,40],[41,0,28,41],[42,0,28,42],[43,0,28,43],[44,0,28,44]],[[12,0,29,12],[13,0,29,13],[14,0,29,14],[17,0,29,17],[18,0,29,18],[22,0,29,22],[23,0,29,23],[26,0,29,26],[28,0,29,28],[29,0,29,29],[30,0,29,30]],[[4,0,30,4],[5,0,30,5],[6,0,30,6],[7,0,30,7],[8,0,30,8],[12,0,30,12],[13,0,30,13],[16,0,30,16],[17,0,30,17],[18,0,30,18],[19,0,30,19],[21,0,30,21],[22,0,30,22],[23,0,30,23],[24,0,30,24],[30,0,30,30],[31,0,30,31],[32,0,30,32],[35,0,30,35],[37,0,30,37],[40,0,30,40],[42,0,30,42],[43,0,30,43],[45,0,30,45],[47,0,30,47],[48,0,30,48],[81,0,30,54],[84,0,30,57],[89,0,30,59],[90,0,30,60],[94,0,30,64],[95,0,30,65],[96,0,30,66],[97,0,30,67],[98,0,30,68],[100,0,30,70],[103,0,30,73],[107,0,30,76],[109,0,30,78],[111,0,30,80],[112,0,30,81],[113,0,30,82],[114,0,30,83],[115,0,30,84]],[[0,0,31,0],[1,0,31,1],[2,0,31,2]],[[0,0,32,0],[3506,0,32,3506]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5963,"body":[{"type":"ImportDeclaration","start":0,"end":28,"specifiers":[{"type":"ImportSpecifier","start":9,"end":13,"imported":{"type":"Identifier","start":9,"end":13,"name":"from"},"local":{"type":"Identifier","start":9,"end":13,"name":"from"}}],"source":{"type":"Literal","start":21,"end":27,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":30,"end":68,"specifiers":[{"type":"ImportSpecifier","start":39,"end":43,"imported":{"type":"Identifier","start":39,"end":43,"name":"take"},"local":{"type":"Identifier","start":39,"end":43,"name":"take"}}],"source":{"type":"Literal","start":51,"end":67,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":70,"end":176,"specifiers":[{"type":"ImportSpecifier","start":79,"end":85,"imported":{"type":"Identifier","start":79,"end":85,"name":"addDoc"},"local":{"type":"Identifier","start":79,"end":85,"name":"addDoc"}},{"type":"ImportSpecifier","start":87,"end":96,"imported":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"},"local":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"}},{"type":"ImportSpecifier","start":98,"end":104,"imported":{"type":"Identifier","start":98,"end":104,"name":"getDoc"},"local":{"type":"Identifier","start":98,"end":104,"name":"getDoc"}},{"type":"ImportSpecifier","start":106,"end":113,"imported":{"type":"Identifier","start":106,"end":113,"name":"getDocs"},"local":{"type":"Identifier","start":106,"end":113,"name":"getDocs"}},{"type":"ImportSpecifier","start":115,"end":127,"imported":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"},"local":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"}},{"type":"ImportSpecifier","start":129,"end":135,"imported":{"type":"Identifier","start":129,"end":135,"name":"setDoc"},"local":{"type":"Identifier","start":129,"end":135,"name":"setDoc"}},{"type":"ImportSpecifier","start":137,"end":146,"imported":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"},"local":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"}}],"source":{"type":"Literal","start":155,"end":175,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":178,"end":1156,"declaration":{"type":"ClassDeclaration","start":185,"end":1156,"id":{"type":"Identifier","start":191,"end":207,"name":"FirestoreWrapper"},"superClass":null,"body":{"type":"ClassBody","start":208,"end":1156,"body":[{"type":"MethodDefinition","start":334,"end":408,"static":false,"computed":false,"key":{"type":"Identifier","start":334,"end":345,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":345,"end":408,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":346,"end":357,"name":"firebaseApp"}],"body":{"type":"BlockStatement","start":359,"end":408,"body":[{"type":"ExpressionStatement","start":370,"end":401,"expression":{"type":"AssignmentExpression","start":370,"end":400,"operator":"=","left":{"type":"MemberExpression","start":370,"end":386,"object":{"type":"ThisExpression","start":370,"end":374},"property":{"type":"Identifier","start":375,"end":386,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":389,"end":400,"name":"firebaseApp"}}}]}}},{"type":"MethodDefinition","start":414,"end":486,"static":false,"computed":false,"key":{"type":"Identifier","start":418,"end":427,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":427,"end":486,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":430,"end":486,"body":[{"type":"ReturnStatement","start":441,"end":479,"argument":{"type":"CallExpression","start":448,"end":478,"callee":{"type":"Identifier","start":448,"end":460,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":461,"end":477,"object":{"type":"ThisExpression","start":461,"end":465},"property":{"type":"Identifier","start":466,"end":477,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":504,"end":562,"static":false,"computed":false,"key":{"type":"Identifier","start":504,"end":507,"name":"doc"},"kind":"method","value":{"type":"FunctionExpression","start":507,"end":562,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":508,"end":514,"name":"docRef"}],"body":{"type":"BlockStatement","start":516,"end":562,"body":[{"type":"ReturnStatement","start":527,"end":555,"argument":{"type":"CallExpression","start":534,"end":554,"callee":{"type":"Identifier","start":534,"end":538,"name":"from"},"arguments":[{"type":"CallExpression","start":539,"end":553,"callee":{"type":"Identifier","start":539,"end":545,"name":"getDoc"},"arguments":[{"type":"Identifier","start":546,"end":552,"name":"docRef"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":568,"end":666,"static":false,"computed":false,"key":{"type":"Identifier","start":568,"end":571,"name":"add"},"kind":"method","value":{"type":"FunctionExpression","start":571,"end":666,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":572,"end":585,"name":"collectionRef"},{"type":"Identifier","start":587,"end":591,"name":"data"}],"body":{"type":"BlockStatement","start":593,"end":666,"body":[{"type":"ReturnStatement","start":604,"end":659,"argument":{"type":"CallExpression","start":611,"end":658,"callee":{"type":"MemberExpression","start":611,"end":649,"object":{"type":"CallExpression","start":611,"end":644,"callee":{"type":"Identifier","start":611,"end":615,"name":"from"},"arguments":[{"type":"CallExpression","start":616,"end":643,"callee":{"type":"Identifier","start":616,"end":622,"name":"addDoc"},"arguments":[{"type":"Identifier","start":623,"end":636,"name":"collectionRef"},{"type":"Identifier","start":638,"end":642,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":645,"end":649,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":650,"end":657,"callee":{"type":"Identifier","start":650,"end":654,"name":"take"},"arguments":[{"type":"Literal","start":655,"end":656,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":672,"end":902,"static":false,"computed":false,"key":{"type":"Identifier","start":672,"end":675,"name":"set"},"kind":"method","value":{"type":"FunctionExpression","start":675,"end":902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":676,"end":682,"name":"docRef"},{"type":"Identifier","start":684,"end":688,"name":"data"},{"type":"Identifier","start":690,"end":697,"name":"options"}],"body":{"type":"BlockStatement","start":699,"end":902,"body":[{"type":"IfStatement","start":710,"end":895,"test":{"type":"Identifier","start":714,"end":721,"name":"options"},"consequent":{"type":"BlockStatement","start":723,"end":806,"body":[{"type":"ReturnStatement","start":738,"end":795,"argument":{"type":"CallExpression","start":745,"end":794,"callee":{"type":"MemberExpression","start":745,"end":785,"object":{"type":"CallExpression","start":745,"end":780,"callee":{"type":"Identifier","start":745,"end":749,"name":"from"},"arguments":[{"type":"CallExpression","start":750,"end":779,"callee":{"type":"Identifier","start":750,"end":756,"name":"setDoc"},"arguments":[{"type":"Identifier","start":757,"end":763,"name":"docRef"},{"type":"Identifier","start":765,"end":769,"name":"data"},{"type":"Identifier","start":771,"end":778,"name":"options"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":781,"end":785,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":786,"end":793,"callee":{"type":"Identifier","start":786,"end":790,"name":"take"},"arguments":[{"type":"Literal","start":791,"end":792,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":821,"end":895,"body":[{"type":"ReturnStatement","start":836,"end":884,"argument":{"type":"CallExpression","start":843,"end":883,"callee":{"type":"MemberExpression","start":843,"end":874,"object":{"type":"CallExpression","start":843,"end":869,"callee":{"type":"Identifier","start":843,"end":847,"name":"from"},"arguments":[{"type":"CallExpression","start":848,"end":868,"callee":{"type":"Identifier","start":848,"end":854,"name":"setDoc"},"arguments":[{"type":"Identifier","start":855,"end":861,"name":"docRef"},{"type":"Identifier","start":863,"end":867,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":870,"end":874,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":875,"end":882,"callee":{"type":"Identifier","start":875,"end":879,"name":"take"},"arguments":[{"type":"Literal","start":880,"end":881,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":908,"end":986,"static":false,"computed":false,"key":{"type":"Identifier","start":908,"end":914,"name":"delete"},"kind":"method","value":{"type":"FunctionExpression","start":914,"end":986,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":915,"end":921,"name":"docRef"}],"body":{"type":"BlockStatement","start":923,"end":986,"body":[{"type":"ReturnStatement","start":934,"end":979,"argument":{"type":"CallExpression","start":941,"end":978,"callee":{"type":"MemberExpression","start":941,"end":969,"object":{"type":"CallExpression","start":941,"end":964,"callee":{"type":"Identifier","start":941,"end":945,"name":"from"},"arguments":[{"type":"CallExpression","start":946,"end":963,"callee":{"type":"Identifier","start":946,"end":955,"name":"deleteDoc"},"arguments":[{"type":"Identifier","start":956,"end":962,"name":"docRef"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":965,"end":969,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":970,"end":977,"callee":{"type":"Identifier","start":970,"end":974,"name":"take"},"arguments":[{"type":"Literal","start":975,"end":976,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":992,"end":1091,"static":false,"computed":false,"key":{"type":"Identifier","start":992,"end":998,"name":"update"},"kind":"method","value":{"type":"FunctionExpression","start":998,"end":1091,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":999,"end":1005,"name":"docRef"},{"type":"Identifier","start":1007,"end":1011,"name":"data"},{"type":"Identifier","start":1013,"end":1020,"name":"options"}],"body":{"type":"BlockStatement","start":1022,"end":1091,"body":[{"type":"ReturnStatement","start":1033,"end":1084,"argument":{"type":"CallExpression","start":1040,"end":1083,"callee":{"type":"MemberExpression","start":1040,"end":1074,"object":{"type":"CallExpression","start":1040,"end":1069,"callee":{"type":"Identifier","start":1040,"end":1044,"name":"from"},"arguments":[{"type":"CallExpression","start":1045,"end":1068,"callee":{"type":"Identifier","start":1045,"end":1054,"name":"updateDoc"},"arguments":[{"type":"Identifier","start":1055,"end":1061,"name":"docRef"},{"type":"Identifier","start":1063,"end":1067,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1070,"end":1074,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1075,"end":1082,"callee":{"type":"Identifier","start":1075,"end":1079,"name":"take"},"arguments":[{"type":"Literal","start":1080,"end":1081,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1097,"end":1153,"static":false,"computed":false,"key":{"type":"Identifier","start":1097,"end":1107,"name":"collection"},"kind":"method","value":{"type":"FunctionExpression","start":1107,"end":1153,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1108,"end":1109,"name":"q"}],"body":{"type":"BlockStatement","start":1111,"end":1153,"body":[{"type":"ReturnStatement","start":1122,"end":1146,"argument":{"type":"CallExpression","start":1129,"end":1145,"callee":{"type":"Identifier","start":1129,"end":1133,"name":"from"},"arguments":[{"type":"CallExpression","start":1134,"end":1144,"callee":{"type":"Identifier","start":1134,"end":1141,"name":"getDocs"},"arguments":[{"type":"Identifier","start":1142,"end":1143,"name":"q"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","start":1158,"end":5840},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":5842,"end":5963}]},"code":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-wrapper.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-wrapper.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[13,0,0,12],[15,0,0,25],[21,0,0,31],[27,0,0,37],[28,0,0,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[13,0,2,12],[15,0,2,13],[21,0,2,19],[37,0,2,35],[38,0,2,36]],[[0,0,4,0],[7,0,4,7],[9,0,5,2],[15,0,5,8],[17,0,7,2],[26,0,7,11],[28,0,12,2],[34,0,12,8],[36,0,13,2],[43,0,13,9],[45,0,14,2],[57,0,14,14],[59,0,17,2],[65,0,17,8],[67,0,20,2],[76,0,20,11],[79,0,21,1],[85,0,21,7],[105,0,21,27],[106,0,21,28]],[[0,0,24,0],[6,0,24,6],[13,0,24,13],[29,0,24,29]],[[4,0,25,2]],[],[],[[7,0,28,5]],[[4,0,30,2],[16,0,30,21],[27,0,30,45]],[[8,0,30,21],[24,0,30,32],[27,0,30,21],[38,0,30,32],[39,0,30,45]],[[4,0,31,2],[5,0,31,3]],[[4,0,33,2],[8,0,33,6],[17,0,33,15]],[[8,0,34,4],[15,0,34,11],[27,0,34,23],[28,0,34,24],[32,0,34,28],[33,0,34,29],[44,0,34,40],[45,0,34,41],[46,0,34,42]],[[4,0,35,2],[5,0,35,3]],[[4,0,37,2],[10,0,37,8]],[[4,0,38,9],[7,0,38,12],[8,0,38,31],[14,0,38,59]],[[8,0,39,4],[15,0,39,11],[19,0,39,15],[20,0,39,16],[26,0,39,22],[27,0,39,23],[33,0,39,29],[34,0,39,30],[35,0,39,31],[36,0,39,32]],[[4,0,40,2],[5,0,40,3]],[[4,0,42,9],[7,0,42,12],[8,0,42,16],[21,0,42,53],[23,0,42,55],[27,0,42,62]],[[8,0,43,4],[15,0,43,11],[19,0,43,15],[20,0,43,16],[26,0,43,22],[27,0,43,23],[40,0,43,36],[42,0,43,38],[46,0,43,42],[47,0,43,43],[48,0,43,44],[49,0,43,45],[53,0,43,49],[54,0,44,6],[58,0,44,10],[59,0,44,11],[60,0,44,12],[61,0,44,13],[62,0,45,5],[63,0,45,6]],[[4,0,46,2],[5,0,46,3]],[[4,0,48,9],[7,0,48,12],[8,0,48,16],[14,0,48,44],[16,0,48,46],[20,0,48,53],[22,0,48,55],[29,0,48,75]],[[8,0,50,4],[12,0,50,8],[19,0,50,15],[21,0,50,17]],[[12,0,51,6],[19,0,51,13],[23,0,51,17],[24,0,51,18],[30,0,51,24],[31,0,51,25],[37,0,51,31],[39,0,51,33],[43,0,51,37],[45,0,51,39],[52,0,51,46],[53,0,51,47],[54,0,51,48],[55,0,51,49],[59,0,51,53],[60,0,52,8],[64,0,52,12],[65,0,52,13],[66,0,52,14],[67,0,52,15],[68,0,53,7],[69,0,53,8]],[[9,0,54,5]],[[13,0,54,11]],[[12,0,55,6],[19,0,55,13],[23,0,55,17],[24,0,55,18],[30,0,55,24],[31,0,55,25],[37,0,55,31],[39,0,55,33],[43,0,55,37],[44,0,55,38],[45,0,55,39],[46,0,55,40],[50,0,55,44],[51,0,56,8],[55,0,56,12],[56,0,56,13],[57,0,56,14],[58,0,56,15],[59,0,57,7],[60,0,57,8]],[[9,0,58,5]],[[4,0,59,2],[5,0,59,3]],[[4,0,61,2],[10,0,61,8],[11,0,61,12],[17,0,61,40]],[[8,0,62,4],[15,0,62,11],[19,0,62,15],[20,0,62,16],[29,0,62,25],[30,0,62,26],[36,0,62,32],[37,0,62,33],[38,0,62,34],[39,0,62,35],[43,0,62,39],[44,0,63,6],[48,0,63,10],[49,0,63,11],[50,0,63,12],[51,0,63,13],[52,0,64,5],[53,0,64,6]],[[4,0,65,2],[5,0,65,3]],[[4,0,67,2],[10,0,67,8],[11,0,67,12],[17,0,67,40],[19,0,67,42],[23,0,67,70],[25,0,67,72],[32,0,67,92]],[[8,0,68,4],[15,0,68,11],[19,0,68,15],[20,0,68,16],[29,0,68,25],[30,0,68,38],[36,0,68,44],[38,0,68,46],[42,0,68,50],[43,0,68,51],[44,0,68,52],[45,0,68,53],[49,0,68,57],[50,0,69,6],[54,0,69,10],[55,0,69,11],[56,0,69,12],[57,0,69,13],[58,0,70,5],[59,0,70,6]],[[4,0,71,2],[5,0,71,3]],[[4,0,73,9],[14,0,73,19],[15,0,73,23],[16,0,73,34]],[[8,0,74,4],[15,0,74,11],[19,0,74,15],[20,0,74,16],[27,0,74,23],[28,0,74,24],[29,0,74,25],[30,0,74,26],[31,0,74,27],[32,0,74,28]],[[4,0,75,2],[5,0,75,3]],[[1,0,77,1]]],"sourcesContent":["import {from, Observable} from 'rxjs';\r\nimport {BaseFirestoreWrapper} from './interfaces';\r\nimport {take} from 'rxjs/operators';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {\r\n  addDoc,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  Query,\r\n  QuerySnapshot,\r\n  setDoc,\r\n  SetOptions,\r\n  UpdateData,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\n\r\n\r\nexport class FirestoreWrapper implements BaseFirestoreWrapper {\r\n  /**\r\n   * Uses firebase/firestore directly\r\n   * Simply makes the returned Promises into Observables\r\n   */\r\n\r\n  constructor(public firebaseApp: FirebaseApp) {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return getFirestore(this.firebaseApp);\r\n  }\r\n\r\n  // doc\r\n  public doc<T = DocumentData>(docRef: DocumentReference<T>): Observable<DocumentSnapshot<T>> {\r\n    return from(getDoc(docRef));\r\n  }\r\n\r\n  public add<T>(collectionRef: CollectionReference<T>, data: T): Observable<DocumentReference<T>> {\r\n    return from(addDoc(collectionRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public set<A>(docRef: DocumentReference<A>, data: A, options?: SetOptions): Observable<void> {\r\n\r\n    if (options) {\r\n      return from(setDoc(docRef, data, options)).pipe(\r\n        take(1)\r\n      );\r\n    } else {\r\n      return from(setDoc(docRef, data)).pipe(\r\n        take(1)\r\n      );\r\n    }\r\n  }\r\n\r\n  delete<T>(docRef: DocumentReference<T>): Observable<void> {\r\n    return from(deleteDoc(docRef)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  update<T>(docRef: DocumentReference<T>, data: UpdateData<Partial<T>>, options?: SetOptions): Observable<void> {\r\n    return from(updateDoc<Partial<T>>(docRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public collection<T>(q: Query<T>): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs(q));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[13,0,0,13],[15,0,0,15],[21,0,0,21],[27,0,0,27],[28,0,0,28]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[13,0,1,13],[15,0,1,15],[21,0,1,21],[37,0,1,37],[38,0,1,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[15,0,2,15],[17,0,2,17],[26,0,2,26],[28,0,2,28],[34,0,2,34],[36,0,2,36],[43,0,2,43],[45,0,2,45],[57,0,2,57],[59,0,2,59],[65,0,2,65],[67,0,2,67],[76,0,2,76],[79,0,2,79],[85,0,2,85],[105,0,2,105],[106,0,2,106]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[29,0,3,29]],[[4,0,4,4]],[],[],[[7,0,7,7]],[[4,0,8,4],[16,0,8,16],[27,0,8,27]],[[8,0,9,8],[12,0,9,12],[13,0,9,13],[24,0,9,24],[27,0,9,27],[38,0,9,38],[39,0,9,39]],[[4,0,10,4],[5,0,10,5]],[[4,0,11,4],[8,0,11,8],[17,0,11,17]],[[8,0,12,8],[15,0,12,15],[27,0,12,27],[28,0,12,28],[32,0,12,32],[33,0,12,33],[44,0,12,44],[45,0,12,45],[46,0,12,46]],[[4,0,13,4],[5,0,13,5]],[[4,0,14,4],[10,0,14,10]],[[4,0,15,4],[7,0,15,7],[8,0,15,8],[14,0,15,14]],[[8,0,16,8],[15,0,16,15],[19,0,16,19],[20,0,16,20],[26,0,16,26],[27,0,16,27],[33,0,16,33],[34,0,16,34],[35,0,16,35],[36,0,16,36]],[[4,0,17,4],[5,0,17,5]],[[4,0,18,4],[7,0,18,7],[8,0,18,8],[21,0,18,21],[23,0,18,23],[27,0,18,27]],[[8,0,19,8],[15,0,19,15],[19,0,19,19],[20,0,19,20],[26,0,19,26],[27,0,19,27],[40,0,19,40],[42,0,19,42],[46,0,19,46],[47,0,19,47],[48,0,19,48],[49,0,19,49],[53,0,19,53],[54,0,19,54],[58,0,19,58],[59,0,19,59],[60,0,19,60],[61,0,19,61],[62,0,19,62],[63,0,19,63]],[[4,0,20,4],[5,0,20,5]],[[4,0,21,4],[7,0,21,7],[8,0,21,8],[14,0,21,14],[16,0,21,16],[20,0,21,20],[22,0,21,22],[29,0,21,29]],[[8,0,22,8],[12,0,22,12],[19,0,22,19],[21,0,22,21]],[[12,0,23,12],[19,0,23,19],[23,0,23,23],[24,0,23,24],[30,0,23,30],[31,0,23,31],[37,0,23,37],[39,0,23,39],[43,0,23,43],[45,0,23,45],[52,0,23,52],[53,0,23,53],[54,0,23,54],[55,0,23,55],[59,0,23,59],[60,0,23,60],[64,0,23,64],[65,0,23,65],[66,0,23,66],[67,0,23,67],[68,0,23,68],[69,0,23,69]],[[9,0,24,9]],[[13,0,25,13]],[[12,0,26,12],[19,0,26,19],[23,0,26,23],[24,0,26,24],[30,0,26,30],[31,0,26,31],[37,0,26,37],[39,0,26,39],[43,0,26,43],[44,0,26,44],[45,0,26,45],[46,0,26,46],[50,0,26,50],[51,0,26,51],[55,0,26,55],[56,0,26,56],[57,0,26,57],[58,0,26,58],[59,0,26,59],[60,0,26,60]],[[9,0,27,9]],[[4,0,28,4],[5,0,28,5]],[[4,0,29,4],[10,0,29,10],[11,0,29,11],[17,0,29,17]],[[8,0,30,8],[15,0,30,15],[19,0,30,19],[20,0,30,20],[29,0,30,29],[30,0,30,30],[36,0,30,36],[37,0,30,37],[38,0,30,38],[39,0,30,39],[43,0,30,43],[44,0,30,44],[48,0,30,48],[49,0,30,49],[50,0,30,50],[51,0,30,51],[52,0,30,52],[53,0,30,53]],[[4,0,31,4],[5,0,31,5]],[[4,0,32,4],[10,0,32,10],[11,0,32,11],[17,0,32,17],[19,0,32,19],[23,0,32,23],[25,0,32,25],[32,0,32,32]],[[8,0,33,8],[15,0,33,15],[19,0,33,19],[20,0,33,20],[29,0,33,29],[30,0,33,30],[36,0,33,36],[38,0,33,38],[42,0,33,42],[43,0,33,43],[44,0,33,44],[45,0,33,45],[49,0,33,49],[50,0,33,50],[54,0,33,54],[55,0,33,55],[56,0,33,56],[57,0,33,57],[58,0,33,58],[59,0,33,59]],[[4,0,34,4],[5,0,34,5]],[[4,0,35,4],[14,0,35,14],[15,0,35,15],[16,0,35,16]],[[8,0,36,8],[15,0,36,15],[19,0,36,19],[20,0,36,20],[27,0,36,27],[28,0,36,28],[29,0,36,29],[30,0,36,30],[31,0,36,31],[32,0,36,32]],[[4,0,37,4],[5,0,37,5]],[[1,0,38,1]],[[0,0,39,0],[4682,0,39,4682]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1976,"body":[{"type":"ImportDeclaration","start":0,"end":55,"specifiers":[{"type":"ImportSpecifier","start":9,"end":25,"imported":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"},"local":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"}}],"source":{"type":"Literal","start":33,"end":54,"value":"./firestore-wrapper","raw":"'./firestore-wrapper'"}},{"type":"ImportDeclaration","start":57,"end":114,"specifiers":[{"type":"ImportSpecifier","start":66,"end":83,"imported":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"},"local":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"}}],"source":{"type":"Literal","start":91,"end":113,"value":"./firestore-extended","raw":"'./firestore-extended'"}},{"type":"ExportNamedDeclaration","start":286,"end":469,"declaration":{"type":"ClassDeclaration","start":293,"end":469,"id":{"type":"Identifier","start":299,"end":311,"name":"FirestoreExt"},"superClass":{"type":"Identifier","start":320,"end":337,"name":"FirestoreExtended"},"body":{"type":"ClassBody","start":338,"end":469,"body":[{"type":"MethodDefinition","start":345,"end":466,"static":false,"computed":false,"key":{"type":"Identifier","start":345,"end":356,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":356,"end":466,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":357,"end":368,"name":"firebaseApp"},{"type":"AssignmentPattern","start":370,"end":391,"left":{"type":"Identifier","start":370,"end":382,"name":"defaultDocId"},"right":{"type":"Literal","start":385,"end":391,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":393,"end":466,"body":[{"type":"ExpressionStatement","start":404,"end":459,"expression":{"type":"CallExpression","start":404,"end":458,"callee":{"type":"Super","start":404,"end":409},"arguments":[{"type":"NewExpression","start":410,"end":443,"callee":{"type":"Identifier","start":414,"end":430,"name":"FirestoreWrapper"},"arguments":[{"type":"Identifier","start":431,"end":442,"name":"firebaseApp"}]},{"type":"Identifier","start":445,"end":457,"name":"defaultDocId"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","start":471,"end":1853},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","start":1855,"end":1976}]},"code":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"firestore-extended.class.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.class.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,8],[25,0,1,24],[27,0,1,25],[33,0,1,31],[54,0,1,52],[55,0,1,53]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,26],[34,0,2,32],[56,0,2,54],[57,0,2,55]],[[0,0,4,0]],[],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[25,0,8,26],[34,0,8,34],[51,0,8,51]],[[4,0,9,2],[16,0,9,14],[27,0,9,38],[29,0,9,40],[44,0,9,63],[50,0,9,69]],[[8,0,10,4],[13,0,10,9],[14,0,10,10],[18,0,10,14],[34,0,10,30],[35,0,10,31],[46,0,10,42],[47,0,10,43],[49,0,10,45],[61,0,10,57],[62,0,10,58],[63,0,10,59]],[[4,0,11,2],[5,0,11,3]],[[1,0,12,1]]],"sourcesContent":["import {FirebaseApp} from 'firebase/app';\r\nimport {FirestoreWrapper} from './firestore-wrapper';\r\nimport {FirestoreExtended} from './firestore-extended';\r\n\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n  constructor(firebaseApp: FirebaseApp, defaultDocId: string = 'data') {\r\n    super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n  }\r\n}\r\n"]},"resolvedIds":{"./firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[25,0,0,25],[27,0,0,27],[33,0,0,33],[54,0,0,54],[55,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[26,0,1,26],[28,0,1,28],[34,0,1,34],[56,0,1,56],[57,0,1,57]],[[0,0,2,0]],[],[],[[3,0,5,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[25,0,6,26],[34,0,6,34],[51,0,6,51]],[[4,0,7,4],[16,0,7,16],[27,0,7,27],[29,0,7,29],[41,0,7,41],[44,0,7,44],[50,0,7,50]],[[8,0,8,8],[13,0,8,13],[14,0,8,14],[18,0,8,18],[34,0,8,34],[35,0,8,35],[46,0,8,46],[47,0,8,47],[49,0,8,49],[61,0,8,61],[62,0,8,62],[63,0,8,63]],[[4,0,9,4],[5,0,9,5]],[[1,0,10,1]],[[0,0,11,0],[1382,0,11,1382]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2081,"body":[{"type":"ExportNamedDeclaration","start":96,"end":128,"declaration":{"type":"ClassDeclaration","start":103,"end":128,"id":{"type":"Identifier","start":109,"end":123,"name":"FirebaseConfig"},"superClass":null,"body":{"type":"ClassBody","start":124,"end":128,"body":[]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":218,"end":330,"declaration":{"type":"VariableDeclaration","start":225,"end":330,"declarations":[{"type":"VariableDeclarator","start":231,"end":329,"id":{"type":"Identifier","start":231,"end":253,"name":"FIRESTORE_USE_EMULATOR"},"init":{"type":"ObjectExpression","start":256,"end":329,"properties":[{"type":"Property","start":291,"end":308,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":291,"end":295,"name":"host"},"value":{"type":"Literal","start":297,"end":308,"value":"localhost","raw":"'localhost'"},"kind":"init"},{"type":"Property","start":315,"end":325,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":315,"end":319,"name":"port"},"value":{"type":"Literal","start":321,"end":325,"value":8080,"raw":"8080"},"kind":"init"}]}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","start":464,"end":1954},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":1956,"end":2081}]},"code":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"originalCode":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/config.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[27,0,3,27]],[[1,0,5,1]],[[0,0,13,0],[86,0,13,86]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[35,0,15,35],[38,0,15,63]],[[4,0,16,2],[26,0,16,24]],[[4,0,17,2],[8,0,17,6],[10,0,17,8],[21,0,17,19]],[[4,0,18,2],[8,0,18,6],[10,0,18,8],[14,0,18,12]],[[1,0,19,1],[2,0,19,2]],[[0,0,22,0],[43,0,22,43]],[[0,0,23,0],[26,0,23,26]],[[0,0,24,0],[26,0,24,26]],[[0,0,25,0],[23,0,25,23]],[[0,0,26,0],[4,0,26,4]]],"sourcesContent":["// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\n\r\nexport class FirebaseConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FirestoreEmulatorConfig {\r\n  // useEmulator: boolean;\r\n  host: string;\r\n  port: number;\r\n}\r\n\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\n\r\nexport const FIRESTORE_USE_EMULATOR: FirestoreEmulatorConfig = {\r\n  // useEmulator: false,\r\n  host: 'localhost',\r\n  port: 8080,\r\n};\r\n\r\n\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n"]},"resolvedIds":{},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,2,0],[6,0,2,6],[13,0,2,13],[27,0,2,27]],[[1,0,3,1]],[[0,0,4,0],[86,0,4,86]],[[0,0,5,0],[6,0,5,6],[7,0,5,7],[13,0,5,13],[35,0,5,35],[38,0,5,38]],[[4,0,6,4],[26,0,6,26]],[[4,0,7,4],[8,0,7,8],[10,0,7,10],[21,0,7,21]],[[4,0,8,4],[8,0,8,8],[10,0,8,10],[14,0,8,14]],[[1,0,9,1],[2,0,9,2]],[[0,0,10,0],[43,0,10,43]],[[0,0,11,0],[26,0,11,26]],[[0,0,12,0],[26,0,12,26]],[[0,0,13,0],[23,0,13,23]],[[0,0,14,0],[4,0,14,4]],[[0,0,15,0],[1490,0,15,1490]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5250,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}},{"type":"ImportSpecifier","start":19,"end":27,"imported":{"type":"Identifier","start":19,"end":27,"name":"Optional"},"local":{"type":"Identifier","start":19,"end":27,"name":"Optional"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"},"local":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":110,"specifiers":[{"type":"ImportSpecifier","start":72,"end":84,"imported":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"},"local":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"}}],"source":{"type":"Literal","start":92,"end":109,"value":"@angular/common","raw":"'@angular/common'"}},{"type":"ImportDeclaration","start":112,"end":154,"specifiers":[{"type":"ImportSpecifier","start":121,"end":135,"imported":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"},"local":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"}}],"source":{"type":"Literal","start":143,"end":153,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":156,"end":192,"specifiers":[{"type":"ImportNamespaceSpecifier","start":163,"end":170,"local":{"type":"Identifier","start":168,"end":170,"name":"i0"}}],"source":{"type":"Literal","start":176,"end":191,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":194,"end":1127,"declaration":{"type":"ClassDeclaration","start":201,"end":1127,"id":{"type":"Identifier","start":207,"end":224,"name":"NgxFirebaseModule"},"superClass":null,"body":{"type":"ClassBody","start":225,"end":1127,"body":[{"type":"MethodDefinition","start":726,"end":911,"static":false,"computed":false,"key":{"type":"Identifier","start":726,"end":737,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":737,"end":911,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":738,"end":750,"name":"parentModule"}],"body":{"type":"BlockStatement","start":752,"end":911,"body":[{"type":"IfStatement","start":763,"end":904,"test":{"type":"Identifier","start":767,"end":779,"name":"parentModule"},"consequent":{"type":"BlockStatement","start":781,"end":904,"body":[{"type":"ThrowStatement","start":796,"end":893,"argument":{"type":"NewExpression","start":802,"end":892,"callee":{"type":"Identifier","start":806,"end":811,"name":"Error"},"arguments":[{"type":"Literal","start":812,"end":891,"value":"NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only","raw":"'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":917,"end":1124,"static":true,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"forRoot"},"kind":"method","value":{"type":"FunctionExpression","start":931,"end":1124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":932,"end":938,"name":"config"}],"body":{"type":"BlockStatement","start":940,"end":1124,"body":[{"type":"ReturnStatement","start":951,"end":1117,"argument":{"type":"ObjectExpression","start":958,"end":1116,"properties":[{"type":"Property","start":973,"end":1000,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":973,"end":981,"name":"ngModule"},"value":{"type":"Identifier","start":983,"end":1000,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1015,"end":1105,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1024,"name":"providers"},"value":{"type":"ArrayExpression","start":1026,"end":1105,"elements":[{"type":"ObjectExpression","start":1045,"end":1090,"properties":[{"type":"Property","start":1047,"end":1070,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"provide"},"value":{"type":"Identifier","start":1056,"end":1070,"name":"FirebaseConfig"},"kind":"init"},{"type":"Property","start":1072,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1072,"end":1080,"name":"useValue"},"value":{"type":"Identifier","start":1082,"end":1088,"name":"config"},"kind":"init"}]}]},"kind":"init"}]}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1129,"end":1367,"expression":{"type":"AssignmentExpression","start":1129,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1129,"end":1151,"object":{"type":"Identifier","start":1129,"end":1146,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1147,"end":1151,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1154,"end":1366,"callee":{"type":"MemberExpression","start":1154,"end":1175,"object":{"type":"Identifier","start":1154,"end":1156,"name":"i0"},"property":{"type":"Identifier","start":1157,"end":1175,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1176,"end":1365,"properties":[{"type":"Property","start":1178,"end":1198,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1178,"end":1188,"name":"minVersion"},"value":{"type":"Literal","start":1190,"end":1198,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1200,"end":1217,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1200,"end":1207,"name":"version"},"value":{"type":"Literal","start":1209,"end":1217,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1219,"end":1231,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1219,"end":1227,"name":"ngImport"},"value":{"type":"Identifier","start":1229,"end":1231,"name":"i0"},"kind":"init"},{"type":"Property","start":1233,"end":1256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1233,"end":1237,"name":"type"},"value":{"type":"Identifier","start":1239,"end":1256,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1258,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1258,"end":1262,"name":"deps"},"value":{"type":"ArrayExpression","start":1264,"end":1326,"elements":[{"type":"ObjectExpression","start":1265,"end":1325,"properties":[{"type":"Property","start":1267,"end":1291,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1267,"end":1272,"name":"token"},"value":{"type":"Identifier","start":1274,"end":1291,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1293,"end":1307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1301,"name":"optional"},"value":{"type":"Literal","start":1303,"end":1307,"value":true,"raw":"true"},"kind":"init"},{"type":"Property","start":1309,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1309,"end":1317,"name":"skipSelf"},"value":{"type":"Literal","start":1319,"end":1323,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1328,"end":1363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1328,"end":1334,"name":"target"},"value":{"type":"MemberExpression","start":1336,"end":1363,"object":{"type":"MemberExpression","start":1336,"end":1354,"object":{"type":"Identifier","start":1336,"end":1338,"name":"i0"},"property":{"type":"Identifier","start":1339,"end":1354,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1355,"end":1363,"name":"NgModule"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1369,"end":1526,"expression":{"type":"AssignmentExpression","start":1369,"end":1525,"operator":"=","left":{"type":"MemberExpression","start":1369,"end":1391,"object":{"type":"Identifier","start":1369,"end":1386,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1387,"end":1391,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1416,"object":{"type":"Identifier","start":1394,"end":1396,"name":"i0"},"property":{"type":"Identifier","start":1397,"end":1416,"name":"ɵɵngDeclareNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1417,"end":1524,"properties":[{"type":"Property","start":1419,"end":1439,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1419,"end":1429,"name":"minVersion"},"value":{"type":"Literal","start":1431,"end":1439,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1441,"end":1458,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1441,"end":1448,"name":"version"},"value":{"type":"Literal","start":1450,"end":1458,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1460,"end":1472,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1460,"end":1468,"name":"ngImport"},"value":{"type":"Identifier","start":1470,"end":1472,"name":"i0"},"kind":"init"},{"type":"Property","start":1474,"end":1497,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1474,"end":1478,"name":"type"},"value":{"type":"Identifier","start":1480,"end":1497,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1499,"end":1522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1499,"end":1506,"name":"imports"},"value":{"type":"ArrayExpression","start":1508,"end":1522,"elements":[{"type":"Identifier","start":1509,"end":1521,"name":"CommonModule"}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1711,"expression":{"type":"AssignmentExpression","start":1528,"end":1710,"operator":"=","left":{"type":"MemberExpression","start":1528,"end":1550,"object":{"type":"Identifier","start":1528,"end":1545,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1546,"end":1550,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1553,"end":1710,"callee":{"type":"MemberExpression","start":1553,"end":1575,"object":{"type":"Identifier","start":1553,"end":1555,"name":"i0"},"property":{"type":"Identifier","start":1556,"end":1575,"name":"ɵɵngDeclareInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1576,"end":1709,"properties":[{"type":"Property","start":1578,"end":1598,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1578,"end":1588,"name":"minVersion"},"value":{"type":"Literal","start":1590,"end":1598,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1600,"end":1617,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1600,"end":1607,"name":"version"},"value":{"type":"Literal","start":1609,"end":1617,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1619,"end":1631,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1619,"end":1627,"name":"ngImport"},"value":{"type":"Identifier","start":1629,"end":1631,"name":"i0"},"kind":"init"},{"type":"Property","start":1633,"end":1656,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1633,"end":1637,"name":"type"},"value":{"type":"Identifier","start":1639,"end":1656,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1658,"end":1707,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1658,"end":1665,"name":"imports"},"value":{"type":"ArrayExpression","start":1667,"end":1707,"elements":[{"type":"ArrayExpression","start":1668,"end":1706,"elements":[{"type":"Identifier","start":1683,"end":1695,"name":"CommonModule"}]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1713,"end":2287,"expression":{"type":"CallExpression","start":1713,"end":2286,"callee":{"type":"MemberExpression","start":1713,"end":1740,"object":{"type":"Identifier","start":1713,"end":1715,"name":"i0"},"property":{"type":"Identifier","start":1716,"end":1740,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1741,"end":2285,"properties":[{"type":"Property","start":1743,"end":1763,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1743,"end":1753,"name":"minVersion"},"value":{"type":"Literal","start":1755,"end":1763,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1765,"end":1782,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1765,"end":1772,"name":"version"},"value":{"type":"Literal","start":1774,"end":1782,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1784,"end":1796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1792,"name":"ngImport"},"value":{"type":"Identifier","start":1794,"end":1796,"name":"i0"},"kind":"init"},{"type":"Property","start":1798,"end":1821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1798,"end":1802,"name":"type"},"value":{"type":"Identifier","start":1804,"end":1821,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1823,"end":2052,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1833,"name":"decorators"},"value":{"type":"ArrayExpression","start":1835,"end":2052,"elements":[{"type":"ObjectExpression","start":1836,"end":2051,"properties":[{"type":"Property","start":1851,"end":1865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1851,"end":1855,"name":"type"},"value":{"type":"Identifier","start":1857,"end":1865,"name":"NgModule"},"kind":"init"},{"type":"Property","start":1880,"end":2040,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1880,"end":1884,"name":"args"},"value":{"type":"ArrayExpression","start":1886,"end":2040,"elements":[{"type":"ObjectExpression","start":1887,"end":2039,"properties":[{"type":"Property","start":1910,"end":1926,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1922,"name":"declarations"},"value":{"type":"ArrayExpression","start":1924,"end":1926,"elements":[]},"kind":"init"},{"type":"Property","start":1949,"end":2020,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1949,"end":1956,"name":"imports"},"value":{"type":"ArrayExpression","start":1958,"end":2020,"elements":[{"type":"Identifier","start":1985,"end":1997,"name":"CommonModule"}]},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":2054,"end":2283,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2054,"end":2068,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":2070,"end":2283,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2082,"end":2283,"body":[{"type":"ReturnStatement","start":2093,"end":2276,"argument":{"type":"ArrayExpression","start":2100,"end":2275,"elements":[{"type":"ObjectExpression","start":2101,"end":2274,"properties":[{"type":"Property","start":2103,"end":2126,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2103,"end":2107,"name":"type"},"value":{"type":"Identifier","start":2109,"end":2126,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":2128,"end":2272,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2128,"end":2138,"name":"decorators"},"value":{"type":"ArrayExpression","start":2140,"end":2272,"elements":[{"type":"ObjectExpression","start":2141,"end":2205,"properties":[{"type":"Property","start":2168,"end":2182,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2168,"end":2172,"name":"type"},"value":{"type":"Identifier","start":2174,"end":2182,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2207,"end":2271,"properties":[{"type":"Property","start":2234,"end":2248,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2234,"end":2238,"name":"type"},"value":{"type":"Identifier","start":2240,"end":2248,"name":"SkipSelf"},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","start":2289,"end":5123},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":5125,"end":5250}]},"code":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgxFirebaseModule, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: SkipSelf\r\n                    }] }];\r\n    } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","@angular/common","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","originalSourcemap":{"version":3,"file":"ngx-firebase.module.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,29],[17,0,0,37],[19,0,0,39],[27,0,0,47],[29,0,0,49],[37,0,0,57],[39,0,0,58],[45,0,0,64],[60,0,0,79],[61,0,0,80]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[21,0,1,20],[23,0,1,21],[29,0,1,27],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[23,0,2,22],[25,0,2,23],[31,0,2,29],[41,0,2,39],[42,0,2,40]],[],[[0,0,13,0],[6,0,13,6],[13,0,13,13],[30,0,13,30]],[[4,0,14,2]],[],[],[],[],[],[[7,0,20,5]],[[4,0,21,2],[16,0,21,38],[28,0,21,70]],[[8,0,22,4],[12,0,22,8],[24,0,22,20],[26,0,22,22]],[[12,0,23,6],[18,0,23,12],[22,0,23,16],[27,0,23,21],[28,0,24,8],[107,0,24,87],[108,0,24,88],[109,0,24,89]],[[9,0,25,5]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2],[10,0,28,8],[11,0,28,9],[18,0,28,16],[19,0,28,17],[25,0,28,40]],[[8,0,29,4],[15,0,29,11]],[[12,0,30,6],[20,0,30,14],[22,0,30,16],[39,0,30,33]],[[12,0,31,6],[21,0,31,15],[23,0,31,17]],[[16,0,32,8],[18,0,32,9],[25,0,32,16],[27,0,32,18],[41,0,32,32],[43,0,32,34],[51,0,32,42],[53,0,32,44],[59,0,32,50],[61,0,32,51]],[[13,0,33,7]],[[9,0,34,5],[10,0,34,6]],[[4,0,35,2],[5,0,35,3]],[],[[110,0,13,13],[127,0,13,30],[145,0,21,53],[162,0,21,70]],[[111,0,13,13],[128,0,13,30],[140,0,8,4],[152,0,8,16]],[[111,0,13,13],[128,0,13,30],[140,0,7,11]],[[12,0,8,4],[24,0,8,16]],[[9,0,9,3]],[[91,0,13,13],[108,0,13,30]],[[18,0,5,1],[26,0,5,9]],[[19,0,5,10]],[[20,0,6,2],[32,0,6,14],[34,0,6,16],[36,0,6,18]],[[20,0,7,2],[27,0,7,9],[29,0,7,11]],[[24,0,8,4],[36,0,8,16]],[[21,0,9,3]],[[17,0,10,1]],[[58,0,21,53],[75,0,21,70]],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[34,0,21,35]]],"sourcesContent":["import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseConfig} from './config';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\n\nexport class NgxFirebaseModule {\n  /**\n   * To be used as an Angular Module to inject the FirebaseConfig\n   * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\n   * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\n   * additional connections.\n   * The purpose is simply to make sure that we only create a single Firebase App and a single connection\n   */\n  constructor(@Optional() @SkipSelf() parentModule?: NgxFirebaseModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config?: FirebaseConfig): ModuleWithProviders<NgxFirebaseModule> {\n    return {\n      ngModule: NgxFirebaseModule,\n      providers: [\n        {provide: FirebaseConfig, useValue: config}\n      ]\n    };\n  }\n\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@angular/common":{"external":true,"id":"@angular/common","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[17,0,0,17],[19,0,0,19],[27,0,0,27],[29,0,0,29],[37,0,0,37],[39,0,0,39],[45,0,0,45],[60,0,0,60],[61,0,0,61]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[21,0,1,21],[23,0,1,23],[29,0,1,29],[46,0,1,46],[47,0,1,47]],[[0,0,2,0],[7,0,2,7],[9,0,2,9],[23,0,2,23],[25,0,2,25],[31,0,2,31],[41,0,2,41],[42,0,2,42]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[14,0,3,14],[20,0,3,20],[35,0,3,35],[36,0,3,36]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[30,0,4,30]],[[4,0,5,4]],[],[],[],[],[],[[7,0,11,7]],[[4,0,12,4],[16,0,12,16],[28,0,12,28]],[[8,0,13,8],[12,0,13,12],[24,0,13,24],[26,0,13,26]],[[12,0,14,12],[18,0,14,18],[22,0,14,22],[27,0,14,27],[28,0,14,28],[107,0,14,107],[108,0,14,108],[109,0,14,109]],[[9,0,15,9]],[[4,0,16,4],[5,0,16,5]],[[4,0,17,4],[10,0,17,10],[11,0,17,11],[18,0,17,18],[19,0,17,19],[25,0,17,25]],[[8,0,18,8],[15,0,18,15]],[[12,0,19,12],[20,0,19,20],[22,0,19,22],[39,0,19,39]],[[12,0,20,12],[21,0,20,21],[23,0,20,23]],[[16,0,21,16],[18,0,21,18],[25,0,21,25],[27,0,21,27],[41,0,21,41],[43,0,21,43],[51,0,21,51],[53,0,21,53],[59,0,21,59],[61,0,21,61]],[[13,0,22,13]],[[9,0,23,9],[10,0,23,10]],[[4,0,24,4],[5,0,24,5]],[[1,0,25,1]],[[0,0,26,0],[17,0,26,17],[18,0,26,18],[22,0,26,22],[25,0,26,25],[27,0,26,27],[28,0,26,28],[46,0,26,46],[47,0,26,47],[49,0,26,49],[59,0,26,59],[61,0,26,61],[69,0,26,69],[71,0,26,71],[78,0,26,78],[80,0,26,80],[88,0,26,88],[90,0,26,90],[98,0,26,98],[100,0,26,100],[102,0,26,102],[104,0,26,104],[108,0,26,108],[110,0,26,110],[127,0,26,127],[129,0,26,129],[133,0,26,133],[135,0,26,135],[136,0,26,136],[138,0,26,138],[143,0,26,143],[145,0,26,145],[162,0,26,162],[164,0,26,164],[172,0,26,172],[174,0,26,174],[178,0,26,178],[180,0,26,180],[188,0,26,188],[190,0,26,190],[194,0,26,194],[196,0,26,196],[197,0,26,197],[199,0,26,199],[205,0,26,205],[207,0,26,207],[209,0,26,209],[210,0,26,210],[225,0,26,225],[226,0,26,226],[234,0,26,234],[236,0,26,236],[237,0,26,237],[238,0,26,238]],[[0,0,27,0],[17,0,27,17],[18,0,27,18],[22,0,27,22],[25,0,27,25],[27,0,27,27],[28,0,27,28],[47,0,27,47],[48,0,27,48],[50,0,27,50],[60,0,27,60],[62,0,27,62],[70,0,27,70],[72,0,27,72],[79,0,27,79],[81,0,27,81],[89,0,27,89],[91,0,27,91],[99,0,27,99],[101,0,27,101],[103,0,27,103],[105,0,27,105],[109,0,27,109],[111,0,27,111],[128,0,27,128],[130,0,27,130],[137,0,27,137],[139,0,27,139],[140,0,27,140],[152,0,27,152],[153,0,27,153],[155,0,27,155],[156,0,27,156],[157,0,27,157]],[[0,0,28,0],[17,0,28,17],[18,0,28,18],[22,0,28,22],[25,0,28,25],[27,0,28,27],[28,0,28,28],[47,0,28,47],[48,0,28,48],[50,0,28,50],[60,0,28,60],[62,0,28,62],[70,0,28,70],[72,0,28,72],[79,0,28,79],[81,0,28,81],[89,0,28,89],[91,0,28,91],[99,0,28,99],[101,0,28,101],[103,0,28,103],[105,0,28,105],[109,0,28,109],[111,0,28,111],[128,0,28,128],[130,0,28,130],[137,0,28,137],[139,0,28,139],[140,0,28,140]],[[12,0,29,12],[24,0,29,24]],[[9,0,30,9],[10,0,30,10],[12,0,30,12],[13,0,30,13],[14,0,30,14]],[[0,0,31,0],[2,0,31,2],[3,0,31,3],[27,0,31,27],[28,0,31,28],[30,0,31,30],[40,0,31,40],[42,0,31,42],[50,0,31,50],[52,0,31,52],[59,0,31,59],[61,0,31,61],[69,0,31,69],[71,0,31,71],[79,0,31,79],[81,0,31,81],[83,0,31,83],[85,0,31,85],[89,0,31,89],[91,0,31,91],[108,0,31,108],[110,0,31,110],[120,0,31,120],[122,0,31,122],[123,0,31,123]],[[12,0,32,12],[16,0,32,16],[18,0,32,18],[26,0,32,26]],[[12,0,33,12],[16,0,33,16],[18,0,33,18],[19,0,33,19]],[[20,0,34,20],[32,0,34,32],[34,0,34,34],[36,0,34,36]],[[20,0,35,20],[27,0,35,27],[29,0,35,29]],[[24,0,36,24],[36,0,36,36]],[[21,0,37,21]],[[17,0,38,17],[18,0,38,18]],[[9,0,39,9],[10,0,39,10],[12,0,39,12],[26,0,39,26],[28,0,39,28]],[[8,0,39,42],[15,0,39,49],[16,0,39,50],[18,0,39,52],[22,0,39,56],[24,0,39,58],[41,0,39,75],[43,0,39,77],[53,0,39,87],[55,0,39,89],[56,0,39,90]],[[24,0,40,20],[28,0,40,24],[30,0,40,26],[38,0,40,34]],[[21,0,41,17],[23,0,41,19]],[[24,0,42,20],[28,0,42,24],[30,0,42,26],[38,0,42,34]],[[21,0,43,17],[22,0,43,18],[24,0,43,20],[25,0,43,21],[26,0,43,22]],[[4,0,43,23],[5,0,43,24],[7,0,43,26],[8,0,43,27],[9,0,43,28]],[[0,0,44,0],[2834,0,44,2834]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5724,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"Inject"},"local":{"type":"Identifier","start":9,"end":15,"name":"Inject"}},{"type":"ImportSpecifier","start":17,"end":27,"imported":{"type":"Identifier","start":17,"end":27,"name":"Injectable"},"local":{"type":"Identifier","start":17,"end":27,"name":"Injectable"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"Optional"},"local":{"type":"Identifier","start":29,"end":37,"name":"Optional"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":113,"specifiers":[{"type":"ImportSpecifier","start":72,"end":94,"imported":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"},"local":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"}}],"source":{"type":"Literal","start":102,"end":112,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":115,"end":170,"specifiers":[{"type":"ImportDefaultSpecifier","start":122,"end":130,"local":{"type":"Identifier","start":122,"end":130,"name":"firebase"}},{"type":"ImportSpecifier","start":134,"end":147,"imported":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"},"local":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"}}],"source":{"type":"Literal","start":155,"end":169,"value":"firebase/app","raw":"'firebase/app'"}},{"type":"ImportDeclaration","start":172,"end":248,"specifiers":[{"type":"ImportSpecifier","start":181,"end":205,"imported":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"},"local":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"}},{"type":"ImportSpecifier","start":207,"end":219,"imported":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"},"local":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"}}],"source":{"type":"Literal","start":227,"end":247,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":250,"end":286,"specifiers":[{"type":"ImportNamespaceSpecifier","start":257,"end":264,"local":{"type":"Identifier","start":262,"end":264,"name":"i0"}}],"source":{"type":"Literal","start":270,"end":285,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":288,"end":319,"specifiers":[{"type":"ImportNamespaceSpecifier","start":295,"end":302,"local":{"type":"Identifier","start":300,"end":302,"name":"i1"}}],"source":{"type":"Literal","start":308,"end":318,"value":"./config","raw":"\"./config\""}},{"type":"ExportNamedDeclaration","start":321,"end":1144,"declaration":{"type":"ClassDeclaration","start":328,"end":1144,"id":{"type":"Identifier","start":334,"end":352,"name":"NgxFirebaseService"},"superClass":null,"body":{"type":"ClassBody","start":353,"end":1144,"body":[{"type":"MethodDefinition","start":360,"end":1141,"static":false,"computed":false,"key":{"type":"Identifier","start":360,"end":371,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":371,"end":1141,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":372,"end":378,"name":"config"},{"type":"Identifier","start":380,"end":394,"name":"emulatorConfig"}],"body":{"type":"BlockStatement","start":396,"end":1141,"body":[{"type":"ExpressionStatement","start":407,"end":444,"expression":{"type":"AssignmentExpression","start":407,"end":443,"operator":"=","left":{"type":"MemberExpression","start":407,"end":426,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":426,"name":"emulatorConfig"},"computed":false,"optional":false},"right":{"type":"Identifier","start":429,"end":443,"name":"emulatorConfig"}}},{"type":"IfStatement","start":454,"end":865,"test":{"type":"UnaryExpression","start":458,"end":484,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":459,"end":484,"object":{"type":"CallExpression","start":459,"end":477,"callee":{"type":"MemberExpression","start":459,"end":475,"object":{"type":"Identifier","start":459,"end":467,"name":"firebase"},"property":{"type":"Identifier","start":468,"end":475,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":478,"end":484,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":486,"end":743,"body":[{"type":"IfStatement","start":501,"end":732,"test":{"type":"Identifier","start":505,"end":511,"name":"config"},"consequent":{"type":"BlockStatement","start":513,"end":588,"body":[{"type":"ExpressionStatement","start":532,"end":573,"expression":{"type":"AssignmentExpression","start":532,"end":572,"operator":"=","left":{"type":"MemberExpression","start":532,"end":548,"object":{"type":"ThisExpression","start":532,"end":536},"property":{"type":"Identifier","start":537,"end":548,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":551,"end":572,"callee":{"type":"Identifier","start":551,"end":564,"name":"initializeApp"},"arguments":[{"type":"Identifier","start":565,"end":571,"name":"config"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":607,"end":732,"body":[{"type":"ThrowStatement","start":626,"end":717,"argument":{"type":"NewExpression","start":632,"end":716,"callee":{"type":"Identifier","start":636,"end":641,"name":"Error"},"arguments":[{"type":"Literal","start":642,"end":715,"value":"No previous Firebase App initialized so please provide a FirebaseConfig","raw":"'No previous Firebase App initialized so please provide a FirebaseConfig'"}]}}]}}]},"alternate":{"type":"BlockStatement","start":758,"end":865,"body":[{"type":"ExpressionStatement","start":773,"end":814,"expression":{"type":"AssignmentExpression","start":773,"end":813,"operator":"=","left":{"type":"MemberExpression","start":773,"end":789,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":789,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":792,"end":813,"object":{"type":"CallExpression","start":792,"end":810,"callee":{"type":"MemberExpression","start":792,"end":808,"object":{"type":"Identifier","start":792,"end":800,"name":"firebase"},"property":{"type":"Identifier","start":801,"end":808,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Literal","start":811,"end":812,"value":0,"raw":"0"},"computed":true,"optional":false}}}]}},{"type":"IfStatement","start":875,"end":1134,"test":{"type":"Identifier","start":879,"end":893,"name":"emulatorConfig"},"consequent":{"type":"BlockStatement","start":895,"end":1134,"body":[{"type":"ExpressionStatement","start":910,"end":1009,"expression":{"type":"CallExpression","start":910,"end":1008,"callee":{"type":"Identifier","start":910,"end":934,"name":"connectFirestoreEmulator"},"arguments":[{"type":"CallExpression","start":935,"end":965,"callee":{"type":"Identifier","start":935,"end":947,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":948,"end":964,"object":{"type":"ThisExpression","start":948,"end":952},"property":{"type":"Identifier","start":953,"end":964,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false},{"type":"MemberExpression","start":967,"end":986,"object":{"type":"Identifier","start":967,"end":981,"name":"emulatorConfig"},"property":{"type":"Identifier","start":982,"end":986,"name":"host"},"computed":false,"optional":false},{"type":"MemberExpression","start":988,"end":1007,"object":{"type":"Identifier","start":988,"end":1002,"name":"emulatorConfig"},"property":{"type":"Identifier","start":1003,"end":1007,"name":"port"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1146,"end":1423,"expression":{"type":"AssignmentExpression","start":1146,"end":1422,"operator":"=","left":{"type":"MemberExpression","start":1146,"end":1169,"object":{"type":"Identifier","start":1146,"end":1164,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1165,"end":1169,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1172,"end":1422,"callee":{"type":"MemberExpression","start":1172,"end":1193,"object":{"type":"Identifier","start":1172,"end":1174,"name":"i0"},"property":{"type":"Identifier","start":1175,"end":1193,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1194,"end":1421,"properties":[{"type":"Property","start":1196,"end":1216,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1196,"end":1206,"name":"minVersion"},"value":{"type":"Literal","start":1208,"end":1216,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1218,"end":1235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1218,"end":1225,"name":"version"},"value":{"type":"Literal","start":1227,"end":1235,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1237,"end":1249,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1237,"end":1245,"name":"ngImport"},"value":{"type":"Identifier","start":1247,"end":1249,"name":"i0"},"kind":"init"},{"type":"Property","start":1251,"end":1275,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1251,"end":1255,"name":"type"},"value":{"type":"Identifier","start":1257,"end":1275,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1277,"end":1380,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1277,"end":1281,"name":"deps"},"value":{"type":"ArrayExpression","start":1283,"end":1380,"elements":[{"type":"ObjectExpression","start":1284,"end":1328,"properties":[{"type":"Property","start":1286,"end":1310,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1286,"end":1291,"name":"token"},"value":{"type":"MemberExpression","start":1293,"end":1310,"object":{"type":"Identifier","start":1293,"end":1295,"name":"i1"},"property":{"type":"Identifier","start":1296,"end":1310,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1312,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1312,"end":1320,"name":"optional"},"value":{"type":"Literal","start":1322,"end":1326,"value":true,"raw":"true"},"kind":"init"}]},{"type":"ObjectExpression","start":1330,"end":1379,"properties":[{"type":"Property","start":1332,"end":1361,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1332,"end":1337,"name":"token"},"value":{"type":"Identifier","start":1339,"end":1361,"name":"FIRESTORE_USE_EMULATOR"},"kind":"init"},{"type":"Property","start":1363,"end":1377,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1363,"end":1371,"name":"optional"},"value":{"type":"Literal","start":1373,"end":1377,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1382,"end":1419,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1382,"end":1388,"name":"target"},"value":{"type":"MemberExpression","start":1390,"end":1419,"object":{"type":"MemberExpression","start":1390,"end":1408,"object":{"type":"Identifier","start":1390,"end":1392,"name":"i0"},"property":{"type":"Identifier","start":1393,"end":1408,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1409,"end":1419,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1425,"end":1582,"expression":{"type":"AssignmentExpression","start":1425,"end":1581,"operator":"=","left":{"type":"MemberExpression","start":1425,"end":1449,"object":{"type":"Identifier","start":1425,"end":1443,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1444,"end":1449,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1452,"end":1581,"callee":{"type":"MemberExpression","start":1452,"end":1476,"object":{"type":"Identifier","start":1452,"end":1454,"name":"i0"},"property":{"type":"Identifier","start":1455,"end":1476,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1477,"end":1580,"properties":[{"type":"Property","start":1479,"end":1499,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1479,"end":1489,"name":"minVersion"},"value":{"type":"Literal","start":1491,"end":1499,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1501,"end":1518,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1501,"end":1508,"name":"version"},"value":{"type":"Literal","start":1510,"end":1518,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1520,"end":1532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1520,"end":1528,"name":"ngImport"},"value":{"type":"Identifier","start":1530,"end":1532,"name":"i0"},"kind":"init"},{"type":"Property","start":1534,"end":1558,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1534,"end":1538,"name":"type"},"value":{"type":"Identifier","start":1540,"end":1558,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1560,"end":1578,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1560,"end":1570,"name":"providedIn"},"value":{"type":"Literal","start":1572,"end":1578,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1584,"end":2225,"expression":{"type":"CallExpression","start":1584,"end":2224,"callee":{"type":"MemberExpression","start":1584,"end":1611,"object":{"type":"Identifier","start":1584,"end":1586,"name":"i0"},"property":{"type":"Identifier","start":1587,"end":1611,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1612,"end":2223,"properties":[{"type":"Property","start":1614,"end":1634,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1614,"end":1624,"name":"minVersion"},"value":{"type":"Literal","start":1626,"end":1634,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1636,"end":1653,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1636,"end":1643,"name":"version"},"value":{"type":"Literal","start":1645,"end":1653,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1655,"end":1667,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1655,"end":1663,"name":"ngImport"},"value":{"type":"Identifier","start":1665,"end":1667,"name":"i0"},"kind":"init"},{"type":"Property","start":1669,"end":1693,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1669,"end":1673,"name":"type"},"value":{"type":"Identifier","start":1675,"end":1693,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1695,"end":1834,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1695,"end":1705,"name":"decorators"},"value":{"type":"ArrayExpression","start":1707,"end":1834,"elements":[{"type":"ObjectExpression","start":1708,"end":1833,"properties":[{"type":"Property","start":1723,"end":1739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1723,"end":1727,"name":"type"},"value":{"type":"Identifier","start":1729,"end":1739,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1754,"end":1822,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1754,"end":1758,"name":"args"},"value":{"type":"ArrayExpression","start":1760,"end":1822,"elements":[{"type":"ObjectExpression","start":1761,"end":1821,"properties":[{"type":"Property","start":1784,"end":1802,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1794,"name":"providedIn"},"value":{"type":"Literal","start":1796,"end":1802,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1836,"end":2221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1836,"end":1850,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1852,"end":2221,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2221,"body":[{"type":"ReturnStatement","start":1875,"end":2214,"argument":{"type":"ArrayExpression","start":1882,"end":2213,"elements":[{"type":"ObjectExpression","start":1883,"end":1990,"properties":[{"type":"Property","start":1885,"end":1908,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1885,"end":1889,"name":"type"},"value":{"type":"MemberExpression","start":1891,"end":1908,"object":{"type":"Identifier","start":1891,"end":1893,"name":"i1"},"property":{"type":"Identifier","start":1894,"end":1908,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1910,"end":1988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1920,"name":"decorators"},"value":{"type":"ArrayExpression","start":1922,"end":1988,"elements":[{"type":"ObjectExpression","start":1923,"end":1987,"properties":[{"type":"Property","start":1950,"end":1964,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1950,"end":1954,"name":"type"},"value":{"type":"Identifier","start":1956,"end":1964,"name":"Optional"},"kind":"init"}]}]},"kind":"init"}]},{"type":"ObjectExpression","start":1992,"end":2212,"properties":[{"type":"Property","start":1994,"end":2009,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1994,"end":1998,"name":"type"},"value":{"type":"Identifier","start":2000,"end":2009,"name":"undefined"},"kind":"init"},{"type":"Property","start":2011,"end":2210,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2011,"end":2021,"name":"decorators"},"value":{"type":"ArrayExpression","start":2023,"end":2210,"elements":[{"type":"ObjectExpression","start":2024,"end":2088,"properties":[{"type":"Property","start":2051,"end":2065,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2051,"end":2055,"name":"type"},"value":{"type":"Identifier","start":2057,"end":2065,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2090,"end":2209,"properties":[{"type":"Property","start":2117,"end":2129,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2117,"end":2121,"name":"type"},"value":{"type":"Identifier","start":2123,"end":2129,"name":"Inject"},"kind":"init"},{"type":"Property","start":2156,"end":2186,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2156,"end":2160,"name":"args"},"value":{"type":"ArrayExpression","start":2162,"end":2186,"elements":[{"type":"Identifier","start":2163,"end":2185,"name":"FIRESTORE_USE_EMULATOR"}]},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","start":2227,"end":5597},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":5599,"end":5724}]},"code":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i1.FirebaseConfig, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [FIRESTORE_USE_EMULATOR]\r\n                    }] }];\r\n    } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","firebase/app","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firebase.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,16],[27,0,0,26],[29,0,0,28],[37,0,0,36],[39,0,0,37],[45,0,0,43],[60,0,0,58],[61,0,0,59]],[[0,0,2,0],[7,0,2,7],[9,0,2,24],[31,0,2,46],[33,0,2,72],[39,0,2,78],[49,0,2,88],[50,0,2,89]],[[0,0,3,0],[7,0,3,7],[15,0,3,15],[17,0,3,17],[19,0,3,31],[32,0,3,44],[34,0,3,45],[40,0,3,51],[54,0,3,65],[55,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[33,0,4,32],[35,0,4,34],[47,0,4,46],[49,0,4,48],[55,0,4,54],[75,0,4,74],[76,0,4,75]],[],[],[[0,0,11,0],[6,0,11,6],[13,0,11,13],[31,0,11,31]],[[4,0,20,2],[16,0,20,26],[22,0,20,49],[24,0,21,65],[38,0,21,105]],[[8,0,21,65],[27,0,21,79],[30,0,21,65],[44,0,21,79],[45,0,21,105]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[22,0,23,18],[29,0,23,25],[31,0,23,27],[32,0,23,28],[38,0,23,34],[40,0,23,36]],[[12,0,24,6],[16,0,24,10],[22,0,24,16],[24,0,24,18]],[[16,0,25,8],[20,0,25,12],[21,0,25,13],[32,0,25,24],[35,0,25,27],[48,0,25,40],[49,0,25,41],[55,0,25,47],[56,0,25,48],[57,0,25,49]],[[13,0,26,7]],[[17,0,26,13]],[[16,0,27,8],[22,0,27,14],[26,0,27,18],[31,0,27,23],[32,0,27,24],[105,0,27,97],[106,0,27,98],[107,0,27,98]],[[13,0,28,7]],[[9,0,30,5]],[[13,0,30,11]],[[12,0,31,6],[16,0,31,10],[17,0,31,11],[28,0,31,22],[31,0,31,25],[39,0,31,33],[40,0,31,34],[47,0,31,41],[49,0,31,43],[50,0,31,44],[51,0,31,45],[52,0,31,46],[53,0,31,47],[54,0,31,48],[93,0,31,87]],[[9,0,32,5]],[[8,0,34,4],[12,0,34,8],[26,0,34,22],[28,0,34,24]],[[12,0,35,6],[36,0,35,30],[37,0,35,31],[49,0,35,43],[50,0,35,44],[54,0,35,48],[55,0,35,49],[66,0,35,60],[67,0,35,61],[69,0,35,63],[83,0,35,77],[84,0,35,78],[88,0,35,82],[90,0,35,84],[104,0,35,98],[105,0,35,99],[109,0,35,103],[110,0,35,104],[111,0,35,105],[112,0,35,106],[117,0,35,111]],[[12,0,36,6],[106,0,36,100]],[[9,0,37,5]],[[4,0,38,2],[5,0,38,3]],[],[[111,0,11,13],[129,0,11,31],[193,0,21,34],[215,0,21,56]],[[115,0,11,13],[133,0,11,31],[147,0,8,14],[153,0,8,20]],[[91,0,11,13],[109,0,11,31]],[[18,0,7,1],[28,0,7,11]],[[19,0,7,12]],[[20,0,8,2],[30,0,8,12],[32,0,8,14],[38,0,8,20]],[[17,0,9,1]],[],[[26,0,20,15],[34,0,20,23]],[],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[32,0,21,33]],[[27,0,21,34],[49,0,21,56]]],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\n\nimport {FirebaseConfig, FIRESTORE_USE_EMULATOR, FirestoreEmulatorConfig} from './config';\nimport firebase, {FirebaseApp, initializeApp} from 'firebase/app';\nimport {connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxFirebaseService {\n  /**\n   * Service that holds the Firebase App\n   * Inject this service into any other service that requires the Firebase App\n   *\n   * For example NgxFireStoreExtendedService injects this service\n   */\n  public firebaseApp: FirebaseApp;\n\n  constructor(@Optional() config?: FirebaseConfig,\n              @Optional() @Inject(FIRESTORE_USE_EMULATOR) public emulatorConfig?: FirestoreEmulatorConfig) {\n\n    if (!firebase.getApps().length) {\n      if (config) {\n        this.firebaseApp = initializeApp(config);\n      } else {\n        throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig')\n      }\n\n    } else {\n      this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\n    }\n\n    if (emulatorConfig) {\n      connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\n      // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\n    }\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/app":{"external":true,"id":"firebase/app","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[15,0,0,15],[17,0,0,17],[27,0,0,27],[29,0,0,29],[37,0,0,37],[39,0,0,39],[45,0,0,45],[60,0,0,60],[61,0,0,61]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[31,0,1,31],[33,0,1,33],[39,0,1,39],[49,0,1,49],[50,0,1,50]],[[0,0,2,0],[7,0,2,7],[15,0,2,15],[17,0,2,17],[19,0,2,19],[32,0,2,32],[34,0,2,34],[40,0,2,40],[54,0,2,54],[55,0,2,55]],[[0,0,3,0],[7,0,3,7],[9,0,3,9],[33,0,3,33],[35,0,3,35],[47,0,3,47],[49,0,3,49],[55,0,3,55],[75,0,3,75],[76,0,3,76]],[[0,0,4,0],[7,0,4,7],[12,0,4,12],[14,0,4,14],[20,0,4,20],[35,0,4,35],[36,0,4,36]],[[0,0,5,0],[7,0,5,7],[12,0,5,12],[14,0,5,14],[20,0,5,20],[30,0,5,30],[31,0,5,31]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[31,0,6,31]],[[4,0,7,4],[16,0,7,16],[22,0,7,22],[24,0,7,24],[38,0,7,38]],[[8,0,8,8],[12,0,8,12],[13,0,8,13],[27,0,8,27],[30,0,8,30],[44,0,8,44],[45,0,8,45]],[[8,0,9,8],[12,0,9,12],[13,0,9,13],[21,0,9,21],[22,0,9,22],[29,0,9,29],[31,0,9,31],[32,0,9,32],[38,0,9,38],[40,0,9,40]],[[12,0,10,12],[16,0,10,16],[22,0,10,22],[24,0,10,24]],[[16,0,11,16],[20,0,11,20],[21,0,11,21],[32,0,11,32],[35,0,11,35],[48,0,11,48],[49,0,11,49],[55,0,11,55],[56,0,11,56],[57,0,11,57]],[[13,0,12,13]],[[17,0,13,17]],[[16,0,14,16],[22,0,14,22],[26,0,14,26],[31,0,14,31],[32,0,14,32],[105,0,14,105],[106,0,14,106],[107,0,14,107]],[[13,0,15,13]],[[9,0,16,9]],[[13,0,17,13]],[[12,0,18,12],[16,0,18,16],[17,0,18,17],[28,0,18,28],[31,0,18,31],[39,0,18,39],[40,0,18,40],[47,0,18,47],[49,0,18,49],[50,0,18,50],[51,0,18,51],[52,0,18,52],[53,0,18,53],[54,0,18,54],[93,0,18,93]],[[9,0,19,9]],[[8,0,20,8],[12,0,20,12],[26,0,20,26],[28,0,20,28]],[[12,0,21,12],[36,0,21,36],[37,0,21,37],[49,0,21,49],[50,0,21,50],[54,0,21,54],[55,0,21,55],[66,0,21,66],[67,0,21,67],[69,0,21,69],[83,0,21,83],[84,0,21,84],[88,0,21,88],[90,0,21,90],[104,0,21,104],[105,0,21,105],[109,0,21,109],[110,0,21,110],[111,0,21,111],[112,0,21,112],[117,0,21,117]],[[12,0,22,12],[106,0,22,106]],[[9,0,23,9]],[[4,0,24,4],[5,0,24,5]],[[1,0,25,1]],[[0,0,26,0],[18,0,26,18],[19,0,26,19],[23,0,26,23],[26,0,26,26],[28,0,26,28],[29,0,26,29],[47,0,26,47],[48,0,26,48],[50,0,26,50],[60,0,26,60],[62,0,26,62],[70,0,26,70],[72,0,26,72],[79,0,26,79],[81,0,26,81],[89,0,26,89],[91,0,26,91],[99,0,26,99],[101,0,26,101],[103,0,26,103],[105,0,26,105],[109,0,26,109],[111,0,26,111],[129,0,26,129],[131,0,26,131],[135,0,26,135],[137,0,26,137],[138,0,26,138],[140,0,26,140],[145,0,26,145],[147,0,26,147],[149,0,26,149],[150,0,26,150],[164,0,26,164],[166,0,26,166],[174,0,26,174],[176,0,26,176],[180,0,26,180],[182,0,26,182],[184,0,26,184],[186,0,26,186],[191,0,26,191],[193,0,26,193],[215,0,26,215],[217,0,26,217],[225,0,26,225],[227,0,26,227],[231,0,26,231],[233,0,26,233],[234,0,26,234],[236,0,26,236],[242,0,26,242],[244,0,26,244],[246,0,26,246],[247,0,26,247],[262,0,26,262],[263,0,26,263],[273,0,26,273],[275,0,26,275],[276,0,26,276],[277,0,26,277]],[[0,0,27,0],[18,0,27,18],[19,0,27,19],[24,0,27,24],[27,0,27,27],[29,0,27,29],[30,0,27,30],[51,0,27,51],[52,0,27,52],[54,0,27,54],[64,0,27,64],[66,0,27,66],[74,0,27,74],[76,0,27,76],[83,0,27,83],[85,0,27,85],[93,0,27,93],[95,0,27,95],[103,0,27,103],[105,0,27,105],[107,0,27,107],[109,0,27,109],[113,0,27,113],[115,0,27,115],[133,0,27,133],[135,0,27,135],[145,0,27,145],[147,0,27,147],[153,0,27,153],[155,0,27,155],[156,0,27,156],[157,0,27,157]],[[0,0,28,0],[2,0,28,2],[3,0,28,3],[27,0,28,27],[28,0,28,28],[30,0,28,30],[40,0,28,40],[42,0,28,42],[50,0,28,50],[52,0,28,52],[59,0,28,59],[61,0,28,61],[69,0,28,69],[71,0,28,71],[79,0,28,79],[81,0,28,81],[83,0,28,83],[85,0,28,85],[89,0,28,89],[91,0,28,91],[109,0,28,109],[111,0,28,111],[121,0,28,121],[123,0,28,123],[124,0,28,124]],[[12,0,29,12],[16,0,29,16],[18,0,29,18],[28,0,29,28]],[[12,0,30,12],[16,0,30,16],[18,0,30,18],[19,0,30,19]],[[20,0,31,20],[30,0,31,30],[32,0,31,32],[38,0,31,38]],[[17,0,32,17],[18,0,32,18]],[[9,0,33,9],[10,0,33,10],[12,0,33,12],[26,0,33,26],[28,0,33,28]],[[8,0,33,42],[15,0,33,49],[16,0,33,50],[18,0,33,52],[22,0,33,56],[24,0,33,58],[26,0,33,60],[27,0,33,61],[41,0,33,75],[43,0,33,77],[53,0,33,87],[55,0,33,89],[56,0,33,90]],[[24,0,34,20],[28,0,34,24],[30,0,34,26],[38,0,34,34]],[[21,0,35,17],[22,0,35,18],[24,0,35,20],[26,0,35,22],[28,0,35,24],[32,0,35,28],[34,0,35,30],[43,0,35,39],[45,0,35,41],[55,0,35,51],[57,0,35,53],[58,0,35,54]],[[24,0,36,20],[28,0,36,24],[30,0,36,26],[38,0,36,34]],[[21,0,37,17],[23,0,37,19]],[[24,0,38,20],[28,0,38,24],[30,0,38,26],[36,0,38,32]],[[24,0,39,20],[28,0,39,24],[30,0,39,26],[31,0,39,27],[53,0,39,49],[54,0,39,50]],[[21,0,40,17],[22,0,40,18],[24,0,40,20],[25,0,40,21],[26,0,40,22]],[[4,0,40,23],[5,0,40,24],[7,0,40,26],[8,0,40,27],[9,0,40,28]],[[0,0,41,0],[3370,0,41,3370]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3243,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"Injectable"},"local":{"type":"Identifier","start":9,"end":19,"name":"Injectable"}}],"source":{"type":"Literal","start":27,"end":42,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":45,"end":104,"specifiers":[{"type":"ImportSpecifier","start":54,"end":66,"imported":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"},"local":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"}}],"source":{"type":"Literal","start":74,"end":103,"value":"../firestore-extended.class","raw":"'../firestore-extended.class'"}},{"type":"ImportDeclaration","start":106,"end":142,"specifiers":[{"type":"ImportNamespaceSpecifier","start":113,"end":120,"local":{"type":"Identifier","start":118,"end":120,"name":"i0"}}],"source":{"type":"Literal","start":126,"end":141,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":144,"end":189,"specifiers":[{"type":"ImportNamespaceSpecifier","start":151,"end":158,"local":{"type":"Identifier","start":156,"end":158,"name":"i1"}}],"source":{"type":"Literal","start":164,"end":188,"value":"./ngx-firebase.service","raw":"\"./ngx-firebase.service\""}},{"type":"ExportNamedDeclaration","start":191,"end":581,"declaration":{"type":"ClassDeclaration","start":198,"end":581,"id":{"type":"Identifier","start":204,"end":231,"name":"NgxFirestoreExtendedService"},"superClass":null,"body":{"type":"ClassBody","start":232,"end":581,"body":[{"type":"MethodDefinition","start":239,"end":458,"static":false,"computed":false,"key":{"type":"Identifier","start":239,"end":250,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":250,"end":458,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":251,"end":269,"name":"ngxFirebaseService"}],"body":{"type":"BlockStatement","start":271,"end":458,"body":[{"type":"ExpressionStatement","start":282,"end":327,"expression":{"type":"AssignmentExpression","start":282,"end":326,"operator":"=","left":{"type":"MemberExpression","start":282,"end":305,"object":{"type":"ThisExpression","start":282,"end":286},"property":{"type":"Identifier","start":287,"end":305,"name":"ngxFirebaseService"},"computed":false,"optional":false},"right":{"type":"Identifier","start":308,"end":326,"name":"ngxFirebaseService"}}},{"type":"ExpressionStatement","start":337,"end":401,"expression":{"type":"AssignmentExpression","start":337,"end":400,"operator":"=","left":{"type":"MemberExpression","start":337,"end":349,"object":{"type":"ThisExpression","start":337,"end":341},"property":{"type":"Identifier","start":342,"end":349,"name":"fireExt"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":352,"end":400,"callee":{"type":"Identifier","start":356,"end":368,"name":"FirestoreExt"},"arguments":[{"type":"MemberExpression","start":369,"end":399,"object":{"type":"Identifier","start":369,"end":387,"name":"ngxFirebaseService"},"property":{"type":"Identifier","start":388,"end":399,"name":"firebaseApp"},"computed":false,"optional":false}]}}}]}}},{"type":"MethodDefinition","start":464,"end":578,"static":false,"computed":false,"key":{"type":"Identifier","start":468,"end":479,"name":"firebaseApp"},"kind":"get","value":{"type":"FunctionExpression","start":479,"end":578,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":482,"end":578,"body":[{"type":"ReturnStatement","start":528,"end":571,"argument":{"type":"MemberExpression","start":535,"end":570,"object":{"type":"MemberExpression","start":535,"end":558,"object":{"type":"ThisExpression","start":535,"end":539},"property":{"type":"Identifier","start":540,"end":558,"name":"ngxFirebaseService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":559,"end":570,"name":"firebaseApp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":583,"end":815,"expression":{"type":"AssignmentExpression","start":583,"end":814,"operator":"=","left":{"type":"MemberExpression","start":583,"end":615,"object":{"type":"Identifier","start":583,"end":610,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":611,"end":615,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":618,"end":814,"callee":{"type":"MemberExpression","start":618,"end":639,"object":{"type":"Identifier","start":618,"end":620,"name":"i0"},"property":{"type":"Identifier","start":621,"end":639,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":640,"end":813,"properties":[{"type":"Property","start":642,"end":662,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":642,"end":652,"name":"minVersion"},"value":{"type":"Literal","start":654,"end":662,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":664,"end":681,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":664,"end":671,"name":"version"},"value":{"type":"Literal","start":673,"end":681,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":683,"end":695,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":683,"end":691,"name":"ngImport"},"value":{"type":"Identifier","start":693,"end":695,"name":"i0"},"kind":"init"},{"type":"Property","start":697,"end":730,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":697,"end":701,"name":"type"},"value":{"type":"Identifier","start":703,"end":730,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":732,"end":772,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":732,"end":736,"name":"deps"},"value":{"type":"ArrayExpression","start":738,"end":772,"elements":[{"type":"ObjectExpression","start":739,"end":771,"properties":[{"type":"Property","start":741,"end":769,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":741,"end":746,"name":"token"},"value":{"type":"MemberExpression","start":748,"end":769,"object":{"type":"Identifier","start":748,"end":750,"name":"i1"},"property":{"type":"Identifier","start":751,"end":769,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":774,"end":811,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":774,"end":780,"name":"target"},"value":{"type":"MemberExpression","start":782,"end":811,"object":{"type":"MemberExpression","start":782,"end":800,"object":{"type":"Identifier","start":782,"end":784,"name":"i0"},"property":{"type":"Identifier","start":785,"end":800,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":801,"end":811,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":817,"end":992,"expression":{"type":"AssignmentExpression","start":817,"end":991,"operator":"=","left":{"type":"MemberExpression","start":817,"end":850,"object":{"type":"Identifier","start":817,"end":844,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":845,"end":850,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":853,"end":991,"callee":{"type":"MemberExpression","start":853,"end":877,"object":{"type":"Identifier","start":853,"end":855,"name":"i0"},"property":{"type":"Identifier","start":856,"end":877,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":878,"end":990,"properties":[{"type":"Property","start":880,"end":900,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":880,"end":890,"name":"minVersion"},"value":{"type":"Literal","start":892,"end":900,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":902,"end":919,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":902,"end":909,"name":"version"},"value":{"type":"Literal","start":911,"end":919,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":921,"end":933,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":921,"end":929,"name":"ngImport"},"value":{"type":"Identifier","start":931,"end":933,"name":"i0"},"kind":"init"},{"type":"Property","start":935,"end":968,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":935,"end":939,"name":"type"},"value":{"type":"Identifier","start":941,"end":968,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":970,"end":988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":970,"end":980,"name":"providedIn"},"value":{"type":"Literal","start":982,"end":988,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":994,"end":1332,"expression":{"type":"CallExpression","start":994,"end":1331,"callee":{"type":"MemberExpression","start":994,"end":1021,"object":{"type":"Identifier","start":994,"end":996,"name":"i0"},"property":{"type":"Identifier","start":997,"end":1021,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1022,"end":1330,"properties":[{"type":"Property","start":1024,"end":1044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1024,"end":1034,"name":"minVersion"},"value":{"type":"Literal","start":1036,"end":1044,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1046,"end":1063,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1046,"end":1053,"name":"version"},"value":{"type":"Literal","start":1055,"end":1063,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1065,"end":1077,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1065,"end":1073,"name":"ngImport"},"value":{"type":"Identifier","start":1075,"end":1077,"name":"i0"},"kind":"init"},{"type":"Property","start":1079,"end":1112,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1079,"end":1083,"name":"type"},"value":{"type":"Identifier","start":1085,"end":1112,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":1114,"end":1253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1114,"end":1124,"name":"decorators"},"value":{"type":"ArrayExpression","start":1126,"end":1253,"elements":[{"type":"ObjectExpression","start":1127,"end":1252,"properties":[{"type":"Property","start":1142,"end":1158,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1142,"end":1146,"name":"type"},"value":{"type":"Identifier","start":1148,"end":1158,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1173,"end":1241,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1173,"end":1177,"name":"args"},"value":{"type":"ArrayExpression","start":1179,"end":1241,"elements":[{"type":"ObjectExpression","start":1180,"end":1240,"properties":[{"type":"Property","start":1203,"end":1221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1203,"end":1213,"name":"providedIn"},"value":{"type":"Literal","start":1215,"end":1221,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1255,"end":1328,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1255,"end":1269,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1271,"end":1328,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1283,"end":1328,"body":[{"type":"ReturnStatement","start":1285,"end":1326,"argument":{"type":"ArrayExpression","start":1292,"end":1325,"elements":[{"type":"ObjectExpression","start":1293,"end":1324,"properties":[{"type":"Property","start":1295,"end":1322,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1295,"end":1299,"name":"type"},"value":{"type":"MemberExpression","start":1301,"end":1322,"object":{"type":"Identifier","start":1301,"end":1303,"name":"i1"},"property":{"type":"Identifier","start":1304,"end":1322,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","start":1334,"end":3116},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","start":3118,"end":3243}]},"code":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/lib/ngx/module.js.map","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firestore-extended.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firestore-extended.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[19,0,0,18],[21,0,0,19],[27,0,0,25],[42,0,0,40],[43,0,0,41]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[58,0,4,56],[59,0,4,57]],[],[],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[40,0,9,40]],[[4,0,13,2],[16,0,13,22],[34,0,13,60]],[[8,0,13,22],[31,0,13,40],[34,0,13,22],[52,0,13,40],[53,0,13,60]],[[8,0,14,4],[12,0,14,8],[13,0,14,9],[20,0,14,16],[23,0,14,19],[27,0,14,23],[39,0,14,35],[40,0,14,36],[58,0,14,54],[59,0,14,55],[70,0,14,66],[71,0,14,67],[72,0,14,68],[73,0,14,70],[122,0,14,119]],[[4,0,15,2],[5,0,15,3]],[[4,0,17,2],[8,0,17,6],[19,0,17,17]],[[8,0,18,4],[33,0,18,29]],[[8,0,19,4],[15,0,19,11],[19,0,19,15],[20,0,19,16],[38,0,19,34],[39,0,19,35],[50,0,19,46],[51,0,19,47]],[[4,0,20,2],[5,0,20,3]],[],[[120,0,9,13],[147,0,9,40]],[[124,0,9,13],[151,0,9,40],[165,0,7,14],[171,0,7,20]],[[91,0,9,13],[118,0,9,40]],[[18,0,6,1],[28,0,6,11]],[[19,0,6,12]],[[20,0,7,2],[30,0,7,12],[32,0,7,14],[38,0,7,20]],[[17,0,8,1]]],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {NgxFirebaseService} from './ngx-firebase.service';\nimport {FirebaseApp} from 'firebase/app';\nimport {FirestoreExt} from '../firestore-extended.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFirestoreExtendedService {\n\n  public fireExt: FirestoreExt;\n\n  constructor(private ngxFirebaseService: NgxFirebaseService) {\n    this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp);  /* inject Firebase App from NgxFirebaseService */\n  }\n\n  get firebaseApp(): FirebaseApp {\n    /** Convenience getter */\n    return this.ngxFirebaseService.firebaseApp;\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[19,0,0,19],[21,0,0,21],[27,0,0,27],[42,0,0,42],[43,0,0,43]],[[0,0,1,0],[7,0,1,7],[9,0,1,9],[21,0,1,21],[23,0,1,23],[29,0,1,29],[58,0,1,58],[59,0,1,59]],[[0,0,2,0],[7,0,2,7],[12,0,2,12],[14,0,2,14],[20,0,2,20],[35,0,2,35],[36,0,2,36]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[14,0,3,14],[20,0,3,20],[44,0,3,44],[45,0,3,45]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[40,0,4,40]],[[4,0,5,4],[16,0,5,16],[34,0,5,34]],[[8,0,6,8],[12,0,6,12],[13,0,6,13],[31,0,6,31],[34,0,6,34],[52,0,6,52],[53,0,6,53]],[[8,0,7,8],[12,0,7,12],[13,0,7,13],[20,0,7,20],[23,0,7,23],[27,0,7,27],[39,0,7,39],[40,0,7,40],[58,0,7,58],[59,0,7,59],[70,0,7,70],[71,0,7,71],[72,0,7,72],[73,0,7,73],[122,0,7,122]],[[4,0,8,4],[5,0,8,5]],[[4,0,9,4],[8,0,9,8],[19,0,9,19]],[[8,0,10,8],[33,0,10,33]],[[8,0,11,8],[15,0,11,15],[19,0,11,19],[20,0,11,20],[38,0,11,38],[39,0,11,39],[50,0,11,50],[51,0,11,51]],[[4,0,12,4],[5,0,12,5]],[[1,0,13,1]],[[0,0,14,0],[27,0,14,27],[28,0,14,28],[32,0,14,32],[35,0,14,35],[37,0,14,37],[38,0,14,38],[56,0,14,56],[57,0,14,57],[59,0,14,59],[69,0,14,69],[71,0,14,71],[79,0,14,79],[81,0,14,81],[88,0,14,88],[90,0,14,90],[98,0,14,98],[100,0,14,100],[108,0,14,108],[110,0,14,110],[112,0,14,112],[114,0,14,114],[118,0,14,118],[120,0,14,120],[147,0,14,147],[149,0,14,149],[153,0,14,153],[155,0,14,155],[156,0,14,156],[158,0,14,158],[163,0,14,163],[165,0,14,165],[167,0,14,167],[168,0,14,168],[186,0,14,186],[188,0,14,188],[189,0,14,189],[191,0,14,191],[197,0,14,197],[199,0,14,199],[201,0,14,201],[202,0,14,202],[217,0,14,217],[218,0,14,218],[228,0,14,228],[230,0,14,230],[231,0,14,231],[232,0,14,232]],[[0,0,15,0],[27,0,15,27],[28,0,15,28],[33,0,15,33],[36,0,15,36],[38,0,15,38],[39,0,15,39],[60,0,15,60],[61,0,15,61],[63,0,15,63],[73,0,15,73],[75,0,15,75],[83,0,15,83],[85,0,15,85],[92,0,15,92],[94,0,15,94],[102,0,15,102],[104,0,15,104],[112,0,15,112],[114,0,15,114],[116,0,15,116],[118,0,15,118],[122,0,15,122],[124,0,15,124],[151,0,15,151],[153,0,15,153],[163,0,15,163],[165,0,15,165],[171,0,15,171],[173,0,15,173],[174,0,15,174],[175,0,15,175]],[[0,0,16,0],[2,0,16,2],[3,0,16,3],[27,0,16,27],[28,0,16,28],[30,0,16,30],[40,0,16,40],[42,0,16,42],[50,0,16,50],[52,0,16,52],[59,0,16,59],[61,0,16,61],[69,0,16,69],[71,0,16,71],[79,0,16,79],[81,0,16,81],[83,0,16,83],[85,0,16,85],[89,0,16,89],[91,0,16,91],[118,0,16,118],[120,0,16,120],[130,0,16,130],[132,0,16,132],[133,0,16,133]],[[12,0,17,12],[16,0,17,16],[18,0,17,18],[28,0,17,28]],[[12,0,18,12],[16,0,18,16],[18,0,18,18],[19,0,18,19]],[[20,0,19,20],[30,0,19,30],[32,0,19,32],[38,0,19,38]],[[17,0,20,17],[18,0,20,18]],[[9,0,21,9],[10,0,21,10],[12,0,21,12],[26,0,21,26],[28,0,21,28],[42,0,21,42],[49,0,21,49],[50,0,21,50],[52,0,21,52],[56,0,21,56],[58,0,21,58],[60,0,21,60],[61,0,21,61],[79,0,21,79],[81,0,21,81],[82,0,21,82],[83,0,21,83],[84,0,21,84],[85,0,21,85],[87,0,21,87],[88,0,21,88],[89,0,21,89]],[[0,0,22,0],[1782,0,22,1782]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2643,"body":[{"type":"ExportAllDeclaration","start":81,"end":124,"exported":null,"source":{"type":"Literal","start":95,"end":123,"value":"./lib/models/firestoreItem","raw":"'./lib/models/firestoreItem'"}},{"type":"ExportAllDeclaration","start":126,"end":167,"exported":null,"source":{"type":"Literal","start":140,"end":166,"value":"./lib/firestore-extended","raw":"'./lib/firestore-extended'"}},{"type":"ExportAllDeclaration","start":169,"end":212,"exported":null,"source":{"type":"Literal","start":183,"end":211,"value":"./lib/sub-collection-query","raw":"'./lib/sub-collection-query'"}},{"type":"ExportAllDeclaration","start":214,"end":258,"exported":null,"source":{"type":"Literal","start":228,"end":257,"value":"./lib/sub-collection-writer","raw":"'./lib/sub-collection-writer'"}},{"type":"ExportAllDeclaration","start":260,"end":290,"exported":null,"source":{"type":"Literal","start":274,"end":289,"value":"./lib/helpers","raw":"'./lib/helpers'"}},{"type":"ExportAllDeclaration","start":292,"end":325,"exported":null,"source":{"type":"Literal","start":306,"end":324,"value":"./lib/interfaces","raw":"'./lib/interfaces'"}},{"type":"ExportAllDeclaration","start":351,"end":407,"exported":null,"source":{"type":"Literal","start":365,"end":406,"value":"./lib/rxjs-ops/combine-latest-to-object","raw":"'./lib/rxjs-ops/combine-latest-to-object'"}},{"type":"ExportAllDeclaration","start":449,"end":496,"exported":null,"source":{"type":"Literal","start":463,"end":495,"value":"./lib/firestore-extended.class","raw":"'./lib/firestore-extended.class'"}},{"type":"ExportAllDeclaration","start":498,"end":538,"exported":null,"source":{"type":"Literal","start":512,"end":537,"value":"./lib/firestore-wrapper","raw":"'./lib/firestore-wrapper'"}},{"type":"ExportAllDeclaration","start":563,"end":596,"exported":null,"source":{"type":"Literal","start":577,"end":595,"value":"./lib/ngx/config","raw":"'./lib/ngx/config'"}},{"type":"ExportAllDeclaration","start":598,"end":644,"exported":null,"source":{"type":"Literal","start":612,"end":643,"value":"./lib/ngx/ngx-firebase.module","raw":"'./lib/ngx/ngx-firebase.module'"}},{"type":"ExportAllDeclaration","start":646,"end":693,"exported":null,"source":{"type":"Literal","start":660,"end":692,"value":"./lib/ngx/ngx-firebase.service","raw":"'./lib/ngx/ngx-firebase.service'"}},{"type":"ExportAllDeclaration","start":695,"end":752,"exported":null,"source":{"type":"Literal","start":709,"end":751,"value":"./lib/ngx/ngx-firestore-extended.service","raw":"'./lib/ngx/ngx-firestore-extended.service'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","start":754,"end":2524},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","start":2526,"end":2643}]},"code":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[22,0,3,22]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,11,0],[22,0,11,22]],[[0,0,12,0],[14,0,12,14],[55,0,12,55],[56,0,12,56]],[[0,0,14,0],[38,0,14,38]],[[0,0,15,0],[14,0,15,14],[46,0,15,46],[47,0,15,47]],[[0,0,16,0],[14,0,16,14],[39,0,16,39],[40,0,16,40]],[[0,0,18,0],[21,0,18,21]],[[0,0,19,0],[14,0,19,14],[32,0,19,32],[33,0,19,33]],[[0,0,20,0],[14,0,20,14],[45,0,20,45],[46,0,20,46]],[[0,0,21,0],[14,0,21,14],[46,0,21,46],[47,0,21,47]],[[0,0,22,0],[14,0,22,14],[56,0,22,56],[57,0,22,57]]],"sourcesContent":["/*\n * Public API Surface of firestore-extended.ts\n */\n/* Base Api exports */\nexport * from './lib/models/firestoreItem';\nexport * from './lib/firestore-extended';\nexport * from './lib/sub-collection-query';\nexport * from './lib/sub-collection-writer';\nexport * from './lib/helpers';\nexport * from './lib/interfaces';\n\n/* Helper functions */\nexport * from './lib/rxjs-ops/combine-latest-to-object';\n\n/* Wrappers and Convenience Classes */\nexport * from './lib/firestore-extended.class';\nexport * from './lib/firestore-wrapper';\n\n/* Angular Exports */\nexport * from './lib/ngx/config';\nexport * from './lib/ngx/ngx-firebase.module';\nexport * from './lib/ngx/ngx-firebase.service';\nexport * from './lib/ngx/ngx-firestore-extended.service';\n\n"]},"resolvedIds":{"./lib/firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-query":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-writer":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/interfaces":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/models/firestoreItem":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/rxjs-ops/combine-latest-to-object":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.module":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firestore-extended.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[22,0,3,22]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,10,0],[22,0,10,22]],[[0,0,11,0],[14,0,11,14],[55,0,11,55],[56,0,11,56]],[[0,0,12,0],[38,0,12,38]],[[0,0,13,0],[14,0,13,14],[46,0,13,46],[47,0,13,47]],[[0,0,14,0],[14,0,14,14],[39,0,14,39],[40,0,14,40]],[[0,0,15,0],[21,0,15,21]],[[0,0,16,0],[14,0,16,14],[32,0,16,32],[33,0,16,33]],[[0,0,17,0],[14,0,17,14],[45,0,17,45],[46,0,17,46]],[[0,0,18,0],[14,0,18,14],[46,0,18,46],[47,0,18,47]],[[0,0,19,0],[14,0,19,14],[56,0,19,56],[57,0,19,57]],[[0,0,20,0],[1770,0,20,1770]]]}],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":651,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","start":82,"end":532},{"type":"Line","value":"# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","start":534,"end":651}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==\r\n//# sourceMappingURL=D:/Programming/web/ng/libraries/firestore-extended/dist/firestore-extended/esm2020/module.js.map","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[{"version":3,"file":"module.js","sourceRoot":"","sources":["module.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[14,0,3,14],[28,0,3,28],[29,0,3,29]],[[0,0,4,0],[450,0,4,450]]]}],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{},"downlevel-ts":{}}}