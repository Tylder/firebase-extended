{"modules":[{"ast":{"type":"Program","start":0,"end":4302,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","start":12,"end":4302}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL21vZGVscy9maXJlc3RvcmVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHtEb2N1bWVudERhdGEsIERvY3VtZW50UmVmZXJlbmNlLCBTbmFwc2hvdE1ldGFkYXRhLCBUaW1lc3RhbXAgYXMgRmlyZWJhc2VUaW1lc3RhbXB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcblxyXG4vKiogVGhlIG9iamVjdCByZXR1cm5lZCBieSBtb3N0IEZpcmVzdG9yZUV4dGVuZGVkIG1ldGhvZHMsXHJcbiAqIGNvbnRhaW5pbmcgdGhlIGRhdGFiYXNlIGRhdGEgYW5kIHRoZSBhZGRpdGlvbmFsIGRhdGEgZnJvbSBGaXJlU3RvcmVJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaXJlSXRlbTxUID0gRG9jdW1lbnREYXRhPiA9IFQgJiB7XHJcbiAgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+O1xyXG5cclxuICBtb2RpZmllZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbiAgY3JlYXRlZERhdGU/OiBEYXRlIHwgRmlyZWJhc2VUaW1lc3RhbXA7XHJcbn07XHJcblxyXG4vKipcclxuICogQW55IGRhdGEgdGhhdCB3aWxsIGJlIHNhdmVkIGFzIGEgZG9jIHRvIGZpcmVzdG9yZSBzaG91bGQgZXh0ZW5kIHRoaXMgaW50ZXJmYWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVJdGVtIHtcclxuICBmaXJlc3RvcmVNZXRhZGF0YT86IEZpcmVzdG9yZU1ldGFkYXRhPHRoaXM+O1xyXG4gIC8qKiB0aGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCBvciBsYXN0IG1vZGlmaWVkICovXHJcbiAgbW9kaWZpZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG4gIC8qKiBUaGUgRGF0ZSB3aGVuIHRoZSBkb2N1bWVudCB3YXMgY3JlYXRlZCAqL1xyXG4gIGNyZWF0ZWREYXRlPzogRGF0ZSB8IEZpcmViYXNlVGltZXN0YW1wO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGJhc2Ugb2JqZWN0IG9mIGFsbCBmaXJlc3RvcmUgZG9jdW1lbnRzLCBjb250YWluaW5nIGFkZGl0aW9uYWwgZGF0YSBmb3JcclxuICogZWFzeSBhbmQgZWZmaWNpZW50IGRvY3VtZW50IGVkaXRzLlxyXG4gKlxyXG4gKiBBbGwgcHJvcGVydGllcyBhcmUgb3B0aW9uYWwgc28gdGhhdCB3ZSBjYW4gd2UgY2FuIGltcGxlbWVudCB0aGlzIHdpdGhvdXQgYWRkaW5nIHRoZSB2YWx1ZXMuXHJcbiAqIFRoZSBwcm9wZXJ0aWVzIGFyZSBhZGRlZCB3aGVuIGdldHRpbmcgdGhlIGRvY3VtZW50IGZyb20gZmlyZXN0b3JlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVNZXRhZGF0YTxUID0gRG9jdW1lbnREYXRhPiB7XHJcblxyXG4gIC8qKiBUaGUgaWQgb2YgdGhlIEZpcmVzdG9yZSBkb2N1bWVudCAqL1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBwYXRoIHRvIHRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgKi9cclxuICBwYXRoOiBzdHJpbmc7XHJcbiAgLyoqIFRoZSBmaXJlc3RvcmUgZG9jdW1lbnQgcmVmZXJlbmNlICovXHJcbiAgcmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPjtcclxuXHJcbiAgLyoqIGFsbG93cyBmb3Igc2ltcGxlIGFuZCBjbGVhciBjaGVja3MgaWYgdGhlIGRvY3VtZW50IGV4aXN0cy5cclxuICAgKiBPbmx5IGFwcGxpZXMgd2hlbiBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBIGlzIHVzZWQgd2hlbiBsaXN0ZW5pbmcgZm9yIGRvY3VtZW50c1xyXG4gICAqIEBsaW5rIERvY05vdEV4aXN0QWN0aW9uXHJcbiAgICovXHJcbiAgaXNFeGlzdHM6IGJvb2xlYW47XHJcblxyXG4gIHNuYXBzaG90TWV0YWRhdGE/OiBTbmFwc2hvdE1ldGFkYXRhO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFVzZWQgZm9yIGRvY3VtZW50cyB0aGF0IHJlcXVpcmUgaW5kZXhpbmdcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8VD4gZXh0ZW5kcyBGaXJlc3RvcmVNZXRhZGF0YTxUPiB7XHJcbiAgLyoqIHRoZSBpbmRleCBvZiBkb2N1bWVudCAqL1xyXG4gIGluZGV4OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlyZXN0b3JlSXRlbVdJbmRleCBleHRlbmRzIEZpcmVzdG9yZUl0ZW0ge1xyXG4gIGZpcmVzdG9yZU1ldGFkYXRhPzogRmlyZXN0b3JlTWV0YWRhdGFXaXRoSW5kZXg8dGhpcz47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNhdmUgdGhlIHN0b3JhZ2VQYXRoIG9mIGl0ZW1zIGluIEZpcmViYXNlIFN0b3JhZ2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUl0ZW0ge1xyXG4gIC8qKiB0aGUgRmlyZWJhc2Ugc3RvcmFnZSBwYXRoICovXHJcbiAgc3RvcmFnZVBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqIEZpcmVzdG9yZSBkYXRhIGZvciBpbWFnZSBzdG9yZWQgb24gRmlyZWJhc2UgU3RvcmFnZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlSXRlbSBleHRlbmRzIFN0b3JhZ2VJdGVtIHtcclxuICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbWFnZSAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqIEZpbGVuYW1lIGluY2x1ZGluZyBleHRlbnNpb24gKi9cclxuICBmaWxlTmFtZTogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCAqL1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIC8qKiBGaXJlYmFzZSBzdG9yYWdlIHVybCB0byB1c2UgZm9yIHRodW1ibmFpbHMgKi9cclxuICB0aHVtYlVybDogc3RyaW5nO1xyXG4gIC8qKiB0aGUgPGltZyBhbHQ9XCJcIj4gKi9cclxuICBhbHQ/OiBzdHJpbmc7XHJcbiAgLyoqIEZpcmViYXNlIHN0b3JhZ2UgdXJsIHRoYXQgaXMgYXZhaWxhYmxlIHRvIGJlIGxpc3RlbmVkIHRvIGltbWVkaWF0ZWx5ICovXHJcbiAgdXJsJD86IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAvKiogRmlyZWJhc2Ugc3RvcmFnZSB1cmwgdGhhdCBpcyBhdmFpbGFibGUgdG8gYmUgbGlzdGVuZWQgdG8gaW1tZWRpYXRlbHkgdG8gdXNlIGZvciB0aHVtYm5haWxzICovXHJcbiAgdGh1bWJVcmwkPzogT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG59XHJcbiJdfQ==","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11593,"body":[{"type":"ImportDeclaration","start":0,"end":53,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"collection"},"local":{"type":"Identifier","start":9,"end":19,"name":"collection"}},{"type":"ImportSpecifier","start":21,"end":24,"imported":{"type":"Identifier","start":21,"end":24,"name":"doc"},"local":{"type":"Identifier","start":21,"end":24,"name":"doc"}}],"source":{"type":"Literal","start":32,"end":52,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":156,"end":463,"declaration":{"type":"FunctionDeclaration","start":163,"end":463,"id":{"type":"Identifier","start":172,"end":186,"name":"getRefFromPath"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":187,"end":191,"name":"path"},{"type":"Identifier","start":193,"end":202,"name":"firestore"}],"body":{"type":"BlockStatement","start":204,"end":463,"body":[{"type":"VariableDeclaration","start":211,"end":260,"declarations":[{"type":"VariableDeclarator","start":217,"end":259,"id":{"type":"Identifier","start":217,"end":234,"name":"pathSegmentAmount"},"init":{"type":"MemberExpression","start":237,"end":259,"object":{"type":"CallExpression","start":237,"end":252,"callee":{"type":"MemberExpression","start":237,"end":247,"object":{"type":"Identifier","start":237,"end":241,"name":"path"},"property":{"type":"Identifier","start":242,"end":247,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":248,"end":251,"value":"/","raw":"'/'"}],"optional":false},"property":{"type":"Identifier","start":253,"end":259,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":266,"end":460,"test":{"type":"BinaryExpression","start":270,"end":297,"left":{"type":"BinaryExpression","start":270,"end":291,"left":{"type":"Identifier","start":270,"end":287,"name":"pathSegmentAmount"},"operator":"%","right":{"type":"Literal","start":290,"end":291,"value":2,"raw":"2"}},"operator":"===","right":{"type":"Literal","start":296,"end":297,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":299,"end":370,"body":[{"type":"ReturnStatement","start":335,"end":363,"argument":{"type":"CallExpression","start":342,"end":362,"callee":{"type":"Identifier","start":342,"end":345,"name":"doc"},"arguments":[{"type":"Identifier","start":346,"end":355,"name":"firestore"},{"type":"Identifier","start":357,"end":361,"name":"path"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":381,"end":460,"body":[{"type":"ReturnStatement","start":418,"end":453,"argument":{"type":"CallExpression","start":425,"end":452,"callee":{"type":"Identifier","start":425,"end":435,"name":"collection"},"arguments":[{"type":"Identifier","start":436,"end":445,"name":"firestore"},{"type":"Identifier","start":447,"end":451,"name":"path"}],"optional":false}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":465,"end":653,"declaration":{"type":"FunctionDeclaration","start":472,"end":653,"id":{"type":"Identifier","start":481,"end":497,"name":"getSubCollection"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":498,"end":504,"name":"docRef"},{"type":"Identifier","start":506,"end":520,"name":"collectionName"}],"body":{"type":"BlockStatement","start":522,"end":653,"body":[{"type":"VariableDeclaration","start":529,"end":592,"declarations":[{"type":"VariableDeclarator","start":535,"end":591,"id":{"type":"Identifier","start":535,"end":549,"name":"collectionPath"},"init":{"type":"CallExpression","start":552,"end":591,"callee":{"type":"MemberExpression","start":552,"end":570,"object":{"type":"MemberExpression","start":552,"end":563,"object":{"type":"Identifier","start":552,"end":558,"name":"docRef"},"property":{"type":"Identifier","start":559,"end":563,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":564,"end":570,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":571,"end":574,"value":"/","raw":"'/'"},{"type":"Identifier","start":576,"end":590,"name":"collectionName"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":598,"end":650,"argument":{"type":"CallExpression","start":605,"end":649,"callee":{"type":"Identifier","start":605,"end":615,"name":"collection"},"arguments":[{"type":"MemberExpression","start":616,"end":632,"object":{"type":"Identifier","start":616,"end":622,"name":"docRef"},"property":{"type":"Identifier","start":623,"end":632,"name":"firestore"},"computed":false,"optional":false},{"type":"Identifier","start":634,"end":648,"name":"collectionPath"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":655,"end":776,"declaration":{"type":"FunctionDeclaration","start":662,"end":776,"id":{"type":"Identifier","start":671,"end":686,"name":"getDocRefWithId"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":687,"end":700,"name":"collectionRef"},{"type":"Identifier","start":702,"end":704,"name":"id"}],"body":{"type":"BlockStatement","start":706,"end":776,"body":[{"type":"ReturnStatement","start":713,"end":773,"argument":{"type":"CallExpression","start":720,"end":772,"callee":{"type":"Identifier","start":720,"end":723,"name":"doc"},"arguments":[{"type":"MemberExpression","start":724,"end":747,"object":{"type":"Identifier","start":724,"end":737,"name":"collectionRef"},"property":{"type":"Identifier","start":738,"end":747,"name":"firestore"},"computed":false,"optional":false},{"type":"MemberExpression","start":749,"end":767,"object":{"type":"Identifier","start":749,"end":762,"name":"collectionRef"},"property":{"type":"Identifier","start":763,"end":767,"name":"path"},"computed":false,"optional":false},{"type":"Identifier","start":769,"end":771,"name":"id"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":961,"end":1236,"declaration":{"type":"FunctionDeclaration","start":968,"end":1236,"id":{"type":"Identifier","start":977,"end":990,"name":"addDataToItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":991,"end":995,"name":"item"},{"type":"Identifier","start":997,"end":1006,"name":"dataToAdd"},{"type":"AssignmentPattern","start":1008,"end":1023,"left":{"type":"Identifier","start":1008,"end":1015,"name":"inplace"},"right":{"type":"Literal","start":1018,"end":1023,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":1025,"end":1236,"body":[{"type":"IfStatement","start":1032,"end":1233,"test":{"type":"Identifier","start":1036,"end":1043,"name":"inplace"},"consequent":{"type":"BlockStatement","start":1045,"end":1171,"body":[{"type":"ExpressionStatement","start":1056,"end":1142,"expression":{"type":"CallExpression","start":1056,"end":1141,"callee":{"type":"MemberExpression","start":1056,"end":1089,"object":{"type":"CallExpression","start":1056,"end":1081,"callee":{"type":"MemberExpression","start":1056,"end":1070,"object":{"type":"Identifier","start":1056,"end":1062,"name":"Object"},"property":{"type":"Identifier","start":1063,"end":1070,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1071,"end":1080,"name":"dataToAdd"}],"optional":false},"property":{"type":"Identifier","start":1082,"end":1089,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1090,"end":1140,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"ArrayPattern","start":1091,"end":1097,"elements":[{"type":"Identifier","start":1092,"end":1093,"name":"k"},{"type":"Identifier","start":1095,"end":1096,"name":"v"}]}],"body":{"type":"BlockStatement","start":1102,"end":1140,"body":[{"type":"ExpressionStatement","start":1117,"end":1129,"expression":{"type":"AssignmentExpression","start":1117,"end":1128,"operator":"=","left":{"type":"MemberExpression","start":1117,"end":1124,"object":{"type":"Identifier","start":1117,"end":1121,"name":"item"},"property":{"type":"Identifier","start":1122,"end":1123,"name":"k"},"computed":true,"optional":false},"right":{"type":"Identifier","start":1127,"end":1128,"name":"v"}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1152,"end":1164,"argument":{"type":"Identifier","start":1159,"end":1163,"name":"item"}}]},"alternate":{"type":"BlockStatement","start":1182,"end":1233,"body":[{"type":"ReturnStatement","start":1193,"end":1226,"argument":{"type":"ObjectExpression","start":1200,"end":1225,"properties":[{"type":"SpreadElement","start":1202,"end":1209,"argument":{"type":"Identifier","start":1205,"end":1209,"name":"item"}},{"type":"SpreadElement","start":1211,"end":1223,"argument":{"type":"Identifier","start":1214,"end":1223,"name":"dataToAdd"}}]}}]}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1555,"end":1807,"declaration":{"type":"FunctionDeclaration","start":1562,"end":1807,"id":{"type":"Identifier","start":1571,"end":1585,"name":"addCreatedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1586,"end":1590,"name":"item"},{"type":"AssignmentPattern","start":1592,"end":1607,"left":{"type":"Identifier","start":1592,"end":1599,"name":"inplace"},"right":{"type":"Literal","start":1602,"end":1607,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":1609,"end":1633,"left":{"type":"Identifier","start":1609,"end":1620,"name":"createdDate"},"right":{"type":"NewExpression","start":1623,"end":1633,"callee":{"type":"Identifier","start":1627,"end":1631,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":1635,"end":1807,"body":[{"type":"IfStatement","start":1688,"end":1745,"test":{"type":"BinaryExpression","start":1692,"end":1713,"left":{"type":"Literal","start":1692,"end":1705,"value":"createdDate","raw":"'createdDate'"},"operator":"in","right":{"type":"Identifier","start":1709,"end":1713,"name":"item"}},"consequent":{"type":"BlockStatement","start":1715,"end":1745,"body":[{"type":"ReturnStatement","start":1726,"end":1738,"argument":{"type":"Identifier","start":1733,"end":1737,"name":"item"}}]},"alternate":null},{"type":"ReturnStatement","start":1751,"end":1804,"argument":{"type":"CallExpression","start":1758,"end":1803,"callee":{"type":"Identifier","start":1758,"end":1771,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":1772,"end":1776,"name":"item"},{"type":"ObjectExpression","start":1778,"end":1793,"properties":[{"type":"Property","start":1780,"end":1791,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":1780,"end":1791,"name":"createdDate"},"kind":"init","value":{"type":"Identifier","start":1780,"end":1791,"name":"createdDate"}}]},{"type":"Identifier","start":1795,"end":1802,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2062,"end":2208,"declaration":{"type":"FunctionDeclaration","start":2069,"end":2208,"id":{"type":"Identifier","start":2078,"end":2093,"name":"addModifiedDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2094,"end":2098,"name":"item"},{"type":"AssignmentPattern","start":2100,"end":2115,"left":{"type":"Identifier","start":2100,"end":2107,"name":"inplace"},"right":{"type":"Literal","start":2110,"end":2115,"value":false,"raw":"false"}},{"type":"AssignmentPattern","start":2117,"end":2142,"left":{"type":"Identifier","start":2117,"end":2129,"name":"modifiedDate"},"right":{"type":"NewExpression","start":2132,"end":2142,"callee":{"type":"Identifier","start":2136,"end":2140,"name":"Date"},"arguments":[]}}],"body":{"type":"BlockStatement","start":2144,"end":2208,"body":[{"type":"ReturnStatement","start":2151,"end":2205,"argument":{"type":"CallExpression","start":2158,"end":2204,"callee":{"type":"Identifier","start":2158,"end":2171,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2172,"end":2176,"name":"item"},{"type":"ObjectExpression","start":2178,"end":2194,"properties":[{"type":"Property","start":2180,"end":2192,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2180,"end":2192,"name":"modifiedDate"},"kind":"init","value":{"type":"Identifier","start":2180,"end":2192,"name":"modifiedDate"}}]},{"type":"Identifier","start":2196,"end":2203,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2428,"end":2552,"declaration":{"type":"FunctionDeclaration","start":2435,"end":2552,"id":{"type":"Identifier","start":2444,"end":2456,"name":"addCreatedBy"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2457,"end":2461,"name":"item"},{"type":"Identifier","start":2463,"end":2472,"name":"createdBy"},{"type":"AssignmentPattern","start":2474,"end":2489,"left":{"type":"Identifier","start":2474,"end":2481,"name":"inplace"},"right":{"type":"Literal","start":2484,"end":2489,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":2491,"end":2552,"body":[{"type":"ReturnStatement","start":2498,"end":2549,"argument":{"type":"CallExpression","start":2505,"end":2548,"callee":{"type":"Identifier","start":2505,"end":2518,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":2519,"end":2523,"name":"item"},{"type":"ObjectExpression","start":2525,"end":2538,"properties":[{"type":"Property","start":2527,"end":2536,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":2527,"end":2536,"name":"createdBy"},"kind":"init","value":{"type":"Identifier","start":2527,"end":2536,"name":"createdBy"}}]},{"type":"Identifier","start":2540,"end":2547,"name":"inplace"}],"optional":false}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":2823,"end":3205,"declaration":{"type":"FunctionDeclaration","start":2830,"end":3205,"id":{"type":"Identifier","start":2839,"end":2861,"name":"convertTimestampToDate"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2862,"end":2866,"name":"item"}],"body":{"type":"BlockStatement","start":2868,"end":3205,"body":[{"type":"IfStatement","start":2875,"end":3024,"test":{"type":"CallExpression","start":2879,"end":2913,"callee":{"type":"MemberExpression","start":2879,"end":2898,"object":{"type":"Identifier","start":2879,"end":2883,"name":"item"},"property":{"type":"Identifier","start":2884,"end":2898,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2899,"end":2912,"value":"createdDate","raw":"'createdDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2915,"end":3024,"body":[{"type":"ExpressionStatement","start":2926,"end":2962,"expression":{"type":"AssignmentExpression","start":2926,"end":2961,"operator":"=","left":{"type":"MemberExpression","start":2926,"end":2942,"object":{"type":"Identifier","start":2926,"end":2930,"name":"item"},"property":{"type":"Identifier","start":2931,"end":2942,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2945,"end":2961,"object":{"type":"Identifier","start":2945,"end":2949,"name":"item"},"property":{"type":"Identifier","start":2950,"end":2961,"name":"createdDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2972,"end":3017,"expression":{"type":"AssignmentExpression","start":2972,"end":3016,"operator":"=","left":{"type":"MemberExpression","start":2972,"end":2988,"object":{"type":"Identifier","start":2972,"end":2976,"name":"item"},"property":{"type":"Identifier","start":2977,"end":2988,"name":"createdDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":2991,"end":3016,"callee":{"type":"MemberExpression","start":2991,"end":3014,"object":{"type":"MemberExpression","start":2991,"end":3007,"object":{"type":"Identifier","start":2991,"end":2995,"name":"item"},"property":{"type":"Identifier","start":2996,"end":3007,"name":"createdDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3008,"end":3014,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":3030,"end":3184,"test":{"type":"CallExpression","start":3034,"end":3069,"callee":{"type":"MemberExpression","start":3034,"end":3053,"object":{"type":"Identifier","start":3034,"end":3038,"name":"item"},"property":{"type":"Identifier","start":3039,"end":3053,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3054,"end":3068,"value":"modifiedDate","raw":"'modifiedDate'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3071,"end":3184,"body":[{"type":"ExpressionStatement","start":3082,"end":3120,"expression":{"type":"AssignmentExpression","start":3082,"end":3119,"operator":"=","left":{"type":"MemberExpression","start":3082,"end":3099,"object":{"type":"Identifier","start":3082,"end":3086,"name":"item"},"property":{"type":"Identifier","start":3087,"end":3099,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":3102,"end":3119,"object":{"type":"Identifier","start":3102,"end":3106,"name":"item"},"property":{"type":"Identifier","start":3107,"end":3119,"name":"modifiedDate"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":3130,"end":3177,"expression":{"type":"AssignmentExpression","start":3130,"end":3176,"operator":"=","left":{"type":"MemberExpression","start":3130,"end":3147,"object":{"type":"Identifier","start":3130,"end":3134,"name":"item"},"property":{"type":"Identifier","start":3135,"end":3147,"name":"modifiedDate"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3150,"end":3176,"callee":{"type":"MemberExpression","start":3150,"end":3174,"object":{"type":"MemberExpression","start":3150,"end":3167,"object":{"type":"Identifier","start":3150,"end":3154,"name":"item"},"property":{"type":"Identifier","start":3155,"end":3167,"name":"modifiedDate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3168,"end":3174,"name":"toDate"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":3190,"end":3202,"argument":{"type":"Identifier","start":3197,"end":3201,"name":"item"}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":3207,"end":11593}]},"code":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { collection, doc } from 'firebase/firestore';\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath(path, firestore) {\r\n    const pathSegmentAmount = path.split('/').length;\r\n    if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n        return doc(firestore, path);\r\n    }\r\n    else { // odd meaning collection\r\n        return collection(firestore, path);\r\n    }\r\n}\r\nexport function getSubCollection(docRef, collectionName) {\r\n    const collectionPath = docRef.path.concat('/', collectionName);\r\n    return collection(docRef.firestore, collectionPath);\r\n}\r\nexport function getDocRefWithId(collectionRef, id) {\r\n    return doc(collectionRef.firestore, collectionRef.path, id);\r\n}\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem(item, dataToAdd, inplace = false) {\r\n    if (inplace) {\r\n        Object.entries(dataToAdd).forEach(([k, v]) => {\r\n            item[k] = v;\r\n        });\r\n        return item;\r\n    }\r\n    else {\r\n        return { ...item, ...dataToAdd };\r\n    }\r\n}\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate(item, inplace = false, createdDate = new Date()) {\r\n    // do not overwrite previous createdDate\r\n    if ('createdDate' in item) {\r\n        return item;\r\n    }\r\n    return addDataToItem(item, { createdDate }, inplace);\r\n}\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate(item, inplace = false, modifiedDate = new Date()) {\r\n    return addDataToItem(item, { modifiedDate }, inplace);\r\n}\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy(item, createdBy, inplace = false) {\r\n    return addDataToItem(item, { createdBy }, inplace);\r\n}\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\nexport function convertTimestampToDate(item) {\r\n    if (item.hasOwnProperty('createdDate')) {\r\n        item.createdDate = item.createdDate;\r\n        item.createdDate = item.createdDate.toDate();\r\n    }\r\n    if (item.hasOwnProperty('modifiedDate')) {\r\n        item.modifiedDate = item.modifiedDate;\r\n        item.modifiedDate = item.modifiedDate.toDate();\r\n    }\r\n    return item;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/helpers.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,1,2],[19,0,1,12],[21,0,3,2],[24,0,3,5],[26,0,8,1],[32,0,8,7],[52,0,8,27],[53,0,8,28]],[[0,0,10,0],[99,0,10,99]],[[0,0,11,0],[6,0,11,6],[16,0,11,16],[30,0,11,30],[31,0,11,34],[35,0,11,46],[37,0,11,48],[46,0,11,68]],[[4,0,12,2],[10,0,12,8],[27,0,12,25],[30,0,12,36],[34,0,12,40],[35,0,12,41],[40,0,12,46],[41,0,12,47],[44,0,12,50],[45,0,12,51],[46,0,12,52],[52,0,12,58],[53,0,12,59]],[[4,0,13,2],[8,0,13,6],[25,0,13,23],[28,0,13,26],[29,0,13,27],[34,0,13,32],[35,0,13,33],[37,0,13,35],[39,0,13,37],[63,0,13,61]],[[8,0,14,4],[15,0,14,11],[18,0,14,14],[19,0,14,15],[28,0,14,24],[30,0,14,26],[34,0,14,30],[35,0,14,55],[36,0,14,56]],[[5,0,15,3]],[[9,0,15,9],[11,0,15,11],[36,0,15,36]],[[8,0,16,4],[15,0,16,11],[25,0,16,21],[26,0,16,22],[35,0,16,31],[37,0,16,33],[41,0,16,37],[42,0,16,64],[43,0,16,65]],[[5,0,17,3]],[[0,0,18,0],[1,0,18,1]],[[0,0,20,0],[6,0,20,6],[16,0,20,16],[32,0,20,32],[33,0,20,81],[39,0,20,109],[41,0,20,111],[55,0,20,133]],[[4,0,21,2],[10,0,21,8],[24,0,21,22],[27,0,21,33],[33,0,21,39],[34,0,21,40],[38,0,21,44],[39,0,21,45],[45,0,21,51],[46,0,21,52],[49,0,21,55],[51,0,21,57],[65,0,21,71],[66,0,21,72],[67,0,21,73]],[[4,0,22,2],[11,0,22,9],[21,0,22,19],[22,0,22,20],[28,0,22,26],[29,0,22,27],[38,0,22,36],[40,0,22,38],[54,0,22,52],[55,0,22,79],[56,0,22,80]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0],[6,0,25,6],[16,0,25,16],[31,0,25,31],[32,0,25,56],[45,0,25,93],[47,0,25,95],[49,0,25,105]],[[4,0,26,2],[11,0,26,9],[14,0,26,12],[15,0,26,13],[28,0,26,26],[29,0,26,27],[38,0,26,36],[40,0,26,38],[53,0,26,51],[54,0,26,52],[58,0,26,56],[60,0,26,58],[62,0,26,60],[63,0,26,85],[64,0,26,86]],[[0,0,27,0],[1,0,27,1]],[[0,0,29,0]],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[29,0,35,29],[30,0,36,2],[34,0,36,9],[36,0,36,11],[45,0,36,46],[47,0,36,48],[54,0,36,55],[57,0,36,58],[62,0,36,63]],[[4,0,38,2],[8,0,38,6],[15,0,38,13],[17,0,38,15]],[[8,0,39,4],[14,0,39,10],[15,0,39,11],[22,0,39,18],[23,0,39,19],[32,0,39,28],[33,0,39,29],[34,0,39,30],[41,0,39,37],[42,0,39,38],[43,0,39,39],[44,0,39,40],[45,0,39,41],[47,0,39,43],[48,0,39,44],[49,0,39,45],[51,0,39,47],[53,0,39,49]],[[12,0,40,7],[16,0,40,40],[17,0,40,41],[18,0,40,42],[19,0,40,43],[22,0,40,46],[23,0,40,47],[24,0,40,48]],[[8,0,41,4],[9,0,41,5],[10,0,41,6],[11,0,41,7]],[[8,0,42,4],[15,0,42,11],[19,0,42,15],[20,0,42,16]],[[5,0,43,3]],[[9,0,43,9]],[[8,0,44,4],[15,0,44,11],[17,0,44,12],[20,0,44,15],[24,0,44,19],[26,0,44,21],[29,0,44,24],[38,0,44,33],[40,0,44,34],[41,0,44,35]],[[5,0,45,3]],[[0,0,46,0],[1,0,46,1]],[[0,0,48,0]],[],[],[],[],[],[[3,0,54,3]],[[0,0,55,0],[6,0,55,6],[16,0,55,16],[30,0,55,30],[31,0,55,34],[35,0,55,41],[37,0,55,43],[44,0,55,50],[47,0,55,53],[52,0,55,58],[54,0,55,60],[68,0,55,80],[72,0,55,84],[76,0,55,88],[78,0,55,90]],[[4,0,56,2],[44,0,56,42]],[[4,0,57,2],[8,0,57,6],[21,0,57,19],[25,0,57,23],[29,0,57,27],[31,0,57,29]],[[8,0,58,4],[15,0,58,11],[19,0,58,15],[20,0,58,16]],[[5,0,59,3]],[[4,0,61,2],[11,0,61,9],[24,0,61,22],[25,0,61,23],[29,0,61,27],[31,0,61,29],[33,0,61,30],[44,0,61,41],[46,0,61,42],[48,0,61,44],[55,0,61,51],[56,0,61,52],[57,0,61,53]],[[0,0,62,0],[1,0,62,1]],[[0,0,64,0]],[],[],[],[],[],[[3,0,70,3]],[[0,0,71,0],[6,0,71,6],[16,0,71,16],[31,0,71,31],[32,0,71,35],[36,0,71,42],[38,0,71,44],[45,0,71,51],[48,0,71,54],[53,0,71,59],[55,0,71,61],[70,0,71,82],[74,0,71,86],[78,0,71,90],[80,0,71,92]],[[4,0,72,2],[11,0,72,9],[24,0,72,22],[25,0,72,23],[29,0,72,27],[31,0,72,29],[33,0,72,30],[45,0,72,42],[47,0,72,43],[49,0,72,45],[56,0,72,52],[57,0,72,53],[58,0,72,54]],[[0,0,73,0],[1,0,73,1]],[[0,0,75,0]],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[16,0,82,16],[28,0,82,28],[29,0,82,32],[33,0,82,39],[35,0,82,41],[44,0,82,76],[46,0,82,78],[53,0,82,85],[56,0,82,88],[61,0,82,93]],[[4,0,84,2],[11,0,84,9],[24,0,84,22],[25,0,84,23],[29,0,84,27],[31,0,84,29],[33,0,84,30],[42,0,84,39],[44,0,84,40],[46,0,84,42],[53,0,84,49],[54,0,84,50],[55,0,84,51]],[[0,0,85,0],[1,0,85,1]],[[0,0,88,0]],[],[],[],[],[],[],[],[[3,0,96,3]],[[0,0,98,0],[6,0,98,6],[16,0,98,16],[38,0,98,38],[39,0,98,92],[43,0,98,99]],[[4,0,99,2],[8,0,99,6],[12,0,99,10],[13,0,99,11],[27,0,99,25],[28,0,99,26],[41,0,99,39],[42,0,99,40],[44,0,99,42]],[[8,0,100,4],[12,0,100,8],[13,0,100,9],[24,0,100,20],[27,0,100,23],[31,0,100,27],[32,0,100,28],[43,0,100,60],[44,0,100,61]],[[8,0,101,4],[12,0,101,8],[13,0,101,9],[24,0,101,20],[27,0,101,23],[31,0,101,27],[32,0,101,28],[43,0,101,39],[44,0,101,40],[50,0,101,46],[52,0,101,48],[53,0,101,49]],[[5,0,102,3]],[[4,0,103,2],[8,0,103,6],[12,0,103,10],[13,0,103,11],[27,0,103,25],[28,0,103,26],[42,0,103,40],[43,0,103,41],[45,0,103,43]],[[8,0,104,4],[12,0,104,8],[13,0,104,9],[25,0,104,21],[28,0,104,24],[32,0,104,28],[33,0,104,29],[45,0,104,62],[46,0,104,63]],[[8,0,105,4],[12,0,105,8],[13,0,105,9],[25,0,105,21],[28,0,105,24],[32,0,105,28],[33,0,105,29],[45,0,105,41],[46,0,105,42],[52,0,105,48],[54,0,105,50],[55,0,105,51]],[[5,0,106,3]],[[4,0,108,2],[11,0,108,9],[15,0,108,13],[16,0,108,14]],[[0,0,109,0],[1,0,109,1]]],"sourcesContent":["import {\r\n  collection,\r\n  CollectionReference,\r\n  doc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  Firestore,\r\n  Timestamp as FirebaseTimestamp\r\n} from 'firebase/firestore';\r\n\r\n/** Helper method to get reference from path, the path can be either to a Document or Collection */\r\nexport function getRefFromPath<A>(path: string, firestore: Firestore): DocumentReference<A> | CollectionReference<A> {\r\n  const pathSegmentAmount: number = path.split('/').length;\r\n  if (pathSegmentAmount % 2 === 0) { // even number means doc\r\n    return doc(firestore, path) as DocumentReference<A>;\r\n  } else { // odd meaning collection\r\n    return collection(firestore, path) as CollectionReference<A>;\r\n  }\r\n}\r\n\r\nexport function getSubCollection<T extends DocumentData, A extends DocumentData>(docRef: DocumentReference<T>, collectionName: string): CollectionReference<A> {\r\n  const collectionPath: string = docRef.path.concat('/', collectionName);\r\n  return collection(docRef.firestore, collectionPath) as CollectionReference<A>;\r\n}\r\n\r\nexport function getDocRefWithId<T extends DocumentData>(collectionRef: CollectionReference<T>, id: string): DocumentReference<T> {\r\n  return doc(collectionRef.firestore, collectionRef.path, id) as DocumentReference<T>;\r\n}\r\n\r\n/**\r\n * Add data to object inplace\r\n * @param item item to add to\r\n * @param dataToAdd data to add\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addDataToItem<A extends { [field: string]: any }>(\r\n  item: A, dataToAdd: { [field: string]: any }, inplace = false): A {\r\n\r\n  if (inplace) {\r\n    Object.entries(dataToAdd).forEach(([k, v]) => {\r\n      (item as { [field: string]: any })[k] = v;\r\n    });\r\n    return item;\r\n  } else {\r\n    return {...item, ...dataToAdd};\r\n  }\r\n}\r\n\r\n/**\r\n * Add createdDate to the object inplace, if createdDate already exists then we do not overwrite it\r\n *\r\n * @param item item where the createdData will be added\r\n * @param createdDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedDate<A>(item: A, inplace = false, createdDate: Date = new Date()): A {\r\n  // do not overwrite previous createdDate\r\n  if ('createdDate' in item) {\r\n    return item;\r\n  }\r\n\r\n  return addDataToItem(item, {createdDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add modifiedDate to the object\r\n *\r\n * @param item item where the modifiedDate will be added\r\n * @param modifiedDate optional, will use new Date() if none given\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addModifiedDate<A>(item: A, inplace = false, modifiedDate: Date = new Date()): A {\r\n  return addDataToItem(item, {modifiedDate}, inplace);\r\n}\r\n\r\n/**\r\n * Add createdBy to the object inplace\r\n *\r\n * @param item item to add to\r\n * @param createdBy profile, user or any type of data\r\n * @param inplace if true the data is added inplace, if false a copy is used\r\n */\r\nexport function addCreatedBy<A>(item: A, createdBy: { [field: string]: any }, inplace = false): A {\r\n\r\n  return addDataToItem(item, {createdBy}, inplace);\r\n}\r\n\r\n\r\n/**\r\n * Firestore saves time as timestamps and javascript uses Date objects.\r\n * This functions helps convert the createdDate and modifiedDate from timestamp\r\n * to Date()\r\n *\r\n * inplace\r\n *\r\n * @param item item that contains 'createdDate' and/or 'modifiedDate'\r\n */\r\n\r\nexport function convertTimestampToDate<A extends { createdDate?: any, modifiedDate?: any }>(item: A): A {\r\n  if (item.hasOwnProperty('createdDate')) {\r\n    item.createdDate = item.createdDate as FirebaseTimestamp;\r\n    item.createdDate = item.createdDate.toDate();\r\n  }\r\n  if (item.hasOwnProperty('modifiedDate')) {\r\n    item.modifiedDate = item.modifiedDate as FirebaseTimestamp;\r\n    item.modifiedDate = item.modifiedDate.toDate();\r\n  }\r\n\r\n  return item;\r\n}\r\n"]},"resolvedIds":{"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":7980,"body":[{"type":"ExportNamedDeclaration","start":430,"end":835,"declaration":{"type":"FunctionDeclaration","start":437,"end":835,"id":{"type":"Identifier","start":446,"end":461,"name":"moveItemInArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":462,"end":467,"name":"array"},{"type":"Identifier","start":469,"end":478,"name":"fromIndex"},{"type":"Identifier","start":480,"end":487,"name":"toIndex"}],"body":{"type":"BlockStatement","start":489,"end":835,"body":[{"type":"VariableDeclaration","start":496,"end":544,"declarations":[{"type":"VariableDeclarator","start":502,"end":543,"id":{"type":"Identifier","start":502,"end":506,"name":"from"},"init":{"type":"CallExpression","start":509,"end":543,"callee":{"type":"Identifier","start":509,"end":514,"name":"clamp"},"arguments":[{"type":"Identifier","start":515,"end":524,"name":"fromIndex"},{"type":"BinaryExpression","start":526,"end":542,"left":{"type":"MemberExpression","start":526,"end":538,"object":{"type":"Identifier","start":526,"end":531,"name":"array"},"property":{"type":"Identifier","start":532,"end":538,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":541,"end":542,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":550,"end":594,"declarations":[{"type":"VariableDeclarator","start":556,"end":593,"id":{"type":"Identifier","start":556,"end":558,"name":"to"},"init":{"type":"CallExpression","start":561,"end":593,"callee":{"type":"Identifier","start":561,"end":566,"name":"clamp"},"arguments":[{"type":"Identifier","start":567,"end":574,"name":"toIndex"},{"type":"BinaryExpression","start":576,"end":592,"left":{"type":"MemberExpression","start":576,"end":588,"object":{"type":"Identifier","start":576,"end":581,"name":"array"},"property":{"type":"Identifier","start":582,"end":588,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":591,"end":592,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":600,"end":642,"test":{"type":"BinaryExpression","start":604,"end":615,"left":{"type":"Identifier","start":604,"end":608,"name":"from"},"operator":"===","right":{"type":"Identifier","start":613,"end":615,"name":"to"}},"consequent":{"type":"BlockStatement","start":617,"end":642,"body":[{"type":"ReturnStatement","start":628,"end":635,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":648,"end":675,"declarations":[{"type":"VariableDeclarator","start":654,"end":674,"id":{"type":"Identifier","start":654,"end":660,"name":"target"},"init":{"type":"MemberExpression","start":663,"end":674,"object":{"type":"Identifier","start":663,"end":668,"name":"array"},"property":{"type":"Identifier","start":669,"end":673,"name":"from"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":681,"end":714,"declarations":[{"type":"VariableDeclarator","start":687,"end":713,"id":{"type":"Identifier","start":687,"end":692,"name":"delta"},"init":{"type":"ConditionalExpression","start":695,"end":713,"test":{"type":"BinaryExpression","start":695,"end":704,"left":{"type":"Identifier","start":695,"end":697,"name":"to"},"operator":"<","right":{"type":"Identifier","start":700,"end":704,"name":"from"}},"consequent":{"type":"UnaryExpression","start":707,"end":709,"operator":"-","prefix":true,"argument":{"type":"Literal","start":708,"end":709,"value":1,"raw":"1"}},"alternate":{"type":"Literal","start":712,"end":713,"value":1,"raw":"1"}}}],"kind":"const"},{"type":"ForStatement","start":720,"end":807,"init":{"type":"VariableDeclaration","start":725,"end":737,"declarations":[{"type":"VariableDeclarator","start":729,"end":737,"id":{"type":"Identifier","start":729,"end":730,"name":"i"},"init":{"type":"Identifier","start":733,"end":737,"name":"from"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":739,"end":747,"left":{"type":"Identifier","start":739,"end":740,"name":"i"},"operator":"!==","right":{"type":"Identifier","start":745,"end":747,"name":"to"}},"update":{"type":"AssignmentExpression","start":749,"end":759,"operator":"+=","left":{"type":"Identifier","start":749,"end":750,"name":"i"},"right":{"type":"Identifier","start":754,"end":759,"name":"delta"}},"body":{"type":"BlockStatement","start":761,"end":807,"body":[{"type":"ExpressionStatement","start":772,"end":800,"expression":{"type":"AssignmentExpression","start":772,"end":799,"operator":"=","left":{"type":"MemberExpression","start":772,"end":780,"object":{"type":"Identifier","start":772,"end":777,"name":"array"},"property":{"type":"Identifier","start":778,"end":779,"name":"i"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":783,"end":799,"object":{"type":"Identifier","start":783,"end":788,"name":"array"},"property":{"type":"BinaryExpression","start":789,"end":798,"left":{"type":"Identifier","start":789,"end":790,"name":"i"},"operator":"+","right":{"type":"Identifier","start":793,"end":798,"name":"delta"}},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":813,"end":832,"expression":{"type":"AssignmentExpression","start":813,"end":831,"operator":"=","left":{"type":"MemberExpression","start":813,"end":822,"object":{"type":"Identifier","start":813,"end":818,"name":"array"},"property":{"type":"Identifier","start":819,"end":821,"name":"to"},"computed":true,"optional":false},"right":{"type":"Identifier","start":825,"end":831,"name":"target"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1134,"end":1454,"declaration":{"type":"FunctionDeclaration","start":1141,"end":1454,"id":{"type":"Identifier","start":1150,"end":1167,"name":"transferArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1168,"end":1180,"name":"currentArray"},{"type":"Identifier","start":1182,"end":1193,"name":"targetArray"},{"type":"Identifier","start":1195,"end":1207,"name":"currentIndex"},{"type":"Identifier","start":1209,"end":1220,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1222,"end":1454,"body":[{"type":"VariableDeclaration","start":1229,"end":1287,"declarations":[{"type":"VariableDeclarator","start":1235,"end":1286,"id":{"type":"Identifier","start":1235,"end":1239,"name":"from"},"init":{"type":"CallExpression","start":1242,"end":1286,"callee":{"type":"Identifier","start":1242,"end":1247,"name":"clamp"},"arguments":[{"type":"Identifier","start":1248,"end":1260,"name":"currentIndex"},{"type":"BinaryExpression","start":1262,"end":1285,"left":{"type":"MemberExpression","start":1262,"end":1281,"object":{"type":"Identifier","start":1262,"end":1274,"name":"currentArray"},"property":{"type":"Identifier","start":1275,"end":1281,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":1284,"end":1285,"value":1,"raw":"1"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1293,"end":1343,"declarations":[{"type":"VariableDeclarator","start":1299,"end":1342,"id":{"type":"Identifier","start":1299,"end":1301,"name":"to"},"init":{"type":"CallExpression","start":1304,"end":1342,"callee":{"type":"Identifier","start":1304,"end":1309,"name":"clamp"},"arguments":[{"type":"Identifier","start":1310,"end":1321,"name":"targetIndex"},{"type":"MemberExpression","start":1323,"end":1341,"object":{"type":"Identifier","start":1323,"end":1334,"name":"targetArray"},"property":{"type":"Identifier","start":1335,"end":1341,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1349,"end":1451,"test":{"type":"MemberExpression","start":1353,"end":1372,"object":{"type":"Identifier","start":1353,"end":1365,"name":"currentArray"},"property":{"type":"Identifier","start":1366,"end":1372,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1374,"end":1451,"body":[{"type":"ExpressionStatement","start":1385,"end":1444,"expression":{"type":"CallExpression","start":1385,"end":1443,"callee":{"type":"MemberExpression","start":1385,"end":1403,"object":{"type":"Identifier","start":1385,"end":1396,"name":"targetArray"},"property":{"type":"Identifier","start":1397,"end":1403,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1404,"end":1406,"name":"to"},{"type":"Literal","start":1408,"end":1409,"value":0,"raw":"0"},{"type":"MemberExpression","start":1411,"end":1442,"object":{"type":"CallExpression","start":1411,"end":1439,"callee":{"type":"MemberExpression","start":1411,"end":1430,"object":{"type":"Identifier","start":1411,"end":1423,"name":"currentArray"},"property":{"type":"Identifier","start":1424,"end":1430,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1431,"end":1435,"name":"from"},{"type":"Literal","start":1437,"end":1438,"value":1,"raw":"1"}],"optional":false},"property":{"type":"Literal","start":1440,"end":1441,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1813,"end":2060,"declaration":{"type":"FunctionDeclaration","start":1820,"end":2060,"id":{"type":"Identifier","start":1829,"end":1842,"name":"copyArrayItem"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1855,"name":"currentArray"},{"type":"Identifier","start":1857,"end":1868,"name":"targetArray"},{"type":"Identifier","start":1870,"end":1882,"name":"currentIndex"},{"type":"Identifier","start":1884,"end":1895,"name":"targetIndex"}],"body":{"type":"BlockStatement","start":1897,"end":2060,"body":[{"type":"VariableDeclaration","start":1904,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1910,"end":1953,"id":{"type":"Identifier","start":1910,"end":1912,"name":"to"},"init":{"type":"CallExpression","start":1915,"end":1953,"callee":{"type":"Identifier","start":1915,"end":1920,"name":"clamp"},"arguments":[{"type":"Identifier","start":1921,"end":1932,"name":"targetIndex"},{"type":"MemberExpression","start":1934,"end":1952,"object":{"type":"Identifier","start":1934,"end":1945,"name":"targetArray"},"property":{"type":"Identifier","start":1946,"end":1952,"name":"length"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1960,"end":2057,"test":{"type":"MemberExpression","start":1964,"end":1983,"object":{"type":"Identifier","start":1964,"end":1976,"name":"currentArray"},"property":{"type":"Identifier","start":1977,"end":1983,"name":"length"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1985,"end":2057,"body":[{"type":"ExpressionStatement","start":1996,"end":2050,"expression":{"type":"CallExpression","start":1996,"end":2049,"callee":{"type":"MemberExpression","start":1996,"end":2014,"object":{"type":"Identifier","start":1996,"end":2007,"name":"targetArray"},"property":{"type":"Identifier","start":2008,"end":2014,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2015,"end":2017,"name":"to"},{"type":"Literal","start":2019,"end":2020,"value":0,"raw":"0"},{"type":"MemberExpression","start":2022,"end":2048,"object":{"type":"Identifier","start":2022,"end":2034,"name":"currentArray"},"property":{"type":"Identifier","start":2035,"end":2047,"name":"currentIndex"},"computed":true,"optional":false}],"optional":false}}]},"alternate":null}]}},"specifiers":[],"source":null},{"type":"FunctionDeclaration","start":2114,"end":2192,"id":{"type":"Identifier","start":2123,"end":2128,"name":"clamp"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2129,"end":2134,"name":"value"},{"type":"Identifier","start":2136,"end":2139,"name":"max"}],"body":{"type":"BlockStatement","start":2141,"end":2192,"body":[{"type":"ReturnStatement","start":2148,"end":2189,"argument":{"type":"CallExpression","start":2155,"end":2188,"callee":{"type":"MemberExpression","start":2155,"end":2163,"object":{"type":"Identifier","start":2155,"end":2159,"name":"Math"},"property":{"type":"Identifier","start":2160,"end":2163,"name":"max"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2164,"end":2165,"value":0,"raw":"0"},{"type":"CallExpression","start":2167,"end":2187,"callee":{"type":"MemberExpression","start":2167,"end":2175,"object":{"type":"Identifier","start":2167,"end":2171,"name":"Math"},"property":{"type":"Identifier","start":2172,"end":2175,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2176,"end":2179,"name":"max"},{"type":"Identifier","start":2181,"end":2186,"name":"value"}],"optional":false}],"optional":false}}]}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","start":2194,"end":7980}]},"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray(array, fromIndex, toIndex) {\r\n    const from = clamp(fromIndex, array.length - 1);\r\n    const to = clamp(toIndex, array.length - 1);\r\n    if (from === to) {\r\n        return;\r\n    }\r\n    const target = array[from];\r\n    const delta = to < from ? -1 : 1;\r\n    for (let i = from; i !== to; i += delta) {\r\n        array[i] = array[i + delta];\r\n    }\r\n    array[to] = target;\r\n}\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const from = clamp(currentIndex, currentArray.length - 1);\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n    }\r\n}\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\r\n    const to = clamp(targetIndex, targetArray.length);\r\n    if (currentArray.length) {\r\n        targetArray.splice(to, 0, currentArray[currentIndex]);\r\n    }\r\n}\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value, max) {\r\n    return Math.max(0, Math.min(max, value));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2RyYWctdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFVLEtBQVUsRUFBRSxTQUFpQixFQUFFLE9BQWU7SUFDckYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUU1QyxJQUFJLElBQUksS0FBSyxFQUFFLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFFRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7S0FDN0I7SUFFRCxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLENBQUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDNUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWxELElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTtRQUN2QixXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQVUsWUFBaUIsRUFDakIsV0FBZ0IsRUFDaEIsWUFBb0IsRUFDcEIsV0FBbUI7SUFDeEQsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbEQsSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztLQUN2RDtBQUNILENBQUM7QUFFRCxrREFBa0Q7QUFDbEQsU0FBUyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDdkMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBNb3ZlcyBhbiBpdGVtIG9uZSBpbmRleCBpbiBhbiBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgaW4gd2hpY2ggdG8gbW92ZSB0aGUgaXRlbS5cclxuICogQHBhcmFtIGZyb21JbmRleCBTdGFydGluZyBpbmRleCBvZiB0aGUgaXRlbS5cclxuICogQHBhcmFtIHRvSW5kZXggSW5kZXggdG8gd2hpY2ggdGhlIGl0ZW0gc2hvdWxkIGJlIG1vdmVkLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJdGVtSW5BcnJheTxUID0gYW55PihhcnJheTogVFtdLCBmcm9tSW5kZXg6IG51bWJlciwgdG9JbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgY29uc3QgZnJvbSA9IGNsYW1wKGZyb21JbmRleCwgYXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0b0luZGV4LCBhcnJheS5sZW5ndGggLSAxKTtcclxuXHJcbiAgaWYgKGZyb20gPT09IHRvKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCB0YXJnZXQgPSBhcnJheVtmcm9tXTtcclxuICBjb25zdCBkZWx0YSA9IHRvIDwgZnJvbSA/IC0xIDogMTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IGZyb207IGkgIT09IHRvOyBpICs9IGRlbHRhKSB7XHJcbiAgICBhcnJheVtpXSA9IGFycmF5W2kgKyBkZWx0YV07XHJcbiAgfVxyXG5cclxuICBhcnJheVt0b10gPSB0YXJnZXQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTW92ZXMgYW4gaXRlbSBmcm9tIG9uZSBhcnJheSB0byBhbm90aGVyLlxyXG4gKiBAcGFyYW0gY3VycmVudEFycmF5IEFycmF5IGZyb20gd2hpY2ggdG8gdHJhbnNmZXIgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIHRvIHB1dCB0aGUgaXRlbS5cclxuICogQHBhcmFtIGN1cnJlbnRJbmRleCBJbmRleCBvZiB0aGUgaXRlbSBpbiBpdHMgY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIHRhcmdldEluZGV4IEluZGV4IGF0IHdoaWNoIHRvIGluc2VydCB0aGUgaXRlbS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2ZlckFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFycmF5OiBUW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCBmcm9tID0gY2xhbXAoY3VycmVudEluZGV4LCBjdXJyZW50QXJyYXkubGVuZ3RoIC0gMSk7XHJcbiAgY29uc3QgdG8gPSBjbGFtcCh0YXJnZXRJbmRleCwgdGFyZ2V0QXJyYXkubGVuZ3RoKTtcclxuXHJcbiAgaWYgKGN1cnJlbnRBcnJheS5sZW5ndGgpIHtcclxuICAgIHRhcmdldEFycmF5LnNwbGljZSh0bywgMCwgY3VycmVudEFycmF5LnNwbGljZShmcm9tLCAxKVswXSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29waWVzIGFuIGl0ZW0gZnJvbSBvbmUgYXJyYXkgdG8gYW5vdGhlciwgbGVhdmluZyBpdCBpbiBpdHNcclxuICogb3JpZ2luYWwgcG9zaXRpb24gaW4gY3VycmVudCBhcnJheS5cclxuICogQHBhcmFtIGN1cnJlbnRBcnJheSBBcnJheSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSB0YXJnZXRBcnJheSBBcnJheSBpbnRvIHdoaWNoIGlzIGNvcHkgdGhlIGl0ZW0uXHJcbiAqIEBwYXJhbSBjdXJyZW50SW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gaW4gaXRzIGN1cnJlbnQgYXJyYXkuXHJcbiAqIEBwYXJhbSB0YXJnZXRJbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGl0ZW0uXHJcbiAqXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY29weUFycmF5SXRlbTxUID0gYW55PihjdXJyZW50QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QXJyYXk6IFRbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICBjb25zdCB0byA9IGNsYW1wKHRhcmdldEluZGV4LCB0YXJnZXRBcnJheS5sZW5ndGgpO1xyXG5cclxuICBpZiAoY3VycmVudEFycmF5Lmxlbmd0aCkge1xyXG4gICAgdGFyZ2V0QXJyYXkuc3BsaWNlKHRvLCAwLCBjdXJyZW50QXJyYXlbY3VycmVudEluZGV4XSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogQ2xhbXBzIGEgbnVtYmVyIGJldHdlZW4gemVybyBhbmQgYSBtYXhpbXVtLiAqL1xyXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKG1heCwgdmFsdWUpKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"drag-utils.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/drag-utils.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,8,0]],[],[],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[31,0,14,31],[32,0,14,41],[37,0,14,51],[39,0,14,53],[48,0,14,70],[50,0,14,72],[57,0,14,87]],[[4,0,15,2],[10,0,15,8],[14,0,15,12],[17,0,15,15],[22,0,15,20],[23,0,15,21],[32,0,15,30],[34,0,15,32],[39,0,15,37],[40,0,15,38],[46,0,15,44],[49,0,15,47],[50,0,15,48],[51,0,15,49],[52,0,15,50]],[[4,0,16,2],[10,0,16,8],[12,0,16,10],[15,0,16,13],[20,0,16,18],[21,0,16,19],[28,0,16,26],[30,0,16,28],[35,0,16,33],[36,0,16,34],[42,0,16,40],[45,0,16,43],[46,0,16,44],[47,0,16,45],[48,0,16,46]],[[4,0,18,2],[8,0,18,6],[12,0,18,10],[17,0,18,15],[19,0,18,17],[21,0,18,19]],[[8,0,19,4],[15,0,19,11]],[[5,0,20,3]],[[4,0,22,2],[10,0,22,8],[16,0,22,14],[19,0,22,17],[24,0,22,22],[25,0,22,23],[29,0,22,27],[30,0,22,28],[31,0,22,29]],[[4,0,23,2],[10,0,23,8],[15,0,23,13],[18,0,23,16],[20,0,23,18],[23,0,23,21],[27,0,23,25],[28,0,23,26],[29,0,23,27],[30,0,23,28],[31,0,23,29],[32,0,23,30],[33,0,23,31],[34,0,23,32],[35,0,23,33],[36,0,23,34],[37,0,23,35]],[[4,0,25,2],[9,0,25,7],[13,0,25,11],[14,0,25,12],[17,0,25,15],[21,0,25,19],[23,0,25,21],[24,0,25,22],[29,0,25,27],[31,0,25,29],[33,0,25,31],[34,0,25,32],[38,0,25,36],[43,0,25,41],[45,0,25,43]],[[8,0,26,4],[13,0,26,9],[14,0,26,10],[15,0,26,11],[16,0,26,12],[19,0,26,15],[24,0,26,20],[25,0,26,21],[26,0,26,22],[29,0,26,25],[34,0,26,30],[35,0,26,31],[36,0,26,32]],[[5,0,27,3]],[[4,0,29,2],[9,0,29,7],[10,0,29,8],[12,0,29,10],[13,0,29,11],[16,0,29,14],[22,0,29,20],[23,0,29,21]],[[0,0,30,0],[1,0,30,1]],[[0,0,33,0]],[],[],[],[],[],[[3,0,39,3]],[[0,0,40,0],[6,0,40,6],[16,0,40,16],[33,0,40,33],[34,0,40,43],[46,0,40,60],[48,0,41,43],[59,0,41,59],[61,0,42,43],[73,0,42,63],[75,0,43,43],[86,0,43,62]],[[4,0,44,2],[10,0,44,8],[14,0,44,12],[17,0,44,15],[22,0,44,20],[23,0,44,21],[35,0,44,33],[37,0,44,35],[49,0,44,47],[50,0,44,48],[56,0,44,54],[59,0,44,57],[60,0,44,58],[61,0,44,59],[62,0,44,60]],[[4,0,45,2],[10,0,45,8],[12,0,45,10],[15,0,45,13],[20,0,45,18],[21,0,45,19],[32,0,45,30],[34,0,45,32],[45,0,45,43],[46,0,45,44],[52,0,45,50],[53,0,45,51],[54,0,45,52]],[[4,0,47,2],[8,0,47,6],[20,0,47,18],[21,0,47,19],[27,0,47,25],[29,0,47,27]],[[8,0,48,4],[19,0,48,15],[20,0,48,16],[26,0,48,22],[27,0,48,23],[29,0,48,25],[31,0,48,27],[32,0,48,28],[34,0,48,30],[46,0,48,42],[47,0,48,43],[53,0,48,49],[54,0,48,50],[58,0,48,54],[60,0,48,56],[61,0,48,57],[62,0,48,58],[63,0,48,59],[64,0,48,60],[65,0,48,61],[66,0,48,62],[67,0,48,63]],[[5,0,49,3]],[[0,0,50,0],[1,0,50,1]],[[0,0,52,0]],[],[],[],[],[],[],[],[[3,0,60,3]],[[0,0,61,0],[6,0,61,6],[16,0,61,16],[29,0,61,29],[30,0,61,39],[42,0,61,56],[44,0,62,39],[55,0,62,55],[57,0,63,39],[69,0,63,59],[71,0,64,39],[82,0,64,58]],[[4,0,65,2],[10,0,65,8],[12,0,65,10],[15,0,65,13],[20,0,65,18],[21,0,65,19],[32,0,65,30],[34,0,65,32],[45,0,65,43],[46,0,65,44],[52,0,65,50],[53,0,65,51],[54,0,65,52]],[[4,0,67,2],[8,0,67,6],[20,0,67,18],[21,0,67,19],[27,0,67,25],[29,0,67,27]],[[8,0,68,4],[19,0,68,15],[20,0,68,16],[26,0,68,22],[27,0,68,23],[29,0,68,25],[31,0,68,27],[32,0,68,28],[34,0,68,30],[46,0,68,42],[47,0,68,43],[59,0,68,55],[60,0,68,56],[61,0,68,57],[62,0,68,58]],[[5,0,69,3]],[[0,0,70,0],[1,0,70,1]],[[0,0,72,0],[50,0,72,50]],[[0,0,73,0],[9,0,73,9],[14,0,73,14],[15,0,73,15],[20,0,73,28],[22,0,73,30],[25,0,73,41]],[[4,0,74,2],[11,0,74,9],[15,0,74,13],[16,0,74,14],[19,0,74,17],[20,0,74,18],[21,0,74,19],[23,0,74,21],[27,0,74,25],[28,0,74,26],[31,0,74,29],[32,0,74,30],[35,0,74,33],[37,0,74,35],[42,0,74,40],[43,0,74,41],[44,0,74,42],[45,0,74,43]],[[0,0,75,0],[1,0,75,1]]],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Moves an item one index in an array to another.\r\n * @param array Array in which to move the item.\r\n * @param fromIndex Starting index of the item.\r\n * @param toIndex Index to which the item should be moved.\r\n */\r\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\r\n  const from = clamp(fromIndex, array.length - 1);\r\n  const to = clamp(toIndex, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n}\r\n\r\n\r\n/**\r\n * Moves an item from one array to another.\r\n * @param currentArray Array from which to transfer the item.\r\n * @param targetArray Array into which to put the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n */\r\nexport function transferArrayItem<T = any>(currentArray: T[],\r\n                                           targetArray: T[],\r\n                                           currentIndex: number,\r\n                                           targetIndex: number): void {\r\n  const from = clamp(currentIndex, currentArray.length - 1);\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\r\n  }\r\n}\r\n\r\n/**\r\n * Copies an item from one array to another, leaving it in its\r\n * original position in current array.\r\n * @param currentArray Array from which to copy the item.\r\n * @param targetArray Array into which is copy the item.\r\n * @param currentIndex Index of the item in its current array.\r\n * @param targetIndex Index at which to insert the item.\r\n *\r\n */\r\nexport function copyArrayItem<T = any>(currentArray: T[],\r\n                                       targetArray: T[],\r\n                                       currentIndex: number,\r\n                                       targetIndex: number): void {\r\n  const to = clamp(targetIndex, targetArray.length);\r\n\r\n  if (currentArray.length) {\r\n    targetArray.splice(to, 0, currentArray[currentIndex]);\r\n  }\r\n}\r\n\r\n/** Clamps a number between zero and a maximum. */\r\nfunction clamp(value: number, max: number): number {\r\n  return Math.max(0, Math.min(max, value));\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":192418,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":32,"imported":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"},"local":{"type":"Identifier","start":24,"end":32,"name":"forkJoin"}},{"type":"ImportSpecifier","start":34,"end":38,"imported":{"type":"Identifier","start":34,"end":38,"name":"from"},"local":{"type":"Identifier","start":34,"end":38,"name":"from"}},{"type":"ImportSpecifier","start":40,"end":42,"imported":{"type":"Identifier","start":40,"end":42,"name":"of"},"local":{"type":"Identifier","start":40,"end":42,"name":"of"}}],"source":{"type":"Literal","start":50,"end":56,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":59,"end":148,"specifiers":[{"type":"ImportSpecifier","start":68,"end":78,"imported":{"type":"Identifier","start":68,"end":78,"name":"catchError"},"local":{"type":"Identifier","start":68,"end":78,"name":"catchError"}},{"type":"ImportSpecifier","start":80,"end":86,"imported":{"type":"Identifier","start":80,"end":86,"name":"filter"},"local":{"type":"Identifier","start":80,"end":86,"name":"filter"}},{"type":"ImportSpecifier","start":88,"end":91,"imported":{"type":"Identifier","start":88,"end":91,"name":"map"},"local":{"type":"Identifier","start":88,"end":91,"name":"map"}},{"type":"ImportSpecifier","start":93,"end":101,"imported":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"},"local":{"type":"Identifier","start":93,"end":101,"name":"mergeMap"}},{"type":"ImportSpecifier","start":103,"end":112,"imported":{"type":"Identifier","start":103,"end":112,"name":"switchMap"},"local":{"type":"Identifier","start":103,"end":112,"name":"switchMap"}},{"type":"ImportSpecifier","start":114,"end":118,"imported":{"type":"Identifier","start":114,"end":118,"name":"take"},"local":{"type":"Identifier","start":114,"end":118,"name":"take"}},{"type":"ImportSpecifier","start":120,"end":123,"imported":{"type":"Identifier","start":120,"end":123,"name":"tap"},"local":{"type":"Identifier","start":120,"end":123,"name":"tap"}}],"source":{"type":"Literal","start":131,"end":147,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":150,"end":320,"specifiers":[{"type":"ImportSpecifier","start":159,"end":169,"imported":{"type":"Identifier","start":159,"end":169,"name":"collection"},"local":{"type":"Identifier","start":159,"end":169,"name":"collection"}},{"type":"ImportSpecifier","start":171,"end":188,"imported":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"},"local":{"type":"Identifier","start":171,"end":188,"name":"DocumentReference"}},{"type":"ImportSpecifier","start":190,"end":195,"imported":{"type":"Identifier","start":190,"end":195,"name":"endAt"},"local":{"type":"Identifier","start":190,"end":195,"name":"endAt"}},{"type":"ImportSpecifier","start":197,"end":206,"imported":{"type":"Identifier","start":197,"end":206,"name":"endBefore"},"local":{"type":"Identifier","start":197,"end":206,"name":"endBefore"}},{"type":"ImportSpecifier","start":208,"end":215,"imported":{"type":"Identifier","start":208,"end":215,"name":"getDocs"},"local":{"type":"Identifier","start":208,"end":215,"name":"getDocs"}},{"type":"ImportSpecifier","start":217,"end":222,"imported":{"type":"Identifier","start":217,"end":222,"name":"limit"},"local":{"type":"Identifier","start":217,"end":222,"name":"limit"}},{"type":"ImportSpecifier","start":224,"end":235,"imported":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"},"local":{"type":"Identifier","start":224,"end":235,"name":"limitToLast"}},{"type":"ImportSpecifier","start":237,"end":244,"imported":{"type":"Identifier","start":237,"end":244,"name":"orderBy"},"local":{"type":"Identifier","start":237,"end":244,"name":"orderBy"}},{"type":"ImportSpecifier","start":246,"end":251,"imported":{"type":"Identifier","start":246,"end":251,"name":"query"},"local":{"type":"Identifier","start":246,"end":251,"name":"query"}},{"type":"ImportSpecifier","start":253,"end":263,"imported":{"type":"Identifier","start":253,"end":263,"name":"startAfter"},"local":{"type":"Identifier","start":253,"end":263,"name":"startAfter"}},{"type":"ImportSpecifier","start":265,"end":272,"imported":{"type":"Identifier","start":265,"end":272,"name":"startAt"},"local":{"type":"Identifier","start":265,"end":272,"name":"startAt"}},{"type":"ImportSpecifier","start":274,"end":279,"imported":{"type":"Identifier","start":274,"end":279,"name":"where"},"local":{"type":"Identifier","start":274,"end":279,"name":"where"}},{"type":"ImportSpecifier","start":281,"end":291,"imported":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"},"local":{"type":"Identifier","start":281,"end":291,"name":"writeBatch"}}],"source":{"type":"Literal","start":299,"end":319,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":322,"end":472,"specifiers":[{"type":"ImportSpecifier","start":331,"end":345,"imported":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"},"local":{"type":"Identifier","start":331,"end":345,"name":"addCreatedDate"}},{"type":"ImportSpecifier","start":347,"end":360,"imported":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"},"local":{"type":"Identifier","start":347,"end":360,"name":"addDataToItem"}},{"type":"ImportSpecifier","start":362,"end":377,"imported":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"},"local":{"type":"Identifier","start":362,"end":377,"name":"addModifiedDate"}},{"type":"ImportSpecifier","start":379,"end":401,"imported":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"},"local":{"type":"Identifier","start":379,"end":401,"name":"convertTimestampToDate"}},{"type":"ImportSpecifier","start":403,"end":418,"imported":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"},"local":{"type":"Identifier","start":403,"end":418,"name":"getDocRefWithId"}},{"type":"ImportSpecifier","start":420,"end":434,"imported":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"},"local":{"type":"Identifier","start":420,"end":434,"name":"getRefFromPath"}},{"type":"ImportSpecifier","start":436,"end":452,"imported":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"},"local":{"type":"Identifier","start":436,"end":452,"name":"getSubCollection"}}],"source":{"type":"Literal","start":460,"end":471,"value":"./helpers","raw":"'./helpers'"}},{"type":"ImportDeclaration","start":474,"end":540,"specifiers":[{"type":"ImportSpecifier","start":483,"end":498,"imported":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"},"local":{"type":"Identifier","start":483,"end":498,"name":"moveItemInArray"}},{"type":"ImportSpecifier","start":500,"end":517,"imported":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"},"local":{"type":"Identifier","start":500,"end":517,"name":"transferArrayItem"}}],"source":{"type":"Literal","start":525,"end":539,"value":"./drag-utils","raw":"'./drag-utils'"}},{"type":"ExportNamedDeclaration","start":619,"end":648,"declaration":{"type":"VariableDeclaration","start":626,"end":648,"declarations":[{"type":"VariableDeclarator","start":630,"end":647,"id":{"type":"Identifier","start":630,"end":647,"name":"DocNotExistAction"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":650,"end":1328,"expression":{"type":"CallExpression","start":650,"end":1327,"callee":{"type":"FunctionExpression","start":651,"end":1279,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":661,"end":678,"name":"DocNotExistAction"}],"body":{"type":"BlockStatement","start":680,"end":1279,"body":[{"type":"ExpressionStatement","start":721,"end":793,"expression":{"type":"AssignmentExpression","start":721,"end":792,"operator":"=","left":{"type":"MemberExpression","start":721,"end":776,"object":{"type":"Identifier","start":721,"end":738,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":739,"end":775,"operator":"=","left":{"type":"MemberExpression","start":739,"end":771,"object":{"type":"Identifier","start":739,"end":756,"name":"DocNotExistAction"},"property":{"type":"Literal","start":757,"end":770,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""},"computed":true,"optional":false},"right":{"type":"Literal","start":774,"end":775,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":779,"end":792,"value":"RETURN_NULL","raw":"\"RETURN_NULL\""}}},{"type":"ExpressionStatement","start":918,"end":1006,"expression":{"type":"AssignmentExpression","start":918,"end":1005,"operator":"=","left":{"type":"MemberExpression","start":918,"end":981,"object":{"type":"Identifier","start":918,"end":935,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":936,"end":980,"operator":"=","left":{"type":"MemberExpression","start":936,"end":976,"object":{"type":"Identifier","start":936,"end":953,"name":"DocNotExistAction"},"property":{"type":"Literal","start":954,"end":975,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""},"computed":true,"optional":false},"right":{"type":"Literal","start":979,"end":980,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":984,"end":1005,"value":"RETURN_ALL_BUT_DATA","raw":"\"RETURN_ALL_BUT_DATA\""}}},{"type":"ExpressionStatement","start":1065,"end":1127,"expression":{"type":"AssignmentExpression","start":1065,"end":1126,"operator":"=","left":{"type":"MemberExpression","start":1065,"end":1115,"object":{"type":"Identifier","start":1065,"end":1082,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1083,"end":1114,"operator":"=","left":{"type":"MemberExpression","start":1083,"end":1110,"object":{"type":"Identifier","start":1083,"end":1100,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1101,"end":1109,"value":"FILTER","raw":"\"FILTER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1113,"end":1114,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1118,"end":1126,"value":"FILTER","raw":"\"FILTER\""}}},{"type":"ExpressionStatement","start":1188,"end":1276,"expression":{"type":"AssignmentExpression","start":1188,"end":1275,"operator":"=","left":{"type":"MemberExpression","start":1188,"end":1251,"object":{"type":"Identifier","start":1188,"end":1205,"name":"DocNotExistAction"},"property":{"type":"AssignmentExpression","start":1206,"end":1250,"operator":"=","left":{"type":"MemberExpression","start":1206,"end":1246,"object":{"type":"Identifier","start":1206,"end":1223,"name":"DocNotExistAction"},"property":{"type":"Literal","start":1224,"end":1245,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""},"computed":true,"optional":false},"right":{"type":"Literal","start":1249,"end":1250,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":1254,"end":1275,"value":"THROW_DOC_NOT_FOUND","raw":"\"THROW_DOC_NOT_FOUND\""}}}]}},"arguments":[{"type":"LogicalExpression","start":1281,"end":1326,"left":{"type":"Identifier","start":1281,"end":1298,"name":"DocNotExistAction"},"operator":"||","right":{"type":"AssignmentExpression","start":1303,"end":1325,"operator":"=","left":{"type":"Identifier","start":1303,"end":1320,"name":"DocNotExistAction"},"right":{"type":"ObjectExpression","start":1323,"end":1325,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":1368,"end":54887,"declaration":{"type":"ClassDeclaration","start":1375,"end":54887,"id":{"type":"Identifier","start":1381,"end":1398,"name":"FirestoreExtended"},"superClass":null,"body":{"type":"ClassBody","start":1399,"end":54887,"body":[{"type":"MethodDefinition","start":1682,"end":1795,"static":false,"computed":false,"key":{"type":"Identifier","start":1682,"end":1693,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1693,"end":1795,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1694,"end":1696,"name":"fs"},{"type":"AssignmentPattern","start":1698,"end":1719,"left":{"type":"Identifier","start":1698,"end":1710,"name":"defaultDocId"},"right":{"type":"Literal","start":1713,"end":1719,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":1721,"end":1795,"body":[{"type":"ExpressionStatement","start":1732,"end":1745,"expression":{"type":"AssignmentExpression","start":1732,"end":1744,"operator":"=","left":{"type":"MemberExpression","start":1732,"end":1739,"object":{"type":"ThisExpression","start":1732,"end":1736},"property":{"type":"Identifier","start":1737,"end":1739,"name":"fs"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1742,"end":1744,"name":"fs"}}},{"type":"ExpressionStatement","start":1755,"end":1788,"expression":{"type":"AssignmentExpression","start":1755,"end":1787,"operator":"=","left":{"type":"MemberExpression","start":1755,"end":1772,"object":{"type":"ThisExpression","start":1755,"end":1759},"property":{"type":"Identifier","start":1760,"end":1772,"name":"defaultDocId"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1775,"end":1787,"name":"defaultDocId"}}}]}}},{"type":"MethodDefinition","start":1801,"end":1860,"static":false,"computed":false,"key":{"type":"Identifier","start":1805,"end":1814,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":1814,"end":1860,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1817,"end":1860,"body":[{"type":"ReturnStatement","start":1828,"end":1853,"argument":{"type":"MemberExpression","start":1835,"end":1852,"object":{"type":"MemberExpression","start":1835,"end":1842,"object":{"type":"ThisExpression","start":1835,"end":1839},"property":{"type":"Identifier","start":1840,"end":1842,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1843,"end":1852,"name":"firestore"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2986,"end":3228,"static":false,"computed":false,"key":{"type":"Identifier","start":2986,"end":2999,"name":"listenForDoc$"},"kind":"method","value":{"type":"FunctionExpression","start":2999,"end":3228,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3000,"end":3006,"name":"docRef"},{"type":"AssignmentPattern","start":3008,"end":3033,"left":{"type":"Identifier","start":3008,"end":3028,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":3031,"end":3033,"elements":[]}},{"type":"AssignmentPattern","start":3035,"end":3091,"left":{"type":"Identifier","start":3035,"end":3051,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":3054,"end":3091,"object":{"type":"Identifier","start":3054,"end":3071,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":3072,"end":3091,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":3093,"end":3228,"body":[{"type":"ReturnStatement","start":3104,"end":3221,"argument":{"type":"CallExpression","start":3111,"end":3220,"callee":{"type":"MemberExpression","start":3111,"end":3201,"object":{"type":"CallExpression","start":3111,"end":3196,"callee":{"type":"MemberExpression","start":3111,"end":3148,"object":{"type":"ThisExpression","start":3111,"end":3115},"property":{"type":"Identifier","start":3116,"end":3148,"name":"listenForDocDeepRecursiveHelper$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3149,"end":3155,"name":"docRef"},{"type":"Identifier","start":3157,"end":3177,"name":"subCollectionQueries"},{"type":"Identifier","start":3179,"end":3195,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":3197,"end":3201,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3202,"end":3219,"callee":{"type":"Identifier","start":3202,"end":3205,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3206,"end":3218,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3206,"end":3210,"name":"data"}],"body":{"type":"Identifier","start":3214,"end":3218,"name":"data"}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4866,"end":5786,"static":false,"computed":false,"key":{"type":"Identifier","start":4866,"end":4886,"name":"listenForCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":4886,"end":5786,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4887,"end":4893,"name":"_query"},{"type":"AssignmentPattern","start":4895,"end":4920,"left":{"type":"Identifier","start":4895,"end":4915,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":4918,"end":4920,"elements":[]}}],"body":{"type":"BlockStatement","start":4922,"end":5786,"body":[{"type":"ReturnStatement","start":5097,"end":5779,"argument":{"type":"CallExpression","start":5104,"end":5778,"callee":{"type":"MemberExpression","start":5104,"end":5148,"object":{"type":"CallExpression","start":5104,"end":5143,"callee":{"type":"MemberExpression","start":5104,"end":5135,"object":{"type":"ThisExpression","start":5104,"end":5108},"property":{"type":"Identifier","start":5109,"end":5135,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5136,"end":5142,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":5144,"end":5148,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5149,"end":5777,"callee":{"type":"Identifier","start":5149,"end":5157,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":5158,"end":5776,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5159,"end":5164,"name":"items"}],"body":{"type":"BlockStatement","start":5169,"end":5776,"body":[{"type":"IfStatement","start":5184,"end":5273,"test":{"type":"LogicalExpression","start":5188,"end":5223,"left":{"type":"BinaryExpression","start":5188,"end":5201,"left":{"type":"Identifier","start":5188,"end":5193,"name":"items"},"operator":"==","right":{"type":"Literal","start":5197,"end":5201,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":5205,"end":5223,"left":{"type":"MemberExpression","start":5205,"end":5217,"object":{"type":"Identifier","start":5205,"end":5210,"name":"items"},"property":{"type":"Identifier","start":5211,"end":5217,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5222,"end":5223,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":5225,"end":5273,"body":[{"type":"ReturnStatement","start":5244,"end":5258,"argument":{"type":"CallExpression","start":5251,"end":5257,"callee":{"type":"Identifier","start":5251,"end":5253,"name":"of"},"arguments":[{"type":"ArrayExpression","start":5254,"end":5256,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5287,"end":5376,"test":{"type":"BinaryExpression","start":5291,"end":5323,"left":{"type":"MemberExpression","start":5291,"end":5318,"object":{"type":"Identifier","start":5291,"end":5311,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":5312,"end":5318,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":5322,"end":5323,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5325,"end":5376,"body":[{"type":"ReturnStatement","start":5344,"end":5361,"argument":{"type":"CallExpression","start":5351,"end":5360,"callee":{"type":"Identifier","start":5351,"end":5353,"name":"of"},"arguments":[{"type":"Identifier","start":5354,"end":5359,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":5390,"end":5421,"declarations":[{"type":"VariableDeclarator","start":5396,"end":5420,"id":{"type":"Identifier","start":5396,"end":5415,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":5418,"end":5420,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":5435,"end":5641,"expression":{"type":"CallExpression","start":5435,"end":5640,"callee":{"type":"MemberExpression","start":5435,"end":5448,"object":{"type":"Identifier","start":5435,"end":5440,"name":"items"},"property":{"type":"Identifier","start":5441,"end":5448,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5449,"end":5639,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5449,"end":5453,"name":"item"}],"body":{"type":"BlockStatement","start":5457,"end":5639,"body":[{"type":"VariableDeclaration","start":5476,"end":5561,"declarations":[{"type":"VariableDeclarator","start":5482,"end":5560,"id":{"type":"Identifier","start":5482,"end":5500,"name":"collectionListener"},"init":{"type":"CallExpression","start":5503,"end":5560,"callee":{"type":"MemberExpression","start":5503,"end":5532,"object":{"type":"ThisExpression","start":5503,"end":5507},"property":{"type":"Identifier","start":5508,"end":5532,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5533,"end":5537,"name":"item"},{"type":"Identifier","start":5539,"end":5559,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5579,"end":5624,"expression":{"type":"CallExpression","start":5579,"end":5623,"callee":{"type":"MemberExpression","start":5579,"end":5603,"object":{"type":"Identifier","start":5579,"end":5598,"name":"collectionListeners"},"property":{"type":"Identifier","start":5599,"end":5603,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5604,"end":5622,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":5723,"end":5765,"argument":{"type":"CallExpression","start":5730,"end":5764,"callee":{"type":"Identifier","start":5730,"end":5743,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":5744,"end":5763,"name":"collectionListeners"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5937,"end":7579,"static":false,"computed":false,"key":{"type":"Identifier","start":5937,"end":5968,"name":"listenForCollectionRecursively$"},"kind":"method","value":{"type":"FunctionExpression","start":5968,"end":7579,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5969,"end":5983,"name":"collectionPath"},{"type":"Identifier","start":5985,"end":5998,"name":"collectionKey"},{"type":"Identifier","start":6000,"end":6008,"name":"orderKey"}],"body":{"type":"BlockStatement","start":6010,"end":7579,"body":[{"type":"VariableDeclaration","start":6132,"end":6226,"declarations":[{"type":"VariableDeclarator","start":6138,"end":6225,"id":{"type":"Identifier","start":6138,"end":6153,"name":"collectionQuery"},"init":{"type":"NewExpression","start":6156,"end":6225,"callee":{"type":"Identifier","start":6160,"end":6174,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":6175,"end":6224,"callee":{"type":"Identifier","start":6175,"end":6189,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":6190,"end":6204,"name":"collectionPath"},{"type":"MemberExpression","start":6206,"end":6223,"object":{"type":"MemberExpression","start":6206,"end":6213,"object":{"type":"ThisExpression","start":6206,"end":6210},"property":{"type":"Identifier","start":6211,"end":6213,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6214,"end":6223,"name":"firestore"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":6236,"end":6318,"test":{"type":"BinaryExpression","start":6240,"end":6256,"left":{"type":"Identifier","start":6240,"end":6248,"name":"orderKey"},"operator":"!=","right":{"type":"Literal","start":6252,"end":6256,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6258,"end":6318,"body":[{"type":"ExpressionStatement","start":6273,"end":6307,"expression":{"type":"CallExpression","start":6273,"end":6306,"callee":{"type":"MemberExpression","start":6273,"end":6296,"object":{"type":"Identifier","start":6273,"end":6288,"name":"collectionQuery"},"property":{"type":"Identifier","start":6289,"end":6296,"name":"orderBy"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6297,"end":6305,"name":"orderKey"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6328,"end":7572,"argument":{"type":"CallExpression","start":6335,"end":7571,"callee":{"type":"MemberExpression","start":6335,"end":6394,"object":{"type":"CallExpression","start":6335,"end":6389,"callee":{"type":"MemberExpression","start":6335,"end":6366,"object":{"type":"ThisExpression","start":6335,"end":6339},"property":{"type":"Identifier","start":6340,"end":6366,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6367,"end":6388,"object":{"type":"Identifier","start":6367,"end":6382,"name":"collectionQuery"},"property":{"type":"Identifier","start":6383,"end":6388,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":6390,"end":6394,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6395,"end":7570,"callee":{"type":"Identifier","start":6395,"end":6403,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":6404,"end":7569,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6405,"end":6410,"name":"items"}],"body":{"type":"BlockStatement","start":6415,"end":7569,"body":[{"type":"IfStatement","start":6430,"end":6501,"test":{"type":"BinaryExpression","start":6434,"end":6451,"left":{"type":"MemberExpression","start":6434,"end":6446,"object":{"type":"Identifier","start":6434,"end":6439,"name":"items"},"property":{"type":"Identifier","start":6440,"end":6446,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6450,"end":6451,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6453,"end":6501,"body":[{"type":"ReturnStatement","start":6472,"end":6486,"argument":{"type":"CallExpression","start":6479,"end":6485,"callee":{"type":"Identifier","start":6479,"end":6481,"name":"of"},"arguments":[{"type":"ArrayExpression","start":6482,"end":6484,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":6647,"end":6671,"declarations":[{"type":"VariableDeclarator","start":6653,"end":6670,"id":{"type":"Identifier","start":6653,"end":6665,"name":"nextLevelObs"},"init":{"type":"ArrayExpression","start":6668,"end":6670,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":6685,"end":7474,"await":false,"left":{"type":"VariableDeclaration","start":6690,"end":6700,"declarations":[{"type":"VariableDeclarator","start":6696,"end":6700,"id":{"type":"Identifier","start":6696,"end":6700,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":6704,"end":6709,"name":"items"},"body":{"type":"BlockStatement","start":6711,"end":7474,"body":[{"type":"VariableDeclaration","start":6852,"end":6933,"declarations":[{"type":"VariableDeclarator","start":6858,"end":6932,"id":{"type":"Identifier","start":6858,"end":6871,"name":"nextLevelPath"},"init":{"type":"CallExpression","start":6874,"end":6932,"callee":{"type":"MemberExpression","start":6874,"end":6912,"object":{"type":"MemberExpression","start":6874,"end":6905,"object":{"type":"MemberExpression","start":6874,"end":6900,"object":{"type":"MemberExpression","start":6874,"end":6896,"object":{"type":"Identifier","start":6874,"end":6878,"name":"item"},"property":{"type":"Identifier","start":6879,"end":6896,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6897,"end":6900,"name":"ref"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6901,"end":6905,"name":"path"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6906,"end":6912,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6913,"end":6916,"value":"/","raw":"'/'"},{"type":"Identifier","start":6918,"end":6931,"name":"collectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6971,"end":7406,"declarations":[{"type":"VariableDeclarator","start":6977,"end":7405,"id":{"type":"Identifier","start":6977,"end":6992,"name":"nextLevelItems$"},"init":{"type":"CallExpression","start":6995,"end":7405,"callee":{"type":"MemberExpression","start":6995,"end":7076,"object":{"type":"CallExpression","start":6995,"end":7071,"callee":{"type":"MemberExpression","start":6995,"end":7031,"object":{"type":"ThisExpression","start":6995,"end":6999},"property":{"type":"Identifier","start":7000,"end":7031,"name":"listenForCollectionRecursively$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7032,"end":7045,"name":"nextLevelPath"},{"type":"Identifier","start":7047,"end":7060,"name":"collectionKey"},{"type":"Identifier","start":7062,"end":7070,"name":"orderKey"}],"optional":false},"property":{"type":"Identifier","start":7072,"end":7076,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7077,"end":7404,"callee":{"type":"Identifier","start":7077,"end":7080,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":7081,"end":7403,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7082,"end":7096,"name":"nextLevelItems"}],"body":{"type":"BlockStatement","start":7101,"end":7403,"body":[{"type":"IfStatement","start":7124,"end":7353,"test":{"type":"BinaryExpression","start":7128,"end":7153,"left":{"type":"MemberExpression","start":7128,"end":7149,"object":{"type":"Identifier","start":7128,"end":7142,"name":"nextLevelItems"},"property":{"type":"Identifier","start":7143,"end":7149,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":7152,"end":7153,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7155,"end":7257,"body":[{"type":"ReturnStatement","start":7182,"end":7234,"argument":{"type":"ObjectExpression","start":7189,"end":7233,"properties":[{"type":"SpreadElement","start":7191,"end":7198,"argument":{"type":"Identifier","start":7194,"end":7198,"name":"item"}},{"type":"Property","start":7200,"end":7231,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":7201,"end":7214,"name":"collectionKey"},"value":{"type":"Identifier","start":7217,"end":7231,"name":"nextLevelItems"},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":7284,"end":7353,"body":[{"type":"ReturnStatement","start":7311,"end":7330,"argument":{"type":"ObjectExpression","start":7318,"end":7329,"properties":[{"type":"SpreadElement","start":7320,"end":7327,"argument":{"type":"Identifier","start":7323,"end":7327,"name":"item"}}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7424,"end":7459,"expression":{"type":"CallExpression","start":7424,"end":7458,"callee":{"type":"MemberExpression","start":7424,"end":7441,"object":{"type":"Identifier","start":7424,"end":7436,"name":"nextLevelObs"},"property":{"type":"Identifier","start":7437,"end":7441,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7442,"end":7457,"name":"nextLevelItems$"}],"optional":false}}]}},{"type":"ReturnStatement","start":7488,"end":7558,"argument":{"type":"CallExpression","start":7495,"end":7557,"callee":{"type":"MemberExpression","start":7495,"end":7527,"object":{"type":"CallExpression","start":7495,"end":7522,"callee":{"type":"Identifier","start":7495,"end":7508,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":7509,"end":7521,"name":"nextLevelObs"}],"optional":false},"property":{"type":"Identifier","start":7523,"end":7527,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7528,"end":7556,"callee":{"type":"Identifier","start":7528,"end":7531,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":7532,"end":7555,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":7532,"end":7535,"name":"val"}],"body":{"type":"CallExpression","start":7539,"end":7555,"callee":{"type":"MemberExpression","start":7539,"end":7550,"object":{"type":"Identifier","start":7539,"end":7546,"name":"console"},"property":{"type":"Identifier","start":7547,"end":7550,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7551,"end":7554,"name":"val"}],"optional":false}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":8213,"end":15021,"static":false,"computed":false,"key":{"type":"Identifier","start":8213,"end":8217,"name":"add$"},"kind":"method","value":{"type":"FunctionExpression","start":8217,"end":15021,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8218,"end":8222,"name":"data"},{"type":"Identifier","start":8224,"end":8237,"name":"collectionRef"},{"type":"AssignmentPattern","start":8239,"end":8264,"left":{"type":"Identifier","start":8239,"end":8259,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":8262,"end":8264,"elements":[]}},{"type":"AssignmentPattern","start":8266,"end":8283,"left":{"type":"Identifier","start":8266,"end":8276,"name":"isAddDates"},"right":{"type":"Literal","start":8279,"end":8283,"value":true,"raw":"true"}},{"type":"Identifier","start":8285,"end":8290,"name":"docId"}],"body":{"type":"BlockStatement","start":8292,"end":15021,"body":[{"type":"IfStatement","start":8303,"end":8788,"test":{"type":"LogicalExpression","start":8307,"end":8370,"left":{"type":"LogicalExpression","start":8307,"end":8335,"left":{"type":"CallExpression","start":8307,"end":8326,"callee":{"type":"MemberExpression","start":8307,"end":8320,"object":{"type":"Identifier","start":8307,"end":8312,"name":"Array"},"property":{"type":"Identifier","start":8313,"end":8320,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8321,"end":8325,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":8330,"end":8335,"name":"docId"}},"operator":"&&","right":{"type":"BinaryExpression","start":8339,"end":8370,"left":{"type":"MemberExpression","start":8339,"end":8366,"object":{"type":"Identifier","start":8339,"end":8359,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":8360,"end":8366,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":8369,"end":8370,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":8372,"end":8788,"body":[{"type":"VariableDeclaration","start":8387,"end":8751,"declarations":[{"type":"VariableDeclarator","start":8393,"end":8750,"id":{"type":"Identifier","start":8393,"end":8398,"name":"error"},"init":{"type":"ObjectExpression","start":8401,"end":8750,"properties":[{"type":"Property","start":8420,"end":8471,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8420,"end":8424,"name":"name"},"value":{"type":"Literal","start":8426,"end":8471,"value":"firestoreExt/invalid-sub-collection-writers","raw":"'firestoreExt/invalid-sub-collection-writers'"},"kind":"init"},{"type":"Property","start":8490,"end":8505,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8490,"end":8494,"name":"code"},"value":{"type":"Literal","start":8496,"end":8505,"value":"unknown","raw":"'unknown'"},"kind":"init"},{"type":"Property","start":8524,"end":8621,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8524,"end":8531,"name":"message"},"value":{"type":"Literal","start":8533,"end":8621,"value":"Cannot have both docId and subCollectionWriters at the same time when data is an array","raw":"'Cannot have both docId and subCollectionWriters at the same time when data is an array'"},"kind":"init"},{"type":"Property","start":8640,"end":8649,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":8640,"end":8645,"name":"stack"},"value":{"type":"Literal","start":8647,"end":8649,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":8668,"end":8672,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8668,"end":8672,"name":"data"},"kind":"init","value":{"type":"Identifier","start":8668,"end":8672,"name":"data"}},{"type":"Property","start":8691,"end":8711,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8691,"end":8711,"name":"subCollectionWriters"},"kind":"init","value":{"type":"Identifier","start":8691,"end":8711,"name":"subCollectionWriters"}},{"type":"Property","start":8730,"end":8735,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":8730,"end":8735,"name":"docId"},"kind":"init","value":{"type":"Identifier","start":8730,"end":8735,"name":"docId"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":8765,"end":8777,"argument":{"type":"Identifier","start":8771,"end":8776,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":8798,"end":8813,"declarations":[{"type":"VariableDeclarator","start":8802,"end":8812,"id":{"type":"Identifier","start":8802,"end":8812,"name":"currentDoc"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8823,"end":8847,"declarations":[{"type":"VariableDeclarator","start":8827,"end":8846,"id":{"type":"Identifier","start":8827,"end":8841,"name":"subCollections"},"init":{"type":"ObjectExpression","start":8844,"end":8846,"properties":[]}}],"kind":"let"},{"type":"IfStatement","start":9177,"end":9480,"test":{"type":"LogicalExpression","start":9181,"end":9209,"left":{"type":"CallExpression","start":9181,"end":9200,"callee":{"type":"MemberExpression","start":9181,"end":9194,"object":{"type":"Identifier","start":9181,"end":9186,"name":"Array"},"property":{"type":"Identifier","start":9187,"end":9194,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9195,"end":9199,"name":"data"}],"optional":false},"operator":"&&","right":{"type":"Identifier","start":9204,"end":9209,"name":"docId"}},"consequent":{"type":"BlockStatement","start":9211,"end":9255,"body":[{"type":"ExpressionStatement","start":9226,"end":9244,"expression":{"type":"AssignmentExpression","start":9226,"end":9243,"operator":"=","left":{"type":"Identifier","start":9226,"end":9236,"name":"currentDoc"},"right":{"type":"Identifier","start":9239,"end":9243,"name":"data"}}}]},"alternate":{"type":"BlockStatement","start":9270,"end":9480,"body":[{"type":"VariableDeclaration","start":9285,"end":9373,"declarations":[{"type":"VariableDeclarator","start":9291,"end":9372,"id":{"type":"Identifier","start":9291,"end":9296,"name":"split"},"init":{"type":"CallExpression","start":9299,"end":9372,"callee":{"type":"MemberExpression","start":9299,"end":9344,"object":{"type":"ThisExpression","start":9299,"end":9303},"property":{"type":"Identifier","start":9304,"end":9344,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9345,"end":9349,"name":"data"},{"type":"Identifier","start":9351,"end":9371,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9387,"end":9417,"expression":{"type":"AssignmentExpression","start":9387,"end":9416,"operator":"=","left":{"type":"Identifier","start":9387,"end":9397,"name":"currentDoc"},"right":{"type":"MemberExpression","start":9400,"end":9416,"object":{"type":"Identifier","start":9400,"end":9405,"name":"split"},"property":{"type":"Identifier","start":9406,"end":9416,"name":"currentDoc"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":9431,"end":9469,"expression":{"type":"AssignmentExpression","start":9431,"end":9468,"operator":"=","left":{"type":"Identifier","start":9431,"end":9445,"name":"subCollections"},"right":{"type":"MemberExpression","start":9448,"end":9468,"object":{"type":"Identifier","start":9448,"end":9453,"name":"split"},"property":{"type":"Identifier","start":9454,"end":9468,"name":"subCollections"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":9490,"end":15014,"argument":{"type":"CallExpression","start":9497,"end":15013,"callee":{"type":"MemberExpression","start":9497,"end":14971,"object":{"type":"CallExpression","start":9497,"end":14966,"callee":{"type":"MemberExpression","start":9497,"end":9563,"object":{"type":"CallExpression","start":9497,"end":9558,"callee":{"type":"MemberExpression","start":9497,"end":9512,"object":{"type":"ThisExpression","start":9497,"end":9501},"property":{"type":"Identifier","start":9502,"end":9512,"name":"addSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9513,"end":9523,"name":"currentDoc"},{"type":"Identifier","start":9525,"end":9538,"name":"collectionRef"},{"type":"Identifier","start":9540,"end":9550,"name":"isAddDates"},{"type":"Identifier","start":9552,"end":9557,"name":"docId"}],"optional":false},"property":{"type":"Identifier","start":9559,"end":9563,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9612,"end":14965,"callee":{"type":"Identifier","start":9612,"end":9620,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":9621,"end":14964,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9622,"end":9633,"name":"currentData"}],"body":{"type":"BlockStatement","start":9638,"end":14964,"body":[{"type":"VariableDeclaration","start":9653,"end":9675,"declarations":[{"type":"VariableDeclarator","start":9659,"end":9674,"id":{"type":"Identifier","start":9659,"end":9669,"name":"subWriters"},"init":{"type":"ArrayExpression","start":9672,"end":9674,"elements":[]}}],"kind":"const"},{"type":"ForOfStatement","start":9689,"end":13020,"await":false,"left":{"type":"VariableDeclaration","start":9694,"end":9738,"declarations":[{"type":"VariableDeclarator","start":9700,"end":9738,"id":{"type":"ArrayPattern","start":9700,"end":9738,"elements":[{"type":"Identifier","start":9701,"end":9717,"name":"subCollectionKey"},{"type":"Identifier","start":9719,"end":9737,"name":"subCollectionValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":9742,"end":9772,"callee":{"type":"MemberExpression","start":9742,"end":9756,"object":{"type":"Identifier","start":9742,"end":9748,"name":"Object"},"property":{"type":"Identifier","start":9749,"end":9756,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9757,"end":9771,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":9774,"end":13020,"body":[{"type":"VariableDeclaration","start":9793,"end":9821,"declarations":[{"type":"VariableDeclarator","start":9797,"end":9820,"id":{"type":"Identifier","start":9797,"end":9820,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":9879,"end":9892,"declarations":[{"type":"VariableDeclarator","start":9883,"end":9891,"id":{"type":"Identifier","start":9883,"end":9891,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9910,"end":10204,"test":{"type":"Identifier","start":9914,"end":9934,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":9936,"end":10204,"body":[{"type":"ExpressionStatement","start":9959,"end":10073,"expression":{"type":"AssignmentExpression","start":9959,"end":10072,"operator":"=","left":{"type":"Identifier","start":9959,"end":9982,"name":"subSubCollectionWriters"},"right":{"type":"ChainExpression","start":9985,"end":10072,"expression":{"type":"MemberExpression","start":9985,"end":10072,"object":{"type":"CallExpression","start":9985,"end":10056,"callee":{"type":"MemberExpression","start":9985,"end":10010,"object":{"type":"Identifier","start":9985,"end":10005,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10006,"end":10010,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10011,"end":10055,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10011,"end":10018,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10022,"end":10055,"left":{"type":"MemberExpression","start":10022,"end":10034,"object":{"type":"Identifier","start":10022,"end":10029,"name":"subColl"},"property":{"type":"Identifier","start":10030,"end":10034,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10039,"end":10055,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":10058,"end":10072,"name":"subCollections"},"computed":false,"optional":true}}}},{"type":"ExpressionStatement","start":10095,"end":10185,"expression":{"type":"AssignmentExpression","start":10095,"end":10184,"operator":"=","left":{"type":"Identifier","start":10095,"end":10103,"name":"subDocId"},"right":{"type":"ChainExpression","start":10106,"end":10184,"expression":{"type":"MemberExpression","start":10106,"end":10184,"object":{"type":"CallExpression","start":10106,"end":10177,"callee":{"type":"MemberExpression","start":10106,"end":10131,"object":{"type":"Identifier","start":10106,"end":10126,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":10127,"end":10131,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10132,"end":10176,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":10132,"end":10139,"name":"subColl"}],"body":{"type":"BinaryExpression","start":10143,"end":10176,"left":{"type":"MemberExpression","start":10143,"end":10155,"object":{"type":"Identifier","start":10143,"end":10150,"name":"subColl"},"property":{"type":"Identifier","start":10151,"end":10155,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":10160,"end":10176,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":10179,"end":10184,"name":"docId"},"computed":false,"optional":true}}}}]},"alternate":null},{"type":"VariableDeclaration","start":10222,"end":10317,"declarations":[{"type":"VariableDeclarator","start":10228,"end":10316,"id":{"type":"Identifier","start":10228,"end":10244,"name":"subCollectionRef"},"init":{"type":"CallExpression","start":10247,"end":10316,"callee":{"type":"Identifier","start":10247,"end":10263,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":10264,"end":10297,"object":{"type":"MemberExpression","start":10264,"end":10293,"object":{"type":"Identifier","start":10264,"end":10275,"name":"currentData"},"property":{"type":"Identifier","start":10276,"end":10293,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10294,"end":10297,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":10299,"end":10315,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10742,"end":13005,"test":{"type":"CallExpression","start":10746,"end":10779,"callee":{"type":"MemberExpression","start":10746,"end":10759,"object":{"type":"Identifier","start":10746,"end":10751,"name":"Array"},"property":{"type":"Identifier","start":10752,"end":10759,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10760,"end":10778,"name":"subCollectionValue"}],"optional":false},"consequent":{"type":"BlockStatement","start":10781,"end":12320,"body":[{"type":"IfStatement","start":10804,"end":12301,"test":{"type":"BinaryExpression","start":10808,"end":10830,"left":{"type":"Identifier","start":10808,"end":10816,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":10821,"end":10830,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":10832,"end":11462,"body":[{"type":"VariableDeclaration","start":11035,"end":11386,"declarations":[{"type":"VariableDeclarator","start":11041,"end":11385,"id":{"type":"Identifier","start":11041,"end":11050,"name":"subWriter"},"init":{"type":"CallExpression","start":11053,"end":11385,"callee":{"type":"MemberExpression","start":11053,"end":11152,"object":{"type":"CallExpression","start":11053,"end":11147,"callee":{"type":"MemberExpression","start":11053,"end":11062,"object":{"type":"ThisExpression","start":11053,"end":11057},"property":{"type":"Identifier","start":11058,"end":11062,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11063,"end":11081,"name":"subCollectionValue"},{"type":"Identifier","start":11083,"end":11099,"name":"subCollectionRef"},{"type":"Identifier","start":11101,"end":11124,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11126,"end":11136,"name":"isAddDates"},{"type":"Identifier","start":11138,"end":11146,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":11148,"end":11152,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11153,"end":11384,"callee":{"type":"Identifier","start":11153,"end":11156,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11157,"end":11383,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11157,"end":11161,"name":"item"}],"body":{"type":"BlockStatement","start":11165,"end":11383,"body":[{"type":"ReturnStatement","start":11250,"end":11296,"argument":{"type":"ObjectExpression","start":11257,"end":11295,"properties":[{"type":"Property","start":11259,"end":11280,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11259,"end":11262,"name":"key"},"value":{"type":"Identifier","start":11264,"end":11280,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":11282,"end":11293,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":11282,"end":11287,"name":"value"},"value":{"type":"Identifier","start":11289,"end":11293,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11412,"end":11439,"expression":{"type":"CallExpression","start":11412,"end":11438,"callee":{"type":"MemberExpression","start":11412,"end":11427,"object":{"type":"Identifier","start":11412,"end":11422,"name":"subWriters"},"property":{"type":"Identifier","start":11423,"end":11427,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11428,"end":11437,"name":"subWriter"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11489,"end":12301,"body":[{"type":"ExpressionStatement","start":11586,"end":12278,"expression":{"type":"CallExpression","start":11586,"end":12277,"callee":{"type":"MemberExpression","start":11586,"end":11612,"object":{"type":"Identifier","start":11586,"end":11604,"name":"subCollectionValue"},"property":{"type":"Identifier","start":11605,"end":11612,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11613,"end":12276,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11614,"end":11624,"name":"arrayValue"}],"body":{"type":"BlockStatement","start":11629,"end":12276,"body":[{"type":"VariableDeclaration","start":11776,"end":12192,"declarations":[{"type":"VariableDeclarator","start":11782,"end":12191,"id":{"type":"Identifier","start":11782,"end":11791,"name":"subWriter"},"init":{"type":"CallExpression","start":11794,"end":12191,"callee":{"type":"MemberExpression","start":11794,"end":11875,"object":{"type":"CallExpression","start":11794,"end":11870,"callee":{"type":"MemberExpression","start":11794,"end":11803,"object":{"type":"ThisExpression","start":11794,"end":11798},"property":{"type":"Identifier","start":11799,"end":11803,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11804,"end":11814,"name":"arrayValue"},{"type":"Identifier","start":11816,"end":11832,"name":"subCollectionRef"},{"type":"Identifier","start":11834,"end":11857,"name":"subSubCollectionWriters"},{"type":"Identifier","start":11859,"end":11869,"name":"isAddDates"}],"optional":false},"property":{"type":"Identifier","start":11871,"end":11875,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11876,"end":12190,"callee":{"type":"Identifier","start":11876,"end":11879,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11880,"end":12189,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11880,"end":11884,"name":"item"}],"body":{"type":"BlockStatement","start":11888,"end":12189,"body":[{"type":"ReturnStatement","start":12110,"end":12158,"argument":{"type":"ObjectExpression","start":12117,"end":12157,"properties":[{"type":"Property","start":12119,"end":12140,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12119,"end":12122,"name":"key"},"value":{"type":"Identifier","start":12124,"end":12140,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12142,"end":12155,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12142,"end":12147,"name":"value"},"value":{"type":"ArrayExpression","start":12149,"end":12155,"elements":[{"type":"Identifier","start":12150,"end":12154,"name":"item"}]},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12222,"end":12249,"expression":{"type":"CallExpression","start":12222,"end":12248,"callee":{"type":"MemberExpression","start":12222,"end":12237,"object":{"type":"Identifier","start":12222,"end":12232,"name":"subWriters"},"property":{"type":"Identifier","start":12233,"end":12237,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12238,"end":12247,"name":"subWriter"}],"optional":false}}]}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":12343,"end":13005,"body":[{"type":"ExpressionStatement","start":12403,"end":12468,"expression":{"type":"AssignmentExpression","start":12403,"end":12467,"operator":"=","left":{"type":"Identifier","start":12403,"end":12411,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":12414,"end":12467,"test":{"type":"BinaryExpression","start":12414,"end":12436,"left":{"type":"Identifier","start":12414,"end":12422,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":12427,"end":12436,"name":"undefined"}},"consequent":{"type":"Identifier","start":12439,"end":12447,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":12450,"end":12467,"object":{"type":"ThisExpression","start":12450,"end":12454},"property":{"type":"Identifier","start":12455,"end":12467,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":12598,"end":12937,"declarations":[{"type":"VariableDeclarator","start":12604,"end":12936,"id":{"type":"Identifier","start":12604,"end":12613,"name":"subWriter"},"init":{"type":"CallExpression","start":12616,"end":12936,"callee":{"type":"MemberExpression","start":12616,"end":12715,"object":{"type":"CallExpression","start":12616,"end":12710,"callee":{"type":"MemberExpression","start":12616,"end":12625,"object":{"type":"ThisExpression","start":12616,"end":12620},"property":{"type":"Identifier","start":12621,"end":12625,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12626,"end":12644,"name":"subCollectionValue"},{"type":"Identifier","start":12646,"end":12662,"name":"subCollectionRef"},{"type":"Identifier","start":12664,"end":12687,"name":"subSubCollectionWriters"},{"type":"Identifier","start":12689,"end":12699,"name":"isAddDates"},{"type":"Identifier","start":12701,"end":12709,"name":"subDocId"}],"optional":false},"property":{"type":"Identifier","start":12711,"end":12715,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":12716,"end":12935,"callee":{"type":"Identifier","start":12716,"end":12719,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":12720,"end":12934,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12720,"end":12724,"name":"item"}],"body":{"type":"BlockStatement","start":12728,"end":12934,"body":[{"type":"ReturnStatement","start":12805,"end":12851,"argument":{"type":"ObjectExpression","start":12812,"end":12850,"properties":[{"type":"Property","start":12814,"end":12835,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12814,"end":12817,"name":"key"},"value":{"type":"Identifier","start":12819,"end":12835,"name":"subCollectionKey"},"kind":"init"},{"type":"Property","start":12837,"end":12848,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":12837,"end":12842,"name":"value"},"value":{"type":"Identifier","start":12844,"end":12848,"name":"item"},"kind":"init"}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12959,"end":12986,"expression":{"type":"CallExpression","start":12959,"end":12985,"callee":{"type":"MemberExpression","start":12959,"end":12974,"object":{"type":"Identifier","start":12959,"end":12969,"name":"subWriters"},"property":{"type":"Identifier","start":12970,"end":12974,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12975,"end":12984,"name":"subWriter"}],"optional":false}}]}}]}},{"type":"IfStatement","start":13057,"end":14953,"test":{"type":"BinaryExpression","start":13061,"end":13082,"left":{"type":"MemberExpression","start":13061,"end":13078,"object":{"type":"Identifier","start":13061,"end":13071,"name":"subWriters"},"property":{"type":"Identifier","start":13072,"end":13078,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":13081,"end":13082,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":13084,"end":14877,"body":[{"type":"ReturnStatement","start":13267,"end":14862,"argument":{"type":"CallExpression","start":13274,"end":14861,"callee":{"type":"MemberExpression","start":13274,"end":13304,"object":{"type":"CallExpression","start":13274,"end":13299,"callee":{"type":"Identifier","start":13274,"end":13287,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":13288,"end":13298,"name":"subWriters"}],"optional":false},"property":{"type":"Identifier","start":13300,"end":13304,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13693,"end":14668,"callee":{"type":"Identifier","start":13693,"end":13696,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":13697,"end":14667,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13698,"end":13706,"name":"docDatas"}],"body":{"type":"BlockStatement","start":13711,"end":14667,"body":[{"type":"VariableDeclaration","start":13734,"end":13757,"declarations":[{"type":"VariableDeclarator","start":13740,"end":13756,"id":{"type":"Identifier","start":13740,"end":13751,"name":"groupedData"},"init":{"type":"ObjectExpression","start":13754,"end":13756,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13779,"end":14607,"expression":{"type":"CallExpression","start":13779,"end":14606,"callee":{"type":"MemberExpression","start":13779,"end":13795,"object":{"type":"Identifier","start":13779,"end":13787,"name":"docDatas"},"property":{"type":"Identifier","start":13788,"end":13795,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13796,"end":14605,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13797,"end":13800,"name":"doc"}],"body":{"type":"BlockStatement","start":13805,"end":14605,"body":[{"type":"VariableDeclaration","start":13832,"end":13852,"declarations":[{"type":"VariableDeclarator","start":13838,"end":13851,"id":{"type":"Identifier","start":13838,"end":13841,"name":"key"},"init":{"type":"MemberExpression","start":13844,"end":13851,"object":{"type":"Identifier","start":13844,"end":13847,"name":"doc"},"property":{"type":"Identifier","start":13848,"end":13851,"name":"key"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":13878,"end":13902,"declarations":[{"type":"VariableDeclarator","start":13884,"end":13901,"id":{"type":"Identifier","start":13884,"end":13889,"name":"value"},"init":{"type":"MemberExpression","start":13892,"end":13901,"object":{"type":"Identifier","start":13892,"end":13895,"name":"doc"},"property":{"type":"Identifier","start":13896,"end":13901,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":14095,"end":14582,"test":{"type":"LogicalExpression","start":14099,"end":14165,"left":{"type":"CallExpression","start":14099,"end":14130,"callee":{"type":"MemberExpression","start":14099,"end":14125,"object":{"type":"Identifier","start":14099,"end":14110,"name":"groupedData"},"property":{"type":"Identifier","start":14111,"end":14125,"name":"hasOwnProperty"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14126,"end":14129,"name":"key"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":14134,"end":14165,"callee":{"type":"MemberExpression","start":14134,"end":14147,"object":{"type":"Identifier","start":14134,"end":14139,"name":"Array"},"property":{"type":"Identifier","start":14140,"end":14147,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14148,"end":14164,"object":{"type":"Identifier","start":14148,"end":14159,"name":"groupedData"},"property":{"type":"Identifier","start":14160,"end":14163,"name":"key"},"computed":true,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":14167,"end":14425,"body":[{"type":"ExpressionStatement","start":14366,"end":14398,"expression":{"type":"CallExpression","start":14366,"end":14397,"callee":{"type":"MemberExpression","start":14366,"end":14387,"object":{"type":"MemberExpression","start":14366,"end":14382,"object":{"type":"Identifier","start":14366,"end":14377,"name":"groupedData"},"property":{"type":"Identifier","start":14378,"end":14381,"name":"key"},"computed":true,"optional":false},"property":{"type":"Identifier","start":14383,"end":14387,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14388,"end":14396,"object":{"type":"Identifier","start":14388,"end":14393,"name":"value"},"property":{"type":"Literal","start":14394,"end":14395,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14456,"end":14582,"body":[{"type":"ExpressionStatement","start":14530,"end":14555,"expression":{"type":"AssignmentExpression","start":14530,"end":14554,"operator":"=","left":{"type":"MemberExpression","start":14530,"end":14546,"object":{"type":"Identifier","start":14530,"end":14541,"name":"groupedData"},"property":{"type":"Identifier","start":14542,"end":14545,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":14549,"end":14554,"name":"value"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":14629,"end":14648,"argument":{"type":"Identifier","start":14636,"end":14647,"name":"groupedData"}}]}}],"optional":false},{"type":"CallExpression","start":14754,"end":14860,"callee":{"type":"Identifier","start":14754,"end":14757,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":14758,"end":14859,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14759,"end":14770,"name":"groupedData"}],"body":{"type":"BlockStatement","start":14775,"end":14859,"body":[{"type":"ReturnStatement","start":14798,"end":14840,"argument":{"type":"ObjectExpression","start":14805,"end":14839,"properties":[{"type":"SpreadElement","start":14807,"end":14821,"argument":{"type":"Identifier","start":14810,"end":14821,"name":"currentData"}},{"type":"SpreadElement","start":14823,"end":14837,"argument":{"type":"Identifier","start":14826,"end":14837,"name":"groupedData"}}]}}]}}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":14896,"end":14953,"body":[{"type":"ReturnStatement","start":14915,"end":14938,"argument":{"type":"CallExpression","start":14922,"end":14937,"callee":{"type":"Identifier","start":14922,"end":14924,"name":"of"},"arguments":[{"type":"Identifier","start":14925,"end":14936,"name":"currentData"}],"optional":false}}]}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":14967,"end":14971,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15005,"end":15012,"callee":{"type":"Identifier","start":15005,"end":15009,"name":"take"},"arguments":[{"type":"Literal","start":15010,"end":15011,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":15756,"end":16209,"static":false,"computed":false,"key":{"type":"Identifier","start":15756,"end":15763,"name":"update$"},"kind":"method","value":{"type":"FunctionExpression","start":15763,"end":16209,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15764,"end":15768,"name":"data"},{"type":"Identifier","start":15770,"end":15776,"name":"docRef"},{"type":"AssignmentPattern","start":15778,"end":15803,"left":{"type":"Identifier","start":15778,"end":15798,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":15801,"end":15803,"elements":[]}},{"type":"AssignmentPattern","start":15805,"end":15829,"left":{"type":"Identifier","start":15805,"end":15822,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":15825,"end":15829,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":15831,"end":16209,"body":[{"type":"IfStatement","start":15842,"end":16052,"test":{"type":"LogicalExpression","start":15846,"end":15911,"left":{"type":"BinaryExpression","start":15846,"end":15874,"left":{"type":"Identifier","start":15846,"end":15866,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":15870,"end":15874,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":15878,"end":15911,"left":{"type":"MemberExpression","start":15878,"end":15905,"object":{"type":"Identifier","start":15878,"end":15898,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":15899,"end":15905,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":15910,"end":15911,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":15913,"end":16052,"body":[{"type":"ReturnStatement","start":15928,"end":15987,"argument":{"type":"CallExpression","start":15935,"end":15986,"callee":{"type":"MemberExpression","start":15935,"end":15953,"object":{"type":"ThisExpression","start":15935,"end":15939},"property":{"type":"Identifier","start":15940,"end":15953,"name":"updateSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15954,"end":15958,"name":"data"},{"type":"Identifier","start":15960,"end":15966,"name":"docRef"},{"type":"Identifier","start":15968,"end":15985,"name":"isAddModifiedDate"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":16062,"end":16160,"declarations":[{"type":"VariableDeclarator","start":16068,"end":16159,"id":{"type":"Identifier","start":16068,"end":16073,"name":"batch"},"init":{"type":"CallExpression","start":16076,"end":16159,"callee":{"type":"MemberExpression","start":16076,"end":16104,"object":{"type":"ThisExpression","start":16076,"end":16080},"property":{"type":"Identifier","start":16081,"end":16104,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16105,"end":16109,"name":"data"},{"type":"Identifier","start":16111,"end":16117,"name":"docRef"},{"type":"Identifier","start":16119,"end":16139,"name":"subCollectionWriters"},{"type":"Identifier","start":16141,"end":16158,"name":"isAddModifiedDate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":16170,"end":16202,"argument":{"type":"CallExpression","start":16177,"end":16201,"callee":{"type":"MemberExpression","start":16177,"end":16194,"object":{"type":"ThisExpression","start":16177,"end":16181},"property":{"type":"Identifier","start":16182,"end":16194,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16195,"end":16200,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16486,"end":16902,"static":false,"computed":false,"key":{"type":"Identifier","start":16486,"end":16501,"name":"updateMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":16501,"end":16902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16502,"end":16509,"name":"docRefs"},{"type":"Identifier","start":16511,"end":16515,"name":"data"},{"type":"AssignmentPattern","start":16517,"end":16541,"left":{"type":"Identifier","start":16517,"end":16534,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":16537,"end":16541,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":16543,"end":16902,"body":[{"type":"VariableDeclaration","start":16621,"end":16665,"declarations":[{"type":"VariableDeclarator","start":16627,"end":16664,"id":{"type":"Identifier","start":16627,"end":16632,"name":"batch"},"init":{"type":"CallExpression","start":16635,"end":16664,"callee":{"type":"Identifier","start":16635,"end":16645,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":16646,"end":16663,"object":{"type":"MemberExpression","start":16646,"end":16653,"object":{"type":"ThisExpression","start":16646,"end":16650},"property":{"type":"Identifier","start":16651,"end":16653,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16654,"end":16663,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":16675,"end":16760,"test":{"type":"Identifier","start":16679,"end":16696,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":16698,"end":16760,"body":[{"type":"ExpressionStatement","start":16713,"end":16749,"expression":{"type":"AssignmentExpression","start":16713,"end":16748,"operator":"=","left":{"type":"Identifier","start":16713,"end":16717,"name":"data"},"right":{"type":"CallExpression","start":16720,"end":16748,"callee":{"type":"Identifier","start":16720,"end":16735,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":16736,"end":16740,"name":"data"},{"type":"Literal","start":16742,"end":16747,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":16770,"end":16853,"expression":{"type":"CallExpression","start":16770,"end":16852,"callee":{"type":"MemberExpression","start":16770,"end":16785,"object":{"type":"Identifier","start":16770,"end":16777,"name":"docRefs"},"property":{"type":"Identifier","start":16778,"end":16785,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16786,"end":16851,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16787,"end":16793,"name":"docRef"}],"body":{"type":"BlockStatement","start":16798,"end":16851,"body":[{"type":"ExpressionStatement","start":16813,"end":16840,"expression":{"type":"CallExpression","start":16813,"end":16839,"callee":{"type":"MemberExpression","start":16813,"end":16825,"object":{"type":"Identifier","start":16813,"end":16818,"name":"batch"},"property":{"type":"Identifier","start":16819,"end":16825,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16826,"end":16832,"name":"docRef"},{"type":"Identifier","start":16834,"end":16838,"name":"data"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":16863,"end":16895,"argument":{"type":"CallExpression","start":16870,"end":16894,"callee":{"type":"MemberExpression","start":16870,"end":16887,"object":{"type":"ThisExpression","start":16870,"end":16874},"property":{"type":"Identifier","start":16875,"end":16887,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16888,"end":16893,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":17501,"end":18378,"static":false,"computed":false,"key":{"type":"Identifier","start":17501,"end":17513,"name":"changeDocId$"},"kind":"method","value":{"type":"FunctionExpression","start":17513,"end":18378,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17514,"end":17520,"name":"docRef"},{"type":"Identifier","start":17522,"end":17527,"name":"newId"},{"type":"AssignmentPattern","start":17529,"end":17554,"left":{"type":"Identifier","start":17529,"end":17549,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":17552,"end":17554,"elements":[]}},{"type":"Identifier","start":17556,"end":17576,"name":"subCollectionWriters"}],"body":{"type":"BlockStatement","start":17578,"end":18378,"body":[{"type":"IfStatement","start":17589,"end":17693,"test":{"type":"BinaryExpression","start":17593,"end":17621,"left":{"type":"Identifier","start":17593,"end":17613,"name":"subCollectionWriters"},"operator":"==","right":{"type":"Literal","start":17617,"end":17621,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":17623,"end":17693,"body":[{"type":"ExpressionStatement","start":17638,"end":17682,"expression":{"type":"AssignmentExpression","start":17638,"end":17681,"operator":"=","left":{"type":"Identifier","start":17638,"end":17658,"name":"subCollectionWriters"},"right":{"type":"Identifier","start":17661,"end":17681,"name":"subCollectionQueries"}}}]},"alternate":null},{"type":"VariableDeclaration","start":17703,"end":17739,"declarations":[{"type":"VariableDeclarator","start":17709,"end":17738,"id":{"type":"Identifier","start":17709,"end":17722,"name":"collectionRef"},"init":{"type":"MemberExpression","start":17725,"end":17738,"object":{"type":"Identifier","start":17725,"end":17731,"name":"docRef"},"property":{"type":"Identifier","start":17732,"end":17738,"name":"parent"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":17749,"end":18371,"argument":{"type":"CallExpression","start":17756,"end":18370,"callee":{"type":"MemberExpression","start":17756,"end":17809,"object":{"type":"CallExpression","start":17756,"end":17804,"callee":{"type":"MemberExpression","start":17756,"end":17774,"object":{"type":"ThisExpression","start":17756,"end":17760},"property":{"type":"Identifier","start":17761,"end":17774,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17775,"end":17781,"name":"docRef"},{"type":"Identifier","start":17783,"end":17803,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":17805,"end":17809,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17843,"end":17850,"callee":{"type":"Identifier","start":17843,"end":17847,"name":"take"},"arguments":[{"type":"Literal","start":17848,"end":17849,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":17852,"end":17925,"callee":{"type":"Identifier","start":17852,"end":17855,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":17856,"end":17924,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":17857,"end":17864,"name":"oldData"}],"body":{"type":"CallExpression","start":17869,"end":17924,"callee":{"type":"MemberExpression","start":17869,"end":17893,"object":{"type":"ThisExpression","start":17869,"end":17873},"property":{"type":"Identifier","start":17874,"end":17893,"name":"cleanExtrasFromData"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17894,"end":17901,"name":"oldData"},{"type":"Identifier","start":17903,"end":17923,"name":"subCollectionWriters"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":17927,"end":18242,"callee":{"type":"Identifier","start":17927,"end":17936,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":17937,"end":18241,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17938,"end":17945,"name":"oldData"}],"body":{"type":"BlockStatement","start":17950,"end":18241,"body":[{"type":"ReturnStatement","start":17965,"end":18230,"argument":{"type":"CallExpression","start":17972,"end":18229,"callee":{"type":"MemberExpression","start":17972,"end":18046,"object":{"type":"CallExpression","start":17972,"end":18041,"callee":{"type":"MemberExpression","start":17972,"end":17981,"object":{"type":"ThisExpression","start":17972,"end":17976},"property":{"type":"Identifier","start":17977,"end":17981,"name":"add$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17982,"end":17989,"name":"oldData"},{"type":"Identifier","start":17991,"end":18004,"name":"collectionRef"},{"type":"Identifier","start":18006,"end":18026,"name":"subCollectionWriters"},{"type":"Literal","start":18028,"end":18033,"value":false,"raw":"false"},{"type":"Identifier","start":18035,"end":18040,"name":"newId"}],"optional":false},"property":{"type":"Identifier","start":18042,"end":18046,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18074,"end":18228,"callee":{"type":"Identifier","start":18074,"end":18082,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":18083,"end":18227,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18083,"end":18090,"name":"newData"}],"body":{"type":"BlockStatement","start":18094,"end":18227,"body":[{"type":"ReturnStatement","start":18113,"end":18212,"argument":{"type":"CallExpression","start":18120,"end":18211,"callee":{"type":"MemberExpression","start":18120,"end":18167,"object":{"type":"CallExpression","start":18120,"end":18162,"callee":{"type":"MemberExpression","start":18120,"end":18132,"object":{"type":"ThisExpression","start":18120,"end":18124},"property":{"type":"Identifier","start":18125,"end":18132,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18133,"end":18139,"name":"docRef"},{"type":"Identifier","start":18141,"end":18161,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":18163,"end":18167,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18168,"end":18186,"callee":{"type":"Identifier","start":18168,"end":18171,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":18172,"end":18185,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"Identifier","start":18178,"end":18185,"name":"newData"}}],"optional":false}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":18244,"end":18360,"callee":{"type":"Identifier","start":18244,"end":18254,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":18255,"end":18359,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18255,"end":18258,"name":"err"}],"body":{"type":"BlockStatement","start":18262,"end":18359,"body":[{"type":"ExpressionStatement","start":18277,"end":18324,"expression":{"type":"CallExpression","start":18277,"end":18323,"callee":{"type":"MemberExpression","start":18277,"end":18288,"object":{"type":"Identifier","start":18277,"end":18284,"name":"console"},"property":{"type":"Identifier","start":18285,"end":18288,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":18289,"end":18322,"left":{"type":"Literal","start":18289,"end":18316,"value":"Failed to Change Doc Id: ","raw":"'Failed to Change Doc Id: '"},"operator":"+","right":{"type":"Identifier","start":18319,"end":18322,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":18338,"end":18348,"argument":{"type":"Identifier","start":18344,"end":18347,"name":"err"}}]}}],"optional":false},{"type":"CallExpression","start":18362,"end":18369,"callee":{"type":"Identifier","start":18362,"end":18366,"name":"take"},"arguments":[{"type":"Literal","start":18367,"end":18368,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":19003,"end":19757,"static":false,"computed":false,"key":{"type":"Identifier","start":19003,"end":19019,"name":"moveItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":19019,"end":19757,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":19020,"end":19025,"name":"items"},{"type":"Identifier","start":19027,"end":19036,"name":"fromIndex"},{"type":"Identifier","start":19038,"end":19045,"name":"toIndex"},{"type":"AssignmentPattern","start":19047,"end":19062,"left":{"type":"Identifier","start":19047,"end":19054,"name":"useCopy"},"right":{"type":"Literal","start":19057,"end":19062,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":19064,"end":19757,"body":[{"type":"IfStatement","start":19075,"end":19234,"test":{"type":"LogicalExpression","start":19079,"end":19161,"left":{"type":"LogicalExpression","start":19079,"end":19140,"left":{"type":"LogicalExpression","start":19079,"end":19115,"left":{"type":"BinaryExpression","start":19079,"end":19096,"left":{"type":"Identifier","start":19079,"end":19088,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":19092,"end":19096,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":19100,"end":19115,"left":{"type":"Identifier","start":19100,"end":19107,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":19111,"end":19115,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":19119,"end":19140,"left":{"type":"Identifier","start":19119,"end":19128,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":19133,"end":19140,"name":"toIndex"}}},"operator":"||","right":{"type":"BinaryExpression","start":19144,"end":19161,"left":{"type":"MemberExpression","start":19144,"end":19156,"object":{"type":"Identifier","start":19144,"end":19149,"name":"items"},"property":{"type":"Identifier","start":19150,"end":19156,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":19160,"end":19161,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":19163,"end":19234,"body":[{"type":"ReturnStatement","start":19211,"end":19223,"argument":{"type":"CallExpression","start":19218,"end":19222,"callee":{"type":"Identifier","start":19218,"end":19220,"name":"of"},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":19244,"end":19609,"test":{"type":"BinaryExpression","start":19248,"end":19283,"left":{"type":"ChainExpression","start":19248,"end":19275,"expression":{"type":"MemberExpression","start":19248,"end":19275,"object":{"type":"MemberExpression","start":19248,"end":19256,"object":{"type":"Identifier","start":19248,"end":19253,"name":"items"},"property":{"type":"Literal","start":19254,"end":19255,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":19258,"end":19275,"name":"firestoreMetadata"},"computed":false,"optional":true}},"operator":"==","right":{"type":"Literal","start":19279,"end":19283,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":19285,"end":19609,"body":[{"type":"VariableDeclaration","start":19300,"end":19572,"declarations":[{"type":"VariableDeclarator","start":19306,"end":19571,"id":{"type":"Identifier","start":19306,"end":19311,"name":"error"},"init":{"type":"ObjectExpression","start":19314,"end":19571,"properties":[{"type":"Property","start":19333,"end":19392,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19333,"end":19337,"name":"name"},"value":{"type":"Literal","start":19339,"end":19392,"value":"firestoreExt/unable-to-change-index-of-non-document","raw":"'firestoreExt/unable-to-change-index-of-non-document'"},"kind":"init"},{"type":"Property","start":19411,"end":19428,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19411,"end":19415,"name":"code"},"value":{"type":"Literal","start":19417,"end":19428,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":19447,"end":19555,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19447,"end":19454,"name":"message"},"value":{"type":"Literal","start":19456,"end":19555,"value":"The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata","raw":"'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata'"},"kind":"init"}]}}],"kind":"const"},{"type":"ThrowStatement","start":19586,"end":19598,"argument":{"type":"Identifier","start":19592,"end":19597,"name":"error"}}]},"alternate":null},{"type":"VariableDeclaration","start":19619,"end":19708,"declarations":[{"type":"VariableDeclarator","start":19625,"end":19707,"id":{"type":"Identifier","start":19625,"end":19630,"name":"batch"},"init":{"type":"CallExpression","start":19633,"end":19707,"callee":{"type":"MemberExpression","start":19633,"end":19671,"object":{"type":"ThisExpression","start":19633,"end":19637},"property":{"type":"Identifier","start":19638,"end":19671,"name":"getBatchFromMoveItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19672,"end":19677,"name":"items"},{"type":"Identifier","start":19679,"end":19688,"name":"fromIndex"},{"type":"Identifier","start":19690,"end":19697,"name":"toIndex"},{"type":"Identifier","start":19699,"end":19706,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":19718,"end":19750,"argument":{"type":"CallExpression","start":19725,"end":19749,"callee":{"type":"MemberExpression","start":19725,"end":19742,"object":{"type":"ThisExpression","start":19725,"end":19729},"property":{"type":"Identifier","start":19730,"end":19742,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19743,"end":19748,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":20128,"end":21186,"static":false,"computed":false,"key":{"type":"Identifier","start":20128,"end":20161,"name":"getBatchFromMoveItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":20161,"end":21186,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20162,"end":20167,"name":"items"},{"type":"Identifier","start":20169,"end":20178,"name":"fromIndex"},{"type":"Identifier","start":20180,"end":20187,"name":"toIndex"},{"type":"AssignmentPattern","start":20189,"end":20204,"left":{"type":"Identifier","start":20189,"end":20196,"name":"useCopy"},"right":{"type":"Literal","start":20199,"end":20204,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":20206,"end":21186,"body":[{"type":"VariableDeclaration","start":20217,"end":20266,"declarations":[{"type":"VariableDeclarator","start":20223,"end":20265,"id":{"type":"Identifier","start":20223,"end":20234,"name":"lowestIndex"},"init":{"type":"CallExpression","start":20237,"end":20265,"callee":{"type":"MemberExpression","start":20237,"end":20245,"object":{"type":"Identifier","start":20237,"end":20241,"name":"Math"},"property":{"type":"Identifier","start":20242,"end":20245,"name":"min"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20246,"end":20255,"name":"fromIndex"},{"type":"Identifier","start":20257,"end":20264,"name":"toIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20276,"end":20320,"declarations":[{"type":"VariableDeclarator","start":20282,"end":20319,"id":{"type":"Identifier","start":20282,"end":20287,"name":"batch"},"init":{"type":"CallExpression","start":20290,"end":20319,"callee":{"type":"Identifier","start":20290,"end":20300,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":20301,"end":20318,"object":{"type":"MemberExpression","start":20301,"end":20308,"object":{"type":"ThisExpression","start":20301,"end":20305},"property":{"type":"Identifier","start":20306,"end":20308,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20309,"end":20318,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20330,"end":20469,"test":{"type":"LogicalExpression","start":20334,"end":20395,"left":{"type":"LogicalExpression","start":20334,"end":20370,"left":{"type":"BinaryExpression","start":20334,"end":20351,"left":{"type":"Identifier","start":20334,"end":20343,"name":"fromIndex"},"operator":"==","right":{"type":"Literal","start":20347,"end":20351,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":20355,"end":20370,"left":{"type":"Identifier","start":20355,"end":20362,"name":"toIndex"},"operator":"==","right":{"type":"Literal","start":20366,"end":20370,"value":null,"raw":"null"}}},"operator":"||","right":{"type":"BinaryExpression","start":20374,"end":20395,"left":{"type":"Identifier","start":20374,"end":20383,"name":"fromIndex"},"operator":"===","right":{"type":"Identifier","start":20388,"end":20395,"name":"toIndex"}}},"consequent":{"type":"BlockStatement","start":20397,"end":20469,"body":[{"type":"ReturnStatement","start":20445,"end":20458,"argument":{"type":"Identifier","start":20452,"end":20457,"name":"batch"}}]},"alternate":null},{"type":"VariableDeclaration","start":20479,"end":20493,"declarations":[{"type":"VariableDeclarator","start":20483,"end":20492,"id":{"type":"Identifier","start":20483,"end":20492,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":20503,"end":20638,"test":{"type":"Identifier","start":20507,"end":20514,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":20516,"end":20579,"body":[{"type":"ExpressionStatement","start":20531,"end":20568,"expression":{"type":"AssignmentExpression","start":20531,"end":20567,"operator":"=","left":{"type":"Identifier","start":20531,"end":20540,"name":"usedItems"},"right":{"type":"CallExpression","start":20543,"end":20567,"callee":{"type":"MemberExpression","start":20543,"end":20556,"object":{"type":"Identifier","start":20543,"end":20549,"name":"Object"},"property":{"type":"Identifier","start":20550,"end":20556,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":20557,"end":20559,"elements":[]},{"type":"Identifier","start":20561,"end":20566,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":20594,"end":20638,"body":[{"type":"ExpressionStatement","start":20609,"end":20627,"expression":{"type":"AssignmentExpression","start":20609,"end":20626,"operator":"=","left":{"type":"Identifier","start":20609,"end":20618,"name":"usedItems"},"right":{"type":"Identifier","start":20621,"end":20626,"name":"items"}}}]}},{"type":"ExpressionStatement","start":20648,"end":20695,"expression":{"type":"CallExpression","start":20648,"end":20694,"callee":{"type":"Identifier","start":20648,"end":20663,"name":"moveItemInArray"},"arguments":[{"type":"Identifier","start":20664,"end":20673,"name":"usedItems"},{"type":"Identifier","start":20675,"end":20684,"name":"fromIndex"},{"type":"Identifier","start":20686,"end":20693,"name":"toIndex"}],"optional":false}},{"type":"VariableDeclaration","start":20705,"end":20760,"declarations":[{"type":"VariableDeclarator","start":20711,"end":20759,"id":{"type":"Identifier","start":20711,"end":20728,"name":"listSliceToUpdate"},"init":{"type":"CallExpression","start":20731,"end":20759,"callee":{"type":"MemberExpression","start":20731,"end":20746,"object":{"type":"Identifier","start":20731,"end":20740,"name":"usedItems"},"property":{"type":"Identifier","start":20741,"end":20746,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20747,"end":20758,"name":"lowestIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20770,"end":20790,"declarations":[{"type":"VariableDeclarator","start":20774,"end":20789,"id":{"type":"Identifier","start":20774,"end":20775,"name":"i"},"init":{"type":"Identifier","start":20778,"end":20789,"name":"lowestIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":20800,"end":21156,"await":false,"left":{"type":"VariableDeclaration","start":20805,"end":20815,"declarations":[{"type":"VariableDeclarator","start":20811,"end":20815,"id":{"type":"Identifier","start":20811,"end":20815,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":20819,"end":20836,"name":"listSliceToUpdate"},"body":{"type":"BlockStatement","start":20838,"end":21156,"body":[{"type":"IfStatement","start":20853,"end":20992,"test":{"type":"UnaryExpression","start":20857,"end":20865,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":20858,"end":20865,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":20867,"end":20992,"body":[{"type":"ExpressionStatement","start":20962,"end":20977,"expression":{"type":"AssignmentExpression","start":20962,"end":20976,"operator":"=","left":{"type":"MemberExpression","start":20962,"end":20972,"object":{"type":"Identifier","start":20962,"end":20966,"name":"item"},"property":{"type":"Identifier","start":20967,"end":20972,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":20975,"end":20976,"name":"i"}}}]},"alternate":null},{"type":"VariableDeclaration","start":21006,"end":21081,"declarations":[{"type":"VariableDeclarator","start":21012,"end":21080,"id":{"type":"Identifier","start":21012,"end":21015,"name":"ref"},"init":{"type":"CallExpression","start":21018,"end":21080,"callee":{"type":"Identifier","start":21018,"end":21032,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":21033,"end":21060,"object":{"type":"MemberExpression","start":21033,"end":21055,"object":{"type":"Identifier","start":21033,"end":21037,"name":"item"},"property":{"type":"Identifier","start":21038,"end":21055,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21056,"end":21060,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":21062,"end":21079,"object":{"type":"MemberExpression","start":21062,"end":21069,"object":{"type":"ThisExpression","start":21062,"end":21066},"property":{"type":"Identifier","start":21067,"end":21069,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21070,"end":21079,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":21095,"end":21127,"expression":{"type":"CallExpression","start":21095,"end":21126,"callee":{"type":"MemberExpression","start":21095,"end":21107,"object":{"type":"Identifier","start":21095,"end":21100,"name":"batch"},"property":{"type":"Identifier","start":21101,"end":21107,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":21108,"end":21111,"name":"ref"},{"type":"ObjectExpression","start":21113,"end":21125,"properties":[{"type":"Property","start":21115,"end":21123,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":21115,"end":21120,"name":"index"},"value":{"type":"Identifier","start":21122,"end":21123,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":21141,"end":21145,"expression":{"type":"UpdateExpression","start":21141,"end":21144,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":21141,"end":21142,"name":"i"}}}]}},{"type":"ReturnStatement","start":21166,"end":21179,"argument":{"type":"Identifier","start":21173,"end":21178,"name":"batch"}}]}}},{"type":"MethodDefinition","start":21521,"end":22450,"static":false,"computed":false,"key":{"type":"Identifier","start":21521,"end":21546,"name":"deleteIndexedItemInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":21546,"end":22450,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21547,"end":21552,"name":"items"},{"type":"Identifier","start":21554,"end":21567,"name":"indexToDelete"},{"type":"AssignmentPattern","start":21569,"end":21594,"left":{"type":"Identifier","start":21569,"end":21589,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":21592,"end":21594,"elements":[]}},{"type":"AssignmentPattern","start":21596,"end":21611,"left":{"type":"Identifier","start":21596,"end":21603,"name":"useCopy"},"right":{"type":"Literal","start":21606,"end":21611,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":21613,"end":22450,"body":[{"type":"VariableDeclaration","start":21624,"end":21638,"declarations":[{"type":"VariableDeclarator","start":21628,"end":21637,"id":{"type":"Identifier","start":21628,"end":21637,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":21648,"end":21783,"test":{"type":"Identifier","start":21652,"end":21659,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":21661,"end":21724,"body":[{"type":"ExpressionStatement","start":21676,"end":21713,"expression":{"type":"AssignmentExpression","start":21676,"end":21712,"operator":"=","left":{"type":"Identifier","start":21676,"end":21685,"name":"usedItems"},"right":{"type":"CallExpression","start":21688,"end":21712,"callee":{"type":"MemberExpression","start":21688,"end":21701,"object":{"type":"Identifier","start":21688,"end":21694,"name":"Object"},"property":{"type":"Identifier","start":21695,"end":21701,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":21702,"end":21704,"elements":[]},{"type":"Identifier","start":21706,"end":21711,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":21739,"end":21783,"body":[{"type":"ExpressionStatement","start":21754,"end":21772,"expression":{"type":"AssignmentExpression","start":21754,"end":21771,"operator":"=","left":{"type":"Identifier","start":21754,"end":21763,"name":"usedItems"},"right":{"type":"Identifier","start":21766,"end":21771,"name":"items"}}}]}},{"type":"VariableDeclaration","start":21793,"end":21839,"declarations":[{"type":"VariableDeclarator","start":21799,"end":21838,"id":{"type":"Identifier","start":21799,"end":21811,"name":"itemToDelete"},"init":{"type":"MemberExpression","start":21814,"end":21838,"object":{"type":"Identifier","start":21814,"end":21823,"name":"usedItems"},"property":{"type":"Identifier","start":21824,"end":21837,"name":"indexToDelete"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":21933,"end":22443,"argument":{"type":"CallExpression","start":21940,"end":22442,"callee":{"type":"MemberExpression","start":21940,"end":22023,"object":{"type":"CallExpression","start":21940,"end":22018,"callee":{"type":"MemberExpression","start":21940,"end":21960,"object":{"type":"ThisExpression","start":21940,"end":21944},"property":{"type":"Identifier","start":21945,"end":21960,"name":"getDeleteBatch$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":21961,"end":21995,"object":{"type":"MemberExpression","start":21961,"end":21991,"object":{"type":"Identifier","start":21961,"end":21973,"name":"itemToDelete"},"property":{"type":"Identifier","start":21974,"end":21991,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":21992,"end":21995,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":21997,"end":22017,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":22019,"end":22023,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":22024,"end":22393,"callee":{"type":"Identifier","start":22024,"end":22027,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":22028,"end":22392,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22029,"end":22034,"name":"batch"}],"body":{"type":"BlockStatement","start":22039,"end":22392,"body":[{"type":"ExpressionStatement","start":22157,"end":22192,"expression":{"type":"CallExpression","start":22157,"end":22191,"callee":{"type":"MemberExpression","start":22157,"end":22171,"object":{"type":"Identifier","start":22157,"end":22166,"name":"usedItems"},"property":{"type":"Identifier","start":22167,"end":22171,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22172,"end":22190,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22172,"end":22176,"name":"item"}],"body":{"type":"MemberExpression","start":22180,"end":22190,"object":{"type":"Identifier","start":22180,"end":22184,"name":"item"},"property":{"type":"Identifier","start":22185,"end":22190,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"ExpressionStatement","start":22244,"end":22279,"expression":{"type":"CallExpression","start":22244,"end":22278,"callee":{"type":"MemberExpression","start":22244,"end":22260,"object":{"type":"Identifier","start":22244,"end":22253,"name":"usedItems"},"property":{"type":"Identifier","start":22254,"end":22260,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22261,"end":22274,"name":"indexToDelete"},{"type":"Literal","start":22276,"end":22277,"value":1,"raw":"1"}],"optional":false}},{"type":"ExpressionStatement","start":22293,"end":22354,"expression":{"type":"CallExpression","start":22293,"end":22353,"callee":{"type":"MemberExpression","start":22293,"end":22335,"object":{"type":"ThisExpression","start":22293,"end":22297},"property":{"type":"Identifier","start":22298,"end":22335,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22336,"end":22345,"name":"usedItems"},{"type":"Identifier","start":22347,"end":22352,"name":"batch"}],"optional":false}},{"type":"ReturnStatement","start":22368,"end":22381,"argument":{"type":"Identifier","start":22375,"end":22380,"name":"batch"}}]}}],"optional":false},{"type":"CallExpression","start":22395,"end":22441,"callee":{"type":"Identifier","start":22395,"end":22404,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":22405,"end":22440,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":22406,"end":22411,"name":"batch"}],"body":{"type":"CallExpression","start":22416,"end":22440,"callee":{"type":"MemberExpression","start":22416,"end":22433,"object":{"type":"ThisExpression","start":22416,"end":22420},"property":{"type":"Identifier","start":22421,"end":22433,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22434,"end":22439,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":22793,"end":24461,"static":false,"computed":false,"key":{"type":"Identifier","start":22793,"end":22819,"name":"deleteIndexedItemsInArray$"},"kind":"method","value":{"type":"FunctionExpression","start":22819,"end":24461,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22820,"end":22825,"name":"items"},{"type":"Identifier","start":22827,"end":22842,"name":"indicesToDelete"},{"type":"AssignmentPattern","start":22844,"end":22869,"left":{"type":"Identifier","start":22844,"end":22864,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":22867,"end":22869,"elements":[]}},{"type":"AssignmentPattern","start":22871,"end":22886,"left":{"type":"Identifier","start":22871,"end":22878,"name":"useCopy"},"right":{"type":"Literal","start":22881,"end":22886,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":22888,"end":24461,"body":[{"type":"VariableDeclaration","start":22899,"end":22913,"declarations":[{"type":"VariableDeclarator","start":22903,"end":22912,"id":{"type":"Identifier","start":22903,"end":22912,"name":"usedItems"},"init":null}],"kind":"let"},{"type":"IfStatement","start":22923,"end":23058,"test":{"type":"Identifier","start":22927,"end":22934,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":22936,"end":22999,"body":[{"type":"ExpressionStatement","start":22951,"end":22988,"expression":{"type":"AssignmentExpression","start":22951,"end":22987,"operator":"=","left":{"type":"Identifier","start":22951,"end":22960,"name":"usedItems"},"right":{"type":"CallExpression","start":22963,"end":22987,"callee":{"type":"MemberExpression","start":22963,"end":22976,"object":{"type":"Identifier","start":22963,"end":22969,"name":"Object"},"property":{"type":"Identifier","start":22970,"end":22976,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":22977,"end":22979,"elements":[]},{"type":"Identifier","start":22981,"end":22986,"name":"items"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":23014,"end":23058,"body":[{"type":"ExpressionStatement","start":23029,"end":23047,"expression":{"type":"AssignmentExpression","start":23029,"end":23046,"operator":"=","left":{"type":"Identifier","start":23029,"end":23038,"name":"usedItems"},"right":{"type":"Identifier","start":23041,"end":23046,"name":"items"}}}]}},{"type":"ExpressionStatement","start":23068,"end":23103,"expression":{"type":"CallExpression","start":23068,"end":23102,"callee":{"type":"MemberExpression","start":23068,"end":23082,"object":{"type":"Identifier","start":23068,"end":23077,"name":"usedItems"},"property":{"type":"Identifier","start":23078,"end":23082,"name":"sort"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23083,"end":23101,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23083,"end":23087,"name":"item"}],"body":{"type":"MemberExpression","start":23091,"end":23101,"object":{"type":"Identifier","start":23091,"end":23095,"name":"item"},"property":{"type":"Identifier","start":23096,"end":23101,"name":"index"},"computed":false,"optional":false}}],"optional":false}},{"type":"VariableDeclaration","start":23151,"end":23287,"declarations":[{"type":"VariableDeclarator","start":23157,"end":23286,"id":{"type":"Identifier","start":23157,"end":23170,"name":"itemsToDelete"},"init":{"type":"CallExpression","start":23173,"end":23286,"callee":{"type":"MemberExpression","start":23173,"end":23189,"object":{"type":"Identifier","start":23173,"end":23182,"name":"usedItems"},"property":{"type":"Identifier","start":23183,"end":23189,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23190,"end":23285,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23191,"end":23195,"name":"item"},{"type":"Identifier","start":23197,"end":23198,"name":"i"}],"body":{"type":"BlockStatement","start":23203,"end":23285,"body":[{"type":"ReturnStatement","start":23218,"end":23274,"argument":{"type":"BinaryExpression","start":23225,"end":23273,"left":{"type":"CallExpression","start":23225,"end":23266,"callee":{"type":"MemberExpression","start":23225,"end":23250,"object":{"type":"Identifier","start":23225,"end":23240,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23241,"end":23250,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23251,"end":23265,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":23251,"end":23253,"name":"_i"}],"body":{"type":"BinaryExpression","start":23257,"end":23265,"left":{"type":"Identifier","start":23257,"end":23259,"name":"_i"},"operator":"===","right":{"type":"Identifier","start":23264,"end":23265,"name":"i"}}}],"optional":false},"operator":"!==","right":{"type":"UnaryExpression","start":23271,"end":23273,"operator":"-","prefix":true,"argument":{"type":"Literal","start":23272,"end":23273,"value":1,"raw":"1"}}}}]}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23415,"end":23438,"expression":{"type":"CallExpression","start":23415,"end":23437,"callee":{"type":"MemberExpression","start":23415,"end":23435,"object":{"type":"Identifier","start":23415,"end":23430,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23431,"end":23435,"name":"sort"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ForStatement","start":23448,"end":23568,"init":{"type":"VariableDeclaration","start":23453,"end":23487,"declarations":[{"type":"VariableDeclarator","start":23457,"end":23487,"id":{"type":"Identifier","start":23457,"end":23458,"name":"i"},"init":{"type":"BinaryExpression","start":23461,"end":23487,"left":{"type":"MemberExpression","start":23461,"end":23483,"object":{"type":"Identifier","start":23461,"end":23476,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23477,"end":23483,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":23486,"end":23487,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":23489,"end":23495,"left":{"type":"Identifier","start":23489,"end":23490,"name":"i"},"operator":">=","right":{"type":"Literal","start":23494,"end":23495,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":23497,"end":23500,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":23497,"end":23498,"name":"i"}},"body":{"type":"BlockStatement","start":23502,"end":23568,"body":[{"type":"ExpressionStatement","start":23517,"end":23557,"expression":{"type":"CallExpression","start":23517,"end":23556,"callee":{"type":"MemberExpression","start":23517,"end":23533,"object":{"type":"Identifier","start":23517,"end":23526,"name":"usedItems"},"property":{"type":"Identifier","start":23527,"end":23533,"name":"splice"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23534,"end":23552,"object":{"type":"Identifier","start":23534,"end":23549,"name":"indicesToDelete"},"property":{"type":"Identifier","start":23550,"end":23551,"name":"i"},"computed":true,"optional":false},{"type":"Literal","start":23554,"end":23555,"value":1,"raw":"1"}],"optional":false}}]}},{"type":"VariableDeclaration","start":23578,"end":23601,"declarations":[{"type":"VariableDeclarator","start":23584,"end":23600,"id":{"type":"Identifier","start":23584,"end":23595,"name":"docRefsObs$"},"init":{"type":"ArrayExpression","start":23598,"end":23600,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":23704,"end":23924,"expression":{"type":"CallExpression","start":23704,"end":23923,"callee":{"type":"MemberExpression","start":23704,"end":23725,"object":{"type":"Identifier","start":23704,"end":23717,"name":"itemsToDelete"},"property":{"type":"Identifier","start":23718,"end":23725,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23726,"end":23922,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23726,"end":23738,"name":"itemToDelete"}],"body":{"type":"BlockStatement","start":23742,"end":23922,"body":[{"type":"VariableDeclaration","start":23757,"end":23874,"declarations":[{"type":"VariableDeclarator","start":23763,"end":23873,"id":{"type":"Identifier","start":23763,"end":23767,"name":"obs$"},"init":{"type":"CallExpression","start":23770,"end":23873,"callee":{"type":"MemberExpression","start":23770,"end":23864,"object":{"type":"CallExpression","start":23770,"end":23859,"callee":{"type":"MemberExpression","start":23770,"end":23801,"object":{"type":"ThisExpression","start":23770,"end":23774},"property":{"type":"Identifier","start":23775,"end":23801,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":23802,"end":23836,"object":{"type":"MemberExpression","start":23802,"end":23832,"object":{"type":"Identifier","start":23802,"end":23814,"name":"itemToDelete"},"property":{"type":"Identifier","start":23815,"end":23832,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":23833,"end":23836,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":23838,"end":23858,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":23860,"end":23864,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23865,"end":23872,"callee":{"type":"Identifier","start":23865,"end":23869,"name":"take"},"arguments":[{"type":"Literal","start":23870,"end":23871,"value":1,"raw":"1"}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":23888,"end":23911,"expression":{"type":"CallExpression","start":23888,"end":23910,"callee":{"type":"MemberExpression","start":23888,"end":23904,"object":{"type":"Identifier","start":23888,"end":23899,"name":"docRefsObs$"},"property":{"type":"Identifier","start":23900,"end":23904,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23905,"end":23909,"name":"obs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":23934,"end":24454,"argument":{"type":"CallExpression","start":23941,"end":24453,"callee":{"type":"MemberExpression","start":23941,"end":23967,"object":{"type":"CallExpression","start":23941,"end":23962,"callee":{"type":"Identifier","start":23941,"end":23949,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":23950,"end":23961,"name":"docRefsObs$"}],"optional":false},"property":{"type":"Identifier","start":23963,"end":23967,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":23968,"end":23975,"callee":{"type":"Identifier","start":23968,"end":23972,"name":"take"},"arguments":[{"type":"Literal","start":23973,"end":23974,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":23977,"end":24264,"callee":{"type":"Identifier","start":23977,"end":23980,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":23981,"end":24263,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23982,"end":23995,"name":"listOfDocRefs"}],"body":{"type":"BlockStatement","start":24000,"end":24263,"body":[{"type":"VariableDeclaration","start":24095,"end":24112,"declarations":[{"type":"VariableDeclarator","start":24099,"end":24111,"id":{"type":"Identifier","start":24099,"end":24106,"name":"docRefs"},"init":{"type":"ArrayExpression","start":24109,"end":24111,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":24126,"end":24223,"expression":{"type":"CallExpression","start":24126,"end":24222,"callee":{"type":"MemberExpression","start":24126,"end":24147,"object":{"type":"Identifier","start":24126,"end":24139,"name":"listOfDocRefs"},"property":{"type":"Identifier","start":24140,"end":24147,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24148,"end":24221,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24148,"end":24152,"name":"refs"}],"body":{"type":"BlockStatement","start":24156,"end":24221,"body":[{"type":"ExpressionStatement","start":24175,"end":24206,"expression":{"type":"AssignmentExpression","start":24175,"end":24205,"operator":"=","left":{"type":"Identifier","start":24175,"end":24182,"name":"docRefs"},"right":{"type":"CallExpression","start":24185,"end":24205,"callee":{"type":"MemberExpression","start":24185,"end":24199,"object":{"type":"Identifier","start":24185,"end":24192,"name":"docRefs"},"property":{"type":"Identifier","start":24193,"end":24199,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24200,"end":24204,"name":"refs"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":24237,"end":24252,"argument":{"type":"Identifier","start":24244,"end":24251,"name":"docRefs"}}]}}],"optional":false},{"type":"CallExpression","start":24266,"end":24326,"callee":{"type":"Identifier","start":24266,"end":24269,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24270,"end":24325,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24271,"end":24278,"name":"docRefs"}],"body":{"type":"CallExpression","start":24283,"end":24325,"callee":{"type":"MemberExpression","start":24283,"end":24316,"object":{"type":"ThisExpression","start":24283,"end":24287},"property":{"type":"Identifier","start":24288,"end":24316,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24317,"end":24324,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24328,"end":24404,"callee":{"type":"Identifier","start":24328,"end":24331,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24332,"end":24403,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24333,"end":24338,"name":"batch"}],"body":{"type":"CallExpression","start":24343,"end":24403,"callee":{"type":"MemberExpression","start":24343,"end":24385,"object":{"type":"ThisExpression","start":24343,"end":24347},"property":{"type":"Identifier","start":24348,"end":24385,"name":"getBatchFromUpdateIndexFromListOfDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24386,"end":24395,"name":"usedItems"},{"type":"Identifier","start":24397,"end":24402,"name":"batch"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":24406,"end":24452,"callee":{"type":"Identifier","start":24406,"end":24415,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":24416,"end":24451,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":24417,"end":24422,"name":"batch"}],"body":{"type":"CallExpression","start":24427,"end":24451,"callee":{"type":"MemberExpression","start":24427,"end":24444,"object":{"type":"ThisExpression","start":24427,"end":24431},"property":{"type":"Identifier","start":24432,"end":24444,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":24445,"end":24450,"name":"batch"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":24801,"end":25280,"static":false,"computed":false,"key":{"type":"Identifier","start":24801,"end":24838,"name":"getBatchFromUpdateIndexFromListOfDocs"},"kind":"method","value":{"type":"FunctionExpression","start":24838,"end":25280,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24839,"end":24844,"name":"items"},{"type":"AssignmentPattern","start":24846,"end":24883,"left":{"type":"Identifier","start":24846,"end":24851,"name":"batch"},"right":{"type":"CallExpression","start":24854,"end":24883,"callee":{"type":"Identifier","start":24854,"end":24864,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":24865,"end":24882,"object":{"type":"MemberExpression","start":24865,"end":24872,"object":{"type":"ThisExpression","start":24865,"end":24869},"property":{"type":"Identifier","start":24870,"end":24872,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24873,"end":24882,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":24885,"end":25280,"body":[{"type":"ExpressionStatement","start":24896,"end":25250,"expression":{"type":"CallExpression","start":24896,"end":25249,"callee":{"type":"MemberExpression","start":24896,"end":24909,"object":{"type":"Identifier","start":24896,"end":24901,"name":"items"},"property":{"type":"Identifier","start":24902,"end":24909,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":24910,"end":25248,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24911,"end":24915,"name":"item"},{"type":"Identifier","start":24917,"end":24922,"name":"index"}],"body":{"type":"BlockStatement","start":24927,"end":25248,"body":[{"type":"IfStatement","start":24942,"end":25237,"test":{"type":"BinaryExpression","start":24946,"end":24966,"left":{"type":"MemberExpression","start":24946,"end":24956,"object":{"type":"Identifier","start":24946,"end":24950,"name":"item"},"property":{"type":"Identifier","start":24951,"end":24956,"name":"index"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":24961,"end":24966,"name":"index"}},"consequent":{"type":"BlockStatement","start":24968,"end":25237,"body":[{"type":"ExpressionStatement","start":24987,"end":25006,"expression":{"type":"AssignmentExpression","start":24987,"end":25005,"operator":"=","left":{"type":"MemberExpression","start":24987,"end":24997,"object":{"type":"Identifier","start":24987,"end":24991,"name":"item"},"property":{"type":"Identifier","start":24992,"end":24997,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":25000,"end":25005,"name":"index"}}},{"type":"VariableDeclaration","start":25100,"end":25175,"declarations":[{"type":"VariableDeclarator","start":25106,"end":25174,"id":{"type":"Identifier","start":25106,"end":25109,"name":"ref"},"init":{"type":"CallExpression","start":25112,"end":25174,"callee":{"type":"Identifier","start":25112,"end":25126,"name":"getRefFromPath"},"arguments":[{"type":"MemberExpression","start":25127,"end":25154,"object":{"type":"MemberExpression","start":25127,"end":25149,"object":{"type":"Identifier","start":25127,"end":25131,"name":"item"},"property":{"type":"Identifier","start":25132,"end":25149,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25150,"end":25154,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":25156,"end":25173,"object":{"type":"MemberExpression","start":25156,"end":25163,"object":{"type":"ThisExpression","start":25156,"end":25160},"property":{"type":"Identifier","start":25161,"end":25163,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":25164,"end":25173,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":25193,"end":25222,"expression":{"type":"CallExpression","start":25193,"end":25221,"callee":{"type":"MemberExpression","start":25193,"end":25205,"object":{"type":"Identifier","start":25193,"end":25198,"name":"batch"},"property":{"type":"Identifier","start":25199,"end":25205,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25206,"end":25209,"name":"ref"},{"type":"ObjectExpression","start":25211,"end":25220,"properties":[{"type":"Property","start":25213,"end":25218,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":25213,"end":25218,"name":"index"},"kind":"init","value":{"type":"Identifier","start":25213,"end":25218,"name":"index"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":25260,"end":25273,"argument":{"type":"Identifier","start":25267,"end":25272,"name":"batch"}}]}}},{"type":"MethodDefinition","start":25286,"end":25746,"static":false,"computed":false,"key":{"type":"Identifier","start":25286,"end":25311,"name":"transferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":25311,"end":25746,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":25312,"end":25325,"name":"previousArray"},{"type":"Identifier","start":25327,"end":25339,"name":"currentArray"},{"type":"Identifier","start":25341,"end":25354,"name":"previousIndex"},{"type":"Identifier","start":25356,"end":25368,"name":"currentIndex"},{"type":"Identifier","start":25370,"end":25386,"name":"currentArrayName"},{"type":"Identifier","start":25388,"end":25419,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":25421,"end":25459,"left":{"type":"Identifier","start":25421,"end":25452,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":25455,"end":25459,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":25461,"end":25476,"left":{"type":"Identifier","start":25461,"end":25468,"name":"useCopy"},"right":{"type":"Literal","start":25471,"end":25476,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":25478,"end":25746,"body":[{"type":"VariableDeclaration","start":25489,"end":25697,"declarations":[{"type":"VariableDeclarator","start":25495,"end":25696,"id":{"type":"Identifier","start":25495,"end":25500,"name":"batch"},"init":{"type":"CallExpression","start":25503,"end":25696,"callee":{"type":"MemberExpression","start":25503,"end":25545,"object":{"type":"ThisExpression","start":25503,"end":25507},"property":{"type":"Identifier","start":25508,"end":25545,"name":"getBatchFromTransferItemInIndexedDocs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25546,"end":25559,"name":"previousArray"},{"type":"Identifier","start":25561,"end":25573,"name":"currentArray"},{"type":"Identifier","start":25575,"end":25588,"name":"previousIndex"},{"type":"Identifier","start":25590,"end":25602,"name":"currentIndex"},{"type":"Identifier","start":25604,"end":25620,"name":"currentArrayName"},{"type":"Identifier","start":25622,"end":25653,"name":"additionalDataUpdateOnMovedItem"},{"type":"Identifier","start":25655,"end":25686,"name":"isUpdateModifiedDateOnMovedItem"},{"type":"Identifier","start":25688,"end":25695,"name":"useCopy"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":25707,"end":25739,"argument":{"type":"CallExpression","start":25714,"end":25738,"callee":{"type":"MemberExpression","start":25714,"end":25731,"object":{"type":"ThisExpression","start":25714,"end":25718},"property":{"type":"Identifier","start":25719,"end":25731,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":25732,"end":25737,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":26052,"end":26447,"static":false,"computed":false,"key":{"type":"Identifier","start":26052,"end":26059,"name":"delete$"},"kind":"method","value":{"type":"FunctionExpression","start":26059,"end":26447,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26060,"end":26066,"name":"docRef"},{"type":"AssignmentPattern","start":26068,"end":26093,"left":{"type":"Identifier","start":26068,"end":26088,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26091,"end":26093,"elements":[]}}],"body":{"type":"BlockStatement","start":26095,"end":26447,"body":[{"type":"IfStatement","start":26106,"end":26289,"test":{"type":"LogicalExpression","start":26110,"end":26175,"left":{"type":"BinaryExpression","start":26110,"end":26138,"left":{"type":"Identifier","start":26110,"end":26130,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26134,"end":26138,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26142,"end":26175,"left":{"type":"MemberExpression","start":26142,"end":26169,"object":{"type":"Identifier","start":26142,"end":26162,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26163,"end":26169,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26174,"end":26175,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26177,"end":26289,"body":[{"type":"ReturnStatement","start":26248,"end":26278,"argument":{"type":"CallExpression","start":26255,"end":26277,"callee":{"type":"MemberExpression","start":26255,"end":26269,"object":{"type":"MemberExpression","start":26255,"end":26262,"object":{"type":"ThisExpression","start":26255,"end":26259},"property":{"type":"Identifier","start":26260,"end":26262,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26263,"end":26269,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26270,"end":26276,"name":"docRef"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":26299,"end":26440,"argument":{"type":"CallExpression","start":26306,"end":26439,"callee":{"type":"MemberExpression","start":26306,"end":26372,"object":{"type":"CallExpression","start":26306,"end":26367,"callee":{"type":"MemberExpression","start":26306,"end":26337,"object":{"type":"ThisExpression","start":26306,"end":26310},"property":{"type":"Identifier","start":26311,"end":26337,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26338,"end":26344,"name":"docRef"},{"type":"Identifier","start":26346,"end":26366,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":26368,"end":26372,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":26373,"end":26438,"callee":{"type":"Identifier","start":26373,"end":26382,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":26383,"end":26437,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":26384,"end":26394,"name":"docRefList"}],"body":{"type":"CallExpression","start":26399,"end":26437,"callee":{"type":"MemberExpression","start":26399,"end":26425,"object":{"type":"ThisExpression","start":26399,"end":26403},"property":{"type":"Identifier","start":26404,"end":26425,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":26426,"end":26436,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":26779,"end":27247,"static":false,"computed":false,"key":{"type":"Identifier","start":26779,"end":26794,"name":"getDeleteBatch$"},"kind":"method","value":{"type":"FunctionExpression","start":26794,"end":27247,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":26795,"end":26801,"name":"docRef"},{"type":"AssignmentPattern","start":26803,"end":26828,"left":{"type":"Identifier","start":26803,"end":26823,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":26826,"end":26828,"elements":[]}},{"type":"AssignmentPattern","start":26830,"end":26867,"left":{"type":"Identifier","start":26830,"end":26835,"name":"batch"},"right":{"type":"CallExpression","start":26838,"end":26867,"callee":{"type":"Identifier","start":26838,"end":26848,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":26849,"end":26866,"object":{"type":"MemberExpression","start":26849,"end":26856,"object":{"type":"ThisExpression","start":26849,"end":26853},"property":{"type":"Identifier","start":26854,"end":26856,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":26857,"end":26866,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":26869,"end":27247,"body":[{"type":"IfStatement","start":26880,"end":27085,"test":{"type":"LogicalExpression","start":26884,"end":26949,"left":{"type":"BinaryExpression","start":26884,"end":26912,"left":{"type":"Identifier","start":26884,"end":26904,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":26908,"end":26912,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":26916,"end":26949,"left":{"type":"MemberExpression","start":26916,"end":26943,"object":{"type":"Identifier","start":26916,"end":26936,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":26937,"end":26943,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":26948,"end":26949,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":26951,"end":27085,"body":[{"type":"ExpressionStatement","start":27022,"end":27043,"expression":{"type":"CallExpression","start":27022,"end":27042,"callee":{"type":"MemberExpression","start":27022,"end":27034,"object":{"type":"Identifier","start":27022,"end":27027,"name":"batch"},"property":{"type":"Identifier","start":27028,"end":27034,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27035,"end":27041,"name":"docRef"}],"optional":false}},{"type":"ReturnStatement","start":27057,"end":27074,"argument":{"type":"CallExpression","start":27064,"end":27073,"callee":{"type":"Identifier","start":27064,"end":27066,"name":"of"},"arguments":[{"type":"Identifier","start":27067,"end":27072,"name":"batch"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":27095,"end":27240,"argument":{"type":"CallExpression","start":27102,"end":27239,"callee":{"type":"MemberExpression","start":27102,"end":27168,"object":{"type":"CallExpression","start":27102,"end":27163,"callee":{"type":"MemberExpression","start":27102,"end":27133,"object":{"type":"ThisExpression","start":27102,"end":27106},"property":{"type":"Identifier","start":27107,"end":27133,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27134,"end":27140,"name":"docRef"},{"type":"Identifier","start":27142,"end":27162,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":27164,"end":27168,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":27169,"end":27229,"callee":{"type":"Identifier","start":27169,"end":27172,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":27173,"end":27228,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27174,"end":27181,"name":"docRefs"}],"body":{"type":"CallExpression","start":27186,"end":27228,"callee":{"type":"MemberExpression","start":27186,"end":27219,"object":{"type":"ThisExpression","start":27186,"end":27190},"property":{"type":"Identifier","start":27191,"end":27219,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27220,"end":27227,"name":"docRefs"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":27231,"end":27238,"callee":{"type":"Identifier","start":27231,"end":27235,"name":"take"},"arguments":[{"type":"Literal","start":27236,"end":27237,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":27253,"end":27435,"static":false,"computed":false,"key":{"type":"Identifier","start":27253,"end":27275,"name":"deleteMultipleByPaths$"},"kind":"method","value":{"type":"FunctionExpression","start":27275,"end":27435,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27276,"end":27284,"name":"docPaths"}],"body":{"type":"BlockStatement","start":27286,"end":27435,"body":[{"type":"VariableDeclaration","start":27297,"end":27375,"declarations":[{"type":"VariableDeclarator","start":27303,"end":27374,"id":{"type":"Identifier","start":27303,"end":27310,"name":"docRefs"},"init":{"type":"CallExpression","start":27313,"end":27374,"callee":{"type":"MemberExpression","start":27313,"end":27325,"object":{"type":"Identifier","start":27313,"end":27321,"name":"docPaths"},"property":{"type":"Identifier","start":27322,"end":27325,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27326,"end":27373,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":27326,"end":27330,"name":"path"}],"body":{"type":"CallExpression","start":27334,"end":27373,"callee":{"type":"Identifier","start":27334,"end":27348,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":27349,"end":27353,"name":"path"},{"type":"MemberExpression","start":27355,"end":27372,"object":{"type":"MemberExpression","start":27355,"end":27362,"object":{"type":"ThisExpression","start":27355,"end":27359},"property":{"type":"Identifier","start":27360,"end":27362,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":27363,"end":27372,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":27385,"end":27428,"argument":{"type":"CallExpression","start":27392,"end":27427,"callee":{"type":"MemberExpression","start":27392,"end":27418,"object":{"type":"ThisExpression","start":27392,"end":27396},"property":{"type":"Identifier","start":27397,"end":27418,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27419,"end":27426,"name":"docRefs"}],"optional":false}}]}}},{"type":"MethodDefinition","start":27711,"end":28590,"static":false,"computed":false,"key":{"type":"Identifier","start":27711,"end":27726,"name":"deleteMultiple$"},"kind":"method","value":{"type":"FunctionExpression","start":27726,"end":28590,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27727,"end":27734,"name":"docRefs"},{"type":"AssignmentPattern","start":27736,"end":27761,"left":{"type":"Identifier","start":27736,"end":27756,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":27759,"end":27761,"elements":[]}}],"body":{"type":"BlockStatement","start":27763,"end":28590,"body":[{"type":"IfStatement","start":27774,"end":27914,"test":{"type":"LogicalExpression","start":27778,"end":27843,"left":{"type":"BinaryExpression","start":27778,"end":27806,"left":{"type":"Identifier","start":27778,"end":27798,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":27802,"end":27806,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":27810,"end":27843,"left":{"type":"MemberExpression","start":27810,"end":27837,"object":{"type":"Identifier","start":27810,"end":27830,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":27831,"end":27837,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":27842,"end":27843,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":27845,"end":27914,"body":[{"type":"ReturnStatement","start":27860,"end":27903,"argument":{"type":"CallExpression","start":27867,"end":27902,"callee":{"type":"MemberExpression","start":27867,"end":27893,"object":{"type":"ThisExpression","start":27867,"end":27871},"property":{"type":"Identifier","start":27872,"end":27893,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":27894,"end":27901,"name":"docRefs"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":27924,"end":27948,"declarations":[{"type":"VariableDeclarator","start":27930,"end":27947,"id":{"type":"Identifier","start":27930,"end":27942,"name":"deepDocRefs$"},"init":{"type":"ArrayExpression","start":27945,"end":27947,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":27958,"end":28133,"expression":{"type":"CallExpression","start":27958,"end":28132,"callee":{"type":"MemberExpression","start":27958,"end":27973,"object":{"type":"Identifier","start":27958,"end":27965,"name":"docRefs"},"property":{"type":"Identifier","start":27966,"end":27973,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":27974,"end":28131,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":27974,"end":27980,"name":"docRef"}],"body":{"type":"BlockStatement","start":27984,"end":28131,"body":[{"type":"VariableDeclaration","start":27999,"end":28078,"declarations":[{"type":"VariableDeclarator","start":28005,"end":28077,"id":{"type":"Identifier","start":28005,"end":28013,"name":"docRefs$"},"init":{"type":"CallExpression","start":28016,"end":28077,"callee":{"type":"MemberExpression","start":28016,"end":28047,"object":{"type":"ThisExpression","start":28016,"end":28020},"property":{"type":"Identifier","start":28021,"end":28047,"name":"getDocumentReferencesDeep$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28048,"end":28054,"name":"docRef"},{"type":"Identifier","start":28056,"end":28076,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":28092,"end":28120,"expression":{"type":"CallExpression","start":28092,"end":28119,"callee":{"type":"MemberExpression","start":28092,"end":28109,"object":{"type":"Identifier","start":28092,"end":28104,"name":"deepDocRefs$"},"property":{"type":"Identifier","start":28105,"end":28109,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28110,"end":28118,"name":"docRefs$"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":28143,"end":28583,"argument":{"type":"CallExpression","start":28150,"end":28582,"callee":{"type":"MemberExpression","start":28150,"end":28182,"object":{"type":"CallExpression","start":28150,"end":28177,"callee":{"type":"Identifier","start":28150,"end":28163,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":28164,"end":28176,"name":"deepDocRefs$"}],"optional":false},"property":{"type":"Identifier","start":28178,"end":28182,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":28239,"end":28458,"callee":{"type":"Identifier","start":28239,"end":28242,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":28243,"end":28457,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28244,"end":28249,"name":"lists"}],"body":{"type":"BlockStatement","start":28254,"end":28457,"body":[{"type":"VariableDeclaration","start":28269,"end":28293,"declarations":[{"type":"VariableDeclarator","start":28273,"end":28292,"id":{"type":"Identifier","start":28273,"end":28287,"name":"mainDocRefList"},"init":{"type":"ArrayExpression","start":28290,"end":28292,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":28307,"end":28410,"expression":{"type":"CallExpression","start":28307,"end":28409,"callee":{"type":"MemberExpression","start":28307,"end":28320,"object":{"type":"Identifier","start":28307,"end":28312,"name":"lists"},"property":{"type":"Identifier","start":28313,"end":28320,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":28321,"end":28408,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28321,"end":28325,"name":"list"}],"body":{"type":"BlockStatement","start":28329,"end":28408,"body":[{"type":"ExpressionStatement","start":28348,"end":28393,"expression":{"type":"AssignmentExpression","start":28348,"end":28392,"operator":"=","left":{"type":"Identifier","start":28348,"end":28362,"name":"mainDocRefList"},"right":{"type":"CallExpression","start":28365,"end":28392,"callee":{"type":"MemberExpression","start":28365,"end":28386,"object":{"type":"Identifier","start":28365,"end":28379,"name":"mainDocRefList"},"property":{"type":"Identifier","start":28380,"end":28386,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28387,"end":28391,"name":"list"}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":28424,"end":28446,"argument":{"type":"Identifier","start":28431,"end":28445,"name":"mainDocRefList"}}]}}],"optional":false},{"type":"CallExpression","start":28516,"end":28581,"callee":{"type":"Identifier","start":28516,"end":28525,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":28526,"end":28580,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":28527,"end":28537,"name":"docRefList"}],"body":{"type":"CallExpression","start":28542,"end":28580,"callee":{"type":"MemberExpression","start":28542,"end":28568,"object":{"type":"ThisExpression","start":28542,"end":28546},"property":{"type":"Identifier","start":28547,"end":28568,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":28569,"end":28579,"name":"docRefList"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":28928,"end":29167,"static":false,"computed":false,"key":{"type":"Identifier","start":28928,"end":28945,"name":"deleteCollection$"},"kind":"method","value":{"type":"FunctionExpression","start":28945,"end":29167,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":28946,"end":28959,"name":"collectionRef"},{"type":"AssignmentPattern","start":28961,"end":28986,"left":{"type":"Identifier","start":28961,"end":28981,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":28984,"end":28986,"elements":[]}}],"body":{"type":"BlockStatement","start":28988,"end":29167,"body":[{"type":"ReturnStatement","start":28999,"end":29160,"argument":{"type":"CallExpression","start":29006,"end":29159,"callee":{"type":"MemberExpression","start":29006,"end":29150,"object":{"type":"CallExpression","start":29006,"end":29145,"callee":{"type":"MemberExpression","start":29006,"end":29092,"object":{"type":"CallExpression","start":29006,"end":29087,"callee":{"type":"MemberExpression","start":29006,"end":29050,"object":{"type":"ThisExpression","start":29006,"end":29010},"property":{"type":"Identifier","start":29011,"end":29050,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29051,"end":29064,"name":"collectionRef"},{"type":"Identifier","start":29066,"end":29086,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":29088,"end":29092,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29093,"end":29144,"callee":{"type":"Identifier","start":29093,"end":29102,"name":"switchMap"},"arguments":[{"type":"ArrowFunctionExpression","start":29103,"end":29143,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":29103,"end":29110,"name":"docRefs"}],"body":{"type":"CallExpression","start":29114,"end":29143,"callee":{"type":"MemberExpression","start":29114,"end":29134,"object":{"type":"ThisExpression","start":29114,"end":29118},"property":{"type":"Identifier","start":29119,"end":29134,"name":"deleteMultiple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29135,"end":29142,"name":"docRefs"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":29146,"end":29150,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":29151,"end":29158,"callee":{"type":"Identifier","start":29151,"end":29155,"name":"take"},"arguments":[{"type":"Literal","start":29156,"end":29157,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":29591,"end":29780,"static":false,"computed":false,"key":{"type":"Identifier","start":29591,"end":29607,"name":"deleteDocByPath$"},"kind":"method","value":{"type":"FunctionExpression","start":29607,"end":29780,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":29608,"end":29615,"name":"docPath"},{"type":"AssignmentPattern","start":29617,"end":29642,"left":{"type":"Identifier","start":29617,"end":29637,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":29640,"end":29642,"elements":[]}}],"body":{"type":"BlockStatement","start":29644,"end":29780,"body":[{"type":"VariableDeclaration","start":29655,"end":29713,"declarations":[{"type":"VariableDeclarator","start":29661,"end":29712,"id":{"type":"Identifier","start":29661,"end":29667,"name":"docRef"},"init":{"type":"CallExpression","start":29670,"end":29712,"callee":{"type":"Identifier","start":29670,"end":29684,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":29685,"end":29692,"name":"docPath"},{"type":"MemberExpression","start":29694,"end":29711,"object":{"type":"MemberExpression","start":29694,"end":29701,"object":{"type":"ThisExpression","start":29694,"end":29698},"property":{"type":"Identifier","start":29699,"end":29701,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":29702,"end":29711,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":29723,"end":29773,"argument":{"type":"CallExpression","start":29730,"end":29772,"callee":{"type":"MemberExpression","start":29730,"end":29742,"object":{"type":"ThisExpression","start":29730,"end":29734},"property":{"type":"Identifier","start":29735,"end":29742,"name":"delete$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":29743,"end":29749,"name":"docRef"},{"type":"Identifier","start":29751,"end":29771,"name":"subCollectionQueries"}],"optional":false}}]}}},{"type":"MethodDefinition","start":30134,"end":30585,"static":false,"computed":false,"key":{"type":"Identifier","start":30134,"end":30145,"name":"deleteItem$"},"kind":"method","value":{"type":"FunctionExpression","start":30145,"end":30585,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30146,"end":30150,"name":"item"},{"type":"AssignmentPattern","start":30152,"end":30177,"left":{"type":"Identifier","start":30152,"end":30172,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":30175,"end":30177,"elements":[]}}],"body":{"type":"BlockStatement","start":30179,"end":30585,"body":[{"type":"VariableDeclaration","start":30190,"end":30269,"declarations":[{"type":"VariableDeclarator","start":30196,"end":30268,"id":{"type":"Identifier","start":30196,"end":30203,"name":"docRefs"},"init":{"type":"CallExpression","start":30206,"end":30268,"callee":{"type":"MemberExpression","start":30206,"end":30240,"object":{"type":"ThisExpression","start":30206,"end":30210},"property":{"type":"Identifier","start":30211,"end":30240,"name":"getDocumentReferencesFromItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30241,"end":30245,"name":"item"},{"type":"Identifier","start":30247,"end":30267,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":30279,"end":30578,"argument":{"type":"CallExpression","start":30286,"end":30577,"callee":{"type":"MemberExpression","start":30286,"end":30326,"object":{"type":"CallExpression","start":30286,"end":30321,"callee":{"type":"MemberExpression","start":30286,"end":30312,"object":{"type":"ThisExpression","start":30286,"end":30290},"property":{"type":"Identifier","start":30291,"end":30312,"name":"deleteMultipleSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30313,"end":30320,"name":"docRefs"}],"optional":false},"property":{"type":"Identifier","start":30322,"end":30326,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30569,"end":30576,"callee":{"type":"Identifier","start":30569,"end":30573,"name":"take"},"arguments":[{"type":"Literal","start":30574,"end":30575,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":30591,"end":31253,"static":false,"computed":false,"key":{"type":"Identifier","start":30591,"end":30610,"name":"cleanExtrasFromData"},"kind":"method","value":{"type":"FunctionExpression","start":30610,"end":31253,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30611,"end":30615,"name":"data"},{"type":"AssignmentPattern","start":30617,"end":30642,"left":{"type":"Identifier","start":30617,"end":30637,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":30640,"end":30642,"elements":[]}},{"type":"AssignmentPattern","start":30644,"end":30673,"left":{"type":"Identifier","start":30644,"end":30668,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":30671,"end":30673,"elements":[]}}],"body":{"type":"BlockStatement","start":30675,"end":31253,"body":[{"type":"IfStatement","start":30829,"end":31246,"test":{"type":"CallExpression","start":30833,"end":30852,"callee":{"type":"MemberExpression","start":30833,"end":30846,"object":{"type":"Identifier","start":30833,"end":30838,"name":"Array"},"property":{"type":"Identifier","start":30839,"end":30846,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30847,"end":30851,"name":"data"}],"optional":false},"consequent":{"type":"BlockStatement","start":30854,"end":31107,"body":[{"type":"VariableDeclaration","start":30869,"end":30891,"declarations":[{"type":"VariableDeclarator","start":30875,"end":30890,"id":{"type":"Identifier","start":30875,"end":30885,"name":"cleanDatas"},"init":{"type":"ArrayExpression","start":30888,"end":30890,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":30905,"end":31064,"expression":{"type":"CallExpression","start":30905,"end":31063,"callee":{"type":"MemberExpression","start":30905,"end":30917,"object":{"type":"Identifier","start":30905,"end":30909,"name":"data"},"property":{"type":"Identifier","start":30910,"end":30917,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":30918,"end":31062,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":30918,"end":30919,"name":"d"}],"body":{"type":"BlockStatement","start":30923,"end":31062,"body":[{"type":"ExpressionStatement","start":30942,"end":31047,"expression":{"type":"CallExpression","start":30942,"end":31046,"callee":{"type":"MemberExpression","start":30942,"end":30957,"object":{"type":"Identifier","start":30942,"end":30952,"name":"cleanDatas"},"property":{"type":"Identifier","start":30953,"end":30957,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":30958,"end":31045,"callee":{"type":"MemberExpression","start":30958,"end":30994,"object":{"type":"ThisExpression","start":30958,"end":30962},"property":{"type":"Identifier","start":30963,"end":30994,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":30995,"end":30996,"name":"d"},{"type":"Identifier","start":30998,"end":31018,"name":"subCollectionWriters"},{"type":"Identifier","start":31020,"end":31044,"name":"additionalFieldsToRemove"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":31078,"end":31096,"argument":{"type":"Identifier","start":31085,"end":31095,"name":"cleanDatas"}}]},"alternate":{"type":"BlockStatement","start":31122,"end":31246,"body":[{"type":"ReturnStatement","start":31137,"end":31235,"argument":{"type":"CallExpression","start":31144,"end":31234,"callee":{"type":"MemberExpression","start":31144,"end":31180,"object":{"type":"ThisExpression","start":31144,"end":31148},"property":{"type":"Identifier","start":31149,"end":31180,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31181,"end":31185,"name":"data"},{"type":"Identifier","start":31187,"end":31207,"name":"subCollectionWriters"},{"type":"Identifier","start":31209,"end":31233,"name":"additionalFieldsToRemove"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":31786,"end":33452,"static":false,"computed":false,"key":{"type":"Identifier","start":31786,"end":31805,"name":"listenForDocSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":31805,"end":33452,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31806,"end":31812,"name":"docRef"},{"type":"AssignmentPattern","start":31814,"end":31870,"left":{"type":"Identifier","start":31814,"end":31830,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":31833,"end":31870,"object":{"type":"Identifier","start":31833,"end":31850,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":31851,"end":31870,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":31872,"end":33452,"body":[{"type":"ReturnStatement","start":31883,"end":33445,"argument":{"type":"CallExpression","start":31890,"end":33444,"callee":{"type":"MemberExpression","start":31890,"end":31914,"object":{"type":"CallExpression","start":31890,"end":31909,"callee":{"type":"MemberExpression","start":31890,"end":31901,"object":{"type":"MemberExpression","start":31890,"end":31897,"object":{"type":"ThisExpression","start":31890,"end":31894},"property":{"type":"Identifier","start":31895,"end":31897,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":31898,"end":31901,"name":"doc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":31902,"end":31908,"name":"docRef"}],"optional":false},"property":{"type":"Identifier","start":31910,"end":31914,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":31915,"end":32363,"callee":{"type":"Identifier","start":31915,"end":31918,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":31919,"end":32362,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":31920,"end":31928,"name":"snapshot"}],"body":{"type":"BlockStatement","start":31933,"end":32362,"body":[{"type":"IfStatement","start":31948,"end":32351,"test":{"type":"LogicalExpression","start":31952,"end":32032,"left":{"type":"UnaryExpression","start":31952,"end":31970,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":31953,"end":31970,"callee":{"type":"MemberExpression","start":31953,"end":31968,"object":{"type":"Identifier","start":31953,"end":31961,"name":"snapshot"},"property":{"type":"Identifier","start":31962,"end":31968,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":31974,"end":32032,"left":{"type":"Identifier","start":31974,"end":31990,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":31995,"end":32032,"object":{"type":"Identifier","start":31995,"end":32012,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32013,"end":32032,"name":"THROW_DOC_NOT_FOUND"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32034,"end":32351,"body":[{"type":"VariableDeclaration","start":32053,"end":32306,"declarations":[{"type":"VariableDeclarator","start":32059,"end":32305,"id":{"type":"Identifier","start":32059,"end":32064,"name":"error"},"init":{"type":"ObjectExpression","start":32067,"end":32305,"properties":[{"type":"Property","start":32090,"end":32114,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32090,"end":32094,"name":"name"},"value":{"type":"Literal","start":32096,"end":32114,"value":"FirebaseErrorExt","raw":"'FirebaseErrorExt'"},"kind":"init"},{"type":"Property","start":32137,"end":32154,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32137,"end":32141,"name":"code"},"value":{"type":"Literal","start":32143,"end":32154,"value":"not-found","raw":"'not-found'"},"kind":"init"},{"type":"Property","start":32177,"end":32257,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32177,"end":32184,"name":"message"},"value":{"type":"Literal","start":32186,"end":32257,"value":"Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND","raw":"'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND'"},"kind":"init"},{"type":"Property","start":32280,"end":32286,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":32280,"end":32286,"name":"docRef"},"kind":"init","value":{"type":"Identifier","start":32280,"end":32286,"name":"docRef"}}]}}],"kind":"const"},{"type":"ThrowStatement","start":32324,"end":32336,"argument":{"type":"Identifier","start":32330,"end":32335,"name":"error"}}]},"alternate":null}]}}],"optional":false},{"type":"CallExpression","start":32365,"end":32490,"callee":{"type":"Identifier","start":32365,"end":32371,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":32372,"end":32489,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32373,"end":32381,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32386,"end":32489,"body":[{"type":"ReturnStatement","start":32401,"end":32478,"argument":{"type":"UnaryExpression","start":32408,"end":32477,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":32410,"end":32476,"left":{"type":"CallExpression","start":32410,"end":32427,"callee":{"type":"MemberExpression","start":32410,"end":32425,"object":{"type":"Identifier","start":32410,"end":32418,"name":"snapshot"},"property":{"type":"Identifier","start":32419,"end":32425,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":32431,"end":32476,"left":{"type":"Identifier","start":32431,"end":32447,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32452,"end":32476,"object":{"type":"Identifier","start":32452,"end":32469,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32470,"end":32476,"name":"FILTER"},"computed":false,"optional":false}}}}}]}}],"optional":false},{"type":"CallExpression","start":32492,"end":33247,"callee":{"type":"Identifier","start":32492,"end":32495,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":32496,"end":33246,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":32497,"end":32505,"name":"snapshot"}],"body":{"type":"BlockStatement","start":32510,"end":33246,"body":[{"type":"ExpressionStatement","start":32525,"end":32556,"expression":{"type":"CallExpression","start":32525,"end":32555,"callee":{"type":"MemberExpression","start":32525,"end":32536,"object":{"type":"Identifier","start":32525,"end":32532,"name":"console"},"property":{"type":"Identifier","start":32533,"end":32536,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":32537,"end":32554,"callee":{"type":"MemberExpression","start":32537,"end":32552,"object":{"type":"Identifier","start":32537,"end":32545,"name":"snapshot"},"property":{"type":"Identifier","start":32546,"end":32552,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":32570,"end":33209,"test":{"type":"LogicalExpression","start":32574,"end":32653,"left":{"type":"CallExpression","start":32574,"end":32591,"callee":{"type":"MemberExpression","start":32574,"end":32589,"object":{"type":"Identifier","start":32574,"end":32582,"name":"snapshot"},"property":{"type":"Identifier","start":32583,"end":32589,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":32595,"end":32653,"left":{"type":"Identifier","start":32595,"end":32611,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":32616,"end":32653,"object":{"type":"Identifier","start":32616,"end":32633,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":32634,"end":32653,"name":"RETURN_ALL_BUT_DATA"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":32655,"end":33064,"body":[{"type":"VariableDeclaration","start":32674,"end":32703,"declarations":[{"type":"VariableDeclarator","start":32680,"end":32702,"id":{"type":"Identifier","start":32680,"end":32684,"name":"data"},"init":{"type":"CallExpression","start":32687,"end":32702,"callee":{"type":"MemberExpression","start":32687,"end":32700,"object":{"type":"Identifier","start":32687,"end":32695,"name":"snapshot"},"property":{"type":"Identifier","start":32696,"end":32700,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":32721,"end":32993,"declarations":[{"type":"VariableDeclarator","start":32727,"end":32992,"id":{"type":"Identifier","start":32727,"end":32744,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":32747,"end":32992,"properties":[{"type":"Property","start":32770,"end":32785,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32770,"end":32772,"name":"id"},"value":{"type":"MemberExpression","start":32774,"end":32785,"object":{"type":"Identifier","start":32774,"end":32782,"name":"snapshot"},"property":{"type":"Identifier","start":32783,"end":32785,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32808,"end":32825,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32808,"end":32811,"name":"ref"},"value":{"type":"MemberExpression","start":32813,"end":32825,"object":{"type":"Identifier","start":32813,"end":32821,"name":"snapshot"},"property":{"type":"Identifier","start":32822,"end":32825,"name":"ref"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32848,"end":32865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32848,"end":32852,"name":"path"},"value":{"type":"MemberExpression","start":32854,"end":32865,"object":{"type":"Identifier","start":32854,"end":32860,"name":"docRef"},"property":{"type":"Identifier","start":32861,"end":32865,"name":"path"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":32888,"end":32915,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32888,"end":32896,"name":"isExists"},"value":{"type":"CallExpression","start":32898,"end":32915,"callee":{"type":"MemberExpression","start":32898,"end":32913,"object":{"type":"Identifier","start":32898,"end":32906,"name":"snapshot"},"property":{"type":"Identifier","start":32907,"end":32913,"name":"exists"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":32938,"end":32973,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":32938,"end":32954,"name":"snapshotMetadata"},"value":{"type":"MemberExpression","start":32956,"end":32973,"object":{"type":"Identifier","start":32956,"end":32964,"name":"snapshot"},"property":{"type":"Identifier","start":32965,"end":32973,"name":"metadata"},"computed":false,"optional":false},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":33011,"end":33049,"argument":{"type":"ObjectExpression","start":33018,"end":33048,"properties":[{"type":"SpreadElement","start":33020,"end":33027,"argument":{"type":"Identifier","start":33023,"end":33027,"name":"data"}},{"type":"Property","start":33029,"end":33046,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":33029,"end":33046,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":33029,"end":33046,"name":"firestoreMetadata"}}]}}]},"alternate":{"type":"IfStatement","start":33083,"end":33209,"test":{"type":"BinaryExpression","start":33087,"end":33137,"left":{"type":"Identifier","start":33087,"end":33103,"name":"actionIfNotExist"},"operator":"===","right":{"type":"MemberExpression","start":33108,"end":33137,"object":{"type":"Identifier","start":33108,"end":33125,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":33126,"end":33137,"name":"RETURN_NULL"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":33139,"end":33209,"body":[{"type":"ReturnStatement","start":33182,"end":33194,"argument":{"type":"Literal","start":33189,"end":33193,"value":null,"raw":"null"}}]},"alternate":null}},{"type":"ReturnStatement","start":33223,"end":33235,"argument":{"type":"Literal","start":33230,"end":33234,"value":null,"raw":"null"}}]}}],"optional":false},{"type":"CallExpression","start":33249,"end":33443,"callee":{"type":"Identifier","start":33249,"end":33252,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33253,"end":33442,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33254,"end":33258,"name":"data"}],"body":{"type":"BlockStatement","start":33263,"end":33442,"body":[{"type":"IfStatement","start":33278,"end":33431,"test":{"type":"BinaryExpression","start":33282,"end":33294,"left":{"type":"Identifier","start":33282,"end":33286,"name":"data"},"operator":"!=","right":{"type":"Literal","start":33290,"end":33294,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":33296,"end":33366,"body":[{"type":"ReturnStatement","start":33315,"end":33351,"argument":{"type":"CallExpression","start":33322,"end":33350,"callee":{"type":"Identifier","start":33322,"end":33344,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":33345,"end":33349,"name":"data"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":33385,"end":33431,"body":[{"type":"ReturnStatement","start":33404,"end":33416,"argument":{"type":"Identifier","start":33411,"end":33415,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":33718,"end":34692,"static":false,"computed":false,"key":{"type":"Identifier","start":33718,"end":33744,"name":"listenForCollectionSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":33744,"end":34692,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33745,"end":33751,"name":"_query"}],"body":{"type":"BlockStatement","start":33753,"end":34692,"body":[{"type":"ReturnStatement","start":33928,"end":34685,"argument":{"type":"CallExpression","start":33935,"end":34684,"callee":{"type":"MemberExpression","start":33935,"end":33966,"object":{"type":"CallExpression","start":33935,"end":33961,"callee":{"type":"MemberExpression","start":33935,"end":33953,"object":{"type":"MemberExpression","start":33935,"end":33942,"object":{"type":"ThisExpression","start":33935,"end":33939},"property":{"type":"Identifier","start":33940,"end":33942,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":33943,"end":33953,"name":"collection"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":33954,"end":33960,"name":"_query"}],"optional":false},"property":{"type":"Identifier","start":33962,"end":33966,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":33967,"end":34565,"callee":{"type":"Identifier","start":33967,"end":33970,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":33971,"end":34564,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":33972,"end":33976,"name":"snap"}],"body":{"type":"BlockStatement","start":33981,"end":34564,"body":[{"type":"ReturnStatement","start":33996,"end":34553,"argument":{"type":"CallExpression","start":34003,"end":34552,"callee":{"type":"MemberExpression","start":34003,"end":34016,"object":{"type":"MemberExpression","start":34003,"end":34012,"object":{"type":"Identifier","start":34003,"end":34007,"name":"snap"},"property":{"type":"Identifier","start":34008,"end":34012,"name":"docs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":34013,"end":34016,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34017,"end":34551,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34017,"end":34025,"name":"snapshot"}],"body":{"type":"BlockStatement","start":34029,"end":34551,"body":[{"type":"VariableDeclaration","start":34048,"end":34077,"declarations":[{"type":"VariableDeclarator","start":34054,"end":34076,"id":{"type":"Identifier","start":34054,"end":34058,"name":"data"},"init":{"type":"CallExpression","start":34061,"end":34076,"callee":{"type":"MemberExpression","start":34061,"end":34074,"object":{"type":"Identifier","start":34061,"end":34069,"name":"snapshot"},"property":{"type":"Identifier","start":34070,"end":34074,"name":"data"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34095,"end":34118,"declarations":[{"type":"VariableDeclarator","start":34101,"end":34117,"id":{"type":"Identifier","start":34101,"end":34103,"name":"id"},"init":{"type":"MemberExpression","start":34106,"end":34117,"object":{"type":"Identifier","start":34106,"end":34114,"name":"snapshot"},"property":{"type":"Identifier","start":34115,"end":34117,"name":"id"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34136,"end":34161,"declarations":[{"type":"VariableDeclarator","start":34142,"end":34160,"id":{"type":"Identifier","start":34142,"end":34145,"name":"ref"},"init":{"type":"MemberExpression","start":34148,"end":34160,"object":{"type":"Identifier","start":34148,"end":34156,"name":"snapshot"},"property":{"type":"Identifier","start":34157,"end":34160,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34179,"end":34201,"declarations":[{"type":"VariableDeclarator","start":34185,"end":34200,"id":{"type":"Identifier","start":34185,"end":34189,"name":"path"},"init":{"type":"MemberExpression","start":34192,"end":34200,"object":{"type":"Identifier","start":34192,"end":34195,"name":"ref"},"property":{"type":"Identifier","start":34196,"end":34200,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34219,"end":34262,"declarations":[{"type":"VariableDeclarator","start":34225,"end":34261,"id":{"type":"Identifier","start":34225,"end":34241,"name":"snapshotMetadata"},"init":{"type":"MemberExpression","start":34244,"end":34261,"object":{"type":"Identifier","start":34244,"end":34252,"name":"snapshot"},"property":{"type":"Identifier","start":34253,"end":34261,"name":"metadata"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":34280,"end":34480,"declarations":[{"type":"VariableDeclarator","start":34286,"end":34479,"id":{"type":"Identifier","start":34286,"end":34303,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":34306,"end":34479,"properties":[{"type":"Property","start":34329,"end":34331,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34329,"end":34331,"name":"id"},"kind":"init","value":{"type":"Identifier","start":34329,"end":34331,"name":"id"}},{"type":"Property","start":34354,"end":34358,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34354,"end":34358,"name":"path"},"kind":"init","value":{"type":"Identifier","start":34354,"end":34358,"name":"path"}},{"type":"Property","start":34381,"end":34384,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34381,"end":34384,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":34381,"end":34384,"name":"ref"}},{"type":"Property","start":34407,"end":34423,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34407,"end":34423,"name":"snapshotMetadata"},"kind":"init","value":{"type":"Identifier","start":34407,"end":34423,"name":"snapshotMetadata"}},{"type":"Property","start":34446,"end":34460,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":34446,"end":34454,"name":"isExists"},"value":{"type":"Literal","start":34456,"end":34460,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":34498,"end":34536,"argument":{"type":"ObjectExpression","start":34505,"end":34535,"properties":[{"type":"SpreadElement","start":34507,"end":34514,"argument":{"type":"Identifier","start":34510,"end":34514,"name":"data"}},{"type":"Property","start":34516,"end":34533,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":34516,"end":34533,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":34516,"end":34533,"name":"firestoreMetadata"}}]}}]}}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":34567,"end":34683,"callee":{"type":"Identifier","start":34567,"end":34570,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":34571,"end":34682,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":34572,"end":34577,"name":"datas"}],"body":{"type":"CallExpression","start":34582,"end":34682,"callee":{"type":"MemberExpression","start":34582,"end":34591,"object":{"type":"Identifier","start":34582,"end":34587,"name":"datas"},"property":{"type":"Identifier","start":34588,"end":34591,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":34592,"end":34681,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34592,"end":34596,"name":"data"}],"body":{"type":"BlockStatement","start":34600,"end":34681,"body":[{"type":"ExpressionStatement","start":34615,"end":34644,"expression":{"type":"CallExpression","start":34615,"end":34643,"callee":{"type":"Identifier","start":34615,"end":34637,"name":"convertTimestampToDate"},"arguments":[{"type":"Identifier","start":34638,"end":34642,"name":"data"}],"optional":false}},{"type":"ReturnStatement","start":34658,"end":34670,"argument":{"type":"Identifier","start":34665,"end":34669,"name":"data"}}]}}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":34974,"end":38748,"static":false,"computed":false,"key":{"type":"Identifier","start":34974,"end":34998,"name":"listenForCollectionsDeep"},"kind":"method","value":{"type":"FunctionExpression","start":34998,"end":38748,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":34999,"end":35003,"name":"item"},{"type":"AssignmentPattern","start":35005,"end":35030,"left":{"type":"Identifier","start":35005,"end":35025,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":35028,"end":35030,"elements":[]}}],"body":{"type":"BlockStatement","start":35032,"end":38748,"body":[{"type":"IfStatement","start":35043,"end":35105,"test":{"type":"BinaryExpression","start":35047,"end":35059,"left":{"type":"Identifier","start":35047,"end":35051,"name":"item"},"operator":"==","right":{"type":"Literal","start":35055,"end":35059,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":35061,"end":35105,"body":[{"type":"ReturnStatement","start":35076,"end":35094,"argument":{"type":"CallExpression","start":35083,"end":35093,"callee":{"type":"Identifier","start":35083,"end":35085,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35086,"end":35092,"elements":[{"type":"Identifier","start":35087,"end":35091,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":35115,"end":35197,"test":{"type":"BinaryExpression","start":35119,"end":35151,"left":{"type":"MemberExpression","start":35119,"end":35146,"object":{"type":"Identifier","start":35119,"end":35139,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35140,"end":35146,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":35150,"end":35151,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":35153,"end":35197,"body":[{"type":"ReturnStatement","start":35168,"end":35186,"argument":{"type":"CallExpression","start":35175,"end":35185,"callee":{"type":"Identifier","start":35175,"end":35177,"name":"of"},"arguments":[{"type":"ArrayExpression","start":35178,"end":35184,"elements":[{"type":"Identifier","start":35179,"end":35183,"name":"item"}]}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":35207,"end":35238,"declarations":[{"type":"VariableDeclarator","start":35213,"end":35237,"id":{"type":"Identifier","start":35213,"end":35232,"name":"collectionListeners"},"init":{"type":"ArrayExpression","start":35235,"end":35237,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":35341,"end":38141,"expression":{"type":"CallExpression","start":35341,"end":38140,"callee":{"type":"MemberExpression","start":35341,"end":35369,"object":{"type":"Identifier","start":35341,"end":35361,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":35362,"end":35369,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":35370,"end":38139,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":35370,"end":35388,"name":"subCollectionQuery"}],"body":{"type":"BlockStatement","start":35392,"end":38139,"body":[{"type":"VariableDeclaration","start":35407,"end":35520,"declarations":[{"type":"VariableDeclarator","start":35413,"end":35519,"id":{"type":"Identifier","start":35413,"end":35427,"name":"queryContainer"},"init":{"type":"NewExpression","start":35430,"end":35519,"callee":{"type":"Identifier","start":35434,"end":35448,"name":"QueryContainer"},"arguments":[{"type":"CallExpression","start":35449,"end":35518,"callee":{"type":"Identifier","start":35449,"end":35465,"name":"getSubCollection"},"arguments":[{"type":"MemberExpression","start":35466,"end":35492,"object":{"type":"MemberExpression","start":35466,"end":35488,"object":{"type":"Identifier","start":35466,"end":35470,"name":"item"},"property":{"type":"Identifier","start":35471,"end":35488,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":35489,"end":35492,"name":"ref"},"computed":false,"optional":false},{"type":"MemberExpression","start":35494,"end":35517,"object":{"type":"Identifier","start":35494,"end":35512,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35513,"end":35517,"name":"name"},"computed":false,"optional":false}],"optional":false}]}}],"kind":"const"},{"type":"IfStatement","start":35534,"end":35781,"test":{"type":"MemberExpression","start":35538,"end":35573,"object":{"type":"Identifier","start":35538,"end":35556,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35557,"end":35573,"name":"queryConstraints"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":35575,"end":35781,"body":[{"type":"ExpressionStatement","start":35594,"end":35664,"expression":{"type":"AssignmentExpression","start":35594,"end":35663,"operator":"=","left":{"type":"MemberExpression","start":35594,"end":35625,"object":{"type":"Identifier","start":35594,"end":35608,"name":"queryContainer"},"property":{"type":"Identifier","start":35609,"end":35625,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":35628,"end":35663,"object":{"type":"Identifier","start":35628,"end":35646,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":35647,"end":35663,"name":"queryConstraints"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":35963,"end":38069,"declarations":[{"type":"VariableDeclarator","start":35969,"end":38068,"id":{"type":"Identifier","start":35969,"end":35987,"name":"collectionListener"},"init":{"type":"CallExpression","start":35990,"end":38068,"callee":{"type":"MemberExpression","start":35990,"end":36048,"object":{"type":"CallExpression","start":35990,"end":36043,"callee":{"type":"MemberExpression","start":35990,"end":36021,"object":{"type":"ThisExpression","start":35990,"end":35994},"property":{"type":"Identifier","start":35995,"end":36021,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":36022,"end":36042,"object":{"type":"Identifier","start":36022,"end":36036,"name":"queryContainer"},"property":{"type":"Identifier","start":36037,"end":36042,"name":"query"},"computed":false,"optional":false}],"optional":false},"property":{"type":"Identifier","start":36044,"end":36048,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":36463,"end":37281,"callee":{"type":"Identifier","start":36463,"end":36471,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":36472,"end":37280,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36473,"end":36478,"name":"items"}],"body":{"type":"BlockStatement","start":36483,"end":37280,"body":[{"type":"IfStatement","start":36502,"end":36601,"test":{"type":"UnaryExpression","start":36506,"end":36540,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":36507,"end":36540,"object":{"type":"Identifier","start":36507,"end":36525,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36526,"end":36540,"name":"subCollections"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":36542,"end":36601,"body":[{"type":"ReturnStatement","start":36565,"end":36582,"argument":{"type":"CallExpression","start":36572,"end":36581,"callee":{"type":"Identifier","start":36572,"end":36574,"name":"of"},"arguments":[{"type":"Identifier","start":36575,"end":36580,"name":"items"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":36619,"end":36643,"declarations":[{"type":"VariableDeclarator","start":36625,"end":36642,"id":{"type":"Identifier","start":36625,"end":36637,"name":"docListeners"},"init":{"type":"ArrayExpression","start":36640,"end":36642,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":36661,"end":36698,"expression":{"type":"AssignmentExpression","start":36661,"end":36697,"operator":"=","left":{"type":"Identifier","start":36661,"end":36666,"name":"items"},"right":{"type":"CallExpression","start":36669,"end":36697,"callee":{"type":"MemberExpression","start":36669,"end":36681,"object":{"type":"Identifier","start":36669,"end":36674,"name":"items"},"property":{"type":"Identifier","start":36675,"end":36681,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36682,"end":36696,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":36682,"end":36683,"name":"d"}],"body":{"type":"BinaryExpression","start":36687,"end":36696,"left":{"type":"Identifier","start":36687,"end":36688,"name":"d"},"operator":"!=","right":{"type":"Literal","start":36692,"end":36696,"value":null,"raw":"null"}}}],"optional":false}}},{"type":"ExpressionStatement","start":36746,"end":36984,"expression":{"type":"CallExpression","start":36746,"end":36983,"callee":{"type":"MemberExpression","start":36746,"end":36759,"object":{"type":"Identifier","start":36746,"end":36751,"name":"items"},"property":{"type":"Identifier","start":36752,"end":36759,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":36760,"end":36982,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":36761,"end":36768,"name":"subItem"}],"body":{"type":"BlockStatement","start":36773,"end":36982,"body":[{"type":"VariableDeclaration","start":36796,"end":36900,"declarations":[{"type":"VariableDeclarator","start":36802,"end":36899,"id":{"type":"Identifier","start":36802,"end":36823,"name":"subDocAndCollections$"},"init":{"type":"CallExpression","start":36826,"end":36899,"callee":{"type":"MemberExpression","start":36826,"end":36855,"object":{"type":"ThisExpression","start":36826,"end":36830},"property":{"type":"Identifier","start":36831,"end":36855,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36856,"end":36863,"name":"subItem"},{"type":"MemberExpression","start":36865,"end":36898,"object":{"type":"Identifier","start":36865,"end":36883,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":36884,"end":36898,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":36922,"end":36963,"expression":{"type":"CallExpression","start":36922,"end":36962,"callee":{"type":"MemberExpression","start":36922,"end":36939,"object":{"type":"Identifier","start":36922,"end":36934,"name":"docListeners"},"property":{"type":"Identifier","start":36935,"end":36939,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":36940,"end":36961,"name":"subDocAndCollections$"}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":37002,"end":37088,"test":{"type":"BinaryExpression","start":37006,"end":37030,"left":{"type":"MemberExpression","start":37006,"end":37025,"object":{"type":"Identifier","start":37006,"end":37018,"name":"docListeners"},"property":{"type":"Identifier","start":37019,"end":37025,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":37029,"end":37030,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":37032,"end":37088,"body":[{"type":"ReturnStatement","start":37055,"end":37069,"argument":{"type":"CallExpression","start":37062,"end":37068,"callee":{"type":"Identifier","start":37062,"end":37064,"name":"of"},"arguments":[{"type":"ArrayExpression","start":37065,"end":37067,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":37156,"end":37265,"argument":{"type":"CallExpression","start":37163,"end":37264,"callee":{"type":"MemberExpression","start":37163,"end":37195,"object":{"type":"CallExpression","start":37163,"end":37190,"callee":{"type":"Identifier","start":37163,"end":37176,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":37177,"end":37189,"name":"docListeners"}],"optional":false},"property":{"type":"Identifier","start":37191,"end":37195,"name":"pipe"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":37634,"end":38067,"callee":{"type":"Identifier","start":37634,"end":37637,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":37638,"end":38066,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":37639,"end":37644,"name":"items"}],"body":{"type":"BlockStatement","start":37649,"end":38066,"body":[{"type":"VariableDeclaration","start":37668,"end":37768,"declarations":[{"type":"VariableDeclarator","start":37674,"end":37767,"id":{"type":"Identifier","start":37674,"end":37679,"name":"docId"},"init":{"type":"ConditionalExpression","start":37682,"end":37767,"test":{"type":"BinaryExpression","start":37682,"end":37720,"left":{"type":"MemberExpression","start":37682,"end":37706,"object":{"type":"Identifier","start":37682,"end":37700,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37701,"end":37706,"name":"docId"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":37711,"end":37720,"name":"undefined"}},"consequent":{"type":"MemberExpression","start":37723,"end":37747,"object":{"type":"Identifier","start":37723,"end":37741,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37742,"end":37747,"name":"docId"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":37750,"end":37767,"object":{"type":"ThisExpression","start":37750,"end":37754},"property":{"type":"Identifier","start":37755,"end":37767,"name":"defaultDocId"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":37786,"end":38051,"test":{"type":"LogicalExpression","start":37790,"end":37851,"left":{"type":"BinaryExpression","start":37790,"end":37808,"left":{"type":"MemberExpression","start":37790,"end":37802,"object":{"type":"Identifier","start":37790,"end":37795,"name":"items"},"property":{"type":"Identifier","start":37796,"end":37802,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":37807,"end":37808,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":37812,"end":37851,"left":{"type":"MemberExpression","start":37812,"end":37841,"object":{"type":"MemberExpression","start":37812,"end":37838,"object":{"type":"MemberExpression","start":37812,"end":37820,"object":{"type":"Identifier","start":37812,"end":37817,"name":"items"},"property":{"type":"Literal","start":37818,"end":37819,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":37821,"end":37838,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":37839,"end":37841,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":37846,"end":37851,"name":"docId"}}},"consequent":{"type":"BlockStatement","start":37853,"end":37942,"body":[{"type":"ReturnStatement","start":37876,"end":37923,"argument":{"type":"ObjectExpression","start":37883,"end":37922,"properties":[{"type":"Property","start":37885,"end":37920,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37886,"end":37909,"object":{"type":"Identifier","start":37886,"end":37904,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":37905,"end":37909,"name":"name"},"computed":false,"optional":false},"value":{"type":"MemberExpression","start":37912,"end":37920,"object":{"type":"Identifier","start":37912,"end":37917,"name":"items"},"property":{"type":"Literal","start":37918,"end":37919,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":37965,"end":38051,"body":[{"type":"ReturnStatement","start":37988,"end":38032,"argument":{"type":"ObjectExpression","start":37995,"end":38031,"properties":[{"type":"Property","start":37997,"end":38029,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":37998,"end":38021,"object":{"type":"Identifier","start":37998,"end":38016,"name":"subCollectionQuery"},"property":{"type":"Identifier","start":38017,"end":38021,"name":"name"},"computed":false,"optional":false},"value":{"type":"Identifier","start":38024,"end":38029,"name":"items"},"kind":"init"}]}}]}}]}}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":38083,"end":38128,"expression":{"type":"CallExpression","start":38083,"end":38127,"callee":{"type":"MemberExpression","start":38083,"end":38107,"object":{"type":"Identifier","start":38083,"end":38102,"name":"collectionListeners"},"property":{"type":"Identifier","start":38103,"end":38107,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38108,"end":38126,"name":"collectionListener"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":38237,"end":38741,"argument":{"type":"CallExpression","start":38244,"end":38740,"callee":{"type":"MemberExpression","start":38244,"end":38283,"object":{"type":"CallExpression","start":38244,"end":38278,"callee":{"type":"Identifier","start":38244,"end":38257,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":38258,"end":38277,"name":"collectionListeners"}],"optional":false},"property":{"type":"Identifier","start":38279,"end":38283,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":38284,"end":38668,"callee":{"type":"Identifier","start":38284,"end":38287,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38288,"end":38667,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38289,"end":38304,"name":"collectionDatas"}],"body":{"type":"BlockStatement","start":38309,"end":38667,"body":[{"type":"VariableDeclaration","start":38367,"end":38387,"declarations":[{"type":"VariableDeclarator","start":38373,"end":38386,"id":{"type":"Identifier","start":38373,"end":38381,"name":"datasMap"},"init":{"type":"ObjectExpression","start":38384,"end":38386,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":38401,"end":38626,"expression":{"type":"CallExpression","start":38401,"end":38625,"callee":{"type":"MemberExpression","start":38401,"end":38424,"object":{"type":"Identifier","start":38401,"end":38416,"name":"collectionDatas"},"property":{"type":"Identifier","start":38417,"end":38424,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":38425,"end":38624,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38426,"end":38440,"name":"collectionData"}],"body":{"type":"BlockStatement","start":38445,"end":38624,"body":[{"type":"ForOfStatement","start":38464,"end":38609,"await":false,"left":{"type":"VariableDeclaration","start":38469,"end":38498,"declarations":[{"type":"VariableDeclarator","start":38475,"end":38498,"id":{"type":"ArrayPattern","start":38475,"end":38498,"elements":[{"type":"Identifier","start":38476,"end":38490,"name":"collectionName"},{"type":"Identifier","start":38492,"end":38497,"name":"items"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":38502,"end":38532,"callee":{"type":"MemberExpression","start":38502,"end":38516,"object":{"type":"Identifier","start":38502,"end":38508,"name":"Object"},"property":{"type":"Identifier","start":38509,"end":38516,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":38517,"end":38531,"name":"collectionData"}],"optional":false},"body":{"type":"BlockStatement","start":38534,"end":38609,"body":[{"type":"ExpressionStatement","start":38557,"end":38590,"expression":{"type":"AssignmentExpression","start":38557,"end":38589,"operator":"=","left":{"type":"MemberExpression","start":38557,"end":38581,"object":{"type":"Identifier","start":38557,"end":38565,"name":"datasMap"},"property":{"type":"Identifier","start":38566,"end":38580,"name":"collectionName"},"computed":true,"optional":false},"right":{"type":"Identifier","start":38584,"end":38589,"name":"items"}}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":38640,"end":38656,"argument":{"type":"Identifier","start":38647,"end":38655,"name":"datasMap"}}]}}],"optional":false},{"type":"CallExpression","start":38670,"end":38739,"callee":{"type":"Identifier","start":38670,"end":38673,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":38674,"end":38738,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38675,"end":38679,"name":"data"}],"body":{"type":"BlockStatement","start":38684,"end":38738,"body":[{"type":"ReturnStatement","start":38699,"end":38727,"argument":{"type":"ObjectExpression","start":38706,"end":38726,"properties":[{"type":"SpreadElement","start":38708,"end":38715,"argument":{"type":"Identifier","start":38711,"end":38715,"name":"item"}},{"type":"SpreadElement","start":38717,"end":38724,"argument":{"type":"Identifier","start":38720,"end":38724,"name":"data"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":38863,"end":39395,"static":false,"computed":false,"key":{"type":"Identifier","start":38863,"end":38895,"name":"listenForDocDeepRecursiveHelper$"},"kind":"method","value":{"type":"FunctionExpression","start":38895,"end":39395,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":38896,"end":38902,"name":"docRef"},{"type":"AssignmentPattern","start":38904,"end":38929,"left":{"type":"Identifier","start":38904,"end":38924,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":38927,"end":38929,"elements":[]}},{"type":"AssignmentPattern","start":38931,"end":38979,"left":{"type":"Identifier","start":38931,"end":38947,"name":"actionIfNotExist"},"right":{"type":"MemberExpression","start":38950,"end":38979,"object":{"type":"Identifier","start":38950,"end":38967,"name":"DocNotExistAction"},"property":{"type":"Identifier","start":38968,"end":38979,"name":"RETURN_NULL"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":38981,"end":39395,"body":[{"type":"ReturnStatement","start":39027,"end":39388,"argument":{"type":"CallExpression","start":39034,"end":39387,"callee":{"type":"MemberExpression","start":39034,"end":39089,"object":{"type":"CallExpression","start":39034,"end":39084,"callee":{"type":"MemberExpression","start":39034,"end":39058,"object":{"type":"ThisExpression","start":39034,"end":39038},"property":{"type":"Identifier","start":39039,"end":39058,"name":"listenForDocSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39059,"end":39065,"name":"docRef"},{"type":"Identifier","start":39067,"end":39083,"name":"actionIfNotExist"}],"optional":false},"property":{"type":"Identifier","start":39085,"end":39089,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":39090,"end":39386,"callee":{"type":"Identifier","start":39090,"end":39098,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":39099,"end":39385,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":39100,"end":39104,"name":"item"}],"body":{"type":"BlockStatement","start":39109,"end":39385,"body":[{"type":"IfStatement","start":39124,"end":39193,"test":{"type":"BinaryExpression","start":39128,"end":39141,"left":{"type":"Identifier","start":39128,"end":39132,"name":"item"},"operator":"===","right":{"type":"Literal","start":39137,"end":39141,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":39143,"end":39193,"body":[{"type":"ReturnStatement","start":39162,"end":39178,"argument":{"type":"CallExpression","start":39169,"end":39177,"callee":{"type":"Identifier","start":39169,"end":39171,"name":"of"},"arguments":[{"type":"Identifier","start":39172,"end":39176,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":39207,"end":39295,"test":{"type":"BinaryExpression","start":39211,"end":39243,"left":{"type":"MemberExpression","start":39211,"end":39238,"object":{"type":"Identifier","start":39211,"end":39231,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":39232,"end":39238,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":39242,"end":39243,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":39245,"end":39295,"body":[{"type":"ReturnStatement","start":39264,"end":39280,"argument":{"type":"CallExpression","start":39271,"end":39279,"callee":{"type":"Identifier","start":39271,"end":39273,"name":"of"},"arguments":[{"type":"Identifier","start":39274,"end":39278,"name":"item"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":39309,"end":39374,"argument":{"type":"CallExpression","start":39316,"end":39373,"callee":{"type":"MemberExpression","start":39316,"end":39345,"object":{"type":"ThisExpression","start":39316,"end":39320},"property":{"type":"Identifier","start":39321,"end":39345,"name":"listenForCollectionsDeep"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":39346,"end":39350,"name":"item"},{"type":"Identifier","start":39352,"end":39372,"name":"subCollectionQueries"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":40086,"end":41967,"static":false,"computed":false,"key":{"type":"Identifier","start":40086,"end":40096,"name":"addSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":40096,"end":41967,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":40097,"end":40101,"name":"data"},{"type":"Identifier","start":40103,"end":40116,"name":"collectionRef"},{"type":"AssignmentPattern","start":40118,"end":40135,"left":{"type":"Identifier","start":40118,"end":40128,"name":"isAddDates"},"right":{"type":"Literal","start":40131,"end":40135,"value":true,"raw":"true"}},{"type":"Identifier","start":40137,"end":40139,"name":"id"}],"body":{"type":"BlockStatement","start":40141,"end":41967,"body":[{"type":"VariableDeclaration","start":40212,"end":40221,"declarations":[{"type":"VariableDeclarator","start":40216,"end":40220,"id":{"type":"Identifier","start":40216,"end":40220,"name":"res$"},"init":null}],"kind":"let"},{"type":"IfStatement","start":40231,"end":40408,"test":{"type":"Identifier","start":40235,"end":40245,"name":"isAddDates"},"consequent":{"type":"BlockStatement","start":40247,"end":40408,"body":[{"type":"VariableDeclaration","start":40262,"end":40286,"declarations":[{"type":"VariableDeclarator","start":40268,"end":40285,"id":{"type":"Identifier","start":40268,"end":40272,"name":"date"},"init":{"type":"NewExpression","start":40275,"end":40285,"callee":{"type":"Identifier","start":40279,"end":40283,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":40300,"end":40341,"expression":{"type":"AssignmentExpression","start":40300,"end":40340,"operator":"=","left":{"type":"Identifier","start":40300,"end":40304,"name":"data"},"right":{"type":"CallExpression","start":40307,"end":40340,"callee":{"type":"Identifier","start":40307,"end":40321,"name":"addCreatedDate"},"arguments":[{"type":"Identifier","start":40322,"end":40326,"name":"data"},{"type":"Literal","start":40328,"end":40333,"value":false,"raw":"false"},{"type":"Identifier","start":40335,"end":40339,"name":"date"}],"optional":false}}},{"type":"ExpressionStatement","start":40355,"end":40397,"expression":{"type":"AssignmentExpression","start":40355,"end":40396,"operator":"=","left":{"type":"Identifier","start":40355,"end":40359,"name":"data"},"right":{"type":"CallExpression","start":40362,"end":40396,"callee":{"type":"Identifier","start":40362,"end":40377,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":40378,"end":40382,"name":"data"},{"type":"Literal","start":40384,"end":40389,"value":false,"raw":"false"},{"type":"Identifier","start":40391,"end":40395,"name":"date"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":40418,"end":40644,"test":{"type":"BinaryExpression","start":40422,"end":40438,"left":{"type":"Identifier","start":40422,"end":40424,"name":"id"},"operator":"!==","right":{"type":"Identifier","start":40429,"end":40438,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":40440,"end":40563,"body":[{"type":"VariableDeclaration","start":40455,"end":40505,"declarations":[{"type":"VariableDeclarator","start":40461,"end":40504,"id":{"type":"Identifier","start":40461,"end":40467,"name":"docRef"},"init":{"type":"CallExpression","start":40470,"end":40504,"callee":{"type":"Identifier","start":40470,"end":40485,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":40486,"end":40499,"name":"collectionRef"},{"type":"Identifier","start":40501,"end":40503,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":40519,"end":40552,"expression":{"type":"AssignmentExpression","start":40519,"end":40551,"operator":"=","left":{"type":"Identifier","start":40519,"end":40523,"name":"res$"},"right":{"type":"CallExpression","start":40526,"end":40551,"callee":{"type":"MemberExpression","start":40526,"end":40537,"object":{"type":"MemberExpression","start":40526,"end":40533,"object":{"type":"ThisExpression","start":40526,"end":40530},"property":{"type":"Identifier","start":40531,"end":40533,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40534,"end":40537,"name":"set"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40538,"end":40544,"name":"docRef"},{"type":"Identifier","start":40546,"end":40550,"name":"data"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":40578,"end":40644,"body":[{"type":"ExpressionStatement","start":40593,"end":40633,"expression":{"type":"AssignmentExpression","start":40593,"end":40632,"operator":"=","left":{"type":"Identifier","start":40593,"end":40597,"name":"res$"},"right":{"type":"CallExpression","start":40600,"end":40632,"callee":{"type":"MemberExpression","start":40600,"end":40611,"object":{"type":"MemberExpression","start":40600,"end":40607,"object":{"type":"ThisExpression","start":40600,"end":40604},"property":{"type":"Identifier","start":40605,"end":40607,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":40608,"end":40611,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":40612,"end":40625,"name":"collectionRef"},{"type":"Identifier","start":40627,"end":40631,"name":"data"}],"optional":false}}}]}},{"type":"ExpressionStatement","start":40894,"end":41924,"expression":{"type":"AssignmentExpression","start":40894,"end":41923,"operator":"=","left":{"type":"Identifier","start":40894,"end":40898,"name":"res$"},"right":{"type":"CallExpression","start":40901,"end":41923,"callee":{"type":"MemberExpression","start":40901,"end":40910,"object":{"type":"Identifier","start":40901,"end":40905,"name":"res$"},"property":{"type":"Identifier","start":40906,"end":40910,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41086,"end":41922,"callee":{"type":"Identifier","start":41086,"end":41089,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":41090,"end":41921,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":41091,"end":41094,"name":"ref"}],"body":{"type":"BlockStatement","start":41099,"end":41921,"body":[{"type":"IfStatement","start":41114,"end":41910,"test":{"type":"LogicalExpression","start":41118,"end":41141,"left":{"type":"BinaryExpression","start":41118,"end":41134,"left":{"type":"Identifier","start":41118,"end":41120,"name":"id"},"operator":"===","right":{"type":"Identifier","start":41125,"end":41134,"name":"undefined"}},"operator":"&&","right":{"type":"Identifier","start":41138,"end":41141,"name":"ref"}},"consequent":{"type":"BlockStatement","start":41143,"end":41442,"body":[{"type":"VariableDeclaration","start":41162,"end":41184,"declarations":[{"type":"VariableDeclarator","start":41168,"end":41183,"id":{"type":"Identifier","start":41168,"end":41172,"name":"path"},"init":{"type":"MemberExpression","start":41175,"end":41183,"object":{"type":"Identifier","start":41175,"end":41178,"name":"ref"},"property":{"type":"Identifier","start":41179,"end":41183,"name":"path"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":41202,"end":41371,"declarations":[{"type":"VariableDeclarator","start":41208,"end":41370,"id":{"type":"Identifier","start":41208,"end":41225,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41228,"end":41370,"properties":[{"type":"Property","start":41251,"end":41261,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41251,"end":41253,"name":"id"},"value":{"type":"MemberExpression","start":41255,"end":41261,"object":{"type":"Identifier","start":41255,"end":41258,"name":"ref"},"property":{"type":"Identifier","start":41259,"end":41261,"name":"id"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":41284,"end":41288,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41284,"end":41288,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41284,"end":41288,"name":"path"}},{"type":"Property","start":41311,"end":41314,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41311,"end":41314,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41311,"end":41314,"name":"ref"}},{"type":"Property","start":41337,"end":41351,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41337,"end":41345,"name":"isExists"},"value":{"type":"Literal","start":41347,"end":41351,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41389,"end":41427,"argument":{"type":"ObjectExpression","start":41396,"end":41426,"properties":[{"type":"SpreadElement","start":41398,"end":41405,"argument":{"type":"Identifier","start":41401,"end":41405,"name":"data"}},{"type":"Property","start":41407,"end":41424,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41407,"end":41424,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41407,"end":41424,"name":"firestoreMetadata"}}]}}]},"alternate":{"type":"BlockStatement","start":41461,"end":41910,"body":[{"type":"VariableDeclaration","start":41549,"end":41592,"declarations":[{"type":"VariableDeclarator","start":41555,"end":41591,"id":{"type":"Identifier","start":41555,"end":41559,"name":"path"},"init":{"type":"BinaryExpression","start":41562,"end":41591,"left":{"type":"BinaryExpression","start":41562,"end":41586,"left":{"type":"MemberExpression","start":41562,"end":41580,"object":{"type":"Identifier","start":41562,"end":41575,"name":"collectionRef"},"property":{"type":"Identifier","start":41576,"end":41580,"name":"path"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":41583,"end":41586,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":41589,"end":41591,"name":"id"}}}],"kind":"const"},{"type":"ExpressionStatement","start":41610,"end":41656,"expression":{"type":"AssignmentExpression","start":41610,"end":41655,"operator":"=","left":{"type":"Identifier","start":41610,"end":41613,"name":"ref"},"right":{"type":"CallExpression","start":41616,"end":41655,"callee":{"type":"Identifier","start":41616,"end":41630,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":41631,"end":41635,"name":"path"},{"type":"MemberExpression","start":41637,"end":41654,"object":{"type":"MemberExpression","start":41637,"end":41644,"object":{"type":"ThisExpression","start":41637,"end":41641},"property":{"type":"Identifier","start":41642,"end":41644,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":41645,"end":41654,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":41674,"end":41839,"declarations":[{"type":"VariableDeclarator","start":41680,"end":41838,"id":{"type":"Identifier","start":41680,"end":41697,"name":"firestoreMetadata"},"init":{"type":"ObjectExpression","start":41700,"end":41838,"properties":[{"type":"Property","start":41723,"end":41729,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41723,"end":41725,"name":"id"},"value":{"type":"Identifier","start":41727,"end":41729,"name":"id"},"kind":"init"},{"type":"Property","start":41752,"end":41755,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41752,"end":41755,"name":"ref"},"kind":"init","value":{"type":"Identifier","start":41752,"end":41755,"name":"ref"}},{"type":"Property","start":41778,"end":41782,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41778,"end":41782,"name":"path"},"kind":"init","value":{"type":"Identifier","start":41778,"end":41782,"name":"path"}},{"type":"Property","start":41805,"end":41819,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":41805,"end":41813,"name":"isExists"},"value":{"type":"Literal","start":41815,"end":41819,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":41857,"end":41895,"argument":{"type":"ObjectExpression","start":41864,"end":41894,"properties":[{"type":"SpreadElement","start":41866,"end":41873,"argument":{"type":"Identifier","start":41869,"end":41873,"name":"data"}},{"type":"Property","start":41875,"end":41892,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":41875,"end":41892,"name":"firestoreMetadata"},"kind":"init","value":{"type":"Identifier","start":41875,"end":41892,"name":"firestoreMetadata"}}]}}]}}]}}],"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":41934,"end":41960,"argument":{"type":"CallExpression","start":41941,"end":41959,"callee":{"type":"MemberExpression","start":41941,"end":41950,"object":{"type":"Identifier","start":41941,"end":41945,"name":"res$"},"property":{"type":"Identifier","start":41946,"end":41950,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":41951,"end":41958,"callee":{"type":"Identifier","start":41951,"end":41955,"name":"take"},"arguments":[{"type":"Literal","start":41956,"end":41957,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":42049,"end":42252,"static":false,"computed":false,"key":{"type":"Identifier","start":42049,"end":42062,"name":"updateSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":42062,"end":42252,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42063,"end":42067,"name":"data"},{"type":"Identifier","start":42069,"end":42075,"name":"docRef"},{"type":"AssignmentPattern","start":42077,"end":42101,"left":{"type":"Identifier","start":42077,"end":42094,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42097,"end":42101,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":42103,"end":42252,"body":[{"type":"IfStatement","start":42114,"end":42199,"test":{"type":"Identifier","start":42118,"end":42135,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42137,"end":42199,"body":[{"type":"ExpressionStatement","start":42152,"end":42188,"expression":{"type":"AssignmentExpression","start":42152,"end":42187,"operator":"=","left":{"type":"Identifier","start":42152,"end":42156,"name":"data"},"right":{"type":"CallExpression","start":42159,"end":42187,"callee":{"type":"Identifier","start":42159,"end":42174,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42175,"end":42179,"name":"data"},{"type":"Literal","start":42181,"end":42186,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":42209,"end":42245,"argument":{"type":"CallExpression","start":42216,"end":42244,"callee":{"type":"MemberExpression","start":42216,"end":42230,"object":{"type":"MemberExpression","start":42216,"end":42223,"object":{"type":"ThisExpression","start":42216,"end":42220},"property":{"type":"Identifier","start":42221,"end":42223,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42224,"end":42230,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42231,"end":42237,"name":"docRef"},{"type":"Identifier","start":42239,"end":42243,"name":"data"}],"optional":false}}]}}},{"type":"MethodDefinition","start":42329,"end":43934,"static":false,"computed":false,"key":{"type":"Identifier","start":42329,"end":42352,"name":"updateDeepToBatchHelper"},"kind":"method","value":{"type":"FunctionExpression","start":42352,"end":43934,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":42353,"end":42357,"name":"data"},{"type":"Identifier","start":42359,"end":42365,"name":"docRef"},{"type":"AssignmentPattern","start":42367,"end":42392,"left":{"type":"Identifier","start":42367,"end":42387,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":42390,"end":42392,"elements":[]}},{"type":"AssignmentPattern","start":42394,"end":42418,"left":{"type":"Identifier","start":42394,"end":42411,"name":"isAddModifiedDate"},"right":{"type":"Literal","start":42414,"end":42418,"value":true,"raw":"true"}},{"type":"Identifier","start":42420,"end":42425,"name":"batch"}],"body":{"type":"BlockStatement","start":42427,"end":43934,"body":[{"type":"IfStatement","start":42438,"end":42527,"test":{"type":"BinaryExpression","start":42442,"end":42461,"left":{"type":"Identifier","start":42442,"end":42447,"name":"batch"},"operator":"===","right":{"type":"Identifier","start":42452,"end":42461,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":42463,"end":42527,"body":[{"type":"ExpressionStatement","start":42478,"end":42516,"expression":{"type":"AssignmentExpression","start":42478,"end":42515,"operator":"=","left":{"type":"Identifier","start":42478,"end":42483,"name":"batch"},"right":{"type":"CallExpression","start":42486,"end":42515,"callee":{"type":"Identifier","start":42486,"end":42496,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":42497,"end":42514,"object":{"type":"MemberExpression","start":42497,"end":42504,"object":{"type":"ThisExpression","start":42497,"end":42501},"property":{"type":"Identifier","start":42502,"end":42504,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":42505,"end":42514,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":42537,"end":42622,"test":{"type":"Identifier","start":42541,"end":42558,"name":"isAddModifiedDate"},"consequent":{"type":"BlockStatement","start":42560,"end":42622,"body":[{"type":"ExpressionStatement","start":42575,"end":42611,"expression":{"type":"AssignmentExpression","start":42575,"end":42610,"operator":"=","left":{"type":"Identifier","start":42575,"end":42579,"name":"data"},"right":{"type":"CallExpression","start":42582,"end":42610,"callee":{"type":"Identifier","start":42582,"end":42597,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":42598,"end":42602,"name":"data"},{"type":"Literal","start":42604,"end":42609,"value":false,"raw":"false"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":42632,"end":42720,"declarations":[{"type":"VariableDeclarator","start":42638,"end":42719,"id":{"type":"Identifier","start":42638,"end":42643,"name":"split"},"init":{"type":"CallExpression","start":42646,"end":42719,"callee":{"type":"MemberExpression","start":42646,"end":42691,"object":{"type":"ThisExpression","start":42646,"end":42650},"property":{"type":"Identifier","start":42651,"end":42691,"name":"splitDataIntoCurrentDocAndSubCollections"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42692,"end":42696,"name":"data"},{"type":"Identifier","start":42698,"end":42718,"name":"subCollectionWriters"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42730,"end":42766,"declarations":[{"type":"VariableDeclarator","start":42736,"end":42765,"id":{"type":"Identifier","start":42736,"end":42746,"name":"currentDoc"},"init":{"type":"MemberExpression","start":42749,"end":42765,"object":{"type":"Identifier","start":42749,"end":42754,"name":"split"},"property":{"type":"Identifier","start":42755,"end":42765,"name":"currentDoc"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":42776,"end":42820,"declarations":[{"type":"VariableDeclarator","start":42782,"end":42819,"id":{"type":"Identifier","start":42782,"end":42796,"name":"subCollections"},"init":{"type":"MemberExpression","start":42799,"end":42819,"object":{"type":"Identifier","start":42799,"end":42804,"name":"split"},"property":{"type":"Identifier","start":42805,"end":42819,"name":"subCollections"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":42883,"end":42916,"expression":{"type":"CallExpression","start":42883,"end":42915,"callee":{"type":"MemberExpression","start":42883,"end":42895,"object":{"type":"Identifier","start":42883,"end":42888,"name":"batch"},"property":{"type":"Identifier","start":42889,"end":42895,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42896,"end":42902,"name":"docRef"},{"type":"Identifier","start":42904,"end":42914,"name":"currentDoc"}],"optional":false}},{"type":"ForOfStatement","start":42926,"end":43904,"await":false,"left":{"type":"VariableDeclaration","start":42931,"end":42974,"declarations":[{"type":"VariableDeclarator","start":42937,"end":42974,"id":{"type":"ArrayPattern","start":42937,"end":42974,"elements":[{"type":"Identifier","start":42938,"end":42954,"name":"subCollectionKey"},{"type":"Identifier","start":42956,"end":42973,"name":"subDocUpdateValue"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":42978,"end":43008,"callee":{"type":"MemberExpression","start":42978,"end":42992,"object":{"type":"Identifier","start":42978,"end":42984,"name":"Object"},"property":{"type":"Identifier","start":42985,"end":42992,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":42993,"end":43007,"name":"subCollections"}],"optional":false},"body":{"type":"BlockStatement","start":43010,"end":43904,"body":[{"type":"VariableDeclaration","start":43025,"end":43053,"declarations":[{"type":"VariableDeclarator","start":43029,"end":43052,"id":{"type":"Identifier","start":43029,"end":43052,"name":"subSubCollectionWriters"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":43107,"end":43120,"declarations":[{"type":"VariableDeclarator","start":43111,"end":43119,"id":{"type":"Identifier","start":43111,"end":43119,"name":"subDocId"},"init":null}],"kind":"let"},{"type":"IfStatement","start":43134,"end":43416,"test":{"type":"Identifier","start":43138,"end":43158,"name":"subCollectionWriters"},"consequent":{"type":"BlockStatement","start":43160,"end":43416,"body":[{"type":"ExpressionStatement","start":43179,"end":43293,"expression":{"type":"AssignmentExpression","start":43179,"end":43292,"operator":"=","left":{"type":"Identifier","start":43179,"end":43202,"name":"subSubCollectionWriters"},"right":{"type":"ChainExpression","start":43205,"end":43292,"expression":{"type":"MemberExpression","start":43205,"end":43292,"object":{"type":"CallExpression","start":43205,"end":43276,"callee":{"type":"MemberExpression","start":43205,"end":43230,"object":{"type":"Identifier","start":43205,"end":43225,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43226,"end":43230,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43231,"end":43275,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43231,"end":43238,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43242,"end":43275,"left":{"type":"MemberExpression","start":43242,"end":43254,"object":{"type":"Identifier","start":43242,"end":43249,"name":"subColl"},"property":{"type":"Identifier","start":43250,"end":43254,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43259,"end":43275,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":43278,"end":43292,"name":"subCollections"},"computed":false,"optional":true}}}},{"type":"ExpressionStatement","start":43311,"end":43401,"expression":{"type":"AssignmentExpression","start":43311,"end":43400,"operator":"=","left":{"type":"Identifier","start":43311,"end":43319,"name":"subDocId"},"right":{"type":"ChainExpression","start":43322,"end":43400,"expression":{"type":"MemberExpression","start":43322,"end":43400,"object":{"type":"CallExpression","start":43322,"end":43393,"callee":{"type":"MemberExpression","start":43322,"end":43347,"object":{"type":"Identifier","start":43322,"end":43342,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":43343,"end":43347,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":43348,"end":43392,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":43348,"end":43355,"name":"subColl"}],"body":{"type":"BinaryExpression","start":43359,"end":43392,"left":{"type":"MemberExpression","start":43359,"end":43371,"object":{"type":"Identifier","start":43359,"end":43366,"name":"subColl"},"property":{"type":"Identifier","start":43367,"end":43371,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":43376,"end":43392,"name":"subCollectionKey"}}}],"optional":false},"property":{"type":"Identifier","start":43395,"end":43400,"name":"docId"},"computed":false,"optional":true}}}}]},"alternate":null},{"type":"ExpressionStatement","start":43430,"end":43495,"expression":{"type":"AssignmentExpression","start":43430,"end":43494,"operator":"=","left":{"type":"Identifier","start":43430,"end":43438,"name":"subDocId"},"right":{"type":"ConditionalExpression","start":43441,"end":43494,"test":{"type":"BinaryExpression","start":43441,"end":43463,"left":{"type":"Identifier","start":43441,"end":43449,"name":"subDocId"},"operator":"!==","right":{"type":"Identifier","start":43454,"end":43463,"name":"undefined"}},"consequent":{"type":"Identifier","start":43466,"end":43474,"name":"subDocId"},"alternate":{"type":"MemberExpression","start":43477,"end":43494,"object":{"type":"ThisExpression","start":43477,"end":43481},"property":{"type":"Identifier","start":43482,"end":43494,"name":"defaultDocId"},"computed":false,"optional":false}}}},{"type":"VariableDeclaration","start":43625,"end":43690,"declarations":[{"type":"VariableDeclarator","start":43631,"end":43689,"id":{"type":"Identifier","start":43631,"end":43644,"name":"subCollection"},"init":{"type":"CallExpression","start":43647,"end":43689,"callee":{"type":"Identifier","start":43647,"end":43663,"name":"getSubCollection"},"arguments":[{"type":"Identifier","start":43664,"end":43670,"name":"docRef"},{"type":"Identifier","start":43672,"end":43688,"name":"subCollectionKey"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":43704,"end":43762,"declarations":[{"type":"VariableDeclarator","start":43710,"end":43761,"id":{"type":"Identifier","start":43710,"end":43718,"name":"subDocFs"},"init":{"type":"CallExpression","start":43721,"end":43761,"callee":{"type":"Identifier","start":43721,"end":43736,"name":"getDocRefWithId"},"arguments":[{"type":"Identifier","start":43737,"end":43750,"name":"subCollection"},{"type":"Identifier","start":43752,"end":43760,"name":"subDocId"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":43776,"end":43893,"expression":{"type":"AssignmentExpression","start":43776,"end":43892,"operator":"=","left":{"type":"Identifier","start":43776,"end":43781,"name":"batch"},"right":{"type":"CallExpression","start":43784,"end":43892,"callee":{"type":"MemberExpression","start":43784,"end":43812,"object":{"type":"ThisExpression","start":43784,"end":43788},"property":{"type":"Identifier","start":43789,"end":43812,"name":"updateDeepToBatchHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":43813,"end":43830,"name":"subDocUpdateValue"},{"type":"Identifier","start":43832,"end":43840,"name":"subDocFs"},{"type":"Identifier","start":43842,"end":43865,"name":"subSubCollectionWriters"},{"type":"Identifier","start":43867,"end":43884,"name":"isAddModifiedDate"},{"type":"Identifier","start":43886,"end":43891,"name":"batch"}],"optional":false}}}]}},{"type":"ReturnStatement","start":43914,"end":43927,"argument":{"type":"Identifier","start":43921,"end":43926,"name":"batch"}}]}}},{"type":"MethodDefinition","start":44405,"end":46592,"static":false,"computed":false,"key":{"type":"Identifier","start":44405,"end":44442,"name":"getBatchFromTransferItemInIndexedDocs"},"kind":"method","value":{"type":"FunctionExpression","start":44442,"end":46592,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":44443,"end":44456,"name":"previousArray"},{"type":"Identifier","start":44458,"end":44470,"name":"currentArray"},{"type":"Identifier","start":44472,"end":44485,"name":"previousIndex"},{"type":"Identifier","start":44487,"end":44499,"name":"currentIndex"},{"type":"Identifier","start":44501,"end":44517,"name":"currentArrayName"},{"type":"Identifier","start":44519,"end":44550,"name":"additionalDataUpdateOnMovedItem"},{"type":"AssignmentPattern","start":44552,"end":44590,"left":{"type":"Identifier","start":44552,"end":44583,"name":"isUpdateModifiedDateOnMovedItem"},"right":{"type":"Literal","start":44586,"end":44590,"value":true,"raw":"true"}},{"type":"AssignmentPattern","start":44592,"end":44607,"left":{"type":"Identifier","start":44592,"end":44599,"name":"useCopy"},"right":{"type":"Literal","start":44602,"end":44607,"value":false,"raw":"false"}}],"body":{"type":"BlockStatement","start":44609,"end":46592,"body":[{"type":"VariableDeclaration","start":44620,"end":44642,"declarations":[{"type":"VariableDeclarator","start":44624,"end":44641,"id":{"type":"Identifier","start":44624,"end":44641,"name":"usedPreviousArray"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":44652,"end":44673,"declarations":[{"type":"VariableDeclarator","start":44656,"end":44672,"id":{"type":"Identifier","start":44656,"end":44672,"name":"usedCurrentArray"},"init":null}],"kind":"let"},{"type":"IfStatement","start":44683,"end":44961,"test":{"type":"Identifier","start":44687,"end":44694,"name":"useCopy"},"consequent":{"type":"BlockStatement","start":44696,"end":44840,"body":[{"type":"ExpressionStatement","start":44711,"end":44764,"expression":{"type":"AssignmentExpression","start":44711,"end":44763,"operator":"=","left":{"type":"Identifier","start":44711,"end":44728,"name":"usedPreviousArray"},"right":{"type":"CallExpression","start":44731,"end":44763,"callee":{"type":"MemberExpression","start":44731,"end":44744,"object":{"type":"Identifier","start":44731,"end":44737,"name":"Object"},"property":{"type":"Identifier","start":44738,"end":44744,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44745,"end":44747,"elements":[]},{"type":"Identifier","start":44749,"end":44762,"name":"previousArray"}],"optional":false}}},{"type":"ExpressionStatement","start":44778,"end":44829,"expression":{"type":"AssignmentExpression","start":44778,"end":44828,"operator":"=","left":{"type":"Identifier","start":44778,"end":44794,"name":"usedCurrentArray"},"right":{"type":"CallExpression","start":44797,"end":44828,"callee":{"type":"MemberExpression","start":44797,"end":44810,"object":{"type":"Identifier","start":44797,"end":44803,"name":"Object"},"property":{"type":"Identifier","start":44804,"end":44810,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ArrayExpression","start":44811,"end":44813,"elements":[]},{"type":"Identifier","start":44815,"end":44827,"name":"currentArray"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":44855,"end":44961,"body":[{"type":"ExpressionStatement","start":44870,"end":44904,"expression":{"type":"AssignmentExpression","start":44870,"end":44903,"operator":"=","left":{"type":"Identifier","start":44870,"end":44887,"name":"usedPreviousArray"},"right":{"type":"Identifier","start":44890,"end":44903,"name":"previousArray"}}},{"type":"ExpressionStatement","start":44918,"end":44950,"expression":{"type":"AssignmentExpression","start":44918,"end":44949,"operator":"=","left":{"type":"Identifier","start":44918,"end":44934,"name":"usedCurrentArray"},"right":{"type":"Identifier","start":44937,"end":44949,"name":"currentArray"}}}]}},{"type":"ExpressionStatement","start":44971,"end":45055,"expression":{"type":"CallExpression","start":44971,"end":45054,"callee":{"type":"Identifier","start":44971,"end":44988,"name":"transferArrayItem"},"arguments":[{"type":"Identifier","start":44989,"end":45006,"name":"usedPreviousArray"},{"type":"Identifier","start":45008,"end":45024,"name":"usedCurrentArray"},{"type":"Identifier","start":45026,"end":45039,"name":"previousIndex"},{"type":"Identifier","start":45041,"end":45053,"name":"currentIndex"}],"optional":false}},{"type":"VariableDeclaration","start":45065,"end":45109,"declarations":[{"type":"VariableDeclarator","start":45071,"end":45108,"id":{"type":"Identifier","start":45071,"end":45076,"name":"batch"},"init":{"type":"CallExpression","start":45079,"end":45108,"callee":{"type":"Identifier","start":45079,"end":45089,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":45090,"end":45107,"object":{"type":"MemberExpression","start":45090,"end":45097,"object":{"type":"ThisExpression","start":45090,"end":45094},"property":{"type":"Identifier","start":45095,"end":45097,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45098,"end":45107,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":45119,"end":45827,"test":{"type":"BinaryExpression","start":45123,"end":45168,"left":{"type":"Identifier","start":45123,"end":45154,"name":"additionalDataUpdateOnMovedItem"},"operator":"!==","right":{"type":"Identifier","start":45159,"end":45168,"name":"undefined"}},"consequent":{"type":"BlockStatement","start":45170,"end":45827,"body":[{"type":"VariableDeclaration","start":45185,"end":45234,"declarations":[{"type":"VariableDeclarator","start":45191,"end":45233,"id":{"type":"Identifier","start":45191,"end":45200,"name":"movedItem"},"init":{"type":"MemberExpression","start":45203,"end":45233,"object":{"type":"Identifier","start":45203,"end":45219,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45220,"end":45232,"name":"currentIndex"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45248,"end":45301,"declarations":[{"type":"VariableDeclarator","start":45254,"end":45300,"id":{"type":"Identifier","start":45254,"end":45266,"name":"movedItemRef"},"init":{"type":"MemberExpression","start":45269,"end":45300,"object":{"type":"MemberExpression","start":45269,"end":45296,"object":{"type":"Identifier","start":45269,"end":45278,"name":"movedItem"},"property":{"type":"Identifier","start":45279,"end":45296,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":45297,"end":45300,"name":"ref"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45315,"end":45396,"declarations":[{"type":"VariableDeclarator","start":45321,"end":45395,"id":{"type":"Identifier","start":45321,"end":45325,"name":"data"},"init":{"type":"ObjectExpression","start":45328,"end":45395,"properties":[{"type":"SpreadElement","start":45330,"end":45364,"argument":{"type":"Identifier","start":45333,"end":45364,"name":"additionalDataUpdateOnMovedItem"}},{"type":"Property","start":45366,"end":45393,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":45366,"end":45375,"name":"groupName"},"value":{"type":"Identifier","start":45377,"end":45393,"name":"currentArrayName"},"kind":"init"}]}}],"kind":"const"},{"type":"IfStatement","start":45410,"end":45495,"test":{"type":"UnaryExpression","start":45414,"end":45422,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45415,"end":45422,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45424,"end":45495,"body":[{"type":"ExpressionStatement","start":45443,"end":45480,"expression":{"type":"CallExpression","start":45443,"end":45479,"callee":{"type":"Identifier","start":45443,"end":45456,"name":"addDataToItem"},"arguments":[{"type":"Identifier","start":45457,"end":45466,"name":"movedItem"},{"type":"Identifier","start":45468,"end":45472,"name":"data"},{"type":"Literal","start":45474,"end":45478,"value":true,"raw":"true"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":45509,"end":45769,"test":{"type":"Identifier","start":45513,"end":45544,"name":"isUpdateModifiedDateOnMovedItem"},"consequent":{"type":"BlockStatement","start":45546,"end":45769,"body":[{"type":"VariableDeclaration","start":45565,"end":45589,"declarations":[{"type":"VariableDeclarator","start":45571,"end":45588,"id":{"type":"Identifier","start":45571,"end":45575,"name":"date"},"init":{"type":"NewExpression","start":45578,"end":45588,"callee":{"type":"Identifier","start":45582,"end":45586,"name":"Date"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":45607,"end":45641,"expression":{"type":"CallExpression","start":45607,"end":45640,"callee":{"type":"Identifier","start":45607,"end":45622,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45623,"end":45627,"name":"data"},{"type":"Literal","start":45629,"end":45633,"value":true,"raw":"true"},{"type":"Identifier","start":45635,"end":45639,"name":"date"}],"optional":false}},{"type":"IfStatement","start":45659,"end":45754,"test":{"type":"UnaryExpression","start":45663,"end":45671,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":45664,"end":45671,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":45673,"end":45754,"body":[{"type":"ExpressionStatement","start":45696,"end":45735,"expression":{"type":"CallExpression","start":45696,"end":45734,"callee":{"type":"Identifier","start":45696,"end":45711,"name":"addModifiedDate"},"arguments":[{"type":"Identifier","start":45712,"end":45721,"name":"movedItem"},{"type":"Literal","start":45723,"end":45727,"value":true,"raw":"true"},{"type":"Identifier","start":45729,"end":45733,"name":"date"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":45783,"end":45816,"expression":{"type":"CallExpression","start":45783,"end":45815,"callee":{"type":"MemberExpression","start":45783,"end":45795,"object":{"type":"Identifier","start":45783,"end":45788,"name":"batch"},"property":{"type":"Identifier","start":45789,"end":45795,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45796,"end":45808,"name":"movedItemRef"},{"type":"Identifier","start":45810,"end":45814,"name":"data"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":45837,"end":45908,"declarations":[{"type":"VariableDeclarator","start":45843,"end":45907,"id":{"type":"Identifier","start":45843,"end":45868,"name":"currentArraySliceToUpdate"},"init":{"type":"CallExpression","start":45871,"end":45907,"callee":{"type":"MemberExpression","start":45871,"end":45893,"object":{"type":"Identifier","start":45871,"end":45887,"name":"usedCurrentArray"},"property":{"type":"Identifier","start":45888,"end":45893,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":45894,"end":45906,"name":"currentIndex"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":45918,"end":45939,"declarations":[{"type":"VariableDeclarator","start":45922,"end":45938,"id":{"type":"Identifier","start":45922,"end":45923,"name":"i"},"init":{"type":"Identifier","start":45926,"end":45938,"name":"currentIndex"}}],"kind":"let"},{"type":"ForOfStatement","start":45949,"end":46198,"await":false,"left":{"type":"VariableDeclaration","start":45954,"end":45964,"declarations":[{"type":"VariableDeclarator","start":45960,"end":45964,"id":{"type":"Identifier","start":45960,"end":45964,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":45968,"end":45993,"name":"currentArraySliceToUpdate"},"body":{"type":"BlockStatement","start":45995,"end":46198,"body":[{"type":"ExpressionStatement","start":46037,"end":46092,"expression":{"type":"CallExpression","start":46037,"end":46091,"callee":{"type":"MemberExpression","start":46037,"end":46049,"object":{"type":"Identifier","start":46037,"end":46042,"name":"batch"},"property":{"type":"Identifier","start":46043,"end":46049,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46050,"end":46076,"object":{"type":"MemberExpression","start":46050,"end":46072,"object":{"type":"Identifier","start":46050,"end":46054,"name":"item"},"property":{"type":"Identifier","start":46055,"end":46072,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46073,"end":46076,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46078,"end":46090,"properties":[{"type":"Property","start":46080,"end":46088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46080,"end":46085,"name":"index"},"value":{"type":"Identifier","start":46087,"end":46088,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46106,"end":46169,"test":{"type":"UnaryExpression","start":46110,"end":46118,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46111,"end":46118,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46120,"end":46169,"body":[{"type":"ExpressionStatement","start":46139,"end":46154,"expression":{"type":"AssignmentExpression","start":46139,"end":46153,"operator":"=","left":{"type":"MemberExpression","start":46139,"end":46149,"object":{"type":"Identifier","start":46139,"end":46143,"name":"item"},"property":{"type":"Identifier","start":46144,"end":46149,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46152,"end":46153,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46183,"end":46187,"expression":{"type":"UpdateExpression","start":46183,"end":46186,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46183,"end":46184,"name":"i"}}}]}},{"type":"VariableDeclaration","start":46208,"end":46278,"declarations":[{"type":"VariableDeclarator","start":46214,"end":46277,"id":{"type":"Identifier","start":46214,"end":46236,"name":"prevArraySliceToUpdate"},"init":{"type":"CallExpression","start":46239,"end":46277,"callee":{"type":"MemberExpression","start":46239,"end":46262,"object":{"type":"Identifier","start":46239,"end":46256,"name":"usedPreviousArray"},"property":{"type":"Identifier","start":46257,"end":46262,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46263,"end":46276,"name":"previousIndex"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":46288,"end":46306,"expression":{"type":"AssignmentExpression","start":46288,"end":46305,"operator":"=","left":{"type":"Identifier","start":46288,"end":46289,"name":"i"},"right":{"type":"Identifier","start":46292,"end":46305,"name":"previousIndex"}}},{"type":"ForOfStatement","start":46316,"end":46562,"await":false,"left":{"type":"VariableDeclaration","start":46321,"end":46331,"declarations":[{"type":"VariableDeclarator","start":46327,"end":46331,"id":{"type":"Identifier","start":46327,"end":46331,"name":"item"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":46335,"end":46357,"name":"prevArraySliceToUpdate"},"body":{"type":"BlockStatement","start":46359,"end":46562,"body":[{"type":"ExpressionStatement","start":46401,"end":46456,"expression":{"type":"CallExpression","start":46401,"end":46455,"callee":{"type":"MemberExpression","start":46401,"end":46413,"object":{"type":"Identifier","start":46401,"end":46406,"name":"batch"},"property":{"type":"Identifier","start":46407,"end":46413,"name":"update"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":46414,"end":46440,"object":{"type":"MemberExpression","start":46414,"end":46436,"object":{"type":"Identifier","start":46414,"end":46418,"name":"item"},"property":{"type":"Identifier","start":46419,"end":46436,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46437,"end":46440,"name":"ref"},"computed":false,"optional":false},{"type":"ObjectExpression","start":46442,"end":46454,"properties":[{"type":"Property","start":46444,"end":46452,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":46444,"end":46449,"name":"index"},"value":{"type":"Identifier","start":46451,"end":46452,"name":"i"},"kind":"init"}]}],"optional":false}},{"type":"IfStatement","start":46470,"end":46533,"test":{"type":"UnaryExpression","start":46474,"end":46482,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":46475,"end":46482,"name":"useCopy"}},"consequent":{"type":"BlockStatement","start":46484,"end":46533,"body":[{"type":"ExpressionStatement","start":46503,"end":46518,"expression":{"type":"AssignmentExpression","start":46503,"end":46517,"operator":"=","left":{"type":"MemberExpression","start":46503,"end":46513,"object":{"type":"Identifier","start":46503,"end":46507,"name":"item"},"property":{"type":"Identifier","start":46508,"end":46513,"name":"index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":46516,"end":46517,"name":"i"}}}]},"alternate":null},{"type":"ExpressionStatement","start":46547,"end":46551,"expression":{"type":"UpdateExpression","start":46547,"end":46550,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":46547,"end":46548,"name":"i"}}}]}},{"type":"ReturnStatement","start":46572,"end":46585,"argument":{"type":"Identifier","start":46579,"end":46584,"name":"batch"}}]}}},{"type":"MethodDefinition","start":46725,"end":46873,"static":false,"computed":false,"key":{"type":"Identifier","start":46725,"end":46746,"name":"deleteMultipleSimple$"},"kind":"method","value":{"type":"FunctionExpression","start":46746,"end":46873,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46747,"end":46754,"name":"docRefs"}],"body":{"type":"BlockStatement","start":46756,"end":46873,"body":[{"type":"VariableDeclaration","start":46767,"end":46824,"declarations":[{"type":"VariableDeclarator","start":46773,"end":46823,"id":{"type":"Identifier","start":46773,"end":46778,"name":"batch"},"init":{"type":"CallExpression","start":46781,"end":46823,"callee":{"type":"MemberExpression","start":46781,"end":46814,"object":{"type":"ThisExpression","start":46781,"end":46785},"property":{"type":"Identifier","start":46786,"end":46814,"name":"getDeleteMultipleSimpleBatch"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46815,"end":46822,"name":"docRefs"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":46834,"end":46866,"argument":{"type":"CallExpression","start":46841,"end":46865,"callee":{"type":"MemberExpression","start":46841,"end":46858,"object":{"type":"ThisExpression","start":46841,"end":46845},"property":{"type":"Identifier","start":46846,"end":46858,"name":"batchCommit$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":46859,"end":46864,"name":"batch"}],"optional":false}}]}}},{"type":"MethodDefinition","start":46879,"end":47074,"static":false,"computed":false,"key":{"type":"Identifier","start":46879,"end":46907,"name":"getDeleteMultipleSimpleBatch"},"kind":"method","value":{"type":"FunctionExpression","start":46907,"end":47074,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46908,"end":46915,"name":"docRefs"},{"type":"AssignmentPattern","start":46917,"end":46954,"left":{"type":"Identifier","start":46917,"end":46922,"name":"batch"},"right":{"type":"CallExpression","start":46925,"end":46954,"callee":{"type":"Identifier","start":46925,"end":46935,"name":"writeBatch"},"arguments":[{"type":"MemberExpression","start":46936,"end":46953,"object":{"type":"MemberExpression","start":46936,"end":46943,"object":{"type":"ThisExpression","start":46936,"end":46940},"property":{"type":"Identifier","start":46941,"end":46943,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":46944,"end":46953,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"body":{"type":"BlockStatement","start":46956,"end":47074,"body":[{"type":"ExpressionStatement","start":46967,"end":47044,"expression":{"type":"CallExpression","start":46967,"end":47043,"callee":{"type":"MemberExpression","start":46967,"end":46982,"object":{"type":"Identifier","start":46967,"end":46974,"name":"docRefs"},"property":{"type":"Identifier","start":46975,"end":46982,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":46983,"end":47042,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":46984,"end":46990,"name":"docRef"}],"body":{"type":"BlockStatement","start":46995,"end":47042,"body":[{"type":"ExpressionStatement","start":47010,"end":47031,"expression":{"type":"CallExpression","start":47010,"end":47030,"callee":{"type":"MemberExpression","start":47010,"end":47022,"object":{"type":"Identifier","start":47010,"end":47015,"name":"batch"},"property":{"type":"Identifier","start":47016,"end":47022,"name":"delete"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47023,"end":47029,"name":"docRef"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":47054,"end":47067,"argument":{"type":"Identifier","start":47061,"end":47066,"name":"batch"}}]}}},{"type":"MethodDefinition","start":47361,"end":49040,"static":false,"computed":false,"key":{"type":"Identifier","start":47361,"end":47392,"name":"removeDataExtrasRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":47392,"end":49040,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47393,"end":47399,"name":"dbItem"},{"type":"AssignmentPattern","start":47401,"end":47426,"left":{"type":"Identifier","start":47401,"end":47421,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":47424,"end":47426,"elements":[]}},{"type":"AssignmentPattern","start":47428,"end":47457,"left":{"type":"Identifier","start":47428,"end":47452,"name":"additionalFieldsToRemove"},"right":{"type":"ArrayExpression","start":47455,"end":47457,"elements":[]}}],"body":{"type":"BlockStatement","start":47459,"end":49040,"body":[{"type":"VariableDeclaration","start":47567,"end":47649,"declarations":[{"type":"VariableDeclarator","start":47573,"end":47648,"id":{"type":"Identifier","start":47573,"end":47591,"name":"extraPropertyNames"},"init":{"type":"CallExpression","start":47594,"end":47648,"callee":{"type":"MemberExpression","start":47594,"end":47622,"object":{"type":"ArrayExpression","start":47594,"end":47615,"elements":[{"type":"Literal","start":47595,"end":47614,"value":"firestoreMetadata","raw":"'firestoreMetadata'"}]},"property":{"type":"Identifier","start":47616,"end":47622,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":47623,"end":47647,"name":"additionalFieldsToRemove"}],"optional":false}}],"kind":"const"},{"type":"ForOfStatement","start":47695,"end":47806,"await":false,"left":{"type":"VariableDeclaration","start":47700,"end":47723,"declarations":[{"type":"VariableDeclarator","start":47706,"end":47723,"id":{"type":"Identifier","start":47706,"end":47723,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":47727,"end":47745,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":47747,"end":47806,"body":[{"type":"ExpressionStatement","start":47762,"end":47795,"expression":{"type":"UnaryExpression","start":47762,"end":47794,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":47769,"end":47794,"object":{"type":"Identifier","start":47769,"end":47775,"name":"dbItem"},"property":{"type":"Identifier","start":47776,"end":47793,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}},{"type":"ExpressionStatement","start":47816,"end":49009,"expression":{"type":"CallExpression","start":47816,"end":49008,"callee":{"type":"MemberExpression","start":47816,"end":47844,"object":{"type":"Identifier","start":47816,"end":47836,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":47837,"end":47844,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":47845,"end":49007,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":47845,"end":47848,"name":"col"}],"body":{"type":"BlockStatement","start":47852,"end":49007,"body":[{"type":"IfStatement","start":47867,"end":48996,"test":{"type":"CallExpression","start":47871,"end":47902,"callee":{"type":"MemberExpression","start":47871,"end":47884,"object":{"type":"Identifier","start":47871,"end":47876,"name":"Array"},"property":{"type":"Identifier","start":47877,"end":47884,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":47885,"end":47901,"object":{"type":"Identifier","start":47885,"end":47891,"name":"dbItem"},"property":{"type":"MemberExpression","start":47892,"end":47900,"object":{"type":"Identifier","start":47892,"end":47895,"name":"col"},"property":{"type":"Identifier","start":47896,"end":47900,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":47904,"end":48532,"body":[{"type":"VariableDeclaration","start":47977,"end":48007,"declarations":[{"type":"VariableDeclarator","start":47983,"end":48006,"id":{"type":"Identifier","start":47983,"end":47987,"name":"docs"},"init":{"type":"MemberExpression","start":47990,"end":48006,"object":{"type":"Identifier","start":47990,"end":47996,"name":"dbItem"},"property":{"type":"MemberExpression","start":47997,"end":48005,"object":{"type":"Identifier","start":47997,"end":48000,"name":"col"},"property":{"type":"Identifier","start":48001,"end":48005,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":48025,"end":48517,"expression":{"type":"CallExpression","start":48025,"end":48516,"callee":{"type":"MemberExpression","start":48025,"end":48037,"object":{"type":"Identifier","start":48025,"end":48029,"name":"docs"},"property":{"type":"Identifier","start":48030,"end":48037,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":48038,"end":48515,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":48039,"end":48040,"name":"d"},{"type":"Identifier","start":48042,"end":48043,"name":"i"}],"body":{"type":"BlockStatement","start":48048,"end":48515,"body":[{"type":"IfStatement","start":48071,"end":48496,"test":{"type":"MemberExpression","start":48075,"end":48093,"object":{"type":"Identifier","start":48075,"end":48078,"name":"col"},"property":{"type":"Identifier","start":48079,"end":48093,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48095,"end":48231,"body":[{"type":"ExpressionStatement","start":48122,"end":48208,"expression":{"type":"CallExpression","start":48122,"end":48207,"callee":{"type":"MemberExpression","start":48122,"end":48158,"object":{"type":"ThisExpression","start":48122,"end":48126},"property":{"type":"Identifier","start":48127,"end":48158,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":48159,"end":48160,"name":"d"},{"type":"MemberExpression","start":48162,"end":48180,"object":{"type":"Identifier","start":48162,"end":48165,"name":"col"},"property":{"type":"Identifier","start":48166,"end":48180,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48182,"end":48206,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48258,"end":48496,"body":[{"type":"ForOfStatement","start":48317,"end":48473,"await":false,"left":{"type":"VariableDeclaration","start":48322,"end":48345,"declarations":[{"type":"VariableDeclarator","start":48328,"end":48345,"id":{"type":"Identifier","start":48328,"end":48345,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48349,"end":48367,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48369,"end":48473,"body":[{"type":"ExpressionStatement","start":48400,"end":48446,"expression":{"type":"UnaryExpression","start":48400,"end":48445,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48407,"end":48445,"object":{"type":"MemberExpression","start":48407,"end":48426,"object":{"type":"MemberExpression","start":48407,"end":48423,"object":{"type":"Identifier","start":48407,"end":48413,"name":"dbItem"},"property":{"type":"MemberExpression","start":48414,"end":48422,"object":{"type":"Identifier","start":48414,"end":48417,"name":"col"},"property":{"type":"Identifier","start":48418,"end":48422,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48424,"end":48425,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":48427,"end":48444,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48551,"end":48996,"body":[{"type":"IfStatement","start":48604,"end":48981,"test":{"type":"MemberExpression","start":48608,"end":48626,"object":{"type":"Identifier","start":48608,"end":48611,"name":"col"},"property":{"type":"Identifier","start":48612,"end":48626,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":48628,"end":48771,"body":[{"type":"ExpressionStatement","start":48651,"end":48752,"expression":{"type":"CallExpression","start":48651,"end":48751,"callee":{"type":"MemberExpression","start":48651,"end":48687,"object":{"type":"ThisExpression","start":48651,"end":48655},"property":{"type":"Identifier","start":48656,"end":48687,"name":"removeDataExtrasRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":48688,"end":48704,"object":{"type":"Identifier","start":48688,"end":48694,"name":"dbItem"},"property":{"type":"MemberExpression","start":48695,"end":48703,"object":{"type":"Identifier","start":48695,"end":48698,"name":"col"},"property":{"type":"Identifier","start":48699,"end":48703,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},{"type":"MemberExpression","start":48706,"end":48724,"object":{"type":"Identifier","start":48706,"end":48709,"name":"col"},"property":{"type":"Identifier","start":48710,"end":48724,"name":"subCollections"},"computed":false,"optional":false},{"type":"Identifier","start":48726,"end":48750,"name":"additionalFieldsToRemove"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":48794,"end":48981,"body":[{"type":"ForOfStatement","start":48817,"end":48962,"await":false,"left":{"type":"VariableDeclaration","start":48822,"end":48845,"declarations":[{"type":"VariableDeclarator","start":48828,"end":48845,"id":{"type":"Identifier","start":48828,"end":48845,"name":"extraPropertyName"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":48849,"end":48867,"name":"extraPropertyNames"},"body":{"type":"BlockStatement","start":48869,"end":48962,"body":[{"type":"ExpressionStatement","start":48896,"end":48939,"expression":{"type":"UnaryExpression","start":48896,"end":48938,"operator":"delete","prefix":true,"argument":{"type":"MemberExpression","start":48903,"end":48938,"object":{"type":"MemberExpression","start":48903,"end":48919,"object":{"type":"Identifier","start":48903,"end":48909,"name":"dbItem"},"property":{"type":"MemberExpression","start":48910,"end":48918,"object":{"type":"Identifier","start":48910,"end":48913,"name":"col"},"property":{"type":"Identifier","start":48914,"end":48918,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false},"property":{"type":"Identifier","start":48920,"end":48937,"name":"extraPropertyName"},"computed":true,"optional":false}}}]}}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":49019,"end":49033,"argument":{"type":"Identifier","start":49026,"end":49032,"name":"dbItem"}}]}}},{"type":"MethodDefinition","start":49366,"end":49722,"static":false,"computed":false,"key":{"type":"Identifier","start":49366,"end":49392,"name":"getDocumentReferencesDeep$"},"kind":"method","value":{"type":"FunctionExpression","start":49392,"end":49722,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49393,"end":49396,"name":"ref"},{"type":"AssignmentPattern","start":49398,"end":49423,"left":{"type":"Identifier","start":49398,"end":49418,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49421,"end":49423,"elements":[]}}],"body":{"type":"BlockStatement","start":49425,"end":49722,"body":[{"type":"IfStatement","start":49436,"end":49715,"test":{"type":"BinaryExpression","start":49440,"end":49472,"left":{"type":"Identifier","start":49440,"end":49443,"name":"ref"},"operator":"instanceof","right":{"type":"Identifier","start":49455,"end":49472,"name":"DocumentReference"}},"consequent":{"type":"BlockStatement","start":49474,"end":49572,"body":[{"type":"ReturnStatement","start":49489,"end":49561,"argument":{"type":"CallExpression","start":49496,"end":49560,"callee":{"type":"MemberExpression","start":49496,"end":49533,"object":{"type":"ThisExpression","start":49496,"end":49500},"property":{"type":"Identifier","start":49501,"end":49533,"name":"getDocumentReferencesFromDocRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49534,"end":49537,"name":"ref"},{"type":"Identifier","start":49539,"end":49559,"name":"subCollectionQueries"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":49587,"end":49715,"body":[{"type":"ReturnStatement","start":49625,"end":49704,"argument":{"type":"CallExpression","start":49632,"end":49703,"callee":{"type":"MemberExpression","start":49632,"end":49676,"object":{"type":"ThisExpression","start":49632,"end":49636},"property":{"type":"Identifier","start":49637,"end":49676,"name":"getDocumentReferencesFromCollectionRef$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49677,"end":49680,"name":"ref"},{"type":"Identifier","start":49682,"end":49702,"name":"subCollectionQueries"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":49728,"end":50163,"static":false,"computed":false,"key":{"type":"Identifier","start":49728,"end":49760,"name":"getDocumentReferencesFromDocRef$"},"kind":"method","value":{"type":"FunctionExpression","start":49760,"end":50163,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":49761,"end":49767,"name":"docRef"},{"type":"AssignmentPattern","start":49769,"end":49794,"left":{"type":"Identifier","start":49769,"end":49789,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":49792,"end":49794,"elements":[]}}],"body":{"type":"BlockStatement","start":49796,"end":50163,"body":[{"type":"ReturnStatement","start":49807,"end":50156,"argument":{"type":"CallExpression","start":49814,"end":50155,"callee":{"type":"MemberExpression","start":49814,"end":49867,"object":{"type":"CallExpression","start":49814,"end":49862,"callee":{"type":"MemberExpression","start":49814,"end":49832,"object":{"type":"ThisExpression","start":49814,"end":49818},"property":{"type":"Identifier","start":49819,"end":49832,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49833,"end":49839,"name":"docRef"},{"type":"Identifier","start":49841,"end":49861,"name":"subCollectionQueries"}],"optional":false},"property":{"type":"Identifier","start":49863,"end":49867,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":49868,"end":49875,"callee":{"type":"Identifier","start":49868,"end":49872,"name":"take"},"arguments":[{"type":"Literal","start":49873,"end":49874,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":49877,"end":49958,"callee":{"type":"Identifier","start":49877,"end":49880,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":49881,"end":49957,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":49881,"end":49885,"name":"item"}],"body":{"type":"CallExpression","start":49889,"end":49957,"callee":{"type":"MemberExpression","start":49889,"end":49929,"object":{"type":"ThisExpression","start":49889,"end":49893},"property":{"type":"Identifier","start":49894,"end":49929,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":49930,"end":49934,"name":"item"},{"type":"Identifier","start":49936,"end":49956,"name":"subCollectionQueries"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":50022,"end":50154,"callee":{"type":"Identifier","start":50022,"end":50025,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50026,"end":50153,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50027,"end":50035,"name":"pathList"}],"body":{"type":"BlockStatement","start":50040,"end":50153,"body":[{"type":"ReturnStatement","start":50055,"end":50142,"argument":{"type":"CallExpression","start":50062,"end":50141,"callee":{"type":"MemberExpression","start":50062,"end":50092,"object":{"type":"Identifier","start":50062,"end":50070,"name":"pathList"},"property":{"type":"Identifier","start":50089,"end":50092,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50093,"end":50140,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50093,"end":50097,"name":"path"}],"body":{"type":"CallExpression","start":50101,"end":50140,"callee":{"type":"Identifier","start":50101,"end":50115,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50116,"end":50120,"name":"path"},{"type":"MemberExpression","start":50122,"end":50139,"object":{"type":"MemberExpression","start":50122,"end":50129,"object":{"type":"ThisExpression","start":50122,"end":50126},"property":{"type":"Identifier","start":50127,"end":50129,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50130,"end":50139,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":50169,"end":50985,"static":false,"computed":false,"key":{"type":"Identifier","start":50169,"end":50208,"name":"getDocumentReferencesFromCollectionRef$"},"kind":"method","value":{"type":"FunctionExpression","start":50208,"end":50985,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50209,"end":50222,"name":"collectionRef"},{"type":"AssignmentPattern","start":50224,"end":50249,"left":{"type":"Identifier","start":50224,"end":50244,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":50247,"end":50249,"elements":[]}}],"body":{"type":"BlockStatement","start":50251,"end":50985,"body":[{"type":"ReturnStatement","start":50262,"end":50978,"argument":{"type":"CallExpression","start":50269,"end":50977,"callee":{"type":"MemberExpression","start":50269,"end":50320,"object":{"type":"CallExpression","start":50269,"end":50315,"callee":{"type":"MemberExpression","start":50269,"end":50300,"object":{"type":"ThisExpression","start":50269,"end":50273},"property":{"type":"Identifier","start":50274,"end":50300,"name":"listenForCollectionSimple$"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50301,"end":50314,"name":"collectionRef"}],"optional":false},"property":{"type":"Identifier","start":50316,"end":50320,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50354,"end":50361,"callee":{"type":"Identifier","start":50354,"end":50358,"name":"take"},"arguments":[{"type":"Literal","start":50359,"end":50360,"value":1,"raw":"1"}],"optional":false},{"type":"CallExpression","start":50363,"end":50593,"callee":{"type":"Identifier","start":50363,"end":50371,"name":"mergeMap"},"arguments":[{"type":"ArrowFunctionExpression","start":50372,"end":50592,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50373,"end":50378,"name":"items"}],"body":{"type":"BlockStatement","start":50383,"end":50592,"body":[{"type":"VariableDeclaration","start":50398,"end":50415,"declarations":[{"type":"VariableDeclarator","start":50402,"end":50414,"id":{"type":"Identifier","start":50402,"end":50414,"name":"docListeners"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":50429,"end":50532,"expression":{"type":"AssignmentExpression","start":50429,"end":50531,"operator":"=","left":{"type":"Identifier","start":50429,"end":50441,"name":"docListeners"},"right":{"type":"CallExpression","start":50444,"end":50531,"callee":{"type":"MemberExpression","start":50444,"end":50453,"object":{"type":"Identifier","start":50444,"end":50449,"name":"items"},"property":{"type":"Identifier","start":50450,"end":50453,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50454,"end":50530,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50454,"end":50458,"name":"item"}],"body":{"type":"CallExpression","start":50462,"end":50530,"callee":{"type":"MemberExpression","start":50462,"end":50480,"object":{"type":"ThisExpression","start":50462,"end":50466},"property":{"type":"Identifier","start":50467,"end":50480,"name":"listenForDoc$"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":50481,"end":50507,"object":{"type":"MemberExpression","start":50481,"end":50503,"object":{"type":"Identifier","start":50481,"end":50485,"name":"item"},"property":{"type":"Identifier","start":50486,"end":50503,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50504,"end":50507,"name":"ref"},"computed":false,"optional":false},{"type":"Identifier","start":50509,"end":50529,"name":"subCollectionQueries"}],"optional":false}}],"optional":false}}},{"type":"ReturnStatement","start":50546,"end":50581,"argument":{"type":"CallExpression","start":50553,"end":50580,"callee":{"type":"Identifier","start":50553,"end":50566,"name":"combineLatest"},"arguments":[{"type":"Identifier","start":50567,"end":50579,"name":"docListeners"}],"optional":false}}]}}],"optional":false},{"type":"CallExpression","start":50595,"end":50842,"callee":{"type":"Identifier","start":50595,"end":50598,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50599,"end":50841,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50600,"end":50605,"name":"items"}],"body":{"type":"BlockStatement","start":50610,"end":50841,"body":[{"type":"VariableDeclaration","start":50625,"end":50640,"declarations":[{"type":"VariableDeclarator","start":50629,"end":50639,"id":{"type":"Identifier","start":50629,"end":50634,"name":"paths"},"init":{"type":"ArrayExpression","start":50637,"end":50639,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":50654,"end":50803,"expression":{"type":"CallExpression","start":50654,"end":50802,"callee":{"type":"MemberExpression","start":50654,"end":50667,"object":{"type":"Identifier","start":50654,"end":50659,"name":"items"},"property":{"type":"Identifier","start":50660,"end":50667,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50668,"end":50801,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50668,"end":50672,"name":"item"}],"body":{"type":"BlockStatement","start":50676,"end":50801,"body":[{"type":"ExpressionStatement","start":50695,"end":50786,"expression":{"type":"AssignmentExpression","start":50695,"end":50785,"operator":"=","left":{"type":"Identifier","start":50695,"end":50700,"name":"paths"},"right":{"type":"CallExpression","start":50703,"end":50785,"callee":{"type":"MemberExpression","start":50703,"end":50715,"object":{"type":"Identifier","start":50703,"end":50708,"name":"paths"},"property":{"type":"Identifier","start":50709,"end":50715,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":50716,"end":50784,"callee":{"type":"MemberExpression","start":50716,"end":50756,"object":{"type":"ThisExpression","start":50716,"end":50720},"property":{"type":"Identifier","start":50721,"end":50756,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":50757,"end":50761,"name":"item"},{"type":"Identifier","start":50763,"end":50783,"name":"subCollectionQueries"}],"optional":false}],"optional":false}}}]}}],"optional":false}},{"type":"ReturnStatement","start":50817,"end":50830,"argument":{"type":"Identifier","start":50824,"end":50829,"name":"paths"}}]}}],"optional":false},{"type":"CallExpression","start":50844,"end":50976,"callee":{"type":"Identifier","start":50844,"end":50847,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":50848,"end":50975,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":50849,"end":50857,"name":"pathList"}],"body":{"type":"BlockStatement","start":50862,"end":50975,"body":[{"type":"ReturnStatement","start":50877,"end":50964,"argument":{"type":"CallExpression","start":50884,"end":50963,"callee":{"type":"MemberExpression","start":50884,"end":50914,"object":{"type":"Identifier","start":50884,"end":50892,"name":"pathList"},"property":{"type":"Identifier","start":50911,"end":50914,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":50915,"end":50962,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":50915,"end":50919,"name":"path"}],"body":{"type":"CallExpression","start":50923,"end":50962,"callee":{"type":"Identifier","start":50923,"end":50937,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":50938,"end":50942,"name":"path"},{"type":"MemberExpression","start":50944,"end":50961,"object":{"type":"MemberExpression","start":50944,"end":50951,"object":{"type":"ThisExpression","start":50944,"end":50948},"property":{"type":"Identifier","start":50949,"end":50951,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":50952,"end":50961,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":51391,"end":51631,"static":false,"computed":false,"key":{"type":"Identifier","start":51391,"end":51420,"name":"getDocumentReferencesFromItem"},"kind":"method","value":{"type":"FunctionExpression","start":51420,"end":51631,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51421,"end":51425,"name":"item"},{"type":"AssignmentPattern","start":51427,"end":51452,"left":{"type":"Identifier","start":51427,"end":51447,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51450,"end":51452,"elements":[]}}],"body":{"type":"BlockStatement","start":51454,"end":51631,"body":[{"type":"VariableDeclaration","start":51465,"end":51548,"declarations":[{"type":"VariableDeclarator","start":51471,"end":51547,"id":{"type":"Identifier","start":51471,"end":51476,"name":"paths"},"init":{"type":"CallExpression","start":51479,"end":51547,"callee":{"type":"MemberExpression","start":51479,"end":51519,"object":{"type":"ThisExpression","start":51479,"end":51483},"property":{"type":"Identifier","start":51484,"end":51519,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":51520,"end":51524,"name":"item"},{"type":"Identifier","start":51526,"end":51546,"name":"subCollectionQueries"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":51558,"end":51624,"argument":{"type":"CallExpression","start":51565,"end":51623,"callee":{"type":"MemberExpression","start":51565,"end":51574,"object":{"type":"Identifier","start":51565,"end":51570,"name":"paths"},"property":{"type":"Identifier","start":51571,"end":51574,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":51575,"end":51622,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":51575,"end":51579,"name":"path"}],"body":{"type":"CallExpression","start":51583,"end":51622,"callee":{"type":"Identifier","start":51583,"end":51597,"name":"getRefFromPath"},"arguments":[{"type":"Identifier","start":51598,"end":51602,"name":"path"},{"type":"MemberExpression","start":51604,"end":51621,"object":{"type":"MemberExpression","start":51604,"end":51611,"object":{"type":"ThisExpression","start":51604,"end":51608},"property":{"type":"Identifier","start":51609,"end":51611,"name":"fs"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51612,"end":51621,"name":"firestore"},"computed":false,"optional":false}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":51731,"end":53319,"static":false,"computed":false,"key":{"type":"Identifier","start":51731,"end":51766,"name":"getPathsFromItemDeepRecursiveHelper"},"kind":"method","value":{"type":"FunctionExpression","start":51766,"end":53319,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":51767,"end":51771,"name":"item"},{"type":"AssignmentPattern","start":51773,"end":51798,"left":{"type":"Identifier","start":51773,"end":51793,"name":"subCollectionQueries"},"right":{"type":"ArrayExpression","start":51796,"end":51798,"elements":[]}}],"body":{"type":"BlockStatement","start":51800,"end":53319,"body":[{"type":"IfStatement","start":51811,"end":51945,"test":{"type":"LogicalExpression","start":51815,"end":51880,"left":{"type":"BinaryExpression","start":51815,"end":51843,"left":{"type":"Identifier","start":51815,"end":51835,"name":"subCollectionQueries"},"operator":"==","right":{"type":"Literal","start":51839,"end":51843,"value":null,"raw":"null"}},"operator":"||","right":{"type":"BinaryExpression","start":51847,"end":51880,"left":{"type":"MemberExpression","start":51847,"end":51874,"object":{"type":"Identifier","start":51847,"end":51867,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":51868,"end":51874,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":51879,"end":51880,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":51882,"end":51945,"body":[{"type":"ReturnStatement","start":51897,"end":51934,"argument":{"type":"ArrayExpression","start":51904,"end":51933,"elements":[{"type":"MemberExpression","start":51905,"end":51932,"object":{"type":"MemberExpression","start":51905,"end":51927,"object":{"type":"Identifier","start":51905,"end":51909,"name":"item"},"property":{"type":"Identifier","start":51910,"end":51927,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":51928,"end":51932,"name":"path"},"computed":false,"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":51955,"end":51973,"declarations":[{"type":"VariableDeclarator","start":51959,"end":51972,"id":{"type":"Identifier","start":51959,"end":51967,"name":"pathList"},"init":{"type":"ArrayExpression","start":51970,"end":51972,"elements":[]}}],"kind":"let"},{"type":"ExpressionStatement","start":51983,"end":52026,"expression":{"type":"CallExpression","start":51983,"end":52025,"callee":{"type":"MemberExpression","start":51983,"end":51996,"object":{"type":"Identifier","start":51983,"end":51991,"name":"pathList"},"property":{"type":"Identifier","start":51992,"end":51996,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":51997,"end":52024,"object":{"type":"MemberExpression","start":51997,"end":52019,"object":{"type":"Identifier","start":51997,"end":52001,"name":"item"},"property":{"type":"Identifier","start":52002,"end":52019,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52020,"end":52024,"name":"path"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":52036,"end":53286,"expression":{"type":"CallExpression","start":52036,"end":53285,"callee":{"type":"MemberExpression","start":52036,"end":52064,"object":{"type":"Identifier","start":52036,"end":52056,"name":"subCollectionQueries"},"property":{"type":"Identifier","start":52057,"end":52064,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52065,"end":53284,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52065,"end":52068,"name":"col"}],"body":{"type":"BlockStatement","start":52072,"end":53284,"body":[{"type":"IfStatement","start":52087,"end":53273,"test":{"type":"LogicalExpression","start":52091,"end":52134,"left":{"type":"CallExpression","start":52091,"end":52120,"callee":{"type":"MemberExpression","start":52091,"end":52104,"object":{"type":"Identifier","start":52091,"end":52096,"name":"Array"},"property":{"type":"Identifier","start":52097,"end":52104,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52105,"end":52119,"object":{"type":"Identifier","start":52105,"end":52109,"name":"item"},"property":{"type":"MemberExpression","start":52110,"end":52118,"object":{"type":"Identifier","start":52110,"end":52113,"name":"col"},"property":{"type":"Identifier","start":52114,"end":52118,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":52124,"end":52134,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":52125,"end":52134,"object":{"type":"Identifier","start":52125,"end":52128,"name":"col"},"property":{"type":"Identifier","start":52129,"end":52134,"name":"docId"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":52136,"end":52672,"body":[{"type":"VariableDeclaration","start":52246,"end":52275,"declarations":[{"type":"VariableDeclarator","start":52252,"end":52274,"id":{"type":"Identifier","start":52252,"end":52257,"name":"items"},"init":{"type":"MemberExpression","start":52260,"end":52274,"object":{"type":"Identifier","start":52260,"end":52264,"name":"item"},"property":{"type":"MemberExpression","start":52265,"end":52273,"object":{"type":"Identifier","start":52265,"end":52268,"name":"col"},"property":{"type":"Identifier","start":52269,"end":52273,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":52293,"end":52657,"expression":{"type":"CallExpression","start":52293,"end":52656,"callee":{"type":"MemberExpression","start":52293,"end":52306,"object":{"type":"Identifier","start":52293,"end":52298,"name":"items"},"property":{"type":"Identifier","start":52299,"end":52306,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":52307,"end":52655,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":52307,"end":52314,"name":"subItem"}],"body":{"type":"BlockStatement","start":52318,"end":52655,"body":[{"type":"IfStatement","start":52341,"end":52636,"test":{"type":"MemberExpression","start":52345,"end":52363,"object":{"type":"Identifier","start":52345,"end":52348,"name":"col"},"property":{"type":"Identifier","start":52349,"end":52363,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52365,"end":52513,"body":[{"type":"ExpressionStatement","start":52392,"end":52490,"expression":{"type":"AssignmentExpression","start":52392,"end":52489,"operator":"=","left":{"type":"Identifier","start":52392,"end":52400,"name":"pathList"},"right":{"type":"CallExpression","start":52403,"end":52489,"callee":{"type":"MemberExpression","start":52403,"end":52418,"object":{"type":"Identifier","start":52403,"end":52411,"name":"pathList"},"property":{"type":"Identifier","start":52412,"end":52418,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52419,"end":52488,"callee":{"type":"MemberExpression","start":52419,"end":52459,"object":{"type":"ThisExpression","start":52419,"end":52423},"property":{"type":"Identifier","start":52424,"end":52459,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52460,"end":52467,"name":"subItem"},{"type":"MemberExpression","start":52469,"end":52487,"object":{"type":"Identifier","start":52469,"end":52472,"name":"col"},"property":{"type":"Identifier","start":52473,"end":52487,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52540,"end":52636,"body":[{"type":"ExpressionStatement","start":52567,"end":52613,"expression":{"type":"CallExpression","start":52567,"end":52612,"callee":{"type":"MemberExpression","start":52567,"end":52580,"object":{"type":"Identifier","start":52567,"end":52575,"name":"pathList"},"property":{"type":"Identifier","start":52576,"end":52580,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":52581,"end":52611,"object":{"type":"MemberExpression","start":52581,"end":52606,"object":{"type":"Identifier","start":52581,"end":52588,"name":"subItem"},"property":{"type":"Identifier","start":52589,"end":52606,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":52607,"end":52611,"name":"path"},"computed":false,"optional":false}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":52691,"end":53273,"body":[{"type":"IfStatement","start":52744,"end":53258,"test":{"type":"MemberExpression","start":52748,"end":52766,"object":{"type":"Identifier","start":52748,"end":52751,"name":"col"},"property":{"type":"Identifier","start":52752,"end":52766,"name":"subCollections"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":52768,"end":52905,"body":[{"type":"ExpressionStatement","start":52791,"end":52886,"expression":{"type":"AssignmentExpression","start":52791,"end":52885,"operator":"=","left":{"type":"Identifier","start":52791,"end":52799,"name":"pathList"},"right":{"type":"CallExpression","start":52802,"end":52885,"callee":{"type":"MemberExpression","start":52802,"end":52817,"object":{"type":"Identifier","start":52802,"end":52810,"name":"pathList"},"property":{"type":"Identifier","start":52811,"end":52817,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":52818,"end":52884,"callee":{"type":"MemberExpression","start":52818,"end":52858,"object":{"type":"ThisExpression","start":52818,"end":52822},"property":{"type":"Identifier","start":52823,"end":52858,"name":"getPathsFromItemDeepRecursiveHelper"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":52859,"end":52863,"name":"item"},{"type":"MemberExpression","start":52865,"end":52883,"object":{"type":"Identifier","start":52865,"end":52868,"name":"col"},"property":{"type":"Identifier","start":52869,"end":52883,"name":"subCollections"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":52928,"end":53258,"body":[{"type":"VariableDeclaration","start":52951,"end":52982,"declarations":[{"type":"VariableDeclarator","start":52957,"end":52981,"id":{"type":"Identifier","start":52957,"end":52964,"name":"subItem"},"init":{"type":"MemberExpression","start":52967,"end":52981,"object":{"type":"Identifier","start":52967,"end":52971,"name":"item"},"property":{"type":"MemberExpression","start":52972,"end":52980,"object":{"type":"Identifier","start":52972,"end":52975,"name":"col"},"property":{"type":"Identifier","start":52976,"end":52980,"name":"name"},"computed":false,"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":53004,"end":53160,"test":{"type":"LogicalExpression","start":53008,"end":53062,"left":{"type":"BinaryExpression","start":53008,"end":53023,"left":{"type":"Identifier","start":53008,"end":53015,"name":"subItem"},"operator":"!=","right":{"type":"Literal","start":53019,"end":53023,"value":null,"raw":"null"}},"operator":"&&","right":{"type":"BinaryExpression","start":53027,"end":53062,"left":{"type":"Literal","start":53027,"end":53033,"value":"path","raw":"'path'"},"operator":"in","right":{"type":"MemberExpression","start":53037,"end":53062,"object":{"type":"Identifier","start":53037,"end":53044,"name":"subItem"},"property":{"type":"Identifier","start":53045,"end":53062,"name":"firestoreMetadata"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":53064,"end":53160,"body":[{"type":"ExpressionStatement","start":53091,"end":53137,"expression":{"type":"CallExpression","start":53091,"end":53136,"callee":{"type":"MemberExpression","start":53091,"end":53104,"object":{"type":"Identifier","start":53091,"end":53099,"name":"pathList"},"property":{"type":"Identifier","start":53100,"end":53104,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":53105,"end":53135,"object":{"type":"MemberExpression","start":53105,"end":53130,"object":{"type":"Identifier","start":53105,"end":53112,"name":"subItem"},"property":{"type":"Identifier","start":53113,"end":53130,"name":"firestoreMetadata"},"computed":false,"optional":false},"property":{"type":"Identifier","start":53131,"end":53135,"name":"path"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}]}}]}}],"optional":false}},{"type":"ReturnStatement","start":53296,"end":53312,"argument":{"type":"Identifier","start":53303,"end":53311,"name":"pathList"}}]}}},{"type":"MethodDefinition","start":53500,"end":54525,"static":false,"computed":false,"key":{"type":"Identifier","start":53500,"end":53540,"name":"splitDataIntoCurrentDocAndSubCollections"},"kind":"method","value":{"type":"FunctionExpression","start":53540,"end":54525,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":53541,"end":53545,"name":"data"},{"type":"AssignmentPattern","start":53547,"end":53572,"left":{"type":"Identifier","start":53547,"end":53567,"name":"subCollectionWriters"},"right":{"type":"ArrayExpression","start":53570,"end":53572,"elements":[]}}],"body":{"type":"BlockStatement","start":53574,"end":54525,"body":[{"type":"VariableDeclaration","start":53648,"end":53668,"declarations":[{"type":"VariableDeclarator","start":53652,"end":53667,"id":{"type":"Identifier","start":53652,"end":53662,"name":"currentDoc"},"init":{"type":"ObjectExpression","start":53665,"end":53667,"properties":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":53678,"end":53704,"declarations":[{"type":"VariableDeclarator","start":53684,"end":53703,"id":{"type":"Identifier","start":53684,"end":53698,"name":"subCollections"},"init":{"type":"ObjectExpression","start":53701,"end":53703,"properties":[]}}],"kind":"const"},{"type":"ForOfStatement","start":53864,"end":54435,"await":false,"left":{"type":"VariableDeclaration","start":53869,"end":53887,"declarations":[{"type":"VariableDeclarator","start":53875,"end":53887,"id":{"type":"ArrayPattern","start":53875,"end":53887,"elements":[{"type":"Identifier","start":53876,"end":53879,"name":"key"},{"type":"Identifier","start":53881,"end":53886,"name":"value"}]},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":53891,"end":53911,"callee":{"type":"MemberExpression","start":53891,"end":53905,"object":{"type":"Identifier","start":53891,"end":53897,"name":"Object"},"property":{"type":"Identifier","start":53898,"end":53905,"name":"entries"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":53906,"end":53910,"name":"data"}],"optional":false},"body":{"type":"BlockStatement","start":53913,"end":54435,"body":[{"type":"IfStatement","start":53969,"end":54424,"test":{"type":"LogicalExpression","start":53973,"end":54028,"left":{"type":"Identifier","start":53973,"end":53993,"name":"subCollectionWriters"},"operator":"&&","right":{"type":"BinaryExpression","start":53997,"end":54028,"left":{"type":"MemberExpression","start":53997,"end":54024,"object":{"type":"Identifier","start":53997,"end":54017,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54018,"end":54024,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":54027,"end":54028,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":54030,"end":54353,"body":[{"type":"VariableDeclaration","start":54049,"end":54136,"declarations":[{"type":"VariableDeclarator","start":54055,"end":54135,"id":{"type":"Identifier","start":54055,"end":54074,"name":"subCollectionWriter"},"init":{"type":"CallExpression","start":54077,"end":54135,"callee":{"type":"MemberExpression","start":54077,"end":54102,"object":{"type":"Identifier","start":54077,"end":54097,"name":"subCollectionWriters"},"property":{"type":"Identifier","start":54098,"end":54102,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":54103,"end":54134,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":54103,"end":54110,"name":"subColl"}],"body":{"type":"BinaryExpression","start":54114,"end":54134,"left":{"type":"MemberExpression","start":54114,"end":54126,"object":{"type":"Identifier","start":54114,"end":54121,"name":"subColl"},"property":{"type":"Identifier","start":54122,"end":54126,"name":"name"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":54131,"end":54134,"name":"key"}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":54154,"end":54338,"test":{"type":"Identifier","start":54158,"end":54177,"name":"subCollectionWriter"},"consequent":{"type":"BlockStatement","start":54179,"end":54249,"body":[{"type":"ExpressionStatement","start":54202,"end":54230,"expression":{"type":"AssignmentExpression","start":54202,"end":54229,"operator":"=","left":{"type":"MemberExpression","start":54202,"end":54221,"object":{"type":"Identifier","start":54202,"end":54216,"name":"subCollections"},"property":{"type":"Identifier","start":54217,"end":54220,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54224,"end":54229,"name":"value"}}}]},"alternate":{"type":"BlockStatement","start":54272,"end":54338,"body":[{"type":"ExpressionStatement","start":54295,"end":54319,"expression":{"type":"AssignmentExpression","start":54295,"end":54318,"operator":"=","left":{"type":"MemberExpression","start":54295,"end":54310,"object":{"type":"Identifier","start":54295,"end":54305,"name":"currentDoc"},"property":{"type":"Identifier","start":54306,"end":54309,"name":"key"},"computed":true,"optional":false},"right":{"type":"Identifier","start":54313,"end":54318,"name":"value"}}}]}}]},"alternate":{"type":"BlockStatement","start":54372,"end":54424,"body":[{"type":"ExpressionStatement","start":54391,"end":54409,"expression":{"type":"AssignmentExpression","start":54391,"end":54408,"operator":"=","left":{"type":"Identifier","start":54391,"end":54401,"name":"currentDoc"},"right":{"type":"Identifier","start":54404,"end":54408,"name":"data"}}}]}}]}},{"type":"ReturnStatement","start":54445,"end":54518,"argument":{"type":"ObjectExpression","start":54452,"end":54517,"properties":[{"type":"Property","start":54467,"end":54477,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54467,"end":54477,"name":"currentDoc"},"kind":"init","value":{"type":"Identifier","start":54467,"end":54477,"name":"currentDoc"}},{"type":"Property","start":54492,"end":54506,"method":false,"shorthand":true,"computed":false,"key":{"type":"Identifier","start":54492,"end":54506,"name":"subCollections"},"kind":"init","value":{"type":"Identifier","start":54492,"end":54506,"name":"subCollections"}}]}}]}}},{"type":"MethodDefinition","start":54804,"end":54884,"static":false,"computed":false,"key":{"type":"Identifier","start":54804,"end":54816,"name":"batchCommit$"},"kind":"method","value":{"type":"FunctionExpression","start":54816,"end":54884,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":54817,"end":54822,"name":"batch"}],"body":{"type":"BlockStatement","start":54824,"end":54884,"body":[{"type":"ReturnStatement","start":54835,"end":54877,"argument":{"type":"CallExpression","start":54842,"end":54876,"callee":{"type":"MemberExpression","start":54842,"end":54867,"object":{"type":"CallExpression","start":54842,"end":54862,"callee":{"type":"Identifier","start":54842,"end":54846,"name":"from"},"arguments":[{"type":"CallExpression","start":54847,"end":54861,"callee":{"type":"MemberExpression","start":54847,"end":54859,"object":{"type":"Identifier","start":54847,"end":54852,"name":"batch"},"property":{"type":"Identifier","start":54853,"end":54859,"name":"commit"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"property":{"type":"Identifier","start":54863,"end":54867,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":54868,"end":54875,"callee":{"type":"Identifier","start":54868,"end":54872,"name":"take"},"arguments":[{"type":"Literal","start":54873,"end":54874,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":55569,"end":57790,"declaration":{"type":"ClassDeclaration","start":55576,"end":57790,"id":{"type":"Identifier","start":55582,"end":55596,"name":"QueryContainer"},"superClass":null,"body":{"type":"ClassBody","start":55597,"end":57790,"body":[{"type":"MethodDefinition","start":55604,"end":55691,"static":false,"computed":false,"key":{"type":"Identifier","start":55604,"end":55615,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":55615,"end":55691,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":55616,"end":55619,"name":"ref"}],"body":{"type":"BlockStatement","start":55621,"end":55691,"body":[{"type":"ExpressionStatement","start":55632,"end":55647,"expression":{"type":"AssignmentExpression","start":55632,"end":55646,"operator":"=","left":{"type":"MemberExpression","start":55632,"end":55640,"object":{"type":"ThisExpression","start":55632,"end":55636},"property":{"type":"Identifier","start":55637,"end":55640,"name":"ref"},"computed":false,"optional":false},"right":{"type":"Identifier","start":55643,"end":55646,"name":"ref"}}},{"type":"ExpressionStatement","start":55657,"end":55684,"expression":{"type":"AssignmentExpression","start":55657,"end":55683,"operator":"=","left":{"type":"MemberExpression","start":55657,"end":55678,"object":{"type":"ThisExpression","start":55657,"end":55661},"property":{"type":"Identifier","start":55662,"end":55678,"name":"queryConstraints"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":55681,"end":55683,"elements":[]}}}]}}},{"type":"MethodDefinition","start":55754,"end":55876,"static":true,"computed":false,"key":{"type":"Identifier","start":55761,"end":55769,"name":"fromPath"},"kind":"method","value":{"type":"FunctionExpression","start":55769,"end":55876,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":55770,"end":55779,"name":"firestore"},{"type":"Identifier","start":55781,"end":55785,"name":"path"}],"body":{"type":"BlockStatement","start":55787,"end":55876,"body":[{"type":"VariableDeclaration","start":55798,"end":55838,"declarations":[{"type":"VariableDeclarator","start":55804,"end":55837,"id":{"type":"Identifier","start":55804,"end":55807,"name":"ref"},"init":{"type":"CallExpression","start":55810,"end":55837,"callee":{"type":"Identifier","start":55810,"end":55820,"name":"collection"},"arguments":[{"type":"Identifier","start":55821,"end":55830,"name":"firestore"},{"type":"Identifier","start":55832,"end":55836,"name":"path"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":55848,"end":55869,"argument":{"type":"NewExpression","start":55855,"end":55868,"callee":{"type":"ThisExpression","start":55859,"end":55863},"arguments":[{"type":"Identifier","start":55864,"end":55867,"name":"ref"}]}}]}}},{"type":"MethodDefinition","start":55943,"end":56022,"static":false,"computed":false,"key":{"type":"Identifier","start":55947,"end":55952,"name":"query"},"kind":"get","value":{"type":"FunctionExpression","start":55952,"end":56022,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":55955,"end":56022,"body":[{"type":"ReturnStatement","start":55966,"end":56015,"argument":{"type":"CallExpression","start":55973,"end":56014,"callee":{"type":"Identifier","start":55973,"end":55978,"name":"query"},"arguments":[{"type":"MemberExpression","start":55979,"end":55987,"object":{"type":"ThisExpression","start":55979,"end":55983},"property":{"type":"Identifier","start":55984,"end":55987,"name":"ref"},"computed":false,"optional":false},{"type":"SpreadElement","start":55989,"end":56013,"argument":{"type":"MemberExpression","start":55992,"end":56013,"object":{"type":"ThisExpression","start":55992,"end":55996},"property":{"type":"Identifier","start":55997,"end":56013,"name":"queryConstraints"},"computed":false,"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":56120,"end":56182,"static":false,"computed":false,"key":{"type":"Identifier","start":56120,"end":56128,"name":"getDocs$"},"kind":"method","value":{"type":"FunctionExpression","start":56128,"end":56182,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":56131,"end":56182,"body":[{"type":"ReturnStatement","start":56142,"end":56175,"argument":{"type":"CallExpression","start":56149,"end":56174,"callee":{"type":"Identifier","start":56149,"end":56153,"name":"from"},"arguments":[{"type":"CallExpression","start":56154,"end":56173,"callee":{"type":"Identifier","start":56154,"end":56161,"name":"getDocs"},"arguments":[{"type":"MemberExpression","start":56162,"end":56172,"object":{"type":"ThisExpression","start":56162,"end":56166},"property":{"type":"Identifier","start":56167,"end":56172,"name":"query"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":56188,"end":56318,"static":false,"computed":false,"key":{"type":"Identifier","start":56188,"end":56193,"name":"where"},"kind":"method","value":{"type":"FunctionExpression","start":56193,"end":56318,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56194,"end":56203,"name":"fieldPath"},{"type":"Identifier","start":56205,"end":56210,"name":"opStr"},{"type":"Identifier","start":56212,"end":56217,"name":"value"}],"body":{"type":"BlockStatement","start":56219,"end":56318,"body":[{"type":"ExpressionStatement","start":56230,"end":56289,"expression":{"type":"CallExpression","start":56230,"end":56288,"callee":{"type":"MemberExpression","start":56230,"end":56256,"object":{"type":"MemberExpression","start":56230,"end":56251,"object":{"type":"ThisExpression","start":56230,"end":56234},"property":{"type":"Identifier","start":56235,"end":56251,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56252,"end":56256,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56257,"end":56287,"callee":{"type":"Identifier","start":56257,"end":56262,"name":"where"},"arguments":[{"type":"Identifier","start":56263,"end":56272,"name":"fieldPath"},{"type":"Identifier","start":56274,"end":56279,"name":"opStr"},{"type":"Identifier","start":56281,"end":56286,"name":"value"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56299,"end":56311,"argument":{"type":"ThisExpression","start":56306,"end":56310}}]}}},{"type":"MethodDefinition","start":56324,"end":56458,"static":false,"computed":false,"key":{"type":"Identifier","start":56324,"end":56331,"name":"orderBy"},"kind":"method","value":{"type":"FunctionExpression","start":56331,"end":56458,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56332,"end":56341,"name":"fieldPath"},{"type":"Identifier","start":56343,"end":56355,"name":"directionStr"}],"body":{"type":"BlockStatement","start":56357,"end":56458,"body":[{"type":"ExpressionStatement","start":56368,"end":56429,"expression":{"type":"CallExpression","start":56368,"end":56428,"callee":{"type":"MemberExpression","start":56368,"end":56394,"object":{"type":"MemberExpression","start":56368,"end":56389,"object":{"type":"ThisExpression","start":56368,"end":56372},"property":{"type":"Identifier","start":56373,"end":56389,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56390,"end":56394,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56395,"end":56427,"callee":{"type":"Identifier","start":56395,"end":56402,"name":"orderBy"},"arguments":[{"type":"Identifier","start":56403,"end":56412,"name":"fieldPath"},{"type":"Identifier","start":56414,"end":56426,"name":"directionStr"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56439,"end":56451,"argument":{"type":"ThisExpression","start":56446,"end":56450}}]}}},{"type":"MethodDefinition","start":56464,"end":56560,"static":false,"computed":false,"key":{"type":"Identifier","start":56464,"end":56469,"name":"limit"},"kind":"method","value":{"type":"FunctionExpression","start":56469,"end":56560,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56470,"end":56476,"name":"_limit"}],"body":{"type":"BlockStatement","start":56478,"end":56560,"body":[{"type":"ExpressionStatement","start":56489,"end":56531,"expression":{"type":"CallExpression","start":56489,"end":56530,"callee":{"type":"MemberExpression","start":56489,"end":56515,"object":{"type":"MemberExpression","start":56489,"end":56510,"object":{"type":"ThisExpression","start":56489,"end":56493},"property":{"type":"Identifier","start":56494,"end":56510,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56511,"end":56515,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56516,"end":56529,"callee":{"type":"Identifier","start":56516,"end":56521,"name":"limit"},"arguments":[{"type":"Identifier","start":56522,"end":56528,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56541,"end":56553,"argument":{"type":"ThisExpression","start":56548,"end":56552}}]}}},{"type":"MethodDefinition","start":56566,"end":56674,"static":false,"computed":false,"key":{"type":"Identifier","start":56566,"end":56577,"name":"limitToLast"},"kind":"method","value":{"type":"FunctionExpression","start":56577,"end":56674,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56578,"end":56584,"name":"_limit"}],"body":{"type":"BlockStatement","start":56586,"end":56674,"body":[{"type":"ExpressionStatement","start":56597,"end":56645,"expression":{"type":"CallExpression","start":56597,"end":56644,"callee":{"type":"MemberExpression","start":56597,"end":56623,"object":{"type":"MemberExpression","start":56597,"end":56618,"object":{"type":"ThisExpression","start":56597,"end":56601},"property":{"type":"Identifier","start":56602,"end":56618,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56619,"end":56623,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56624,"end":56643,"callee":{"type":"Identifier","start":56624,"end":56635,"name":"limitToLast"},"arguments":[{"type":"Identifier","start":56636,"end":56642,"name":"_limit"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":56655,"end":56667,"argument":{"type":"ThisExpression","start":56662,"end":56666}}]}}},{"type":"MethodDefinition","start":56680,"end":56950,"static":false,"computed":false,"key":{"type":"Identifier","start":56680,"end":56687,"name":"startAt"},"kind":"method","value":{"type":"FunctionExpression","start":56687,"end":56950,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56688,"end":56696,"name":"snapshot"},{"type":"RestElement","start":56698,"end":56712,"argument":{"type":"Identifier","start":56701,"end":56712,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":56714,"end":56950,"body":[{"type":"IfStatement","start":56725,"end":56921,"test":{"type":"Identifier","start":56729,"end":56737,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":56739,"end":56811,"body":[{"type":"ExpressionStatement","start":56754,"end":56800,"expression":{"type":"CallExpression","start":56754,"end":56799,"callee":{"type":"MemberExpression","start":56754,"end":56780,"object":{"type":"MemberExpression","start":56754,"end":56775,"object":{"type":"ThisExpression","start":56754,"end":56758},"property":{"type":"Identifier","start":56759,"end":56775,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56776,"end":56780,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56781,"end":56798,"callee":{"type":"Identifier","start":56781,"end":56788,"name":"startAt"},"arguments":[{"type":"Identifier","start":56789,"end":56797,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":56826,"end":56921,"test":{"type":"Identifier","start":56830,"end":56841,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":56843,"end":56921,"body":[{"type":"ExpressionStatement","start":56858,"end":56910,"expression":{"type":"CallExpression","start":56858,"end":56909,"callee":{"type":"MemberExpression","start":56858,"end":56884,"object":{"type":"MemberExpression","start":56858,"end":56879,"object":{"type":"ThisExpression","start":56858,"end":56862},"property":{"type":"Identifier","start":56863,"end":56879,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":56880,"end":56884,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":56885,"end":56908,"callee":{"type":"Identifier","start":56885,"end":56892,"name":"startAt"},"arguments":[{"type":"SpreadElement","start":56893,"end":56907,"argument":{"type":"Identifier","start":56896,"end":56907,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":56931,"end":56943,"argument":{"type":"ThisExpression","start":56938,"end":56942}}]}}},{"type":"MethodDefinition","start":56956,"end":57235,"static":false,"computed":false,"key":{"type":"Identifier","start":56956,"end":56966,"name":"startAfter"},"kind":"method","value":{"type":"FunctionExpression","start":56966,"end":57235,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":56967,"end":56975,"name":"snapshot"},{"type":"RestElement","start":56977,"end":56991,"argument":{"type":"Identifier","start":56980,"end":56991,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":56993,"end":57235,"body":[{"type":"IfStatement","start":57004,"end":57206,"test":{"type":"Identifier","start":57008,"end":57016,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57018,"end":57093,"body":[{"type":"ExpressionStatement","start":57033,"end":57082,"expression":{"type":"CallExpression","start":57033,"end":57081,"callee":{"type":"MemberExpression","start":57033,"end":57059,"object":{"type":"MemberExpression","start":57033,"end":57054,"object":{"type":"ThisExpression","start":57033,"end":57037},"property":{"type":"Identifier","start":57038,"end":57054,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57055,"end":57059,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57060,"end":57080,"callee":{"type":"Identifier","start":57060,"end":57070,"name":"startAfter"},"arguments":[{"type":"Identifier","start":57071,"end":57079,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57108,"end":57206,"test":{"type":"Identifier","start":57112,"end":57123,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57125,"end":57206,"body":[{"type":"ExpressionStatement","start":57140,"end":57195,"expression":{"type":"CallExpression","start":57140,"end":57194,"callee":{"type":"MemberExpression","start":57140,"end":57166,"object":{"type":"MemberExpression","start":57140,"end":57161,"object":{"type":"ThisExpression","start":57140,"end":57144},"property":{"type":"Identifier","start":57145,"end":57161,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57162,"end":57166,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57167,"end":57193,"callee":{"type":"Identifier","start":57167,"end":57177,"name":"startAfter"},"arguments":[{"type":"SpreadElement","start":57178,"end":57192,"argument":{"type":"Identifier","start":57181,"end":57192,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57216,"end":57228,"argument":{"type":"ThisExpression","start":57223,"end":57227}}]}}},{"type":"MethodDefinition","start":57241,"end":57505,"static":false,"computed":false,"key":{"type":"Identifier","start":57241,"end":57246,"name":"endAt"},"kind":"method","value":{"type":"FunctionExpression","start":57246,"end":57505,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57247,"end":57255,"name":"snapshot"},{"type":"RestElement","start":57257,"end":57271,"argument":{"type":"Identifier","start":57260,"end":57271,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57273,"end":57505,"body":[{"type":"IfStatement","start":57284,"end":57476,"test":{"type":"Identifier","start":57288,"end":57296,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57298,"end":57368,"body":[{"type":"ExpressionStatement","start":57313,"end":57357,"expression":{"type":"CallExpression","start":57313,"end":57356,"callee":{"type":"MemberExpression","start":57313,"end":57339,"object":{"type":"MemberExpression","start":57313,"end":57334,"object":{"type":"ThisExpression","start":57313,"end":57317},"property":{"type":"Identifier","start":57318,"end":57334,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57335,"end":57339,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57340,"end":57355,"callee":{"type":"Identifier","start":57340,"end":57345,"name":"endAt"},"arguments":[{"type":"Identifier","start":57346,"end":57354,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57383,"end":57476,"test":{"type":"Identifier","start":57387,"end":57398,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57400,"end":57476,"body":[{"type":"ExpressionStatement","start":57415,"end":57465,"expression":{"type":"CallExpression","start":57415,"end":57464,"callee":{"type":"MemberExpression","start":57415,"end":57441,"object":{"type":"MemberExpression","start":57415,"end":57436,"object":{"type":"ThisExpression","start":57415,"end":57419},"property":{"type":"Identifier","start":57420,"end":57436,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57437,"end":57441,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57442,"end":57463,"callee":{"type":"Identifier","start":57442,"end":57447,"name":"endAt"},"arguments":[{"type":"SpreadElement","start":57448,"end":57462,"argument":{"type":"Identifier","start":57451,"end":57462,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57486,"end":57498,"argument":{"type":"ThisExpression","start":57493,"end":57497}}]}}},{"type":"MethodDefinition","start":57511,"end":57787,"static":false,"computed":false,"key":{"type":"Identifier","start":57511,"end":57520,"name":"endBefore"},"kind":"method","value":{"type":"FunctionExpression","start":57520,"end":57787,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":57521,"end":57529,"name":"snapshot"},{"type":"RestElement","start":57531,"end":57545,"argument":{"type":"Identifier","start":57534,"end":57545,"name":"fieldValues"}}],"body":{"type":"BlockStatement","start":57547,"end":57787,"body":[{"type":"IfStatement","start":57558,"end":57758,"test":{"type":"Identifier","start":57562,"end":57570,"name":"snapshot"},"consequent":{"type":"BlockStatement","start":57572,"end":57646,"body":[{"type":"ExpressionStatement","start":57587,"end":57635,"expression":{"type":"CallExpression","start":57587,"end":57634,"callee":{"type":"MemberExpression","start":57587,"end":57613,"object":{"type":"MemberExpression","start":57587,"end":57608,"object":{"type":"ThisExpression","start":57587,"end":57591},"property":{"type":"Identifier","start":57592,"end":57608,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57609,"end":57613,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57614,"end":57633,"callee":{"type":"Identifier","start":57614,"end":57623,"name":"endBefore"},"arguments":[{"type":"Identifier","start":57624,"end":57632,"name":"snapshot"}],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":57661,"end":57758,"test":{"type":"Identifier","start":57665,"end":57676,"name":"fieldValues"},"consequent":{"type":"BlockStatement","start":57678,"end":57758,"body":[{"type":"ExpressionStatement","start":57693,"end":57747,"expression":{"type":"CallExpression","start":57693,"end":57746,"callee":{"type":"MemberExpression","start":57693,"end":57719,"object":{"type":"MemberExpression","start":57693,"end":57714,"object":{"type":"ThisExpression","start":57693,"end":57697},"property":{"type":"Identifier","start":57698,"end":57714,"name":"queryConstraints"},"computed":false,"optional":false},"property":{"type":"Identifier","start":57715,"end":57719,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":57720,"end":57745,"callee":{"type":"Identifier","start":57720,"end":57729,"name":"endBefore"},"arguments":[{"type":"SpreadElement","start":57730,"end":57744,"argument":{"type":"Identifier","start":57733,"end":57744,"name":"fieldValues"}}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":57768,"end":57780,"argument":{"type":"ThisExpression","start":57775,"end":57779}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":57792,"end":192418}]},"code":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    get firestore() {\r\n        return this.fs.firestore;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBYyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFbkUsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZGLE9BQU8sRUFDTCxVQUFVLEVBR1YsaUJBQWlCLEVBRWpCLEtBQUssRUFDTCxTQUFTLEVBR1QsT0FBTyxFQUNQLEtBQUssRUFDTCxXQUFXLEVBQ1gsT0FBTyxFQUVQLEtBQUssRUFJTCxVQUFVLEVBQ1YsT0FBTyxFQUNQLEtBQUssRUFFTCxVQUFVLEVBRVgsTUFBTSxvQkFBb0IsQ0FBQztBQUU1QixPQUFPLEVBQ0wsY0FBYyxFQUNkLGFBQWEsRUFDYixlQUFlLEVBQ2Ysc0JBQXNCLEVBQ3RCLGVBQWUsRUFDZixjQUFjLEVBQ2QsZ0JBQWdCLEVBQ2pCLE1BQU0sV0FBVyxDQUFDO0FBS25CLE9BQU8sRUFBQyxlQUFlLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFFaEU7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxpQkFZWDtBQVpELFdBQVksaUJBQWlCO0lBQzNCLDRCQUE0QjtJQUM1Qix1RUFBVyxDQUFBO0lBRVgsaUhBQWlIO0lBQ2pILHVGQUFtQixDQUFBO0lBRW5CLCtDQUErQztJQUMvQyw2REFBTSxDQUFBO0lBRU4saURBQWlEO0lBQ2pELHVGQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFaVyxpQkFBaUIsS0FBakIsaUJBQWlCLFFBWTVCO0FBV0Q7Ozs7O0dBS0c7QUFD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QUFDLENBQUMsQ0FBQztTQUM3QzthQUFNLElBQUksV0FBVyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztTQUNuRDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELFNBQVMsQ0FBQyxRQUFvQyxFQUFFLEdBQUcsV0FBc0I7UUFDdkUsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ3ZEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvbWJpbmVMYXRlc3QsIGZvcmtKb2luLCBmcm9tLCBPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQge2NhdGNoRXJyb3IsIGZpbHRlciwgbWFwLCBtZXJnZU1hcCwgc3dpdGNoTWFwLCB0YWtlLCB0YXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHtcclxuICBjb2xsZWN0aW9uLFxyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgZW5kQXQsXHJcbiAgZW5kQmVmb3JlLFxyXG4gIEZpZWxkUGF0aCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jcyxcclxuICBsaW1pdCxcclxuICBsaW1pdFRvTGFzdCxcclxuICBvcmRlckJ5LFxyXG4gIE9yZGVyQnlEaXJlY3Rpb24sXHJcbiAgcXVlcnksXHJcbiAgUXVlcnksXHJcbiAgUXVlcnlDb25zdHJhaW50LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc3RhcnRBZnRlcixcclxuICBzdGFydEF0LFxyXG4gIHdoZXJlLFxyXG4gIFdoZXJlRmlsdGVyT3AsXHJcbiAgd3JpdGVCYXRjaCxcclxuICBXcml0ZUJhdGNoXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcbmltcG9ydCB7XHJcbiAgYWRkQ3JlYXRlZERhdGUsXHJcbiAgYWRkRGF0YVRvSXRlbSxcclxuICBhZGRNb2RpZmllZERhdGUsXHJcbiAgY29udmVydFRpbWVzdGFtcFRvRGF0ZSxcclxuICBnZXREb2NSZWZXaXRoSWQsXHJcbiAgZ2V0UmVmRnJvbVBhdGgsXHJcbiAgZ2V0U3ViQ29sbGVjdGlvblxyXG59IGZyb20gJy4vaGVscGVycyc7XHJcbmltcG9ydCB7U3ViQ29sbGVjdGlvblF1ZXJ5fSBmcm9tICcuL3N1Yi1jb2xsZWN0aW9uLXF1ZXJ5JztcclxuaW1wb3J0IHtCYXNlRmlyZXN0b3JlV3JhcHBlciwgRmlyZXN0b3JlRXJyb3JFeHR9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7RmlyZUl0ZW0sIEZpcmVzdG9yZUl0ZW0sIEZpcmVzdG9yZU1ldGFkYXRhfSBmcm9tICcuL21vZGVscy9maXJlc3RvcmVJdGVtJztcclxuaW1wb3J0IHtTdWJDb2xsZWN0aW9uV3JpdGVyfSBmcm9tICcuL3N1Yi1jb2xsZWN0aW9uLXdyaXRlcic7XHJcbmltcG9ydCB7bW92ZUl0ZW1JbkFycmF5LCB0cmFuc2ZlckFycmF5SXRlbX0gZnJvbSAnLi9kcmFnLXV0aWxzJztcclxuXHJcbi8qKlxyXG4gKiBBY3Rpb24gdG8gYmUgdGFrZW4gYnkgbGlzdGVuZXIgaWYgdGhlIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0LlxyXG4gKi9cclxuZXhwb3J0IGVudW0gRG9jTm90RXhpc3RBY3Rpb24ge1xyXG4gIC8qKiByZXR1cm5zIGEgbnVsbCBvYmplY3QgKi9cclxuICBSRVRVUk5fTlVMTCxcclxuXHJcbiAgLyoqIHJldHVybiBhbGwgdGhlIGV4dHJhcyBzdWNoIGFzIHJlZiwgcGF0aCBhbmQgc28gb24gYnV0IG5vIGRhdGEsIGtpbmRhIGp1c3QgaWdub3JlcyB0aGF0IHRoZSBkb2MgaXNuJ3QgdGhlcmUgKi9cclxuICBSRVRVUk5fQUxMX0JVVF9EQVRBLFxyXG5cclxuICAvKiogZG8gbm90IHJldHVybiBhdCBhbGwgdW50aWwgaXQgZG9lcyBleGlzdCAqL1xyXG4gIEZJTFRFUixcclxuXHJcbiAgLyoqIHJldHVybiBkb2Mgbm90IGZvdW5kIGVycm9yICdkb2Nfbm90X2ZvdW5kJyAqL1xyXG4gIFRIUk9XX0RPQ19OT1RfRk9VTkQsXHJcbn1cclxuXHJcbi8qKiBVc2VkIGludGVybmFsbHkgKi9cclxuaW50ZXJmYWNlIEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQge1xyXG4gIC8qKiBjb250YWlucyB0aGUgZG9jdW1lbnQgdGhhdCBpcyBjb25zaWRlcmVkIHRoZSBjdXJyZW50ICovXHJcbiAgY3VycmVudERvYzogRmlyZUl0ZW08e30+O1xyXG4gIC8qKiBzdWIgY29sbGVjdGlvbnMgb2YgY3VycmVudCBkb2N1bWVudCAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTWFpbiBDbGFzcy5cclxuICpcclxuICpcclxuICpcclxuICovXHJcbmV4cG9ydCBjbGFzcyBGaXJlc3RvcmVFeHRlbmRlZCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbnN0cnVjdG9yIGZvciBBbmd1bGFyRmlyZXN0b3JlV3JhcHBlclxyXG4gICAqXHJcbiAgICogQHBhcmFtIGZzIEZpcmVzdG9yZSB3cmFwcGVyIEZpcmVzdG9yZSBleHRlbmRlZCBjYW4gYmUgdXNlZCBieSBtYW55IEZpcmVzdG9yZSBpbXBsZW1lbnRhdGlvbnNcclxuICAgKiBAcGFyYW0gZGVmYXVsdERvY0lkIFRoZSBkZWZhdWx0IG5hbWUgZ2l2ZW4gdG8gYSBzdWJDb2xsZWN0aW9uIGRvY3VtZW50IHdoZW4gbm8gbmFtZSBpcyBnaXZlblxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnM6IEJhc2VGaXJlc3RvcmVXcmFwcGVyLCBwdWJsaWMgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICB9XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlIHtcclxuICAgIHJldHVybiB0aGlzLmZzLmZpcmVzdG9yZTtcclxuICB9XHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIExJU1RFTiAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIEFsbG93cyBmb3IgbGlzdGVuaW5nIHRvIGRvY3VtZW50cyBhbmQgY29sbGVjdGlvbnMgbiBkZWVwIHVwIHRvIHRoZSBmaXJlc3RvcmUgbWF4IG9mIDEwMCBsZXZlbHMuXHJcbiAgICpcclxuICAgKiBUcmlnZ2VycyBmb3IgYW55IGNoYW5nZSBpbiBhbnkgZG9jdW1lbnQgdGhhdCBpcyBsaXN0ZW5lZCB0by5cclxuICAgKlxyXG4gICAqXHJcbiAgICogRS54OlxyXG4gICAqICAgICAgY29uc3Qgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW1xyXG4gICAqICAgICAgICAgeyBuYW1lOiAnZGF0YScgfSxcclxuICAgKiAgICAgICAgIHsgbmFtZTogJ3NlY3VyZScgfSxcclxuICAgKiAgICAgICAgIHsgbmFtZTogJ3ZhcmlhbnRzJyB9LFxyXG4gICAqICAgICAgICAgeyBuYW1lOiAnaW1hZ2VzJyxcclxuICAgKiAgICAgICAgICAgcXVlcnlGbjogcmVmID0+IHJlZi5vcmRlckJ5KCdpbmRleCcpLFxyXG4gICAqICAgICAgICAgICBjb2xsZWN0aW9uV2l0aE5hbWVzOiBbXHJcbiAgICogICAgICAgICAgICAgeyBuYW1lOiAnc2VjdXJlJ31cclxuICAgKiAgICAgICAgICAgXVxyXG4gICAqICAgICAgICAgfSxcclxuICAgKiAgICAgXTtcclxuICAgKlxyXG4gICAqICAgICB0aGlzLmxpc3RlbkZvckRvY0FuZFN1YkNvbGxlY3Rpb25zPFByb2R1Y3Q+KGRvY0ZzLCBjb2xsZWN0aW9ucylcclxuICAgKlxyXG4gICAqIFdyYXBwZXIgZm9yIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkIHNvIHRoYXQgd2UgY2FuIGNhc3QgdGhlIHJldHVybiB0byB0aGUgY29ycmVjdCB0eXBlXHJcbiAgICogQWxsIGxvZ2ljIGlzIGluIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiAtIGEgZG9jUmVmIHdpdGggcG90ZW50aWFsIHF1ZXJ5Rm5cclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgLSBzZWUgZXhhbXBsZVxyXG4gICAqIEBwYXJhbSBhY3Rpb25JZk5vdEV4aXN0IEFjdGlvbiB0byB0YWtlIGlmIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckRvYyQ8VCA9IEZpcmVzdG9yZUl0ZW0gfCBEb2N1bWVudERhdGE+KFxyXG4gICAgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIHJldHVybiB0aGlzLmxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMsIGFjdGlvbklmTm90RXhpc3QpLnBpcGUoXHJcbiAgICAgIG1hcChkYXRhID0+IGRhdGEgYXMgRmlyZUl0ZW08VD4pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2FtZSBhcyBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5zbmFwc2hvdENoYW5nZXMgYnV0IGl0IGFkZHMgdGhlIHByb3BlcnRpZXMgaW4gRmlyZWJhc2VEYkl0ZW0uXHJcbiAgICpcclxuICAgKiBJbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHdpbGwgdHJpZ2dlciBmb3IgZXZlcnkgY2hhbmdlL3VwZGF0ZSBvbiBhbnkgb2YgdGhlIGRvY3VtZW50cyB3ZSBhcmUgbGlzdGVuaW5nIHRvLlxyXG4gICAqIFRoYXQgbWVhbnMgdGhhdCBpZiBhbnkgZG9jdW1lbnQgd2UgYXJlIGxpc3RlbmluZyB0byBpcyBjaGFuZ2VkIHRoZSBlbnRpcmUgb2JqZWN0IHdpbGwgYmUgdHJpZ2dlcmVkIGNvbnRhaW5pbmcgdGhlIHVwZGF0ZWQgZGF0YS5cclxuICAgKlxyXG4gICAqXHJcbiAgICogICAgRXhhbXBsZSB1c2FnZS5cclxuICAgKlxyXG4gICAqICAgIG5nRmlyZXN0b3JlRGVlcDogUnhGaXJlc3RvcmVFeHRlbmRlZDsgIC8vICBSeEZpcmVzdG9yZUV4dGVuZGVkIHZhcmlhYmxlXHJcbiAgICogICAgcmVzdGF1cmFudENvbGxlY3Rpb25GcyA9IHRoaXMubmdGaXJlU3RvcmUuY29sbGVjdGlvbigncmVzdGF1cmFudHMnKTsgLy8gQW5ndWxhckZpcmVzdG9yZUNvbGxlY3Rpb25SZWYgdG8gcmVzdGF1cmFudHNcclxuICAgKlxyXG4gICAqICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmdGaXJlU3RvcmU6IEFuZ3VsYXJGaXJlc3RvcmUpIHtcclxuICAgKiAgICAgICAgdGhpcy5uZ0ZpcmVzdG9yZURlZXAgPSBuZXcgUnhGaXJlc3RvcmVFeHRlbmRlZChuZ0ZpcmVTdG9yZSk7ICAvLyAgaW5pdGlhbGl6ZSBBbmd1bGFyRmlyZVN0b3JlRGVlcCB3aXRoIEFuZ3VsYXJGaXJlc3RvcmVcclxuICAgKiAgICB9XHJcbiAgICpcclxuICAgKiAgICBsaXN0ZW5Gb3JSZXN0YXVyYW50cyQoKTogT2JzZXJ2YWJsZTxSZXN0YXVyYW50SXRlbVtdPiB7XHJcbiAgICogICAgICAgIHJldHVybiB0aGlzLm5nRmlyZXN0b3JlRGVlcC5saXN0ZW5Gb3JDb2xsZWN0aW9uJDxSZXN0YXVyYW50SXRlbT4odGhpcy5yZXN0YXVyYW50Q29sbGVjdGlvbkZzKTtcclxuICAgKiAgICB9XHJcbiAgICpcclxuICAgKiAgICBJZiB5b3UgZG8gbm90IHdpc2ggdG8gbGlzdGVuIGZvciBjaGFuZ2VzIGFuZCBvbmx5IGNhcmUgYWJvdXQgZ2V0dGluZyB0aGUgdmFsdWVzIG9uY2VcclxuICAgKlxyXG4gICAqICAgIGdldFJlc3RhdXJhbnRzJCgpOiBPYnNlcnZhYmxlPFJlc3RhdXJhbnRJdGVtW10+IHtcclxuICAgKiAgICAgICAgcmV0dXJuIHRoaXMubmdGaXJlc3RvcmVEZWVwLmxpc3RlbkZvckNvbGxlY3Rpb24kPFJlc3RhdXJhbnRJdGVtPih0aGlzLnJlc3RhdXJhbnRDb2xsZWN0aW9uRnMpLnBpcGUoXHJcbiAgICogICAgICAgICAgdGFrZSgxKVxyXG4gICAqICAgICAgICApO1xyXG4gICAqICAgIH1cclxuICAgKlxyXG4gICAqIEBwYXJhbSBfcXVlcnkgdGhlIGNvbGxlY3Rpb25SZWYgd2hpY2ggd2lsbCBiZSBsaXN0ZW5lZCB0b1xyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllc1xyXG4gICAqIEBwYXJhbSBkb2N1bWVudENoYW5nZVR5cGVzIGxpc3Qgb2YgRG9jdW1lbnRDaGFuZ2VUeXBlIHRoYXQgd2lsbCBiZSBsaXN0ZW5lZCB0bywgaWYgbnVsbCBsaXN0ZW4gdG8gYWxsXHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckNvbGxlY3Rpb24kPFQgPSBGaXJlc3RvcmVJdGVtIHwgRG9jdW1lbnREYXRhPihcclxuICAgIF9xdWVyeTogUXVlcnk8VD4sXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8QXJyYXk8RmlyZUl0ZW08VD4+PiB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZW1pdCB3aGVuZXZlciB0aGUgcmVmIGNoYW5nZXMgaW4gYW55IHdheS5cclxuICAgICAqIEFsc28gYWRkcyB0aGUgaWQgYW5kIHJlZiB0byB0aGUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uU2ltcGxlJDxUPihfcXVlcnkpLnBpcGUoXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW1zID09IG51bGwgfHwgaXRlbXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoW10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgIHJldHVybiBvZihpdGVtcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBjb2xsZWN0aW9uTGlzdGVuZXJzOiBBcnJheTxPYnNlcnZhYmxlPGFueT4+ID0gW107XHJcblxyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgY29uc3QgY29sbGVjdGlvbkxpc3RlbmVyID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG5cclxuICAgICAgICAgIGNvbGxlY3Rpb25MaXN0ZW5lcnMucHVzaChjb2xsZWN0aW9uTGlzdGVuZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKiBGaW5hbGx5IHJldHVybiB0aGUgY29tYmluZWQgY29sbGVjdGlvbiBsaXN0ZW5lcnMgKi9cclxuICAgICAgICByZXR1cm4gY29tYmluZUxhdGVzdChjb2xsZWN0aW9uTGlzdGVuZXJzKTtcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBMaXN0ZW5zIGZvciBjb2xsZWN0aW9ucyBpbnNpZGUgY29sbGVjdGlvbnMgd2l0aCB0aGUgc2FtZSBuYW1lIHRvIGFuIHVubGltaXRlZCBkZXB0aCBhbmQgcmV0dXJucyBhbGwgb2YgaXQgYXMgYW4gYXJyYXkuXHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckNvbGxlY3Rpb25SZWN1cnNpdmVseSQ8VCA9IEZpcmVzdG9yZUl0ZW0gfCBEb2N1bWVudERhdGE+KFxyXG4gICAgY29sbGVjdGlvblBhdGg6IHN0cmluZyxcclxuICAgIGNvbGxlY3Rpb25LZXk6IHN0cmluZyxcclxuICAgIG9yZGVyS2V5Pzogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuXHJcbiAgICAvLyBjb25zdCBjb2xsZWN0aW9uUmVmID0gZ2V0UmVmRnJvbVBhdGgoY29sbGVjdGlvblBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+O1xyXG4gICAgY29uc3QgY29sbGVjdGlvblF1ZXJ5ID0gbmV3IFF1ZXJ5Q29udGFpbmVyPFQ+KGdldFJlZkZyb21QYXRoKGNvbGxlY3Rpb25QYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPik7XHJcbiAgICBpZiAob3JkZXJLZXkgIT0gbnVsbCkge1xyXG4gICAgICBjb2xsZWN0aW9uUXVlcnkub3JkZXJCeShvcmRlcktleSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMubGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQ8VD4oY29sbGVjdGlvblF1ZXJ5LnF1ZXJ5KS5waXBlKFxyXG4gICAgICBtZXJnZU1hcCgoaXRlbXM6IEZpcmVJdGVtPFQ+W10pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW1zLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoW10pO1xyXG4gICAgICAgIH0gLy8gVE9ETyAgcGVyaGFwcyBtYWtlIHRoaXMgdGhyb3cgYW4gZXJyb3Igc28gdGhhdCB3ZSBjYW4gc2tpcCBpdFxyXG5cclxuICAgICAgICAvLyBpZiAoaXRlbXMubGVuZ3RoIDw9IDApIHsgdGhyb3dFcnJvcignTm8gbW9yZSAnKTsgfVxyXG5cclxuICAgICAgICBjb25zdCBuZXh0TGV2ZWxPYnM6IEFycmF5PE9ic2VydmFibGU8RmlyZUl0ZW08VD4+PiA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcclxuXHJcbiAgICAgICAgICAvLyBjb25zdCBuZXh0TGV2ZWxQYXRoID0gaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYuY29sbGVjdGlvbihjb2xsZWN0aW9uS2V5KS5wYXRoOyAgLy8gb25lIGxldmVsIGRlZXBlclxyXG4gICAgICAgICAgY29uc3QgbmV4dExldmVsUGF0aCA9IGl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEucmVmLnBhdGguY29uY2F0KCcvJywgY29sbGVjdGlvbktleSk7ICAvLyBvbmUgbGV2ZWwgZGVlcGVyXHJcblxyXG4gICAgICAgICAgY29uc3QgbmV4dExldmVsSXRlbXMkID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uUmVjdXJzaXZlbHkkKG5leHRMZXZlbFBhdGgsIGNvbGxlY3Rpb25LZXksIG9yZGVyS2V5KS5waXBlKFxyXG4gICAgICAgICAgICBtYXAoKG5leHRMZXZlbEl0ZW1zOiBBcnJheTxGaXJlSXRlbTxUPj4pID0+IHtcclxuICAgICAgICAgICAgICBpZiAobmV4dExldmVsSXRlbXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsuLi5pdGVtLCBbY29sbGVjdGlvbktleV06IG5leHRMZXZlbEl0ZW1zfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsuLi5pdGVtfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICAgICAgICB9ICAvLyBkb250IGluY2x1ZGUgYW4gZW1wdHkgYXJyYXlcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgbmV4dExldmVsT2JzLnB1c2gobmV4dExldmVsSXRlbXMkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KG5leHRMZXZlbE9icykucGlwZShcclxuICAgICAgICAgIHRhcCh2YWwgPT4gY29uc29sZS5sb2codmFsKSlcclxuICAgICAgICApO1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKiAtLS0tLS0tLS0tIEFERCAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBBZGQgZG9jdW1lbnQgdG8gZmlyZXN0b3JlIGFuZCBzcGxpdCBpdCB1cCBpbnRvIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgdGhlIGRhdGEgdG8gYmUgc2F2ZWRcclxuICAgKiBAcGFyYW0gY29sbGVjdGlvblJlZiBDb2xsZWN0aW9uUmVmZXJlbmNlIHJlZmVyZW5jZSB0byB3aGVyZSBvbiBmaXJlc3RvcmUgdGhlIGl0ZW0gc2hvdWxkIGJlIHNhdmVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25Xcml0ZXJzIHNlZSBkb2N1bWVudGF0aW9uIGZvciBTdWJDb2xsZWN0aW9uV3JpdGVyIGZvciBtb3JlIGRldGFpbHMgb24gaG93IHRoZXNlIGFyZSB1c2VkXHJcbiAgICogQHBhcmFtIGlzQWRkRGF0ZXMgaWYgdHJ1ZSAnY3JlYXRlZERhdGUnIGFuZCAnbW9kaWZpZWREYXRlJyBpcyBhZGRlZCB0byB0aGUgZGF0YVxyXG4gICAqIEBwYXJhbSBkb2NJZCBJZiBhIGRvY0lkIGlzIGdpdmVuIGl0IHdpbGwgdXNlIHRoYXQgc3BlY2lmaWMgaWQgd2hlbiBzYXZpbmcgdGhlIGRvYywgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYSByYW5kb20gaWQgd2lsbCBiZSB1c2VkLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBhZGQkPFQgPSBGaXJlc3RvcmVJdGVtPihcclxuICAgIGRhdGE6IFQsXHJcbiAgICBjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LFxyXG4gICAgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtdLFxyXG4gICAgaXNBZGREYXRlczogYm9vbGVhbiA9IHRydWUsXHJcbiAgICBkb2NJZD86IHN0cmluZyk6IE9ic2VydmFibGU8RmlyZUl0ZW08VD4+IHtcclxuXHJcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSAmJiBkb2NJZCAmJiBzdWJDb2xsZWN0aW9uV3JpdGVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IGVycm9yOiBGaXJlc3RvcmVFcnJvckV4dCA9IHtcclxuICAgICAgICBuYW1lOiAnZmlyZXN0b3JlRXh0L2ludmFsaWQtc3ViLWNvbGxlY3Rpb24td3JpdGVycycsXHJcbiAgICAgICAgY29kZTogJ3Vua25vd24nLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdDYW5ub3QgaGF2ZSBib3RoIGRvY0lkIGFuZCBzdWJDb2xsZWN0aW9uV3JpdGVycyBhdCB0aGUgc2FtZSB0aW1lIHdoZW4gZGF0YSBpcyBhbiBhcnJheScsXHJcbiAgICAgICAgc3RhY2s6ICcnLFxyXG4gICAgICAgIGRhdGEsXHJcbiAgICAgICAgc3ViQ29sbGVjdGlvbldyaXRlcnMsXHJcbiAgICAgICAgZG9jSWRcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBjdXJyZW50RG9jO1xyXG4gICAgbGV0IHN1YkNvbGxlY3Rpb25zOiB7IFtpbmRleDogc3RyaW5nXTogYW55OyB9ID0ge307XHJcblxyXG4gICAgLyogaWYgdGhlIGRhdGEgaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGVudGlyZSBhcnJheSB3aWxsIGJlIHNhdmVkIGluIGEgc2luZ2xlIGRvY3VtZW50IHdpdGggdGhhdCBkb2NJZCxcclxuICAgICogRWFjaCBpdGVtIGluIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGEgbWFwIHdpdGggdGhlIGtleSBiZWluZyB0aGUgYXJyYXkgaW5kZXhcclxuICAgICogV2Ugc3RpbGwgd2FudCB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoaXMgZnVuY3Rpb24gdG8gYmUgYXMgYW4gYXJyYXkgbm9uIGFzIGEgbWFwXHJcbiAgICAqL1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZG9jSWQpIHtcclxuICAgICAgY3VycmVudERvYyA9IGRhdGE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCBzcGxpdCA9IHRoaXMuc3BsaXREYXRhSW50b0N1cnJlbnREb2NBbmRTdWJDb2xsZWN0aW9ucyhkYXRhLCBzdWJDb2xsZWN0aW9uV3JpdGVycyk7XHJcbiAgICAgIGN1cnJlbnREb2MgPSBzcGxpdC5jdXJyZW50RG9jO1xyXG4gICAgICBzdWJDb2xsZWN0aW9ucyA9IHNwbGl0LnN1YkNvbGxlY3Rpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmFkZFNpbXBsZSQ8VD4oY3VycmVudERvYyBhcyBULCBjb2xsZWN0aW9uUmVmLCBpc0FkZERhdGVzLCBkb2NJZCkucGlwZShcclxuICAgICAgLyogQWRkIFN1Yi9zdWIgY29sbGVjdGlvbnMqL1xyXG4gICAgICBtZXJnZU1hcCgoY3VycmVudERhdGE6IEZpcmVJdGVtPFQ+KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnN0IHN1YldyaXRlcnM6IEFycmF5PE9ic2VydmFibGU8YW55Pj4gPSBbXTtcclxuXHJcbiAgICAgICAgZm9yIChjb25zdCBbc3ViQ29sbGVjdGlvbktleSwgc3ViQ29sbGVjdGlvblZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdWJDb2xsZWN0aW9ucykpIHtcclxuICAgICAgICAgIGxldCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdIHwgdW5kZWZpbmVkOyAvLyB1bmRlZmluZWQgaWYgbm8gc3ViQ29sbGVjdGlvbldyaXRlcnNcclxuICAgICAgICAgIGxldCBzdWJEb2NJZDogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG5cclxuICAgICAgICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycykge1xyXG4gICAgICAgICAgICBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycyA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5zdWJDb2xsZWN0aW9ucztcclxuICAgICAgICAgICAgc3ViRG9jSWQgPSBzdWJDb2xsZWN0aW9uV3JpdGVycy5maW5kKHN1YkNvbGwgPT4gc3ViQ29sbC5uYW1lID09PSBzdWJDb2xsZWN0aW9uS2V5KT8uZG9jSWQ7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY29uc3Qgc3ViQ29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSA9IGdldFN1YkNvbGxlY3Rpb24oY3VycmVudERhdGEuZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uS2V5KTtcclxuXHJcbiAgICAgICAgICAvKiBIYW5kbGUgYXJyYXkgYW5kIG9iamVjdCBkaWZmZXJlbnRseVxyXG4gICAgICAgICAgKiBGb3IgZXhhbXBsZSBpZiBhcnJheSBhbmQgbm8gZG9jSWQgaXMgZ2l2ZW4gaXQgbWVhbnMgd2Ugc2hvdWxkIHNhdmUgZWFjaCBlbnRyeSBhcyBhIHNlcGFyYXRlIGRvYy5cclxuICAgICAgICAgICogSWYgYSBkb2NJZCBpcyBnaXZlbiB3ZSBzaG91bGQgc2F2ZSBpdCB1c2luZyB0aGF0IGRvY0lkIHVuZGVyIGEgc2luZ2xlIGRvYy5cclxuICAgICAgICAgICogSWYgbm90IGFuIGFycmF5IGl0IHdpbGwgYWx3YXlzIGJlIHNhdmVkIGFzIGEgc2luZ2xlIGRvYywgdXNpbmcgdGhpcy5kZWZhdWx0RG9jSWQgYXMgdGhlIGRlZmF1bHQgZG9jSWQgaWYgbm9uZSBpcyBnaXZlbiAqL1xyXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3ViQ29sbGVjdGlvblZhbHVlKSkge1xyXG4gICAgICAgICAgICBpZiAoc3ViRG9jSWQgIT09IHVuZGVmaW5lZCkgeyAvKiBub3QgdW5kZWZpbmVkIHNvIHNhdmUgaXQgYXMgYSBzaW5nbGUgZG9jIHVuZGVyIHRoYXQgZG9jSWQgKi9cclxuXHJcbiAgICAgICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHN1YkNvbGxlY3Rpb25WYWx1ZSBub3QgZm9yIHdyaXRpbmcgdGhlIGRhdGEgKi9cclxuICAgICAgICAgICAgICBjb25zdCBzdWJXcml0ZXIgPSB0aGlzLmFkZCQoc3ViQ29sbGVjdGlvblZhbHVlLCBzdWJDb2xsZWN0aW9uUmVmLCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycywgaXNBZGREYXRlcywgc3ViRG9jSWQpLnBpcGUoXHJcbiAgICAgICAgICAgICAgICBtYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIC8vIHJldHVybiB7W2tleV06IGl0ZW19O1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4ge2tleTogc3ViQ29sbGVjdGlvbktleSwgdmFsdWU6IGl0ZW19OyAvKiBrZXkgYW5kIHN1YkNvbGxlY3Rpb25WYWx1ZSBhcyBzZXBhcmF0ZSBrLHYgcHJvcGVydGllcyAqL1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgIHN1YldyaXRlcnMucHVzaChzdWJXcml0ZXIpO1xyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHsgLyogZG9jSWQgaXMgdW5kZWZpbmVkIHNvIHdlIHNhdmUgZWFjaCBvYmplY3QgaW4gdGhlIGFycmF5IHNlcGFyYXRlICovXHJcbiAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvblZhbHVlLmZvckVhY2goKGFycmF5VmFsdWU6IEZpcmVJdGVtPHt9PikgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIC8qIHRoZSBwaXBlIG9ubHkgbWF0dGVycyBmb3IgdGhlIHJldHVybiBzdWJDb2xsZWN0aW9uVmFsdWUgbm90IGZvciB3cml0aW5nIHRoZSBkYXRhICovXHJcbiAgICAgICAgICAgICAgICBjb25zdCBzdWJXcml0ZXIgPSB0aGlzLmFkZCQoYXJyYXlWYWx1ZSwgc3ViQ29sbGVjdGlvblJlZiwgc3ViU3ViQ29sbGVjdGlvbldyaXRlcnMsIGlzQWRkRGF0ZXMpLnBpcGUoXHJcbiAgICAgICAgICAgICAgICAgIG1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4ge1trZXldOiBbaXRlbV19O1xyXG4gICAgICAgICAgICAgICAgICAgIC8qIGtleSBhbmQgc3ViQ29sbGVjdGlvblZhbHVlIGFzIHNlcGFyYXRlIGssdiBwcm9wZXJ0aWVzIC0tIHN1YkNvbGxlY3Rpb25WYWx1ZSBpbiBhbiBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7a2V5OiBzdWJDb2xsZWN0aW9uS2V5LCB2YWx1ZTogW2l0ZW1dfTtcclxuICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAgICAgc3ViV3JpdGVycy5wdXNoKHN1YldyaXRlcik7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7IC8qIE5vdCBhbiBhcnJheSBzbyBhIHNpbmdsZSBPYmplY3QqL1xyXG4gICAgICAgICAgICBzdWJEb2NJZCA9IHN1YkRvY0lkICE9PSB1bmRlZmluZWQgPyBzdWJEb2NJZCA6IHRoaXMuZGVmYXVsdERvY0lkO1xyXG5cclxuICAgICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHN1YkNvbGxlY3Rpb25WYWx1ZSBub3QgZm9yIHdyaXRpbmcgdGhlIGRhdGEgKi9cclxuICAgICAgICAgICAgY29uc3Qgc3ViV3JpdGVyID0gdGhpcy5hZGQkKHN1YkNvbGxlY3Rpb25WYWx1ZSwgc3ViQ29sbGVjdGlvblJlZiwgc3ViU3ViQ29sbGVjdGlvbldyaXRlcnMsIGlzQWRkRGF0ZXMsIHN1YkRvY0lkKS5waXBlKFxyXG4gICAgICAgICAgICAgIG1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIHJldHVybiB7W2tleV06IGl0ZW19O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtrZXk6IHN1YkNvbGxlY3Rpb25LZXksIHZhbHVlOiBpdGVtfTsgLyoga2V5IGFuZCBzdWJDb2xsZWN0aW9uVmFsdWUgYXMgc2VwYXJhdGUgayx2IHByb3BlcnRpZXMgKi9cclxuICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgc3ViV3JpdGVycy5wdXNoKHN1YldyaXRlcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSAvKiBlbmQgb2YgaXRlcmF0aW9uICovXHJcblxyXG4gICAgICAgIGlmIChzdWJXcml0ZXJzLmxlbmd0aCA+IDApIHsgLyogaWYgc3ViV3JpdGVycy5sZW5ndGggPiAwIGl0IG1lYW5zIHdlIG5lZWQgdG8gaGFuZGxlIHRoZSBzdWJXcml0ZXJzICovXHJcblxyXG4gICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHZhbHVlIG5vdCBmb3Igd3JpdGluZyB0aGUgZGF0YSAqL1xyXG4gICAgICAgICAgcmV0dXJuIGNvbWJpbmVMYXRlc3Qoc3ViV3JpdGVycykucGlwZShcclxuICAgICAgICAgICAgLy8gdGFwKHN1YiA9PiBjb25zb2xlLmxvZyhzdWIpKSxcclxuXHJcbiAgICAgICAgICAgIC8vIFRPRE8gc3VwZXIgZHVwZXIgdWdseSB3YXkgb2Ygam9pbmluZyB0aGUgZGF0YSB0b2dldGhlciBidXQgSSBjYW5ub3QgdGhpbmsgb2YgYSBiZXR0ZXIgd2F5Li5hbHNvIGl0IGRvZXNudCByZWFsbHkgbWF0dGVyLlxyXG4gICAgICAgICAgICAvLyBUT0RPIFRoZSB1Z2xpbmVzcyBvbmx5IHJlbGF0ZXMgdG8gaG93IHRoZSByZXR1cm4gb2JqZWN0IGxvb2tzIGFmdGVyIHdlIGFkZCwgaXQgaGFzIG5vIGVmZmVjdCBvbiBob3cgdGhlIG9iamVjdCBpcyBzYXZlZCBvblxyXG4gICAgICAgICAgICAvLyBUT0RPIGZpcmVzdG9yZS5cclxuXHJcbiAgICAgICAgICAgIG1hcCgoZG9jRGF0YXM6IEFycmF5PE1hcDxzdHJpbmcsIFtdPj4pID0+IHsgLyogTGlzdCBvZiBzdWIgZG9jcyovXHJcbiAgICAgICAgICAgICAgY29uc3QgZ3JvdXBlZERhdGEgPSB7fTtcclxuXHJcbiAgICAgICAgICAgICAgZG9jRGF0YXMuZm9yRWFjaCgoZG9jOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0pID0+IHsgLyogaXRlcmF0ZSBvdmVyIGVhY2ggZG9jICovXHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gZG9jLmtleTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZG9jLnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIC8qIGlmIGdyb3VwZWREYXRhIGhhcyB0aGUga2V5IGFscmVhZHkgaXQgbWVhbnMgdGhhdCB0aGUgc2V2ZXJhbCBkb2NzIGhhdmUgdGhlIHNhbWUga2V5Li5zbyBhbiBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgaWYgKGdyb3VwZWREYXRhLmhhc093blByb3BlcnR5KGtleSkgJiYgQXJyYXkuaXNBcnJheShncm91cGVkRGF0YVtrZXldKSkge1xyXG4gICAgICAgICAgICAgICAgICAvKiBncm91cGVkRGF0YVtrZXldIG11c3QgYmUgYW4gYXJyYXkgc2luY2UgaXQgYWxyZWFkeSBleGlzdC4uYWRkIHRoaXMgZG9jLnZhbHVlIHRvIHRoZSBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgICAgICAgIChncm91cGVkRGF0YVtrZXldIGFzIEFycmF5PGFueT4pLnB1c2godmFsdWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgICBncm91cGVkRGF0YVtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIHJldHVybiBncm91cGVkRGF0YSBhcyBUO1xyXG4gICAgICAgICAgICB9KSxcclxuXHJcbiAgICAgICAgICAgIC8vIHRhcChncm91cGVkRGF0YSA9PiBjb25zb2xlLmxvZyhncm91cGVkRGF0YSkpLFxyXG5cclxuICAgICAgICAgICAgbWFwKChncm91cGVkRGF0YTogVCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiB7Li4uY3VycmVudERhdGEsIC4uLmdyb3VwZWREYXRhfSBhcyBUO1xyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgLy8gdGFwKGQgPT4gY29uc29sZS5sb2coZCkpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIG9mKGN1cnJlbnREYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICApLnBpcGUoXHJcbiAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIEVESVQgLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiAgLyoqXHJcbiAgICogVXBkYXRlIGRvY3VtZW50IGFuZCBjaGlsZCBkb2N1bWVudHNcclxuICAgKlxyXG4gICAqIEJlIGNhcmVmdWwgd2hlbiB1cGRhdGluZyBhIGRvY3VtZW50IG9mIGFueSBraW5kIHNpbmNlIHdlIGFsbG93IHBhcnRpYWwgZGF0YSB0aGVyZSBjYW5ub3QgYmUgYW55IHR5cGUgY2hlY2tpbmcgcHJpb3IgdG8gdXBkYXRlXHJcbiAgICogc28gaXRzIHBvc3NpYmxlIHRvIGludHJvZHVjZSBzcGVsbGluZyBtaXN0YWtlcyBvbiBhdHRyaWJ1dGVzIGFuZCBzbyBmb3J0aFxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgdGhlIGRhdGEgdGhhdCBpcyB0byBiZSBhZGRlZCBvciB1cGRhdGVkIHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfVxyXG4gICAqIEBwYXJhbSBkb2NSZWYgRG9jdW1lbnRSZWZlcmVuY2UgdG8gYmUgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uV3JpdGVycyBpZiB0aGUgZGF0YSBjb250YWlucyBwcm9wZXJ0aWVzIHRoYXQgc2hvdWxkIGJlIHBsYWNlZCBpbiBjaGlsZCBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzIHNwZWNpZnkgdGhhdCBoZXJlXHJcbiAgICogQHBhcmFtIGlzQWRkTW9kaWZpZWREYXRlIGlmIHRydWUgdGhlIG1vZGlmaWVkRGF0ZSBwcm9wZXJ0eSBpcyBhZGRlZC91cGRhdGVkIG9uIHRoZSBhZmZlY3RlZCBkb2N1bWVudHNcclxuICAgKi9cclxuICBwdWJsaWMgdXBkYXRlJDxBIGV4dGVuZHMgeyBbZmllbGQ6IHN0cmluZ106IGFueSB9PihkYXRhOiBQYXJ0aWFsPEE+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWRkTW9kaWZpZWREYXRlOiBib29sZWFuID0gdHJ1ZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gdGhpcy51cGRhdGVTaW1wbGUkKGRhdGEsIGRvY1JlZiwgaXNBZGRNb2RpZmllZERhdGUpOyAvLyBubyBzdWJDb2xsZWN0aW9uV3JpdGVycyBzbyBqdXN0IGRvIGEgc2ltcGxlIHVwZGF0ZVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGJhdGNoID0gdGhpcy51cGRhdGVEZWVwVG9CYXRjaEhlbHBlcihkYXRhLCBkb2NSZWYsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBpc0FkZE1vZGlmaWVkRGF0ZSk7XHJcbiAgICByZXR1cm4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVXBkYXRlLyBhZGQgZGF0YSB0byB0aGUgZmlyZXN0b3JlIGRvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZnMgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSB0byBiZSBoYXZlIHRoZWlyIGRhdGEgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBkYXRhIGRhdGEgdG8gYWRkL3VwZGF0ZVxyXG4gICAqIEBwYXJhbSBpc0FkZE1vZGlmaWVkRGF0ZSBpZiB0cnVlIHRoZSBtb2RpZmllZERhdGUgaXMgYWRkZWQvdXBkYXRlZFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1cGRhdGVNdWx0aXBsZSQ8QT4oZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSwgZGF0YTogQSwgaXNBZGRNb2RpZmllZERhdGU6IGJvb2xlYW4gPSB0cnVlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICAvLyBjb25zdCBiYXRjaCA9IHRoaXMuZnMuZmlyZWJhc2VBcHAuZmlyZXN0b3JlKCkuYmF0Y2goKTtcclxuICAgIGNvbnN0IGJhdGNoOiBXcml0ZUJhdGNoID0gd3JpdGVCYXRjaCh0aGlzLmZzLmZpcmVzdG9yZSk7XHJcblxyXG4gICAgaWYgKGlzQWRkTW9kaWZpZWREYXRlKSB7XHJcbiAgICAgIGRhdGEgPSBhZGRNb2RpZmllZERhdGUoZGF0YSwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGRvY1JlZnMuZm9yRWFjaCgoZG9jUmVmKSA9PiB7XHJcbiAgICAgIGJhdGNoLnVwZGF0ZShkb2NSZWYsIGRhdGEpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuYmF0Y2hDb21taXQkKGJhdGNoKTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBGaXJlc3RvcmUgZG9lc24ndCBhbGxvdyB5b3UgZG8gY2hhbmdlIHRoZSBuYW1lIG9yIG1vdmUgYSBkb2MgZGlyZWN0bHkgc28geW91IHdpbGwgaGF2ZSB0byBjcmVhdGUgYSBuZXcgZG9jIHVuZGVyIHRoZSBuZXcgbmFtZVxyXG4gICAqIGFuZCB0aGVuIGRlbGV0ZSB0aGUgb2xkIGRvYy5cclxuICAgKiByZXR1cm5zIHRoZSBuZXcgZG9jIG9uY2UgdGhlIGRlbGV0ZSBpcyBkb25lLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiBEb2N1bWVudFJlZmVyZW5jZSB0byBoYXZlIGl0cyBpZCBjaGFuZ2VkXHJcbiAgICogQHBhcmFtIG5ld0lkIHRoZSBuZXcgaWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIFN1YkNvbGxlY3Rpb25Xcml0ZXJzIGFyZSBuZWVkZWQgdG8gYWRkIHRoZW0gYmFja1xyXG4gICAqL1xyXG4gIHB1YmxpYyBjaGFuZ2VEb2NJZCQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0lkOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycyA9PSBudWxsKSB7XHJcbiAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzID0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXMgU3ViQ29sbGVjdGlvbldyaXRlcltdO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2UgPSBkb2NSZWYucGFyZW50O1xyXG5cclxuICAgIHJldHVybiB0aGlzLmxpc3RlbkZvckRvYyQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgICBtYXAoKG9sZERhdGE6IFQpID0+IHRoaXMuY2xlYW5FeHRyYXNGcm9tRGF0YShvbGREYXRhLCBzdWJDb2xsZWN0aW9uV3JpdGVycykpLFxyXG4gICAgICBzd2l0Y2hNYXAoKG9sZERhdGE6IFQpID0+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hZGQkKG9sZERhdGEsIGNvbGxlY3Rpb25SZWYsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBmYWxzZSwgbmV3SWQpLnBpcGUoIC8qIGFkZCB0aGUgZGF0YSB1bmRlciBpZCovXHJcbiAgICAgICAgICBtZXJnZU1hcChuZXdEYXRhID0+IHsgLyogZGVsZXRlIHRoZSBvbGQgZG9jICovXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRlbGV0ZSQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgICAgICAgICBtYXAoKCkgPT4gbmV3RGF0YSkgLyoga2VlcCB0aGUgbmV3IGRhdGEgKi9cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH0pLFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pLFxyXG4gICAgICBjYXRjaEVycm9yKGVyciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBDaGFuZ2UgRG9jIElkOiAnICsgZXJyKTtcclxuICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICAgIH0pLFxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgKTtcclxuXHJcbiAgfVxyXG5cclxuICAvKiBNb3ZlIEl0ZW0gaW4gQXJyYXkgKi9cclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIE1vdmVkIGl0ZW0gd2l0aGluIHRoZSBzYW1lIGxpc3Qgc28gd2UgbmVlZCB0byB1cGRhdGUgdGhlIGluZGV4IG9mIGFsbCBpdGVtcyBpbiB0aGUgbGlzdDtcclxuICAgKiBVc2UgYSBjb3B5IGlmIHlvdSBkb250IHdpc2ggdG8gdXBkYXRlIHRoZSBnaXZlbiBhcnJheSwgZm9yIGV4YW1wbGUgd2hlbiB5b3Ugd2FudCB0byBqdXN0IGxpc3RlbiBmb3IgdGhlIGNoYW5nZSBvZiB0aGUgZGIuLlxyXG4gICAqIFRoZSByZWFzb24gdG8gbm90IGRvIHRoaXMgaXMgYmVjYXVzZSBpdCB0YWtlcyBzb21lIHRpbWUgZm9yIHRoZSBkYiB0byB1cGRhdGUgYW5kIGl0IGxvb2tzIGJldHRlciBpZiB0aGUgbGlzdCB1cGRhdGVzIGltbWVkaWF0ZWx5LlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGl0ZW1zIGFycmF5IG9mIEZpcmVJdGVtPEE+IGRvY3Mgd2l0aCBpbmRleCB2YXJpYWJsZXMgdG8gYmUgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBmcm9tSW5kZXhcclxuICAgKiBAcGFyYW0gdG9JbmRleFxyXG4gICAqIEBwYXJhbSB1c2VDb3B5IGlmIHRydWUgdGhlIGdpdmVuIGFycmF5IHdpbGwgbm90IGJlIHVwZGF0ZWRcclxuICAgKi9cclxuICBwdWJsaWMgbW92ZUl0ZW1JbkFycmF5JDxBIGV4dGVuZHMgeyBpbmRleDogbnVtYmVyIH0+KGl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZUNvcHkgPSBmYWxzZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChmcm9tSW5kZXggPT0gbnVsbCB8fCB0b0luZGV4ID09IG51bGwgfHwgZnJvbUluZGV4ID09PSB0b0luZGV4IHx8IGl0ZW1zLmxlbmd0aCA8PSAwKSB7IC8vIHdlIGRpZG50IHJlYWxseSBtb3ZlIGFueXRoaW5nXHJcbiAgICAgIHJldHVybiBvZigpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpdGVtc1swXT8uZmlyZXN0b3JlTWV0YWRhdGEgPT0gbnVsbCkge1xyXG4gICAgICBjb25zdCBlcnJvcjogRmlyZXN0b3JlRXJyb3JFeHQgPSB7XHJcbiAgICAgICAgbmFtZTogJ2ZpcmVzdG9yZUV4dC91bmFibGUtdG8tY2hhbmdlLWluZGV4LW9mLW5vbi1kb2N1bWVudCcsXHJcbiAgICAgICAgY29kZTogJ25vdC1mb3VuZCcsXHJcbiAgICAgICAgbWVzc2FnZTogJ1RoZSBhcnJheSBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgYSBmaXJlc3RvcmUgZG9jdW1lbnQgb3IgRmlyZUl0ZW0gc2luY2UgaXQgbGFja3MgZmlyZXN0b3JlTWV0YWRhdGEnLFxyXG4gICAgICB9O1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBiYXRjaCA9IHRoaXMuZ2V0QmF0Y2hGcm9tTW92ZUl0ZW1JbkluZGV4ZWREb2NzKGl0ZW1zLCBmcm9tSW5kZXgsIHRvSW5kZXgsIHVzZUNvcHkpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmJhdGNoQ29tbWl0JChiYXRjaCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEb2VzIHRoZSBoZWF2eSBsaWZ0aW5nIHdoZW4gaXQgY29tZXMgdG8gdXBkYXRpbmcgbXVsdGlwbGUgZG9jcyB0byBjaGFuZ2UgdGhlaXIgaW5kZXguXHJcbiAgICogTm90IGNhbGxlZCBkaXJlY3RseS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBGaXJlSXRlbTxBPiBkb2NzIHdpdGggaW5kZXggdmFyaWFibGVzIHRvIGJlIHVwZGF0ZWRcclxuICAgKiBAcGFyYW0gZnJvbUluZGV4XHJcbiAgICogQHBhcmFtIHRvSW5kZXhcclxuICAgKiBAcGFyYW0gdXNlQ29weSBpZiB0cnVlIHRoZSBnaXZlbiBhcnJheSB3aWxsIG5vdCBiZSB1cGRhdGVkXHJcbiAgICogQHByb3RlY3RlZFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXRCYXRjaEZyb21Nb3ZlSXRlbUluSW5kZXhlZERvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihpdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9JbmRleDogbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VDb3B5ID0gZmFsc2UpOiBXcml0ZUJhdGNoIHtcclxuXHJcbiAgICBjb25zdCBsb3dlc3RJbmRleCA9IE1hdGgubWluKGZyb21JbmRleCwgdG9JbmRleCk7XHJcbiAgICBjb25zdCBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpO1xyXG5cclxuICAgIGlmIChmcm9tSW5kZXggPT0gbnVsbCB8fCB0b0luZGV4ID09IG51bGwgfHwgZnJvbUluZGV4ID09PSB0b0luZGV4KSB7IC8vIHdlIGRpZG50IHJlYWxseSBtb3ZlIGFueXRoaW5nXHJcbiAgICAgIHJldHVybiBiYXRjaDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgdXNlZEl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj47XHJcblxyXG4gICAgaWYgKHVzZUNvcHkpIHtcclxuICAgICAgdXNlZEl0ZW1zID0gT2JqZWN0LmFzc2lnbihbXSwgaXRlbXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdXNlZEl0ZW1zID0gaXRlbXM7XHJcbiAgICB9XHJcblxyXG4gICAgbW92ZUl0ZW1JbkFycmF5PEE+KHVzZWRJdGVtcywgZnJvbUluZGV4LCB0b0luZGV4KTtcclxuXHJcbiAgICBjb25zdCBsaXN0U2xpY2VUb1VwZGF0ZTogQXJyYXk8RmlyZUl0ZW08QT4+ID0gdXNlZEl0ZW1zLnNsaWNlKGxvd2VzdEluZGV4KTtcclxuXHJcbiAgICBsZXQgaSA9IGxvd2VzdEluZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGxpc3RTbGljZVRvVXBkYXRlKSB7XHJcbiAgICAgIGlmICghdXNlQ29weSkgeyAvLyB0aGlzIGlzIGp1c3Qgc28gdGhhdCB0aGUgZ2l2ZW4gYXJyYXkncyBpbmRleCBpcyBhbHNvIHVwZGF0ZWQgaW1tZWRpYXRlbHlcclxuICAgICAgICBpdGVtLmluZGV4ID0gaTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCByZWYgPSBnZXRSZWZGcm9tUGF0aChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZTtcclxuICAgICAgYmF0Y2gudXBkYXRlKHJlZiwge2luZGV4OiBpfSk7XHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2Ugd2hlbiB5b3Ugd2lzaCB0byBkZWxldGUgYW4gaW5kZXhlZCBkb2N1bWVudCBhbmQgaGF2ZSB0aGUgcmVtYWluaW5nIGRvY3VtZW50cyB1cGRhdGUgdGhlaXIgaW5kaWNlcyB0byByZWZsZWN0IHRoZSBjaGFuZ2UuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbXMgYXJyYXkgb2YgRmlyZUl0ZW08QT4gZG9jcyB3aXRoIGluZGV4IHZhcmlhYmxlcyB0byBiZSB1cGRhdGVkXHJcbiAgICogQHBhcmFtIGluZGV4VG9EZWxldGVcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXNcclxuICAgKiBAcGFyYW0gdXNlQ29weVxyXG4gICAqL1xyXG4gIHB1YmxpYyBkZWxldGVJbmRleGVkSXRlbUluQXJyYXkkPEEgZXh0ZW5kcyB7IGluZGV4OiBudW1iZXIgfT4oaXRlbXM6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4VG9EZWxldGU6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlQ29weTogYm9vbGVhbiA9IGZhbHNlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgbGV0IHVzZWRJdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG5cclxuICAgIGlmICh1c2VDb3B5KSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IE9iamVjdC5hc3NpZ24oW10sIGl0ZW1zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGl0ZW1Ub0RlbGV0ZSA9IHVzZWRJdGVtc1tpbmRleFRvRGVsZXRlXTtcclxuXHJcbiAgICAvLyBnZXQgdGhlIGRlbGV0ZSBiYXRjaCB0aGF0IGFsc28gY29udGFpbnMgYW55IHN1YiBjb2xsZWN0aW9ucyBvZiB0aGUgaXRlbVxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RGVsZXRlQmF0Y2gkKGl0ZW1Ub0RlbGV0ZS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKS5waXBlKFxyXG4gICAgICBtYXAoKGJhdGNoKSA9PiB7XHJcbiAgICAgICAgLy8gc29ydCBhbmQgcmVtb3ZlIHRoZSBpdGVtIGZyb20gdGhlIHVzZWRJdGVtcyBhbmQgdGhlbiBhZGQgdGhlIHVwZGF0ZSBpbmRleCB0byB0aGUgYmF0Y2hcclxuICAgICAgICB1c2VkSXRlbXMuc29ydChpdGVtID0+IGl0ZW0uaW5kZXgpOyAvLyBtYWtlIHN1cmUgYXJyYXkgaXMgc29ydGVkIGJ5IGluZGV4XHJcbiAgICAgICAgdXNlZEl0ZW1zLnNwbGljZShpbmRleFRvRGVsZXRlLCAxKTtcclxuXHJcbiAgICAgICAgdGhpcy5nZXRCYXRjaEZyb21VcGRhdGVJbmRleEZyb21MaXN0T2ZEb2NzPEE+KHVzZWRJdGVtcywgYmF0Y2gpO1xyXG5cclxuICAgICAgICByZXR1cm4gYmF0Y2g7XHJcbiAgICAgIH0pLFxyXG5cclxuICAgICAgc3dpdGNoTWFwKChiYXRjaCkgPT4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFVzZSB3aGVuIHlvdSB3aXNoIHRvIGRlbGV0ZSBzZXZlcmFsIGluZGV4ZWQgZG9jdW1lbnRzIGFuZCBoYXZlIHRoZSByZW1haW5pbmcgZG9jdW1lbnRzIHVwZGF0ZSB0aGVpciBpbmRpY2VzIHRvIHJlZmxlY3QgdGhlIGNoYW5nZS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBGaXJlSXRlbTxBPiBkb2NzIHdpdGggaW5kZXggdmFyaWFibGVzIHRvIGJlIHVwZGF0ZWRcclxuICAgKiBAcGFyYW0gaW5kaWNlc1RvRGVsZXRlXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzXHJcbiAgICogQHBhcmFtIHVzZUNvcHlcclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlSW5kZXhlZEl0ZW1zSW5BcnJheSQ8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihpdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNUb0RlbGV0ZTogbnVtYmVyW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlQ29weTogYm9vbGVhbiA9IGZhbHNlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgbGV0IHVzZWRJdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG5cclxuICAgIGlmICh1c2VDb3B5KSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IE9iamVjdC5hc3NpZ24oW10sIGl0ZW1zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIHVzZWRJdGVtcy5zb3J0KGl0ZW0gPT4gaXRlbS5pbmRleCk7IC8vIG1ha2Ugc3VyZSBhcnJheSBpcyBzb3J0ZWQgYnkgaW5kZXhcclxuXHJcbiAgICBjb25zdCBpdGVtc1RvRGVsZXRlID0gdXNlZEl0ZW1zLmZpbHRlcigoaXRlbSwgaSkgPT4ge1xyXG4gICAgICByZXR1cm4gaW5kaWNlc1RvRGVsZXRlLmZpbmRJbmRleChfaSA9PiBfaSA9PT0gaSkgIT09IC0xO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gaXRlcmF0ZSBpbiByZXZlcnNlIHNvIGFzIHRvIG5vdCBjaGFuZ2UgdGhlIGluZGljZXMsXHJcbiAgICAvLyB0aGUgaW5kaWNlcyB0byBkZWxldGUgbXVzdCBhbHNvIGJlIHNvcnRlZFxyXG4gICAgaW5kaWNlc1RvRGVsZXRlLnNvcnQoKTtcclxuICAgIGZvciAobGV0IGkgPSBpbmRpY2VzVG9EZWxldGUubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgdXNlZEl0ZW1zLnNwbGljZShpbmRpY2VzVG9EZWxldGVbaV0sIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGRvY1JlZnNPYnMkOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+W10gPSBbXTtcclxuXHJcbiAgICAvLyBnZXQgdGhlIGRvY1JlZnMgZm9yIGl0ZW1zIHRvIGJlIGRlbGV0ZWQgaW5jbHVkaW5nIHRoZSBvbmVzIGluIHRoZSBzdWJDb2xsZWN0aW9uc1xyXG4gICAgaXRlbXNUb0RlbGV0ZS5mb3JFYWNoKGl0ZW1Ub0RlbGV0ZSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBvYnMkID0gdGhpcy5nZXREb2N1bWVudFJlZmVyZW5jZXNEZWVwJChpdGVtVG9EZWxldGUuZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgICB0YWtlKDEpXHJcbiAgICAgICk7XHJcbiAgICAgIGRvY1JlZnNPYnMkLnB1c2gob2JzJCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgcmV0dXJuIGZvcmtKb2luKGRvY1JlZnNPYnMkKS5waXBlKFxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgICBtYXAoKGxpc3RPZkRvY1JlZnMpID0+IHtcclxuICAgICAgICAvLyBjb25jYXQgYWxsIHRoZSBzZXBhcmF0ZSBkb2NSZWZzIGxpc3RzIGludG8gb25lIGFycmF5IG9mIGRvY1JlZnNcclxuICAgICAgICBsZXQgZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSA9IFtdO1xyXG5cclxuICAgICAgICBsaXN0T2ZEb2NSZWZzLmZvckVhY2gocmVmcyA9PiB7XHJcbiAgICAgICAgICBkb2NSZWZzID0gZG9jUmVmcy5jb25jYXQocmVmcyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkb2NSZWZzO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwKChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzKSksXHJcbiAgICAgIG1hcCgoYmF0Y2g6IFdyaXRlQmF0Y2gpID0+IHRoaXMuZ2V0QmF0Y2hGcm9tVXBkYXRlSW5kZXhGcm9tTGlzdE9mRG9jczxBPih1c2VkSXRlbXMsIGJhdGNoKSksXHJcbiAgICAgIHN3aXRjaE1hcCgoYmF0Y2gpID0+IHRoaXMuYmF0Y2hDb21taXQkKGJhdGNoKSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSdW4gdGhpcyBvbiBjb2xsZWN0aW9ucyB3aXRoIGEgZml4ZWQgb3JkZXIgdXNpbmcgYW4gaW5kZXg6IG51bWJlciBhdHRyaWJ1dGU7XHJcbiAgICogVGhpcyB3aWxsIHVwZGF0ZSB0aGF0IGluZGV4IHdpdGggdGhlIGluZGV4IGluIHRoZSBjb2xsZWN0aW9uRGF0YSwgc28gaXQgc2hvdWxkIGJlIHNvcnRlZCBieSBpbmRleCBmaXJzdC5cclxuICAgKiBCYXNpY2FsbHkgbmVlZHMgdG8gYmUgcnVuIGFmdGVyIGEgZGVsZXRlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbXNcclxuICAgKiBAcGFyYW0gYmF0Y2hcclxuICAgKiBAcHJvdGVjdGVkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldEJhdGNoRnJvbVVwZGF0ZUluZGV4RnJvbUxpc3RPZkRvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihcclxuICAgIGl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpXHJcbiAgKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgaWYgKGl0ZW0uaW5kZXggIT09IGluZGV4KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGluZGV4OyAvLyB0aGlzIGlzIGp1c3Qgc28gdGhhdCB0aGUgZ2l2ZW4gYXJyYXkncyBpbmRleCBpcyBhbHNvIHVwZGF0ZWQgaW1tZWRpYXRlbHlcclxuICAgICAgICBjb25zdCByZWYgPSBnZXRSZWZGcm9tUGF0aChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZTtcclxuICAgICAgICBiYXRjaC51cGRhdGUocmVmLCB7aW5kZXh9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGJhdGNoO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHRyYW5zZmVySXRlbUluSW5kZXhlZERvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciwgZ3JvdXBOYW1lOiBzdHJpbmcgfT4oXHJcbiAgICBwcmV2aW91c0FycmF5OiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICBjdXJyZW50QXJyYXk6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgIHByZXZpb3VzSW5kZXg6IG51bWJlcixcclxuICAgIGN1cnJlbnRJbmRleDogbnVtYmVyLFxyXG4gICAgY3VycmVudEFycmF5TmFtZTogc3RyaW5nLFxyXG4gICAgYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbT86IHsgW2tleTogc3RyaW5nXTogYW55IH0sXHJcbiAgICBpc1VwZGF0ZU1vZGlmaWVkRGF0ZU9uTW92ZWRJdGVtID0gdHJ1ZSxcclxuICAgIHVzZUNvcHkgPSBmYWxzZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGNvbnN0IGJhdGNoOiBXcml0ZUJhdGNoID0gdGhpcy5nZXRCYXRjaEZyb21UcmFuc2Zlckl0ZW1JbkluZGV4ZWREb2NzKHByZXZpb3VzQXJyYXksXHJcbiAgICAgIGN1cnJlbnRBcnJheSxcclxuICAgICAgcHJldmlvdXNJbmRleCxcclxuICAgICAgY3VycmVudEluZGV4LFxyXG4gICAgICBjdXJyZW50QXJyYXlOYW1lLFxyXG4gICAgICBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtLFxyXG4gICAgICBpc1VwZGF0ZU1vZGlmaWVkRGF0ZU9uTW92ZWRJdGVtLFxyXG4gICAgICB1c2VDb3B5KTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIERFTEVURSAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBEZWxldGUgRG9jdW1lbnQgYW5kIGNoaWxkIGRvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiBEb2N1bWVudFJlZmVyZW5jZSB0aGF0IGlzIHRvIGJlIGRlbGV0ZWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlJChkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uUXVlcmllcyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBub3QgZGVlcCBzbyBqdXN0IGRvIGEgbm9ybWFsIGRvYyBkZWxldGVcclxuICAgICAgcmV0dXJuIHRoaXMuZnMuZGVsZXRlKGRvY1JlZik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRGVlcCQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgc3dpdGNoTWFwKChkb2NSZWZMaXN0OiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZGVsZXRlTXVsdGlwbGVTaW1wbGUkKGRvY1JlZkxpc3QpKSxcclxuICAgICAgLy8gY2F0Y2hFcnJvcigoZXJyKSA9PiB7IC8vIFRPRE8gc3VwZXIgdWdseSBhbmQgSSBkb250IGtub3cgd2h5IHRoaXMgZXJyb3IgaXMgdGhyb3duLi5zdGlsbCB3b3Jrc1xyXG4gICAgICAvLyAgIGlmIChlcnIgPT09ICdEb2N1bWVudCBEb2VzIG5vdCBleGlzdHMnKSB7IHJldHVybiBvZigpOyB9XHJcbiAgICAgIC8vICAgZWxzZSB7IHRocm93IGVycjsgfVxyXG4gICAgICAvLyB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIFdyaXRlQmF0Y2ggdGhhdCBpcyBzZXQgdG8gZGVsZXRlIERvY3VtZW50IGFuZCBjaGlsZCBkb2N1bWVudHMgb2YgZ2l2ZW4gZG9jUmVmXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUmVmIERvY3VtZW50UmVmZXJlbmNlIHRoYXQgaXMgdG8gYmUgZGVsZXRlZFxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllcyBpZiB0aGUgZG9jdW1lbnQgaGFzIGNoaWxkIGRvY3VtZW50cyB0aGUgc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXJlIG5lZWRlZCB0byBsb2NhdGUgdGhlbVxyXG4gICAqIEBwYXJhbSBiYXRjaFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXREZWxldGVCYXRjaCQoZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2g6IFdyaXRlQmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKSk6IE9ic2VydmFibGU8V3JpdGVCYXRjaD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uUXVlcmllcyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBub3QgZGVlcCBzbyBqdXN0IGRvIGEgbm9ybWFsIGRvYyBkZWxldGVcclxuICAgICAgYmF0Y2guZGVsZXRlKGRvY1JlZik7XHJcbiAgICAgIHJldHVybiBvZihiYXRjaCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRGVlcCQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgbWFwKChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzKSksXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGVsZXRlTXVsdGlwbGVCeVBhdGhzJChkb2NQYXRoczogc3RyaW5nW10pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSA9XHJcbiAgICAgIGRvY1BhdGhzLm1hcChwYXRoID0+IGdldFJlZkZyb21QYXRoKHBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZGVsZXRlTXVsdGlwbGVTaW1wbGUkKGRvY1JlZnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIERvY3VtZW50cyBhbmQgY2hpbGQgZG9jdW1lbnRzXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUmVmcyAtIEEgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSB0aGF0IGFyZSB0byBiZSBkZWxldGVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZU11bHRpcGxlJChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZVtdLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgaWYgKHN1YkNvbGxlY3Rpb25RdWVyaWVzID09IG51bGwgfHwgc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZzKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkZWVwRG9jUmVmcyQ6IEFycmF5PE9ic2VydmFibGU8YW55Pj4gPSBbXTtcclxuXHJcbiAgICBkb2NSZWZzLmZvckVhY2goZG9jUmVmID0+IHtcclxuICAgICAgY29uc3QgZG9jUmVmcyQgPSB0aGlzLmdldERvY3VtZW50UmVmZXJlbmNlc0RlZXAkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgICBkZWVwRG9jUmVmcyQucHVzaChkb2NSZWZzJCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gY29tYmluZUxhdGVzdChkZWVwRG9jUmVmcyQpLnBpcGUoXHJcbiAgICAgIC8vIHRhcChsaXN0cyA9PiBjb25zb2xlLmxvZyhsaXN0cykpLFxyXG4gICAgICBtYXAoKGxpc3RzOiBhbnlbXSkgPT4ge1xyXG4gICAgICAgIGxldCBtYWluRG9jUmVmTGlzdDogRG9jdW1lbnRSZWZlcmVuY2VbXSA9IFtdO1xyXG4gICAgICAgIGxpc3RzLmZvckVhY2gobGlzdCA9PiB7XHJcbiAgICAgICAgICBtYWluRG9jUmVmTGlzdCA9IG1haW5Eb2NSZWZMaXN0LmNvbmNhdChsaXN0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gbWFpbkRvY1JlZkxpc3Q7XHJcbiAgICAgIH0pLFxyXG4gICAgICAvLyB0YXAobGlzdHMgPT4gY29uc29sZS5sb2cobGlzdHMpKSxcclxuICAgICAgc3dpdGNoTWFwKChkb2NSZWZMaXN0OiBEb2N1bWVudFJlZmVyZW5jZVtdKSA9PiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZMaXN0KSksXHJcbiAgICAgIC8vIGNhdGNoRXJyb3IoKGVycikgPT4geyAvLyBUT0RPIHN1cGVyIHVnbHkgYW5kIEkgZG9udCBrbm93IHdoeSB0aGlzIGVycm9yIGlzIHRocm93bi4uc3RpbGwgd29ya3NcclxuICAgICAgLy8gICBpZiAoZXJyID09PSAnRG9jdW1lbnQgRG9lcyBub3QgZXhpc3RzJykgeyByZXR1cm4gb2YobnVsbCk7IH1cclxuICAgICAgLy8gICBlbHNlIHsgdGhyb3cgZXJyOyB9XHJcbiAgICAgIC8vIH0pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIGFsbCBkb2N1bWVudHMgYW5kIHN1YiBjb2xsZWN0aW9ucyBhcyBzcGVjaWZpZWQgaW4gc3ViQ29sbGVjdGlvblF1ZXJpZXMuXHJcbiAgICogTm90IHZlcnkgZWZmaWNpZW50IGFuZCBjYXVzZXMgYSBsb3Qgb2YgZGIgcmVhZHMuXHJcbiAgICogSWYgcG9zc2libGUgdXNlIHRoZSBmaXJlYmFzZSBDTEkgb3IgdGhlIGNvbnNvbGUgaW5zdGVhZCB3aGVuIGRlbGV0aW5nIGxhcmdlIGNvbGxlY3Rpb25zLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25SZWZcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXNcclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlQ29sbGVjdGlvbiQoY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSwgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUNvbGxlY3Rpb25SZWYkKGNvbGxlY3Rpb25SZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKS5waXBlKFxyXG4gICAgICBzd2l0Y2hNYXAoZG9jUmVmcyA9PiB0aGlzLmRlbGV0ZU11bHRpcGxlJChkb2NSZWZzKSlcclxuICAgICkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBEZWxldGUgZmlyZXN0b3JlIGRvY3VtZW50IGJ5IHBhdGhcclxuICAgKiBDb252ZW5pZW5jZSBtZXRob2QgaW4gY2FzZSB3ZSBkbyBub3QgaGF2ZSBkaXJlY3QgYWNjZXNzIHRvIHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnQgcmVmZXJlbmNlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUGF0aCBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIHBhdGggb2YgdGhlIHJlZmVyZW5jZWQgZG9jdW1lbnQgKHJlbGF0aXZlIHRvIHRoZSByb290IG9mIHRoZSBkYXRhYmFzZSkuXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZURvY0J5UGF0aCQoZG9jUGF0aDogc3RyaW5nLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCBkb2NSZWYgPSBnZXRSZWZGcm9tUGF0aChkb2NQYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgRG9jdW1lbnRSZWZlcmVuY2U7XHJcbiAgICByZXR1cm4gdGhpcy5kZWxldGUkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIGRvY3VtZW50IGJ5IEZpcmVzdG9yZUl0ZW1cclxuICAgKlxyXG4gICAqIENvbnZlbmllbmNlIG1ldGhvZCB0aGF0IHdvcmtzIHRoZSBzYW1lIGFzIGRlbGV0ZURlZXAkIGJ1dCB0YWtlcyBhIEZpcmVzdG9yZUl0ZW0gdG8gYmUgZGVsZXRlZFxyXG4gICAqXHJcbiAgICogQHBhcmFtIGl0ZW0gRmlyZXN0b3JlSXRlbSB0byBiZSBkZWxldGVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZUl0ZW0kPFQ+KGl0ZW06IEZpcmVJdGVtPFQ+LCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgY29uc3QgZG9jUmVmcyA9IHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUl0ZW0oaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZzKS5waXBlKFxyXG4gICAgICAvLyBjYXRjaEVycm9yKChlcnIpID0+IHsgLy8gVE9ETyBzdXBlciB1Z2x5IGFuZCBJIGRvbnQga25vdyB3aHkgdGhpcyBlcnJvciBpcyB0aHJvd24uLnN0aWxsIHdvcmtzXHJcbiAgICAgIC8vICAgaWYgKGVyciA9PT0gJ0RvY3VtZW50IERvZXMgbm90IGV4aXN0cycpIHsgcmV0dXJuIG9mKG51bGwpOyB9XHJcbiAgICAgIC8vICAgZWxzZSB7IHRocm93IGVycjsgfVxyXG4gICAgICAvLyB9KSxcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG5cclxuICAvKiAtLS0tIE9USEVSIC0tLS0gKi9cclxuXHJcbiAgLyoqXHJcbiAgICogY2xlYW4gRmlyZXN0b3JlQmFzZUl0ZW0gcHJvcGVydGllcyBmcm9tIHRoZSBkYXRhLlxyXG4gICAqIFVzdWFsbHkgZG9uZSBpZiB5b3Ugd2lzaCB0byBzYXZlIHRoZSBkYXRhIHRvIGZpcmVzdG9yZSwgc2luY2Ugc29tZSBGaXJlc3RvcmVCYXNlSXRlbSBwcm9wZXJ0aWVzIGFyZSBvZiBub24gYWxsb3dlZCB0eXBlcy5cclxuICAgKlxyXG4gICAqIEdvZXMgdGhyb3VnaCBlYWNoIGxldmVsIGFuZCByZW1vdmVzIERiSXRlbUV4dHJhc1xyXG4gICAqIEluIGNhc2UgeW91IHdpc2ggdG8gc2F2ZSB0aGUgZGF0YVxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgZGF0YSB0byBiZSBjbGVhbmVkLCBlaXRoZXIgc2luZ2xlIGl0ZW0gb3IgYW4gYXJyYXkgb2YgaXRlbXNcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIFN1YkNvbGxlY3Rpb25Xcml0ZXJzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKiBAcGFyYW0gYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlXHJcbiAgICovXHJcblxyXG4gIGNsZWFuRXh0cmFzRnJvbURhdGE8VD4oZGF0YTogVCAmIERvY3VtZW50RGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlPzogc3RyaW5nW10pOiBUO1xyXG5cclxuICBjbGVhbkV4dHJhc0Zyb21EYXRhPFQ+KGRhdGFzOiBBcnJheTxUICYgRG9jdW1lbnREYXRhPixcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlPzogc3RyaW5nW10pOiBBcnJheTxUPjtcclxuXHJcbiAgcHVibGljIGNsZWFuRXh0cmFzRnJvbURhdGE8VD4oZGF0YTogVCAmIERvY3VtZW50RGF0YSB8IEFycmF5PFQgJiBEb2N1bWVudERhdGE+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzOiBTdWJDb2xsZWN0aW9uV3JpdGVyW10gPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmU6IHN0cmluZ1tdID0gW10pOiBUIHwgQXJyYXk8VD4ge1xyXG5cclxuICAgIC8vIGNvbnN0IGRhdGFUb0JlQ2xlYW5lZCA9IGNsb25lRGVlcChkYXRhKTsgLyogY2xvbmUgZGF0YSBzbyB3ZSBkb250IG1vZGlmeSB0aGUgb3JpZ2luYWwgKi9cclxuICAgIC8vIGNvbnN0IGRhdGFUb0JlQ2xlYW5lZCA9IGRhdGE7XHJcblxyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuXHJcbiAgICAgIGNvbnN0IGNsZWFuRGF0YXM6IEFycmF5PFQ+ID0gW107XHJcblxyXG4gICAgICBkYXRhLmZvckVhY2goZCA9PiB7XHJcbiAgICAgICAgY2xlYW5EYXRhcy5wdXNoKFxyXG4gICAgICAgICAgdGhpcy5yZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyKGQsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmUpIGFzIFRcclxuICAgICAgICApO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBjbGVhbkRhdGFzO1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnJlbW92ZURhdGFFeHRyYXNSZWN1cnNpdmVIZWxwZXIoZGF0YSwgc3ViQ29sbGVjdGlvbldyaXRlcnMsIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZSkgYXMgVDtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAvKiAtLS0tLS0tLS0tICBQUk9URUNURUQgTUVUSE9EUyAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBTYW1lIGFzIEFuZ3VsYXJGaXJlc3RvcmVEb2N1bWVudC5zbmFwc2hvdENoYW5nZXMgYnV0IGl0IGFkZHMgdGhlIHByb3BlcnRpZXMgaW4gRmlyZWJhc2VEYkl0ZW1cclxuICAgKiBhbmQgYWxzbyBhbGxvd3MgZm9yIHRvIGNob29zZSBhY3Rpb24gdG8gdGFrZSB3aGVuIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XHJcbiAgICpcclxuICAgKiBJbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHdpbGwgdHJpZ2dlciBmb3IgZXZlcnkgY2hhbmdlL3VwZGF0ZSBvbiB0aGUgZG9jdW1lbnQgd2UgYXJlIGxpc3RlbmluZyB0by5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBkb2NSZWYgRG9jdW1lbnRSZWZlcmVuY2UgdGhhdCB3aWxsIGJlIGxpc3RlbmVkIHRvXHJcbiAgICogQHBhcmFtIGFjdGlvbklmTm90RXhpc3QgQWN0aW9uIHRvIHRha2UgaWYgZG9jdW1lbnQgZG9lcyBub3QgZXhpc3RcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yRG9jU2ltcGxlJDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPGFueT4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBXHJcbiAgKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIHJldHVybiB0aGlzLmZzLmRvYyhkb2NSZWYpLnBpcGUoXHJcbiAgICAgIHRhcCgoc25hcHNob3Q6IERvY3VtZW50U25hcHNob3QpID0+IHtcclxuICAgICAgICBpZiAoIXNuYXBzaG90LmV4aXN0cygpICYmIGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlRIUk9XX0RPQ19OT1RfRk9VTkQpIHtcclxuICAgICAgICAgIGNvbnN0IGVycm9yOiBGaXJlc3RvcmVFcnJvckV4dCA9IHtcclxuICAgICAgICAgICAgbmFtZTogJ0ZpcmViYXNlRXJyb3JFeHQnLFxyXG4gICAgICAgICAgICBjb2RlOiAnbm90LWZvdW5kJyxcclxuICAgICAgICAgICAgbWVzc2FnZTogJ0RvY3VtZW50IG5vdCBmb3VuZCBhbmQgYWN0aW9uSWZOb3RFeGlzdCBpcyBzZXQgdG8gVEhST1dfRE9DX05PVF9GT1VORCcsXHJcbiAgICAgICAgICAgIGRvY1JlZlxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcblxyXG4gICAgICBmaWx0ZXIoKHNuYXBzaG90OiBEb2N1bWVudFNuYXBzaG90KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICEoc25hcHNob3QuZXhpc3RzKCkgJiYgYWN0aW9uSWZOb3RFeGlzdCA9PT0gRG9jTm90RXhpc3RBY3Rpb24uRklMVEVSKTtcclxuICAgICAgfSksXHJcblxyXG4gICAgICBtYXAoKHNuYXBzaG90OiBEb2N1bWVudFNuYXBzaG90KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHNuYXBzaG90LmV4aXN0cygpKTtcclxuXHJcbiAgICAgICAgaWYgKHNuYXBzaG90LmV4aXN0cygpIHx8IGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlJFVFVSTl9BTExfQlVUX0RBVEEpIHtcclxuICAgICAgICAgIGNvbnN0IGRhdGEgPSBzbmFwc2hvdC5kYXRhKCkgYXMgVDtcclxuXHJcbiAgICAgICAgICBjb25zdCBmaXJlc3RvcmVNZXRhZGF0YTogRmlyZXN0b3JlTWV0YWRhdGE8VD4gPSB7XHJcbiAgICAgICAgICAgIGlkOiBzbmFwc2hvdC5pZCxcclxuICAgICAgICAgICAgcmVmOiBzbmFwc2hvdC5yZWYgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD4sXHJcbiAgICAgICAgICAgIHBhdGg6IGRvY1JlZi5wYXRoLFxyXG4gICAgICAgICAgICBpc0V4aXN0czogc25hcHNob3QuZXhpc3RzKCksXHJcbiAgICAgICAgICAgIHNuYXBzaG90TWV0YWRhdGE6IHNuYXBzaG90Lm1ldGFkYXRhXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHJldHVybiB7Li4uZGF0YSwgZmlyZXN0b3JlTWV0YWRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlJFVFVSTl9OVUxMKSB7IC8qIGRvYyBkb2Vzbid0IGV4aXN0ICovXHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH0pLFxyXG4gICAgICBtYXAoKGRhdGEpID0+IHtcclxuICAgICAgICBpZiAoZGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvRGF0ZShkYXRhIGFzIEZpcmVJdGVtPHt9Pik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcbiAgICApIGFzIE9ic2VydmFibGU8RmlyZUl0ZW08VD4+O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTGlzdGVucyBmb3Igc2luZ2xlIGNvbGxlY3Rpb24gYW5kIHJldHVybnMgYW4gYXJyYXkgb2YgZG9jdW1lbnRzIGFzIEZpcmVJdGVtPFQ+W11cclxuICAgKiBVc2VkIGludGVybmFsbHksIHBsZWFzZSB1c2UgbGlzdGVuRm9yQ29sbGVjdGlvbiQoKSBpbnN0ZWFkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIF9xdWVyeSB0aGUgUXVlcnkgd2hpY2ggd2lsbCBiZSBsaXN0ZW5lZCB0b1xyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQ8VD4oX3F1ZXJ5OiBRdWVyeTxUPik6IE9ic2VydmFibGU8QXJyYXk8RmlyZUl0ZW08VD4+PiB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZW1pdCB3aGVuZXZlciB0aGUgcmVmIGNoYW5nZXMgaW4gYW55IHdheS5cclxuICAgICAqIEFsc28gYWRkcyB0aGUgaWQgYW5kIHJlZiB0byB0aGUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXR1cm4gdGhpcy5mcy5jb2xsZWN0aW9uKF9xdWVyeSkucGlwZShcclxuICAgICAgbWFwKChzbmFwOiBRdWVyeVNuYXBzaG90PFQ+KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHNuYXAuZG9jcy5tYXAoc25hcHNob3QgPT4ge1xyXG4gICAgICAgICAgY29uc3QgZGF0YSA9IHNuYXBzaG90LmRhdGEoKSBhcyBUO1xyXG5cclxuICAgICAgICAgIGNvbnN0IGlkID0gc25hcHNob3QuaWQ7XHJcbiAgICAgICAgICBjb25zdCByZWYgPSBzbmFwc2hvdC5yZWYgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcbiAgICAgICAgICBjb25zdCBwYXRoID0gcmVmLnBhdGg7XHJcbiAgICAgICAgICBjb25zdCBzbmFwc2hvdE1ldGFkYXRhID0gc25hcHNob3QubWV0YWRhdGE7XHJcblxyXG4gICAgICAgICAgY29uc3QgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+ID0ge1xyXG4gICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgcGF0aCxcclxuICAgICAgICAgICAgcmVmLFxyXG4gICAgICAgICAgICBzbmFwc2hvdE1ldGFkYXRhLFxyXG4gICAgICAgICAgICBpc0V4aXN0czogdHJ1ZVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICByZXR1cm4gey4uLmRhdGEsIGZpcmVzdG9yZU1ldGFkYXRhfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICB9KTtcclxuICAgICAgfSksXHJcbiAgICAgIG1hcCgoZGF0YXM6IEFycmF5PEZpcmVJdGVtPFQ+PikgPT4gZGF0YXMubWFwKGRhdGEgPT4ge1xyXG4gICAgICAgIGNvbnZlcnRUaW1lc3RhbXBUb0RhdGUoZGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0pKVxyXG4gICAgKSBhcyBPYnNlcnZhYmxlPEFycmF5PEZpcmVJdGVtPFQ+Pj47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2VkIGludGVybmFsbHkgZm9yIGJvdGggbGlzdGVuRm9yRG9jIGFuZCBsaXN0ZW5Gb3JDb2xsZWN0aW9uIGluIG9yZGVyIHRvIHJlY3Vyc2l2ZWx5IGdldCBjb2xsZWN0aW9ucy5cclxuICAgKlxyXG4gICAqIFBsZWFzZSB1c2UgbGlzdGVuRm9yRG9jIG9yIGxpc3RlbkZvckNvbGxlY3Rpb24uXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbVxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllc1xyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yQ29sbGVjdGlvbnNEZWVwPFQ+KFxyXG4gICAgaXRlbTogRmlyZUl0ZW08VD4sXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8RmlyZUl0ZW08VD5bXT4ge1xyXG5cclxuICAgIGlmIChpdGVtID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIG9mKFtpdGVtXSk7XHJcbiAgICB9XHJcbiAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgcmV0dXJuIG9mKFtpdGVtXSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY29sbGVjdGlvbkxpc3RlbmVyczogQXJyYXk8T2JzZXJ2YWJsZTxhbnk+PiA9IFtdO1xyXG5cclxuICAgIC8qIEl0ZXJhdGUgb3ZlciBlYWNoIHN1YiBjb2xsZWN0aW9uIHdlIGhhdmUgZ2l2ZW4gYW5kIGNyZWF0ZSBjb2xsZWN0aW9uIGxpc3RlbmVycyovXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllcy5mb3JFYWNoKHN1YkNvbGxlY3Rpb25RdWVyeSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBxdWVyeUNvbnRhaW5lciA9IG5ldyBRdWVyeUNvbnRhaW5lcihnZXRTdWJDb2xsZWN0aW9uKGl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uUXVlcnkubmFtZSkpO1xyXG4gICAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJ5LnF1ZXJ5Q29uc3RyYWludHMpIHtcclxuICAgICAgICBxdWVyeUNvbnRhaW5lci5xdWVyeUNvbnN0cmFpbnRzID0gc3ViQ29sbGVjdGlvblF1ZXJ5LnF1ZXJ5Q29uc3RyYWludHM7XHJcbiAgICAgICAgLy8gY29sbGVjdGlvblJlZiA9IHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKGNvbGxlY3Rpb25SZWYpIGFzIENvbGxlY3Rpb25SZWZlcmVuY2U7XHJcbiAgICAgIH1cclxuICAgICAgLy8gaWYgKHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKSB7XHJcbiAgICAgIC8vICAgY29sbGVjdGlvblJlZiA9IHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKGNvbGxlY3Rpb25SZWYpIGFzIENvbGxlY3Rpb25SZWZlcmVuY2U7XHJcbiAgICAgIC8vIH1cclxuXHJcbiAgICAgIGNvbnN0IGNvbGxlY3Rpb25MaXN0ZW5lciA9IHRoaXMubGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQocXVlcnlDb250YWluZXIucXVlcnkpLnBpcGUoXHJcbiAgICAgICAgLy8gZmlsdGVyKGRvY3MgPT4gZG9jcy5sZW5ndGggPiAwKSwgLy8gc2tpcCBlbXB0eSBjb2xsZWN0aW9ucyBvciBpZiB0aGUgc3ViQ29sbGVjdGlvblF1ZXJ5IGRvZXNudCBleGlzdFxyXG4gICAgICAgIC8qIFVuY29tbWVudCB0byBzZWUgZGF0YSBvbiBlYWNoIHVwZGF0ZSAqL1xyXG4gICAgICAgIC8vIHRhcChkID0+IGNvbnNvbGUubG9nKGQpKSxcclxuICAgICAgICAvLyBmaWx0ZXIoZG9jcyA9PiBkb2NzICE9IG51bGwpLFxyXG4gICAgICAgIC8qIExpc3RlbiBGb3IgYW5kIEFkZCBhbnkgUG90ZW50aWFsIFN1YiBEb2NzKi9cclxuICAgICAgICAvLyBAdHMtaWdub3JlIC8vIFRPRE8gZml4IHRoaXMgc28gdGhhdCBJIGNhbiByZW1vdmUgdGhlIHRzLWlnbm9yZVxyXG4gICAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgICBpZiAoIXN1YkNvbGxlY3Rpb25RdWVyeS5zdWJDb2xsZWN0aW9ucykge1xyXG4gICAgICAgICAgICByZXR1cm4gb2YoaXRlbXMpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNvbnN0IGRvY0xpc3RlbmVyczogQXJyYXk8T2JzZXJ2YWJsZTxhbnk+PiA9IFtdO1xyXG5cclxuICAgICAgICAgIGl0ZW1zID0gaXRlbXMuZmlsdGVyKGQgPT4gZCAhPSBudWxsKTsgLy8gZmlsdGVyIG91dCBwb3RlbnRpYWwgbnVsbHNcclxuXHJcbiAgICAgICAgICBpdGVtcy5mb3JFYWNoKChzdWJJdGVtOiBGaXJlSXRlbTx7fT4pID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc3ViRG9jQW5kQ29sbGVjdGlvbnMkID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoc3ViSXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJ5LnN1YkNvbGxlY3Rpb25zKTtcclxuICAgICAgICAgICAgZG9jTGlzdGVuZXJzLnB1c2goc3ViRG9jQW5kQ29sbGVjdGlvbnMkKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGlmIChkb2NMaXN0ZW5lcnMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG9mKFtdKTtcclxuICAgICAgICAgIH0gLyogc3ViQ29sbGVjdGlvblF1ZXJ5IGlzIGVtcHR5IG9yIGRvZXNudCBleGlzdCAqL1xyXG5cclxuICAgICAgICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KGRvY0xpc3RlbmVycykucGlwZShcclxuICAgICAgICAgICAgLy8gdGFwKHZhbCA9PiBjb25zb2xlLmxvZyh2YWwpKVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9KSwgLyogRW5kIG9mIExpc3RlbmluZyBmb3Igc3ViIGRvY3MgKi9cclxuICAgICAgICAvKiBJZiBkb2NzLmxlbmd0aCA9PT0gMSBhbmQgdGhlIGlkIGlzIGRlZmF1bHREb2NJZCBvciB0aGUgZ2l2ZW4gZG9jSWQgaXQgbWVhbnMgd2UgYXJlIGluIGEgc3ViIHN1YkNvbGxlY3Rpb25RdWVyeVxyXG4gICAgICAgIGFuZCB3ZSBvbmx5IGNhcmUgYWJvdXQgdGhlIGRhdGEuIFNvIHdlIHJlbW92ZSB0aGUgYXJyYXkgYW5kIGp1c3QgbWFrZSBpdCBvbmUgb2JqZWN0IHdpdGggdGhlXHJcbiAgICAgICAgc3ViQ29sbGVjdGlvblF1ZXJ5IG5hbWUgYXMga2V5IGFuZCBkb2NzWzBdIGFzIHZhbHVlICovXHJcbiAgICAgICAgbWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuICAgICAgICAgIGNvbnN0IGRvY0lkID0gc3ViQ29sbGVjdGlvblF1ZXJ5LmRvY0lkICE9PSB1bmRlZmluZWQgPyBzdWJDb2xsZWN0aW9uUXVlcnkuZG9jSWQgOiB0aGlzLmRlZmF1bHREb2NJZDtcclxuXHJcbiAgICAgICAgICBpZiAoaXRlbXMubGVuZ3RoID09PSAxICYmIGl0ZW1zWzBdLmZpcmVzdG9yZU1ldGFkYXRhLmlkID09PSBkb2NJZCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1tzdWJDb2xsZWN0aW9uUXVlcnkubmFtZV06IGl0ZW1zWzBdfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7W3N1YkNvbGxlY3Rpb25RdWVyeS5uYW1lXTogaXRlbXN9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIC8vIHRhcChkID0+IGNvbnNvbGUubG9nKGQpKSxcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGNvbGxlY3Rpb25MaXN0ZW5lcnMucHVzaChjb2xsZWN0aW9uTGlzdGVuZXIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyogRmluYWxseSByZXR1cm4gdGhlIGNvbWJpbmVkIGNvbGxlY3Rpb24gbGlzdGVuZXJzKi9cclxuICAgIC8vIEB0cy1pZ25vcmVcclxuICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KGNvbGxlY3Rpb25MaXN0ZW5lcnMpLnBpcGUoXHJcbiAgICAgIG1hcCgoY29sbGVjdGlvbkRhdGFzOiB7IFtjb2xsZWN0aW9uS2V5TmFtZTogc3RyaW5nXTogRmlyZUl0ZW08RmlyZUl0ZW08e30+PltdIH1bXSkgPT4ge1xyXG4gICAgICAgIC8vIG1hcCgoY29sbGVjdGlvbkRhdGFzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGF0YXNNYXA6IHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG5cclxuICAgICAgICBjb2xsZWN0aW9uRGF0YXMuZm9yRWFjaCgoY29sbGVjdGlvbkRhdGEpID0+IHtcclxuXHJcbiAgICAgICAgICBmb3IgKGNvbnN0IFtjb2xsZWN0aW9uTmFtZSwgaXRlbXNdIG9mIE9iamVjdC5lbnRyaWVzKGNvbGxlY3Rpb25EYXRhKSkge1xyXG4gICAgICAgICAgICBkYXRhc01hcFtjb2xsZWN0aW9uTmFtZV0gPSBpdGVtcztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZGF0YXNNYXA7XHJcbiAgICAgIH0pLFxyXG5cclxuICAgICAgbWFwKChkYXRhOiBEb2N1bWVudERhdGEpID0+IHtcclxuICAgICAgICByZXR1cm4gey4uLml0ZW0sIC4uLmRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgbWVhbnQgdG8gYmUgdXNlZCBzb2xlbHkgYnkgbGlzdGVuRm9yRG9jQW5kU3ViQ29sbGVjdGlvbnMkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkPFQ+KFxyXG4gICAgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fTlVMTCk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgLyogTGlzdGVuIGZvciB0aGUgZG9jRnMqL1xyXG4gICAgcmV0dXJuIHRoaXMubGlzdGVuRm9yRG9jU2ltcGxlJDxUPihkb2NSZWYsIGFjdGlvbklmTm90RXhpc3QpLnBpcGUoXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtOiBGaXJlSXRlbTx7fT4pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW0gPT09IG51bGwpIHtcclxuICAgICAgICAgIHJldHVybiBvZihpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoaXRlbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEEgcmVwbGFjZW1lbnQvZXh0ZW5zaW9uIHRvIHRoZSBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5hZGQuXHJcbiAgICogRG9lcyB0aGUgc2FtZSBhcyBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5hZGQgYnV0IGNhbiBhbHNvIGFkZCBjcmVhdGVkRGF0ZSBhbmQgbW9kaWZpZWREYXRlIGFuZCByZXR1cm5zXHJcbiAgICogdGhlIGRhdGEgd2l0aCB0aGUgYWRkZWQgcHJvcGVydGllcyBpbiBGaXJlYmFzZURiSXRlbVxyXG4gICAqXHJcbiAgICogVXNlZCBpbnRlcm5hbGx5XHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGF0YSB0aGUgZGF0YSB0byBiZSBhZGRlZCB0byB0aGUgZG9jdW1lbnQsIGNhbm5vdCBjb250YWluIHR5cGVzIGZpcmVzdG9yZSB3b24ndCBhbGxvd1xyXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uUmVmIHRoZSBDb2xsZWN0aW9uUmVmZXJlbmNlIHdoZXJlIHRoZSBkb2N1bWVudCBzaG91bGQgYmUgYWRkZWRcclxuICAgKiBAcGFyYW0gaXNBZGREYXRlcyBpZiB0cnVlIGFkZHMgbW9kaWZpZWREYXRlIGFuZCBjcmVhdGVkRGF0ZSB0byB0aGUgZGF0YVxyXG4gICAqIEBwYXJhbSBpZCBpZiBnaXZlbiB0aGUgYWRkZWQgZG9jdW1lbnQgd2lsbCBiZSBnaXZlbiB0aGlzIGlkLCBvdGhlcndpc2UgYSByYW5kb20gdW5pcXVlIGlkIHdpbGwgYmUgdXNlZC5cclxuICAgKi9cclxuICBwcm90ZWN0ZWQgYWRkU2ltcGxlJDxUPihkYXRhOiBULCBjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBpc0FkZERhdGVzOiBib29sZWFuID0gdHJ1ZSwgaWQ/OiBzdHJpbmcpOlxyXG4gICAgT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIC8vIGxldCBkYXRhVG9CZVNhdmVkOiBBID0gT2JqZWN0LmFzc2lnbih7fSwgZGF0YSk7XHJcblxyXG4gICAgbGV0IHJlcyQ6IE9ic2VydmFibGU8YW55PjtcclxuXHJcbiAgICBpZiAoaXNBZGREYXRlcykge1xyXG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgZGF0YSA9IGFkZENyZWF0ZWREYXRlKGRhdGEsIGZhbHNlLCBkYXRlKTtcclxuICAgICAgZGF0YSA9IGFkZE1vZGlmaWVkRGF0ZShkYXRhLCBmYWxzZSwgZGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgY29uc3QgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSA9IGdldERvY1JlZldpdGhJZChjb2xsZWN0aW9uUmVmLCBpZCk7XHJcbiAgICAgIHJlcyQgPSB0aGlzLmZzLnNldChkb2NSZWYsIGRhdGEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzJCA9IHRoaXMuZnMuYWRkPFQ+KGNvbGxlY3Rpb25SZWYsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGlmIChBcnJheS5pc0FycmF5KGRhdGEpICYmIGlzQWRkRGF0ZXMpIHtcclxuICAgIC8vICAgZGF0YSA9IGRhdGEubWFwKGl0ZW0gPT4ge1xyXG4gICAgLy8gICAgIHJldHVybiB7Li4uaXRlbSwgbW9kaWZpZWREYXRlOiBkYXRhVG9CZVNhdmVkLm1vZGlmaWVkRGF0ZSwgY3JlYXRlZERhdGE6IGRhdGFUb0JlU2F2ZWQuY3JlYXRlZERhdGEgfVxyXG4gICAgLy8gICB9KVxyXG4gICAgLy8gfVxyXG5cclxuICAgIHJlcyQgPSByZXMkLnBpcGUoXHJcbiAgICAgIC8vIHRhcCgoKSA9PiB0aGlzLnNuYWNrQmFyLm9wZW4oJ1N1Y2Nlc3MnLCAnQWRkZWQnLCB7ZHVyYXRpb246IDEwMDB9KSksXHJcbiAgICAgIC8vIHRhcChyZWYgPT4gY29uc29sZS5sb2cocmVmKSksXHJcbiAgICAgIC8vIHRhcCgoKSA9PiBjb25zb2xlLmxvZyhkYXRhKSksXHJcbiAgICAgIG1hcCgocmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiB8IHVuZGVmaW5lZCkgPT4ge1xyXG4gICAgICAgIGlmIChpZCA9PT0gdW5kZWZpbmVkICYmIHJlZikge1xyXG5cclxuICAgICAgICAgIGNvbnN0IHBhdGggPSByZWYucGF0aDtcclxuXHJcbiAgICAgICAgICBjb25zdCBmaXJlc3RvcmVNZXRhZGF0YTogRmlyZXN0b3JlTWV0YWRhdGE8VD4gPSB7XHJcbiAgICAgICAgICAgIGlkOiByZWYuaWQsXHJcbiAgICAgICAgICAgIHBhdGgsXHJcbiAgICAgICAgICAgIHJlZixcclxuICAgICAgICAgICAgaXNFeGlzdHM6IHRydWVcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHsuLi5kYXRhLCBmaXJlc3RvcmVNZXRhZGF0YX0gYXMgRmlyZUl0ZW08VD47XHJcblxyXG4gICAgICAgIH0gZWxzZSB7IC8vIGlmIGlkIGlzIGRlZmluZWQgaXQgbWVhbnMgd2UgdXNlZCBkb2NSZWYuc2V0IGFuZCByZWYgaXMgdW5kZWZpbmVkXHJcbiAgICAgICAgICBjb25zdCBwYXRoID0gY29sbGVjdGlvblJlZi5wYXRoICsgJy8nICsgaWQ7XHJcbiAgICAgICAgICByZWYgPSBnZXRSZWZGcm9tUGF0aChwYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcblxyXG4gICAgICAgICAgY29uc3QgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+ID0ge1xyXG4gICAgICAgICAgICBpZDogaWQgYXMgc3RyaW5nLFxyXG4gICAgICAgICAgICByZWYsXHJcbiAgICAgICAgICAgIHBhdGgsXHJcbiAgICAgICAgICAgIGlzRXhpc3RzOiB0cnVlXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHJldHVybiB7Li4uZGF0YSwgZmlyZXN0b3JlTWV0YWRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiByZXMkLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKiogVXNlZCBpbnRlcm5hbGx5IGZvciB1cGRhdGVzIHRoYXQgZG9lc24ndCBhZmZlY3QgY2hpbGQgZG9jdW1lbnRzICovXHJcbiAgcHJvdGVjdGVkIHVwZGF0ZVNpbXBsZSQ8QT4oZGF0YTogQSwgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSwgaXNBZGRNb2RpZmllZERhdGU6IGJvb2xlYW4gPSB0cnVlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKGlzQWRkTW9kaWZpZWREYXRlKSB7XHJcbiAgICAgIGRhdGEgPSBhZGRNb2RpZmllZERhdGUoZGF0YSwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuZnMudXBkYXRlKGRvY1JlZiwgZGF0YSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgdXNlZCBieSB1cGRhdGUgZGVlcFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCB1cGRhdGVEZWVwVG9CYXRjaEhlbHBlcjxBPihkYXRhOiBBLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWRkTW9kaWZpZWREYXRlOiBib29sZWFuID0gdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2g/OiBXcml0ZUJhdGNoKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgaWYgKGJhdGNoID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgYmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoaXNBZGRNb2RpZmllZERhdGUpIHtcclxuICAgICAgZGF0YSA9IGFkZE1vZGlmaWVkRGF0ZShkYXRhLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3BsaXQgPSB0aGlzLnNwbGl0RGF0YUludG9DdXJyZW50RG9jQW5kU3ViQ29sbGVjdGlvbnMoZGF0YSwgc3ViQ29sbGVjdGlvbldyaXRlcnMpO1xyXG4gICAgY29uc3QgY3VycmVudERvYyA9IHNwbGl0LmN1cnJlbnREb2M7XHJcbiAgICBjb25zdCBzdWJDb2xsZWN0aW9ucyA9IHNwbGl0LnN1YkNvbGxlY3Rpb25zO1xyXG5cclxuICAgIC8vIGNvbnNvbGUubG9nKGN1cnJlbnREb2MsIHN1YkNvbGxlY3Rpb25zKTtcclxuICAgIGJhdGNoLnVwZGF0ZShkb2NSZWYsIGN1cnJlbnREb2MpO1xyXG5cclxuICAgIGZvciAoY29uc3QgW3N1YkNvbGxlY3Rpb25LZXksIHN1YkRvY1VwZGF0ZVZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdWJDb2xsZWN0aW9ucykpIHtcclxuXHJcbiAgICAgIGxldCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdIHwgdW5kZWZpbmVkOyAvLyB1bmRlZmluZWQgaWYgbm8gc3ViQ29sbGVjdGlvbldyaXRlcnNcclxuICAgICAgbGV0IHN1YkRvY0lkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcblxyXG4gICAgICBpZiAoc3ViQ29sbGVjdGlvbldyaXRlcnMpIHtcclxuICAgICAgICBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycyA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5zdWJDb2xsZWN0aW9ucztcclxuICAgICAgICBzdWJEb2NJZCA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5kb2NJZDtcclxuICAgICAgfVxyXG5cclxuICAgICAgc3ViRG9jSWQgPSBzdWJEb2NJZCAhPT0gdW5kZWZpbmVkID8gc3ViRG9jSWQgOiB0aGlzLmRlZmF1bHREb2NJZDsgLyogU2V0IGRlZmF1bHQgaWYgbm9uZSBnaXZlbiAqL1xyXG5cclxuICAgICAgLy8gY29uc3Qgc3ViRG9jRnMgPSBkb2NSZWYuY29sbGVjdGlvbihzdWJDb2xsZWN0aW9uS2V5KS5kb2Moc3ViRG9jSWQpO1xyXG4gICAgICBjb25zdCBzdWJDb2xsZWN0aW9uID0gZ2V0U3ViQ29sbGVjdGlvbihkb2NSZWYsIHN1YkNvbGxlY3Rpb25LZXkpO1xyXG4gICAgICBjb25zdCBzdWJEb2NGcyA9IGdldERvY1JlZldpdGhJZChzdWJDb2xsZWN0aW9uLCBzdWJEb2NJZCk7XHJcblxyXG4gICAgICBiYXRjaCA9IHRoaXMudXBkYXRlRGVlcFRvQmF0Y2hIZWxwZXIoc3ViRG9jVXBkYXRlVmFsdWUsIHN1YkRvY0ZzLCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycywgaXNBZGRNb2RpZmllZERhdGUsIGJhdGNoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2VkIG1haW5seSBmb3IgZHJhZyBhbmQgZHJvcCBzY2VuYXJpb3Mgd2hlcmUgd2UgZHJhZyBhbiBpdGVtIGZyb20gb25lIGxpc3QgdG8gYW5vdGhlciBhbmQgdGhlIHRoZSBkb2NzXHJcbiAgICogaGF2ZSBhbiBpbmRleCB2YWx1ZSBhbmQgYSBncm91cE5hbWUuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gcHJldmlvdXNBcnJheVxyXG4gICAqIEBwYXJhbSBjdXJyZW50QXJyYXlcclxuICAgKiBAcGFyYW0gcHJldmlvdXNJbmRleFxyXG4gICAqIEBwYXJhbSBjdXJyZW50SW5kZXhcclxuICAgKiBAcGFyYW0gY3VycmVudEFycmF5TmFtZVxyXG4gICAqIEBwYXJhbSBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtXHJcbiAgICogQHBhcmFtIGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW1cclxuICAgKiBAcGFyYW0gdXNlQ29weVxyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgZ2V0QmF0Y2hGcm9tVHJhbnNmZXJJdGVtSW5JbmRleGVkRG9jczxBIGV4dGVuZHMgeyBpbmRleDogbnVtYmVyLCBncm91cE5hbWU6IHN0cmluZyB9PihcclxuICAgIHByZXZpb3VzQXJyYXk6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgIGN1cnJlbnRBcnJheTogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgcHJldmlvdXNJbmRleDogbnVtYmVyLFxyXG4gICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICBjdXJyZW50QXJyYXlOYW1lOiBzdHJpbmcsXHJcbiAgICBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtPzogeyBba2V5OiBzdHJpbmddOiBhbnkgfSxcclxuICAgIGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW0gPSB0cnVlLFxyXG4gICAgdXNlQ29weSA9IGZhbHNlKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgbGV0IHVzZWRQcmV2aW91c0FycmF5OiBBcnJheTxGaXJlSXRlbTxBPj47XHJcbiAgICBsZXQgdXNlZEN1cnJlbnRBcnJheTogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG4gICAgaWYgKHVzZUNvcHkpIHtcclxuICAgICAgdXNlZFByZXZpb3VzQXJyYXkgPSBPYmplY3QuYXNzaWduKFtdLCBwcmV2aW91c0FycmF5KTtcclxuICAgICAgdXNlZEN1cnJlbnRBcnJheSA9IE9iamVjdC5hc3NpZ24oW10sIGN1cnJlbnRBcnJheSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB1c2VkUHJldmlvdXNBcnJheSA9IHByZXZpb3VzQXJyYXk7XHJcbiAgICAgIHVzZWRDdXJyZW50QXJyYXkgPSBjdXJyZW50QXJyYXk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNmZXJBcnJheUl0ZW0odXNlZFByZXZpb3VzQXJyYXksIHVzZWRDdXJyZW50QXJyYXksIHByZXZpb3VzSW5kZXgsIGN1cnJlbnRJbmRleCk7XHJcblxyXG4gICAgY29uc3QgYmF0Y2g6IFdyaXRlQmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKTtcclxuXHJcbiAgICBpZiAoYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGNvbnN0IG1vdmVkSXRlbSA9IHVzZWRDdXJyZW50QXJyYXlbY3VycmVudEluZGV4XTtcclxuICAgICAgY29uc3QgbW92ZWRJdGVtUmVmID0gbW92ZWRJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnJlZjtcclxuXHJcbiAgICAgIGNvbnN0IGRhdGEgPSB7Li4uYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbSwgZ3JvdXBOYW1lOiBjdXJyZW50QXJyYXlOYW1lfTtcclxuXHJcbiAgICAgIGlmICghdXNlQ29weSkge1xyXG4gICAgICAgIGFkZERhdGFUb0l0ZW0obW92ZWRJdGVtLCBkYXRhLCB0cnVlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW0pIHtcclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgICBhZGRNb2RpZmllZERhdGUoZGF0YSwgdHJ1ZSwgZGF0ZSk7XHJcblxyXG4gICAgICAgIGlmICghdXNlQ29weSkge1xyXG4gICAgICAgICAgYWRkTW9kaWZpZWREYXRlKG1vdmVkSXRlbSwgdHJ1ZSwgZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGJhdGNoLnVwZGF0ZShtb3ZlZEl0ZW1SZWYsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGN1cnJlbnRBcnJheVNsaWNlVG9VcGRhdGU6IEFycmF5PEZpcmVJdGVtPEE+PiA9IHVzZWRDdXJyZW50QXJyYXkuc2xpY2UoY3VycmVudEluZGV4KTtcclxuICAgIGxldCBpID0gY3VycmVudEluZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGN1cnJlbnRBcnJheVNsaWNlVG9VcGRhdGUpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBiYXRjaC51cGRhdGUoaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHtpbmRleDogaX0pO1xyXG5cclxuICAgICAgaWYgKCF1c2VDb3B5KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmV2QXJyYXlTbGljZVRvVXBkYXRlOiBBcnJheTxGaXJlSXRlbTxBPj4gPSB1c2VkUHJldmlvdXNBcnJheS5zbGljZShwcmV2aW91c0luZGV4KTtcclxuICAgIGkgPSBwcmV2aW91c0luZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIHByZXZBcnJheVNsaWNlVG9VcGRhdGUpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBiYXRjaC51cGRhdGUoaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHtpbmRleDogaX0pO1xyXG5cclxuICAgICAgaWYgKCF1c2VDb3B5KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIERvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZnMgLSBBIGxpc3Qgb2YgRG9jdW1lbnRSZWZlcmVuY2UgdGhhdCBhcmUgdG8gYmUgZGVsZXRlZFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBkZWxldGVNdWx0aXBsZVNpbXBsZSQoZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGNvbnN0IGJhdGNoID0gdGhpcy5nZXREZWxldGVNdWx0aXBsZVNpbXBsZUJhdGNoKGRvY1JlZnMpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmJhdGNoQ29tbWl0JChiYXRjaCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZVtdLCBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgZG9jUmVmcy5mb3JFYWNoKChkb2NSZWYpID0+IHtcclxuICAgICAgYmF0Y2guZGVsZXRlKGRvY1JlZik7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWN1cnNpdmUgbWV0aG9kIHRvIGNsZWFuIEZpcmVzdG9yZUJhc2VJdGVtIHByb3BlcnRpZXMgZnJvbSB0aGUgZGJJdGVtXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGJJdGVtIHRoZSBkYXRhIHRvIGJlIGNsZWFuZWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgbGlzdCBvZiBTdWJDb2xsZWN0aW9uV3JpdGVycyB0byBoYW5kbGUgc3ViIGNvbGxlY3Rpb25zXHJcbiAgICogQHBhcmFtIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCByZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyPFQ+KGRiSXRlbTogVCAmIERvY3VtZW50RGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlOiBzdHJpbmdbXSA9IFtdKTogVCB7XHJcblxyXG4gICAgLy8gY29uc3QgZXh0cmFQcm9wZXJ0eU5hbWVzOiBzdHJpbmdbXSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG5ldyBEYkl0ZW1FeHRyYXMoKSk7XHJcbiAgICBjb25zdCBleHRyYVByb3BlcnR5TmFtZXM6IHN0cmluZ1tdID0gWydmaXJlc3RvcmVNZXRhZGF0YSddLmNvbmNhdChhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmUpO1xyXG5cclxuICAgIC8qIEN1cnJlbnQgbGV2ZWwgZGVsZXRlICovXHJcbiAgICBmb3IgKGNvbnN0IGV4dHJhUHJvcGVydHlOYW1lIG9mIGV4dHJhUHJvcGVydHlOYW1lcykge1xyXG4gICAgICBkZWxldGUgZGJJdGVtW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgIH1cclxuXHJcbiAgICBzdWJDb2xsZWN0aW9uV3JpdGVycy5mb3JFYWNoKGNvbCA9PiB7XHJcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGRiSXRlbVtjb2wubmFtZV0pKSB7IC8qIHByb3BlcnR5IGlzIGFycmF5IHNvIHdpbGwgY29udGFpbiBtdWx0aXBsZSBkb2NzICovXHJcblxyXG4gICAgICAgIGNvbnN0IGRvY3M6IEZpcmVJdGVtPFQ+W10gPSBkYkl0ZW1bY29sLm5hbWVdO1xyXG4gICAgICAgIGRvY3MuZm9yRWFjaCgoZCwgaSkgPT4ge1xyXG5cclxuICAgICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy5yZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyKGQsIGNvbC5zdWJDb2xsZWN0aW9ucywgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8qICAqL1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGV4dHJhUHJvcGVydHlOYW1lIG9mIGV4dHJhUHJvcGVydHlOYW1lcykge1xyXG4gICAgICAgICAgICAgIGRlbGV0ZSBkYkl0ZW1bY29sLm5hbWVdW2ldW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgfSBlbHNlIHsgLyogbm90IGFuIGFycmF5IHNvIGEgc2luZ2xlIGRvYyovXHJcblxyXG4gICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgIHRoaXMucmVtb3ZlRGF0YUV4dHJhc1JlY3Vyc2l2ZUhlbHBlcihkYkl0ZW1bY29sLm5hbWVdLCBjb2wuc3ViQ29sbGVjdGlvbnMsIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGZvciAoY29uc3QgZXh0cmFQcm9wZXJ0eU5hbWUgb2YgZXh0cmFQcm9wZXJ0eU5hbWVzKSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBkYkl0ZW1bY29sLm5hbWVdW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZGJJdGVtO1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgYW4gT2JzZXJ2YWJsZSBjb250YWluaW5nIGEgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSBmb3VuZCB1bmRlciB0aGUgZ2l2ZW4gZG9jUmVmIHVzaW5nIHRoZSBTdWJDb2xsZWN0aW9uUXVlcnlbXVxyXG4gICAqIE1haW5seSB1c2VkIHRvIGRlbGV0ZSBhIGRvY0ZzIGFuZCBpdHMgc3ViIGRvY3NcclxuICAgKiBAcGFyYW0gcmVmOiBEb2N1bWVudFJlZmVyZW5jZSB8IENvbGxlY3Rpb25SZWZlcmVuY2VcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldERvY3VtZW50UmVmZXJlbmNlc0RlZXAkKHJlZjogRG9jdW1lbnRSZWZlcmVuY2UgfCBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICBpZiAocmVmIGluc3RhbmNlb2YgRG9jdW1lbnRSZWZlcmVuY2UpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbURvY1JlZiQocmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcyk7XHJcbiAgICB9IGVsc2UgeyAvLyBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAgICAgIHJldHVybiB0aGlzLmdldERvY3VtZW50UmVmZXJlbmNlc0Zyb21Db2xsZWN0aW9uUmVmJChyZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBnZXREb2N1bWVudFJlZmVyZW5jZXNGcm9tRG9jUmVmJChkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JEb2MkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpLnBpcGUoXHJcbiAgICAgIHRha2UoMSksXHJcbiAgICAgIG1hcChpdGVtID0+IHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpKSxcclxuICAgICAgLy8gdGFwKHBhdGhMaXN0ID0+IGNvbnNvbGUubG9nKHBhdGhMaXN0KSksXHJcbiAgICAgIG1hcCgocGF0aExpc3Q6IHN0cmluZ1tdKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhMaXN0XHJcbiAgICAgICAgICAubWFwKHBhdGggPT4gZ2V0UmVmRnJvbVBhdGgocGF0aCwgdGhpcy5mcy5maXJlc3RvcmUpIGFzIERvY3VtZW50UmVmZXJlbmNlKTtcclxuICAgICAgfSksXHJcbiAgICAgIC8vIHRhcChpdGVtID0+IGNvbnNvbGUubG9nKGl0ZW0pKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUNvbGxlY3Rpb25SZWYkKGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uU2ltcGxlJChjb2xsZWN0aW9uUmVmKS5waXBlKFxyXG4gICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgIHRha2UoMSksXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuICAgICAgICBsZXQgZG9jTGlzdGVuZXJzOiBBcnJheTxPYnNlcnZhYmxlPGFueT4+O1xyXG4gICAgICAgIGRvY0xpc3RlbmVycyA9IGl0ZW1zLm1hcChpdGVtID0+IHRoaXMubGlzdGVuRm9yRG9jJChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnJlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZUxhdGVzdChkb2NMaXN0ZW5lcnMpO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgbGV0IHBhdGhzOiBzdHJpbmdbXSA9IFtdO1xyXG5cclxuICAgICAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgcGF0aHMgPSBwYXRocy5jb25jYXQodGhpcy5nZXRQYXRoc0Zyb21JdGVtRGVlcFJlY3Vyc2l2ZUhlbHBlcihpdGVtLCBzdWJDb2xsZWN0aW9uUXVlcmllcykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBwYXRocztcclxuICAgICAgfSksXHJcbiAgICAgIG1hcCgocGF0aExpc3Q6IHN0cmluZ1tdKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhMaXN0XHJcbiAgICAgICAgICAubWFwKHBhdGggPT4gZ2V0UmVmRnJvbVBhdGgocGF0aCwgdGhpcy5mcy5maXJlc3RvcmUpIGFzIERvY3VtZW50UmVmZXJlbmNlKTtcclxuICAgICAgfSksXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVXNlZCBieSBkZWxldGVEZWVwQnlJdGVtJCB0byBnZXQgYWxsIHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnRzIHRvIGJlIGRlbGV0ZWRcclxuICAgKiBpbmNsdWRpbmcgY2hpbGQgZG9jdW1lbnRzIHVzaW5nIFN1YkNvbGxlY3Rpb25RdWVyaWVzXHJcbiAgICpcclxuICAgKiBJbnRlcm5hbCB1c2VcclxuICAgKiBAcGFyYW0gaXRlbSBGaXJlc3RvcmVJdGVtIGZyb20gd2hlcmUgd2UgZ2V0IHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnRzXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkYkl0ZW0gaGFzIGNoaWxkIGRvY3VtZW50cyB0aGUgc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXJlIG5lZWRlZCB0byBsb2NhdGUgdGhlbVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXREb2N1bWVudFJlZmVyZW5jZXNGcm9tSXRlbTxUPihcclxuICAgIGl0ZW06IEZpcmVJdGVtPFQ+LFxyXG4gICAgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10pOiBEb2N1bWVudFJlZmVyZW5jZVtdIHtcclxuXHJcbiAgICBjb25zdCBwYXRocyA9IHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgcmV0dXJuIHBhdGhzLm1hcChwYXRoID0+IGdldFJlZkZyb21QYXRoKHBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgaXRzIG1lYW50IGFzIGEgc3VwcG9ydCBtZXRob2QgZm9yIGdldERvY3MkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldFBhdGhzRnJvbUl0ZW1EZWVwUmVjdXJzaXZlSGVscGVyPFQ+KGl0ZW06IEZpcmVJdGVtPFQ+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IHN0cmluZ1tdIHtcclxuXHJcbiAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMgPT0gbnVsbCB8fCBzdWJDb2xsZWN0aW9uUXVlcmllcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIFtpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGhdO1xyXG4gICAgfVxyXG4gICAgbGV0IHBhdGhMaXN0OiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgcGF0aExpc3QucHVzaChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG5cclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzLmZvckVhY2goY29sID0+IHtcclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoKGl0ZW0gYXMgRG9jdW1lbnREYXRhKVtjb2wubmFtZV0pICYmICFjb2wuZG9jSWQpIHtcclxuICAgICAgICAvKiBwcm9wZXJ0eSBpcyBhcnJheSBhbmQgbm90IHVzaW5nIGRvY0lkIHNvIHdpbGwgY29udGFpbiBtdWx0aXBsZSBkb2NzICovXHJcblxyXG4gICAgICAgIGNvbnN0IGl0ZW1zOiBGaXJlSXRlbTx7fT5bXSA9IChpdGVtIGFzIERvY3VtZW50RGF0YSlbY29sLm5hbWVdO1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goc3ViSXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgaWYgKGNvbC5zdWJDb2xsZWN0aW9ucykge1xyXG4gICAgICAgICAgICBwYXRoTGlzdCA9IHBhdGhMaXN0LmNvbmNhdCh0aGlzLmdldFBhdGhzRnJvbUl0ZW1EZWVwUmVjdXJzaXZlSGVscGVyKHN1Ykl0ZW0sIGNvbC5zdWJDb2xsZWN0aW9ucykpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGF0aExpc3QucHVzaChzdWJJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgfSBlbHNlIHsgLyogbm90IGFuIGFycmF5IHNvIGEgc2luZ2xlIGRvYyovXHJcblxyXG4gICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgIHBhdGhMaXN0ID0gcGF0aExpc3QuY29uY2F0KHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgY29sLnN1YkNvbGxlY3Rpb25zKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IHN1Ykl0ZW0gPSAoKGl0ZW0gYXMgRG9jdW1lbnREYXRhKVtjb2wubmFtZV0gYXMgRmlyZUl0ZW08e30+KTtcclxuICAgICAgICAgIGlmIChzdWJJdGVtICE9IG51bGwgJiYgJ3BhdGgnIGluIHN1Ykl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEpIHtcclxuICAgICAgICAgICAgcGF0aExpc3QucHVzaChzdWJJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gY29uc3QgcGF0aCA9IChkYkl0ZW1bY29sLm5hbWVdIGFzIEZpcmVzdG9yZUl0ZW0pLnBhdGg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHBhdGhMaXN0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRE8gIE5PVCAgQ0FMTCBUSElTIE1FVEhPRCwgdXNlZCBpbiBhZGREZWVwIGFuZCB1cGRhdGVEZWVwIHRvIHNwbGl0IHRoZSBkYXRhIGludG8gY3VycmVudERvYyBhbmQgc3ViQ29sbGVjdGlvbnNcclxuICAgKiBPbmx5IGdvZXMgb25lIHN1YiBsZXZlbCBkZWVwO1xyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBzcGxpdERhdGFJbnRvQ3VycmVudERvY0FuZFN1YkNvbGxlY3Rpb25zPFQ+KFxyXG4gICAgZGF0YTogVCxcclxuICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzOiBTdWJDb2xsZWN0aW9uV3JpdGVyW10gPSBbXSk6IEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQge1xyXG5cclxuICAgIC8qIFNwbGl0IGRhdGEgaW50byBjdXJyZW50IGRvYyBhbmQgc3ViIGNvbGxlY3Rpb25zICovXHJcbiAgICBsZXQgY3VycmVudERvYzogeyBbaW5kZXg6IHN0cmluZ106IGFueTsgfSA9IHt9O1xyXG4gICAgY29uc3Qgc3ViQ29sbGVjdGlvbnM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnk7IH0gPSB7fTtcclxuXHJcbiAgICAvKiBDaGVjayBpZiB0aGUga2V5IGlzIGluIHN1YkNvbGxlY3Rpb25zLCBpZiBpdCBpcyBwbGFjZSBpdCBpbiBzdWJDb2xsZWN0aW9ucyBlbHNlIHBsYWNlIGl0IGluIGN1cnJlbnREb2MgKi9cclxuXHJcbiAgICAvLyBub3QgYXJyYXkgc28gb2JqZWN0XHJcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhrZXksIHZhbHVlKTtcclxuICAgICAgaWYgKHN1YkNvbGxlY3Rpb25Xcml0ZXJzICYmIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb25zdCBzdWJDb2xsZWN0aW9uV3JpdGVyOiBTdWJDb2xsZWN0aW9uV3JpdGVyIHwgdW5kZWZpbmVkID0gc3ViQ29sbGVjdGlvbldyaXRlcnMuZmluZChzdWJDb2xsID0+IHN1YkNvbGwubmFtZSA9PT0ga2V5KTtcclxuXHJcbiAgICAgICAgaWYgKHN1YkNvbGxlY3Rpb25Xcml0ZXIpIHtcclxuICAgICAgICAgIHN1YkNvbGxlY3Rpb25zW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY3VycmVudERvY1trZXldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGN1cnJlbnREb2MgPSBkYXRhO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGN1cnJlbnREb2MsXHJcbiAgICAgIHN1YkNvbGxlY3Rpb25zXHJcbiAgICB9IGFzIEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUdXJuIGEgYmF0Y2ggaW50byBhbiBPYnNlcnZhYmxlIGluc3RlYWQgb2YgUHJvbWlzZS5cclxuICAgKlxyXG4gICAqIEZvciBzb21lIHJlYXNvbiBhbmd1bGFyZmlyZSByZXR1cm5zIGEgcHJvbWlzZSBvbiBiYXRjaC5jb21taXQoKSBpbnN0ZWFkIG9mIGFuIG9ic2VydmFibGUgbGlrZSBmb3JcclxuICAgKiBldmVyeXRoaW5nIGVsc2UuXHJcbiAgICpcclxuICAgKiBUaGlzIG1ldGhvZCB0dXJucyBpdCBpbnRvIGFuIG9ic2VydmFibGVcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgYmF0Y2hDb21taXQkKGJhdGNoOiBXcml0ZUJhdGNoKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbShiYXRjaC5jb21taXQoKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogRmlyZWJhc2UgdmVyc2lvbiA5IGNoYW5nZWQgdGhlIHF1ZXJ5IHN5bnRheFxyXG4gKiBUaGUgbmV3IHN5bnRheCBicm9rZW4gdGhlIGFiaWxpdHkgdG8gY2hhaW4gcXVlcmllcyBsaWtlIHRoaXM6XHJcbiAqXHJcbiAqIGNvbGxlY3Rpb25SZWYud2hlcmUoJ2ZvbycsICc9PScsIDEyMykubGltaXQoMTApLi5yZXR1cm5zIHRoZSBjb2xsZWN0aW9uIHJlZlxyXG4gKlxyXG4gKiBub3cgaW5zdGVhZCB5b3UgbXVzdCB3cml0ZSBpdCBsaWtlIHRoaXMsIHF1ZXJ5KGNvbGxlY3Rpb25SZWYsIHdoZXJlKCdmb28nLCAnPT0nLCAxMjMpLCBsaW1pdCgxMCkpLi4ucmV0dXJucyBhIFF1ZXJ5XHJcbiAqXHJcbiAqIHdoaWNoIGlzIHVnbHkgYW5kIG1ha2UgeW91IGxvb3NlIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHdhcyBwcmVzZW50IGluIHRoZSBjb2xsZWN0aW9uUmVmIHNpbmNlIGEgUXVlcnkgaXMgcmV0dXJuZWQgaW5zdGVhZCxcclxuICogd2hpY2ggaG9sZHMgbGVzcyBpbmZvcm1hdGlvbiB0aGFuIGEgQ29sbGVjdGlvblJlZmVyZW5jZS5cclxuICpcclxuICogVGhpcyBDb250YWluZXIgaXMgbWVhbnQgdG8gYWxsb3cgeW91IHRvIGNoYWluIHF1ZXJpZXMsIGxpa2UgYmVmb3JlIHZlcnNpb24gOSBhbmQgYWxzbyByZXRhaW4gdGhlIGluZm9ybWF0aW9uIGluXHJcbiAqIHRoZSBvcmlnaW5hbCBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUXVlcnlDb250YWluZXI8VD4ge1xyXG5cclxuICBwdWJsaWMgcXVlcnlDb25zdHJhaW50czogUXVlcnlDb25zdHJhaW50W10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikge1xyXG4gIH1cclxuXHJcbiAgLyoqIGZhY3RvcnkgbWV0aG9kIHRvIGNyZWF0ZSBjb250YWluZXIgZnJvbSBwYXRoICovXHJcbiAgc3RhdGljIGZyb21QYXRoPFQ+KGZpcmVzdG9yZTogRmlyZXN0b3JlLCBwYXRoOiBzdHJpbmcpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICBjb25zdCByZWYgPSBjb2xsZWN0aW9uKGZpcmVzdG9yZSwgcGF0aCkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPjtcclxuICAgIHJldHVybiBuZXcgdGhpcyhyZWYpO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJldHVybnMgdGhlIHF1ZXJ5IHdpdGggYWxsIHRoZSBxdWVyeSBjb25zdHJhaW50cyAqL1xyXG4gIGdldCBxdWVyeSgpOiBRdWVyeTxUPiB7XHJcbiAgICByZXR1cm4gcXVlcnkodGhpcy5yZWYsIC4uLnRoaXMucXVlcnlDb25zdHJhaW50cyk7XHJcbiAgfVxyXG5cclxuICAvKiogQ2FsbHMgdGhlIGZpcmViYXNlIGdldERvY3MoKSBtZXRob2QgYW5kIGxpc3RlbnMgZm9yIHRoZSBkb2N1bWVudHMgaW4gdGhlIHF1ZXJ5LiAqL1xyXG4gIGdldERvY3MkKCk6IE9ic2VydmFibGU8UXVlcnlTbmFwc2hvdDxUPj4ge1xyXG4gICAgcmV0dXJuIGZyb20oZ2V0RG9jczxUPih0aGlzLnF1ZXJ5KSk7XHJcbiAgfVxyXG5cclxuICB3aGVyZShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgb3BTdHI6IFdoZXJlRmlsdGVyT3AsIHZhbHVlOiB1bmtub3duKTogUXVlcnlDb250YWluZXI8VD4ge1xyXG4gICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2god2hlcmUoZmllbGRQYXRoLCBvcFN0ciwgdmFsdWUpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgb3JkZXJCeShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgZGlyZWN0aW9uU3RyPzogT3JkZXJCeURpcmVjdGlvbik6IFF1ZXJ5Q29udGFpbmVyPFQ+IHtcclxuICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKG9yZGVyQnkoZmllbGRQYXRoLCBkaXJlY3Rpb25TdHIpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXQoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXRUb0xhc3QoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdFRvTGFzdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgc3RhcnRBdCguLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuICBzdGFydEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIHN0YXJ0QXQoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+LCAuLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD4geyAvLyBpbXBsZW1lbnRhdGlvblxyXG4gICAgaWYgKHNuYXBzaG90KSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKHN0YXJ0QXQoc25hcHNob3QpKTtcclxuICAgIH0gZWxzZSBpZiAoZmllbGRWYWx1ZXMpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIHN0YXJ0QWZ0ZXIoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+KTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuXHJcbiAgc3RhcnRBZnRlcihzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBZnRlcihzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGVuZEF0KC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPiwgLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+IHsgLy8gaW1wbGVtZW50YXRpb25cclxuICAgIGlmIChzbmFwc2hvdCkge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdChzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBlbmRCZWZvcmUoLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcbiAgZW5kQmVmb3JlKHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEJlZm9yZShzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goZW5kQmVmb3JlKHNuYXBzaG90KSk7XHJcbiAgICB9IGVsc2UgaWYgKGZpZWxkVmFsdWVzKSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKGVuZEJlZm9yZSguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, forkJoin, from, of } from 'rxjs';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\nimport { collection, DocumentReference, endAt, endBefore, getDocs, limit, limitToLast, orderBy, query, startAfter, startAt, where, writeBatch } from 'firebase/firestore';\r\nimport { addCreatedDate, addDataToItem, addModifiedDate, convertTimestampToDate, getDocRefWithId, getRefFromPath, getSubCollection } from './helpers';\r\nimport { moveItemInArray, transferArrayItem } from './drag-utils';\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport var DocNotExistAction;\r\n(function (DocNotExistAction) {\r\n    /** returns a null object */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_NULL\"] = 0] = \"RETURN_NULL\";\r\n    /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n    DocNotExistAction[DocNotExistAction[\"RETURN_ALL_BUT_DATA\"] = 1] = \"RETURN_ALL_BUT_DATA\";\r\n    /** do not return at all until it does exist */\r\n    DocNotExistAction[DocNotExistAction[\"FILTER\"] = 2] = \"FILTER\";\r\n    /** return doc not found error 'doc_not_found' */\r\n    DocNotExistAction[DocNotExistAction[\"THROW_DOC_NOT_FOUND\"] = 3] = \"THROW_DOC_NOT_FOUND\";\r\n})(DocNotExistAction || (DocNotExistAction = {}));\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n    /**\r\n     * Constructor for AngularFirestoreWrapper\r\n     *\r\n     * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n     * @param defaultDocId The default name given to a subCollection document when no name is given\r\n     */\r\n    constructor(fs, defaultDocId = 'data') {\r\n        this.fs = fs;\r\n        this.defaultDocId = defaultDocId;\r\n    }\r\n    get firestore() {\r\n        return this.fs.firestore;\r\n    }\r\n    /* ----------  LISTEN -------------- */\r\n    /**\r\n     *\r\n     * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n     *\r\n     * Triggers for any change in any document that is listened to.\r\n     *\r\n     *\r\n     * E.x:\r\n     *      const subCollectionQueries: SubCollectionQuery[] = [\r\n     *         { name: 'data' },\r\n     *         { name: 'secure' },\r\n     *         { name: 'variants' },\r\n     *         { name: 'images',\r\n     *           queryFn: ref => ref.orderBy('index'),\r\n     *           collectionWithNames: [\r\n     *             { name: 'secure'}\r\n     *           ]\r\n     *         },\r\n     *     ];\r\n     *\r\n     *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n     *\r\n     * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n     * All logic is in listenForDocDeepRecursiveHelper$.\r\n     *\r\n     * @param docRef - a docRef with potential queryFn\r\n     * @param subCollectionQueries - see example\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDoc$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(map(data => data));\r\n    }\r\n    /**\r\n     * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n     *\r\n     * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n     * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n     *\r\n     *\r\n     *    Example usage.\r\n     *\r\n     *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n     *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n     *\r\n     *    constructor(private ngFireStore: AngularFirestore) {\r\n     *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n     *    }\r\n     *\r\n     *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n     *    }\r\n     *\r\n     *    If you do not wish to listen for changes and only care about getting the values once\r\n     *\r\n     *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n     *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n     *          take(1)\r\n     *        );\r\n     *    }\r\n     *\r\n     * @param _query the collectionRef which will be listened to\r\n     * @param subCollectionQueries\r\n     * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n     */\r\n    listenForCollection$(_query, subCollectionQueries = []) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.listenForCollectionSimple$(_query).pipe(mergeMap((items) => {\r\n            if (items == null || items.length === 0) {\r\n                return of([]);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(items);\r\n            }\r\n            const collectionListeners = [];\r\n            items.forEach(item => {\r\n                const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n                collectionListeners.push(collectionListener);\r\n            });\r\n            /* Finally return the combined collection listeners */\r\n            return combineLatest(collectionListeners);\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n     */\r\n    listenForCollectionRecursively$(collectionPath, collectionKey, orderKey) {\r\n        // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n        const collectionQuery = new QueryContainer(getRefFromPath(collectionPath, this.fs.firestore));\r\n        if (orderKey != null) {\r\n            collectionQuery.orderBy(orderKey);\r\n        }\r\n        return this.listenForCollectionSimple$(collectionQuery.query).pipe(mergeMap((items) => {\r\n            if (items.length <= 0) {\r\n                return of([]);\r\n            } // TODO  perhaps make this throw an error so that we can skip it\r\n            // if (items.length <= 0) { throwError('No more '); }\r\n            const nextLevelObs = [];\r\n            for (const item of items) {\r\n                // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n                const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey); // one level deeper\r\n                const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(map((nextLevelItems) => {\r\n                    if (nextLevelItems.length > 0) {\r\n                        return { ...item, [collectionKey]: nextLevelItems };\r\n                    }\r\n                    else {\r\n                        return { ...item };\r\n                    } // dont include an empty array\r\n                }));\r\n                nextLevelObs.push(nextLevelItems$);\r\n            }\r\n            return combineLatest(nextLevelObs).pipe(tap(val => console.log(val)));\r\n        }));\r\n    }\r\n    /* ---------- ADD -------------- */\r\n    /**\r\n     * Add document to firestore and split it up into sub collection.\r\n     *\r\n     * @param data the data to be saved\r\n     * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n     * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n     * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n     * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n     */\r\n    add$(data, collectionRef, subCollectionWriters = [], isAddDates = true, docId) {\r\n        if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n            const error = {\r\n                name: 'firestoreExt/invalid-sub-collection-writers',\r\n                code: 'unknown',\r\n                message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n                stack: '',\r\n                data,\r\n                subCollectionWriters,\r\n                docId\r\n            };\r\n            throw error;\r\n        }\r\n        let currentDoc;\r\n        let subCollections = {};\r\n        /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n        * Each item in the array will be saved as a map with the key being the array index\r\n        * We still want the return value of this function to be as an array non as a map\r\n        */\r\n        if (Array.isArray(data) && docId) {\r\n            currentDoc = data;\r\n        }\r\n        else {\r\n            const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n            currentDoc = split.currentDoc;\r\n            subCollections = split.subCollections;\r\n        }\r\n        return this.addSimple$(currentDoc, collectionRef, isAddDates, docId).pipe(\r\n        /* Add Sub/sub collections*/\r\n        mergeMap((currentData) => {\r\n            const subWriters = [];\r\n            for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n                let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n                let subDocId;\r\n                if (subCollectionWriters) {\r\n                    subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                    subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n                }\r\n                const subCollectionRef = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n                /* Handle array and object differently\r\n                * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n                * If a docId is given we should save it using that docId under a single doc.\r\n                * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n                if (Array.isArray(subCollectionValue)) {\r\n                    if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n                        /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                        const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                            // return {[key]: item};\r\n                            return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                        }));\r\n                        subWriters.push(subWriter);\r\n                    }\r\n                    else { /* docId is undefined so we save each object in the array separate */\r\n                        subCollectionValue.forEach((arrayValue) => {\r\n                            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                            const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(map(item => {\r\n                                // return {[key]: [item]};\r\n                                /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                                return { key: subCollectionKey, value: [item] };\r\n                            }));\r\n                            subWriters.push(subWriter);\r\n                        });\r\n                    }\r\n                }\r\n                else { /* Not an array so a single Object*/\r\n                    subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n                    /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                    const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(map(item => {\r\n                        // return {[key]: item};\r\n                        return { key: subCollectionKey, value: item }; /* key and subCollectionValue as separate k,v properties */\r\n                    }));\r\n                    subWriters.push(subWriter);\r\n                }\r\n            } /* end of iteration */\r\n            if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n                /* the pipe only matters for the return value not for writing the data */\r\n                return combineLatest(subWriters).pipe(\r\n                // tap(sub => console.log(sub)),\r\n                // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n                // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n                // TODO firestore.\r\n                map((docDatas) => {\r\n                    const groupedData = {};\r\n                    docDatas.forEach((doc) => {\r\n                        const key = doc.key;\r\n                        const value = doc.value;\r\n                        /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                        // @ts-ignore\r\n                        if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                            /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                            // @ts-ignore\r\n                            groupedData[key].push(value[0]);\r\n                        }\r\n                        else {\r\n                            // @ts-ignore\r\n                            groupedData[key] = value;\r\n                        }\r\n                    });\r\n                    return groupedData;\r\n                }), \r\n                // tap(groupedData => console.log(groupedData)),\r\n                map((groupedData) => {\r\n                    return { ...currentData, ...groupedData };\r\n                }));\r\n            }\r\n            else {\r\n                return of(currentData);\r\n            }\r\n        })).pipe(\r\n        // @ts-ignore\r\n        take(1));\r\n    }\r\n    /* ----------  EDIT -------------- */\r\n    /**\r\n     * Update document and child documents\r\n     *\r\n     * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n     * so its possible to introduce spelling mistakes on attributes and so forth\r\n     *\r\n     * @param data the data that is to be added or updated { [field: string]: any }\r\n     * @param docRef DocumentReference to be updated\r\n     * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n     * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n     */\r\n    update$(data, docRef, subCollectionWriters = [], isAddModifiedDate = true) {\r\n        if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n            return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n        }\r\n        const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Update/ add data to the firestore documents\r\n     *\r\n     * @param docRefs list of DocumentReference to be have their data updated\r\n     * @param data data to add/update\r\n     * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n     */\r\n    updateMultiple$(docRefs, data, isAddModifiedDate = true) {\r\n        // const batch = this.fs.firebaseApp.firestore().batch();\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        docRefs.forEach((docRef) => {\r\n            batch.update(docRef, data);\r\n        });\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n     * and then delete the old doc.\r\n     * returns the new doc once the delete is done.\r\n     *\r\n     * @param docRef DocumentReference to have its id changed\r\n     * @param newId the new id\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n     */\r\n    changeDocId$(docRef, newId, subCollectionQueries = [], subCollectionWriters) {\r\n        if (subCollectionWriters == null) {\r\n            subCollectionWriters = subCollectionQueries;\r\n        }\r\n        const collectionRef = docRef.parent;\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n        // @ts-ignore\r\n        take(1), map((oldData) => this.cleanExtrasFromData(oldData, subCollectionWriters)), switchMap((oldData) => {\r\n            return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe(/* add the data under id*/ mergeMap(newData => {\r\n                return this.delete$(docRef, subCollectionQueries).pipe(map(() => newData) /* keep the new data */);\r\n            }));\r\n        }), catchError(err => {\r\n            console.log('Failed to Change Doc Id: ' + err);\r\n            throw err;\r\n        }), take(1));\r\n    }\r\n    /* Move Item in Array */\r\n    /**\r\n     * Moved item within the same list so we need to update the index of all items in the list;\r\n     * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n     * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     */\r\n    moveItemInArray$(items, fromIndex, toIndex, useCopy = false) {\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n            return of();\r\n        }\r\n        if (items[0]?.firestoreMetadata == null) {\r\n            const error = {\r\n                name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n                code: 'not-found',\r\n                message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n            };\r\n            throw error;\r\n        }\r\n        const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /**\r\n     * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n     * Not called directly.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param fromIndex\r\n     * @param toIndex\r\n     * @param useCopy if true the given array will not be updated\r\n     * @protected\r\n     */\r\n    getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy = false) {\r\n        const lowestIndex = Math.min(fromIndex, toIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n            return batch;\r\n        }\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        moveItemInArray(usedItems, fromIndex, toIndex);\r\n        const listSliceToUpdate = usedItems.slice(lowestIndex);\r\n        let i = lowestIndex;\r\n        for (const item of listSliceToUpdate) {\r\n            if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n                item.index = i;\r\n            }\r\n            const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n            batch.update(ref, { index: i });\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indexToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemInArray$(items, indexToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        const itemToDelete = usedItems[indexToDelete];\r\n        // get the delete batch that also contains any sub collections of the item\r\n        return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(map((batch) => {\r\n            // sort and remove the item from the usedItems and then add the update index to the batch\r\n            usedItems.sort(item => item.index); // make sure array is sorted by index\r\n            usedItems.splice(indexToDelete, 1);\r\n            this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch);\r\n            return batch;\r\n        }), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n     *\r\n     * @param items array of FireItem<A> docs with index variables to be updated\r\n     * @param indicesToDelete\r\n     * @param subCollectionQueries\r\n     * @param useCopy\r\n     */\r\n    deleteIndexedItemsInArray$(items, indicesToDelete, subCollectionQueries = [], useCopy = false) {\r\n        let usedItems;\r\n        if (useCopy) {\r\n            usedItems = Object.assign([], items);\r\n        }\r\n        else {\r\n            usedItems = items;\r\n        }\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        const itemsToDelete = usedItems.filter((item, i) => {\r\n            return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n        });\r\n        // iterate in reverse so as to not change the indices,\r\n        // the indices to delete must also be sorted\r\n        indicesToDelete.sort();\r\n        for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n            usedItems.splice(indicesToDelete[i], 1);\r\n        }\r\n        const docRefsObs$ = [];\r\n        // get the docRefs for items to be deleted including the ones in the subCollections\r\n        itemsToDelete.forEach(itemToDelete => {\r\n            const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(take(1));\r\n            docRefsObs$.push(obs$);\r\n        });\r\n        return forkJoin(docRefsObs$).pipe(take(1), map((listOfDocRefs) => {\r\n            // concat all the separate docRefs lists into one array of docRefs\r\n            let docRefs = [];\r\n            listOfDocRefs.forEach(refs => {\r\n                docRefs = docRefs.concat(refs);\r\n            });\r\n            return docRefs;\r\n        }), map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), map((batch) => this.getBatchFromUpdateIndexFromListOfDocs(usedItems, batch)), switchMap((batch) => this.batchCommit$(batch)));\r\n    }\r\n    /**\r\n     * Run this on collections with a fixed order using an index: number attribute;\r\n     * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n     * Basically needs to be run after a delete\r\n     *\r\n     * @param items\r\n     * @param batch\r\n     * @protected\r\n     */\r\n    getBatchFromUpdateIndexFromListOfDocs(items, batch = writeBatch(this.fs.firestore)) {\r\n        items.forEach((item, index) => {\r\n            if (item.index !== index) {\r\n                item.index = index; // this is just so that the given array's index is also updated immediately\r\n                const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore);\r\n                batch.update(ref, { index });\r\n            }\r\n        });\r\n        return batch;\r\n    }\r\n    transferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        const batch = this.getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem, useCopy);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    /* ----------  DELETE -------------- */\r\n    /**\r\n     * Delete Document and child documents\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    delete$(docRef, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            return this.fs.delete(docRef);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n     *\r\n     * @param docRef DocumentReference that is to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     * @param batch\r\n     */\r\n    getDeleteBatch$(docRef, subCollectionQueries = [], batch = writeBatch(this.fs.firestore)) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            // not deep so just do a normal doc delete\r\n            batch.delete(docRef);\r\n            return of(batch);\r\n        }\r\n        return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(map((docRefs) => this.getDeleteMultipleSimpleBatch(docRefs)), take(1));\r\n    }\r\n    deleteMultipleByPaths$(docPaths) {\r\n        const docRefs = docPaths.map(path => getRefFromPath(path, this.fs.firestore));\r\n        return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n    /**\r\n     * Delete Documents and child documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteMultiple$(docRefs, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return this.deleteMultipleSimple$(docRefs);\r\n        }\r\n        const deepDocRefs$ = [];\r\n        docRefs.forEach(docRef => {\r\n            const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n            deepDocRefs$.push(docRefs$);\r\n        });\r\n        return combineLatest(deepDocRefs$).pipe(\r\n        // tap(lists => console.log(lists)),\r\n        map((lists) => {\r\n            let mainDocRefList = [];\r\n            lists.forEach(list => {\r\n                mainDocRefList = mainDocRefList.concat(list);\r\n            });\r\n            return mainDocRefList;\r\n        }), \r\n        // tap(lists => console.log(lists)),\r\n        switchMap((docRefList) => this.deleteMultipleSimple$(docRefList)));\r\n    }\r\n    /**\r\n     * Delete all documents and sub collections as specified in subCollectionQueries.\r\n     * Not very efficient and causes a lot of db reads.\r\n     * If possible use the firebase CLI or the console instead when deleting large collections.\r\n     *\r\n     * @param collectionRef\r\n     * @param subCollectionQueries\r\n     */\r\n    deleteCollection$(collectionRef, subCollectionQueries = []) {\r\n        return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(switchMap(docRefs => this.deleteMultiple$(docRefs))).pipe(take(1));\r\n    }\r\n    /**\r\n     * Delete firestore document by path\r\n     * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n     *\r\n     * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteDocByPath$(docPath, subCollectionQueries = []) {\r\n        const docRef = getRefFromPath(docPath, this.fs.firestore);\r\n        return this.delete$(docRef, subCollectionQueries);\r\n    }\r\n    /**\r\n     * Delete document by FirestoreItem\r\n     *\r\n     * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n     *\r\n     * @param item FirestoreItem to be deleted\r\n     * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    deleteItem$(item, subCollectionQueries = []) {\r\n        const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n        return this.deleteMultipleSimple$(docRefs).pipe(\r\n        // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n        //   if (err === 'Document Does not exists') { return of(null); }\r\n        //   else { throw err; }\r\n        // }),\r\n        take(1));\r\n    }\r\n    cleanExtrasFromData(data, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n        // const dataToBeCleaned = data;\r\n        if (Array.isArray(data)) {\r\n            const cleanDatas = [];\r\n            data.forEach(d => {\r\n                cleanDatas.push(this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove));\r\n            });\r\n            return cleanDatas;\r\n        }\r\n        else {\r\n            return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove);\r\n        }\r\n    }\r\n    /* ----------  PROTECTED METHODS -------------- */\r\n    /**\r\n     * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n     * and also allows for to choose action to take when document does not exist\r\n     *\r\n     * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n     *\r\n     * @param docRef DocumentReference that will be listened to\r\n     * @param actionIfNotExist Action to take if document does not exist\r\n     */\r\n    listenForDocSimple$(docRef, actionIfNotExist = DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n        return this.fs.doc(docRef).pipe(tap((snapshot) => {\r\n            if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n                const error = {\r\n                    name: 'FirebaseErrorExt',\r\n                    code: 'not-found',\r\n                    message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n                    docRef\r\n                };\r\n                throw error;\r\n            }\r\n        }), filter((snapshot) => {\r\n            return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n        }), map((snapshot) => {\r\n            console.log(snapshot.exists());\r\n            if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n                const data = snapshot.data();\r\n                const firestoreMetadata = {\r\n                    id: snapshot.id,\r\n                    ref: snapshot.ref,\r\n                    path: docRef.path,\r\n                    isExists: snapshot.exists(),\r\n                    snapshotMetadata: snapshot.metadata\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n                return null;\r\n            }\r\n            return null;\r\n        }), map((data) => {\r\n            if (data != null) {\r\n                return convertTimestampToDate(data);\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n     * Used internally, please use listenForCollection$() instead.\r\n     *\r\n     * @param _query the Query which will be listened to\r\n     * @protected\r\n     */\r\n    listenForCollectionSimple$(_query) {\r\n        /**\r\n         * Returns an observable that will emit whenever the ref changes in any way.\r\n         * Also adds the id and ref to the object.\r\n         */\r\n        return this.fs.collection(_query).pipe(map((snap) => {\r\n            return snap.docs.map(snapshot => {\r\n                const data = snapshot.data();\r\n                const id = snapshot.id;\r\n                const ref = snapshot.ref;\r\n                const path = ref.path;\r\n                const snapshotMetadata = snapshot.metadata;\r\n                const firestoreMetadata = {\r\n                    id,\r\n                    path,\r\n                    ref,\r\n                    snapshotMetadata,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            });\r\n        }), map((datas) => datas.map(data => {\r\n            convertTimestampToDate(data);\r\n            return data;\r\n        })));\r\n    }\r\n    /**\r\n     * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n     *\r\n     * Please use listenForDoc or listenForCollection.\r\n     *\r\n     * @param item\r\n     * @param subCollectionQueries\r\n     * @protected\r\n     */\r\n    listenForCollectionsDeep(item, subCollectionQueries = []) {\r\n        if (item == null) {\r\n            return of([item]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n            return of([item]);\r\n        }\r\n        const collectionListeners = [];\r\n        /* Iterate over each sub collection we have given and create collection listeners*/\r\n        subCollectionQueries.forEach(subCollectionQuery => {\r\n            const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n            if (subCollectionQuery.queryConstraints) {\r\n                queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n                // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            }\r\n            // if (subCollectionQuery.queryFn) {\r\n            //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n            // }\r\n            const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n            // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n            /* Uncomment to see data on each update */\r\n            // tap(d => console.log(d)),\r\n            // filter(docs => docs != null),\r\n            /* Listen For and Add any Potential Sub Docs*/\r\n            // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n            mergeMap((items) => {\r\n                if (!subCollectionQuery.subCollections) {\r\n                    return of(items);\r\n                }\r\n                const docListeners = [];\r\n                items = items.filter(d => d != null); // filter out potential nulls\r\n                items.forEach((subItem) => {\r\n                    const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n                    docListeners.push(subDocAndCollections$);\r\n                });\r\n                if (docListeners.length <= 0) {\r\n                    return of([]);\r\n                } /* subCollectionQuery is empty or doesnt exist */\r\n                return combineLatest(docListeners).pipe(\r\n                // tap(val => console.log(val))\r\n                );\r\n            }), /* End of Listening for sub docs */ \r\n            /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n            and we only care about the data. So we remove the array and just make it one object with the\r\n            subCollectionQuery name as key and docs[0] as value */\r\n            map((items) => {\r\n                const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n                if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n                    return { [subCollectionQuery.name]: items[0] };\r\n                }\r\n                else {\r\n                    return { [subCollectionQuery.name]: items };\r\n                }\r\n            }));\r\n            collectionListeners.push(collectionListener);\r\n        });\r\n        /* Finally return the combined collection listeners*/\r\n        // @ts-ignore\r\n        return combineLatest(collectionListeners).pipe(map((collectionDatas) => {\r\n            // map((collectionDatas) => {\r\n            const datasMap = {};\r\n            collectionDatas.forEach((collectionData) => {\r\n                for (const [collectionName, items] of Object.entries(collectionData)) {\r\n                    datasMap[collectionName] = items;\r\n                }\r\n            });\r\n            return datasMap;\r\n        }), map((data) => {\r\n            return { ...item, ...data };\r\n        }));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n     */\r\n    listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries = [], actionIfNotExist = DocNotExistAction.RETURN_NULL) {\r\n        /* Listen for the docFs*/\r\n        return this.listenForDocSimple$(docRef, actionIfNotExist).pipe(mergeMap((item) => {\r\n            if (item === null) {\r\n                return of(item);\r\n            }\r\n            if (subCollectionQueries.length <= 0) {\r\n                return of(item);\r\n            }\r\n            return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n        }));\r\n    }\r\n    /**\r\n     * A replacement/extension to the AngularFirestoreCollection.add.\r\n     * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n     * the data with the added properties in FirebaseDbItem\r\n     *\r\n     * Used internally\r\n     *\r\n     * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n     * @param collectionRef the CollectionReference where the document should be added\r\n     * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n     * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n     */\r\n    addSimple$(data, collectionRef, isAddDates = true, id) {\r\n        // let dataToBeSaved: A = Object.assign({}, data);\r\n        let res$;\r\n        if (isAddDates) {\r\n            const date = new Date();\r\n            data = addCreatedDate(data, false, date);\r\n            data = addModifiedDate(data, false, date);\r\n        }\r\n        if (id !== undefined) {\r\n            const docRef = getDocRefWithId(collectionRef, id);\r\n            res$ = this.fs.set(docRef, data);\r\n        }\r\n        else {\r\n            res$ = this.fs.add(collectionRef, data);\r\n        }\r\n        // if (Array.isArray(data) && isAddDates) {\r\n        //   data = data.map(item => {\r\n        //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n        //   })\r\n        // }\r\n        res$ = res$.pipe(\r\n        // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n        // tap(ref => console.log(ref)),\r\n        // tap(() => console.log(data)),\r\n        map((ref) => {\r\n            if (id === undefined && ref) {\r\n                const path = ref.path;\r\n                const firestoreMetadata = {\r\n                    id: ref.id,\r\n                    path,\r\n                    ref,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n            else { // if id is defined it means we used docRef.set and ref is undefined\r\n                const path = collectionRef.path + '/' + id;\r\n                ref = getRefFromPath(path, this.fs.firestore);\r\n                const firestoreMetadata = {\r\n                    id: id,\r\n                    ref,\r\n                    path,\r\n                    isExists: true\r\n                };\r\n                return { ...data, firestoreMetadata };\r\n            }\r\n        }));\r\n        return res$.pipe(take(1));\r\n    }\r\n    /** Used internally for updates that doesn't affect child documents */\r\n    updateSimple$(data, docRef, isAddModifiedDate = true) {\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        return this.fs.update(docRef, data);\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, used by update deep\r\n     */\r\n    updateDeepToBatchHelper(data, docRef, subCollectionWriters = [], isAddModifiedDate = true, batch) {\r\n        if (batch === undefined) {\r\n            batch = writeBatch(this.fs.firestore);\r\n        }\r\n        if (isAddModifiedDate) {\r\n            data = addModifiedDate(data, false);\r\n        }\r\n        const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n        const currentDoc = split.currentDoc;\r\n        const subCollections = split.subCollections;\r\n        // console.log(currentDoc, subCollections);\r\n        batch.update(docRef, currentDoc);\r\n        for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n            let subSubCollectionWriters; // undefined if no subCollectionWriters\r\n            let subDocId;\r\n            if (subCollectionWriters) {\r\n                subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n                subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n            }\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n            // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n            const subCollection = getSubCollection(docRef, subCollectionKey);\r\n            const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n            batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n     * have an index value and a groupName.\r\n     *\r\n     * @param previousArray\r\n     * @param currentArray\r\n     * @param previousIndex\r\n     * @param currentIndex\r\n     * @param currentArrayName\r\n     * @param additionalDataUpdateOnMovedItem\r\n     * @param isUpdateModifiedDateOnMovedItem\r\n     * @param useCopy\r\n     * @protected\r\n     */\r\n    getBatchFromTransferItemInIndexedDocs(previousArray, currentArray, previousIndex, currentIndex, currentArrayName, additionalDataUpdateOnMovedItem, isUpdateModifiedDateOnMovedItem = true, useCopy = false) {\r\n        let usedPreviousArray;\r\n        let usedCurrentArray;\r\n        if (useCopy) {\r\n            usedPreviousArray = Object.assign([], previousArray);\r\n            usedCurrentArray = Object.assign([], currentArray);\r\n        }\r\n        else {\r\n            usedPreviousArray = previousArray;\r\n            usedCurrentArray = currentArray;\r\n        }\r\n        transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n        const batch = writeBatch(this.fs.firestore);\r\n        if (additionalDataUpdateOnMovedItem !== undefined) {\r\n            const movedItem = usedCurrentArray[currentIndex];\r\n            const movedItemRef = movedItem.firestoreMetadata.ref;\r\n            const data = { ...additionalDataUpdateOnMovedItem, groupName: currentArrayName };\r\n            if (!useCopy) {\r\n                addDataToItem(movedItem, data, true);\r\n            }\r\n            if (isUpdateModifiedDateOnMovedItem) {\r\n                const date = new Date();\r\n                addModifiedDate(data, true, date);\r\n                if (!useCopy) {\r\n                    addModifiedDate(movedItem, true, date);\r\n                }\r\n            }\r\n            batch.update(movedItemRef, data);\r\n        }\r\n        const currentArraySliceToUpdate = usedCurrentArray.slice(currentIndex);\r\n        let i = currentIndex;\r\n        for (const item of currentArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        const prevArraySliceToUpdate = usedPreviousArray.slice(previousIndex);\r\n        i = previousIndex;\r\n        for (const item of prevArraySliceToUpdate) {\r\n            // @ts-ignore\r\n            batch.update(item.firestoreMetadata.ref, { index: i });\r\n            if (!useCopy) {\r\n                item.index = i;\r\n            }\r\n            i++;\r\n        }\r\n        return batch;\r\n    }\r\n    /**\r\n     * Delete Documents\r\n     *\r\n     * @param docRefs - A list of DocumentReference that are to be deleted\r\n     */\r\n    deleteMultipleSimple$(docRefs) {\r\n        const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n        return this.batchCommit$(batch);\r\n    }\r\n    getDeleteMultipleSimpleBatch(docRefs, batch = writeBatch(this.fs.firestore)) {\r\n        docRefs.forEach((docRef) => {\r\n            batch.delete(docRef);\r\n        });\r\n        return batch;\r\n    }\r\n    /**\r\n     * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n     *\r\n     * @param dbItem the data to be cleaned\r\n     * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n     * @param additionalFieldsToRemove\r\n     */\r\n    removeDataExtrasRecursiveHelper(dbItem, subCollectionWriters = [], additionalFieldsToRemove = []) {\r\n        // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n        const extraPropertyNames = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n        /* Current level delete */\r\n        for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[extraPropertyName];\r\n        }\r\n        subCollectionWriters.forEach(col => {\r\n            if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n                const docs = dbItem[col.name];\r\n                docs.forEach((d, i) => {\r\n                    if (col.subCollections) {\r\n                        this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n                    }\r\n                    else {\r\n                        /*  */\r\n                        for (const extraPropertyName of extraPropertyNames) {\r\n                            delete dbItem[col.name][i][extraPropertyName];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n                }\r\n                else {\r\n                    for (const extraPropertyName of extraPropertyNames) {\r\n                        delete dbItem[col.name][extraPropertyName];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return dbItem;\r\n    }\r\n    /**\r\n     * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n     * Mainly used to delete a docFs and its sub docs\r\n     * @param ref: DocumentReference | CollectionReference\r\n     * @param subCollectionQueries: SubCollectionQuery[]\r\n     */\r\n    getDocumentReferencesDeep$(ref, subCollectionQueries = []) {\r\n        if (ref instanceof DocumentReference) {\r\n            return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n        }\r\n        else { // CollectionReference\r\n            return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n        }\r\n    }\r\n    getDocumentReferencesFromDocRef$(docRef, subCollectionQueries = []) {\r\n        return this.listenForDoc$(docRef, subCollectionQueries).pipe(take(1), map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)), \r\n        // tap(pathList => console.log(pathList)),\r\n        map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries = []) {\r\n        return this.listenForCollectionSimple$(collectionRef).pipe(\r\n        // @ts-ignore\r\n        take(1), mergeMap((items) => {\r\n            let docListeners;\r\n            docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n            return combineLatest(docListeners);\r\n        }), map((items) => {\r\n            let paths = [];\r\n            items.forEach(item => {\r\n                paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n            });\r\n            return paths;\r\n        }), map((pathList) => {\r\n            return pathList\r\n                .map(path => getRefFromPath(path, this.fs.firestore));\r\n        }));\r\n    }\r\n    /**\r\n     * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n     * including child documents using SubCollectionQueries\r\n     *\r\n     * Internal use\r\n     * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n     * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n     */\r\n    getDocumentReferencesFromItem(item, subCollectionQueries = []) {\r\n        const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n        return paths.map(path => getRefFromPath(path, this.fs.firestore));\r\n    }\r\n    /**\r\n     * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n     */\r\n    getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries = []) {\r\n        if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n            return [item.firestoreMetadata.path];\r\n        }\r\n        let pathList = [];\r\n        pathList.push(item.firestoreMetadata.path);\r\n        subCollectionQueries.forEach(col => {\r\n            if (Array.isArray(item[col.name]) && !col.docId) {\r\n                /* property is array and not using docId so will contain multiple docs */\r\n                const items = item[col.name];\r\n                items.forEach(subItem => {\r\n                    if (col.subCollections) {\r\n                        pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n                    }\r\n                    else {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                });\r\n            }\r\n            else { /* not an array so a single doc*/\r\n                if (col.subCollections) {\r\n                    pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n                }\r\n                else {\r\n                    const subItem = item[col.name];\r\n                    if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n                        pathList.push(subItem.firestoreMetadata.path);\r\n                    }\r\n                    // const path = (dbItem[col.name] as FirestoreItem).path;\r\n                }\r\n            }\r\n        });\r\n        return pathList;\r\n    }\r\n    /**\r\n     * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n     * Only goes one sub level deep;\r\n     */\r\n    splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters = []) {\r\n        /* Split data into current doc and sub collections */\r\n        let currentDoc = {};\r\n        const subCollections = {};\r\n        /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n        // not array so object\r\n        for (const [key, value] of Object.entries(data)) {\r\n            // console.log(key, value);\r\n            if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n                const subCollectionWriter = subCollectionWriters.find(subColl => subColl.name === key);\r\n                if (subCollectionWriter) {\r\n                    subCollections[key] = value;\r\n                }\r\n                else {\r\n                    currentDoc[key] = value;\r\n                }\r\n            }\r\n            else {\r\n                currentDoc = data;\r\n            }\r\n        }\r\n        return {\r\n            currentDoc,\r\n            subCollections\r\n        };\r\n    }\r\n    /**\r\n     * Turn a batch into an Observable instead of Promise.\r\n     *\r\n     * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n     * everything else.\r\n     *\r\n     * This method turns it into an observable\r\n     */\r\n    batchCommit$(batch) {\r\n        return from(batch.commit()).pipe(take(1));\r\n    }\r\n}\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.queryConstraints = [];\r\n    }\r\n    /** factory method to create container from path */\r\n    static fromPath(firestore, path) {\r\n        const ref = collection(firestore, path);\r\n        return new this(ref);\r\n    }\r\n    /** Returns the query with all the query constraints */\r\n    get query() {\r\n        return query(this.ref, ...this.queryConstraints);\r\n    }\r\n    /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n    getDocs$() {\r\n        return from(getDocs(this.query));\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        this.queryConstraints.push(where(fieldPath, opStr, value));\r\n        return this;\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n        return this;\r\n    }\r\n    limit(_limit) {\r\n        this.queryConstraints.push(limit(_limit));\r\n        return this;\r\n    }\r\n    limitToLast(_limit) {\r\n        this.queryConstraints.push(limitToLast(_limit));\r\n        return this;\r\n    }\r\n    startAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    startAfter(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(startAfter(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(startAfter(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endAt(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endAt(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endAt(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n    endBefore(snapshot, ...fieldValues) {\r\n        if (snapshot) {\r\n            this.queryConstraints.push(endBefore(snapshot));\r\n        }\r\n        else if (fieldValues) {\r\n            this.queryConstraints.push(endBefore(...fieldValues));\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBYyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFbkUsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZGLE9BQU8sRUFDTCxVQUFVLEVBR1YsaUJBQWlCLEVBRWpCLEtBQUssRUFDTCxTQUFTLEVBR1QsT0FBTyxFQUNQLEtBQUssRUFDTCxXQUFXLEVBQ1gsT0FBTyxFQUVQLEtBQUssRUFJTCxVQUFVLEVBQ1YsT0FBTyxFQUNQLEtBQUssRUFFTCxVQUFVLEVBRVgsTUFBTSxvQkFBb0IsQ0FBQztBQUU1QixPQUFPLEVBQ0wsY0FBYyxFQUNkLGFBQWEsRUFDYixlQUFlLEVBQ2Ysc0JBQXNCLEVBQ3RCLGVBQWUsRUFDZixjQUFjLEVBQ2QsZ0JBQWdCLEVBQ2pCLE1BQU0sV0FBVyxDQUFDO0FBS25CLE9BQU8sRUFBQyxlQUFlLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFFaEU7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxpQkFZWDtBQVpELFdBQVksaUJBQWlCO0lBQzNCLDRCQUE0QjtJQUM1Qix1RUFBVyxDQUFBO0lBRVgsaUhBQWlIO0lBQ2pILHVGQUFtQixDQUFBO0lBRW5CLCtDQUErQztJQUMvQyw2REFBTSxDQUFBO0lBRU4saURBQWlEO0lBQ2pELHVGQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFaVyxpQkFBaUIsS0FBakIsaUJBQWlCLFFBWTVCO0FBV0Q7Ozs7O0dBS0c7QUFD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QUFDLENBQUMsQ0FBQztTQUM3QzthQUFNLElBQUksV0FBVyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztTQUNuRDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELFNBQVMsQ0FBQyxRQUFvQyxFQUFFLEdBQUcsV0FBc0I7UUFDdkUsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO1NBQ3ZEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvbWJpbmVMYXRlc3QsIGZvcmtKb2luLCBmcm9tLCBPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQge2NhdGNoRXJyb3IsIGZpbHRlciwgbWFwLCBtZXJnZU1hcCwgc3dpdGNoTWFwLCB0YWtlLCB0YXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHtcclxuICBjb2xsZWN0aW9uLFxyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgZW5kQXQsXHJcbiAgZW5kQmVmb3JlLFxyXG4gIEZpZWxkUGF0aCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jcyxcclxuICBsaW1pdCxcclxuICBsaW1pdFRvTGFzdCxcclxuICBvcmRlckJ5LFxyXG4gIE9yZGVyQnlEaXJlY3Rpb24sXHJcbiAgcXVlcnksXHJcbiAgUXVlcnksXHJcbiAgUXVlcnlDb25zdHJhaW50LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc3RhcnRBZnRlcixcclxuICBzdGFydEF0LFxyXG4gIHdoZXJlLFxyXG4gIFdoZXJlRmlsdGVyT3AsXHJcbiAgd3JpdGVCYXRjaCxcclxuICBXcml0ZUJhdGNoXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcbmltcG9ydCB7XHJcbiAgYWRkQ3JlYXRlZERhdGUsXHJcbiAgYWRkRGF0YVRvSXRlbSxcclxuICBhZGRNb2RpZmllZERhdGUsXHJcbiAgY29udmVydFRpbWVzdGFtcFRvRGF0ZSxcclxuICBnZXREb2NSZWZXaXRoSWQsXHJcbiAgZ2V0UmVmRnJvbVBhdGgsXHJcbiAgZ2V0U3ViQ29sbGVjdGlvblxyXG59IGZyb20gJy4vaGVscGVycyc7XHJcbmltcG9ydCB7U3ViQ29sbGVjdGlvblF1ZXJ5fSBmcm9tICcuL3N1Yi1jb2xsZWN0aW9uLXF1ZXJ5JztcclxuaW1wb3J0IHtCYXNlRmlyZXN0b3JlV3JhcHBlciwgRmlyZXN0b3JlRXJyb3JFeHR9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7RmlyZUl0ZW0sIEZpcmVzdG9yZUl0ZW0sIEZpcmVzdG9yZU1ldGFkYXRhfSBmcm9tICcuL21vZGVscy9maXJlc3RvcmVJdGVtJztcclxuaW1wb3J0IHtTdWJDb2xsZWN0aW9uV3JpdGVyfSBmcm9tICcuL3N1Yi1jb2xsZWN0aW9uLXdyaXRlcic7XHJcbmltcG9ydCB7bW92ZUl0ZW1JbkFycmF5LCB0cmFuc2ZlckFycmF5SXRlbX0gZnJvbSAnLi9kcmFnLXV0aWxzJztcclxuXHJcbi8qKlxyXG4gKiBBY3Rpb24gdG8gYmUgdGFrZW4gYnkgbGlzdGVuZXIgaWYgdGhlIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0LlxyXG4gKi9cclxuZXhwb3J0IGVudW0gRG9jTm90RXhpc3RBY3Rpb24ge1xyXG4gIC8qKiByZXR1cm5zIGEgbnVsbCBvYmplY3QgKi9cclxuICBSRVRVUk5fTlVMTCxcclxuXHJcbiAgLyoqIHJldHVybiBhbGwgdGhlIGV4dHJhcyBzdWNoIGFzIHJlZiwgcGF0aCBhbmQgc28gb24gYnV0IG5vIGRhdGEsIGtpbmRhIGp1c3QgaWdub3JlcyB0aGF0IHRoZSBkb2MgaXNuJ3QgdGhlcmUgKi9cclxuICBSRVRVUk5fQUxMX0JVVF9EQVRBLFxyXG5cclxuICAvKiogZG8gbm90IHJldHVybiBhdCBhbGwgdW50aWwgaXQgZG9lcyBleGlzdCAqL1xyXG4gIEZJTFRFUixcclxuXHJcbiAgLyoqIHJldHVybiBkb2Mgbm90IGZvdW5kIGVycm9yICdkb2Nfbm90X2ZvdW5kJyAqL1xyXG4gIFRIUk9XX0RPQ19OT1RfRk9VTkQsXHJcbn1cclxuXHJcbi8qKiBVc2VkIGludGVybmFsbHkgKi9cclxuaW50ZXJmYWNlIEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQge1xyXG4gIC8qKiBjb250YWlucyB0aGUgZG9jdW1lbnQgdGhhdCBpcyBjb25zaWRlcmVkIHRoZSBjdXJyZW50ICovXHJcbiAgY3VycmVudERvYzogRmlyZUl0ZW08e30+O1xyXG4gIC8qKiBzdWIgY29sbGVjdGlvbnMgb2YgY3VycmVudCBkb2N1bWVudCAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTWFpbiBDbGFzcy5cclxuICpcclxuICpcclxuICpcclxuICovXHJcbmV4cG9ydCBjbGFzcyBGaXJlc3RvcmVFeHRlbmRlZCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbnN0cnVjdG9yIGZvciBBbmd1bGFyRmlyZXN0b3JlV3JhcHBlclxyXG4gICAqXHJcbiAgICogQHBhcmFtIGZzIEZpcmVzdG9yZSB3cmFwcGVyIEZpcmVzdG9yZSBleHRlbmRlZCBjYW4gYmUgdXNlZCBieSBtYW55IEZpcmVzdG9yZSBpbXBsZW1lbnRhdGlvbnNcclxuICAgKiBAcGFyYW0gZGVmYXVsdERvY0lkIFRoZSBkZWZhdWx0IG5hbWUgZ2l2ZW4gdG8gYSBzdWJDb2xsZWN0aW9uIGRvY3VtZW50IHdoZW4gbm8gbmFtZSBpcyBnaXZlblxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnM6IEJhc2VGaXJlc3RvcmVXcmFwcGVyLCBwdWJsaWMgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICB9XHJcblxyXG4gIGdldCBmaXJlc3RvcmUoKTogRmlyZXN0b3JlIHtcclxuICAgIHJldHVybiB0aGlzLmZzLmZpcmVzdG9yZTtcclxuICB9XHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIExJU1RFTiAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIEFsbG93cyBmb3IgbGlzdGVuaW5nIHRvIGRvY3VtZW50cyBhbmQgY29sbGVjdGlvbnMgbiBkZWVwIHVwIHRvIHRoZSBmaXJlc3RvcmUgbWF4IG9mIDEwMCBsZXZlbHMuXHJcbiAgICpcclxuICAgKiBUcmlnZ2VycyBmb3IgYW55IGNoYW5nZSBpbiBhbnkgZG9jdW1lbnQgdGhhdCBpcyBsaXN0ZW5lZCB0by5cclxuICAgKlxyXG4gICAqXHJcbiAgICogRS54OlxyXG4gICAqICAgICAgY29uc3Qgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW1xyXG4gICAqICAgICAgICAgeyBuYW1lOiAnZGF0YScgfSxcclxuICAgKiAgICAgICAgIHsgbmFtZTogJ3NlY3VyZScgfSxcclxuICAgKiAgICAgICAgIHsgbmFtZTogJ3ZhcmlhbnRzJyB9LFxyXG4gICAqICAgICAgICAgeyBuYW1lOiAnaW1hZ2VzJyxcclxuICAgKiAgICAgICAgICAgcXVlcnlGbjogcmVmID0+IHJlZi5vcmRlckJ5KCdpbmRleCcpLFxyXG4gICAqICAgICAgICAgICBjb2xsZWN0aW9uV2l0aE5hbWVzOiBbXHJcbiAgICogICAgICAgICAgICAgeyBuYW1lOiAnc2VjdXJlJ31cclxuICAgKiAgICAgICAgICAgXVxyXG4gICAqICAgICAgICAgfSxcclxuICAgKiAgICAgXTtcclxuICAgKlxyXG4gICAqICAgICB0aGlzLmxpc3RlbkZvckRvY0FuZFN1YkNvbGxlY3Rpb25zPFByb2R1Y3Q+KGRvY0ZzLCBjb2xsZWN0aW9ucylcclxuICAgKlxyXG4gICAqIFdyYXBwZXIgZm9yIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkIHNvIHRoYXQgd2UgY2FuIGNhc3QgdGhlIHJldHVybiB0byB0aGUgY29ycmVjdCB0eXBlXHJcbiAgICogQWxsIGxvZ2ljIGlzIGluIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiAtIGEgZG9jUmVmIHdpdGggcG90ZW50aWFsIHF1ZXJ5Rm5cclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgLSBzZWUgZXhhbXBsZVxyXG4gICAqIEBwYXJhbSBhY3Rpb25JZk5vdEV4aXN0IEFjdGlvbiB0byB0YWtlIGlmIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckRvYyQ8VCA9IEZpcmVzdG9yZUl0ZW0gfCBEb2N1bWVudERhdGE+KFxyXG4gICAgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIHJldHVybiB0aGlzLmxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMsIGFjdGlvbklmTm90RXhpc3QpLnBpcGUoXHJcbiAgICAgIG1hcChkYXRhID0+IGRhdGEgYXMgRmlyZUl0ZW08VD4pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2FtZSBhcyBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5zbmFwc2hvdENoYW5nZXMgYnV0IGl0IGFkZHMgdGhlIHByb3BlcnRpZXMgaW4gRmlyZWJhc2VEYkl0ZW0uXHJcbiAgICpcclxuICAgKiBJbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHdpbGwgdHJpZ2dlciBmb3IgZXZlcnkgY2hhbmdlL3VwZGF0ZSBvbiBhbnkgb2YgdGhlIGRvY3VtZW50cyB3ZSBhcmUgbGlzdGVuaW5nIHRvLlxyXG4gICAqIFRoYXQgbWVhbnMgdGhhdCBpZiBhbnkgZG9jdW1lbnQgd2UgYXJlIGxpc3RlbmluZyB0byBpcyBjaGFuZ2VkIHRoZSBlbnRpcmUgb2JqZWN0IHdpbGwgYmUgdHJpZ2dlcmVkIGNvbnRhaW5pbmcgdGhlIHVwZGF0ZWQgZGF0YS5cclxuICAgKlxyXG4gICAqXHJcbiAgICogICAgRXhhbXBsZSB1c2FnZS5cclxuICAgKlxyXG4gICAqICAgIG5nRmlyZXN0b3JlRGVlcDogUnhGaXJlc3RvcmVFeHRlbmRlZDsgIC8vICBSeEZpcmVzdG9yZUV4dGVuZGVkIHZhcmlhYmxlXHJcbiAgICogICAgcmVzdGF1cmFudENvbGxlY3Rpb25GcyA9IHRoaXMubmdGaXJlU3RvcmUuY29sbGVjdGlvbigncmVzdGF1cmFudHMnKTsgLy8gQW5ndWxhckZpcmVzdG9yZUNvbGxlY3Rpb25SZWYgdG8gcmVzdGF1cmFudHNcclxuICAgKlxyXG4gICAqICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmdGaXJlU3RvcmU6IEFuZ3VsYXJGaXJlc3RvcmUpIHtcclxuICAgKiAgICAgICAgdGhpcy5uZ0ZpcmVzdG9yZURlZXAgPSBuZXcgUnhGaXJlc3RvcmVFeHRlbmRlZChuZ0ZpcmVTdG9yZSk7ICAvLyAgaW5pdGlhbGl6ZSBBbmd1bGFyRmlyZVN0b3JlRGVlcCB3aXRoIEFuZ3VsYXJGaXJlc3RvcmVcclxuICAgKiAgICB9XHJcbiAgICpcclxuICAgKiAgICBsaXN0ZW5Gb3JSZXN0YXVyYW50cyQoKTogT2JzZXJ2YWJsZTxSZXN0YXVyYW50SXRlbVtdPiB7XHJcbiAgICogICAgICAgIHJldHVybiB0aGlzLm5nRmlyZXN0b3JlRGVlcC5saXN0ZW5Gb3JDb2xsZWN0aW9uJDxSZXN0YXVyYW50SXRlbT4odGhpcy5yZXN0YXVyYW50Q29sbGVjdGlvbkZzKTtcclxuICAgKiAgICB9XHJcbiAgICpcclxuICAgKiAgICBJZiB5b3UgZG8gbm90IHdpc2ggdG8gbGlzdGVuIGZvciBjaGFuZ2VzIGFuZCBvbmx5IGNhcmUgYWJvdXQgZ2V0dGluZyB0aGUgdmFsdWVzIG9uY2VcclxuICAgKlxyXG4gICAqICAgIGdldFJlc3RhdXJhbnRzJCgpOiBPYnNlcnZhYmxlPFJlc3RhdXJhbnRJdGVtW10+IHtcclxuICAgKiAgICAgICAgcmV0dXJuIHRoaXMubmdGaXJlc3RvcmVEZWVwLmxpc3RlbkZvckNvbGxlY3Rpb24kPFJlc3RhdXJhbnRJdGVtPih0aGlzLnJlc3RhdXJhbnRDb2xsZWN0aW9uRnMpLnBpcGUoXHJcbiAgICogICAgICAgICAgdGFrZSgxKVxyXG4gICAqICAgICAgICApO1xyXG4gICAqICAgIH1cclxuICAgKlxyXG4gICAqIEBwYXJhbSBfcXVlcnkgdGhlIGNvbGxlY3Rpb25SZWYgd2hpY2ggd2lsbCBiZSBsaXN0ZW5lZCB0b1xyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllc1xyXG4gICAqIEBwYXJhbSBkb2N1bWVudENoYW5nZVR5cGVzIGxpc3Qgb2YgRG9jdW1lbnRDaGFuZ2VUeXBlIHRoYXQgd2lsbCBiZSBsaXN0ZW5lZCB0bywgaWYgbnVsbCBsaXN0ZW4gdG8gYWxsXHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckNvbGxlY3Rpb24kPFQgPSBGaXJlc3RvcmVJdGVtIHwgRG9jdW1lbnREYXRhPihcclxuICAgIF9xdWVyeTogUXVlcnk8VD4sXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8QXJyYXk8RmlyZUl0ZW08VD4+PiB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZW1pdCB3aGVuZXZlciB0aGUgcmVmIGNoYW5nZXMgaW4gYW55IHdheS5cclxuICAgICAqIEFsc28gYWRkcyB0aGUgaWQgYW5kIHJlZiB0byB0aGUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uU2ltcGxlJDxUPihfcXVlcnkpLnBpcGUoXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW1zID09IG51bGwgfHwgaXRlbXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoW10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgIHJldHVybiBvZihpdGVtcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBjb2xsZWN0aW9uTGlzdGVuZXJzOiBBcnJheTxPYnNlcnZhYmxlPGFueT4+ID0gW107XHJcblxyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgY29uc3QgY29sbGVjdGlvbkxpc3RlbmVyID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG5cclxuICAgICAgICAgIGNvbGxlY3Rpb25MaXN0ZW5lcnMucHVzaChjb2xsZWN0aW9uTGlzdGVuZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKiBGaW5hbGx5IHJldHVybiB0aGUgY29tYmluZWQgY29sbGVjdGlvbiBsaXN0ZW5lcnMgKi9cclxuICAgICAgICByZXR1cm4gY29tYmluZUxhdGVzdChjb2xsZWN0aW9uTGlzdGVuZXJzKTtcclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBMaXN0ZW5zIGZvciBjb2xsZWN0aW9ucyBpbnNpZGUgY29sbGVjdGlvbnMgd2l0aCB0aGUgc2FtZSBuYW1lIHRvIGFuIHVubGltaXRlZCBkZXB0aCBhbmQgcmV0dXJucyBhbGwgb2YgaXQgYXMgYW4gYXJyYXkuXHJcbiAgICovXHJcbiAgcHVibGljIGxpc3RlbkZvckNvbGxlY3Rpb25SZWN1cnNpdmVseSQ8VCA9IEZpcmVzdG9yZUl0ZW0gfCBEb2N1bWVudERhdGE+KFxyXG4gICAgY29sbGVjdGlvblBhdGg6IHN0cmluZyxcclxuICAgIGNvbGxlY3Rpb25LZXk6IHN0cmluZyxcclxuICAgIG9yZGVyS2V5Pzogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuXHJcbiAgICAvLyBjb25zdCBjb2xsZWN0aW9uUmVmID0gZ2V0UmVmRnJvbVBhdGgoY29sbGVjdGlvblBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+O1xyXG4gICAgY29uc3QgY29sbGVjdGlvblF1ZXJ5ID0gbmV3IFF1ZXJ5Q29udGFpbmVyPFQ+KGdldFJlZkZyb21QYXRoKGNvbGxlY3Rpb25QYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPik7XHJcbiAgICBpZiAob3JkZXJLZXkgIT0gbnVsbCkge1xyXG4gICAgICBjb2xsZWN0aW9uUXVlcnkub3JkZXJCeShvcmRlcktleSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMubGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQ8VD4oY29sbGVjdGlvblF1ZXJ5LnF1ZXJ5KS5waXBlKFxyXG4gICAgICBtZXJnZU1hcCgoaXRlbXM6IEZpcmVJdGVtPFQ+W10pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW1zLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoW10pO1xyXG4gICAgICAgIH0gLy8gVE9ETyAgcGVyaGFwcyBtYWtlIHRoaXMgdGhyb3cgYW4gZXJyb3Igc28gdGhhdCB3ZSBjYW4gc2tpcCBpdFxyXG5cclxuICAgICAgICAvLyBpZiAoaXRlbXMubGVuZ3RoIDw9IDApIHsgdGhyb3dFcnJvcignTm8gbW9yZSAnKTsgfVxyXG5cclxuICAgICAgICBjb25zdCBuZXh0TGV2ZWxPYnM6IEFycmF5PE9ic2VydmFibGU8RmlyZUl0ZW08VD4+PiA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHtcclxuXHJcbiAgICAgICAgICAvLyBjb25zdCBuZXh0TGV2ZWxQYXRoID0gaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYuY29sbGVjdGlvbihjb2xsZWN0aW9uS2V5KS5wYXRoOyAgLy8gb25lIGxldmVsIGRlZXBlclxyXG4gICAgICAgICAgY29uc3QgbmV4dExldmVsUGF0aCA9IGl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEucmVmLnBhdGguY29uY2F0KCcvJywgY29sbGVjdGlvbktleSk7ICAvLyBvbmUgbGV2ZWwgZGVlcGVyXHJcblxyXG4gICAgICAgICAgY29uc3QgbmV4dExldmVsSXRlbXMkID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uUmVjdXJzaXZlbHkkKG5leHRMZXZlbFBhdGgsIGNvbGxlY3Rpb25LZXksIG9yZGVyS2V5KS5waXBlKFxyXG4gICAgICAgICAgICBtYXAoKG5leHRMZXZlbEl0ZW1zOiBBcnJheTxGaXJlSXRlbTxUPj4pID0+IHtcclxuICAgICAgICAgICAgICBpZiAobmV4dExldmVsSXRlbXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsuLi5pdGVtLCBbY29sbGVjdGlvbktleV06IG5leHRMZXZlbEl0ZW1zfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsuLi5pdGVtfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICAgICAgICB9ICAvLyBkb250IGluY2x1ZGUgYW4gZW1wdHkgYXJyYXlcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgbmV4dExldmVsT2JzLnB1c2gobmV4dExldmVsSXRlbXMkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KG5leHRMZXZlbE9icykucGlwZShcclxuICAgICAgICAgIHRhcCh2YWwgPT4gY29uc29sZS5sb2codmFsKSlcclxuICAgICAgICApO1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKiAtLS0tLS0tLS0tIEFERCAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBBZGQgZG9jdW1lbnQgdG8gZmlyZXN0b3JlIGFuZCBzcGxpdCBpdCB1cCBpbnRvIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgdGhlIGRhdGEgdG8gYmUgc2F2ZWRcclxuICAgKiBAcGFyYW0gY29sbGVjdGlvblJlZiBDb2xsZWN0aW9uUmVmZXJlbmNlIHJlZmVyZW5jZSB0byB3aGVyZSBvbiBmaXJlc3RvcmUgdGhlIGl0ZW0gc2hvdWxkIGJlIHNhdmVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25Xcml0ZXJzIHNlZSBkb2N1bWVudGF0aW9uIGZvciBTdWJDb2xsZWN0aW9uV3JpdGVyIGZvciBtb3JlIGRldGFpbHMgb24gaG93IHRoZXNlIGFyZSB1c2VkXHJcbiAgICogQHBhcmFtIGlzQWRkRGF0ZXMgaWYgdHJ1ZSAnY3JlYXRlZERhdGUnIGFuZCAnbW9kaWZpZWREYXRlJyBpcyBhZGRlZCB0byB0aGUgZGF0YVxyXG4gICAqIEBwYXJhbSBkb2NJZCBJZiBhIGRvY0lkIGlzIGdpdmVuIGl0IHdpbGwgdXNlIHRoYXQgc3BlY2lmaWMgaWQgd2hlbiBzYXZpbmcgdGhlIGRvYywgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYSByYW5kb20gaWQgd2lsbCBiZSB1c2VkLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBhZGQkPFQgPSBGaXJlc3RvcmVJdGVtPihcclxuICAgIGRhdGE6IFQsXHJcbiAgICBjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LFxyXG4gICAgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtdLFxyXG4gICAgaXNBZGREYXRlczogYm9vbGVhbiA9IHRydWUsXHJcbiAgICBkb2NJZD86IHN0cmluZyk6IE9ic2VydmFibGU8RmlyZUl0ZW08VD4+IHtcclxuXHJcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSAmJiBkb2NJZCAmJiBzdWJDb2xsZWN0aW9uV3JpdGVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IGVycm9yOiBGaXJlc3RvcmVFcnJvckV4dCA9IHtcclxuICAgICAgICBuYW1lOiAnZmlyZXN0b3JlRXh0L2ludmFsaWQtc3ViLWNvbGxlY3Rpb24td3JpdGVycycsXHJcbiAgICAgICAgY29kZTogJ3Vua25vd24nLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdDYW5ub3QgaGF2ZSBib3RoIGRvY0lkIGFuZCBzdWJDb2xsZWN0aW9uV3JpdGVycyBhdCB0aGUgc2FtZSB0aW1lIHdoZW4gZGF0YSBpcyBhbiBhcnJheScsXHJcbiAgICAgICAgc3RhY2s6ICcnLFxyXG4gICAgICAgIGRhdGEsXHJcbiAgICAgICAgc3ViQ29sbGVjdGlvbldyaXRlcnMsXHJcbiAgICAgICAgZG9jSWRcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBjdXJyZW50RG9jO1xyXG4gICAgbGV0IHN1YkNvbGxlY3Rpb25zOiB7IFtpbmRleDogc3RyaW5nXTogYW55OyB9ID0ge307XHJcblxyXG4gICAgLyogaWYgdGhlIGRhdGEgaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGVudGlyZSBhcnJheSB3aWxsIGJlIHNhdmVkIGluIGEgc2luZ2xlIGRvY3VtZW50IHdpdGggdGhhdCBkb2NJZCxcclxuICAgICogRWFjaCBpdGVtIGluIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGEgbWFwIHdpdGggdGhlIGtleSBiZWluZyB0aGUgYXJyYXkgaW5kZXhcclxuICAgICogV2Ugc3RpbGwgd2FudCB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoaXMgZnVuY3Rpb24gdG8gYmUgYXMgYW4gYXJyYXkgbm9uIGFzIGEgbWFwXHJcbiAgICAqL1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZG9jSWQpIHtcclxuICAgICAgY3VycmVudERvYyA9IGRhdGE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCBzcGxpdCA9IHRoaXMuc3BsaXREYXRhSW50b0N1cnJlbnREb2NBbmRTdWJDb2xsZWN0aW9ucyhkYXRhLCBzdWJDb2xsZWN0aW9uV3JpdGVycyk7XHJcbiAgICAgIGN1cnJlbnREb2MgPSBzcGxpdC5jdXJyZW50RG9jO1xyXG4gICAgICBzdWJDb2xsZWN0aW9ucyA9IHNwbGl0LnN1YkNvbGxlY3Rpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmFkZFNpbXBsZSQ8VD4oY3VycmVudERvYyBhcyBULCBjb2xsZWN0aW9uUmVmLCBpc0FkZERhdGVzLCBkb2NJZCkucGlwZShcclxuICAgICAgLyogQWRkIFN1Yi9zdWIgY29sbGVjdGlvbnMqL1xyXG4gICAgICBtZXJnZU1hcCgoY3VycmVudERhdGE6IEZpcmVJdGVtPFQ+KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnN0IHN1YldyaXRlcnM6IEFycmF5PE9ic2VydmFibGU8YW55Pj4gPSBbXTtcclxuXHJcbiAgICAgICAgZm9yIChjb25zdCBbc3ViQ29sbGVjdGlvbktleSwgc3ViQ29sbGVjdGlvblZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdWJDb2xsZWN0aW9ucykpIHtcclxuICAgICAgICAgIGxldCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdIHwgdW5kZWZpbmVkOyAvLyB1bmRlZmluZWQgaWYgbm8gc3ViQ29sbGVjdGlvbldyaXRlcnNcclxuICAgICAgICAgIGxldCBzdWJEb2NJZDogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG5cclxuICAgICAgICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycykge1xyXG4gICAgICAgICAgICBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycyA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5zdWJDb2xsZWN0aW9ucztcclxuICAgICAgICAgICAgc3ViRG9jSWQgPSBzdWJDb2xsZWN0aW9uV3JpdGVycy5maW5kKHN1YkNvbGwgPT4gc3ViQ29sbC5uYW1lID09PSBzdWJDb2xsZWN0aW9uS2V5KT8uZG9jSWQ7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY29uc3Qgc3ViQ29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSA9IGdldFN1YkNvbGxlY3Rpb24oY3VycmVudERhdGEuZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uS2V5KTtcclxuXHJcbiAgICAgICAgICAvKiBIYW5kbGUgYXJyYXkgYW5kIG9iamVjdCBkaWZmZXJlbnRseVxyXG4gICAgICAgICAgKiBGb3IgZXhhbXBsZSBpZiBhcnJheSBhbmQgbm8gZG9jSWQgaXMgZ2l2ZW4gaXQgbWVhbnMgd2Ugc2hvdWxkIHNhdmUgZWFjaCBlbnRyeSBhcyBhIHNlcGFyYXRlIGRvYy5cclxuICAgICAgICAgICogSWYgYSBkb2NJZCBpcyBnaXZlbiB3ZSBzaG91bGQgc2F2ZSBpdCB1c2luZyB0aGF0IGRvY0lkIHVuZGVyIGEgc2luZ2xlIGRvYy5cclxuICAgICAgICAgICogSWYgbm90IGFuIGFycmF5IGl0IHdpbGwgYWx3YXlzIGJlIHNhdmVkIGFzIGEgc2luZ2xlIGRvYywgdXNpbmcgdGhpcy5kZWZhdWx0RG9jSWQgYXMgdGhlIGRlZmF1bHQgZG9jSWQgaWYgbm9uZSBpcyBnaXZlbiAqL1xyXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3ViQ29sbGVjdGlvblZhbHVlKSkge1xyXG4gICAgICAgICAgICBpZiAoc3ViRG9jSWQgIT09IHVuZGVmaW5lZCkgeyAvKiBub3QgdW5kZWZpbmVkIHNvIHNhdmUgaXQgYXMgYSBzaW5nbGUgZG9jIHVuZGVyIHRoYXQgZG9jSWQgKi9cclxuXHJcbiAgICAgICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHN1YkNvbGxlY3Rpb25WYWx1ZSBub3QgZm9yIHdyaXRpbmcgdGhlIGRhdGEgKi9cclxuICAgICAgICAgICAgICBjb25zdCBzdWJXcml0ZXIgPSB0aGlzLmFkZCQoc3ViQ29sbGVjdGlvblZhbHVlLCBzdWJDb2xsZWN0aW9uUmVmLCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycywgaXNBZGREYXRlcywgc3ViRG9jSWQpLnBpcGUoXHJcbiAgICAgICAgICAgICAgICBtYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIC8vIHJldHVybiB7W2tleV06IGl0ZW19O1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4ge2tleTogc3ViQ29sbGVjdGlvbktleSwgdmFsdWU6IGl0ZW19OyAvKiBrZXkgYW5kIHN1YkNvbGxlY3Rpb25WYWx1ZSBhcyBzZXBhcmF0ZSBrLHYgcHJvcGVydGllcyAqL1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgIHN1YldyaXRlcnMucHVzaChzdWJXcml0ZXIpO1xyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHsgLyogZG9jSWQgaXMgdW5kZWZpbmVkIHNvIHdlIHNhdmUgZWFjaCBvYmplY3QgaW4gdGhlIGFycmF5IHNlcGFyYXRlICovXHJcbiAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvblZhbHVlLmZvckVhY2goKGFycmF5VmFsdWU6IEZpcmVJdGVtPHt9PikgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIC8qIHRoZSBwaXBlIG9ubHkgbWF0dGVycyBmb3IgdGhlIHJldHVybiBzdWJDb2xsZWN0aW9uVmFsdWUgbm90IGZvciB3cml0aW5nIHRoZSBkYXRhICovXHJcbiAgICAgICAgICAgICAgICBjb25zdCBzdWJXcml0ZXIgPSB0aGlzLmFkZCQoYXJyYXlWYWx1ZSwgc3ViQ29sbGVjdGlvblJlZiwgc3ViU3ViQ29sbGVjdGlvbldyaXRlcnMsIGlzQWRkRGF0ZXMpLnBpcGUoXHJcbiAgICAgICAgICAgICAgICAgIG1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4ge1trZXldOiBbaXRlbV19O1xyXG4gICAgICAgICAgICAgICAgICAgIC8qIGtleSBhbmQgc3ViQ29sbGVjdGlvblZhbHVlIGFzIHNlcGFyYXRlIGssdiBwcm9wZXJ0aWVzIC0tIHN1YkNvbGxlY3Rpb25WYWx1ZSBpbiBhbiBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7a2V5OiBzdWJDb2xsZWN0aW9uS2V5LCB2YWx1ZTogW2l0ZW1dfTtcclxuICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAgICAgc3ViV3JpdGVycy5wdXNoKHN1YldyaXRlcik7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7IC8qIE5vdCBhbiBhcnJheSBzbyBhIHNpbmdsZSBPYmplY3QqL1xyXG4gICAgICAgICAgICBzdWJEb2NJZCA9IHN1YkRvY0lkICE9PSB1bmRlZmluZWQgPyBzdWJEb2NJZCA6IHRoaXMuZGVmYXVsdERvY0lkO1xyXG5cclxuICAgICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHN1YkNvbGxlY3Rpb25WYWx1ZSBub3QgZm9yIHdyaXRpbmcgdGhlIGRhdGEgKi9cclxuICAgICAgICAgICAgY29uc3Qgc3ViV3JpdGVyID0gdGhpcy5hZGQkKHN1YkNvbGxlY3Rpb25WYWx1ZSwgc3ViQ29sbGVjdGlvblJlZiwgc3ViU3ViQ29sbGVjdGlvbldyaXRlcnMsIGlzQWRkRGF0ZXMsIHN1YkRvY0lkKS5waXBlKFxyXG4gICAgICAgICAgICAgIG1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIHJldHVybiB7W2tleV06IGl0ZW19O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtrZXk6IHN1YkNvbGxlY3Rpb25LZXksIHZhbHVlOiBpdGVtfTsgLyoga2V5IGFuZCBzdWJDb2xsZWN0aW9uVmFsdWUgYXMgc2VwYXJhdGUgayx2IHByb3BlcnRpZXMgKi9cclxuICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgc3ViV3JpdGVycy5wdXNoKHN1YldyaXRlcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSAvKiBlbmQgb2YgaXRlcmF0aW9uICovXHJcblxyXG4gICAgICAgIGlmIChzdWJXcml0ZXJzLmxlbmd0aCA+IDApIHsgLyogaWYgc3ViV3JpdGVycy5sZW5ndGggPiAwIGl0IG1lYW5zIHdlIG5lZWQgdG8gaGFuZGxlIHRoZSBzdWJXcml0ZXJzICovXHJcblxyXG4gICAgICAgICAgLyogdGhlIHBpcGUgb25seSBtYXR0ZXJzIGZvciB0aGUgcmV0dXJuIHZhbHVlIG5vdCBmb3Igd3JpdGluZyB0aGUgZGF0YSAqL1xyXG4gICAgICAgICAgcmV0dXJuIGNvbWJpbmVMYXRlc3Qoc3ViV3JpdGVycykucGlwZShcclxuICAgICAgICAgICAgLy8gdGFwKHN1YiA9PiBjb25zb2xlLmxvZyhzdWIpKSxcclxuXHJcbiAgICAgICAgICAgIC8vIFRPRE8gc3VwZXIgZHVwZXIgdWdseSB3YXkgb2Ygam9pbmluZyB0aGUgZGF0YSB0b2dldGhlciBidXQgSSBjYW5ub3QgdGhpbmsgb2YgYSBiZXR0ZXIgd2F5Li5hbHNvIGl0IGRvZXNudCByZWFsbHkgbWF0dGVyLlxyXG4gICAgICAgICAgICAvLyBUT0RPIFRoZSB1Z2xpbmVzcyBvbmx5IHJlbGF0ZXMgdG8gaG93IHRoZSByZXR1cm4gb2JqZWN0IGxvb2tzIGFmdGVyIHdlIGFkZCwgaXQgaGFzIG5vIGVmZmVjdCBvbiBob3cgdGhlIG9iamVjdCBpcyBzYXZlZCBvblxyXG4gICAgICAgICAgICAvLyBUT0RPIGZpcmVzdG9yZS5cclxuXHJcbiAgICAgICAgICAgIG1hcCgoZG9jRGF0YXM6IEFycmF5PE1hcDxzdHJpbmcsIFtdPj4pID0+IHsgLyogTGlzdCBvZiBzdWIgZG9jcyovXHJcbiAgICAgICAgICAgICAgY29uc3QgZ3JvdXBlZERhdGEgPSB7fTtcclxuXHJcbiAgICAgICAgICAgICAgZG9jRGF0YXMuZm9yRWFjaCgoZG9jOiB7IFtpbmRleDogc3RyaW5nXTogYW55IH0pID0+IHsgLyogaXRlcmF0ZSBvdmVyIGVhY2ggZG9jICovXHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gZG9jLmtleTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZG9jLnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIC8qIGlmIGdyb3VwZWREYXRhIGhhcyB0aGUga2V5IGFscmVhZHkgaXQgbWVhbnMgdGhhdCB0aGUgc2V2ZXJhbCBkb2NzIGhhdmUgdGhlIHNhbWUga2V5Li5zbyBhbiBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgaWYgKGdyb3VwZWREYXRhLmhhc093blByb3BlcnR5KGtleSkgJiYgQXJyYXkuaXNBcnJheShncm91cGVkRGF0YVtrZXldKSkge1xyXG4gICAgICAgICAgICAgICAgICAvKiBncm91cGVkRGF0YVtrZXldIG11c3QgYmUgYW4gYXJyYXkgc2luY2UgaXQgYWxyZWFkeSBleGlzdC4uYWRkIHRoaXMgZG9jLnZhbHVlIHRvIHRoZSBhcnJheSAqL1xyXG4gICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgICAgICAgIChncm91cGVkRGF0YVtrZXldIGFzIEFycmF5PGFueT4pLnB1c2godmFsdWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgICBncm91cGVkRGF0YVtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIHJldHVybiBncm91cGVkRGF0YSBhcyBUO1xyXG4gICAgICAgICAgICB9KSxcclxuXHJcbiAgICAgICAgICAgIC8vIHRhcChncm91cGVkRGF0YSA9PiBjb25zb2xlLmxvZyhncm91cGVkRGF0YSkpLFxyXG5cclxuICAgICAgICAgICAgbWFwKChncm91cGVkRGF0YTogVCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiB7Li4uY3VycmVudERhdGEsIC4uLmdyb3VwZWREYXRhfSBhcyBUO1xyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgLy8gdGFwKGQgPT4gY29uc29sZS5sb2coZCkpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIG9mKGN1cnJlbnREYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICApLnBpcGUoXHJcbiAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIEVESVQgLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiAgLyoqXHJcbiAgICogVXBkYXRlIGRvY3VtZW50IGFuZCBjaGlsZCBkb2N1bWVudHNcclxuICAgKlxyXG4gICAqIEJlIGNhcmVmdWwgd2hlbiB1cGRhdGluZyBhIGRvY3VtZW50IG9mIGFueSBraW5kIHNpbmNlIHdlIGFsbG93IHBhcnRpYWwgZGF0YSB0aGVyZSBjYW5ub3QgYmUgYW55IHR5cGUgY2hlY2tpbmcgcHJpb3IgdG8gdXBkYXRlXHJcbiAgICogc28gaXRzIHBvc3NpYmxlIHRvIGludHJvZHVjZSBzcGVsbGluZyBtaXN0YWtlcyBvbiBhdHRyaWJ1dGVzIGFuZCBzbyBmb3J0aFxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgdGhlIGRhdGEgdGhhdCBpcyB0byBiZSBhZGRlZCBvciB1cGRhdGVkIHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfVxyXG4gICAqIEBwYXJhbSBkb2NSZWYgRG9jdW1lbnRSZWZlcmVuY2UgdG8gYmUgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uV3JpdGVycyBpZiB0aGUgZGF0YSBjb250YWlucyBwcm9wZXJ0aWVzIHRoYXQgc2hvdWxkIGJlIHBsYWNlZCBpbiBjaGlsZCBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzIHNwZWNpZnkgdGhhdCBoZXJlXHJcbiAgICogQHBhcmFtIGlzQWRkTW9kaWZpZWREYXRlIGlmIHRydWUgdGhlIG1vZGlmaWVkRGF0ZSBwcm9wZXJ0eSBpcyBhZGRlZC91cGRhdGVkIG9uIHRoZSBhZmZlY3RlZCBkb2N1bWVudHNcclxuICAgKi9cclxuICBwdWJsaWMgdXBkYXRlJDxBIGV4dGVuZHMgeyBbZmllbGQ6IHN0cmluZ106IGFueSB9PihkYXRhOiBQYXJ0aWFsPEE+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWRkTW9kaWZpZWREYXRlOiBib29sZWFuID0gdHJ1ZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gdGhpcy51cGRhdGVTaW1wbGUkKGRhdGEsIGRvY1JlZiwgaXNBZGRNb2RpZmllZERhdGUpOyAvLyBubyBzdWJDb2xsZWN0aW9uV3JpdGVycyBzbyBqdXN0IGRvIGEgc2ltcGxlIHVwZGF0ZVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGJhdGNoID0gdGhpcy51cGRhdGVEZWVwVG9CYXRjaEhlbHBlcihkYXRhLCBkb2NSZWYsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBpc0FkZE1vZGlmaWVkRGF0ZSk7XHJcbiAgICByZXR1cm4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVXBkYXRlLyBhZGQgZGF0YSB0byB0aGUgZmlyZXN0b3JlIGRvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZnMgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSB0byBiZSBoYXZlIHRoZWlyIGRhdGEgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBkYXRhIGRhdGEgdG8gYWRkL3VwZGF0ZVxyXG4gICAqIEBwYXJhbSBpc0FkZE1vZGlmaWVkRGF0ZSBpZiB0cnVlIHRoZSBtb2RpZmllZERhdGUgaXMgYWRkZWQvdXBkYXRlZFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1cGRhdGVNdWx0aXBsZSQ8QT4oZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSwgZGF0YTogQSwgaXNBZGRNb2RpZmllZERhdGU6IGJvb2xlYW4gPSB0cnVlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICAvLyBjb25zdCBiYXRjaCA9IHRoaXMuZnMuZmlyZWJhc2VBcHAuZmlyZXN0b3JlKCkuYmF0Y2goKTtcclxuICAgIGNvbnN0IGJhdGNoOiBXcml0ZUJhdGNoID0gd3JpdGVCYXRjaCh0aGlzLmZzLmZpcmVzdG9yZSk7XHJcblxyXG4gICAgaWYgKGlzQWRkTW9kaWZpZWREYXRlKSB7XHJcbiAgICAgIGRhdGEgPSBhZGRNb2RpZmllZERhdGUoZGF0YSwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGRvY1JlZnMuZm9yRWFjaCgoZG9jUmVmKSA9PiB7XHJcbiAgICAgIGJhdGNoLnVwZGF0ZShkb2NSZWYsIGRhdGEpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuYmF0Y2hDb21taXQkKGJhdGNoKTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBGaXJlc3RvcmUgZG9lc24ndCBhbGxvdyB5b3UgZG8gY2hhbmdlIHRoZSBuYW1lIG9yIG1vdmUgYSBkb2MgZGlyZWN0bHkgc28geW91IHdpbGwgaGF2ZSB0byBjcmVhdGUgYSBuZXcgZG9jIHVuZGVyIHRoZSBuZXcgbmFtZVxyXG4gICAqIGFuZCB0aGVuIGRlbGV0ZSB0aGUgb2xkIGRvYy5cclxuICAgKiByZXR1cm5zIHRoZSBuZXcgZG9jIG9uY2UgdGhlIGRlbGV0ZSBpcyBkb25lLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiBEb2N1bWVudFJlZmVyZW5jZSB0byBoYXZlIGl0cyBpZCBjaGFuZ2VkXHJcbiAgICogQHBhcmFtIG5ld0lkIHRoZSBuZXcgaWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIFN1YkNvbGxlY3Rpb25Xcml0ZXJzIGFyZSBuZWVkZWQgdG8gYWRkIHRoZW0gYmFja1xyXG4gICAqL1xyXG4gIHB1YmxpYyBjaGFuZ2VEb2NJZCQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0lkOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uV3JpdGVycyA9PSBudWxsKSB7XHJcbiAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzID0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXMgU3ViQ29sbGVjdGlvbldyaXRlcltdO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2UgPSBkb2NSZWYucGFyZW50O1xyXG5cclxuICAgIHJldHVybiB0aGlzLmxpc3RlbkZvckRvYyQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgICBtYXAoKG9sZERhdGE6IFQpID0+IHRoaXMuY2xlYW5FeHRyYXNGcm9tRGF0YShvbGREYXRhLCBzdWJDb2xsZWN0aW9uV3JpdGVycykpLFxyXG4gICAgICBzd2l0Y2hNYXAoKG9sZERhdGE6IFQpID0+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hZGQkKG9sZERhdGEsIGNvbGxlY3Rpb25SZWYsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBmYWxzZSwgbmV3SWQpLnBpcGUoIC8qIGFkZCB0aGUgZGF0YSB1bmRlciBpZCovXHJcbiAgICAgICAgICBtZXJnZU1hcChuZXdEYXRhID0+IHsgLyogZGVsZXRlIHRoZSBvbGQgZG9jICovXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRlbGV0ZSQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgICAgICAgICBtYXAoKCkgPT4gbmV3RGF0YSkgLyoga2VlcCB0aGUgbmV3IGRhdGEgKi9cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH0pLFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pLFxyXG4gICAgICBjYXRjaEVycm9yKGVyciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0ZhaWxlZCB0byBDaGFuZ2UgRG9jIElkOiAnICsgZXJyKTtcclxuICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICAgIH0pLFxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgKTtcclxuXHJcbiAgfVxyXG5cclxuICAvKiBNb3ZlIEl0ZW0gaW4gQXJyYXkgKi9cclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIE1vdmVkIGl0ZW0gd2l0aGluIHRoZSBzYW1lIGxpc3Qgc28gd2UgbmVlZCB0byB1cGRhdGUgdGhlIGluZGV4IG9mIGFsbCBpdGVtcyBpbiB0aGUgbGlzdDtcclxuICAgKiBVc2UgYSBjb3B5IGlmIHlvdSBkb250IHdpc2ggdG8gdXBkYXRlIHRoZSBnaXZlbiBhcnJheSwgZm9yIGV4YW1wbGUgd2hlbiB5b3Ugd2FudCB0byBqdXN0IGxpc3RlbiBmb3IgdGhlIGNoYW5nZSBvZiB0aGUgZGIuLlxyXG4gICAqIFRoZSByZWFzb24gdG8gbm90IGRvIHRoaXMgaXMgYmVjYXVzZSBpdCB0YWtlcyBzb21lIHRpbWUgZm9yIHRoZSBkYiB0byB1cGRhdGUgYW5kIGl0IGxvb2tzIGJldHRlciBpZiB0aGUgbGlzdCB1cGRhdGVzIGltbWVkaWF0ZWx5LlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGl0ZW1zIGFycmF5IG9mIEZpcmVJdGVtPEE+IGRvY3Mgd2l0aCBpbmRleCB2YXJpYWJsZXMgdG8gYmUgdXBkYXRlZFxyXG4gICAqIEBwYXJhbSBmcm9tSW5kZXhcclxuICAgKiBAcGFyYW0gdG9JbmRleFxyXG4gICAqIEBwYXJhbSB1c2VDb3B5IGlmIHRydWUgdGhlIGdpdmVuIGFycmF5IHdpbGwgbm90IGJlIHVwZGF0ZWRcclxuICAgKi9cclxuICBwdWJsaWMgbW92ZUl0ZW1JbkFycmF5JDxBIGV4dGVuZHMgeyBpbmRleDogbnVtYmVyIH0+KGl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZUNvcHkgPSBmYWxzZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChmcm9tSW5kZXggPT0gbnVsbCB8fCB0b0luZGV4ID09IG51bGwgfHwgZnJvbUluZGV4ID09PSB0b0luZGV4IHx8IGl0ZW1zLmxlbmd0aCA8PSAwKSB7IC8vIHdlIGRpZG50IHJlYWxseSBtb3ZlIGFueXRoaW5nXHJcbiAgICAgIHJldHVybiBvZigpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpdGVtc1swXT8uZmlyZXN0b3JlTWV0YWRhdGEgPT0gbnVsbCkge1xyXG4gICAgICBjb25zdCBlcnJvcjogRmlyZXN0b3JlRXJyb3JFeHQgPSB7XHJcbiAgICAgICAgbmFtZTogJ2ZpcmVzdG9yZUV4dC91bmFibGUtdG8tY2hhbmdlLWluZGV4LW9mLW5vbi1kb2N1bWVudCcsXHJcbiAgICAgICAgY29kZTogJ25vdC1mb3VuZCcsXHJcbiAgICAgICAgbWVzc2FnZTogJ1RoZSBhcnJheSBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgYSBmaXJlc3RvcmUgZG9jdW1lbnQgb3IgRmlyZUl0ZW0gc2luY2UgaXQgbGFja3MgZmlyZXN0b3JlTWV0YWRhdGEnLFxyXG4gICAgICB9O1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBiYXRjaCA9IHRoaXMuZ2V0QmF0Y2hGcm9tTW92ZUl0ZW1JbkluZGV4ZWREb2NzKGl0ZW1zLCBmcm9tSW5kZXgsIHRvSW5kZXgsIHVzZUNvcHkpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmJhdGNoQ29tbWl0JChiYXRjaCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEb2VzIHRoZSBoZWF2eSBsaWZ0aW5nIHdoZW4gaXQgY29tZXMgdG8gdXBkYXRpbmcgbXVsdGlwbGUgZG9jcyB0byBjaGFuZ2UgdGhlaXIgaW5kZXguXHJcbiAgICogTm90IGNhbGxlZCBkaXJlY3RseS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBGaXJlSXRlbTxBPiBkb2NzIHdpdGggaW5kZXggdmFyaWFibGVzIHRvIGJlIHVwZGF0ZWRcclxuICAgKiBAcGFyYW0gZnJvbUluZGV4XHJcbiAgICogQHBhcmFtIHRvSW5kZXhcclxuICAgKiBAcGFyYW0gdXNlQ29weSBpZiB0cnVlIHRoZSBnaXZlbiBhcnJheSB3aWxsIG5vdCBiZSB1cGRhdGVkXHJcbiAgICogQHByb3RlY3RlZFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXRCYXRjaEZyb21Nb3ZlSXRlbUluSW5kZXhlZERvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihpdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tSW5kZXg6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9JbmRleDogbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VDb3B5ID0gZmFsc2UpOiBXcml0ZUJhdGNoIHtcclxuXHJcbiAgICBjb25zdCBsb3dlc3RJbmRleCA9IE1hdGgubWluKGZyb21JbmRleCwgdG9JbmRleCk7XHJcbiAgICBjb25zdCBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpO1xyXG5cclxuICAgIGlmIChmcm9tSW5kZXggPT0gbnVsbCB8fCB0b0luZGV4ID09IG51bGwgfHwgZnJvbUluZGV4ID09PSB0b0luZGV4KSB7IC8vIHdlIGRpZG50IHJlYWxseSBtb3ZlIGFueXRoaW5nXHJcbiAgICAgIHJldHVybiBiYXRjaDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgdXNlZEl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj47XHJcblxyXG4gICAgaWYgKHVzZUNvcHkpIHtcclxuICAgICAgdXNlZEl0ZW1zID0gT2JqZWN0LmFzc2lnbihbXSwgaXRlbXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdXNlZEl0ZW1zID0gaXRlbXM7XHJcbiAgICB9XHJcblxyXG4gICAgbW92ZUl0ZW1JbkFycmF5PEE+KHVzZWRJdGVtcywgZnJvbUluZGV4LCB0b0luZGV4KTtcclxuXHJcbiAgICBjb25zdCBsaXN0U2xpY2VUb1VwZGF0ZTogQXJyYXk8RmlyZUl0ZW08QT4+ID0gdXNlZEl0ZW1zLnNsaWNlKGxvd2VzdEluZGV4KTtcclxuXHJcbiAgICBsZXQgaSA9IGxvd2VzdEluZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGxpc3RTbGljZVRvVXBkYXRlKSB7XHJcbiAgICAgIGlmICghdXNlQ29weSkgeyAvLyB0aGlzIGlzIGp1c3Qgc28gdGhhdCB0aGUgZ2l2ZW4gYXJyYXkncyBpbmRleCBpcyBhbHNvIHVwZGF0ZWQgaW1tZWRpYXRlbHlcclxuICAgICAgICBpdGVtLmluZGV4ID0gaTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCByZWYgPSBnZXRSZWZGcm9tUGF0aChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZTtcclxuICAgICAgYmF0Y2gudXBkYXRlKHJlZiwge2luZGV4OiBpfSk7XHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2Ugd2hlbiB5b3Ugd2lzaCB0byBkZWxldGUgYW4gaW5kZXhlZCBkb2N1bWVudCBhbmQgaGF2ZSB0aGUgcmVtYWluaW5nIGRvY3VtZW50cyB1cGRhdGUgdGhlaXIgaW5kaWNlcyB0byByZWZsZWN0IHRoZSBjaGFuZ2UuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbXMgYXJyYXkgb2YgRmlyZUl0ZW08QT4gZG9jcyB3aXRoIGluZGV4IHZhcmlhYmxlcyB0byBiZSB1cGRhdGVkXHJcbiAgICogQHBhcmFtIGluZGV4VG9EZWxldGVcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXNcclxuICAgKiBAcGFyYW0gdXNlQ29weVxyXG4gICAqL1xyXG4gIHB1YmxpYyBkZWxldGVJbmRleGVkSXRlbUluQXJyYXkkPEEgZXh0ZW5kcyB7IGluZGV4OiBudW1iZXIgfT4oaXRlbXM6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4VG9EZWxldGU6IG51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlQ29weTogYm9vbGVhbiA9IGZhbHNlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgbGV0IHVzZWRJdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG5cclxuICAgIGlmICh1c2VDb3B5KSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IE9iamVjdC5hc3NpZ24oW10sIGl0ZW1zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGl0ZW1Ub0RlbGV0ZSA9IHVzZWRJdGVtc1tpbmRleFRvRGVsZXRlXTtcclxuXHJcbiAgICAvLyBnZXQgdGhlIGRlbGV0ZSBiYXRjaCB0aGF0IGFsc28gY29udGFpbnMgYW55IHN1YiBjb2xsZWN0aW9ucyBvZiB0aGUgaXRlbVxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RGVsZXRlQmF0Y2gkKGl0ZW1Ub0RlbGV0ZS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKS5waXBlKFxyXG4gICAgICBtYXAoKGJhdGNoKSA9PiB7XHJcbiAgICAgICAgLy8gc29ydCBhbmQgcmVtb3ZlIHRoZSBpdGVtIGZyb20gdGhlIHVzZWRJdGVtcyBhbmQgdGhlbiBhZGQgdGhlIHVwZGF0ZSBpbmRleCB0byB0aGUgYmF0Y2hcclxuICAgICAgICB1c2VkSXRlbXMuc29ydChpdGVtID0+IGl0ZW0uaW5kZXgpOyAvLyBtYWtlIHN1cmUgYXJyYXkgaXMgc29ydGVkIGJ5IGluZGV4XHJcbiAgICAgICAgdXNlZEl0ZW1zLnNwbGljZShpbmRleFRvRGVsZXRlLCAxKTtcclxuXHJcbiAgICAgICAgdGhpcy5nZXRCYXRjaEZyb21VcGRhdGVJbmRleEZyb21MaXN0T2ZEb2NzPEE+KHVzZWRJdGVtcywgYmF0Y2gpO1xyXG5cclxuICAgICAgICByZXR1cm4gYmF0Y2g7XHJcbiAgICAgIH0pLFxyXG5cclxuICAgICAgc3dpdGNoTWFwKChiYXRjaCkgPT4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFVzZSB3aGVuIHlvdSB3aXNoIHRvIGRlbGV0ZSBzZXZlcmFsIGluZGV4ZWQgZG9jdW1lbnRzIGFuZCBoYXZlIHRoZSByZW1haW5pbmcgZG9jdW1lbnRzIHVwZGF0ZSB0aGVpciBpbmRpY2VzIHRvIHJlZmxlY3QgdGhlIGNoYW5nZS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBGaXJlSXRlbTxBPiBkb2NzIHdpdGggaW5kZXggdmFyaWFibGVzIHRvIGJlIHVwZGF0ZWRcclxuICAgKiBAcGFyYW0gaW5kaWNlc1RvRGVsZXRlXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzXHJcbiAgICogQHBhcmFtIHVzZUNvcHlcclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlSW5kZXhlZEl0ZW1zSW5BcnJheSQ8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihpdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNUb0RlbGV0ZTogbnVtYmVyW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlQ29weTogYm9vbGVhbiA9IGZhbHNlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgbGV0IHVzZWRJdGVtczogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG5cclxuICAgIGlmICh1c2VDb3B5KSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IE9iamVjdC5hc3NpZ24oW10sIGl0ZW1zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHVzZWRJdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIHVzZWRJdGVtcy5zb3J0KGl0ZW0gPT4gaXRlbS5pbmRleCk7IC8vIG1ha2Ugc3VyZSBhcnJheSBpcyBzb3J0ZWQgYnkgaW5kZXhcclxuXHJcbiAgICBjb25zdCBpdGVtc1RvRGVsZXRlID0gdXNlZEl0ZW1zLmZpbHRlcigoaXRlbSwgaSkgPT4ge1xyXG4gICAgICByZXR1cm4gaW5kaWNlc1RvRGVsZXRlLmZpbmRJbmRleChfaSA9PiBfaSA9PT0gaSkgIT09IC0xO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gaXRlcmF0ZSBpbiByZXZlcnNlIHNvIGFzIHRvIG5vdCBjaGFuZ2UgdGhlIGluZGljZXMsXHJcbiAgICAvLyB0aGUgaW5kaWNlcyB0byBkZWxldGUgbXVzdCBhbHNvIGJlIHNvcnRlZFxyXG4gICAgaW5kaWNlc1RvRGVsZXRlLnNvcnQoKTtcclxuICAgIGZvciAobGV0IGkgPSBpbmRpY2VzVG9EZWxldGUubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgdXNlZEl0ZW1zLnNwbGljZShpbmRpY2VzVG9EZWxldGVbaV0sIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGRvY1JlZnNPYnMkOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+W10gPSBbXTtcclxuXHJcbiAgICAvLyBnZXQgdGhlIGRvY1JlZnMgZm9yIGl0ZW1zIHRvIGJlIGRlbGV0ZWQgaW5jbHVkaW5nIHRoZSBvbmVzIGluIHRoZSBzdWJDb2xsZWN0aW9uc1xyXG4gICAgaXRlbXNUb0RlbGV0ZS5mb3JFYWNoKGl0ZW1Ub0RlbGV0ZSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBvYnMkID0gdGhpcy5nZXREb2N1bWVudFJlZmVyZW5jZXNEZWVwJChpdGVtVG9EZWxldGUuZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgICB0YWtlKDEpXHJcbiAgICAgICk7XHJcbiAgICAgIGRvY1JlZnNPYnMkLnB1c2gob2JzJCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgcmV0dXJuIGZvcmtKb2luKGRvY1JlZnNPYnMkKS5waXBlKFxyXG4gICAgICB0YWtlKDEpLFxyXG4gICAgICBtYXAoKGxpc3RPZkRvY1JlZnMpID0+IHtcclxuICAgICAgICAvLyBjb25jYXQgYWxsIHRoZSBzZXBhcmF0ZSBkb2NSZWZzIGxpc3RzIGludG8gb25lIGFycmF5IG9mIGRvY1JlZnNcclxuICAgICAgICBsZXQgZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSA9IFtdO1xyXG5cclxuICAgICAgICBsaXN0T2ZEb2NSZWZzLmZvckVhY2gocmVmcyA9PiB7XHJcbiAgICAgICAgICBkb2NSZWZzID0gZG9jUmVmcy5jb25jYXQocmVmcyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBkb2NSZWZzO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwKChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzKSksXHJcbiAgICAgIG1hcCgoYmF0Y2g6IFdyaXRlQmF0Y2gpID0+IHRoaXMuZ2V0QmF0Y2hGcm9tVXBkYXRlSW5kZXhGcm9tTGlzdE9mRG9jczxBPih1c2VkSXRlbXMsIGJhdGNoKSksXHJcbiAgICAgIHN3aXRjaE1hcCgoYmF0Y2gpID0+IHRoaXMuYmF0Y2hDb21taXQkKGJhdGNoKSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSdW4gdGhpcyBvbiBjb2xsZWN0aW9ucyB3aXRoIGEgZml4ZWQgb3JkZXIgdXNpbmcgYW4gaW5kZXg6IG51bWJlciBhdHRyaWJ1dGU7XHJcbiAgICogVGhpcyB3aWxsIHVwZGF0ZSB0aGF0IGluZGV4IHdpdGggdGhlIGluZGV4IGluIHRoZSBjb2xsZWN0aW9uRGF0YSwgc28gaXQgc2hvdWxkIGJlIHNvcnRlZCBieSBpbmRleCBmaXJzdC5cclxuICAgKiBCYXNpY2FsbHkgbmVlZHMgdG8gYmUgcnVuIGFmdGVyIGEgZGVsZXRlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbXNcclxuICAgKiBAcGFyYW0gYmF0Y2hcclxuICAgKiBAcHJvdGVjdGVkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldEJhdGNoRnJvbVVwZGF0ZUluZGV4RnJvbUxpc3RPZkRvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciB9PihcclxuICAgIGl0ZW1zOiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpXHJcbiAgKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgaWYgKGl0ZW0uaW5kZXggIT09IGluZGV4KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGluZGV4OyAvLyB0aGlzIGlzIGp1c3Qgc28gdGhhdCB0aGUgZ2l2ZW4gYXJyYXkncyBpbmRleCBpcyBhbHNvIHVwZGF0ZWQgaW1tZWRpYXRlbHlcclxuICAgICAgICBjb25zdCByZWYgPSBnZXRSZWZGcm9tUGF0aChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZTtcclxuICAgICAgICBiYXRjaC51cGRhdGUocmVmLCB7aW5kZXh9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGJhdGNoO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHRyYW5zZmVySXRlbUluSW5kZXhlZERvY3M8QSBleHRlbmRzIHsgaW5kZXg6IG51bWJlciwgZ3JvdXBOYW1lOiBzdHJpbmcgfT4oXHJcbiAgICBwcmV2aW91c0FycmF5OiBBcnJheTxGaXJlSXRlbTxBPj4sXHJcbiAgICBjdXJyZW50QXJyYXk6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgIHByZXZpb3VzSW5kZXg6IG51bWJlcixcclxuICAgIGN1cnJlbnRJbmRleDogbnVtYmVyLFxyXG4gICAgY3VycmVudEFycmF5TmFtZTogc3RyaW5nLFxyXG4gICAgYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbT86IHsgW2tleTogc3RyaW5nXTogYW55IH0sXHJcbiAgICBpc1VwZGF0ZU1vZGlmaWVkRGF0ZU9uTW92ZWRJdGVtID0gdHJ1ZSxcclxuICAgIHVzZUNvcHkgPSBmYWxzZSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGNvbnN0IGJhdGNoOiBXcml0ZUJhdGNoID0gdGhpcy5nZXRCYXRjaEZyb21UcmFuc2Zlckl0ZW1JbkluZGV4ZWREb2NzKHByZXZpb3VzQXJyYXksXHJcbiAgICAgIGN1cnJlbnRBcnJheSxcclxuICAgICAgcHJldmlvdXNJbmRleCxcclxuICAgICAgY3VycmVudEluZGV4LFxyXG4gICAgICBjdXJyZW50QXJyYXlOYW1lLFxyXG4gICAgICBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtLFxyXG4gICAgICBpc1VwZGF0ZU1vZGlmaWVkRGF0ZU9uTW92ZWRJdGVtLFxyXG4gICAgICB1c2VDb3B5KTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5iYXRjaENvbW1pdCQoYmF0Y2gpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8qIC0tLS0tLS0tLS0gIERFTEVURSAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBEZWxldGUgRG9jdW1lbnQgYW5kIGNoaWxkIGRvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZiBEb2N1bWVudFJlZmVyZW5jZSB0aGF0IGlzIHRvIGJlIGRlbGV0ZWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlJChkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uUXVlcmllcyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBub3QgZGVlcCBzbyBqdXN0IGRvIGEgbm9ybWFsIGRvYyBkZWxldGVcclxuICAgICAgcmV0dXJuIHRoaXMuZnMuZGVsZXRlKGRvY1JlZik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRGVlcCQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgc3dpdGNoTWFwKChkb2NSZWZMaXN0OiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZGVsZXRlTXVsdGlwbGVTaW1wbGUkKGRvY1JlZkxpc3QpKSxcclxuICAgICAgLy8gY2F0Y2hFcnJvcigoZXJyKSA9PiB7IC8vIFRPRE8gc3VwZXIgdWdseSBhbmQgSSBkb250IGtub3cgd2h5IHRoaXMgZXJyb3IgaXMgdGhyb3duLi5zdGlsbCB3b3Jrc1xyXG4gICAgICAvLyAgIGlmIChlcnIgPT09ICdEb2N1bWVudCBEb2VzIG5vdCBleGlzdHMnKSB7IHJldHVybiBvZigpOyB9XHJcbiAgICAgIC8vICAgZWxzZSB7IHRocm93IGVycjsgfVxyXG4gICAgICAvLyB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIFdyaXRlQmF0Y2ggdGhhdCBpcyBzZXQgdG8gZGVsZXRlIERvY3VtZW50IGFuZCBjaGlsZCBkb2N1bWVudHMgb2YgZ2l2ZW4gZG9jUmVmXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUmVmIERvY3VtZW50UmVmZXJlbmNlIHRoYXQgaXMgdG8gYmUgZGVsZXRlZFxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllcyBpZiB0aGUgZG9jdW1lbnQgaGFzIGNoaWxkIGRvY3VtZW50cyB0aGUgc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXJlIG5lZWRlZCB0byBsb2NhdGUgdGhlbVxyXG4gICAqIEBwYXJhbSBiYXRjaFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXREZWxldGVCYXRjaCQoZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2g6IFdyaXRlQmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKSk6IE9ic2VydmFibGU8V3JpdGVCYXRjaD4ge1xyXG5cclxuICAgIGlmIChzdWJDb2xsZWN0aW9uUXVlcmllcyA9PSBudWxsIHx8IHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBub3QgZGVlcCBzbyBqdXN0IGRvIGEgbm9ybWFsIGRvYyBkZWxldGVcclxuICAgICAgYmF0Y2guZGVsZXRlKGRvY1JlZik7XHJcbiAgICAgIHJldHVybiBvZihiYXRjaCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRGVlcCQoZG9jUmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcykucGlwZShcclxuICAgICAgbWFwKChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZTxEb2N1bWVudERhdGE+W10pID0+IHRoaXMuZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzKSksXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGVsZXRlTXVsdGlwbGVCeVBhdGhzJChkb2NQYXRoczogc3RyaW5nW10pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSA9XHJcbiAgICAgIGRvY1BhdGhzLm1hcChwYXRoID0+IGdldFJlZkZyb21QYXRoKHBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZGVsZXRlTXVsdGlwbGVTaW1wbGUkKGRvY1JlZnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIERvY3VtZW50cyBhbmQgY2hpbGQgZG9jdW1lbnRzXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUmVmcyAtIEEgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSB0aGF0IGFyZSB0byBiZSBkZWxldGVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZU11bHRpcGxlJChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZVtdLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgaWYgKHN1YkNvbGxlY3Rpb25RdWVyaWVzID09IG51bGwgfHwgc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZzKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkZWVwRG9jUmVmcyQ6IEFycmF5PE9ic2VydmFibGU8YW55Pj4gPSBbXTtcclxuXHJcbiAgICBkb2NSZWZzLmZvckVhY2goZG9jUmVmID0+IHtcclxuICAgICAgY29uc3QgZG9jUmVmcyQgPSB0aGlzLmdldERvY3VtZW50UmVmZXJlbmNlc0RlZXAkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgICBkZWVwRG9jUmVmcyQucHVzaChkb2NSZWZzJCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gY29tYmluZUxhdGVzdChkZWVwRG9jUmVmcyQpLnBpcGUoXHJcbiAgICAgIC8vIHRhcChsaXN0cyA9PiBjb25zb2xlLmxvZyhsaXN0cykpLFxyXG4gICAgICBtYXAoKGxpc3RzOiBhbnlbXSkgPT4ge1xyXG4gICAgICAgIGxldCBtYWluRG9jUmVmTGlzdDogRG9jdW1lbnRSZWZlcmVuY2VbXSA9IFtdO1xyXG4gICAgICAgIGxpc3RzLmZvckVhY2gobGlzdCA9PiB7XHJcbiAgICAgICAgICBtYWluRG9jUmVmTGlzdCA9IG1haW5Eb2NSZWZMaXN0LmNvbmNhdChsaXN0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gbWFpbkRvY1JlZkxpc3Q7XHJcbiAgICAgIH0pLFxyXG4gICAgICAvLyB0YXAobGlzdHMgPT4gY29uc29sZS5sb2cobGlzdHMpKSxcclxuICAgICAgc3dpdGNoTWFwKChkb2NSZWZMaXN0OiBEb2N1bWVudFJlZmVyZW5jZVtdKSA9PiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZMaXN0KSksXHJcbiAgICAgIC8vIGNhdGNoRXJyb3IoKGVycikgPT4geyAvLyBUT0RPIHN1cGVyIHVnbHkgYW5kIEkgZG9udCBrbm93IHdoeSB0aGlzIGVycm9yIGlzIHRocm93bi4uc3RpbGwgd29ya3NcclxuICAgICAgLy8gICBpZiAoZXJyID09PSAnRG9jdW1lbnQgRG9lcyBub3QgZXhpc3RzJykgeyByZXR1cm4gb2YobnVsbCk7IH1cclxuICAgICAgLy8gICBlbHNlIHsgdGhyb3cgZXJyOyB9XHJcbiAgICAgIC8vIH0pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIGFsbCBkb2N1bWVudHMgYW5kIHN1YiBjb2xsZWN0aW9ucyBhcyBzcGVjaWZpZWQgaW4gc3ViQ29sbGVjdGlvblF1ZXJpZXMuXHJcbiAgICogTm90IHZlcnkgZWZmaWNpZW50IGFuZCBjYXVzZXMgYSBsb3Qgb2YgZGIgcmVhZHMuXHJcbiAgICogSWYgcG9zc2libGUgdXNlIHRoZSBmaXJlYmFzZSBDTEkgb3IgdGhlIGNvbnNvbGUgaW5zdGVhZCB3aGVuIGRlbGV0aW5nIGxhcmdlIGNvbGxlY3Rpb25zLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGNvbGxlY3Rpb25SZWZcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXNcclxuICAgKi9cclxuICBwdWJsaWMgZGVsZXRlQ29sbGVjdGlvbiQoY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSwgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUNvbGxlY3Rpb25SZWYkKGNvbGxlY3Rpb25SZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKS5waXBlKFxyXG4gICAgICBzd2l0Y2hNYXAoZG9jUmVmcyA9PiB0aGlzLmRlbGV0ZU11bHRpcGxlJChkb2NSZWZzKSlcclxuICAgICkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBEZWxldGUgZmlyZXN0b3JlIGRvY3VtZW50IGJ5IHBhdGhcclxuICAgKiBDb252ZW5pZW5jZSBtZXRob2QgaW4gY2FzZSB3ZSBkbyBub3QgaGF2ZSBkaXJlY3QgYWNjZXNzIHRvIHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnQgcmVmZXJlbmNlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZG9jUGF0aCBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIHBhdGggb2YgdGhlIHJlZmVyZW5jZWQgZG9jdW1lbnQgKHJlbGF0aXZlIHRvIHRoZSByb290IG9mIHRoZSBkYXRhYmFzZSkuXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZURvY0J5UGF0aCQoZG9jUGF0aDogc3RyaW5nLCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCBkb2NSZWYgPSBnZXRSZWZGcm9tUGF0aChkb2NQYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgRG9jdW1lbnRSZWZlcmVuY2U7XHJcbiAgICByZXR1cm4gdGhpcy5kZWxldGUkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIGRvY3VtZW50IGJ5IEZpcmVzdG9yZUl0ZW1cclxuICAgKlxyXG4gICAqIENvbnZlbmllbmNlIG1ldGhvZCB0aGF0IHdvcmtzIHRoZSBzYW1lIGFzIGRlbGV0ZURlZXAkIGJ1dCB0YWtlcyBhIEZpcmVzdG9yZUl0ZW0gdG8gYmUgZGVsZXRlZFxyXG4gICAqXHJcbiAgICogQHBhcmFtIGl0ZW0gRmlyZXN0b3JlSXRlbSB0byBiZSBkZWxldGVkXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkb2N1bWVudCBoYXMgY2hpbGQgZG9jdW1lbnRzIHRoZSBzdWJDb2xsZWN0aW9uUXVlcmllcyBhcmUgbmVlZGVkIHRvIGxvY2F0ZSB0aGVtXHJcbiAgICovXHJcbiAgcHVibGljIGRlbGV0ZUl0ZW0kPFQ+KGl0ZW06IEZpcmVJdGVtPFQ+LCBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgY29uc3QgZG9jUmVmcyA9IHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUl0ZW0oaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmRlbGV0ZU11bHRpcGxlU2ltcGxlJChkb2NSZWZzKS5waXBlKFxyXG4gICAgICAvLyBjYXRjaEVycm9yKChlcnIpID0+IHsgLy8gVE9ETyBzdXBlciB1Z2x5IGFuZCBJIGRvbnQga25vdyB3aHkgdGhpcyBlcnJvciBpcyB0aHJvd24uLnN0aWxsIHdvcmtzXHJcbiAgICAgIC8vICAgaWYgKGVyciA9PT0gJ0RvY3VtZW50IERvZXMgbm90IGV4aXN0cycpIHsgcmV0dXJuIG9mKG51bGwpOyB9XHJcbiAgICAgIC8vICAgZWxzZSB7IHRocm93IGVycjsgfVxyXG4gICAgICAvLyB9KSxcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG5cclxuICAvKiAtLS0tIE9USEVSIC0tLS0gKi9cclxuXHJcbiAgLyoqXHJcbiAgICogY2xlYW4gRmlyZXN0b3JlQmFzZUl0ZW0gcHJvcGVydGllcyBmcm9tIHRoZSBkYXRhLlxyXG4gICAqIFVzdWFsbHkgZG9uZSBpZiB5b3Ugd2lzaCB0byBzYXZlIHRoZSBkYXRhIHRvIGZpcmVzdG9yZSwgc2luY2Ugc29tZSBGaXJlc3RvcmVCYXNlSXRlbSBwcm9wZXJ0aWVzIGFyZSBvZiBub24gYWxsb3dlZCB0eXBlcy5cclxuICAgKlxyXG4gICAqIEdvZXMgdGhyb3VnaCBlYWNoIGxldmVsIGFuZCByZW1vdmVzIERiSXRlbUV4dHJhc1xyXG4gICAqIEluIGNhc2UgeW91IHdpc2ggdG8gc2F2ZSB0aGUgZGF0YVxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGEgZGF0YSB0byBiZSBjbGVhbmVkLCBlaXRoZXIgc2luZ2xlIGl0ZW0gb3IgYW4gYXJyYXkgb2YgaXRlbXNcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgaWYgdGhlIGRvY3VtZW50IGhhcyBjaGlsZCBkb2N1bWVudHMgdGhlIFN1YkNvbGxlY3Rpb25Xcml0ZXJzIGFyZSBuZWVkZWQgdG8gbG9jYXRlIHRoZW1cclxuICAgKiBAcGFyYW0gYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlXHJcbiAgICovXHJcblxyXG4gIGNsZWFuRXh0cmFzRnJvbURhdGE8VD4oZGF0YTogVCAmIERvY3VtZW50RGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlPzogc3RyaW5nW10pOiBUO1xyXG5cclxuICBjbGVhbkV4dHJhc0Zyb21EYXRhPFQ+KGRhdGFzOiBBcnJheTxUICYgRG9jdW1lbnREYXRhPixcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzPzogU3ViQ29sbGVjdGlvbldyaXRlcltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlPzogc3RyaW5nW10pOiBBcnJheTxUPjtcclxuXHJcbiAgcHVibGljIGNsZWFuRXh0cmFzRnJvbURhdGE8VD4oZGF0YTogVCAmIERvY3VtZW50RGF0YSB8IEFycmF5PFQgJiBEb2N1bWVudERhdGE+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzOiBTdWJDb2xsZWN0aW9uV3JpdGVyW10gPSBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmU6IHN0cmluZ1tdID0gW10pOiBUIHwgQXJyYXk8VD4ge1xyXG5cclxuICAgIC8vIGNvbnN0IGRhdGFUb0JlQ2xlYW5lZCA9IGNsb25lRGVlcChkYXRhKTsgLyogY2xvbmUgZGF0YSBzbyB3ZSBkb250IG1vZGlmeSB0aGUgb3JpZ2luYWwgKi9cclxuICAgIC8vIGNvbnN0IGRhdGFUb0JlQ2xlYW5lZCA9IGRhdGE7XHJcblxyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuXHJcbiAgICAgIGNvbnN0IGNsZWFuRGF0YXM6IEFycmF5PFQ+ID0gW107XHJcblxyXG4gICAgICBkYXRhLmZvckVhY2goZCA9PiB7XHJcbiAgICAgICAgY2xlYW5EYXRhcy5wdXNoKFxyXG4gICAgICAgICAgdGhpcy5yZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyKGQsIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLCBhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmUpIGFzIFRcclxuICAgICAgICApO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBjbGVhbkRhdGFzO1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnJlbW92ZURhdGFFeHRyYXNSZWN1cnNpdmVIZWxwZXIoZGF0YSwgc3ViQ29sbGVjdGlvbldyaXRlcnMsIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZSkgYXMgVDtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAvKiAtLS0tLS0tLS0tICBQUk9URUNURUQgTUVUSE9EUyAtLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAvKipcclxuICAgKiBTYW1lIGFzIEFuZ3VsYXJGaXJlc3RvcmVEb2N1bWVudC5zbmFwc2hvdENoYW5nZXMgYnV0IGl0IGFkZHMgdGhlIHByb3BlcnRpZXMgaW4gRmlyZWJhc2VEYkl0ZW1cclxuICAgKiBhbmQgYWxzbyBhbGxvd3MgZm9yIHRvIGNob29zZSBhY3Rpb24gdG8gdGFrZSB3aGVuIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XHJcbiAgICpcclxuICAgKiBJbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHdpbGwgdHJpZ2dlciBmb3IgZXZlcnkgY2hhbmdlL3VwZGF0ZSBvbiB0aGUgZG9jdW1lbnQgd2UgYXJlIGxpc3RlbmluZyB0by5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBkb2NSZWYgRG9jdW1lbnRSZWZlcmVuY2UgdGhhdCB3aWxsIGJlIGxpc3RlbmVkIHRvXHJcbiAgICogQHBhcmFtIGFjdGlvbklmTm90RXhpc3QgQWN0aW9uIHRvIHRha2UgaWYgZG9jdW1lbnQgZG9lcyBub3QgZXhpc3RcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yRG9jU2ltcGxlJDxUPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPGFueT4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fQUxMX0JVVF9EQVRBXHJcbiAgKTogT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIHJldHVybiB0aGlzLmZzLmRvYyhkb2NSZWYpLnBpcGUoXHJcbiAgICAgIHRhcCgoc25hcHNob3Q6IERvY3VtZW50U25hcHNob3QpID0+IHtcclxuICAgICAgICBpZiAoIXNuYXBzaG90LmV4aXN0cygpICYmIGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlRIUk9XX0RPQ19OT1RfRk9VTkQpIHtcclxuICAgICAgICAgIGNvbnN0IGVycm9yOiBGaXJlc3RvcmVFcnJvckV4dCA9IHtcclxuICAgICAgICAgICAgbmFtZTogJ0ZpcmViYXNlRXJyb3JFeHQnLFxyXG4gICAgICAgICAgICBjb2RlOiAnbm90LWZvdW5kJyxcclxuICAgICAgICAgICAgbWVzc2FnZTogJ0RvY3VtZW50IG5vdCBmb3VuZCBhbmQgYWN0aW9uSWZOb3RFeGlzdCBpcyBzZXQgdG8gVEhST1dfRE9DX05PVF9GT1VORCcsXHJcbiAgICAgICAgICAgIGRvY1JlZlxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcblxyXG4gICAgICBmaWx0ZXIoKHNuYXBzaG90OiBEb2N1bWVudFNuYXBzaG90KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICEoc25hcHNob3QuZXhpc3RzKCkgJiYgYWN0aW9uSWZOb3RFeGlzdCA9PT0gRG9jTm90RXhpc3RBY3Rpb24uRklMVEVSKTtcclxuICAgICAgfSksXHJcblxyXG4gICAgICBtYXAoKHNuYXBzaG90OiBEb2N1bWVudFNuYXBzaG90KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHNuYXBzaG90LmV4aXN0cygpKTtcclxuXHJcbiAgICAgICAgaWYgKHNuYXBzaG90LmV4aXN0cygpIHx8IGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlJFVFVSTl9BTExfQlVUX0RBVEEpIHtcclxuICAgICAgICAgIGNvbnN0IGRhdGEgPSBzbmFwc2hvdC5kYXRhKCkgYXMgVDtcclxuXHJcbiAgICAgICAgICBjb25zdCBmaXJlc3RvcmVNZXRhZGF0YTogRmlyZXN0b3JlTWV0YWRhdGE8VD4gPSB7XHJcbiAgICAgICAgICAgIGlkOiBzbmFwc2hvdC5pZCxcclxuICAgICAgICAgICAgcmVmOiBzbmFwc2hvdC5yZWYgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD4sXHJcbiAgICAgICAgICAgIHBhdGg6IGRvY1JlZi5wYXRoLFxyXG4gICAgICAgICAgICBpc0V4aXN0czogc25hcHNob3QuZXhpc3RzKCksXHJcbiAgICAgICAgICAgIHNuYXBzaG90TWV0YWRhdGE6IHNuYXBzaG90Lm1ldGFkYXRhXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHJldHVybiB7Li4uZGF0YSwgZmlyZXN0b3JlTWV0YWRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKGFjdGlvbklmTm90RXhpc3QgPT09IERvY05vdEV4aXN0QWN0aW9uLlJFVFVSTl9OVUxMKSB7IC8qIGRvYyBkb2Vzbid0IGV4aXN0ICovXHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH0pLFxyXG4gICAgICBtYXAoKGRhdGEpID0+IHtcclxuICAgICAgICBpZiAoZGF0YSAhPSBudWxsKSB7XHJcbiAgICAgICAgICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvRGF0ZShkYXRhIGFzIEZpcmVJdGVtPHt9Pik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcbiAgICApIGFzIE9ic2VydmFibGU8RmlyZUl0ZW08VD4+O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTGlzdGVucyBmb3Igc2luZ2xlIGNvbGxlY3Rpb24gYW5kIHJldHVybnMgYW4gYXJyYXkgb2YgZG9jdW1lbnRzIGFzIEZpcmVJdGVtPFQ+W11cclxuICAgKiBVc2VkIGludGVybmFsbHksIHBsZWFzZSB1c2UgbGlzdGVuRm9yQ29sbGVjdGlvbiQoKSBpbnN0ZWFkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIF9xdWVyeSB0aGUgUXVlcnkgd2hpY2ggd2lsbCBiZSBsaXN0ZW5lZCB0b1xyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQ8VD4oX3F1ZXJ5OiBRdWVyeTxUPik6IE9ic2VydmFibGU8QXJyYXk8RmlyZUl0ZW08VD4+PiB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHdpbGwgZW1pdCB3aGVuZXZlciB0aGUgcmVmIGNoYW5nZXMgaW4gYW55IHdheS5cclxuICAgICAqIEFsc28gYWRkcyB0aGUgaWQgYW5kIHJlZiB0byB0aGUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXR1cm4gdGhpcy5mcy5jb2xsZWN0aW9uKF9xdWVyeSkucGlwZShcclxuICAgICAgbWFwKChzbmFwOiBRdWVyeVNuYXBzaG90PFQ+KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHNuYXAuZG9jcy5tYXAoc25hcHNob3QgPT4ge1xyXG4gICAgICAgICAgY29uc3QgZGF0YSA9IHNuYXBzaG90LmRhdGEoKSBhcyBUO1xyXG5cclxuICAgICAgICAgIGNvbnN0IGlkID0gc25hcHNob3QuaWQ7XHJcbiAgICAgICAgICBjb25zdCByZWYgPSBzbmFwc2hvdC5yZWYgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcbiAgICAgICAgICBjb25zdCBwYXRoID0gcmVmLnBhdGg7XHJcbiAgICAgICAgICBjb25zdCBzbmFwc2hvdE1ldGFkYXRhID0gc25hcHNob3QubWV0YWRhdGE7XHJcblxyXG4gICAgICAgICAgY29uc3QgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+ID0ge1xyXG4gICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgcGF0aCxcclxuICAgICAgICAgICAgcmVmLFxyXG4gICAgICAgICAgICBzbmFwc2hvdE1ldGFkYXRhLFxyXG4gICAgICAgICAgICBpc0V4aXN0czogdHJ1ZVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICByZXR1cm4gey4uLmRhdGEsIGZpcmVzdG9yZU1ldGFkYXRhfSBhcyBGaXJlSXRlbTxUPjtcclxuICAgICAgICB9KTtcclxuICAgICAgfSksXHJcbiAgICAgIG1hcCgoZGF0YXM6IEFycmF5PEZpcmVJdGVtPFQ+PikgPT4gZGF0YXMubWFwKGRhdGEgPT4ge1xyXG4gICAgICAgIGNvbnZlcnRUaW1lc3RhbXBUb0RhdGUoZGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0pKVxyXG4gICAgKSBhcyBPYnNlcnZhYmxlPEFycmF5PEZpcmVJdGVtPFQ+Pj47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2VkIGludGVybmFsbHkgZm9yIGJvdGggbGlzdGVuRm9yRG9jIGFuZCBsaXN0ZW5Gb3JDb2xsZWN0aW9uIGluIG9yZGVyIHRvIHJlY3Vyc2l2ZWx5IGdldCBjb2xsZWN0aW9ucy5cclxuICAgKlxyXG4gICAqIFBsZWFzZSB1c2UgbGlzdGVuRm9yRG9jIG9yIGxpc3RlbkZvckNvbGxlY3Rpb24uXHJcbiAgICpcclxuICAgKiBAcGFyYW0gaXRlbVxyXG4gICAqIEBwYXJhbSBzdWJDb2xsZWN0aW9uUXVlcmllc1xyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgbGlzdGVuRm9yQ29sbGVjdGlvbnNEZWVwPFQ+KFxyXG4gICAgaXRlbTogRmlyZUl0ZW08VD4sXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IE9ic2VydmFibGU8RmlyZUl0ZW08VD5bXT4ge1xyXG5cclxuICAgIGlmIChpdGVtID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIG9mKFtpdGVtXSk7XHJcbiAgICB9XHJcbiAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgcmV0dXJuIG9mKFtpdGVtXSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY29sbGVjdGlvbkxpc3RlbmVyczogQXJyYXk8T2JzZXJ2YWJsZTxhbnk+PiA9IFtdO1xyXG5cclxuICAgIC8qIEl0ZXJhdGUgb3ZlciBlYWNoIHN1YiBjb2xsZWN0aW9uIHdlIGhhdmUgZ2l2ZW4gYW5kIGNyZWF0ZSBjb2xsZWN0aW9uIGxpc3RlbmVycyovXHJcbiAgICBzdWJDb2xsZWN0aW9uUXVlcmllcy5mb3JFYWNoKHN1YkNvbGxlY3Rpb25RdWVyeSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBxdWVyeUNvbnRhaW5lciA9IG5ldyBRdWVyeUNvbnRhaW5lcihnZXRTdWJDb2xsZWN0aW9uKGl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEucmVmLCBzdWJDb2xsZWN0aW9uUXVlcnkubmFtZSkpO1xyXG4gICAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJ5LnF1ZXJ5Q29uc3RyYWludHMpIHtcclxuICAgICAgICBxdWVyeUNvbnRhaW5lci5xdWVyeUNvbnN0cmFpbnRzID0gc3ViQ29sbGVjdGlvblF1ZXJ5LnF1ZXJ5Q29uc3RyYWludHM7XHJcbiAgICAgICAgLy8gY29sbGVjdGlvblJlZiA9IHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKGNvbGxlY3Rpb25SZWYpIGFzIENvbGxlY3Rpb25SZWZlcmVuY2U7XHJcbiAgICAgIH1cclxuICAgICAgLy8gaWYgKHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKSB7XHJcbiAgICAgIC8vICAgY29sbGVjdGlvblJlZiA9IHN1YkNvbGxlY3Rpb25RdWVyeS5xdWVyeUZuKGNvbGxlY3Rpb25SZWYpIGFzIENvbGxlY3Rpb25SZWZlcmVuY2U7XHJcbiAgICAgIC8vIH1cclxuXHJcbiAgICAgIGNvbnN0IGNvbGxlY3Rpb25MaXN0ZW5lciA9IHRoaXMubGlzdGVuRm9yQ29sbGVjdGlvblNpbXBsZSQocXVlcnlDb250YWluZXIucXVlcnkpLnBpcGUoXHJcbiAgICAgICAgLy8gZmlsdGVyKGRvY3MgPT4gZG9jcy5sZW5ndGggPiAwKSwgLy8gc2tpcCBlbXB0eSBjb2xsZWN0aW9ucyBvciBpZiB0aGUgc3ViQ29sbGVjdGlvblF1ZXJ5IGRvZXNudCBleGlzdFxyXG4gICAgICAgIC8qIFVuY29tbWVudCB0byBzZWUgZGF0YSBvbiBlYWNoIHVwZGF0ZSAqL1xyXG4gICAgICAgIC8vIHRhcChkID0+IGNvbnNvbGUubG9nKGQpKSxcclxuICAgICAgICAvLyBmaWx0ZXIoZG9jcyA9PiBkb2NzICE9IG51bGwpLFxyXG4gICAgICAgIC8qIExpc3RlbiBGb3IgYW5kIEFkZCBhbnkgUG90ZW50aWFsIFN1YiBEb2NzKi9cclxuICAgICAgICAvLyBAdHMtaWdub3JlIC8vIFRPRE8gZml4IHRoaXMgc28gdGhhdCBJIGNhbiByZW1vdmUgdGhlIHRzLWlnbm9yZVxyXG4gICAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgICBpZiAoIXN1YkNvbGxlY3Rpb25RdWVyeS5zdWJDb2xsZWN0aW9ucykge1xyXG4gICAgICAgICAgICByZXR1cm4gb2YoaXRlbXMpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNvbnN0IGRvY0xpc3RlbmVyczogQXJyYXk8T2JzZXJ2YWJsZTxhbnk+PiA9IFtdO1xyXG5cclxuICAgICAgICAgIGl0ZW1zID0gaXRlbXMuZmlsdGVyKGQgPT4gZCAhPSBudWxsKTsgLy8gZmlsdGVyIG91dCBwb3RlbnRpYWwgbnVsbHNcclxuXHJcbiAgICAgICAgICBpdGVtcy5mb3JFYWNoKChzdWJJdGVtOiBGaXJlSXRlbTx7fT4pID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc3ViRG9jQW5kQ29sbGVjdGlvbnMkID0gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoc3ViSXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJ5LnN1YkNvbGxlY3Rpb25zKTtcclxuICAgICAgICAgICAgZG9jTGlzdGVuZXJzLnB1c2goc3ViRG9jQW5kQ29sbGVjdGlvbnMkKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGlmIChkb2NMaXN0ZW5lcnMubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG9mKFtdKTtcclxuICAgICAgICAgIH0gLyogc3ViQ29sbGVjdGlvblF1ZXJ5IGlzIGVtcHR5IG9yIGRvZXNudCBleGlzdCAqL1xyXG5cclxuICAgICAgICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KGRvY0xpc3RlbmVycykucGlwZShcclxuICAgICAgICAgICAgLy8gdGFwKHZhbCA9PiBjb25zb2xlLmxvZyh2YWwpKVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9KSwgLyogRW5kIG9mIExpc3RlbmluZyBmb3Igc3ViIGRvY3MgKi9cclxuICAgICAgICAvKiBJZiBkb2NzLmxlbmd0aCA9PT0gMSBhbmQgdGhlIGlkIGlzIGRlZmF1bHREb2NJZCBvciB0aGUgZ2l2ZW4gZG9jSWQgaXQgbWVhbnMgd2UgYXJlIGluIGEgc3ViIHN1YkNvbGxlY3Rpb25RdWVyeVxyXG4gICAgICAgIGFuZCB3ZSBvbmx5IGNhcmUgYWJvdXQgdGhlIGRhdGEuIFNvIHdlIHJlbW92ZSB0aGUgYXJyYXkgYW5kIGp1c3QgbWFrZSBpdCBvbmUgb2JqZWN0IHdpdGggdGhlXHJcbiAgICAgICAgc3ViQ29sbGVjdGlvblF1ZXJ5IG5hbWUgYXMga2V5IGFuZCBkb2NzWzBdIGFzIHZhbHVlICovXHJcbiAgICAgICAgbWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuICAgICAgICAgIGNvbnN0IGRvY0lkID0gc3ViQ29sbGVjdGlvblF1ZXJ5LmRvY0lkICE9PSB1bmRlZmluZWQgPyBzdWJDb2xsZWN0aW9uUXVlcnkuZG9jSWQgOiB0aGlzLmRlZmF1bHREb2NJZDtcclxuXHJcbiAgICAgICAgICBpZiAoaXRlbXMubGVuZ3RoID09PSAxICYmIGl0ZW1zWzBdLmZpcmVzdG9yZU1ldGFkYXRhLmlkID09PSBkb2NJZCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1tzdWJDb2xsZWN0aW9uUXVlcnkubmFtZV06IGl0ZW1zWzBdfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7W3N1YkNvbGxlY3Rpb25RdWVyeS5uYW1lXTogaXRlbXN9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIC8vIHRhcChkID0+IGNvbnNvbGUubG9nKGQpKSxcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGNvbGxlY3Rpb25MaXN0ZW5lcnMucHVzaChjb2xsZWN0aW9uTGlzdGVuZXIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyogRmluYWxseSByZXR1cm4gdGhlIGNvbWJpbmVkIGNvbGxlY3Rpb24gbGlzdGVuZXJzKi9cclxuICAgIC8vIEB0cy1pZ25vcmVcclxuICAgIHJldHVybiBjb21iaW5lTGF0ZXN0KGNvbGxlY3Rpb25MaXN0ZW5lcnMpLnBpcGUoXHJcbiAgICAgIG1hcCgoY29sbGVjdGlvbkRhdGFzOiB7IFtjb2xsZWN0aW9uS2V5TmFtZTogc3RyaW5nXTogRmlyZUl0ZW08RmlyZUl0ZW08e30+PltdIH1bXSkgPT4ge1xyXG4gICAgICAgIC8vIG1hcCgoY29sbGVjdGlvbkRhdGFzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGF0YXNNYXA6IHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG5cclxuICAgICAgICBjb2xsZWN0aW9uRGF0YXMuZm9yRWFjaCgoY29sbGVjdGlvbkRhdGEpID0+IHtcclxuXHJcbiAgICAgICAgICBmb3IgKGNvbnN0IFtjb2xsZWN0aW9uTmFtZSwgaXRlbXNdIG9mIE9iamVjdC5lbnRyaWVzKGNvbGxlY3Rpb25EYXRhKSkge1xyXG4gICAgICAgICAgICBkYXRhc01hcFtjb2xsZWN0aW9uTmFtZV0gPSBpdGVtcztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZGF0YXNNYXA7XHJcbiAgICAgIH0pLFxyXG5cclxuICAgICAgbWFwKChkYXRhOiBEb2N1bWVudERhdGEpID0+IHtcclxuICAgICAgICByZXR1cm4gey4uLml0ZW0sIC4uLmRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgbWVhbnQgdG8gYmUgdXNlZCBzb2xlbHkgYnkgbGlzdGVuRm9yRG9jQW5kU3ViQ29sbGVjdGlvbnMkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGxpc3RlbkZvckRvY0RlZXBSZWN1cnNpdmVIZWxwZXIkPFQ+KFxyXG4gICAgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSxcclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzOiBTdWJDb2xsZWN0aW9uUXVlcnlbXSA9IFtdLFxyXG4gICAgYWN0aW9uSWZOb3RFeGlzdDogRG9jTm90RXhpc3RBY3Rpb24gPSBEb2NOb3RFeGlzdEFjdGlvbi5SRVRVUk5fTlVMTCk6IE9ic2VydmFibGU8YW55PiB7XHJcblxyXG4gICAgLyogTGlzdGVuIGZvciB0aGUgZG9jRnMqL1xyXG4gICAgcmV0dXJuIHRoaXMubGlzdGVuRm9yRG9jU2ltcGxlJDxUPihkb2NSZWYsIGFjdGlvbklmTm90RXhpc3QpLnBpcGUoXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtOiBGaXJlSXRlbTx7fT4pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGl0ZW0gPT09IG51bGwpIHtcclxuICAgICAgICAgIHJldHVybiBvZihpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHN1YkNvbGxlY3Rpb25RdWVyaWVzLmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICByZXR1cm4gb2YoaXRlbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uc0RlZXAoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEEgcmVwbGFjZW1lbnQvZXh0ZW5zaW9uIHRvIHRoZSBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5hZGQuXHJcbiAgICogRG9lcyB0aGUgc2FtZSBhcyBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbi5hZGQgYnV0IGNhbiBhbHNvIGFkZCBjcmVhdGVkRGF0ZSBhbmQgbW9kaWZpZWREYXRlIGFuZCByZXR1cm5zXHJcbiAgICogdGhlIGRhdGEgd2l0aCB0aGUgYWRkZWQgcHJvcGVydGllcyBpbiBGaXJlYmFzZURiSXRlbVxyXG4gICAqXHJcbiAgICogVXNlZCBpbnRlcm5hbGx5XHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGF0YSB0aGUgZGF0YSB0byBiZSBhZGRlZCB0byB0aGUgZG9jdW1lbnQsIGNhbm5vdCBjb250YWluIHR5cGVzIGZpcmVzdG9yZSB3b24ndCBhbGxvd1xyXG4gICAqIEBwYXJhbSBjb2xsZWN0aW9uUmVmIHRoZSBDb2xsZWN0aW9uUmVmZXJlbmNlIHdoZXJlIHRoZSBkb2N1bWVudCBzaG91bGQgYmUgYWRkZWRcclxuICAgKiBAcGFyYW0gaXNBZGREYXRlcyBpZiB0cnVlIGFkZHMgbW9kaWZpZWREYXRlIGFuZCBjcmVhdGVkRGF0ZSB0byB0aGUgZGF0YVxyXG4gICAqIEBwYXJhbSBpZCBpZiBnaXZlbiB0aGUgYWRkZWQgZG9jdW1lbnQgd2lsbCBiZSBnaXZlbiB0aGlzIGlkLCBvdGhlcndpc2UgYSByYW5kb20gdW5pcXVlIGlkIHdpbGwgYmUgdXNlZC5cclxuICAgKi9cclxuICBwcm90ZWN0ZWQgYWRkU2ltcGxlJDxUPihkYXRhOiBULCBjb2xsZWN0aW9uUmVmOiBDb2xsZWN0aW9uUmVmZXJlbmNlPFQ+LCBpc0FkZERhdGVzOiBib29sZWFuID0gdHJ1ZSwgaWQ/OiBzdHJpbmcpOlxyXG4gICAgT2JzZXJ2YWJsZTxGaXJlSXRlbTxUPj4ge1xyXG5cclxuICAgIC8vIGxldCBkYXRhVG9CZVNhdmVkOiBBID0gT2JqZWN0LmFzc2lnbih7fSwgZGF0YSk7XHJcblxyXG4gICAgbGV0IHJlcyQ6IE9ic2VydmFibGU8YW55PjtcclxuXHJcbiAgICBpZiAoaXNBZGREYXRlcykge1xyXG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgZGF0YSA9IGFkZENyZWF0ZWREYXRlKGRhdGEsIGZhbHNlLCBkYXRlKTtcclxuICAgICAgZGF0YSA9IGFkZE1vZGlmaWVkRGF0ZShkYXRhLCBmYWxzZSwgZGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgY29uc3QgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSA9IGdldERvY1JlZldpdGhJZChjb2xsZWN0aW9uUmVmLCBpZCk7XHJcbiAgICAgIHJlcyQgPSB0aGlzLmZzLnNldChkb2NSZWYsIGRhdGEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzJCA9IHRoaXMuZnMuYWRkPFQ+KGNvbGxlY3Rpb25SZWYsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGlmIChBcnJheS5pc0FycmF5KGRhdGEpICYmIGlzQWRkRGF0ZXMpIHtcclxuICAgIC8vICAgZGF0YSA9IGRhdGEubWFwKGl0ZW0gPT4ge1xyXG4gICAgLy8gICAgIHJldHVybiB7Li4uaXRlbSwgbW9kaWZpZWREYXRlOiBkYXRhVG9CZVNhdmVkLm1vZGlmaWVkRGF0ZSwgY3JlYXRlZERhdGE6IGRhdGFUb0JlU2F2ZWQuY3JlYXRlZERhdGEgfVxyXG4gICAgLy8gICB9KVxyXG4gICAgLy8gfVxyXG5cclxuICAgIHJlcyQgPSByZXMkLnBpcGUoXHJcbiAgICAgIC8vIHRhcCgoKSA9PiB0aGlzLnNuYWNrQmFyLm9wZW4oJ1N1Y2Nlc3MnLCAnQWRkZWQnLCB7ZHVyYXRpb246IDEwMDB9KSksXHJcbiAgICAgIC8vIHRhcChyZWYgPT4gY29uc29sZS5sb2cocmVmKSksXHJcbiAgICAgIC8vIHRhcCgoKSA9PiBjb25zb2xlLmxvZyhkYXRhKSksXHJcbiAgICAgIG1hcCgocmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiB8IHVuZGVmaW5lZCkgPT4ge1xyXG4gICAgICAgIGlmIChpZCA9PT0gdW5kZWZpbmVkICYmIHJlZikge1xyXG5cclxuICAgICAgICAgIGNvbnN0IHBhdGggPSByZWYucGF0aDtcclxuXHJcbiAgICAgICAgICBjb25zdCBmaXJlc3RvcmVNZXRhZGF0YTogRmlyZXN0b3JlTWV0YWRhdGE8VD4gPSB7XHJcbiAgICAgICAgICAgIGlkOiByZWYuaWQsXHJcbiAgICAgICAgICAgIHBhdGgsXHJcbiAgICAgICAgICAgIHJlZixcclxuICAgICAgICAgICAgaXNFeGlzdHM6IHRydWVcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHsuLi5kYXRhLCBmaXJlc3RvcmVNZXRhZGF0YX0gYXMgRmlyZUl0ZW08VD47XHJcblxyXG4gICAgICAgIH0gZWxzZSB7IC8vIGlmIGlkIGlzIGRlZmluZWQgaXQgbWVhbnMgd2UgdXNlZCBkb2NSZWYuc2V0IGFuZCByZWYgaXMgdW5kZWZpbmVkXHJcbiAgICAgICAgICBjb25zdCBwYXRoID0gY29sbGVjdGlvblJlZi5wYXRoICsgJy8nICsgaWQ7XHJcbiAgICAgICAgICByZWYgPSBnZXRSZWZGcm9tUGF0aChwYXRoLCB0aGlzLmZzLmZpcmVzdG9yZSkgYXMgRG9jdW1lbnRSZWZlcmVuY2U8VD47XHJcblxyXG4gICAgICAgICAgY29uc3QgZmlyZXN0b3JlTWV0YWRhdGE6IEZpcmVzdG9yZU1ldGFkYXRhPFQ+ID0ge1xyXG4gICAgICAgICAgICBpZDogaWQgYXMgc3RyaW5nLFxyXG4gICAgICAgICAgICByZWYsXHJcbiAgICAgICAgICAgIHBhdGgsXHJcbiAgICAgICAgICAgIGlzRXhpc3RzOiB0cnVlXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHJldHVybiB7Li4uZGF0YSwgZmlyZXN0b3JlTWV0YWRhdGF9IGFzIEZpcmVJdGVtPFQ+O1xyXG4gICAgICAgIH1cclxuICAgICAgfSksXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiByZXMkLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKiogVXNlZCBpbnRlcm5hbGx5IGZvciB1cGRhdGVzIHRoYXQgZG9lc24ndCBhZmZlY3QgY2hpbGQgZG9jdW1lbnRzICovXHJcbiAgcHJvdGVjdGVkIHVwZGF0ZVNpbXBsZSQ8QT4oZGF0YTogQSwgZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZSwgaXNBZGRNb2RpZmllZERhdGU6IGJvb2xlYW4gPSB0cnVlKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKGlzQWRkTW9kaWZpZWREYXRlKSB7XHJcbiAgICAgIGRhdGEgPSBhZGRNb2RpZmllZERhdGUoZGF0YSwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuZnMudXBkYXRlKGRvY1JlZiwgZGF0YSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgdXNlZCBieSB1cGRhdGUgZGVlcFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCB1cGRhdGVEZWVwVG9CYXRjaEhlbHBlcjxBPihkYXRhOiBBLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWRkTW9kaWZpZWREYXRlOiBib29sZWFuID0gdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2g/OiBXcml0ZUJhdGNoKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgaWYgKGJhdGNoID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgYmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoaXNBZGRNb2RpZmllZERhdGUpIHtcclxuICAgICAgZGF0YSA9IGFkZE1vZGlmaWVkRGF0ZShkYXRhLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3BsaXQgPSB0aGlzLnNwbGl0RGF0YUludG9DdXJyZW50RG9jQW5kU3ViQ29sbGVjdGlvbnMoZGF0YSwgc3ViQ29sbGVjdGlvbldyaXRlcnMpO1xyXG4gICAgY29uc3QgY3VycmVudERvYyA9IHNwbGl0LmN1cnJlbnREb2M7XHJcbiAgICBjb25zdCBzdWJDb2xsZWN0aW9ucyA9IHNwbGl0LnN1YkNvbGxlY3Rpb25zO1xyXG5cclxuICAgIC8vIGNvbnNvbGUubG9nKGN1cnJlbnREb2MsIHN1YkNvbGxlY3Rpb25zKTtcclxuICAgIGJhdGNoLnVwZGF0ZShkb2NSZWYsIGN1cnJlbnREb2MpO1xyXG5cclxuICAgIGZvciAoY29uc3QgW3N1YkNvbGxlY3Rpb25LZXksIHN1YkRvY1VwZGF0ZVZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdWJDb2xsZWN0aW9ucykpIHtcclxuXHJcbiAgICAgIGxldCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdIHwgdW5kZWZpbmVkOyAvLyB1bmRlZmluZWQgaWYgbm8gc3ViQ29sbGVjdGlvbldyaXRlcnNcclxuICAgICAgbGV0IHN1YkRvY0lkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcblxyXG4gICAgICBpZiAoc3ViQ29sbGVjdGlvbldyaXRlcnMpIHtcclxuICAgICAgICBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycyA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5zdWJDb2xsZWN0aW9ucztcclxuICAgICAgICBzdWJEb2NJZCA9IHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmZpbmQoc3ViQ29sbCA9PiBzdWJDb2xsLm5hbWUgPT09IHN1YkNvbGxlY3Rpb25LZXkpPy5kb2NJZDtcclxuICAgICAgfVxyXG5cclxuICAgICAgc3ViRG9jSWQgPSBzdWJEb2NJZCAhPT0gdW5kZWZpbmVkID8gc3ViRG9jSWQgOiB0aGlzLmRlZmF1bHREb2NJZDsgLyogU2V0IGRlZmF1bHQgaWYgbm9uZSBnaXZlbiAqL1xyXG5cclxuICAgICAgLy8gY29uc3Qgc3ViRG9jRnMgPSBkb2NSZWYuY29sbGVjdGlvbihzdWJDb2xsZWN0aW9uS2V5KS5kb2Moc3ViRG9jSWQpO1xyXG4gICAgICBjb25zdCBzdWJDb2xsZWN0aW9uID0gZ2V0U3ViQ29sbGVjdGlvbihkb2NSZWYsIHN1YkNvbGxlY3Rpb25LZXkpO1xyXG4gICAgICBjb25zdCBzdWJEb2NGcyA9IGdldERvY1JlZldpdGhJZChzdWJDb2xsZWN0aW9uLCBzdWJEb2NJZCk7XHJcblxyXG4gICAgICBiYXRjaCA9IHRoaXMudXBkYXRlRGVlcFRvQmF0Y2hIZWxwZXIoc3ViRG9jVXBkYXRlVmFsdWUsIHN1YkRvY0ZzLCBzdWJTdWJDb2xsZWN0aW9uV3JpdGVycywgaXNBZGRNb2RpZmllZERhdGUsIGJhdGNoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2VkIG1haW5seSBmb3IgZHJhZyBhbmQgZHJvcCBzY2VuYXJpb3Mgd2hlcmUgd2UgZHJhZyBhbiBpdGVtIGZyb20gb25lIGxpc3QgdG8gYW5vdGhlciBhbmQgdGhlIHRoZSBkb2NzXHJcbiAgICogaGF2ZSBhbiBpbmRleCB2YWx1ZSBhbmQgYSBncm91cE5hbWUuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gcHJldmlvdXNBcnJheVxyXG4gICAqIEBwYXJhbSBjdXJyZW50QXJyYXlcclxuICAgKiBAcGFyYW0gcHJldmlvdXNJbmRleFxyXG4gICAqIEBwYXJhbSBjdXJyZW50SW5kZXhcclxuICAgKiBAcGFyYW0gY3VycmVudEFycmF5TmFtZVxyXG4gICAqIEBwYXJhbSBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtXHJcbiAgICogQHBhcmFtIGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW1cclxuICAgKiBAcGFyYW0gdXNlQ29weVxyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgZ2V0QmF0Y2hGcm9tVHJhbnNmZXJJdGVtSW5JbmRleGVkRG9jczxBIGV4dGVuZHMgeyBpbmRleDogbnVtYmVyLCBncm91cE5hbWU6IHN0cmluZyB9PihcclxuICAgIHByZXZpb3VzQXJyYXk6IEFycmF5PEZpcmVJdGVtPEE+PixcclxuICAgIGN1cnJlbnRBcnJheTogQXJyYXk8RmlyZUl0ZW08QT4+LFxyXG4gICAgcHJldmlvdXNJbmRleDogbnVtYmVyLFxyXG4gICAgY3VycmVudEluZGV4OiBudW1iZXIsXHJcbiAgICBjdXJyZW50QXJyYXlOYW1lOiBzdHJpbmcsXHJcbiAgICBhZGRpdGlvbmFsRGF0YVVwZGF0ZU9uTW92ZWRJdGVtPzogeyBba2V5OiBzdHJpbmddOiBhbnkgfSxcclxuICAgIGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW0gPSB0cnVlLFxyXG4gICAgdXNlQ29weSA9IGZhbHNlKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgbGV0IHVzZWRQcmV2aW91c0FycmF5OiBBcnJheTxGaXJlSXRlbTxBPj47XHJcbiAgICBsZXQgdXNlZEN1cnJlbnRBcnJheTogQXJyYXk8RmlyZUl0ZW08QT4+O1xyXG4gICAgaWYgKHVzZUNvcHkpIHtcclxuICAgICAgdXNlZFByZXZpb3VzQXJyYXkgPSBPYmplY3QuYXNzaWduKFtdLCBwcmV2aW91c0FycmF5KTtcclxuICAgICAgdXNlZEN1cnJlbnRBcnJheSA9IE9iamVjdC5hc3NpZ24oW10sIGN1cnJlbnRBcnJheSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB1c2VkUHJldmlvdXNBcnJheSA9IHByZXZpb3VzQXJyYXk7XHJcbiAgICAgIHVzZWRDdXJyZW50QXJyYXkgPSBjdXJyZW50QXJyYXk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNmZXJBcnJheUl0ZW0odXNlZFByZXZpb3VzQXJyYXksIHVzZWRDdXJyZW50QXJyYXksIHByZXZpb3VzSW5kZXgsIGN1cnJlbnRJbmRleCk7XHJcblxyXG4gICAgY29uc3QgYmF0Y2g6IFdyaXRlQmF0Y2ggPSB3cml0ZUJhdGNoKHRoaXMuZnMuZmlyZXN0b3JlKTtcclxuXHJcbiAgICBpZiAoYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGNvbnN0IG1vdmVkSXRlbSA9IHVzZWRDdXJyZW50QXJyYXlbY3VycmVudEluZGV4XTtcclxuICAgICAgY29uc3QgbW92ZWRJdGVtUmVmID0gbW92ZWRJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnJlZjtcclxuXHJcbiAgICAgIGNvbnN0IGRhdGEgPSB7Li4uYWRkaXRpb25hbERhdGFVcGRhdGVPbk1vdmVkSXRlbSwgZ3JvdXBOYW1lOiBjdXJyZW50QXJyYXlOYW1lfTtcclxuXHJcbiAgICAgIGlmICghdXNlQ29weSkge1xyXG4gICAgICAgIGFkZERhdGFUb0l0ZW0obW92ZWRJdGVtLCBkYXRhLCB0cnVlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGlzVXBkYXRlTW9kaWZpZWREYXRlT25Nb3ZlZEl0ZW0pIHtcclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgICBhZGRNb2RpZmllZERhdGUoZGF0YSwgdHJ1ZSwgZGF0ZSk7XHJcblxyXG4gICAgICAgIGlmICghdXNlQ29weSkge1xyXG4gICAgICAgICAgYWRkTW9kaWZpZWREYXRlKG1vdmVkSXRlbSwgdHJ1ZSwgZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGJhdGNoLnVwZGF0ZShtb3ZlZEl0ZW1SZWYsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGN1cnJlbnRBcnJheVNsaWNlVG9VcGRhdGU6IEFycmF5PEZpcmVJdGVtPEE+PiA9IHVzZWRDdXJyZW50QXJyYXkuc2xpY2UoY3VycmVudEluZGV4KTtcclxuICAgIGxldCBpID0gY3VycmVudEluZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGN1cnJlbnRBcnJheVNsaWNlVG9VcGRhdGUpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBiYXRjaC51cGRhdGUoaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHtpbmRleDogaX0pO1xyXG5cclxuICAgICAgaWYgKCF1c2VDb3B5KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmV2QXJyYXlTbGljZVRvVXBkYXRlOiBBcnJheTxGaXJlSXRlbTxBPj4gPSB1c2VkUHJldmlvdXNBcnJheS5zbGljZShwcmV2aW91c0luZGV4KTtcclxuICAgIGkgPSBwcmV2aW91c0luZGV4O1xyXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIHByZXZBcnJheVNsaWNlVG9VcGRhdGUpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBiYXRjaC51cGRhdGUoaXRlbS5maXJlc3RvcmVNZXRhZGF0YS5yZWYsIHtpbmRleDogaX0pO1xyXG5cclxuICAgICAgaWYgKCF1c2VDb3B5KSB7XHJcbiAgICAgICAgaXRlbS5pbmRleCA9IGk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGkrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuXHJcbiAgLyoqXHJcbiAgICogRGVsZXRlIERvY3VtZW50c1xyXG4gICAqXHJcbiAgICogQHBhcmFtIGRvY1JlZnMgLSBBIGxpc3Qgb2YgRG9jdW1lbnRSZWZlcmVuY2UgdGhhdCBhcmUgdG8gYmUgZGVsZXRlZFxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBkZWxldGVNdWx0aXBsZVNpbXBsZSQoZG9jUmVmczogRG9jdW1lbnRSZWZlcmVuY2VbXSk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG5cclxuICAgIGNvbnN0IGJhdGNoID0gdGhpcy5nZXREZWxldGVNdWx0aXBsZVNpbXBsZUJhdGNoKGRvY1JlZnMpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmJhdGNoQ29tbWl0JChiYXRjaCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0RGVsZXRlTXVsdGlwbGVTaW1wbGVCYXRjaChkb2NSZWZzOiBEb2N1bWVudFJlZmVyZW5jZVtdLCBiYXRjaDogV3JpdGVCYXRjaCA9IHdyaXRlQmF0Y2godGhpcy5mcy5maXJlc3RvcmUpKTogV3JpdGVCYXRjaCB7XHJcblxyXG4gICAgZG9jUmVmcy5mb3JFYWNoKChkb2NSZWYpID0+IHtcclxuICAgICAgYmF0Y2guZGVsZXRlKGRvY1JlZik7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gYmF0Y2g7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWN1cnNpdmUgbWV0aG9kIHRvIGNsZWFuIEZpcmVzdG9yZUJhc2VJdGVtIHByb3BlcnRpZXMgZnJvbSB0aGUgZGJJdGVtXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGJJdGVtIHRoZSBkYXRhIHRvIGJlIGNsZWFuZWRcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvbldyaXRlcnMgbGlzdCBvZiBTdWJDb2xsZWN0aW9uV3JpdGVycyB0byBoYW5kbGUgc3ViIGNvbGxlY3Rpb25zXHJcbiAgICogQHBhcmFtIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCByZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyPFQ+KGRiSXRlbTogVCAmIERvY3VtZW50RGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogU3ViQ29sbGVjdGlvbldyaXRlcltdID0gW10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlOiBzdHJpbmdbXSA9IFtdKTogVCB7XHJcblxyXG4gICAgLy8gY29uc3QgZXh0cmFQcm9wZXJ0eU5hbWVzOiBzdHJpbmdbXSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG5ldyBEYkl0ZW1FeHRyYXMoKSk7XHJcbiAgICBjb25zdCBleHRyYVByb3BlcnR5TmFtZXM6IHN0cmluZ1tdID0gWydmaXJlc3RvcmVNZXRhZGF0YSddLmNvbmNhdChhZGRpdGlvbmFsRmllbGRzVG9SZW1vdmUpO1xyXG5cclxuICAgIC8qIEN1cnJlbnQgbGV2ZWwgZGVsZXRlICovXHJcbiAgICBmb3IgKGNvbnN0IGV4dHJhUHJvcGVydHlOYW1lIG9mIGV4dHJhUHJvcGVydHlOYW1lcykge1xyXG4gICAgICBkZWxldGUgZGJJdGVtW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgIH1cclxuXHJcbiAgICBzdWJDb2xsZWN0aW9uV3JpdGVycy5mb3JFYWNoKGNvbCA9PiB7XHJcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGRiSXRlbVtjb2wubmFtZV0pKSB7IC8qIHByb3BlcnR5IGlzIGFycmF5IHNvIHdpbGwgY29udGFpbiBtdWx0aXBsZSBkb2NzICovXHJcblxyXG4gICAgICAgIGNvbnN0IGRvY3M6IEZpcmVJdGVtPFQ+W10gPSBkYkl0ZW1bY29sLm5hbWVdO1xyXG4gICAgICAgIGRvY3MuZm9yRWFjaCgoZCwgaSkgPT4ge1xyXG5cclxuICAgICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy5yZW1vdmVEYXRhRXh0cmFzUmVjdXJzaXZlSGVscGVyKGQsIGNvbC5zdWJDb2xsZWN0aW9ucywgYWRkaXRpb25hbEZpZWxkc1RvUmVtb3ZlKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8qICAqL1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGV4dHJhUHJvcGVydHlOYW1lIG9mIGV4dHJhUHJvcGVydHlOYW1lcykge1xyXG4gICAgICAgICAgICAgIGRlbGV0ZSBkYkl0ZW1bY29sLm5hbWVdW2ldW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgfSBlbHNlIHsgLyogbm90IGFuIGFycmF5IHNvIGEgc2luZ2xlIGRvYyovXHJcblxyXG4gICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgIHRoaXMucmVtb3ZlRGF0YUV4dHJhc1JlY3Vyc2l2ZUhlbHBlcihkYkl0ZW1bY29sLm5hbWVdLCBjb2wuc3ViQ29sbGVjdGlvbnMsIGFkZGl0aW9uYWxGaWVsZHNUb1JlbW92ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGZvciAoY29uc3QgZXh0cmFQcm9wZXJ0eU5hbWUgb2YgZXh0cmFQcm9wZXJ0eU5hbWVzKSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBkYkl0ZW1bY29sLm5hbWVdW2V4dHJhUHJvcGVydHlOYW1lXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZGJJdGVtO1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgYW4gT2JzZXJ2YWJsZSBjb250YWluaW5nIGEgbGlzdCBvZiBEb2N1bWVudFJlZmVyZW5jZSBmb3VuZCB1bmRlciB0aGUgZ2l2ZW4gZG9jUmVmIHVzaW5nIHRoZSBTdWJDb2xsZWN0aW9uUXVlcnlbXVxyXG4gICAqIE1haW5seSB1c2VkIHRvIGRlbGV0ZSBhIGRvY0ZzIGFuZCBpdHMgc3ViIGRvY3NcclxuICAgKiBAcGFyYW0gcmVmOiBEb2N1bWVudFJlZmVyZW5jZSB8IENvbGxlY3Rpb25SZWZlcmVuY2VcclxuICAgKiBAcGFyYW0gc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldERvY3VtZW50UmVmZXJlbmNlc0RlZXAkKHJlZjogRG9jdW1lbnRSZWZlcmVuY2UgfCBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICBpZiAocmVmIGluc3RhbmNlb2YgRG9jdW1lbnRSZWZlcmVuY2UpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbURvY1JlZiQocmVmLCBzdWJDb2xsZWN0aW9uUXVlcmllcyk7XHJcbiAgICB9IGVsc2UgeyAvLyBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAgICAgIHJldHVybiB0aGlzLmdldERvY3VtZW50UmVmZXJlbmNlc0Zyb21Db2xsZWN0aW9uUmVmJChyZWYsIHN1YkNvbGxlY3Rpb25RdWVyaWVzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBnZXREb2N1bWVudFJlZmVyZW5jZXNGcm9tRG9jUmVmJChkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JEb2MkKGRvY1JlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpLnBpcGUoXHJcbiAgICAgIHRha2UoMSksXHJcbiAgICAgIG1hcChpdGVtID0+IHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpKSxcclxuICAgICAgLy8gdGFwKHBhdGhMaXN0ID0+IGNvbnNvbGUubG9nKHBhdGhMaXN0KSksXHJcbiAgICAgIG1hcCgocGF0aExpc3Q6IHN0cmluZ1tdKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhMaXN0XHJcbiAgICAgICAgICAubWFwKHBhdGggPT4gZ2V0UmVmRnJvbVBhdGgocGF0aCwgdGhpcy5mcy5maXJlc3RvcmUpIGFzIERvY3VtZW50UmVmZXJlbmNlKTtcclxuICAgICAgfSksXHJcbiAgICAgIC8vIHRhcChpdGVtID0+IGNvbnNvbGUubG9nKGl0ZW0pKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0RG9jdW1lbnRSZWZlcmVuY2VzRnJvbUNvbGxlY3Rpb25SZWYkKGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6XHJcbiAgICBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlW10+IHtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5Gb3JDb2xsZWN0aW9uU2ltcGxlJChjb2xsZWN0aW9uUmVmKS5waXBlKFxyXG4gICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgIHRha2UoMSksXHJcbiAgICAgIG1lcmdlTWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuICAgICAgICBsZXQgZG9jTGlzdGVuZXJzOiBBcnJheTxPYnNlcnZhYmxlPGFueT4+O1xyXG4gICAgICAgIGRvY0xpc3RlbmVycyA9IGl0ZW1zLm1hcChpdGVtID0+IHRoaXMubGlzdGVuRm9yRG9jJChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnJlZiwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZUxhdGVzdChkb2NMaXN0ZW5lcnMpO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwKChpdGVtczogRmlyZUl0ZW08e30+W10pID0+IHtcclxuXHJcbiAgICAgICAgbGV0IHBhdGhzOiBzdHJpbmdbXSA9IFtdO1xyXG5cclxuICAgICAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgcGF0aHMgPSBwYXRocy5jb25jYXQodGhpcy5nZXRQYXRoc0Zyb21JdGVtRGVlcFJlY3Vyc2l2ZUhlbHBlcihpdGVtLCBzdWJDb2xsZWN0aW9uUXVlcmllcykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBwYXRocztcclxuICAgICAgfSksXHJcbiAgICAgIG1hcCgocGF0aExpc3Q6IHN0cmluZ1tdKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhMaXN0XHJcbiAgICAgICAgICAubWFwKHBhdGggPT4gZ2V0UmVmRnJvbVBhdGgocGF0aCwgdGhpcy5mcy5maXJlc3RvcmUpIGFzIERvY3VtZW50UmVmZXJlbmNlKTtcclxuICAgICAgfSksXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVXNlZCBieSBkZWxldGVEZWVwQnlJdGVtJCB0byBnZXQgYWxsIHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnRzIHRvIGJlIGRlbGV0ZWRcclxuICAgKiBpbmNsdWRpbmcgY2hpbGQgZG9jdW1lbnRzIHVzaW5nIFN1YkNvbGxlY3Rpb25RdWVyaWVzXHJcbiAgICpcclxuICAgKiBJbnRlcm5hbCB1c2VcclxuICAgKiBAcGFyYW0gaXRlbSBGaXJlc3RvcmVJdGVtIGZyb20gd2hlcmUgd2UgZ2V0IHRoZSBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnRzXHJcbiAgICogQHBhcmFtIHN1YkNvbGxlY3Rpb25RdWVyaWVzIGlmIHRoZSBkYkl0ZW0gaGFzIGNoaWxkIGRvY3VtZW50cyB0aGUgc3ViQ29sbGVjdGlvblF1ZXJpZXMgYXJlIG5lZWRlZCB0byBsb2NhdGUgdGhlbVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBnZXREb2N1bWVudFJlZmVyZW5jZXNGcm9tSXRlbTxUPihcclxuICAgIGl0ZW06IEZpcmVJdGVtPFQ+LFxyXG4gICAgc3ViQ29sbGVjdGlvblF1ZXJpZXM6IFN1YkNvbGxlY3Rpb25RdWVyeVtdID0gW10pOiBEb2N1bWVudFJlZmVyZW5jZVtdIHtcclxuXHJcbiAgICBjb25zdCBwYXRocyA9IHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgc3ViQ29sbGVjdGlvblF1ZXJpZXMpO1xyXG4gICAgcmV0dXJuIHBhdGhzLm1hcChwYXRoID0+IGdldFJlZkZyb21QYXRoKHBhdGgsIHRoaXMuZnMuZmlyZXN0b3JlKSBhcyBEb2N1bWVudFJlZmVyZW5jZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBETyBOT1QgQ0FMTCBUSElTIE1FVEhPRCwgaXRzIG1lYW50IGFzIGEgc3VwcG9ydCBtZXRob2QgZm9yIGdldERvY3MkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGdldFBhdGhzRnJvbUl0ZW1EZWVwUmVjdXJzaXZlSGVscGVyPFQ+KGl0ZW06IEZpcmVJdGVtPFQ+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJDb2xsZWN0aW9uUXVlcmllczogU3ViQ29sbGVjdGlvblF1ZXJ5W10gPSBbXSk6IHN0cmluZ1tdIHtcclxuXHJcbiAgICBpZiAoc3ViQ29sbGVjdGlvblF1ZXJpZXMgPT0gbnVsbCB8fCBzdWJDb2xsZWN0aW9uUXVlcmllcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIFtpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGhdO1xyXG4gICAgfVxyXG4gICAgbGV0IHBhdGhMaXN0OiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgcGF0aExpc3QucHVzaChpdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG5cclxuICAgIHN1YkNvbGxlY3Rpb25RdWVyaWVzLmZvckVhY2goY29sID0+IHtcclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoKGl0ZW0gYXMgRG9jdW1lbnREYXRhKVtjb2wubmFtZV0pICYmICFjb2wuZG9jSWQpIHtcclxuICAgICAgICAvKiBwcm9wZXJ0eSBpcyBhcnJheSBhbmQgbm90IHVzaW5nIGRvY0lkIHNvIHdpbGwgY29udGFpbiBtdWx0aXBsZSBkb2NzICovXHJcblxyXG4gICAgICAgIGNvbnN0IGl0ZW1zOiBGaXJlSXRlbTx7fT5bXSA9IChpdGVtIGFzIERvY3VtZW50RGF0YSlbY29sLm5hbWVdO1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goc3ViSXRlbSA9PiB7XHJcblxyXG4gICAgICAgICAgaWYgKGNvbC5zdWJDb2xsZWN0aW9ucykge1xyXG4gICAgICAgICAgICBwYXRoTGlzdCA9IHBhdGhMaXN0LmNvbmNhdCh0aGlzLmdldFBhdGhzRnJvbUl0ZW1EZWVwUmVjdXJzaXZlSGVscGVyKHN1Ykl0ZW0sIGNvbC5zdWJDb2xsZWN0aW9ucykpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGF0aExpc3QucHVzaChzdWJJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgfSBlbHNlIHsgLyogbm90IGFuIGFycmF5IHNvIGEgc2luZ2xlIGRvYyovXHJcblxyXG4gICAgICAgIGlmIChjb2wuc3ViQ29sbGVjdGlvbnMpIHtcclxuICAgICAgICAgIHBhdGhMaXN0ID0gcGF0aExpc3QuY29uY2F0KHRoaXMuZ2V0UGF0aHNGcm9tSXRlbURlZXBSZWN1cnNpdmVIZWxwZXIoaXRlbSwgY29sLnN1YkNvbGxlY3Rpb25zKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IHN1Ykl0ZW0gPSAoKGl0ZW0gYXMgRG9jdW1lbnREYXRhKVtjb2wubmFtZV0gYXMgRmlyZUl0ZW08e30+KTtcclxuICAgICAgICAgIGlmIChzdWJJdGVtICE9IG51bGwgJiYgJ3BhdGgnIGluIHN1Ykl0ZW0uZmlyZXN0b3JlTWV0YWRhdGEpIHtcclxuICAgICAgICAgICAgcGF0aExpc3QucHVzaChzdWJJdGVtLmZpcmVzdG9yZU1ldGFkYXRhLnBhdGgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gY29uc3QgcGF0aCA9IChkYkl0ZW1bY29sLm5hbWVdIGFzIEZpcmVzdG9yZUl0ZW0pLnBhdGg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHBhdGhMaXN0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRE8gIE5PVCAgQ0FMTCBUSElTIE1FVEhPRCwgdXNlZCBpbiBhZGREZWVwIGFuZCB1cGRhdGVEZWVwIHRvIHNwbGl0IHRoZSBkYXRhIGludG8gY3VycmVudERvYyBhbmQgc3ViQ29sbGVjdGlvbnNcclxuICAgKiBPbmx5IGdvZXMgb25lIHN1YiBsZXZlbCBkZWVwO1xyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBzcGxpdERhdGFJbnRvQ3VycmVudERvY0FuZFN1YkNvbGxlY3Rpb25zPFQ+KFxyXG4gICAgZGF0YTogVCxcclxuICAgIHN1YkNvbGxlY3Rpb25Xcml0ZXJzOiBTdWJDb2xsZWN0aW9uV3JpdGVyW10gPSBbXSk6IEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQge1xyXG5cclxuICAgIC8qIFNwbGl0IGRhdGEgaW50byBjdXJyZW50IGRvYyBhbmQgc3ViIGNvbGxlY3Rpb25zICovXHJcbiAgICBsZXQgY3VycmVudERvYzogeyBbaW5kZXg6IHN0cmluZ106IGFueTsgfSA9IHt9O1xyXG4gICAgY29uc3Qgc3ViQ29sbGVjdGlvbnM6IHsgW2luZGV4OiBzdHJpbmddOiBhbnk7IH0gPSB7fTtcclxuXHJcbiAgICAvKiBDaGVjayBpZiB0aGUga2V5IGlzIGluIHN1YkNvbGxlY3Rpb25zLCBpZiBpdCBpcyBwbGFjZSBpdCBpbiBzdWJDb2xsZWN0aW9ucyBlbHNlIHBsYWNlIGl0IGluIGN1cnJlbnREb2MgKi9cclxuXHJcbiAgICAvLyBub3QgYXJyYXkgc28gb2JqZWN0XHJcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhrZXksIHZhbHVlKTtcclxuICAgICAgaWYgKHN1YkNvbGxlY3Rpb25Xcml0ZXJzICYmIHN1YkNvbGxlY3Rpb25Xcml0ZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb25zdCBzdWJDb2xsZWN0aW9uV3JpdGVyOiBTdWJDb2xsZWN0aW9uV3JpdGVyIHwgdW5kZWZpbmVkID0gc3ViQ29sbGVjdGlvbldyaXRlcnMuZmluZChzdWJDb2xsID0+IHN1YkNvbGwubmFtZSA9PT0ga2V5KTtcclxuXHJcbiAgICAgICAgaWYgKHN1YkNvbGxlY3Rpb25Xcml0ZXIpIHtcclxuICAgICAgICAgIHN1YkNvbGxlY3Rpb25zW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY3VycmVudERvY1trZXldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGN1cnJlbnREb2MgPSBkYXRhO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGN1cnJlbnREb2MsXHJcbiAgICAgIHN1YkNvbGxlY3Rpb25zXHJcbiAgICB9IGFzIEN1cnJlbnREb2NTdWJDb2xsZWN0aW9uU3BsaXQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUdXJuIGEgYmF0Y2ggaW50byBhbiBPYnNlcnZhYmxlIGluc3RlYWQgb2YgUHJvbWlzZS5cclxuICAgKlxyXG4gICAqIEZvciBzb21lIHJlYXNvbiBhbmd1bGFyZmlyZSByZXR1cm5zIGEgcHJvbWlzZSBvbiBiYXRjaC5jb21taXQoKSBpbnN0ZWFkIG9mIGFuIG9ic2VydmFibGUgbGlrZSBmb3JcclxuICAgKiBldmVyeXRoaW5nIGVsc2UuXHJcbiAgICpcclxuICAgKiBUaGlzIG1ldGhvZCB0dXJucyBpdCBpbnRvIGFuIG9ic2VydmFibGVcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgYmF0Y2hDb21taXQkKGJhdGNoOiBXcml0ZUJhdGNoKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbShiYXRjaC5jb21taXQoKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogRmlyZWJhc2UgdmVyc2lvbiA5IGNoYW5nZWQgdGhlIHF1ZXJ5IHN5bnRheFxyXG4gKiBUaGUgbmV3IHN5bnRheCBicm9rZW4gdGhlIGFiaWxpdHkgdG8gY2hhaW4gcXVlcmllcyBsaWtlIHRoaXM6XHJcbiAqXHJcbiAqIGNvbGxlY3Rpb25SZWYud2hlcmUoJ2ZvbycsICc9PScsIDEyMykubGltaXQoMTApLi5yZXR1cm5zIHRoZSBjb2xsZWN0aW9uIHJlZlxyXG4gKlxyXG4gKiBub3cgaW5zdGVhZCB5b3UgbXVzdCB3cml0ZSBpdCBsaWtlIHRoaXMsIHF1ZXJ5KGNvbGxlY3Rpb25SZWYsIHdoZXJlKCdmb28nLCAnPT0nLCAxMjMpLCBsaW1pdCgxMCkpLi4ucmV0dXJucyBhIFF1ZXJ5XHJcbiAqXHJcbiAqIHdoaWNoIGlzIHVnbHkgYW5kIG1ha2UgeW91IGxvb3NlIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHdhcyBwcmVzZW50IGluIHRoZSBjb2xsZWN0aW9uUmVmIHNpbmNlIGEgUXVlcnkgaXMgcmV0dXJuZWQgaW5zdGVhZCxcclxuICogd2hpY2ggaG9sZHMgbGVzcyBpbmZvcm1hdGlvbiB0aGFuIGEgQ29sbGVjdGlvblJlZmVyZW5jZS5cclxuICpcclxuICogVGhpcyBDb250YWluZXIgaXMgbWVhbnQgdG8gYWxsb3cgeW91IHRvIGNoYWluIHF1ZXJpZXMsIGxpa2UgYmVmb3JlIHZlcnNpb24gOSBhbmQgYWxzbyByZXRhaW4gdGhlIGluZm9ybWF0aW9uIGluXHJcbiAqIHRoZSBvcmlnaW5hbCBDb2xsZWN0aW9uUmVmZXJlbmNlXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUXVlcnlDb250YWluZXI8VD4ge1xyXG5cclxuICBwdWJsaWMgcXVlcnlDb25zdHJhaW50czogUXVlcnlDb25zdHJhaW50W10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikge1xyXG4gIH1cclxuXHJcbiAgLyoqIGZhY3RvcnkgbWV0aG9kIHRvIGNyZWF0ZSBjb250YWluZXIgZnJvbSBwYXRoICovXHJcbiAgc3RhdGljIGZyb21QYXRoPFQ+KGZpcmVzdG9yZTogRmlyZXN0b3JlLCBwYXRoOiBzdHJpbmcpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICBjb25zdCByZWYgPSBjb2xsZWN0aW9uKGZpcmVzdG9yZSwgcGF0aCkgYXMgQ29sbGVjdGlvblJlZmVyZW5jZTxUPjtcclxuICAgIHJldHVybiBuZXcgdGhpcyhyZWYpO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJldHVybnMgdGhlIHF1ZXJ5IHdpdGggYWxsIHRoZSBxdWVyeSBjb25zdHJhaW50cyAqL1xyXG4gIGdldCBxdWVyeSgpOiBRdWVyeTxUPiB7XHJcbiAgICByZXR1cm4gcXVlcnkodGhpcy5yZWYsIC4uLnRoaXMucXVlcnlDb25zdHJhaW50cyk7XHJcbiAgfVxyXG5cclxuICAvKiogQ2FsbHMgdGhlIGZpcmViYXNlIGdldERvY3MoKSBtZXRob2QgYW5kIGxpc3RlbnMgZm9yIHRoZSBkb2N1bWVudHMgaW4gdGhlIHF1ZXJ5LiAqL1xyXG4gIGdldERvY3MkKCk6IE9ic2VydmFibGU8UXVlcnlTbmFwc2hvdDxUPj4ge1xyXG4gICAgcmV0dXJuIGZyb20oZ2V0RG9jczxUPih0aGlzLnF1ZXJ5KSk7XHJcbiAgfVxyXG5cclxuICB3aGVyZShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgb3BTdHI6IFdoZXJlRmlsdGVyT3AsIHZhbHVlOiB1bmtub3duKTogUXVlcnlDb250YWluZXI8VD4ge1xyXG4gICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2god2hlcmUoZmllbGRQYXRoLCBvcFN0ciwgdmFsdWUpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgb3JkZXJCeShmaWVsZFBhdGg6IHN0cmluZyB8IEZpZWxkUGF0aCwgZGlyZWN0aW9uU3RyPzogT3JkZXJCeURpcmVjdGlvbik6IFF1ZXJ5Q29udGFpbmVyPFQ+IHtcclxuICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKG9yZGVyQnkoZmllbGRQYXRoLCBkaXJlY3Rpb25TdHIpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXQoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgbGltaXRUb0xhc3QoX2xpbWl0OiBudW1iZXIpOiBRdWVyeUNvbnRhaW5lcjxUPiB7XHJcbiAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChsaW1pdFRvTGFzdChfbGltaXQpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgc3RhcnRBdCguLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuICBzdGFydEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIHN0YXJ0QXQoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+LCAuLi5maWVsZFZhbHVlczogdW5rbm93bltdKTogUXVlcnlDb250YWluZXI8VD4geyAvLyBpbXBsZW1lbnRhdGlvblxyXG4gICAgaWYgKHNuYXBzaG90KSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKHN0YXJ0QXQoc25hcHNob3QpKTtcclxuICAgIH0gZWxzZSBpZiAoZmllbGRWYWx1ZXMpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIHN0YXJ0QWZ0ZXIoc25hcHNob3Q/OiBEb2N1bWVudFNuYXBzaG90PHVua25vd24+KTogUXVlcnlDb250YWluZXI8VD47IC8vIGRlZmluaXRpb25cclxuXHJcbiAgc3RhcnRBZnRlcihzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goc3RhcnRBZnRlcihzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChzdGFydEFmdGVyKC4uLmZpZWxkVmFsdWVzKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGVuZEF0KC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPjsgLy8gZGVmaW5pdGlvblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEF0KHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPiwgLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+IHsgLy8gaW1wbGVtZW50YXRpb25cclxuICAgIGlmIChzbmFwc2hvdCkge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdChzbmFwc2hvdCkpO1xyXG4gICAgfSBlbHNlIGlmIChmaWVsZFZhbHVlcykge1xyXG4gICAgICB0aGlzLnF1ZXJ5Q29uc3RyYWludHMucHVzaChlbmRBdCguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBlbmRCZWZvcmUoLi4uZmllbGRWYWx1ZXM6IHVua25vd25bXSk6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcbiAgZW5kQmVmb3JlKHNuYXBzaG90PzogRG9jdW1lbnRTbmFwc2hvdDx1bmtub3duPik6IFF1ZXJ5Q29udGFpbmVyPFQ+OyAvLyBkZWZpbml0aW9uXHJcblxyXG4gIGVuZEJlZm9yZShzbmFwc2hvdD86IERvY3VtZW50U25hcHNob3Q8dW5rbm93bj4sIC4uLmZpZWxkVmFsdWVzOiB1bmtub3duW10pOiBRdWVyeUNvbnRhaW5lcjxUPiB7IC8vIGltcGxlbWVudGF0aW9uXHJcbiAgICBpZiAoc25hcHNob3QpIHtcclxuICAgICAgdGhpcy5xdWVyeUNvbnN0cmFpbnRzLnB1c2goZW5kQmVmb3JlKHNuYXBzaG90KSk7XHJcbiAgICB9IGVsc2UgaWYgKGZpZWxkVmFsdWVzKSB7XHJcbiAgICAgIHRoaXMucXVlcnlDb25zdHJhaW50cy5wdXNoKGVuZEJlZm9yZSguLi5maWVsZFZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,23],[32,0,0,31],[34,0,0,33],[38,0,0,37],[40,0,0,51],[42,0,0,53],[44,0,0,54],[50,0,0,60],[56,0,0,66],[57,0,0,67]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,20],[27,0,2,26],[29,0,2,28],[32,0,2,31],[34,0,2,33],[42,0,2,41],[44,0,2,43],[53,0,2,52],[55,0,2,54],[59,0,2,58],[61,0,2,60],[64,0,2,63],[66,0,2,64],[72,0,2,70],[88,0,2,86],[89,0,2,87]],[[0,0,3,0],[7,0,3,7],[9,0,4,2],[19,0,4,12],[21,0,7,2],[38,0,7,19],[40,0,9,2],[45,0,9,7],[47,0,10,2],[56,0,10,11],[58,0,13,2],[65,0,13,9],[67,0,14,2],[72,0,14,7],[74,0,15,2],[85,0,15,13],[87,0,16,2],[94,0,16,9],[96,0,18,2],[101,0,18,7],[103,0,22,2],[113,0,22,12],[115,0,23,2],[122,0,23,9],[124,0,24,2],[129,0,24,7],[131,0,26,2],[141,0,26,12],[143,0,28,1],[149,0,28,7],[169,0,28,27],[170,0,28,28]],[[0,0,30,0],[7,0,30,7],[9,0,31,2],[23,0,31,16],[25,0,32,2],[38,0,32,15],[40,0,33,2],[55,0,33,17],[57,0,34,2],[79,0,34,24],[81,0,35,2],[96,0,35,17],[98,0,36,2],[112,0,36,16],[114,0,37,2],[130,0,37,18],[132,0,38,1],[138,0,38,7],[149,0,38,18],[150,0,38,19]],[[0,0,43,0],[7,0,43,7],[9,0,43,8],[24,0,43,23],[26,0,43,25],[43,0,43,42],[45,0,43,43],[51,0,43,49],[65,0,43,63],[66,0,43,64]],[[0,0,45,0]],[],[[3,0,47,3]],[[0,0,48,0],[6,0,48,6],[7,0,48,0],[11,0,48,12],[28,0,60,1]],[[0,0,48,0],[11,0,48,12],[28,0,48,29]],[[4,0,49,2],[32,0,49,30]],[[4,0,50,2],[75,0,50,13],[76,0,50,13]],[[4,0,52,2],[117,0,52,115]],[[4,0,53,2],[91,0,53,21],[92,0,53,21]],[[4,0,55,2],[51,0,55,49]],[[4,0,56,2],[65,0,56,8],[66,0,56,8]],[[4,0,58,2],[53,0,58,51]],[[4,0,59,2],[91,0,59,21],[92,0,59,21]],[[0,0,60,0],[1,0,60,1],[3,0,48,12],[20,0,48,29],[25,0,48,12],[42,0,48,29],[50,0,60,1]],[[0,0,71,0]],[],[],[],[],[[3,0,76,3]],[[0,0,77,0],[6,0,77,6],[13,0,77,13],[30,0,77,30]],[[4,0,79,2]],[],[],[],[],[[7,0,84,5]],[[4,0,85,2],[16,0,85,22],[18,0,85,46],[20,0,85,55],[35,0,85,78],[41,0,85,84]],[[8,0,85,22],[15,0,85,24],[18,0,85,22],[20,0,85,24],[21,0,85,46]],[[8,0,85,55],[25,0,85,67],[28,0,85,55],[40,0,85,67],[41,0,85,84]],[[4,0,86,2],[5,0,86,3]],[[4,0,88,2],[8,0,88,6],[17,0,88,15]],[[8,0,89,4],[15,0,89,11],[19,0,89,15],[20,0,89,16],[22,0,89,18],[23,0,89,19],[32,0,89,28],[33,0,89,29]],[[4,0,90,2],[5,0,90,3]],[[4,0,92,2],[43,0,92,41]],[[4,0,94,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,122,5]],[[4,0,123,9],[17,0,123,22],[18,0,124,4],[24,0,124,29],[26,0,125,4],[49,0,125,49],[51,0,125,51],[53,0,126,4],[72,0,126,42],[89,0,126,59],[90,0,126,60],[109,0,126,79]],[[8,0,128,4],[15,0,128,11],[19,0,128,15],[20,0,128,16],[52,0,128,48],[53,0,128,49],[59,0,128,55],[61,0,128,57],[81,0,128,77],[83,0,128,79],[99,0,128,95],[100,0,128,96],[101,0,128,97],[105,0,128,101],[106,0,129,6],[109,0,129,9],[110,0,129,10],[114,0,129,14],[115,0,129,15],[117,0,129,17],[118,0,129,18],[122,0,129,37],[123,0,129,38],[124,0,130,5],[125,0,130,6]],[[4,0,131,2],[5,0,131,3]],[[4,0,133,2]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,164,5]],[[4,0,165,9],[24,0,165,29],[25,0,166,4],[31,0,166,20],[33,0,167,4],[56,0,167,49],[58,0,167,51]],[[8,0,168,4]],[],[],[[11,0,171,7]],[[8,0,172,4],[15,0,172,11],[19,0,172,15],[20,0,172,16],[46,0,172,42],[47,0,172,46],[53,0,172,52],[54,0,172,53],[55,0,172,54],[59,0,172,58],[60,0,173,6],[68,0,173,14],[69,0,173,15],[70,0,173,16],[75,0,173,37],[77,0,173,39],[79,0,173,41]],[[12,0,175,8],[16,0,175,12],[21,0,175,17],[25,0,175,21],[29,0,175,25],[33,0,175,29],[38,0,175,34],[39,0,175,35],[45,0,175,41],[50,0,175,46],[51,0,175,47],[53,0,175,49]],[[16,0,176,10],[23,0,176,17],[25,0,176,19],[26,0,176,20],[28,0,176,22],[29,0,176,23],[30,0,176,24]],[[13,0,177,9]],[[12,0,178,8],[16,0,178,12],[36,0,178,32],[37,0,178,33],[43,0,178,39],[47,0,178,43],[48,0,178,44],[50,0,178,46]],[[16,0,179,10],[23,0,179,17],[25,0,179,19],[26,0,179,20],[31,0,179,25],[32,0,179,26],[33,0,179,27]],[[13,0,180,9]],[[12,0,182,8],[18,0,182,14],[37,0,182,33],[40,0,182,60],[42,0,182,62],[43,0,182,63]],[[12,0,184,8],[17,0,184,13],[18,0,184,14],[25,0,184,21],[26,0,184,22],[30,0,184,26],[31,0,184,27],[33,0,184,29]],[[16,0,186,10],[22,0,186,16],[40,0,186,34],[43,0,186,37],[47,0,186,41],[48,0,186,42],[72,0,186,66],[73,0,186,67],[77,0,186,71],[79,0,186,73],[99,0,186,93],[100,0,186,94],[101,0,186,95]],[[16,0,188,10],[35,0,188,29],[36,0,188,30],[40,0,188,34],[41,0,188,35],[59,0,188,53],[60,0,188,54],[61,0,188,55]],[[12,0,189,8],[13,0,189,9],[14,0,189,10],[15,0,189,11]],[[12,0,191,8],[66,0,191,62]],[[12,0,192,8],[19,0,192,15],[32,0,192,28],[33,0,192,29],[52,0,192,48],[53,0,192,49],[54,0,192,50]],[[8,0,193,6],[9,0,193,7],[10,0,193,8],[11,0,194,5],[12,0,194,6]],[[4,0,195,2],[5,0,195,3]],[[4,0,197,2]],[],[[7,0,199,5]],[[4,0,200,9],[35,0,200,40],[36,0,201,4],[50,0,201,26],[52,0,202,4],[65,0,202,25],[67,0,203,4],[75,0,203,21]],[[8,0,205,4],[109,0,205,105]],[[8,0,206,4],[14,0,206,10],[29,0,206,25],[32,0,206,28],[36,0,206,32],[50,0,206,46],[51,0,206,50],[65,0,206,64],[66,0,206,65],[80,0,206,79],[82,0,206,81],[86,0,206,85],[87,0,206,86],[89,0,206,88],[90,0,206,89],[99,0,206,98],[100,0,206,125],[101,0,206,126],[102,0,206,127]],[[8,0,207,4],[12,0,207,8],[20,0,207,16],[24,0,207,20],[28,0,207,24],[30,0,207,26]],[[12,0,208,6],[27,0,208,21],[28,0,208,22],[35,0,208,29],[36,0,208,30],[44,0,208,38],[45,0,208,39],[46,0,208,40]],[[9,0,209,5]],[[8,0,211,4],[15,0,211,11],[19,0,211,15],[20,0,211,16],[46,0,211,42],[47,0,211,46],[62,0,211,61],[63,0,211,62],[68,0,211,67],[69,0,211,68],[70,0,211,69],[74,0,211,73],[75,0,212,6],[83,0,212,14],[84,0,212,15],[85,0,212,16],[90,0,212,36],[92,0,212,38],[94,0,212,40]],[[12,0,214,8],[16,0,214,12],[21,0,214,17],[22,0,214,18],[28,0,214,24],[32,0,214,28],[33,0,214,29],[35,0,214,31]],[[16,0,215,10],[23,0,215,17],[25,0,215,19],[26,0,215,20],[28,0,215,22],[29,0,215,23],[30,0,215,24]],[[13,0,216,9],[14,0,216,10],[78,0,216,74]],[[12,0,218,8],[65,0,218,61]],[[12,0,220,8],[18,0,220,14],[30,0,220,26],[33,0,220,61],[35,0,220,63],[36,0,220,64]],[[12,0,222,8],[17,0,222,13],[23,0,222,19],[27,0,222,23],[31,0,222,27],[36,0,222,32],[38,0,222,34]],[[16,0,224,10],[120,0,224,114]],[[16,0,225,10],[22,0,225,16],[35,0,225,29],[38,0,225,32],[42,0,225,36],[43,0,225,37],[60,0,225,54],[61,0,225,55],[64,0,225,58],[65,0,225,59],[69,0,225,63],[70,0,225,64],[76,0,225,70],[77,0,225,71],[80,0,225,74],[82,0,225,76],[95,0,225,89],[96,0,225,90],[97,0,225,91],[98,0,225,93],[117,0,225,112]],[[16,0,227,10],[22,0,227,16],[37,0,227,31],[40,0,227,34],[44,0,227,38],[45,0,227,39],[76,0,227,70],[77,0,227,71],[90,0,227,84],[92,0,227,86],[105,0,227,99],[107,0,227,101],[115,0,227,109],[116,0,227,110],[117,0,227,111],[121,0,227,115],[122,0,228,12],[125,0,228,15],[126,0,228,16],[127,0,228,17],[141,0,228,51],[143,0,228,53],[145,0,228,55]],[[20,0,229,14],[24,0,229,18],[38,0,229,32],[39,0,229,33],[45,0,229,39],[48,0,229,42],[49,0,229,43],[51,0,229,45]],[[24,0,230,16],[31,0,230,23],[33,0,230,24],[36,0,230,27],[40,0,230,31],[42,0,230,33],[43,0,230,34],[56,0,230,47],[57,0,230,48],[59,0,230,50],[73,0,230,64],[75,0,230,80],[76,0,230,81]],[[21,0,231,15]],[[25,0,231,21]],[[24,0,232,16],[31,0,232,23],[33,0,232,24],[36,0,232,27],[40,0,232,31],[42,0,232,47],[43,0,232,48]],[[21,0,233,15],[22,0,233,17],[52,0,233,47]],[[16,0,234,12],[17,0,234,13],[18,0,234,14],[19,0,235,11],[20,0,235,12]],[[16,0,236,10],[28,0,236,22],[29,0,236,23],[33,0,236,27],[34,0,236,28],[49,0,236,43],[50,0,236,44],[51,0,236,45]],[[13,0,237,9]],[[12,0,239,8],[19,0,239,15],[32,0,239,28],[33,0,239,29],[45,0,239,41],[46,0,239,42],[47,0,239,43],[51,0,239,47],[52,0,240,10],[55,0,240,13],[56,0,240,14],[59,0,240,17],[60,0,240,18],[62,0,240,20],[63,0,240,21],[70,0,240,28],[71,0,240,29],[74,0,240,32],[75,0,240,33],[78,0,240,36],[79,0,240,37],[80,0,240,38],[81,0,241,9],[82,0,241,10]],[[8,0,242,6],[9,0,242,7],[10,0,242,8],[11,0,243,5],[12,0,243,6]],[[4,0,244,2],[5,0,244,3]],[[4,0,246,2],[39,0,246,37]],[[4,0,248,2]],[],[],[],[],[],[],[],[[7,0,256,5]],[[4,0,257,9],[8,0,257,13],[9,0,258,4],[13,0,258,11],[15,0,259,4],[28,0,259,41],[30,0,260,4],[53,0,260,50],[55,0,260,52],[57,0,261,4],[70,0,261,26],[74,0,261,30],[76,0,262,4],[81,0,262,18]],[[8,0,264,4],[12,0,264,8],[17,0,264,13],[18,0,264,14],[25,0,264,21],[26,0,264,22],[30,0,264,26],[31,0,264,27],[35,0,264,31],[40,0,264,36],[44,0,264,40],[64,0,264,60],[65,0,264,61],[71,0,264,67],[74,0,264,70],[75,0,264,71],[77,0,264,73]],[[12,0,265,6],[18,0,265,12],[23,0,265,17],[26,0,265,39]],[[16,0,266,8],[20,0,266,12],[22,0,266,14],[67,0,266,59]],[[16,0,267,8],[20,0,267,12],[22,0,267,14],[31,0,267,23]],[[16,0,268,8],[23,0,268,15],[25,0,268,17],[113,0,268,105]],[[16,0,269,8],[21,0,269,13],[23,0,269,15],[25,0,269,17]],[[16,0,270,8],[20,0,270,12]],[[16,0,271,8],[36,0,271,28]],[[16,0,272,8],[21,0,272,13]],[[13,0,273,7],[14,0,273,8]],[[12,0,275,6],[18,0,275,12],[23,0,275,17],[24,0,275,18]],[[9,0,276,5]],[[8,0,278,4],[12,0,278,8],[22,0,278,18],[23,0,278,19]],[[8,0,279,4],[12,0,279,8],[26,0,279,22],[29,0,279,52],[31,0,279,54],[32,0,279,55]],[[8,0,281,4]],[],[],[[10,0,284,6]],[[8,0,285,4],[12,0,285,8],[17,0,285,13],[18,0,285,14],[25,0,285,21],[26,0,285,22],[30,0,285,26],[31,0,285,27],[35,0,285,31],[40,0,285,36],[42,0,285,38]],[[12,0,286,6],[22,0,286,16],[25,0,286,19],[29,0,286,23],[30,0,286,24]],[[9,0,287,5]],[[13,0,287,11]],[[12,0,288,6],[18,0,288,12],[23,0,288,17],[26,0,288,20],[30,0,288,24],[31,0,288,25],[71,0,288,65],[72,0,288,66],[76,0,288,70],[78,0,288,72],[98,0,288,92],[99,0,288,93],[100,0,288,94]],[[12,0,289,6],[22,0,289,16],[25,0,289,19],[30,0,289,24],[31,0,289,25],[41,0,289,35],[42,0,289,36]],[[12,0,290,6],[26,0,290,20],[29,0,290,23],[34,0,290,28],[35,0,290,29],[49,0,290,43],[50,0,290,44]],[[9,0,291,5]],[[8,0,293,4],[15,0,293,11],[19,0,293,15],[20,0,293,16],[30,0,293,26],[31,0,293,30],[41,0,293,45],[43,0,293,47],[56,0,293,60],[58,0,293,62],[68,0,293,72],[70,0,293,74],[75,0,293,79],[76,0,293,80],[77,0,293,81],[81,0,293,85]],[[8,0,294,6],[36,0,294,34]],[[8,0,295,6],[16,0,295,14],[17,0,295,15],[18,0,295,16],[29,0,295,40],[31,0,295,42],[33,0,295,44]],[[12,0,297,8],[18,0,297,14],[28,0,297,24],[31,0,297,51],[33,0,297,53],[34,0,297,54]],[[12,0,299,8],[17,0,299,13],[23,0,299,19],[24,0,299,20],[40,0,299,36],[42,0,299,38],[60,0,299,56],[61,0,299,57],[65,0,299,61],[71,0,299,67],[72,0,299,68],[79,0,299,75],[80,0,299,76],[94,0,299,90],[95,0,299,91],[97,0,299,93]],[[16,0,300,10],[20,0,300,14],[43,0,300,72],[44,0,300,73],[45,0,300,74],[84,0,300,113]],[[16,0,301,10],[20,0,301,14],[28,0,301,42],[29,0,301,43]],[[16,0,303,10],[20,0,303,14],[40,0,303,34],[42,0,303,36]],[[20,0,304,12],[43,0,304,35],[46,0,304,38],[66,0,304,58],[67,0,304,59],[71,0,304,63],[72,0,304,64],[79,0,304,71],[80,0,304,72],[82,0,304,74],[83,0,304,75],[90,0,304,82],[91,0,304,83],[95,0,304,87],[100,0,304,92],[116,0,304,108],[117,0,304,109],[119,0,304,111],[133,0,304,125],[134,0,304,126]],[[20,0,305,12],[28,0,305,20],[31,0,305,23],[51,0,305,43],[52,0,305,44],[56,0,305,48],[57,0,305,49],[64,0,305,56],[65,0,305,57],[67,0,305,59],[68,0,305,60],[75,0,305,67],[76,0,305,68],[80,0,305,72],[85,0,305,77],[101,0,305,93],[102,0,305,94],[104,0,305,96],[109,0,305,101],[110,0,305,102]],[[17,0,306,11]],[[16,0,308,10],[22,0,308,16],[38,0,308,32],[41,0,308,56],[57,0,308,72],[58,0,308,73],[69,0,308,84],[70,0,308,85],[87,0,308,102],[88,0,308,103],[91,0,308,106],[93,0,308,108],[109,0,308,124],[110,0,308,125],[111,0,308,126]],[[16,0,310,10]],[],[],[[139,0,313,133]],[[16,0,314,10],[20,0,314,14],[25,0,314,19],[26,0,314,20],[33,0,314,27],[34,0,314,28],[52,0,314,46],[53,0,314,47],[55,0,314,49]],[[20,0,315,12],[24,0,315,16],[32,0,315,24],[37,0,315,29],[46,0,315,38],[48,0,315,40],[50,0,315,42],[113,0,315,105]],[[24,0,317,14],[110,0,317,100]],[[24,0,318,14],[30,0,318,20],[39,0,318,29],[42,0,318,32],[46,0,318,36],[47,0,318,37],[51,0,318,41],[52,0,318,42],[70,0,318,60],[72,0,318,62],[88,0,318,78],[90,0,318,80],[113,0,318,103],[115,0,318,105],[125,0,318,115],[127,0,318,117],[135,0,318,125],[136,0,318,126],[137,0,318,127],[141,0,318,131],[142,0,319,16],[145,0,319,19],[146,0,319,20],[150,0,319,24],[151,0,319,25],[153,0,319,27]],[[28,0,320,18],[52,0,320,42]],[[28,0,321,18],[35,0,321,25],[37,0,321,26],[40,0,321,29],[42,0,321,31],[58,0,321,47],[60,0,321,49],[65,0,321,54],[67,0,321,56],[71,0,321,60],[73,0,321,61],[74,0,321,62],[75,0,321,63],[134,0,321,122]],[[24,0,322,16],[25,0,322,17],[26,0,322,18],[27,0,323,15],[28,0,323,16]],[[24,0,324,14],[34,0,324,24],[35,0,324,25],[39,0,324,29],[40,0,324,30],[49,0,324,39],[50,0,324,40],[51,0,324,41]],[[21,0,326,13]],[[25,0,326,19],[27,0,326,21],[96,0,326,90]],[[24,0,327,14],[42,0,327,32],[43,0,327,33],[50,0,327,40],[51,0,327,41],[52,0,327,42],[62,0,327,66],[64,0,327,68],[66,0,327,70]],[[28,0,329,16],[114,0,329,102]],[[28,0,330,16],[34,0,330,22],[43,0,330,31],[46,0,330,34],[50,0,330,38],[51,0,330,39],[55,0,330,43],[56,0,330,44],[66,0,330,54],[68,0,330,56],[84,0,330,72],[86,0,330,74],[109,0,330,97],[111,0,330,99],[121,0,330,109],[122,0,330,110],[123,0,330,111],[127,0,330,115],[128,0,331,18],[131,0,331,21],[132,0,331,22],[136,0,331,26],[137,0,331,27],[139,0,331,29]],[[32,0,332,20],[58,0,332,46]],[[32,0,333,20],[125,0,333,113]],[[32,0,334,20],[39,0,334,27],[41,0,334,28],[44,0,334,31],[46,0,334,33],[62,0,334,49],[64,0,334,51],[69,0,334,56],[71,0,334,58],[72,0,334,59],[76,0,334,63],[77,0,334,64],[79,0,334,65],[80,0,334,66]],[[28,0,335,18],[29,0,335,19],[30,0,335,20],[31,0,336,17],[32,0,336,18]],[[28,0,338,16],[38,0,338,26],[39,0,338,27],[43,0,338,31],[44,0,338,32],[53,0,338,41],[54,0,338,42],[55,0,338,43]],[[24,0,339,14],[25,0,339,15],[26,0,339,16],[27,0,339,17]],[[21,0,340,13]],[[17,0,341,11]],[[21,0,341,17],[23,0,341,19],[59,0,341,55]],[[20,0,342,12],[28,0,342,20],[31,0,342,23],[39,0,342,31],[44,0,342,36],[53,0,342,45],[54,0,342,46],[55,0,342,47],[56,0,342,48],[64,0,342,56],[65,0,342,57],[66,0,342,58],[67,0,342,59],[71,0,342,63],[72,0,342,64],[84,0,342,76],[85,0,342,77]],[[20,0,344,12],[106,0,344,98]],[[20,0,345,12],[26,0,345,18],[35,0,345,27],[38,0,345,30],[42,0,345,34],[43,0,345,35],[47,0,345,39],[48,0,345,40],[66,0,345,58],[68,0,345,60],[84,0,345,76],[86,0,345,78],[109,0,345,101],[111,0,345,103],[121,0,345,113],[123,0,345,115],[131,0,345,123],[132,0,345,124],[133,0,345,125],[137,0,345,129],[138,0,346,14],[141,0,346,17],[142,0,346,18],[146,0,346,22],[147,0,346,23],[149,0,346,25]],[[24,0,347,16],[48,0,347,40]],[[24,0,348,16],[31,0,348,23],[33,0,348,24],[36,0,348,27],[38,0,348,29],[54,0,348,45],[56,0,348,47],[61,0,348,52],[63,0,348,54],[67,0,348,58],[69,0,348,59],[70,0,348,60],[71,0,348,61],[130,0,348,120]],[[20,0,349,14],[21,0,349,15],[22,0,349,16],[23,0,350,13],[24,0,350,14]],[[20,0,352,12],[30,0,352,22],[31,0,352,23],[35,0,352,27],[36,0,352,28],[45,0,352,37],[46,0,352,38],[47,0,352,39]],[[17,0,353,11]],[[13,0,354,9],[14,0,354,10],[36,0,354,32]],[[12,0,356,8],[16,0,356,12],[26,0,356,22],[27,0,356,23],[33,0,356,29],[36,0,356,32],[37,0,356,33],[39,0,356,35],[41,0,356,37],[113,0,356,109]],[[16,0,358,10],[89,0,358,83]],[[16,0,359,10],[23,0,359,17],[36,0,359,30],[37,0,359,31],[47,0,359,41],[48,0,359,42],[49,0,359,43],[53,0,359,47]],[[16,0,360,12],[48,0,360,44]],[[16,0,362,12],[139,0,362,135]],[[16,0,363,12],[141,0,363,137]],[[16,0,364,12],[34,0,364,30]],[[16,0,366,12],[19,0,366,15],[20,0,366,16],[21,0,366,17],[29,0,366,49],[31,0,366,51],[33,0,366,53]],[[20,0,367,14],[26,0,367,20],[37,0,367,31],[40,0,367,34],[42,0,367,36],[43,0,367,37]],[[20,0,369,14],[28,0,369,22],[29,0,369,23],[36,0,369,30],[37,0,369,31],[38,0,369,32],[41,0,369,61],[43,0,369,63],[45,0,369,65]],[[24,0,371,16],[30,0,371,22],[33,0,371,25],[36,0,371,28],[39,0,371,31],[40,0,371,32],[43,0,371,35],[44,0,371,36]],[[24,0,372,16],[30,0,372,22],[35,0,372,27],[38,0,372,30],[41,0,372,33],[42,0,372,34],[47,0,372,39],[48,0,372,40]],[[24,0,374,16],[126,0,374,118]],[[24,0,375,16],[37,0,375,29]],[[24,0,376,16],[28,0,376,20],[39,0,376,31],[40,0,376,32],[54,0,376,46],[55,0,376,47],[58,0,376,50],[59,0,376,51],[63,0,376,55],[68,0,376,60],[69,0,376,61],[76,0,376,68],[77,0,376,69],[88,0,376,80],[89,0,376,81],[92,0,376,84],[93,0,376,85],[94,0,376,86],[96,0,376,88]],[[28,0,377,18],[123,0,377,113]],[[28,0,378,18],[41,0,378,31]],[[28,0,379,19],[39,0,379,30],[40,0,379,31],[43,0,379,34],[44,0,379,50],[45,0,379,51],[49,0,379,55],[50,0,379,56],[55,0,379,61],[56,0,379,62],[57,0,379,63],[58,0,379,64],[59,0,379,65],[60,0,379,66]],[[25,0,380,17]],[[29,0,380,23]],[[28,0,381,18],[41,0,381,31]],[[28,0,382,18],[39,0,382,29],[40,0,382,30],[43,0,382,33],[44,0,382,34],[47,0,382,37],[52,0,382,42],[53,0,382,43]],[[25,0,383,17]],[[20,0,384,14],[21,0,384,15],[22,0,384,16],[23,0,384,17]],[[20,0,386,14],[27,0,386,21],[38,0,386,37],[39,0,386,38]],[[16,0,387,12],[17,0,387,13],[18,0,387,14]],[[16,0,389,12],[64,0,389,60]],[[16,0,391,12],[19,0,391,15],[20,0,391,16],[21,0,391,17],[32,0,391,31],[34,0,391,33],[36,0,391,35]],[[20,0,392,14],[27,0,392,21],[29,0,392,22],[32,0,392,25],[43,0,392,36],[45,0,392,38],[48,0,392,41],[59,0,392,52],[61,0,392,58],[62,0,392,59]],[[16,0,393,12],[17,0,393,13],[18,0,393,14],[19,0,395,11],[20,0,395,12]],[[13,0,396,9]],[[17,0,396,15]],[[16,0,397,10],[23,0,397,17],[25,0,397,19],[26,0,397,20],[37,0,397,31],[38,0,397,32],[39,0,397,33]],[[13,0,398,9]],[[8,0,399,6],[9,0,399,7],[10,0,399,8],[11,0,400,5],[12,0,400,6],[16,0,400,10]],[[8,0,401,6],[21,0,401,19]],[[8,0,402,6],[12,0,402,10],[13,0,402,11],[14,0,402,12],[15,0,402,13],[16,0,403,5],[17,0,403,6]],[[4,0,404,2],[5,0,404,3]],[[4,0,406,2],[41,0,406,39]],[[4,0,408,2]],[],[],[],[],[],[],[],[],[],[[7,0,418,5]],[[4,0,419,9],[11,0,419,16],[12,0,419,53],[16,0,419,69],[18,0,420,53],[24,0,420,78],[26,0,421,53],[49,0,421,99],[51,0,421,101],[53,0,422,53],[73,0,422,82],[77,0,422,86]],[[8,0,424,4],[12,0,424,8],[32,0,424,28],[36,0,424,32],[40,0,424,36],[44,0,424,40],[64,0,424,60],[65,0,424,61],[71,0,424,67],[76,0,424,72],[77,0,424,73],[79,0,424,75]],[[12,0,425,6],[19,0,425,13],[23,0,425,17],[24,0,425,18],[37,0,425,31],[38,0,425,32],[42,0,425,36],[44,0,425,38],[50,0,425,44],[52,0,425,46],[69,0,425,63],[70,0,425,64],[71,0,425,65],[72,0,425,66],[125,0,425,119]],[[9,0,426,5]],[[8,0,428,4],[14,0,428,10],[19,0,428,15],[22,0,428,18],[26,0,428,22],[27,0,428,23],[50,0,428,46],[51,0,428,47],[55,0,428,51],[57,0,428,53],[63,0,428,59],[65,0,428,61],[85,0,428,81],[87,0,428,83],[104,0,428,100],[105,0,428,101],[106,0,428,102]],[[8,0,429,4],[15,0,429,11],[19,0,429,15],[20,0,429,16],[32,0,429,28],[33,0,429,29],[38,0,429,34],[39,0,429,35],[40,0,429,36]],[[4,0,430,2],[5,0,430,3]],[[4,0,432,2]],[],[],[],[],[],[[7,0,438,5]],[[4,0,439,9],[19,0,439,24],[20,0,439,28],[27,0,439,56],[29,0,439,58],[33,0,439,65],[35,0,439,67],[55,0,439,96],[59,0,439,100]],[[8,0,440,4],[65,0,440,61]],[[8,0,441,4],[14,0,441,10],[19,0,441,15],[22,0,441,30],[32,0,441,40],[33,0,441,41],[37,0,441,45],[38,0,441,46],[40,0,441,48],[41,0,441,49],[50,0,441,58],[51,0,441,59],[52,0,441,60]],[[8,0,443,4],[12,0,443,8],[29,0,443,25],[31,0,443,27]],[[12,0,444,6],[16,0,444,10],[19,0,444,13],[34,0,444,28],[35,0,444,29],[39,0,444,33],[41,0,444,35],[46,0,444,40],[47,0,444,41],[48,0,444,42]],[[9,0,445,5]],[[8,0,447,4],[15,0,447,11],[16,0,447,12],[23,0,447,19],[24,0,447,20],[25,0,447,21],[31,0,447,27],[33,0,447,29],[35,0,447,31]],[[12,0,448,6],[17,0,448,11],[18,0,448,12],[24,0,448,18],[25,0,448,19],[31,0,448,25],[33,0,448,27],[37,0,448,31],[38,0,448,32],[39,0,448,33]],[[8,0,449,4],[9,0,449,5],[10,0,449,6],[11,0,449,7]],[[8,0,451,4],[15,0,451,11],[19,0,451,15],[20,0,451,16],[32,0,451,28],[33,0,451,29],[38,0,451,34],[39,0,451,35],[40,0,451,36]],[[4,0,452,2],[5,0,452,3]],[[4,0,455,2]],[],[],[],[],[],[],[],[],[[7,0,464,5]],[[4,0,465,9],[16,0,465,21],[17,0,465,25],[23,0,465,50],[25,0,466,25],[30,0,466,38],[32,0,467,25],[55,0,467,70],[57,0,467,72],[59,0,468,25],[79,0,468,69]],[[8,0,470,4],[12,0,470,8],[32,0,470,28],[36,0,470,32],[40,0,470,36],[42,0,470,38]],[[12,0,471,6],[32,0,471,26],[35,0,471,29],[55,0,471,74],[56,0,471,75]],[[9,0,472,5]],[[8,0,474,4],[14,0,474,10],[27,0,474,23],[30,0,474,47],[36,0,474,53],[37,0,474,54],[43,0,474,60],[44,0,474,61]],[[8,0,476,4],[15,0,476,11],[19,0,476,15],[20,0,476,16],[33,0,476,29],[34,0,476,30],[40,0,476,36],[42,0,476,38],[62,0,476,58],[63,0,476,59],[64,0,476,60],[68,0,476,64]],[[8,0,477,6],[21,0,477,19]],[[8,0,478,6],[12,0,478,10],[13,0,478,11],[14,0,478,12],[15,0,478,13],[17,0,479,6],[20,0,479,9],[21,0,479,10],[22,0,479,11],[29,0,479,21],[31,0,479,23],[33,0,479,25],[34,0,479,26],[38,0,479,30],[39,0,479,31],[58,0,479,50],[59,0,479,51],[66,0,479,58],[68,0,479,60],[88,0,479,80],[89,0,479,81],[90,0,479,82],[92,0,480,6],[101,0,480,15],[102,0,480,16],[103,0,480,17],[110,0,480,27],[112,0,480,29],[114,0,480,31]],[[12,0,481,8],[19,0,481,15],[23,0,481,19],[24,0,481,20],[28,0,481,24],[29,0,481,25],[36,0,481,32],[38,0,481,34],[51,0,481,47],[53,0,481,49],[73,0,481,69],[75,0,481,71],[80,0,481,76],[82,0,481,78],[87,0,481,83],[88,0,481,84],[89,0,481,85],[93,0,481,89],[94,0,481,91],[120,0,481,117],[121,0,482,10],[129,0,482,18],[130,0,482,19],[137,0,482,26],[138,0,482,27],[140,0,482,29]],[[16,0,483,12],[23,0,483,19],[27,0,483,23],[28,0,483,24],[35,0,483,31],[36,0,483,32],[42,0,483,38],[44,0,483,40],[64,0,483,60],[65,0,483,61],[66,0,483,62],[70,0,483,66],[71,0,484,14],[74,0,484,17],[75,0,484,18],[78,0,484,21],[80,0,484,23],[81,0,484,24],[88,0,484,31],[89,0,484,32],[90,0,484,33],[113,0,484,56],[114,0,485,13],[115,0,485,14]],[[12,0,486,10],[13,0,486,11],[14,0,486,12],[15,0,487,9],[16,0,487,10]],[[8,0,488,6],[9,0,488,7],[10,0,488,8],[12,0,489,6],[22,0,489,16],[23,0,489,17],[26,0,489,20],[27,0,489,21],[29,0,489,23]],[[12,0,490,8],[19,0,490,15],[20,0,490,16],[23,0,490,19],[24,0,490,20],[51,0,490,47],[54,0,490,50],[57,0,490,53],[58,0,490,54],[59,0,490,55]],[[12,0,491,8],[18,0,491,14],[21,0,491,17],[22,0,491,18]],[[8,0,492,6],[9,0,492,7],[10,0,492,8],[12,0,493,6],[16,0,493,10],[17,0,493,11],[18,0,493,12],[19,0,493,13],[20,0,494,5],[21,0,494,6]],[[4,0,496,2],[5,0,496,3]],[[4,0,498,2],[28,0,498,26]],[[4,0,501,2]],[],[],[],[],[],[],[],[],[[7,0,510,5]],[[4,0,511,9],[20,0,511,25],[21,0,511,55],[26,0,511,80],[28,0,512,55],[37,0,512,72],[39,0,513,55],[46,0,513,70],[48,0,514,55],[55,0,514,62],[58,0,514,65],[63,0,514,70]],[[8,0,516,4],[12,0,516,8],[21,0,516,17],[25,0,516,21],[29,0,516,25],[33,0,516,29],[40,0,516,36],[44,0,516,40],[48,0,516,44],[52,0,516,48],[61,0,516,57],[66,0,516,62],[73,0,516,69],[77,0,516,73],[82,0,516,78],[83,0,516,79],[89,0,516,85],[93,0,516,89],[94,0,516,90],[96,0,516,92],[98,0,516,94],[130,0,516,126]],[[12,0,517,6],[19,0,517,13],[21,0,517,15],[23,0,517,17],[24,0,517,18]],[[9,0,518,5]],[[8,0,520,4],[12,0,520,8],[17,0,520,13],[18,0,520,14],[19,0,520,15],[20,0,520,16],[22,0,520,18],[39,0,520,35],[43,0,520,39],[47,0,520,43],[49,0,520,45]],[[12,0,521,6],[18,0,521,12],[23,0,521,17],[26,0,521,39]],[[16,0,522,8],[20,0,522,12],[22,0,522,14],[75,0,522,67]],[[16,0,523,8],[20,0,523,12],[22,0,523,14],[33,0,523,25]],[[16,0,524,8],[23,0,524,15],[25,0,524,17],[124,0,524,116]],[[13,0,525,7],[14,0,525,8]],[[12,0,526,6],[18,0,526,12],[23,0,526,17],[24,0,526,18]],[[9,0,527,5]],[[8,0,529,4],[14,0,529,10],[19,0,529,15],[22,0,529,18],[26,0,529,22],[27,0,529,23],[60,0,529,56],[61,0,529,57],[66,0,529,62],[68,0,529,64],[77,0,529,73],[79,0,529,75],[86,0,529,82],[88,0,529,84],[95,0,529,91],[96,0,529,92],[97,0,529,93]],[[8,0,531,4],[15,0,531,11],[19,0,531,15],[20,0,531,16],[32,0,531,28],[33,0,531,29],[38,0,531,34],[39,0,531,35],[40,0,531,36]],[[4,0,532,2],[5,0,532,3]],[[4,0,534,2]],[],[],[],[],[],[],[],[],[[7,0,543,5]],[[4,0,544,12],[37,0,544,45],[38,0,544,75],[43,0,544,100],[45,0,545,75],[54,0,545,92],[56,0,546,75],[63,0,546,90],[65,0,547,75],[72,0,547,82],[75,0,547,85],[80,0,547,90]],[[8,0,549,4],[14,0,549,10],[25,0,549,21],[28,0,549,24],[32,0,549,28],[33,0,549,29],[36,0,549,32],[37,0,549,33],[46,0,549,42],[48,0,549,44],[55,0,549,51],[56,0,549,52],[57,0,549,53]],[[8,0,550,4],[14,0,550,10],[19,0,550,15],[22,0,550,30],[32,0,550,40],[33,0,550,41],[37,0,550,45],[38,0,550,46],[40,0,550,48],[41,0,550,49],[50,0,550,58],[51,0,550,59],[52,0,550,60]],[[8,0,552,4],[12,0,552,8],[21,0,552,17],[25,0,552,21],[29,0,552,25],[33,0,552,29],[40,0,552,36],[44,0,552,40],[48,0,552,44],[52,0,552,48],[61,0,552,57],[66,0,552,62],[73,0,552,69],[75,0,552,71],[77,0,552,73],[109,0,552,105]],[[12,0,553,6],[19,0,553,13],[24,0,553,18],[25,0,553,19]],[[9,0,554,5]],[[8,0,556,4],[12,0,556,8],[21,0,556,37],[22,0,556,38]],[[8,0,558,4],[12,0,558,8],[19,0,558,15],[21,0,558,17]],[[12,0,559,6],[21,0,559,15],[24,0,559,18],[30,0,559,24],[31,0,559,25],[37,0,559,31],[38,0,559,32],[40,0,559,34],[42,0,559,36],[47,0,559,41],[48,0,559,42],[49,0,559,43]],[[9,0,560,5]],[[13,0,560,11]],[[12,0,561,6],[21,0,561,15],[24,0,561,18],[29,0,561,23],[30,0,561,24]],[[9,0,562,5]],[[8,0,564,4],[23,0,564,19],[24,0,564,23],[33,0,564,32],[35,0,564,34],[44,0,564,43],[46,0,564,45],[53,0,564,52],[54,0,564,53],[55,0,564,54]],[[8,0,566,4],[14,0,566,10],[31,0,566,27],[34,0,566,50],[43,0,566,59],[44,0,566,60],[49,0,566,65],[50,0,566,66],[61,0,566,77],[62,0,566,78],[63,0,566,79]],[[8,0,568,4],[12,0,568,8],[13,0,568,9],[16,0,568,12],[27,0,568,23],[28,0,568,24]],[[8,0,569,4],[13,0,569,9],[19,0,569,15],[23,0,569,19],[27,0,569,23],[44,0,569,40],[46,0,569,42]],[[12,0,570,6],[16,0,570,10],[17,0,570,11],[24,0,570,18],[26,0,570,20],[28,0,570,22],[103,0,570,97]],[[16,0,571,8],[20,0,571,12],[21,0,571,13],[26,0,571,18],[29,0,571,21],[30,0,571,22],[31,0,571,23]],[[13,0,572,7]],[[12,0,573,6],[18,0,573,12],[21,0,573,15],[24,0,573,18],[38,0,573,32],[39,0,573,33],[43,0,573,37],[44,0,573,38],[61,0,573,55],[62,0,573,56],[66,0,573,60],[68,0,573,62],[72,0,573,66],[73,0,573,67],[75,0,573,69],[76,0,573,70],[85,0,573,79],[86,0,573,101],[87,0,573,102]],[[12,0,574,6],[17,0,574,11],[18,0,574,12],[24,0,574,18],[25,0,574,19],[28,0,574,22],[30,0,574,24],[32,0,574,25],[37,0,574,30],[39,0,574,32],[40,0,574,33],[42,0,574,34],[43,0,574,35],[44,0,574,36]],[[12,0,575,6],[13,0,575,7],[15,0,575,9],[16,0,575,10]],[[9,0,576,5]],[[8,0,578,4],[15,0,578,11],[20,0,578,16],[21,0,578,17]],[[4,0,579,2],[5,0,579,3]],[[4,0,581,2]],[],[],[],[],[],[],[[7,0,588,5]],[[4,0,589,9],[29,0,589,34],[30,0,589,64],[35,0,589,89],[37,0,590,64],[50,0,590,85],[52,0,591,64],[75,0,591,109],[77,0,591,111],[79,0,592,64],[89,0,592,83],[94,0,592,88]],[[8,0,594,4],[12,0,594,8],[21,0,594,37],[22,0,594,38]],[[8,0,596,4],[12,0,596,8],[19,0,596,15],[21,0,596,17]],[[12,0,597,6],[21,0,597,15],[24,0,597,18],[30,0,597,24],[31,0,597,25],[37,0,597,31],[38,0,597,32],[40,0,597,34],[42,0,597,36],[47,0,597,41],[48,0,597,42],[49,0,597,43]],[[9,0,598,5]],[[13,0,598,11]],[[12,0,599,6],[21,0,599,15],[24,0,599,18],[29,0,599,23],[30,0,599,24]],[[9,0,600,5]],[[8,0,602,4],[14,0,602,10],[26,0,602,22],[29,0,602,25],[38,0,602,34],[39,0,602,35],[52,0,602,48],[53,0,602,49],[54,0,602,50]],[[8,0,604,4],[82,0,604,78]],[[8,0,605,4],[15,0,605,11],[19,0,605,15],[20,0,605,16],[35,0,605,31],[36,0,605,32],[48,0,605,44],[49,0,605,45],[66,0,605,62],[67,0,605,63],[70,0,605,66],[72,0,605,68],[92,0,605,88],[93,0,605,89],[94,0,605,90],[98,0,605,94],[99,0,606,6],[102,0,606,9],[103,0,606,10],[104,0,606,11],[109,0,606,16],[111,0,606,18],[113,0,606,20]],[[12,0,607,8],[101,0,607,97]],[[12,0,608,8],[21,0,608,17],[22,0,608,18],[26,0,608,22],[27,0,608,23],[31,0,608,27],[32,0,608,28],[34,0,608,30],[35,0,608,31],[39,0,608,35],[40,0,608,36],[45,0,608,41],[46,0,608,42],[47,0,608,43],[48,0,608,44],[85,0,608,81]],[[12,0,609,8],[21,0,609,17],[22,0,609,18],[28,0,609,24],[29,0,609,25],[42,0,609,38],[44,0,609,40],[45,0,609,41],[46,0,609,42],[47,0,609,43]],[[12,0,611,8],[16,0,611,12],[17,0,611,13],[54,0,611,50],[55,0,611,54],[64,0,611,63],[66,0,611,65],[71,0,611,70],[72,0,611,71],[73,0,611,72]],[[12,0,613,8],[19,0,613,15],[24,0,613,20],[25,0,613,21]],[[8,0,614,6],[9,0,614,7],[10,0,614,8],[12,0,616,6],[21,0,616,15],[22,0,616,16],[23,0,616,17],[28,0,616,22],[30,0,616,24],[32,0,616,26],[33,0,616,27],[37,0,616,31],[38,0,616,32],[50,0,616,44],[51,0,616,45],[56,0,616,50],[57,0,616,51],[58,0,616,52],[59,0,617,5],[60,0,617,6]],[[4,0,618,2],[5,0,618,3]],[[4,0,620,2]],[],[],[],[],[],[],[[7,0,627,5]],[[4,0,628,9],[30,0,628,35],[31,0,628,65],[36,0,628,90],[38,0,629,65],[53,0,629,90],[55,0,630,65],[78,0,630,110],[80,0,630,112],[82,0,631,65],[92,0,631,84],[97,0,631,89]],[[8,0,633,4],[12,0,633,8],[21,0,633,37],[22,0,633,38]],[[8,0,635,4],[12,0,635,8],[19,0,635,15],[21,0,635,17]],[[12,0,636,6],[21,0,636,15],[24,0,636,18],[30,0,636,24],[31,0,636,25],[37,0,636,31],[38,0,636,32],[40,0,636,34],[42,0,636,36],[47,0,636,41],[48,0,636,42],[49,0,636,43]],[[9,0,637,5]],[[13,0,637,11]],[[12,0,638,6],[21,0,638,15],[24,0,638,18],[29,0,638,23],[30,0,638,24]],[[9,0,639,5]],[[8,0,641,4],[17,0,641,13],[18,0,641,14],[22,0,641,18],[23,0,641,19],[27,0,641,23],[28,0,641,24],[30,0,641,26],[31,0,641,27],[35,0,641,31],[36,0,641,32],[41,0,641,37],[42,0,641,38],[43,0,641,39],[44,0,641,40],[81,0,641,77]],[[8,0,643,4],[14,0,643,10],[27,0,643,23],[30,0,643,26],[39,0,643,35],[40,0,643,36],[46,0,643,42],[47,0,643,43],[48,0,643,44],[52,0,643,48],[54,0,643,50],[55,0,643,51],[57,0,643,53],[59,0,643,55]],[[12,0,644,6],[19,0,644,13],[34,0,644,28],[35,0,644,29],[44,0,644,38],[45,0,644,39],[47,0,644,41],[48,0,644,42],[50,0,644,44],[51,0,644,45],[53,0,644,47],[58,0,644,52],[59,0,644,53],[60,0,644,54],[65,0,644,59],[66,0,644,60],[67,0,644,61],[68,0,644,62]],[[8,0,645,4],[9,0,645,5],[10,0,645,6],[11,0,645,7]],[[8,0,647,4],[62,0,647,58]],[[8,0,648,4],[52,0,648,48]],[[8,0,649,4],[23,0,649,19],[24,0,649,20],[28,0,649,24],[30,0,649,26],[31,0,649,27]],[[8,0,650,4],[13,0,650,9],[17,0,650,13],[18,0,650,14],[21,0,650,17],[36,0,650,32],[37,0,650,33],[43,0,650,39],[46,0,650,42],[47,0,650,43],[49,0,650,45],[50,0,650,46],[54,0,650,50],[55,0,650,51],[57,0,650,53],[58,0,650,54],[60,0,650,56],[62,0,650,58]],[[12,0,651,6],[21,0,651,15],[22,0,651,16],[28,0,651,22],[29,0,651,23],[44,0,651,38],[45,0,651,39],[46,0,651,40],[47,0,651,41],[49,0,651,43],[50,0,651,44],[51,0,651,45],[52,0,651,46]],[[9,0,652,5]],[[8,0,654,4],[14,0,654,10],[25,0,654,21],[28,0,654,59],[30,0,654,61],[31,0,654,62]],[[8,0,656,4],[91,0,656,87]],[[8,0,657,4],[21,0,657,17],[22,0,657,18],[29,0,657,25],[30,0,657,26],[42,0,657,38],[43,0,657,39],[45,0,657,41]],[[12,0,659,6],[18,0,659,12],[22,0,659,16],[25,0,659,19],[29,0,659,23],[30,0,659,24],[56,0,659,50],[57,0,659,51],[69,0,659,63],[70,0,659,64],[87,0,659,81],[88,0,659,82],[91,0,659,85],[93,0,659,87],[113,0,659,107],[114,0,659,108],[115,0,659,109],[119,0,659,113],[120,0,660,8],[124,0,660,12],[125,0,660,13],[126,0,660,14],[127,0,660,15],[128,0,661,7],[129,0,661,8]],[[12,0,662,6],[23,0,662,17],[24,0,662,18],[28,0,662,22],[29,0,662,23],[33,0,662,27],[34,0,662,28],[35,0,662,29]],[[8,0,663,4],[9,0,663,5],[10,0,663,6],[11,0,663,7]],[[8,0,666,4],[15,0,666,11],[23,0,666,19],[24,0,666,20],[35,0,666,31],[36,0,666,32],[37,0,666,33],[41,0,666,37],[42,0,667,6],[46,0,667,10],[47,0,667,11],[48,0,667,12],[49,0,667,13],[51,0,668,6],[54,0,668,9],[55,0,668,10],[56,0,668,11],[69,0,668,24],[71,0,668,26],[73,0,668,28]],[[12,0,669,8],[78,0,669,74]],[[12,0,670,8],[16,0,670,12],[23,0,670,19],[26,0,670,43],[28,0,670,45],[29,0,670,46]],[[12,0,672,8],[25,0,672,21],[26,0,672,22],[33,0,672,29],[34,0,672,30],[38,0,672,34],[39,0,672,35],[41,0,672,37]],[[16,0,673,10],[23,0,673,17],[26,0,673,20],[33,0,673,27],[34,0,673,28],[40,0,673,34],[41,0,673,35],[45,0,673,39],[46,0,673,40],[47,0,673,41]],[[12,0,674,8],[13,0,674,9],[14,0,674,10],[15,0,674,11]],[[12,0,676,8],[19,0,676,15],[26,0,676,22],[27,0,676,23]],[[8,0,677,6],[9,0,677,7],[10,0,677,8],[12,0,678,6],[15,0,678,9],[16,0,678,10],[17,0,678,11],[24,0,678,53],[26,0,678,55],[28,0,678,57],[29,0,678,58],[33,0,678,62],[34,0,678,63],[62,0,678,91],[63,0,678,92],[70,0,678,99],[71,0,678,100],[72,0,678,101],[74,0,679,6],[77,0,679,9],[78,0,679,10],[79,0,679,11],[84,0,679,28],[86,0,679,30],[88,0,679,32],[89,0,679,33],[93,0,679,37],[94,0,679,38],[131,0,679,75],[132,0,679,79],[141,0,679,88],[143,0,679,90],[148,0,679,95],[149,0,679,96],[150,0,679,97],[152,0,680,6],[161,0,680,15],[162,0,680,16],[163,0,680,17],[168,0,680,22],[170,0,680,24],[172,0,680,26],[173,0,680,27],[177,0,680,31],[178,0,680,32],[190,0,680,44],[191,0,680,45],[196,0,680,50],[197,0,680,51],[198,0,680,52],[199,0,681,5],[200,0,681,6]],[[4,0,682,2],[5,0,682,3]],[[4,0,684,2]],[],[],[],[],[],[],[],[[7,0,692,5]],[[4,0,693,12],[41,0,693,49],[42,0,694,4],[47,0,694,29],[49,0,695,4],[57,0,695,24],[67,0,695,34],[68,0,695,35],[72,0,695,39],[73,0,695,40],[75,0,695,42],[76,0,695,43],[85,0,695,52],[86,0,695,53]],[[8,0,698,4],[13,0,698,9],[14,0,698,10],[21,0,698,17],[22,0,698,18],[23,0,698,19],[27,0,698,23],[29,0,698,25],[34,0,698,30],[36,0,698,32],[38,0,698,34]],[[12,0,699,6],[16,0,699,10],[20,0,699,14],[21,0,699,15],[26,0,699,20],[31,0,699,25],[36,0,699,30],[38,0,699,32]],[[16,0,700,8],[20,0,700,12],[21,0,700,13],[26,0,700,18],[29,0,700,21],[34,0,700,26],[35,0,700,27],[36,0,700,28],[111,0,700,103]],[[16,0,701,8],[22,0,701,14],[25,0,701,17],[28,0,701,20],[42,0,701,34],[43,0,701,35],[47,0,701,39],[48,0,701,40],[65,0,701,57],[66,0,701,58],[70,0,701,62],[72,0,701,64],[76,0,701,68],[77,0,701,69],[79,0,701,71],[80,0,701,72],[89,0,701,81],[90,0,701,103],[91,0,701,104]],[[16,0,702,8],[21,0,702,13],[22,0,702,14],[28,0,702,20],[29,0,702,21],[32,0,702,24],[34,0,702,26],[36,0,702,27],[41,0,702,32],[43,0,702,33],[44,0,702,34],[45,0,702,35]],[[13,0,703,7]],[[8,0,704,4],[9,0,704,5],[10,0,704,6],[11,0,704,7]],[[8,0,706,4],[15,0,706,11],[20,0,706,16],[21,0,706,17]],[[4,0,707,2],[5,0,707,3]],[[4,0,709,9],[29,0,709,34],[30,0,710,4],[43,0,710,37],[45,0,711,4],[57,0,711,36],[59,0,712,4],[72,0,712,25],[74,0,713,4],[86,0,713,24],[88,0,714,4],[104,0,714,28],[106,0,715,4],[137,0,715,60],[139,0,716,4],[170,0,716,35],[173,0,716,38],[177,0,716,42],[179,0,717,4],[186,0,717,11],[189,0,717,14],[194,0,717,19]],[[8,0,719,4],[14,0,719,10],[19,0,719,15],[22,0,719,30],[26,0,719,34],[27,0,719,35],[64,0,719,72],[65,0,719,73],[78,0,719,86],[80,0,720,6],[92,0,720,18],[94,0,721,6],[107,0,721,19],[109,0,722,6],[121,0,722,18],[123,0,723,6],[139,0,723,22],[141,0,724,6],[172,0,724,37],[174,0,725,6],[205,0,725,37],[207,0,726,6],[214,0,726,13],[215,0,726,14],[216,0,726,15]],[[8,0,728,4],[15,0,728,11],[19,0,728,15],[20,0,728,16],[32,0,728,28],[33,0,728,29],[38,0,728,34],[39,0,728,35],[40,0,728,36]],[[4,0,729,2],[5,0,729,3]],[[4,0,732,2],[43,0,732,41]],[[4,0,734,2]],[],[],[],[],[[7,0,739,5]],[[4,0,740,9],[11,0,740,16],[12,0,740,17],[18,0,740,42],[20,0,740,44],[43,0,740,89],[45,0,740,91]],[[8,0,742,4],[12,0,742,8],[32,0,742,28],[36,0,742,32],[40,0,742,36],[44,0,742,40],[64,0,742,60],[65,0,742,61],[71,0,742,67],[76,0,742,72],[77,0,742,73],[79,0,742,75]],[[12,0,743,6],[54,0,743,48]],[[12,0,744,6],[19,0,744,13],[23,0,744,17],[24,0,744,18],[26,0,744,20],[27,0,744,21],[33,0,744,27],[34,0,744,28],[40,0,744,34],[41,0,744,35],[42,0,744,36]],[[9,0,745,5]],[[8,0,747,4],[15,0,747,11],[19,0,747,15],[20,0,747,16],[46,0,747,42],[47,0,747,43],[53,0,747,49],[55,0,747,51],[75,0,747,71],[76,0,747,72],[77,0,747,73],[81,0,747,77],[82,0,748,6],[91,0,748,15],[92,0,748,16],[93,0,748,17],[103,0,748,62],[105,0,748,64],[107,0,748,66],[108,0,748,67],[112,0,748,71],[113,0,748,72],[134,0,748,93],[135,0,748,94],[145,0,748,104],[146,0,748,105],[147,0,748,106],[148,0,753,5],[149,0,753,6]],[[4,0,754,2],[5,0,754,3]],[[4,0,756,2]],[],[],[],[],[],[[7,0,762,5]],[[4,0,763,9],[19,0,763,24],[20,0,763,25],[26,0,763,50],[28,0,764,25],[51,0,764,70],[53,0,764,72],[55,0,765,25],[63,0,765,45],[73,0,765,55],[74,0,765,56],[78,0,765,60],[79,0,765,61],[81,0,765,63],[82,0,765,64],[91,0,765,73],[92,0,765,74]],[[8,0,767,4],[12,0,767,8],[32,0,767,28],[36,0,767,32],[40,0,767,36],[44,0,767,40],[64,0,767,60],[65,0,767,61],[71,0,767,67],[76,0,767,72],[77,0,767,73],[79,0,767,75]],[[12,0,768,6],[54,0,768,48]],[[12,0,769,6],[17,0,769,11],[18,0,769,12],[24,0,769,18],[25,0,769,19],[31,0,769,25],[32,0,769,26],[33,0,769,27]],[[12,0,770,6],[19,0,770,13],[21,0,770,15],[22,0,770,16],[27,0,770,21],[28,0,770,22],[29,0,770,23]],[[9,0,771,5]],[[8,0,773,4],[15,0,773,11],[19,0,773,15],[20,0,773,16],[46,0,773,42],[47,0,773,43],[53,0,773,49],[55,0,773,51],[75,0,773,71],[76,0,773,72],[77,0,773,73],[81,0,773,77],[82,0,774,6],[85,0,774,9],[86,0,774,10],[87,0,774,11],[94,0,774,53],[96,0,774,55],[98,0,774,57],[99,0,774,58],[103,0,774,62],[104,0,774,63],[132,0,774,91],[133,0,774,92],[140,0,774,99],[141,0,774,100],[142,0,774,101],[144,0,775,6],[148,0,775,10],[149,0,775,11],[150,0,775,12],[151,0,775,13],[152,0,776,5],[153,0,776,6]],[[4,0,777,2],[5,0,777,3]],[[4,0,779,9],[26,0,779,31],[27,0,779,32],[35,0,779,50]],[[8,0,780,4],[14,0,780,10],[21,0,780,17],[24,0,781,6],[32,0,781,14],[33,0,781,15],[36,0,781,18],[37,0,781,19],[41,0,781,23],[42,0,781,24],[44,0,781,26],[45,0,781,27],[59,0,781,41],[60,0,781,42],[64,0,781,46],[66,0,781,48],[70,0,781,52],[71,0,781,53],[73,0,781,55],[74,0,781,56],[83,0,781,65],[84,0,781,87],[85,0,781,88],[86,0,781,89]],[[8,0,783,4],[15,0,783,11],[19,0,783,15],[20,0,783,16],[41,0,783,37],[42,0,783,38],[49,0,783,45],[50,0,783,46],[51,0,783,47]],[[4,0,784,2],[5,0,784,3]],[[4,0,786,2]],[],[],[],[],[[7,0,791,5]],[[4,0,792,9],[19,0,792,24],[20,0,792,25],[27,0,792,53],[29,0,792,55],[52,0,792,100],[54,0,792,102]],[[8,0,794,4],[12,0,794,8],[32,0,794,28],[36,0,794,32],[40,0,794,36],[44,0,794,40],[64,0,794,60],[65,0,794,61],[71,0,794,67],[76,0,794,72],[77,0,794,73],[79,0,794,75]],[[12,0,795,6],[19,0,795,13],[23,0,795,17],[24,0,795,18],[45,0,795,39],[46,0,795,40],[53,0,795,47],[54,0,795,48],[55,0,795,49]],[[9,0,796,5]],[[8,0,798,4],[14,0,798,10],[26,0,798,22],[29,0,798,49],[31,0,798,51],[32,0,798,52]],[[8,0,800,4],[15,0,800,11],[16,0,800,12],[23,0,800,19],[24,0,800,20],[30,0,800,26],[31,0,800,27],[33,0,800,29]],[[12,0,801,6],[18,0,801,12],[26,0,801,20],[29,0,801,23],[33,0,801,27],[34,0,801,28],[60,0,801,54],[61,0,801,55],[67,0,801,61],[69,0,801,63],[89,0,801,83],[90,0,801,84],[91,0,801,85]],[[12,0,802,6],[24,0,802,18],[25,0,802,19],[29,0,802,23],[30,0,802,24],[38,0,802,32],[39,0,802,33],[40,0,802,34]],[[8,0,803,4],[9,0,803,5],[10,0,803,6],[11,0,803,7]],[[8,0,805,4],[15,0,805,11],[28,0,805,24],[29,0,805,25],[41,0,805,37],[42,0,805,38],[43,0,805,39],[47,0,805,43]],[[8,0,806,6],[44,0,806,42]],[[8,0,807,6],[11,0,807,9],[12,0,807,10],[13,0,807,11],[18,0,807,23],[20,0,807,25],[22,0,807,27]],[[12,0,808,8],[16,0,808,12],[30,0,808,26],[33,0,808,50],[35,0,808,52],[36,0,808,53]],[[12,0,809,8],[17,0,809,13],[18,0,809,14],[25,0,809,21],[26,0,809,22],[30,0,809,26],[31,0,809,27],[33,0,809,29]],[[16,0,810,10],[30,0,810,24],[33,0,810,27],[47,0,810,41],[48,0,810,42],[54,0,810,48],[55,0,810,49],[59,0,810,53],[60,0,810,54],[61,0,810,55]],[[12,0,811,8],[13,0,811,9],[14,0,811,10],[15,0,811,11]],[[12,0,812,8],[19,0,812,15],[33,0,812,29],[34,0,812,30]],[[8,0,813,6],[9,0,813,7],[10,0,813,8]],[[8,0,814,6],[44,0,814,42]],[[8,0,815,6],[17,0,815,15],[18,0,815,16],[19,0,815,17],[29,0,815,48],[31,0,815,50],[33,0,815,52],[34,0,815,53],[38,0,815,57],[39,0,815,58],[60,0,815,79],[61,0,815,80],[71,0,815,90],[72,0,815,91],[73,0,815,92],[74,0,820,5],[75,0,820,6]],[[4,0,821,2],[5,0,821,3]],[[4,0,823,2]],[],[],[],[],[],[],[[7,0,830,5]],[[4,0,831,9],[21,0,831,26],[22,0,831,27],[35,0,831,61],[37,0,831,63],[60,0,831,108],[62,0,831,110]],[[8,0,832,4],[15,0,832,11],[19,0,832,15],[20,0,832,16],[59,0,832,55],[60,0,832,56],[73,0,832,69],[75,0,832,71],[95,0,832,91],[96,0,832,92],[97,0,832,93],[101,0,832,97],[102,0,833,6],[111,0,833,15],[112,0,833,16],[119,0,833,23],[120,0,833,24],[122,0,833,26],[123,0,833,27],[127,0,833,31],[128,0,833,32],[143,0,833,47],[144,0,833,48],[151,0,833,55],[152,0,833,56],[153,0,833,57],[154,0,834,5],[155,0,834,6],[159,0,834,10],[160,0,835,6],[164,0,835,10],[165,0,835,11],[166,0,835,12],[167,0,835,13],[168,0,836,5],[169,0,836,6]],[[4,0,837,2],[5,0,837,3]],[[4,0,840,2]],[],[],[],[],[],[[7,0,846,5]],[[4,0,847,9],[20,0,847,25],[21,0,847,26],[28,0,847,41],[30,0,847,43],[53,0,847,88],[55,0,847,90]],[[8,0,848,4],[14,0,848,10],[20,0,848,16],[23,0,848,19],[37,0,848,33],[38,0,848,34],[45,0,848,41],[47,0,848,43],[51,0,848,47],[52,0,848,48],[54,0,848,50],[55,0,848,51],[64,0,848,60],[65,0,848,82],[66,0,848,83]],[[8,0,849,4],[15,0,849,11],[19,0,849,15],[20,0,849,16],[27,0,849,23],[28,0,849,24],[34,0,849,30],[36,0,849,32],[56,0,849,52],[57,0,849,53],[58,0,849,54]],[[4,0,850,2],[5,0,850,3]],[[4,0,852,2]],[],[],[],[],[],[],[[7,0,859,5]],[[4,0,860,9],[15,0,860,20],[16,0,860,24],[20,0,860,41],[22,0,860,43],[45,0,860,88],[47,0,860,90]],[[8,0,862,4],[14,0,862,10],[21,0,862,17],[24,0,862,20],[28,0,862,24],[29,0,862,25],[58,0,862,54],[59,0,862,55],[63,0,862,59],[65,0,862,61],[85,0,862,81],[86,0,862,82],[87,0,862,83]],[[8,0,864,4],[15,0,864,11],[19,0,864,15],[20,0,864,16],[41,0,864,37],[42,0,864,38],[49,0,864,45],[50,0,864,46],[51,0,864,47],[55,0,864,51]],[[8,0,865,6],[105,0,865,103]],[[8,0,866,6],[73,0,866,71]],[[8,0,867,6],[32,0,867,30]],[[8,0,868,6],[14,0,868,12]],[[8,0,869,6],[12,0,869,10],[13,0,869,11],[14,0,869,12],[15,0,869,13],[16,0,870,5],[17,0,870,6]],[[4,0,871,2],[5,0,871,3]],[[4,0,896,9],[23,0,896,28],[24,0,896,32],[28,0,896,80],[30,0,897,32],[53,0,897,78],[55,0,897,80],[57,0,898,32],[84,0,898,69],[86,0,898,71]],[[8,0,900,4],[99,0,900,95]],[[8,0,901,4],[40,0,901,36]],[[8,0,903,4],[12,0,903,8],[17,0,903,13],[18,0,903,14],[25,0,903,21],[26,0,903,22],[30,0,903,26],[31,0,903,27],[33,0,903,29]],[[12,0,905,6],[18,0,905,12],[28,0,905,22],[31,0,905,35],[33,0,905,37],[34,0,905,38]],[[12,0,907,6],[16,0,907,10],[17,0,907,11],[24,0,907,18],[25,0,907,19],[26,0,907,20],[27,0,907,21],[29,0,907,23]],[[16,0,908,8],[26,0,908,18],[27,0,908,19],[31,0,908,23],[32,0,909,10],[36,0,909,14],[37,0,909,15],[68,0,909,46],[69,0,909,47],[70,0,909,48],[72,0,909,50],[92,0,909,70],[94,0,909,72],[118,0,909,96],[119,0,909,102],[120,0,910,9],[121,0,910,10]],[[12,0,911,6],[13,0,911,7],[14,0,911,8],[15,0,911,9]],[[12,0,913,6],[19,0,913,13],[29,0,913,23],[30,0,913,24]],[[9,0,915,5]],[[13,0,915,11]],[[12,0,916,6],[19,0,916,13],[23,0,916,17],[24,0,916,18],[55,0,916,49],[56,0,916,50],[60,0,916,54],[62,0,916,56],[82,0,916,76],[84,0,916,78],[108,0,916,102],[109,0,916,108],[110,0,916,109]],[[9,0,917,5]],[[4,0,918,2],[5,0,918,3]],[[4,0,921,2],[54,0,921,52]],[[4,0,923,2]],[],[],[],[],[],[],[],[[7,0,931,5]],[[4,0,932,12],[23,0,932,31],[24,0,932,35],[30,0,932,65],[32,0,933,35],[51,0,933,73],[68,0,933,90],[69,0,933,91],[88,0,933,110]],[[8,0,936,4],[15,0,936,11],[19,0,936,15],[20,0,936,16],[22,0,936,18],[23,0,936,19],[26,0,936,22],[27,0,936,23],[33,0,936,29],[34,0,936,30],[35,0,936,31],[39,0,936,35],[40,0,937,6],[43,0,937,9],[44,0,937,10],[45,0,937,11],[53,0,937,37],[55,0,937,39],[57,0,937,41]],[[12,0,938,8],[16,0,938,12],[17,0,938,13],[25,0,938,21],[26,0,938,22],[32,0,938,28],[34,0,938,30],[38,0,938,34],[54,0,938,50],[59,0,938,55],[76,0,938,72],[77,0,938,73],[96,0,938,92],[98,0,938,94]],[[16,0,939,10],[22,0,939,16],[27,0,939,21],[30,0,939,43]],[[20,0,940,12],[24,0,940,16],[26,0,940,18],[44,0,940,36]],[[20,0,941,12],[24,0,941,16],[26,0,941,18],[37,0,941,29]],[[20,0,942,12],[27,0,942,19],[29,0,942,21],[100,0,942,92]],[[20,0,943,12],[26,0,943,18]],[[17,0,944,11],[18,0,944,12]],[[16,0,945,10],[22,0,945,16],[27,0,945,21],[28,0,945,22]],[[13,0,946,9]],[[8,0,947,6],[9,0,947,7],[10,0,947,8],[12,0,949,6],[18,0,949,12],[19,0,949,13],[20,0,949,14],[28,0,949,40],[30,0,949,42],[32,0,949,44]],[[12,0,950,8],[19,0,950,15],[20,0,950,16],[21,0,950,17],[29,0,950,25],[30,0,950,26],[36,0,950,32],[38,0,950,34],[42,0,950,38],[58,0,950,54],[63,0,950,59],[80,0,950,76],[81,0,950,77],[87,0,950,83],[88,0,950,84],[89,0,950,85]],[[8,0,951,6],[9,0,951,7],[10,0,951,8],[12,0,953,6],[15,0,953,9],[16,0,953,10],[17,0,953,11],[25,0,953,37],[27,0,953,39],[29,0,953,41]],[[12,0,955,8],[19,0,955,15],[20,0,955,16],[23,0,955,19],[24,0,955,20],[32,0,955,28],[33,0,955,29],[39,0,955,35],[41,0,955,37],[42,0,955,38],[43,0,955,39]],[[12,0,957,8],[16,0,957,12],[24,0,957,20],[25,0,957,21],[31,0,957,27],[33,0,957,29],[37,0,957,33],[53,0,957,49],[58,0,957,54],[75,0,957,71],[76,0,957,72],[95,0,957,91],[97,0,957,93]],[[16,0,958,10],[22,0,958,16],[26,0,958,20],[29,0,958,23],[37,0,958,31],[38,0,958,32],[42,0,958,36],[44,0,958,43],[45,0,958,44]],[[16,0,960,10],[22,0,960,16],[39,0,960,33],[42,0,960,58]],[[20,0,961,12],[22,0,961,14],[24,0,961,16],[32,0,961,24],[33,0,961,25],[35,0,961,27]],[[20,0,962,12],[23,0,962,15],[25,0,962,17],[33,0,962,25],[34,0,962,26],[37,0,962,53]],[[20,0,963,12],[24,0,963,16],[26,0,963,18],[32,0,963,24],[33,0,963,25],[37,0,963,29]],[[20,0,964,12],[28,0,964,20],[30,0,964,22],[38,0,964,30],[39,0,964,31],[45,0,964,37],[47,0,964,39]],[[20,0,965,12],[36,0,965,28],[38,0,965,30],[46,0,965,38],[47,0,965,39],[55,0,965,47]],[[17,0,966,11],[18,0,966,12]],[[16,0,968,10],[23,0,968,17],[25,0,968,18],[28,0,968,21],[32,0,968,25],[34,0,968,27],[51,0,968,44],[53,0,968,60],[54,0,968,61]],[[13,0,970,9]],[[17,0,970,15],[21,0,970,19],[37,0,970,35],[42,0,970,40],[59,0,970,57],[60,0,970,58],[71,0,970,69],[73,0,970,71],[75,0,970,73],[98,0,970,96]],[[16,0,971,10],[23,0,971,17],[27,0,971,21],[28,0,971,22]],[[13,0,972,9]],[[12,0,973,8],[19,0,973,15],[23,0,973,19],[24,0,973,20]],[[8,0,974,6],[9,0,974,7],[10,0,974,8],[12,0,975,6],[15,0,975,9],[16,0,975,10],[17,0,975,11],[21,0,975,15],[23,0,975,17],[25,0,975,19]],[[12,0,976,8],[16,0,976,12],[20,0,976,16],[24,0,976,20],[28,0,976,24],[30,0,976,26]],[[16,0,977,10],[23,0,977,17],[45,0,977,39],[46,0,977,40],[50,0,977,60],[51,0,977,61],[52,0,977,62]],[[13,0,978,9]],[[17,0,978,15]],[[16,0,979,10],[23,0,979,17],[27,0,979,21],[28,0,979,22]],[[13,0,980,9]],[[8,0,981,6],[9,0,981,7],[10,0,981,8],[11,0,982,32],[12,0,982,33]],[[4,0,983,2],[5,0,983,3]],[[4,0,985,2]],[],[],[],[],[],[[7,0,991,5]],[[4,0,992,12],[30,0,992,38],[31,0,992,42],[37,0,992,58]],[[8,0,993,4]],[],[],[[11,0,996,7]],[[8,0,997,4],[15,0,997,11],[19,0,997,15],[20,0,997,16],[22,0,997,18],[23,0,997,19],[33,0,997,29],[34,0,997,30],[40,0,997,36],[41,0,997,37],[42,0,997,38],[46,0,997,42],[47,0,998,6],[50,0,998,9],[51,0,998,10],[52,0,998,11],[56,0,998,33],[58,0,998,35],[60,0,998,37]],[[12,0,999,8],[19,0,999,15],[23,0,999,19],[24,0,999,20],[28,0,999,24],[29,0,999,25],[32,0,999,28],[33,0,999,29],[41,0,999,37],[42,0,999,38],[44,0,999,40]],[[16,0,1000,10],[22,0,1000,16],[26,0,1000,20],[29,0,1000,23],[37,0,1000,31],[38,0,1000,32],[42,0,1000,36],[44,0,1000,43],[45,0,1000,44]],[[16,0,1002,10],[22,0,1002,16],[24,0,1002,18],[27,0,1002,21],[35,0,1002,29],[36,0,1002,30],[38,0,1002,32],[39,0,1002,33]],[[16,0,1003,10],[22,0,1003,16],[25,0,1003,19],[28,0,1003,22],[36,0,1003,30],[37,0,1003,31],[40,0,1003,58],[41,0,1003,59]],[[16,0,1004,10],[22,0,1004,16],[26,0,1004,20],[29,0,1004,23],[32,0,1004,26],[33,0,1004,27],[37,0,1004,31],[38,0,1004,32]],[[16,0,1005,10],[22,0,1005,16],[38,0,1005,32],[41,0,1005,35],[49,0,1005,43],[50,0,1005,44],[58,0,1005,52],[59,0,1005,53]],[[16,0,1007,10],[22,0,1007,16],[39,0,1007,33],[42,0,1007,58]],[[20,0,1008,12],[22,0,1008,14]],[[20,0,1009,12],[24,0,1009,16]],[[20,0,1010,12],[23,0,1010,15]],[[20,0,1011,12],[36,0,1011,28]],[[20,0,1012,12],[28,0,1012,20],[30,0,1012,22],[34,0,1012,26]],[[17,0,1013,11],[18,0,1013,12]],[[16,0,1015,10],[23,0,1015,17],[25,0,1015,18],[28,0,1015,21],[32,0,1015,25],[34,0,1015,27],[51,0,1015,44],[53,0,1015,60],[54,0,1015,61]],[[12,0,1016,8],[13,0,1016,9],[14,0,1016,10],[15,0,1016,11]],[[8,0,1017,6],[9,0,1017,7],[10,0,1017,8],[12,0,1018,6],[15,0,1018,9],[16,0,1018,10],[17,0,1018,11],[22,0,1018,36],[24,0,1018,38],[26,0,1018,40],[27,0,1018,41],[32,0,1018,46],[33,0,1018,47],[36,0,1018,50],[37,0,1018,51],[41,0,1018,55],[42,0,1018,56],[44,0,1018,58]],[[12,0,1019,8],[34,0,1019,30],[35,0,1019,31],[39,0,1019,35],[40,0,1019,36],[41,0,1019,37]],[[12,0,1020,8],[19,0,1020,15],[23,0,1020,19],[24,0,1020,20]],[[8,0,1021,6],[9,0,1021,7],[10,0,1021,8],[11,0,1021,9],[12,0,1022,39],[13,0,1022,40]],[[4,0,1023,2],[5,0,1023,3]],[[4,0,1025,2]],[],[],[],[],[],[],[],[[7,0,1033,5]],[[4,0,1034,12],[28,0,1034,36],[29,0,1035,4],[33,0,1035,21],[35,0,1036,4],[58,0,1036,49],[60,0,1036,51]],[[8,0,1038,4],[12,0,1038,8],[16,0,1038,12],[20,0,1038,16],[24,0,1038,20],[26,0,1038,22]],[[12,0,1039,6],[19,0,1039,13],[21,0,1039,15],[22,0,1039,16],[23,0,1039,17],[27,0,1039,21],[28,0,1039,22],[29,0,1039,23],[30,0,1039,24]],[[9,0,1040,5]],[[8,0,1041,4],[12,0,1041,8],[32,0,1041,28],[33,0,1041,29],[39,0,1041,35],[43,0,1041,39],[44,0,1041,40],[46,0,1041,42]],[[12,0,1042,6],[19,0,1042,13],[21,0,1042,15],[22,0,1042,16],[23,0,1042,17],[27,0,1042,21],[28,0,1042,22],[29,0,1042,23],[30,0,1042,24]],[[9,0,1043,5]],[[8,0,1045,4],[14,0,1045,10],[33,0,1045,29],[36,0,1045,56],[38,0,1045,58],[39,0,1045,59]],[[8,0,1047,4],[91,0,1047,87]],[[8,0,1048,4],[28,0,1048,24],[29,0,1048,25],[36,0,1048,32],[37,0,1048,33],[55,0,1048,51],[56,0,1048,52],[58,0,1048,54]],[[12,0,1050,6],[18,0,1050,12],[32,0,1050,26],[35,0,1050,29],[39,0,1050,33],[53,0,1050,47],[54,0,1050,48],[70,0,1050,64],[71,0,1050,65],[75,0,1050,69],[76,0,1050,70],[93,0,1050,87],[94,0,1050,88],[97,0,1050,91],[99,0,1050,93],[117,0,1050,111],[118,0,1050,112],[122,0,1050,116],[123,0,1050,117],[124,0,1050,118],[125,0,1050,119]],[[12,0,1051,6],[16,0,1051,10],[34,0,1051,28],[35,0,1051,29],[51,0,1051,45],[53,0,1051,47]],[[16,0,1052,8],[30,0,1052,22],[31,0,1052,23],[47,0,1052,39],[50,0,1052,42],[68,0,1052,60],[69,0,1052,61],[85,0,1052,77],[86,0,1052,78]],[[16,0,1053,8],[100,0,1053,92]],[[13,0,1054,7]],[[12,0,1055,6],[48,0,1055,42]],[[12,0,1056,6],[98,0,1056,92]],[[12,0,1057,6],[16,0,1057,10]],[[12,0,1059,6],[18,0,1059,12],[36,0,1059,30],[39,0,1059,33],[43,0,1059,37],[44,0,1059,38],[70,0,1059,64],[71,0,1059,65],[85,0,1059,79],[86,0,1059,80],[91,0,1059,85],[92,0,1059,86],[93,0,1059,87],[97,0,1059,91]],[[12,0,1060,8],[115,0,1060,111]],[[12,0,1061,8],[54,0,1061,50]],[[12,0,1062,8],[40,0,1062,36]],[[12,0,1063,8],[44,0,1063,40]],[[12,0,1064,8],[58,0,1064,54]],[[12,0,1065,8],[77,0,1065,73]],[[12,0,1066,8],[20,0,1066,16],[21,0,1066,17],[22,0,1066,18],[27,0,1066,39],[29,0,1066,41],[31,0,1066,43]],[[16,0,1068,10],[20,0,1068,14],[21,0,1068,15],[39,0,1068,33],[40,0,1068,34],[54,0,1068,48],[56,0,1068,50]],[[20,0,1069,12],[27,0,1069,19],[29,0,1069,21],[30,0,1069,22],[35,0,1069,27],[36,0,1069,28],[37,0,1069,29]],[[17,0,1070,11]],[[16,0,1072,10],[22,0,1072,16],[34,0,1072,28],[37,0,1072,55],[39,0,1072,57],[40,0,1072,58]],[[16,0,1074,10],[21,0,1074,15],[24,0,1074,18],[29,0,1074,23],[30,0,1074,24],[36,0,1074,30],[37,0,1074,31],[38,0,1074,32],[39,0,1074,33],[41,0,1074,35],[42,0,1074,36],[43,0,1074,37],[47,0,1074,41],[51,0,1074,45],[52,0,1074,46],[53,0,1074,47],[54,0,1074,48],[83,0,1074,77]],[[16,0,1076,10],[21,0,1076,15],[22,0,1076,16],[29,0,1076,23],[30,0,1076,24],[31,0,1076,25],[38,0,1076,46],[40,0,1076,48],[42,0,1076,50]],[[20,0,1077,12],[26,0,1077,18],[47,0,1077,39],[50,0,1077,42],[54,0,1077,46],[55,0,1077,47],[79,0,1077,71],[80,0,1077,72],[87,0,1077,79],[89,0,1077,81],[107,0,1077,99],[108,0,1077,100],[122,0,1077,114],[123,0,1077,115],[124,0,1077,116]],[[20,0,1078,12],[32,0,1078,24],[33,0,1078,25],[37,0,1078,29],[38,0,1078,30],[59,0,1078,51],[60,0,1078,52],[61,0,1078,53]],[[16,0,1079,10],[17,0,1079,11],[18,0,1079,12],[19,0,1079,13]],[[16,0,1081,10],[20,0,1081,14],[32,0,1081,26],[33,0,1081,27],[39,0,1081,33],[43,0,1081,37],[44,0,1081,38],[46,0,1081,40]],[[20,0,1082,12],[27,0,1082,19],[29,0,1082,21],[30,0,1082,22],[32,0,1082,24],[33,0,1082,25],[34,0,1082,26]],[[17,0,1083,11],[18,0,1083,12],[67,0,1083,61]],[[16,0,1085,10],[23,0,1085,17],[36,0,1085,30],[37,0,1085,31],[49,0,1085,43],[50,0,1085,44],[51,0,1085,45],[55,0,1085,49]],[[16,0,1086,12],[47,0,1086,43]],[[17,0,1087,11],[18,0,1087,12]],[[12,0,1088,8],[13,0,1088,9],[14,0,1088,10],[16,0,1088,12],[51,0,1088,47]],[[12,0,1089,8]],[],[[66,0,1091,62]],[[12,0,1092,8],[15,0,1092,11],[16,0,1092,12],[17,0,1092,13],[22,0,1092,34],[24,0,1092,36],[26,0,1092,38]],[[16,0,1093,10],[22,0,1093,16],[27,0,1093,21],[30,0,1093,24],[48,0,1093,42],[49,0,1093,43],[54,0,1093,48],[59,0,1093,53],[68,0,1093,62],[69,0,1093,63],[70,0,1093,64],[71,0,1093,65],[89,0,1093,83],[90,0,1093,84],[95,0,1093,89],[96,0,1093,90],[97,0,1093,91],[98,0,1093,92],[102,0,1093,96],[103,0,1093,97],[115,0,1093,109],[116,0,1093,110]],[[16,0,1095,10],[20,0,1095,14],[25,0,1095,19],[26,0,1095,20],[32,0,1095,26],[37,0,1095,31],[38,0,1095,32],[42,0,1095,36],[47,0,1095,41],[48,0,1095,42],[49,0,1095,43],[50,0,1095,44],[51,0,1095,45],[68,0,1095,62],[69,0,1095,63],[71,0,1095,65],[76,0,1095,70],[81,0,1095,75],[83,0,1095,77]],[[20,0,1096,12],[27,0,1096,19],[29,0,1096,20],[30,0,1096,21],[48,0,1096,39],[49,0,1096,40],[53,0,1096,44],[54,0,1096,45],[56,0,1096,47],[61,0,1096,52],[62,0,1096,53],[63,0,1096,54],[64,0,1096,55],[66,0,1096,56],[67,0,1096,57]],[[17,0,1097,11]],[[21,0,1097,17]],[[20,0,1098,12],[27,0,1098,19],[29,0,1098,20],[30,0,1098,21],[48,0,1098,39],[49,0,1098,40],[53,0,1098,44],[54,0,1098,45],[56,0,1098,47],[61,0,1098,52],[63,0,1098,53],[64,0,1098,54]],[[17,0,1099,11]],[[12,0,1100,8],[13,0,1100,9],[14,0,1100,10],[15,0,1102,7],[16,0,1102,8]],[[12,0,1104,6],[31,0,1104,25],[32,0,1104,26],[36,0,1104,30],[37,0,1104,31],[55,0,1104,49],[56,0,1104,50],[57,0,1104,51]],[[8,0,1105,4],[9,0,1105,5],[10,0,1105,6],[11,0,1105,7]],[[8,0,1107,4],[61,0,1107,57]],[[8,0,1108,4],[21,0,1108,17]],[[8,0,1109,4],[15,0,1109,11],[28,0,1109,24],[29,0,1109,25],[48,0,1109,44],[49,0,1109,45],[50,0,1109,46],[54,0,1109,50],[55,0,1110,6],[58,0,1110,9],[59,0,1110,10],[60,0,1110,11],[75,0,1110,87],[77,0,1110,89],[79,0,1110,91]],[[12,0,1111,8],[41,0,1111,37]],[[12,0,1112,8],[18,0,1112,14],[26,0,1112,22],[29,0,1112,51],[31,0,1112,53],[32,0,1112,54]],[[12,0,1114,8],[27,0,1114,23],[28,0,1114,24],[35,0,1114,31],[36,0,1114,32],[37,0,1114,33],[51,0,1114,47],[53,0,1114,49],[55,0,1114,51]],[[16,0,1116,10],[21,0,1116,15],[27,0,1116,21],[28,0,1116,22],[42,0,1116,36],[44,0,1116,38],[49,0,1116,43],[50,0,1116,44],[54,0,1116,48],[60,0,1116,54],[61,0,1116,55],[68,0,1116,62],[69,0,1116,63],[83,0,1116,77],[84,0,1116,78],[86,0,1116,80]],[[20,0,1117,12],[28,0,1117,20],[29,0,1117,21],[43,0,1117,35],[44,0,1117,36],[47,0,1117,39],[52,0,1117,44],[53,0,1117,45]],[[17,0,1118,11]],[[12,0,1119,8],[13,0,1119,9],[14,0,1119,10],[15,0,1119,11]],[[12,0,1120,8],[19,0,1120,15],[27,0,1120,23],[28,0,1120,24]],[[8,0,1121,6],[9,0,1121,7],[10,0,1121,8],[12,0,1123,6],[15,0,1123,9],[16,0,1123,10],[17,0,1123,11],[21,0,1123,29],[23,0,1123,31],[25,0,1123,33]],[[12,0,1124,8],[19,0,1124,15],[21,0,1124,16],[24,0,1124,19],[28,0,1124,23],[30,0,1124,25],[33,0,1124,28],[37,0,1124,32],[39,0,1124,48],[40,0,1124,49]],[[8,0,1125,6],[9,0,1125,7],[10,0,1125,8],[11,0,1126,5],[12,0,1126,6]],[[4,0,1127,2],[5,0,1127,3]],[[4,0,1129,2]],[],[[7,0,1131,5]],[[4,0,1132,12],[36,0,1132,44],[37,0,1133,4],[43,0,1133,29],[45,0,1134,4],[68,0,1134,49],[70,0,1134,51],[72,0,1135,4],[91,0,1135,42],[108,0,1135,59],[109,0,1135,60],[120,0,1135,71]],[[8,0,1137,4],[33,0,1137,29]],[[8,0,1138,4],[15,0,1138,11],[19,0,1138,15],[20,0,1138,16],[39,0,1138,35],[40,0,1138,39],[46,0,1138,45],[48,0,1138,47],[64,0,1138,63],[65,0,1138,64],[66,0,1138,65],[70,0,1138,69],[71,0,1139,6],[79,0,1139,14],[80,0,1139,15],[81,0,1139,16],[85,0,1139,34],[87,0,1139,36],[89,0,1139,38]],[[12,0,1141,8],[16,0,1141,12],[20,0,1141,16],[25,0,1141,21],[29,0,1141,25],[31,0,1141,27]],[[16,0,1142,10],[23,0,1142,17],[25,0,1142,19],[26,0,1142,20],[30,0,1142,24],[31,0,1142,25],[32,0,1142,26]],[[13,0,1143,9]],[[12,0,1144,8],[16,0,1144,12],[36,0,1144,32],[37,0,1144,33],[43,0,1144,39],[47,0,1144,43],[48,0,1144,44],[50,0,1144,46]],[[16,0,1145,10],[23,0,1145,17],[25,0,1145,19],[26,0,1145,20],[30,0,1145,24],[31,0,1145,25],[32,0,1145,26]],[[13,0,1146,9]],[[12,0,1148,8],[19,0,1148,15],[23,0,1148,19],[24,0,1148,20],[48,0,1148,44],[49,0,1148,45],[53,0,1148,49],[55,0,1148,51],[75,0,1148,71],[76,0,1148,72],[77,0,1148,73]],[[8,0,1149,6],[9,0,1149,7],[10,0,1149,8],[11,0,1150,5],[12,0,1150,6]],[[4,0,1151,2],[5,0,1151,3]],[[4,0,1153,2]],[],[],[],[],[],[],[],[],[],[],[[7,0,1164,5]],[[4,0,1165,12],[14,0,1165,22],[15,0,1165,26],[19,0,1165,33],[21,0,1165,35],[34,0,1165,72],[36,0,1165,74],[49,0,1165,96],[53,0,1165,100],[55,0,1165,102],[57,0,1165,113]],[[8,0,1168,4],[58,0,1168,54]],[[8,0,1170,4],[12,0,1170,8],[16,0,1170,29],[17,0,1170,30]],[[8,0,1172,4],[12,0,1172,8],[22,0,1172,18],[24,0,1172,20]],[[12,0,1173,6],[18,0,1173,12],[22,0,1173,16],[25,0,1173,19],[29,0,1173,23],[33,0,1173,27],[35,0,1173,29],[36,0,1173,30]],[[12,0,1174,6],[16,0,1174,10],[19,0,1174,13],[33,0,1174,27],[34,0,1174,28],[38,0,1174,32],[40,0,1174,34],[45,0,1174,39],[47,0,1174,41],[51,0,1174,45],[52,0,1174,46],[53,0,1174,47]],[[12,0,1175,6],[16,0,1175,10],[19,0,1175,13],[34,0,1175,28],[35,0,1175,29],[39,0,1175,33],[41,0,1175,35],[46,0,1175,40],[48,0,1175,42],[52,0,1175,46],[53,0,1175,47],[54,0,1175,48]],[[9,0,1176,5]],[[8,0,1178,4],[12,0,1178,8],[14,0,1178,10],[19,0,1178,15],[28,0,1178,24],[30,0,1178,26]],[[12,0,1179,6],[18,0,1179,12],[24,0,1179,18],[27,0,1179,40],[42,0,1179,55],[43,0,1179,56],[56,0,1179,69],[58,0,1179,71],[60,0,1179,73],[61,0,1179,74],[62,0,1179,75]],[[12,0,1180,6],[16,0,1180,10],[19,0,1180,13],[23,0,1180,17],[24,0,1180,18],[26,0,1180,20],[27,0,1180,21],[30,0,1180,24],[31,0,1180,25],[37,0,1180,31],[39,0,1180,33],[43,0,1180,37],[44,0,1180,38],[45,0,1180,39]],[[9,0,1181,5]],[[13,0,1181,11]],[[12,0,1182,6],[16,0,1182,10],[19,0,1182,13],[23,0,1182,17],[24,0,1182,18],[26,0,1182,20],[27,0,1182,21],[30,0,1182,24],[31,0,1182,28],[44,0,1182,41],[46,0,1182,43],[50,0,1182,47],[51,0,1182,48],[52,0,1182,49]],[[9,0,1183,5]],[[8,0,1185,4],[51,0,1185,47]],[[8,0,1186,4],[38,0,1186,34]],[[8,0,1187,4],[114,0,1187,110]],[[8,0,1188,4],[15,0,1188,11]],[[8,0,1189,4],[12,0,1189,8]],[[8,0,1191,4],[12,0,1191,8],[15,0,1191,11],[19,0,1191,15],[20,0,1191,16],[24,0,1191,20]],[[8,0,1192,6],[79,0,1192,77]],[[8,0,1193,6],[40,0,1193,38]],[[8,0,1194,6],[40,0,1194,38]],[[8,0,1195,6],[11,0,1195,9],[12,0,1195,10],[13,0,1195,11],[16,0,1195,48],[18,0,1195,50],[20,0,1195,52]],[[12,0,1196,8],[16,0,1196,12],[18,0,1196,14],[23,0,1196,19],[32,0,1196,28],[36,0,1196,32],[39,0,1196,35],[41,0,1196,37]],[[16,0,1198,10],[22,0,1198,16],[26,0,1198,20],[29,0,1198,23],[32,0,1198,26],[33,0,1198,27],[37,0,1198,31],[38,0,1198,32]],[[16,0,1200,10],[22,0,1200,16],[39,0,1200,33],[42,0,1200,58]],[[20,0,1201,12],[22,0,1201,14],[24,0,1201,16],[27,0,1201,19],[28,0,1201,20],[30,0,1201,22]],[[20,0,1202,12],[24,0,1202,16]],[[20,0,1203,12],[23,0,1203,15]],[[20,0,1204,12],[28,0,1204,20],[30,0,1204,22],[34,0,1204,26]],[[17,0,1205,11],[18,0,1205,12]],[[16,0,1207,10],[23,0,1207,17],[25,0,1207,18],[28,0,1207,21],[32,0,1207,25],[34,0,1207,27],[51,0,1207,44],[53,0,1207,60],[54,0,1207,61]],[[13,0,1209,9]],[[17,0,1209,15],[19,0,1209,17],[87,0,1209,85]],[[16,0,1210,10],[22,0,1210,16],[26,0,1210,20],[29,0,1210,23],[42,0,1210,36],[43,0,1210,37],[47,0,1210,41],[50,0,1210,44],[53,0,1210,47],[56,0,1210,50],[58,0,1210,52],[59,0,1210,53]],[[16,0,1211,10],[19,0,1211,13],[22,0,1211,16],[36,0,1211,30],[37,0,1211,31],[41,0,1211,35],[43,0,1211,37],[47,0,1211,41],[48,0,1211,42],[50,0,1211,44],[51,0,1211,45],[60,0,1211,54],[61,0,1211,79],[62,0,1211,80]],[[16,0,1213,10],[22,0,1213,16],[39,0,1213,33],[42,0,1213,58]],[[20,0,1214,12],[22,0,1214,14],[24,0,1214,16],[26,0,1214,28]],[[20,0,1215,12],[23,0,1215,15]],[[20,0,1216,12],[24,0,1216,16]],[[20,0,1217,12],[28,0,1217,20],[30,0,1217,22],[34,0,1217,26]],[[17,0,1218,11],[18,0,1218,12]],[[16,0,1220,10],[23,0,1220,17],[25,0,1220,18],[28,0,1220,21],[32,0,1220,25],[34,0,1220,27],[51,0,1220,44],[53,0,1220,60],[54,0,1220,61]],[[13,0,1221,9]],[[8,0,1222,6],[9,0,1222,7],[10,0,1222,8],[11,0,1223,5],[12,0,1223,6]],[[8,0,1225,4],[15,0,1225,11],[19,0,1225,15],[20,0,1225,16],[24,0,1225,20],[25,0,1226,6],[29,0,1226,10],[30,0,1226,11],[31,0,1226,12],[32,0,1226,13],[33,0,1227,5],[34,0,1227,6]],[[4,0,1228,2],[5,0,1228,3]],[[4,0,1230,2],[74,0,1230,72]],[[4,0,1231,12],[17,0,1231,25],[18,0,1231,29],[22,0,1231,36],[24,0,1231,38],[30,0,1231,63],[32,0,1231,65],[52,0,1231,94],[56,0,1231,98]],[[8,0,1233,4],[12,0,1233,8],[29,0,1233,25],[31,0,1233,27]],[[12,0,1234,6],[16,0,1234,10],[19,0,1234,13],[34,0,1234,28],[35,0,1234,29],[39,0,1234,33],[41,0,1234,35],[46,0,1234,40],[47,0,1234,41],[48,0,1234,42]],[[9,0,1235,5]],[[8,0,1236,4],[15,0,1236,11],[19,0,1236,15],[20,0,1236,16],[22,0,1236,18],[23,0,1236,19],[29,0,1236,25],[30,0,1236,26],[36,0,1236,32],[38,0,1236,34],[42,0,1236,38],[43,0,1236,39],[44,0,1236,40]],[[4,0,1237,2],[5,0,1237,3]],[[4,0,1239,2]],[],[[7,0,1241,5]],[[4,0,1242,12],[27,0,1242,35],[28,0,1242,39],[32,0,1242,46],[34,0,1243,39],[40,0,1243,64],[42,0,1244,39],[65,0,1244,85],[67,0,1244,87],[69,0,1245,39],[89,0,1245,68],[93,0,1245,72],[95,0,1246,39],[100,0,1246,57]],[[8,0,1248,4],[12,0,1248,8],[17,0,1248,13],[22,0,1248,18],[31,0,1248,27],[33,0,1248,29]],[[12,0,1249,6],[17,0,1249,11],[20,0,1249,14],[30,0,1249,24],[31,0,1249,25],[35,0,1249,29],[36,0,1249,30],[38,0,1249,32],[39,0,1249,33],[48,0,1249,42],[49,0,1249,43],[50,0,1249,44]],[[9,0,1250,5]],[[8,0,1252,4],[12,0,1252,8],[29,0,1252,25],[31,0,1252,27]],[[12,0,1253,6],[16,0,1253,10],[19,0,1253,13],[34,0,1253,28],[35,0,1253,29],[39,0,1253,33],[41,0,1253,35],[46,0,1253,40],[47,0,1253,41],[48,0,1253,42]],[[9,0,1254,5]],[[8,0,1256,4],[14,0,1256,10],[19,0,1256,15],[22,0,1256,18],[26,0,1256,22],[27,0,1256,23],[67,0,1256,63],[68,0,1256,64],[72,0,1256,68],[74,0,1256,70],[94,0,1256,90],[95,0,1256,91],[96,0,1256,92]],[[8,0,1257,4],[14,0,1257,10],[24,0,1257,20],[27,0,1257,23],[32,0,1257,28],[33,0,1257,29],[43,0,1257,39],[44,0,1257,40]],[[8,0,1258,4],[14,0,1258,10],[28,0,1258,24],[31,0,1258,27],[36,0,1258,32],[37,0,1258,33],[51,0,1258,47],[52,0,1258,48]],[[8,0,1260,4],[51,0,1260,47]],[[8,0,1261,4],[13,0,1261,9],[14,0,1261,10],[20,0,1261,16],[21,0,1261,17],[27,0,1261,23],[29,0,1261,25],[39,0,1261,35],[40,0,1261,36],[41,0,1261,37]],[[8,0,1263,4],[13,0,1263,9],[19,0,1263,15],[20,0,1263,16],[36,0,1263,32],[38,0,1263,34],[55,0,1263,51],[56,0,1263,52],[60,0,1263,56],[66,0,1263,62],[67,0,1263,63],[74,0,1263,70],[75,0,1263,71],[89,0,1263,85],[90,0,1263,86],[92,0,1263,88]],[[12,0,1265,6],[16,0,1265,10],[39,0,1265,68],[40,0,1265,69],[41,0,1265,70],[80,0,1265,109]],[[12,0,1266,6],[16,0,1266,10],[24,0,1266,38],[25,0,1266,39]],[[12,0,1268,6],[16,0,1268,10],[36,0,1268,30],[38,0,1268,32]],[[16,0,1269,8],[39,0,1269,31],[42,0,1269,34],[62,0,1269,54],[63,0,1269,55],[67,0,1269,59],[68,0,1269,60],[75,0,1269,67],[76,0,1269,68],[78,0,1269,70],[79,0,1269,71],[86,0,1269,78],[87,0,1269,79],[91,0,1269,83],[96,0,1269,88],[112,0,1269,104],[113,0,1269,105],[115,0,1269,107],[129,0,1269,121],[130,0,1269,122]],[[16,0,1270,8],[24,0,1270,16],[27,0,1270,19],[47,0,1270,39],[48,0,1270,40],[52,0,1270,44],[53,0,1270,45],[60,0,1270,52],[61,0,1270,53],[63,0,1270,55],[64,0,1270,56],[71,0,1270,63],[72,0,1270,64],[76,0,1270,68],[81,0,1270,73],[97,0,1270,89],[98,0,1270,90],[100,0,1270,92],[105,0,1270,97],[106,0,1270,98]],[[13,0,1271,7]],[[12,0,1273,6],[20,0,1273,14],[23,0,1273,17],[31,0,1273,25],[36,0,1273,30],[45,0,1273,39],[46,0,1273,40],[47,0,1273,41],[48,0,1273,42],[56,0,1273,50],[57,0,1273,51],[58,0,1273,52],[59,0,1273,53],[63,0,1273,57],[64,0,1273,58],[76,0,1273,70],[77,0,1273,71],[78,0,1273,72],[109,0,1273,103]],[[12,0,1275,6],[82,0,1275,76]],[[12,0,1276,6],[18,0,1276,12],[31,0,1276,25],[34,0,1276,28],[50,0,1276,44],[51,0,1276,45],[57,0,1276,51],[59,0,1276,53],[75,0,1276,69],[76,0,1276,70],[77,0,1276,71]],[[12,0,1277,6],[18,0,1277,12],[26,0,1277,20],[29,0,1277,23],[44,0,1277,38],[45,0,1277,39],[58,0,1277,52],[60,0,1277,54],[68,0,1277,62],[69,0,1277,63],[70,0,1277,64]],[[12,0,1279,6],[17,0,1279,11],[20,0,1279,14],[24,0,1279,18],[25,0,1279,19],[48,0,1279,42],[49,0,1279,43],[66,0,1279,60],[68,0,1279,62],[76,0,1279,70],[78,0,1279,72],[101,0,1279,95],[103,0,1279,97],[120,0,1279,114],[122,0,1279,116],[127,0,1279,121],[128,0,1279,122],[129,0,1279,123]],[[9,0,1280,5]],[[8,0,1282,4],[15,0,1282,11],[20,0,1282,16],[21,0,1282,17]],[[4,0,1283,2],[5,0,1283,3]],[[4,0,1285,2]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,1298,5]],[[4,0,1299,12],[41,0,1299,49],[42,0,1300,4],[55,0,1300,37],[57,0,1301,4],[69,0,1301,36],[71,0,1302,4],[84,0,1302,25],[86,0,1303,4],[98,0,1303,24],[100,0,1304,4],[116,0,1304,28],[118,0,1305,4],[149,0,1305,60],[151,0,1306,4],[182,0,1306,35],[185,0,1306,38],[189,0,1306,42],[191,0,1307,4],[198,0,1307,11],[201,0,1307,14],[206,0,1307,19]],[[8,0,1309,4],[12,0,1309,8],[29,0,1309,45],[30,0,1309,46]],[[8,0,1310,4],[12,0,1310,8],[28,0,1310,44],[29,0,1310,45]],[[8,0,1311,4],[12,0,1311,8],[19,0,1311,15],[21,0,1311,17]],[[12,0,1312,6],[29,0,1312,23],[32,0,1312,26],[38,0,1312,32],[39,0,1312,33],[45,0,1312,39],[46,0,1312,40],[48,0,1312,42],[50,0,1312,44],[63,0,1312,57],[64,0,1312,58],[65,0,1312,59]],[[12,0,1313,6],[28,0,1313,22],[31,0,1313,25],[37,0,1313,31],[38,0,1313,32],[44,0,1313,38],[45,0,1313,39],[47,0,1313,41],[49,0,1313,43],[61,0,1313,55],[62,0,1313,56],[63,0,1313,57]],[[9,0,1314,5]],[[13,0,1314,11]],[[12,0,1315,6],[29,0,1315,23],[32,0,1315,26],[45,0,1315,39],[46,0,1315,40]],[[12,0,1316,6],[28,0,1316,22],[31,0,1316,25],[43,0,1316,37],[44,0,1316,38]],[[9,0,1317,5]],[[8,0,1319,4],[25,0,1319,21],[26,0,1319,22],[43,0,1319,39],[45,0,1319,41],[61,0,1319,57],[63,0,1319,59],[76,0,1319,72],[78,0,1319,74],[90,0,1319,86],[91,0,1319,87],[92,0,1319,88]],[[8,0,1321,4],[14,0,1321,10],[19,0,1321,15],[22,0,1321,30],[32,0,1321,40],[33,0,1321,41],[37,0,1321,45],[38,0,1321,46],[40,0,1321,48],[41,0,1321,49],[50,0,1321,58],[51,0,1321,59],[52,0,1321,60]],[[8,0,1323,4],[12,0,1323,8],[43,0,1323,39],[48,0,1323,44],[57,0,1323,53],[59,0,1323,55]],[[12,0,1324,6],[18,0,1324,12],[27,0,1324,21],[30,0,1324,24],[46,0,1324,40],[47,0,1324,41],[59,0,1324,53],[60,0,1324,54],[61,0,1324,55]],[[12,0,1325,6],[18,0,1325,12],[30,0,1325,24],[33,0,1325,27],[42,0,1325,36],[43,0,1325,37],[60,0,1325,54],[61,0,1325,55],[64,0,1325,58],[65,0,1325,59]],[[12,0,1327,6],[18,0,1327,12],[22,0,1327,16],[25,0,1327,19],[27,0,1327,20],[30,0,1327,23],[61,0,1327,54],[63,0,1327,56],[72,0,1327,65],[74,0,1327,67],[90,0,1327,83],[92,0,1327,84],[93,0,1327,85]],[[12,0,1329,6],[16,0,1329,10],[17,0,1329,11],[24,0,1329,18],[26,0,1329,20]],[[16,0,1330,8],[29,0,1330,21],[30,0,1330,22],[39,0,1330,31],[41,0,1330,33],[45,0,1330,37],[47,0,1330,39],[51,0,1330,43],[52,0,1330,44],[53,0,1330,45]],[[13,0,1331,7]],[[12,0,1333,6],[16,0,1333,10],[47,0,1333,41],[49,0,1333,43]],[[16,0,1334,8],[22,0,1334,14],[26,0,1334,18],[29,0,1334,21],[33,0,1334,25],[37,0,1334,29],[39,0,1334,31],[40,0,1334,32]],[[16,0,1335,8],[31,0,1335,23],[32,0,1335,24],[36,0,1335,28],[38,0,1335,30],[42,0,1335,34],[44,0,1335,36],[48,0,1335,40],[49,0,1335,41],[50,0,1335,42]],[[16,0,1337,8],[20,0,1337,12],[21,0,1337,13],[28,0,1337,20],[30,0,1337,22]],[[20,0,1338,10],[35,0,1338,25],[36,0,1338,26],[45,0,1338,35],[47,0,1338,37],[51,0,1338,41],[53,0,1338,43],[57,0,1338,47],[58,0,1338,48],[59,0,1338,49]],[[17,0,1339,9]],[[13,0,1340,7]],[[12,0,1341,6],[17,0,1341,11],[18,0,1341,12],[24,0,1341,18],[25,0,1341,19],[37,0,1341,31],[39,0,1341,33],[43,0,1341,37],[44,0,1341,38],[45,0,1341,39]],[[9,0,1342,5]],[[8,0,1344,4],[14,0,1344,10],[39,0,1344,35],[42,0,1344,58],[58,0,1344,74],[59,0,1344,75],[64,0,1344,80],[65,0,1344,81],[77,0,1344,93],[78,0,1344,94],[79,0,1344,95]],[[8,0,1345,4],[12,0,1345,8],[13,0,1345,9],[16,0,1345,12],[28,0,1345,24],[29,0,1345,25]],[[8,0,1346,4],[13,0,1346,9],[19,0,1346,15],[23,0,1346,19],[27,0,1346,23],[52,0,1346,48],[54,0,1346,50]],[[12,0,1347,6],[25,0,1347,19]],[[12,0,1348,6],[17,0,1348,11],[18,0,1348,12],[24,0,1348,18],[25,0,1348,19],[29,0,1348,23],[30,0,1348,24],[47,0,1348,41],[48,0,1348,42],[51,0,1348,45],[53,0,1348,47],[55,0,1348,48],[60,0,1348,53],[62,0,1348,55],[63,0,1348,56],[65,0,1348,57],[66,0,1348,58],[67,0,1348,59]],[[12,0,1350,6],[16,0,1350,10],[17,0,1350,11],[24,0,1350,18],[26,0,1350,20]],[[16,0,1351,8],[20,0,1351,12],[21,0,1351,13],[26,0,1351,18],[29,0,1351,21],[30,0,1351,22],[31,0,1351,23]],[[13,0,1352,7]],[[12,0,1354,6],[13,0,1354,7],[15,0,1354,9],[16,0,1354,10]],[[9,0,1355,5]],[[8,0,1357,4],[14,0,1357,10],[36,0,1357,32],[39,0,1357,55],[56,0,1357,72],[57,0,1357,73],[62,0,1357,78],[63,0,1357,79],[76,0,1357,92],[77,0,1357,93],[78,0,1357,94]],[[8,0,1358,4],[9,0,1358,5],[12,0,1358,8],[25,0,1358,21],[26,0,1358,22]],[[8,0,1359,4],[13,0,1359,9],[19,0,1359,15],[23,0,1359,19],[27,0,1359,23],[49,0,1359,45],[51,0,1359,47]],[[12,0,1360,6],[25,0,1360,19]],[[12,0,1361,6],[17,0,1361,11],[18,0,1361,12],[24,0,1361,18],[25,0,1361,19],[29,0,1361,23],[30,0,1361,24],[47,0,1361,41],[48,0,1361,42],[51,0,1361,45],[53,0,1361,47],[55,0,1361,48],[60,0,1361,53],[62,0,1361,55],[63,0,1361,56],[65,0,1361,57],[66,0,1361,58],[67,0,1361,59]],[[12,0,1363,6],[16,0,1363,10],[17,0,1363,11],[24,0,1363,18],[26,0,1363,20]],[[16,0,1364,8],[20,0,1364,12],[21,0,1364,13],[26,0,1364,18],[29,0,1364,21],[30,0,1364,22],[31,0,1364,23]],[[13,0,1365,7]],[[12,0,1367,6],[13,0,1367,7],[15,0,1367,9],[16,0,1367,10]],[[9,0,1368,5]],[[8,0,1370,4],[15,0,1370,11],[20,0,1370,16],[21,0,1370,17]],[[4,0,1371,2],[5,0,1371,3]],[[4,0,1374,2]],[],[],[],[[7,0,1378,5]],[[4,0,1379,12],[25,0,1379,33],[26,0,1379,34],[33,0,1379,62]],[[8,0,1381,4],[14,0,1381,10],[19,0,1381,15],[22,0,1381,18],[26,0,1381,22],[27,0,1381,23],[55,0,1381,51],[56,0,1381,52],[63,0,1381,59],[64,0,1381,60],[65,0,1381,61]],[[8,0,1383,4],[15,0,1383,11],[19,0,1383,15],[20,0,1383,16],[32,0,1383,28],[33,0,1383,29],[38,0,1383,34],[39,0,1383,35],[40,0,1383,36]],[[4,0,1384,2],[5,0,1384,3]],[[4,0,1386,12],[32,0,1386,40],[33,0,1386,41],[40,0,1386,69],[42,0,1386,71],[50,0,1386,91],[60,0,1386,101],[61,0,1386,102],[65,0,1386,106],[66,0,1386,107],[68,0,1386,109],[69,0,1386,110],[78,0,1386,119],[79,0,1386,120]],[[8,0,1388,4],[15,0,1388,11],[16,0,1388,12],[23,0,1388,19],[24,0,1388,20],[25,0,1388,21],[31,0,1388,27],[33,0,1388,29],[35,0,1388,31]],[[12,0,1389,6],[17,0,1389,11],[18,0,1389,12],[24,0,1389,18],[25,0,1389,19],[31,0,1389,25],[32,0,1389,26],[33,0,1389,27]],[[8,0,1390,4],[9,0,1390,5],[10,0,1390,6],[11,0,1390,7]],[[8,0,1392,4],[15,0,1392,11],[20,0,1392,16],[21,0,1392,17]],[[4,0,1393,2],[5,0,1393,3]],[[4,0,1395,2]],[],[],[],[],[],[[7,0,1401,5]],[[4,0,1402,12],[35,0,1402,43],[36,0,1402,47],[42,0,1402,71],[44,0,1403,47],[67,0,1403,93],[69,0,1403,95],[71,0,1404,47],[98,0,1404,84],[100,0,1404,86]],[[8,0,1406,4],[95,0,1406,91]],[[8,0,1407,4],[14,0,1407,10],[32,0,1407,28],[35,0,1407,41],[36,0,1407,42],[55,0,1407,61],[56,0,1407,62],[57,0,1407,63],[63,0,1407,69],[64,0,1407,70],[88,0,1407,94],[89,0,1407,95],[90,0,1407,96]],[[8,0,1409,4],[34,0,1409,30]],[[8,0,1410,4],[13,0,1410,9],[19,0,1410,15],[36,0,1410,32],[40,0,1410,36],[58,0,1410,54],[60,0,1410,56]],[[12,0,1411,6],[19,0,1411,13],[25,0,1411,19],[26,0,1411,20],[43,0,1411,37],[44,0,1411,38],[45,0,1411,39]],[[9,0,1412,5]],[[8,0,1414,4],[28,0,1414,24],[29,0,1414,25],[36,0,1414,32],[37,0,1414,33],[40,0,1414,36],[41,0,1414,37],[43,0,1414,39]],[[12,0,1415,6],[16,0,1415,10],[21,0,1415,15],[22,0,1415,16],[29,0,1415,23],[30,0,1415,24],[36,0,1415,30],[37,0,1415,31],[40,0,1415,34],[41,0,1415,35],[45,0,1415,39],[46,0,1415,40],[47,0,1415,41],[49,0,1415,43],[51,0,1415,45],[104,0,1415,98]],[[16,0,1417,8],[22,0,1417,14],[26,0,1417,18],[29,0,1417,36],[35,0,1417,42],[36,0,1417,43],[39,0,1417,46],[40,0,1417,47],[44,0,1417,51],[45,0,1417,52],[46,0,1417,53]],[[16,0,1418,8],[20,0,1418,12],[21,0,1418,13],[28,0,1418,20],[29,0,1418,21],[30,0,1418,22],[31,0,1418,23],[33,0,1418,25],[34,0,1418,26],[36,0,1418,28],[38,0,1418,30]],[[20,0,1420,10],[24,0,1420,14],[27,0,1420,17],[28,0,1420,18],[42,0,1420,32],[44,0,1420,34]],[[24,0,1421,12],[28,0,1421,16],[29,0,1421,17],[60,0,1421,48],[61,0,1421,49],[62,0,1421,50],[64,0,1421,52],[67,0,1421,55],[68,0,1421,56],[82,0,1421,70],[84,0,1421,72],[108,0,1421,96],[109,0,1421,97],[110,0,1421,98]],[[21,0,1422,11]],[[25,0,1422,17]],[[24,0,1423,12],[30,0,1423,18]],[[24,0,1424,12],[29,0,1424,17],[35,0,1424,23],[52,0,1424,40],[56,0,1424,44],[74,0,1424,62],[76,0,1424,64]],[[28,0,1425,14],[35,0,1425,21],[41,0,1425,27],[42,0,1425,28],[45,0,1425,31],[46,0,1425,32],[50,0,1425,36],[51,0,1425,37],[52,0,1425,38],[53,0,1425,39],[54,0,1425,40],[55,0,1425,41],[72,0,1425,58],[73,0,1425,59],[74,0,1425,60]],[[25,0,1426,13]],[[21,0,1427,11]],[[16,0,1428,8],[17,0,1428,9],[18,0,1428,10],[19,0,1428,11]],[[13,0,1430,7]],[[17,0,1430,13],[19,0,1430,15],[52,0,1430,48]],[[16,0,1432,8],[20,0,1432,12],[23,0,1432,15],[24,0,1432,16],[38,0,1432,30],[40,0,1432,32]],[[20,0,1433,10],[24,0,1433,14],[25,0,1433,15],[56,0,1433,46],[57,0,1433,47],[63,0,1433,53],[64,0,1433,54],[67,0,1433,57],[68,0,1433,58],[72,0,1433,62],[73,0,1433,63],[75,0,1433,65],[78,0,1433,68],[79,0,1433,69],[93,0,1433,83],[95,0,1433,85],[119,0,1433,109],[120,0,1433,110],[121,0,1433,111]],[[17,0,1434,9]],[[21,0,1434,15]],[[20,0,1435,10],[25,0,1435,15],[31,0,1435,21],[48,0,1435,38],[52,0,1435,42],[70,0,1435,60],[72,0,1435,62]],[[24,0,1436,12],[31,0,1436,19],[37,0,1436,25],[38,0,1436,26],[41,0,1436,29],[42,0,1436,30],[46,0,1436,34],[47,0,1436,35],[48,0,1436,36],[65,0,1436,53],[66,0,1436,54],[67,0,1436,55]],[[21,0,1437,11]],[[17,0,1438,9]],[[13,0,1440,7]],[[8,0,1441,4],[9,0,1441,5],[10,0,1441,6],[11,0,1441,7]],[[8,0,1443,4],[15,0,1443,11],[21,0,1443,17],[22,0,1443,18]],[[4,0,1445,2],[5,0,1445,3]],[[4,0,1447,2]],[],[],[],[],[[7,0,1452,5]],[[4,0,1453,12],[30,0,1453,38],[31,0,1453,39],[34,0,1453,83],[36,0,1454,39],[59,0,1454,84],[61,0,1454,86]],[[8,0,1457,4],[12,0,1457,8],[15,0,1457,11],[27,0,1457,23],[44,0,1457,40],[46,0,1457,42]],[[12,0,1458,6],[19,0,1458,13],[23,0,1458,17],[24,0,1458,18],[56,0,1458,50],[57,0,1458,51],[60,0,1458,54],[62,0,1458,56],[82,0,1458,76],[83,0,1458,77],[84,0,1458,78]],[[9,0,1459,5]],[[13,0,1459,11],[15,0,1459,13],[37,0,1459,35]],[[12,0,1460,6],[19,0,1460,13],[23,0,1460,17],[24,0,1460,18],[63,0,1460,57],[64,0,1460,58],[67,0,1460,61],[69,0,1460,63],[89,0,1460,83],[90,0,1460,84],[91,0,1460,85]],[[9,0,1461,5]],[[4,0,1462,2],[5,0,1462,3]],[[4,0,1464,12],[36,0,1464,44],[37,0,1464,45],[43,0,1464,70],[45,0,1465,45],[68,0,1465,90],[70,0,1465,92]],[[8,0,1468,4],[15,0,1468,11],[19,0,1468,15],[20,0,1468,16],[33,0,1468,29],[34,0,1468,30],[40,0,1468,36],[42,0,1468,38],[62,0,1468,58],[63,0,1468,59],[64,0,1468,60],[68,0,1468,64],[69,0,1469,6],[73,0,1469,10],[74,0,1469,11],[75,0,1469,12],[76,0,1469,13],[78,0,1470,6],[81,0,1470,9],[82,0,1470,10],[86,0,1470,14],[87,0,1470,15],[89,0,1470,17],[90,0,1470,18],[94,0,1470,22],[95,0,1470,23],[130,0,1470,58],[131,0,1470,59],[135,0,1470,63],[137,0,1470,65],[157,0,1470,85],[158,0,1470,86],[159,0,1470,87]],[[8,0,1471,6],[50,0,1471,48]],[[8,0,1472,6],[11,0,1472,9],[12,0,1472,10],[13,0,1472,11],[21,0,1472,29],[23,0,1472,31],[25,0,1472,33]],[[12,0,1473,8],[19,0,1473,15],[27,0,1473,23]],[[17,0,1474,11],[20,0,1474,14],[21,0,1474,15],[25,0,1474,19],[26,0,1474,20],[28,0,1474,22],[29,0,1474,23],[43,0,1474,37],[44,0,1474,38],[48,0,1474,42],[50,0,1474,44],[54,0,1474,48],[55,0,1474,49],[57,0,1474,51],[58,0,1474,52],[67,0,1474,61],[68,0,1474,83],[69,0,1474,84],[70,0,1474,85]],[[8,0,1475,6],[9,0,1475,7],[10,0,1475,8],[11,0,1477,5],[12,0,1477,6]],[[4,0,1478,2],[5,0,1478,3]],[[4,0,1480,12],[43,0,1480,51],[44,0,1480,52],[57,0,1480,86],[59,0,1481,52],[82,0,1481,97],[84,0,1481,99]],[[8,0,1484,4],[15,0,1484,11],[19,0,1484,15],[20,0,1484,16],[46,0,1484,42],[47,0,1484,43],[60,0,1484,56],[61,0,1484,57],[62,0,1484,58],[66,0,1484,62]],[[8,0,1485,6],[21,0,1485,19]],[[8,0,1486,6],[12,0,1486,10],[13,0,1486,11],[14,0,1486,12],[15,0,1486,13],[17,0,1487,6],[25,0,1487,14],[26,0,1487,15],[27,0,1487,16],[32,0,1487,37],[34,0,1487,39],[36,0,1487,41]],[[12,0,1488,8],[16,0,1488,12],[28,0,1488,48],[29,0,1488,49]],[[12,0,1489,8],[24,0,1489,20],[27,0,1489,23],[32,0,1489,28],[33,0,1489,29],[36,0,1489,32],[37,0,1489,33],[41,0,1489,37],[42,0,1489,38],[44,0,1489,40],[45,0,1489,41],[49,0,1489,45],[50,0,1489,46],[63,0,1489,59],[64,0,1489,60],[68,0,1489,64],[69,0,1489,65],[86,0,1489,82],[87,0,1489,83],[90,0,1489,86],[92,0,1489,88],[112,0,1489,108],[113,0,1489,109],[114,0,1489,110],[115,0,1489,111]],[[12,0,1490,8],[19,0,1490,15],[32,0,1490,28],[33,0,1490,29],[45,0,1490,41],[46,0,1490,42],[47,0,1490,43]],[[8,0,1491,6],[9,0,1491,7],[10,0,1491,8],[12,0,1492,6],[15,0,1492,9],[16,0,1492,10],[17,0,1492,11],[22,0,1492,32],[24,0,1492,34],[26,0,1492,36]],[[12,0,1494,8],[16,0,1494,12],[21,0,1494,17],[24,0,1494,30],[26,0,1494,32],[27,0,1494,33]],[[12,0,1496,8],[17,0,1496,13],[18,0,1496,14],[25,0,1496,21],[26,0,1496,22],[30,0,1496,26],[31,0,1496,27],[33,0,1496,29]],[[16,0,1497,10],[21,0,1497,15],[24,0,1497,18],[29,0,1497,23],[30,0,1497,24],[36,0,1497,30],[37,0,1497,31],[41,0,1497,35],[42,0,1497,36],[77,0,1497,71],[78,0,1497,72],[82,0,1497,76],[84,0,1497,78],[104,0,1497,98],[105,0,1497,99],[106,0,1497,100],[107,0,1497,101]],[[12,0,1498,8],[13,0,1498,9],[14,0,1498,10],[15,0,1498,11]],[[12,0,1499,8],[19,0,1499,15],[24,0,1499,20],[25,0,1499,21]],[[8,0,1500,6],[9,0,1500,7],[10,0,1500,8],[12,0,1501,6],[15,0,1501,9],[16,0,1501,10],[17,0,1501,11],[25,0,1501,29],[27,0,1501,31],[29,0,1501,33]],[[12,0,1502,8],[19,0,1502,15],[27,0,1502,23]],[[17,0,1503,11],[20,0,1503,14],[21,0,1503,15],[25,0,1503,19],[26,0,1503,20],[28,0,1503,22],[29,0,1503,23],[43,0,1503,37],[44,0,1503,38],[48,0,1503,42],[50,0,1503,44],[54,0,1503,48],[55,0,1503,49],[57,0,1503,51],[58,0,1503,52],[67,0,1503,61],[68,0,1503,83],[69,0,1503,84],[70,0,1503,85]],[[8,0,1504,6],[9,0,1504,7],[10,0,1504,8],[11,0,1505,5],[12,0,1505,6]],[[4,0,1506,2],[5,0,1506,3]],[[4,0,1508,2]],[],[],[],[],[],[],[[7,0,1515,5]],[[4,0,1516,12],[33,0,1516,41],[34,0,1517,4],[38,0,1517,21],[40,0,1518,4],[63,0,1518,49],[65,0,1518,51]],[[8,0,1520,4],[14,0,1520,10],[19,0,1520,15],[22,0,1520,18],[26,0,1520,22],[27,0,1520,23],[62,0,1520,58],[63,0,1520,59],[67,0,1520,63],[69,0,1520,65],[89,0,1520,85],[90,0,1520,86],[91,0,1520,87]],[[8,0,1521,4],[15,0,1521,11],[20,0,1521,16],[21,0,1521,17],[24,0,1521,20],[25,0,1521,21],[29,0,1521,25],[30,0,1521,26],[32,0,1521,28],[33,0,1521,29],[47,0,1521,43],[48,0,1521,44],[52,0,1521,48],[54,0,1521,50],[58,0,1521,54],[59,0,1521,55],[61,0,1521,57],[62,0,1521,58],[71,0,1521,67],[72,0,1521,89],[73,0,1521,90],[74,0,1521,91]],[[4,0,1522,2],[5,0,1522,3]],[[4,0,1524,2]],[],[[7,0,1526,5]],[[4,0,1527,12],[39,0,1527,47],[40,0,1527,51],[44,0,1527,68],[46,0,1528,51],[69,0,1528,96],[71,0,1528,98]],[[8,0,1530,4],[12,0,1530,8],[32,0,1530,28],[36,0,1530,32],[40,0,1530,36],[44,0,1530,40],[64,0,1530,60],[65,0,1530,61],[71,0,1530,67],[76,0,1530,72],[77,0,1530,73],[79,0,1530,75]],[[12,0,1531,6],[19,0,1531,13],[20,0,1531,14],[24,0,1531,18],[25,0,1531,19],[42,0,1531,36],[43,0,1531,37],[47,0,1531,41],[48,0,1531,42],[49,0,1531,43]],[[9,0,1532,5]],[[8,0,1533,4],[12,0,1533,8],[20,0,1533,16],[23,0,1533,29],[25,0,1533,31],[26,0,1533,32]],[[8,0,1534,4],[16,0,1534,12],[17,0,1534,13],[21,0,1534,17],[22,0,1534,18],[26,0,1534,22],[27,0,1534,23],[44,0,1534,40],[45,0,1534,41],[49,0,1534,45],[50,0,1534,46],[51,0,1534,47]],[[8,0,1536,4],[28,0,1536,24],[29,0,1536,25],[36,0,1536,32],[37,0,1536,33],[40,0,1536,36],[41,0,1536,37],[43,0,1536,39]],[[12,0,1537,6],[16,0,1537,10],[21,0,1537,15],[22,0,1537,16],[29,0,1537,23],[30,0,1537,25],[34,0,1537,46],[35,0,1537,47],[38,0,1537,50],[39,0,1537,51],[43,0,1537,55],[44,0,1537,56],[45,0,1537,57],[49,0,1537,61],[50,0,1537,62],[53,0,1537,65],[54,0,1537,66],[59,0,1537,71],[61,0,1537,73]],[[16,0,1538,8],[89,0,1538,81]],[[16,0,1540,8],[22,0,1540,14],[27,0,1540,19],[30,0,1540,39],[34,0,1540,60],[35,0,1540,61],[38,0,1540,64],[39,0,1540,65],[43,0,1540,69],[44,0,1540,70],[45,0,1540,71]],[[16,0,1541,8],[21,0,1541,13],[22,0,1541,14],[29,0,1541,21],[30,0,1541,22],[37,0,1541,29],[38,0,1541,30],[40,0,1541,32]],[[20,0,1543,10],[24,0,1543,14],[27,0,1543,17],[28,0,1543,18],[42,0,1543,32],[44,0,1543,34]],[[24,0,1544,12],[32,0,1544,20],[35,0,1544,23],[43,0,1544,31],[44,0,1544,32],[50,0,1544,38],[51,0,1544,39],[55,0,1544,43],[56,0,1544,44],[91,0,1544,79],[92,0,1544,80],[99,0,1544,87],[101,0,1544,89],[104,0,1544,92],[105,0,1544,93],[119,0,1544,107],[120,0,1544,108],[121,0,1544,109],[122,0,1544,110]],[[21,0,1545,11]],[[25,0,1545,17]],[[24,0,1546,12],[32,0,1546,20],[33,0,1546,21],[37,0,1546,25],[38,0,1546,26],[45,0,1546,33],[46,0,1546,34],[63,0,1546,51],[64,0,1546,52],[68,0,1546,56],[69,0,1546,57],[70,0,1546,58]],[[21,0,1547,11]],[[16,0,1548,8],[17,0,1548,9],[18,0,1548,10],[19,0,1548,11]],[[13,0,1550,7]],[[17,0,1550,13],[19,0,1550,15],[52,0,1550,48]],[[16,0,1552,8],[20,0,1552,12],[23,0,1552,15],[24,0,1552,16],[38,0,1552,30],[40,0,1552,32]],[[20,0,1553,10],[28,0,1553,18],[31,0,1553,21],[39,0,1553,29],[40,0,1553,30],[46,0,1553,36],[47,0,1553,37],[51,0,1553,41],[52,0,1553,42],[87,0,1553,77],[88,0,1553,78],[92,0,1553,82],[94,0,1553,84],[97,0,1553,87],[98,0,1553,88],[112,0,1553,102],[113,0,1553,103],[114,0,1553,104],[115,0,1553,105]],[[17,0,1554,9]],[[21,0,1554,15]],[[20,0,1555,10],[26,0,1555,16],[33,0,1555,23],[36,0,1555,28],[40,0,1555,49],[41,0,1555,50],[44,0,1555,53],[45,0,1555,54],[49,0,1555,58],[50,0,1555,76],[51,0,1555,77]],[[20,0,1556,10],[24,0,1556,14],[31,0,1556,21],[35,0,1556,25],[39,0,1556,29],[43,0,1556,33],[49,0,1556,39],[53,0,1556,43],[60,0,1556,50],[61,0,1556,51],[78,0,1556,68],[80,0,1556,70]],[[24,0,1557,12],[32,0,1557,20],[33,0,1557,21],[37,0,1557,25],[38,0,1557,26],[45,0,1557,33],[46,0,1557,34],[63,0,1557,51],[64,0,1557,52],[68,0,1557,56],[69,0,1557,57],[70,0,1557,58]],[[21,0,1558,11]],[[20,0,1559,10],[77,0,1559,67]],[[17,0,1560,9]],[[13,0,1562,7]],[[8,0,1563,4],[9,0,1563,5],[10,0,1563,6],[11,0,1563,7]],[[8,0,1565,4],[15,0,1565,11],[23,0,1565,19],[24,0,1565,20]],[[4,0,1566,2],[5,0,1566,3]],[[4,0,1568,2]],[],[],[[7,0,1571,5]],[[4,0,1572,12],[44,0,1572,52],[45,0,1573,4],[49,0,1573,11],[51,0,1574,4],[74,0,1574,50],[76,0,1574,52]],[[8,0,1576,4],[61,0,1576,57]],[[8,0,1577,4],[12,0,1577,8],[22,0,1577,18],[25,0,1577,48],[27,0,1577,50],[28,0,1577,51]],[[8,0,1578,4],[14,0,1578,10],[28,0,1578,24],[31,0,1578,54],[33,0,1578,56],[34,0,1578,57]],[[8,0,1580,4],[116,0,1580,112]],[[8,0,1582,4],[30,0,1582,26]],[[8,0,1583,4],[13,0,1583,9],[19,0,1583,15],[20,0,1583,16],[23,0,1583,19],[25,0,1583,21],[30,0,1583,26],[31,0,1583,27],[35,0,1583,31],[41,0,1583,37],[42,0,1583,38],[49,0,1583,45],[50,0,1583,46],[54,0,1583,50],[55,0,1583,51],[57,0,1583,53]],[[12,0,1584,6],[39,0,1584,33]],[[12,0,1585,6],[16,0,1585,10],[36,0,1585,30],[40,0,1585,34],[60,0,1585,54],[61,0,1585,55],[67,0,1585,61],[70,0,1585,64],[71,0,1585,65],[73,0,1585,67]],[[16,0,1586,8],[22,0,1586,14],[41,0,1586,33],[44,0,1586,69],[64,0,1586,89],[65,0,1586,90],[69,0,1586,94],[70,0,1586,95],[77,0,1586,102],[78,0,1586,103],[80,0,1586,105],[81,0,1586,106],[88,0,1586,113],[89,0,1586,114],[93,0,1586,118],[98,0,1586,123],[101,0,1586,126],[102,0,1586,127],[103,0,1586,128]],[[16,0,1588,8],[20,0,1588,12],[39,0,1588,31],[41,0,1588,33]],[[20,0,1589,10],[34,0,1589,24],[35,0,1589,25],[38,0,1589,28],[39,0,1589,29],[42,0,1589,32],[47,0,1589,37],[48,0,1589,38]],[[17,0,1590,9]],[[21,0,1590,15]],[[20,0,1591,10],[30,0,1591,20],[31,0,1591,21],[34,0,1591,24],[35,0,1591,25],[38,0,1591,28],[43,0,1591,33],[44,0,1591,34]],[[17,0,1592,9]],[[13,0,1593,7]],[[17,0,1593,13]],[[16,0,1594,8],[26,0,1594,18],[29,0,1594,21],[33,0,1594,25],[34,0,1594,26]],[[13,0,1595,7]],[[9,0,1596,5]],[[8,0,1599,4],[15,0,1599,11]],[[12,0,1600,6],[22,0,1600,16]],[[12,0,1601,6],[26,0,1601,20]],[[9,0,1602,37],[10,0,1602,38]],[[4,0,1603,2],[5,0,1603,3]],[[4,0,1605,2]],[],[],[],[],[],[],[[7,0,1612,5]],[[4,0,1613,12],[16,0,1613,24],[17,0,1613,25],[22,0,1613,42]],[[8,0,1614,4],[15,0,1614,11],[19,0,1614,15],[20,0,1614,16],[25,0,1614,21],[26,0,1614,22],[32,0,1614,28],[34,0,1614,30],[35,0,1614,31],[36,0,1614,32],[40,0,1614,36],[41,0,1615,6],[45,0,1615,10],[46,0,1615,11],[47,0,1615,12],[48,0,1615,13],[49,0,1616,5],[50,0,1616,6]],[[4,0,1617,2],[5,0,1617,3]],[[1,0,1618,1]],[[0,0,1621,0]],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,1634,3]],[[0,0,1635,0],[6,0,1635,6],[13,0,1635,13],[27,0,1635,27]],[[4,0,1639,2],[16,0,1639,21],[19,0,1639,48]],[[8,0,1639,21],[16,0,1639,24],[19,0,1639,21],[22,0,1639,24],[23,0,1639,48]],[[8,0,1637,9],[29,0,1637,25],[32,0,1637,47],[34,0,1637,49],[35,0,1637,50]],[[4,0,1640,2],[5,0,1640,3]],[[4,0,1642,2],[55,0,1642,53]],[[4,0,1643,2],[10,0,1643,8],[11,0,1643,9],[19,0,1643,17],[20,0,1643,21],[29,0,1643,41],[31,0,1643,43],[35,0,1643,55]],[[8,0,1644,4],[14,0,1644,10],[17,0,1644,13],[20,0,1644,16],[30,0,1644,26],[31,0,1644,27],[40,0,1644,36],[42,0,1644,38],[46,0,1644,42],[47,0,1644,69],[48,0,1644,70]],[[8,0,1645,4],[15,0,1645,11],[19,0,1645,15],[23,0,1645,19],[24,0,1645,20],[27,0,1645,23],[28,0,1645,24],[29,0,1645,25]],[[4,0,1646,2],[5,0,1646,3]],[[4,0,1648,2],[59,0,1648,57]],[[4,0,1649,2],[8,0,1649,6],[13,0,1649,11]],[[8,0,1650,4],[15,0,1650,11],[20,0,1650,16],[21,0,1650,17],[25,0,1650,21],[26,0,1650,22],[29,0,1650,25],[31,0,1650,27],[34,0,1650,30],[38,0,1650,34],[39,0,1650,35],[55,0,1650,51],[56,0,1650,52],[57,0,1650,53]],[[4,0,1651,2],[5,0,1651,3]],[[4,0,1653,2],[90,0,1653,88]],[[4,0,1654,2],[12,0,1654,10]],[[8,0,1655,4],[15,0,1655,11],[19,0,1655,15],[20,0,1655,16],[27,0,1655,23],[28,0,1655,27],[32,0,1655,31],[33,0,1655,32],[38,0,1655,37],[39,0,1655,38],[40,0,1655,39],[41,0,1655,40]],[[4,0,1656,2],[5,0,1656,3]],[[4,0,1658,2],[9,0,1658,7],[10,0,1658,8],[19,0,1658,37],[21,0,1658,39],[26,0,1658,59],[28,0,1658,61],[33,0,1658,75]],[[8,0,1659,4],[12,0,1659,8],[13,0,1659,9],[29,0,1659,25],[30,0,1659,26],[34,0,1659,30],[35,0,1659,31],[40,0,1659,36],[41,0,1659,37],[50,0,1659,46],[52,0,1659,48],[57,0,1659,53],[59,0,1659,55],[64,0,1659,60],[65,0,1659,61],[66,0,1659,62],[67,0,1659,63]],[[8,0,1660,4],[15,0,1660,11],[19,0,1660,15],[20,0,1660,16]],[[4,0,1661,2],[5,0,1661,3]],[[4,0,1663,2],[11,0,1663,9],[12,0,1663,10],[21,0,1663,39],[23,0,1663,41],[35,0,1663,72]],[[8,0,1664,4],[12,0,1664,8],[13,0,1664,9],[29,0,1664,25],[30,0,1664,26],[34,0,1664,30],[35,0,1664,31],[42,0,1664,38],[43,0,1664,39],[52,0,1664,48],[54,0,1664,50],[66,0,1664,62],[67,0,1664,63],[68,0,1664,64],[69,0,1664,65]],[[8,0,1665,4],[15,0,1665,11],[19,0,1665,15],[20,0,1665,16]],[[4,0,1666,2],[5,0,1666,3]],[[4,0,1668,2],[9,0,1668,7],[10,0,1668,8],[16,0,1668,22]],[[8,0,1669,4],[12,0,1669,8],[13,0,1669,9],[29,0,1669,25],[30,0,1669,26],[34,0,1669,30],[35,0,1669,31],[40,0,1669,36],[41,0,1669,37],[47,0,1669,43],[48,0,1669,44],[49,0,1669,45],[50,0,1669,46]],[[8,0,1670,4],[15,0,1670,11],[19,0,1670,15],[20,0,1670,16]],[[4,0,1671,2],[5,0,1671,3]],[[4,0,1673,2],[15,0,1673,13],[16,0,1673,14],[22,0,1673,28]],[[8,0,1674,4],[12,0,1674,8],[13,0,1674,9],[29,0,1674,25],[30,0,1674,26],[34,0,1674,30],[35,0,1674,31],[46,0,1674,42],[47,0,1674,43],[53,0,1674,49],[54,0,1674,50],[55,0,1674,51],[56,0,1674,52]],[[8,0,1675,4],[15,0,1675,11],[19,0,1675,15],[20,0,1675,16]],[[4,0,1676,2],[5,0,1676,3]],[[4,0,1681,2],[11,0,1681,9],[12,0,1681,10],[20,0,1681,46],[22,0,1681,48],[25,0,1681,51],[36,0,1681,73]],[[8,0,1682,4],[12,0,1682,8],[20,0,1682,16],[22,0,1682,18]],[[12,0,1683,6],[16,0,1683,10],[17,0,1683,11],[33,0,1683,27],[34,0,1683,28],[38,0,1683,32],[39,0,1683,33],[46,0,1683,40],[47,0,1683,41],[55,0,1683,49],[56,0,1683,50],[57,0,1683,51],[58,0,1683,52]],[[9,0,1684,5]],[[13,0,1684,11],[17,0,1684,15],[28,0,1684,26],[30,0,1684,28]],[[12,0,1685,6],[16,0,1685,10],[17,0,1685,11],[33,0,1685,27],[34,0,1685,28],[38,0,1685,32],[39,0,1685,33],[46,0,1685,40],[47,0,1685,41],[50,0,1685,44],[61,0,1685,55],[62,0,1685,56],[63,0,1685,57],[64,0,1685,58]],[[9,0,1686,5]],[[8,0,1687,4],[15,0,1687,11],[19,0,1687,15],[20,0,1687,16]],[[4,0,1688,2],[5,0,1688,3]],[[4,0,1693,2],[14,0,1693,12],[15,0,1693,13],[23,0,1693,49],[25,0,1693,51],[28,0,1693,54],[39,0,1693,76]],[[8,0,1694,4],[12,0,1694,8],[20,0,1694,16],[22,0,1694,18]],[[12,0,1695,6],[16,0,1695,10],[17,0,1695,11],[33,0,1695,27],[34,0,1695,28],[38,0,1695,32],[39,0,1695,33],[49,0,1695,43],[50,0,1695,44],[58,0,1695,52],[59,0,1695,53],[60,0,1695,54],[61,0,1695,55]],[[9,0,1696,5]],[[13,0,1696,11],[17,0,1696,15],[28,0,1696,26],[30,0,1696,28]],[[12,0,1697,6],[16,0,1697,10],[17,0,1697,11],[33,0,1697,27],[34,0,1697,28],[38,0,1697,32],[39,0,1697,33],[49,0,1697,43],[50,0,1697,44],[53,0,1697,47],[64,0,1697,58],[65,0,1697,59],[66,0,1697,60],[67,0,1697,61]],[[9,0,1698,5]],[[8,0,1699,4],[15,0,1699,11],[19,0,1699,15],[20,0,1699,16]],[[4,0,1700,2],[5,0,1700,3]],[[4,0,1705,2],[9,0,1705,7],[10,0,1705,8],[18,0,1705,44],[20,0,1705,46],[23,0,1705,49],[34,0,1705,71]],[[8,0,1706,4],[12,0,1706,8],[20,0,1706,16],[22,0,1706,18]],[[12,0,1707,6],[16,0,1707,10],[17,0,1707,11],[33,0,1707,27],[34,0,1707,28],[38,0,1707,32],[39,0,1707,33],[44,0,1707,38],[45,0,1707,39],[53,0,1707,47],[54,0,1707,48],[55,0,1707,49],[56,0,1707,50]],[[9,0,1708,5]],[[13,0,1708,11],[17,0,1708,15],[28,0,1708,26],[30,0,1708,28]],[[12,0,1709,6],[16,0,1709,10],[17,0,1709,11],[33,0,1709,27],[34,0,1709,28],[38,0,1709,32],[39,0,1709,33],[44,0,1709,38],[45,0,1709,39],[48,0,1709,42],[59,0,1709,53],[60,0,1709,54],[61,0,1709,55],[62,0,1709,56]],[[9,0,1710,5]],[[8,0,1711,4],[15,0,1711,11],[19,0,1711,15],[20,0,1711,16]],[[4,0,1712,2],[5,0,1712,3]],[[4,0,1717,2],[13,0,1717,11],[14,0,1717,12],[22,0,1717,48],[24,0,1717,50],[27,0,1717,53],[38,0,1717,75]],[[8,0,1718,4],[12,0,1718,8],[20,0,1718,16],[22,0,1718,18]],[[12,0,1719,6],[16,0,1719,10],[17,0,1719,11],[33,0,1719,27],[34,0,1719,28],[38,0,1719,32],[39,0,1719,33],[48,0,1719,42],[49,0,1719,43],[57,0,1719,51],[58,0,1719,52],[59,0,1719,53],[60,0,1719,54]],[[9,0,1720,5]],[[13,0,1720,11],[17,0,1720,15],[28,0,1720,26],[30,0,1720,28]],[[12,0,1721,6],[16,0,1721,10],[17,0,1721,11],[33,0,1721,27],[34,0,1721,28],[38,0,1721,32],[39,0,1721,33],[48,0,1721,42],[49,0,1721,43],[52,0,1721,46],[63,0,1721,57],[64,0,1721,58],[65,0,1721,59],[66,0,1721,60]],[[9,0,1722,5]],[[8,0,1723,4],[15,0,1723,11],[19,0,1723,15],[20,0,1723,16]],[[4,0,1724,2],[5,0,1724,3]],[[1,0,1726,1]]],"sourcesContent":["import {combineLatest, forkJoin, from, Observable, of} from 'rxjs';\r\n\r\nimport {catchError, filter, map, mergeMap, switchMap, take, tap} from 'rxjs/operators';\r\nimport {\r\n  collection,\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  endAt,\r\n  endBefore,\r\n  FieldPath,\r\n  Firestore,\r\n  getDocs,\r\n  limit,\r\n  limitToLast,\r\n  orderBy,\r\n  OrderByDirection,\r\n  query,\r\n  Query,\r\n  QueryConstraint,\r\n  QuerySnapshot,\r\n  startAfter,\r\n  startAt,\r\n  where,\r\n  WhereFilterOp,\r\n  writeBatch,\r\n  WriteBatch\r\n} from 'firebase/firestore';\r\n\r\nimport {\r\n  addCreatedDate,\r\n  addDataToItem,\r\n  addModifiedDate,\r\n  convertTimestampToDate,\r\n  getDocRefWithId,\r\n  getRefFromPath,\r\n  getSubCollection\r\n} from './helpers';\r\nimport {SubCollectionQuery} from './sub-collection-query';\r\nimport {BaseFirestoreWrapper, FirestoreErrorExt} from './interfaces';\r\nimport {FireItem, FirestoreItem, FirestoreMetadata} from './models/firestoreItem';\r\nimport {SubCollectionWriter} from './sub-collection-writer';\r\nimport {moveItemInArray, transferArrayItem} from './drag-utils';\r\n\r\n/**\r\n * Action to be taken by listener if the document does not exist.\r\n */\r\nexport enum DocNotExistAction {\r\n  /** returns a null object */\r\n  RETURN_NULL,\r\n\r\n  /** return all the extras such as ref, path and so on but no data, kinda just ignores that the doc isn't there */\r\n  RETURN_ALL_BUT_DATA,\r\n\r\n  /** do not return at all until it does exist */\r\n  FILTER,\r\n\r\n  /** return doc not found error 'doc_not_found' */\r\n  THROW_DOC_NOT_FOUND,\r\n}\r\n\r\n/** Used internally */\r\ninterface CurrentDocSubCollectionSplit {\r\n  /** contains the document that is considered the current */\r\n  currentDoc: FireItem<{}>;\r\n  /** sub collections of current document */\r\n  subCollections: { [index: string]: any };\r\n}\r\n\r\n\r\n/**\r\n * Main Class.\r\n *\r\n *\r\n *\r\n */\r\nexport class FirestoreExtended {\r\n\r\n  /**\r\n   * Constructor for AngularFirestoreWrapper\r\n   *\r\n   * @param fs Firestore wrapper Firestore extended can be used by many Firestore implementations\r\n   * @param defaultDocId The default name given to a subCollection document when no name is given\r\n   */\r\n  constructor(private fs: BaseFirestoreWrapper, public defaultDocId: string = 'data') {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return this.fs.firestore;\r\n  }\r\n\r\n  /* ----------  LISTEN -------------- */\r\n\r\n  /**\r\n   *\r\n   * Allows for listening to documents and collections n deep up to the firestore max of 100 levels.\r\n   *\r\n   * Triggers for any change in any document that is listened to.\r\n   *\r\n   *\r\n   * E.x:\r\n   *      const subCollectionQueries: SubCollectionQuery[] = [\r\n   *         { name: 'data' },\r\n   *         { name: 'secure' },\r\n   *         { name: 'variants' },\r\n   *         { name: 'images',\r\n   *           queryFn: ref => ref.orderBy('index'),\r\n   *           collectionWithNames: [\r\n   *             { name: 'secure'}\r\n   *           ]\r\n   *         },\r\n   *     ];\r\n   *\r\n   *     this.listenForDocAndSubCollections<Product>(docFs, collections)\r\n   *\r\n   * Wrapper for listenForDocDeepRecursiveHelper$ so that we can cast the return to the correct type\r\n   * All logic is in listenForDocDeepRecursiveHelper$.\r\n   *\r\n   * @param docRef - a docRef with potential queryFn\r\n   * @param subCollectionQueries - see example\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  public listenForDoc$<T = FirestoreItem | DocumentData>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA): Observable<FireItem<T>> {\r\n\r\n    return this.listenForDocDeepRecursiveHelper$(docRef, subCollectionQueries, actionIfNotExist).pipe(\r\n      map(data => data as FireItem<T>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Same as AngularFirestoreCollection.snapshotChanges but it adds the properties in FirebaseDbItem.\r\n   *\r\n   * Important to understand this is will trigger for every change/update on any of the documents we are listening to.\r\n   * That means that if any document we are listening to is changed the entire object will be triggered containing the updated data.\r\n   *\r\n   *\r\n   *    Example usage.\r\n   *\r\n   *    ngFirestoreDeep: RxFirestoreExtended;  //  RxFirestoreExtended variable\r\n   *    restaurantCollectionFs = this.ngFireStore.collection('restaurants'); // AngularFirestoreCollectionRef to restaurants\r\n   *\r\n   *    constructor(private ngFireStore: AngularFirestore) {\r\n   *        this.ngFirestoreDeep = new RxFirestoreExtended(ngFireStore);  //  initialize AngularFireStoreDeep with AngularFirestore\r\n   *    }\r\n   *\r\n   *    listenForRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs);\r\n   *    }\r\n   *\r\n   *    If you do not wish to listen for changes and only care about getting the values once\r\n   *\r\n   *    getRestaurants$(): Observable<RestaurantItem[]> {\r\n   *        return this.ngFirestoreDeep.listenForCollection$<RestaurantItem>(this.restaurantCollectionFs).pipe(\r\n   *          take(1)\r\n   *        );\r\n   *    }\r\n   *\r\n   * @param _query the collectionRef which will be listened to\r\n   * @param subCollectionQueries\r\n   * @param documentChangeTypes list of DocumentChangeType that will be listened to, if null listen to all\r\n   */\r\n  public listenForCollection$<T = FirestoreItem | DocumentData>(\r\n    _query: Query<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.listenForCollectionSimple$<T>(_query).pipe(\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n\r\n        if (items == null || items.length === 0) {\r\n          return of([]);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(items);\r\n        }\r\n\r\n        const collectionListeners: Array<Observable<any>> = [];\r\n\r\n        items.forEach(item => {\r\n\r\n          const collectionListener = this.listenForCollectionsDeep(item, subCollectionQueries);\r\n\r\n          collectionListeners.push(collectionListener);\r\n        });\r\n\r\n        /* Finally return the combined collection listeners */\r\n        return combineLatest(collectionListeners);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Listens for collections inside collections with the same name to an unlimited depth and returns all of it as an array.\r\n   */\r\n  public listenForCollectionRecursively$<T = FirestoreItem | DocumentData>(\r\n    collectionPath: string,\r\n    collectionKey: string,\r\n    orderKey?: string): Observable<any> {\r\n\r\n    // const collectionRef = getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>;\r\n    const collectionQuery = new QueryContainer<T>(getRefFromPath(collectionPath, this.fs.firestore) as CollectionReference<T>);\r\n    if (orderKey != null) {\r\n      collectionQuery.orderBy(orderKey);\r\n    }\r\n\r\n    return this.listenForCollectionSimple$<T>(collectionQuery.query).pipe(\r\n      mergeMap((items: FireItem<T>[]) => {\r\n\r\n        if (items.length <= 0) {\r\n          return of([]);\r\n        } // TODO  perhaps make this throw an error so that we can skip it\r\n\r\n        // if (items.length <= 0) { throwError('No more '); }\r\n\r\n        const nextLevelObs: Array<Observable<FireItem<T>>> = [];\r\n\r\n        for (const item of items) {\r\n\r\n          // const nextLevelPath = item.firestoreMetadata.ref.collection(collectionKey).path;  // one level deeper\r\n          const nextLevelPath = item.firestoreMetadata.ref.path.concat('/', collectionKey);  // one level deeper\r\n\r\n          const nextLevelItems$ = this.listenForCollectionRecursively$(nextLevelPath, collectionKey, orderKey).pipe(\r\n            map((nextLevelItems: Array<FireItem<T>>) => {\r\n              if (nextLevelItems.length > 0) {\r\n                return {...item, [collectionKey]: nextLevelItems} as FireItem<T>;\r\n              } else {\r\n                return {...item} as FireItem<T>;\r\n              }  // dont include an empty array\r\n            }),\r\n          );\r\n          nextLevelObs.push(nextLevelItems$);\r\n        }\r\n\r\n        return combineLatest(nextLevelObs).pipe(\r\n          tap(val => console.log(val))\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  /* ---------- ADD -------------- */\r\n\r\n  /**\r\n   * Add document to firestore and split it up into sub collection.\r\n   *\r\n   * @param data the data to be saved\r\n   * @param collectionRef CollectionReference reference to where on firestore the item should be saved\r\n   * @param subCollectionWriters see documentation for SubCollectionWriter for more details on how these are used\r\n   * @param isAddDates if true 'createdDate' and 'modifiedDate' is added to the data\r\n   * @param docId If a docId is given it will use that specific id when saving the doc, if no docId is given a random id will be used.\r\n   */\r\n  public add$<T = FirestoreItem>(\r\n    data: T,\r\n    collectionRef: CollectionReference<T>,\r\n    subCollectionWriters: SubCollectionWriter[] = [],\r\n    isAddDates: boolean = true,\r\n    docId?: string): Observable<FireItem<T>> {\r\n\r\n    if (Array.isArray(data) && docId && subCollectionWriters.length > 0) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/invalid-sub-collection-writers',\r\n        code: 'unknown',\r\n        message: 'Cannot have both docId and subCollectionWriters at the same time when data is an array',\r\n        stack: '',\r\n        data,\r\n        subCollectionWriters,\r\n        docId\r\n      };\r\n\r\n      throw error;\r\n    }\r\n\r\n    let currentDoc;\r\n    let subCollections: { [index: string]: any; } = {};\r\n\r\n    /* if the data is an array and a docId is given the entire array will be saved in a single document with that docId,\r\n    * Each item in the array will be saved as a map with the key being the array index\r\n    * We still want the return value of this function to be as an array non as a map\r\n    */\r\n    if (Array.isArray(data) && docId) {\r\n      currentDoc = data;\r\n    } else {\r\n      const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n      currentDoc = split.currentDoc;\r\n      subCollections = split.subCollections;\r\n    }\r\n\r\n    return this.addSimple$<T>(currentDoc as T, collectionRef, isAddDates, docId).pipe(\r\n      /* Add Sub/sub collections*/\r\n      mergeMap((currentData: FireItem<T>) => {\r\n\r\n        const subWriters: Array<Observable<any>> = [];\r\n\r\n        for (const [subCollectionKey, subCollectionValue] of Object.entries(subCollections)) {\r\n          let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n          let subDocId: string | undefined;\r\n\r\n          if (subCollectionWriters) {\r\n            subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n            subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n          }\r\n\r\n          const subCollectionRef: CollectionReference = getSubCollection(currentData.firestoreMetadata.ref, subCollectionKey);\r\n\r\n          /* Handle array and object differently\r\n          * For example if array and no docId is given it means we should save each entry as a separate doc.\r\n          * If a docId is given we should save it using that docId under a single doc.\r\n          * If not an array it will always be saved as a single doc, using this.defaultDocId as the default docId if none is given */\r\n          if (Array.isArray(subCollectionValue)) {\r\n            if (subDocId !== undefined) { /* not undefined so save it as a single doc under that docId */\r\n\r\n              /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n              const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n                map(item => {\r\n                  // return {[key]: item};\r\n                  return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n                })\r\n              );\r\n              subWriters.push(subWriter);\r\n\r\n            } else { /* docId is undefined so we save each object in the array separate */\r\n              subCollectionValue.forEach((arrayValue: FireItem<{}>) => {\r\n\r\n                /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n                const subWriter = this.add$(arrayValue, subCollectionRef, subSubCollectionWriters, isAddDates).pipe(\r\n                  map(item => {\r\n                    // return {[key]: [item]};\r\n                    /* key and subCollectionValue as separate k,v properties -- subCollectionValue in an array */\r\n                    return {key: subCollectionKey, value: [item]};\r\n                  })\r\n                );\r\n\r\n                subWriters.push(subWriter);\r\n              });\r\n            }\r\n          } else { /* Not an array so a single Object*/\r\n            subDocId = subDocId !== undefined ? subDocId : this.defaultDocId;\r\n\r\n            /* the pipe only matters for the return subCollectionValue not for writing the data */\r\n            const subWriter = this.add$(subCollectionValue, subCollectionRef, subSubCollectionWriters, isAddDates, subDocId).pipe(\r\n              map(item => {\r\n                // return {[key]: item};\r\n                return {key: subCollectionKey, value: item}; /* key and subCollectionValue as separate k,v properties */\r\n              })\r\n            );\r\n\r\n            subWriters.push(subWriter);\r\n          }\r\n        } /* end of iteration */\r\n\r\n        if (subWriters.length > 0) { /* if subWriters.length > 0 it means we need to handle the subWriters */\r\n\r\n          /* the pipe only matters for the return value not for writing the data */\r\n          return combineLatest(subWriters).pipe(\r\n            // tap(sub => console.log(sub)),\r\n\r\n            // TODO super duper ugly way of joining the data together but I cannot think of a better way..also it doesnt really matter.\r\n            // TODO The ugliness only relates to how the return object looks after we add, it has no effect on how the object is saved on\r\n            // TODO firestore.\r\n\r\n            map((docDatas: Array<Map<string, []>>) => { /* List of sub docs*/\r\n              const groupedData = {};\r\n\r\n              docDatas.forEach((doc: { [index: string]: any }) => { /* iterate over each doc */\r\n\r\n                const key = doc.key;\r\n                const value = doc.value;\r\n\r\n                /* if groupedData has the key already it means that the several docs have the same key..so an array */\r\n                // @ts-ignore\r\n                if (groupedData.hasOwnProperty(key) && Array.isArray(groupedData[key])) {\r\n                  /* groupedData[key] must be an array since it already exist..add this doc.value to the array */\r\n                  // @ts-ignore\r\n                  (groupedData[key] as Array<any>).push(value[0]);\r\n                } else {\r\n                  // @ts-ignore\r\n                  groupedData[key] = value;\r\n                }\r\n              });\r\n\r\n              return groupedData as T;\r\n            }),\r\n\r\n            // tap(groupedData => console.log(groupedData)),\r\n\r\n            map((groupedData: T) => {\r\n              return {...currentData, ...groupedData} as T;\r\n            }),\r\n            // tap(d => console.log(d)),\r\n          );\r\n        } else {\r\n          return of(currentData);\r\n        }\r\n      })\r\n    ).pipe(\r\n      // @ts-ignore\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /* ----------  EDIT -------------- */\r\n\r\n  /**\r\n   * Update document and child documents\r\n   *\r\n   * Be careful when updating a document of any kind since we allow partial data there cannot be any type checking prior to update\r\n   * so its possible to introduce spelling mistakes on attributes and so forth\r\n   *\r\n   * @param data the data that is to be added or updated { [field: string]: any }\r\n   * @param docRef DocumentReference to be updated\r\n   * @param subCollectionWriters if the data contains properties that should be placed in child collections and documents specify that here\r\n   * @param isAddModifiedDate if true the modifiedDate property is added/updated on the affected documents\r\n   */\r\n  public update$<A extends { [field: string]: any }>(data: Partial<A>,\r\n                                                     docRef: DocumentReference,\r\n                                                     subCollectionWriters: SubCollectionWriter[] = [],\r\n                                                     isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (subCollectionWriters == null || subCollectionWriters.length === 0) {\r\n      return this.updateSimple$(data, docRef, isAddModifiedDate); // no subCollectionWriters so just do a simple update\r\n    }\r\n\r\n    const batch = this.updateDeepToBatchHelper(data, docRef, subCollectionWriters, isAddModifiedDate);\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Update/ add data to the firestore documents\r\n   *\r\n   * @param docRefs list of DocumentReference to be have their data updated\r\n   * @param data data to add/update\r\n   * @param isAddModifiedDate if true the modifiedDate is added/updated\r\n   */\r\n  public updateMultiple$<A>(docRefs: DocumentReference[], data: A, isAddModifiedDate: boolean = true): Observable<void> {\r\n    // const batch = this.fs.firebaseApp.firestore().batch();\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.update(docRef, data);\r\n    });\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /**\r\n   * Firestore doesn't allow you do change the name or move a doc directly so you will have to create a new doc under the new name\r\n   * and then delete the old doc.\r\n   * returns the new doc once the delete is done.\r\n   *\r\n   * @param docRef DocumentReference to have its id changed\r\n   * @param newId the new id\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to add them back\r\n   */\r\n  public changeDocId$<T>(docRef: DocumentReference,\r\n                         newId: string,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         subCollectionWriters?: SubCollectionWriter[]): Observable<FireItem<T>> {\r\n\r\n    if (subCollectionWriters == null) {\r\n      subCollectionWriters = subCollectionQueries as SubCollectionWriter[];\r\n    }\r\n\r\n    const collectionRef: CollectionReference = docRef.parent;\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      map((oldData: T) => this.cleanExtrasFromData(oldData, subCollectionWriters)),\r\n      switchMap((oldData: T) => {\r\n        return this.add$(oldData, collectionRef, subCollectionWriters, false, newId).pipe( /* add the data under id*/\r\n          mergeMap(newData => { /* delete the old doc */\r\n            return this.delete$(docRef, subCollectionQueries).pipe(\r\n              map(() => newData) /* keep the new data */\r\n            );\r\n          }),\r\n        );\r\n      }),\r\n      catchError(err => {\r\n        console.log('Failed to Change Doc Id: ' + err);\r\n        throw err;\r\n      }),\r\n      take(1),\r\n    );\r\n\r\n  }\r\n\r\n  /* Move Item in Array */\r\n\r\n\r\n  /**\r\n   * Moved item within the same list so we need to update the index of all items in the list;\r\n   * Use a copy if you dont wish to update the given array, for example when you want to just listen for the change of the db..\r\n   * The reason to not do this is because it takes some time for the db to update and it looks better if the list updates immediately.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   */\r\n  public moveItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                       fromIndex: number,\r\n                                                       toIndex: number,\r\n                                                       useCopy = false): Observable<void> {\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex || items.length <= 0) { // we didnt really move anything\r\n      return of();\r\n    }\r\n\r\n    if (items[0]?.firestoreMetadata == null) {\r\n      const error: FirestoreErrorExt = {\r\n        name: 'firestoreExt/unable-to-change-index-of-non-document',\r\n        code: 'not-found',\r\n        message: 'The array does not appear to be a firestore document or FireItem since it lacks firestoreMetadata',\r\n      };\r\n      throw error;\r\n    }\r\n\r\n    const batch = this.getBatchFromMoveItemInIndexedDocs(items, fromIndex, toIndex, useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  /**\r\n   * Does the heavy lifting when it comes to updating multiple docs to change their index.\r\n   * Not called directly.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param fromIndex\r\n   * @param toIndex\r\n   * @param useCopy if true the given array will not be updated\r\n   * @protected\r\n   */\r\n  protected getBatchFromMoveItemInIndexedDocs<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                           fromIndex: number,\r\n                                                                           toIndex: number,\r\n                                                                           useCopy = false): WriteBatch {\r\n\r\n    const lowestIndex = Math.min(fromIndex, toIndex);\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (fromIndex == null || toIndex == null || fromIndex === toIndex) { // we didnt really move anything\r\n      return batch;\r\n    }\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    moveItemInArray<A>(usedItems, fromIndex, toIndex);\r\n\r\n    const listSliceToUpdate: Array<FireItem<A>> = usedItems.slice(lowestIndex);\r\n\r\n    let i = lowestIndex;\r\n    for (const item of listSliceToUpdate) {\r\n      if (!useCopy) { // this is just so that the given array's index is also updated immediately\r\n        item.index = i;\r\n      }\r\n      const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n      batch.update(ref, {index: i});\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete an indexed document and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indexToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                indexToDelete: number,\r\n                                                                subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    const itemToDelete = usedItems[indexToDelete];\r\n\r\n    // get the delete batch that also contains any sub collections of the item\r\n    return this.getDeleteBatch$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n      map((batch) => {\r\n        // sort and remove the item from the usedItems and then add the update index to the batch\r\n        usedItems.sort(item => item.index); // make sure array is sorted by index\r\n        usedItems.splice(indexToDelete, 1);\r\n\r\n        this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch);\r\n\r\n        return batch;\r\n      }),\r\n\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use when you wish to delete several indexed documents and have the remaining documents update their indices to reflect the change.\r\n   *\r\n   * @param items array of FireItem<A> docs with index variables to be updated\r\n   * @param indicesToDelete\r\n   * @param subCollectionQueries\r\n   * @param useCopy\r\n   */\r\n  public deleteIndexedItemsInArray$<A extends { index: number }>(items: Array<FireItem<A>>,\r\n                                                                 indicesToDelete: number[],\r\n                                                                 subCollectionQueries: SubCollectionQuery[] = [],\r\n                                                                 useCopy: boolean = false): Observable<void> {\r\n\r\n    let usedItems: Array<FireItem<A>>;\r\n\r\n    if (useCopy) {\r\n      usedItems = Object.assign([], items);\r\n    } else {\r\n      usedItems = items;\r\n    }\r\n\r\n    usedItems.sort(item => item.index); // make sure array is sorted by index\r\n\r\n    const itemsToDelete = usedItems.filter((item, i) => {\r\n      return indicesToDelete.findIndex(_i => _i === i) !== -1;\r\n    });\r\n\r\n    // iterate in reverse so as to not change the indices,\r\n    // the indices to delete must also be sorted\r\n    indicesToDelete.sort();\r\n    for (let i = indicesToDelete.length - 1; i >= 0; i--) {\r\n      usedItems.splice(indicesToDelete[i], 1);\r\n    }\r\n\r\n    const docRefsObs$: Observable<DocumentReference[]>[] = [];\r\n\r\n    // get the docRefs for items to be deleted including the ones in the subCollections\r\n    itemsToDelete.forEach(itemToDelete => {\r\n\r\n      const obs$ = this.getDocumentReferencesDeep$(itemToDelete.firestoreMetadata.ref, subCollectionQueries).pipe(\r\n        take(1)\r\n      );\r\n      docRefsObs$.push(obs$);\r\n    });\r\n\r\n\r\n    return forkJoin(docRefsObs$).pipe(\r\n      take(1),\r\n      map((listOfDocRefs) => {\r\n        // concat all the separate docRefs lists into one array of docRefs\r\n        let docRefs: DocumentReference[] = [];\r\n\r\n        listOfDocRefs.forEach(refs => {\r\n          docRefs = docRefs.concat(refs);\r\n        });\r\n\r\n        return docRefs;\r\n      }),\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      map((batch: WriteBatch) => this.getBatchFromUpdateIndexFromListOfDocs<A>(usedItems, batch)),\r\n      switchMap((batch) => this.batchCommit$(batch))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Run this on collections with a fixed order using an index: number attribute;\r\n   * This will update that index with the index in the collectionData, so it should be sorted by index first.\r\n   * Basically needs to be run after a delete\r\n   *\r\n   * @param items\r\n   * @param batch\r\n   * @protected\r\n   */\r\n  protected getBatchFromUpdateIndexFromListOfDocs<A extends { index: number }>(\r\n    items: Array<FireItem<A>>,\r\n    batch: WriteBatch = writeBatch(this.fs.firestore)\r\n  ): WriteBatch {\r\n\r\n    items.forEach((item, index) => {\r\n      if (item.index !== index) {\r\n        item.index = index; // this is just so that the given array's index is also updated immediately\r\n        const ref = getRefFromPath(item.firestoreMetadata.path, this.fs.firestore) as DocumentReference;\r\n        batch.update(ref, {index});\r\n      }\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  public transferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): Observable<void> {\r\n\r\n    const batch: WriteBatch = this.getBatchFromTransferItemInIndexedDocs(previousArray,\r\n      currentArray,\r\n      previousIndex,\r\n      currentIndex,\r\n      currentArrayName,\r\n      additionalDataUpdateOnMovedItem,\r\n      isUpdateModifiedDateOnMovedItem,\r\n      useCopy);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n\r\n  /* ----------  DELETE -------------- */\r\n\r\n  /**\r\n   * Delete Document and child documents\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public delete$(docRef: DocumentReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<void> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      return this.fs.delete(docRef);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      switchMap((docRefList: DocumentReference<DocumentData>[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(); }\r\n      //   else { throw err; }\r\n      // }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns WriteBatch that is set to delete Document and child documents of given docRef\r\n   *\r\n   * @param docRef DocumentReference that is to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   * @param batch\r\n   */\r\n  public getDeleteBatch$(docRef: DocumentReference,\r\n                         subCollectionQueries: SubCollectionQuery[] = [],\r\n                         batch: WriteBatch = writeBatch(this.fs.firestore)): Observable<WriteBatch> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      // not deep so just do a normal doc delete\r\n      batch.delete(docRef);\r\n      return of(batch);\r\n    }\r\n\r\n    return this.getDocumentReferencesDeep$(docRef, subCollectionQueries).pipe(\r\n      map((docRefs: DocumentReference<DocumentData>[]) => this.getDeleteMultipleSimpleBatch(docRefs)),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public deleteMultipleByPaths$(docPaths: string[]): Observable<any> {\r\n    const docRefs: DocumentReference[] =\r\n      docPaths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n\r\n    return this.deleteMultipleSimple$(docRefs);\r\n  }\r\n\r\n  /**\r\n   * Delete Documents and child documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteMultiple$(docRefs: DocumentReference[], subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return this.deleteMultipleSimple$(docRefs);\r\n    }\r\n\r\n    const deepDocRefs$: Array<Observable<any>> = [];\r\n\r\n    docRefs.forEach(docRef => {\r\n      const docRefs$ = this.getDocumentReferencesDeep$(docRef, subCollectionQueries);\r\n      deepDocRefs$.push(docRefs$);\r\n    });\r\n\r\n    return combineLatest(deepDocRefs$).pipe(\r\n      // tap(lists => console.log(lists)),\r\n      map((lists: any[]) => {\r\n        let mainDocRefList: DocumentReference[] = [];\r\n        lists.forEach(list => {\r\n          mainDocRefList = mainDocRefList.concat(list);\r\n        });\r\n        return mainDocRefList;\r\n      }),\r\n      // tap(lists => console.log(lists)),\r\n      switchMap((docRefList: DocumentReference[]) => this.deleteMultipleSimple$(docRefList)),\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete all documents and sub collections as specified in subCollectionQueries.\r\n   * Not very efficient and causes a lot of db reads.\r\n   * If possible use the firebase CLI or the console instead when deleting large collections.\r\n   *\r\n   * @param collectionRef\r\n   * @param subCollectionQueries\r\n   */\r\n  public deleteCollection$(collectionRef: CollectionReference, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    return this.getDocumentReferencesFromCollectionRef$(collectionRef, subCollectionQueries).pipe(\r\n      switchMap(docRefs => this.deleteMultiple$(docRefs))\r\n    ).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete firestore document by path\r\n   * Convenience method in case we do not have direct access to the AngularFirestoreDocument reference\r\n   *\r\n   * @param docPath A string representing the path of the referenced document (relative to the root of the database).\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteDocByPath$(docPath: string, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n    const docRef = getRefFromPath(docPath, this.fs.firestore) as DocumentReference;\r\n    return this.delete$(docRef, subCollectionQueries);\r\n  }\r\n\r\n  /**\r\n   * Delete document by FirestoreItem\r\n   *\r\n   * Convenience method that works the same as deleteDeep$ but takes a FirestoreItem to be deleted\r\n   *\r\n   * @param item FirestoreItem to be deleted\r\n   * @param subCollectionQueries if the document has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  public deleteItem$<T>(item: FireItem<T>, subCollectionQueries: SubCollectionQuery[] = []): Observable<any> {\r\n\r\n    const docRefs = this.getDocumentReferencesFromItem(item, subCollectionQueries);\r\n\r\n    return this.deleteMultipleSimple$(docRefs).pipe(\r\n      // catchError((err) => { // TODO super ugly and I dont know why this error is thrown..still works\r\n      //   if (err === 'Document Does not exists') { return of(null); }\r\n      //   else { throw err; }\r\n      // }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n\r\n  /* ---- OTHER ---- */\r\n\r\n  /**\r\n   * clean FirestoreBaseItem properties from the data.\r\n   * Usually done if you wish to save the data to firestore, since some FirestoreBaseItem properties are of non allowed types.\r\n   *\r\n   * Goes through each level and removes DbItemExtras\r\n   * In case you wish to save the data\r\n   *\r\n   * @param data data to be cleaned, either single item or an array of items\r\n   * @param subCollectionWriters if the document has child documents the SubCollectionWriters are needed to locate them\r\n   * @param additionalFieldsToRemove\r\n   */\r\n\r\n  cleanExtrasFromData<T>(data: T & DocumentData,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): T;\r\n\r\n  cleanExtrasFromData<T>(datas: Array<T & DocumentData>,\r\n                         subCollectionWriters?: SubCollectionWriter[],\r\n                         additionalFieldsToRemove?: string[]): Array<T>;\r\n\r\n  public cleanExtrasFromData<T>(data: T & DocumentData | Array<T & DocumentData>,\r\n                                subCollectionWriters: SubCollectionWriter[] = [],\r\n                                additionalFieldsToRemove: string[] = []): T | Array<T> {\r\n\r\n    // const dataToBeCleaned = cloneDeep(data); /* clone data so we dont modify the original */\r\n    // const dataToBeCleaned = data;\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n      const cleanDatas: Array<T> = [];\r\n\r\n      data.forEach(d => {\r\n        cleanDatas.push(\r\n          this.removeDataExtrasRecursiveHelper(d, subCollectionWriters, additionalFieldsToRemove) as T\r\n        );\r\n      });\r\n\r\n      return cleanDatas;\r\n\r\n    } else {\r\n      return this.removeDataExtrasRecursiveHelper(data, subCollectionWriters, additionalFieldsToRemove) as T;\r\n    }\r\n  }\r\n\r\n\r\n  /* ----------  PROTECTED METHODS -------------- */\r\n\r\n  /**\r\n   * Same as AngularFirestoreDocument.snapshotChanges but it adds the properties in FirebaseDbItem\r\n   * and also allows for to choose action to take when document does not exist\r\n   *\r\n   * Important to understand this is will trigger for every change/update on the document we are listening to.\r\n   *\r\n   * @param docRef DocumentReference that will be listened to\r\n   * @param actionIfNotExist Action to take if document does not exist\r\n   */\r\n  protected listenForDocSimple$<T>(docRef: DocumentReference<any>,\r\n                                   actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_ALL_BUT_DATA\r\n  ): Observable<FireItem<T>> {\r\n\r\n    return this.fs.doc(docRef).pipe(\r\n      tap((snapshot: DocumentSnapshot) => {\r\n        if (!snapshot.exists() && actionIfNotExist === DocNotExistAction.THROW_DOC_NOT_FOUND) {\r\n          const error: FirestoreErrorExt = {\r\n            name: 'FirebaseErrorExt',\r\n            code: 'not-found',\r\n            message: 'Document not found and actionIfNotExist is set to THROW_DOC_NOT_FOUND',\r\n            docRef\r\n          };\r\n          throw error;\r\n        }\r\n      }),\r\n\r\n      filter((snapshot: DocumentSnapshot) => {\r\n        return !(snapshot.exists() && actionIfNotExist === DocNotExistAction.FILTER);\r\n      }),\r\n\r\n      map((snapshot: DocumentSnapshot) => {\r\n\r\n        console.log(snapshot.exists());\r\n\r\n        if (snapshot.exists() || actionIfNotExist === DocNotExistAction.RETURN_ALL_BUT_DATA) {\r\n          const data = snapshot.data() as T;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: snapshot.id,\r\n            ref: snapshot.ref as DocumentReference<T>,\r\n            path: docRef.path,\r\n            isExists: snapshot.exists(),\r\n            snapshotMetadata: snapshot.metadata\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else if (actionIfNotExist === DocNotExistAction.RETURN_NULL) { /* doc doesn't exist */\r\n          return null;\r\n        }\r\n        return null;\r\n      }),\r\n      map((data) => {\r\n        if (data != null) {\r\n          return convertTimestampToDate(data as FireItem<{}>);\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    ) as Observable<FireItem<T>>;\r\n  }\r\n\r\n  /**\r\n   * Listens for single collection and returns an array of documents as FireItem<T>[]\r\n   * Used internally, please use listenForCollection$() instead.\r\n   *\r\n   * @param _query the Query which will be listened to\r\n   * @protected\r\n   */\r\n  protected listenForCollectionSimple$<T>(_query: Query<T>): Observable<Array<FireItem<T>>> {\r\n    /**\r\n     * Returns an observable that will emit whenever the ref changes in any way.\r\n     * Also adds the id and ref to the object.\r\n     */\r\n    return this.fs.collection(_query).pipe(\r\n      map((snap: QuerySnapshot<T>) => {\r\n        return snap.docs.map(snapshot => {\r\n          const data = snapshot.data() as T;\r\n\r\n          const id = snapshot.id;\r\n          const ref = snapshot.ref as DocumentReference<T>;\r\n          const path = ref.path;\r\n          const snapshotMetadata = snapshot.metadata;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id,\r\n            path,\r\n            ref,\r\n            snapshotMetadata,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        });\r\n      }),\r\n      map((datas: Array<FireItem<T>>) => datas.map(data => {\r\n        convertTimestampToDate(data);\r\n        return data;\r\n      }))\r\n    ) as Observable<Array<FireItem<T>>>;\r\n  }\r\n\r\n  /**\r\n   * Used internally for both listenForDoc and listenForCollection in order to recursively get collections.\r\n   *\r\n   * Please use listenForDoc or listenForCollection.\r\n   *\r\n   * @param item\r\n   * @param subCollectionQueries\r\n   * @protected\r\n   */\r\n  protected listenForCollectionsDeep<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): Observable<FireItem<T>[]> {\r\n\r\n    if (item == null) {\r\n      return of([item]);\r\n    }\r\n    if (subCollectionQueries.length <= 0) {\r\n      return of([item]);\r\n    }\r\n\r\n    const collectionListeners: Array<Observable<any>> = [];\r\n\r\n    /* Iterate over each sub collection we have given and create collection listeners*/\r\n    subCollectionQueries.forEach(subCollectionQuery => {\r\n\r\n      const queryContainer = new QueryContainer(getSubCollection(item.firestoreMetadata.ref, subCollectionQuery.name));\r\n      if (subCollectionQuery.queryConstraints) {\r\n        queryContainer.queryConstraints = subCollectionQuery.queryConstraints;\r\n        // collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      }\r\n      // if (subCollectionQuery.queryFn) {\r\n      //   collectionRef = subCollectionQuery.queryFn(collectionRef) as CollectionReference;\r\n      // }\r\n\r\n      const collectionListener = this.listenForCollectionSimple$(queryContainer.query).pipe(\r\n        // filter(docs => docs.length > 0), // skip empty collections or if the subCollectionQuery doesnt exist\r\n        /* Uncomment to see data on each update */\r\n        // tap(d => console.log(d)),\r\n        // filter(docs => docs != null),\r\n        /* Listen For and Add any Potential Sub Docs*/\r\n        // @ts-ignore // TODO fix this so that I can remove the ts-ignore\r\n        mergeMap((items: FireItem<{}>[]) => {\r\n\r\n          if (!subCollectionQuery.subCollections) {\r\n            return of(items);\r\n          }\r\n\r\n          const docListeners: Array<Observable<any>> = [];\r\n\r\n          items = items.filter(d => d != null); // filter out potential nulls\r\n\r\n          items.forEach((subItem: FireItem<{}>) => {\r\n            const subDocAndCollections$ = this.listenForCollectionsDeep(subItem, subCollectionQuery.subCollections);\r\n            docListeners.push(subDocAndCollections$);\r\n          });\r\n\r\n          if (docListeners.length <= 0) {\r\n            return of([]);\r\n          } /* subCollectionQuery is empty or doesnt exist */\r\n\r\n          return combineLatest(docListeners).pipe(\r\n            // tap(val => console.log(val))\r\n          );\r\n        }), /* End of Listening for sub docs */\r\n        /* If docs.length === 1 and the id is defaultDocId or the given docId it means we are in a sub subCollectionQuery\r\n        and we only care about the data. So we remove the array and just make it one object with the\r\n        subCollectionQuery name as key and docs[0] as value */\r\n        map((items: FireItem<{}>[]) => {\r\n          const docId = subCollectionQuery.docId !== undefined ? subCollectionQuery.docId : this.defaultDocId;\r\n\r\n          if (items.length === 1 && items[0].firestoreMetadata.id === docId) {\r\n            return {[subCollectionQuery.name]: items[0]};\r\n          } else {\r\n            return {[subCollectionQuery.name]: items};\r\n          }\r\n        }),\r\n        // tap(d => console.log(d)),\r\n      );\r\n\r\n      collectionListeners.push(collectionListener);\r\n    });\r\n\r\n    /* Finally return the combined collection listeners*/\r\n    // @ts-ignore\r\n    return combineLatest(collectionListeners).pipe(\r\n      map((collectionDatas: { [collectionKeyName: string]: FireItem<FireItem<{}>>[] }[]) => {\r\n        // map((collectionDatas) => {\r\n        const datasMap: { [field: string]: any } = {};\r\n\r\n        collectionDatas.forEach((collectionData) => {\r\n\r\n          for (const [collectionName, items] of Object.entries(collectionData)) {\r\n            datasMap[collectionName] = items;\r\n          }\r\n        });\r\n        return datasMap;\r\n      }),\r\n\r\n      map((data: DocumentData) => {\r\n        return {...item, ...data} as FireItem<T>;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, meant to be used solely by listenForDocAndSubCollections$\r\n   */\r\n  protected listenForDocDeepRecursiveHelper$<T>(\r\n    docRef: DocumentReference,\r\n    subCollectionQueries: SubCollectionQuery[] = [],\r\n    actionIfNotExist: DocNotExistAction = DocNotExistAction.RETURN_NULL): Observable<any> {\r\n\r\n    /* Listen for the docFs*/\r\n    return this.listenForDocSimple$<T>(docRef, actionIfNotExist).pipe(\r\n      mergeMap((item: FireItem<{}>) => {\r\n\r\n        if (item === null) {\r\n          return of(item);\r\n        }\r\n        if (subCollectionQueries.length <= 0) {\r\n          return of(item);\r\n        }\r\n\r\n        return this.listenForCollectionsDeep(item, subCollectionQueries);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A replacement/extension to the AngularFirestoreCollection.add.\r\n   * Does the same as AngularFirestoreCollection.add but can also add createdDate and modifiedDate and returns\r\n   * the data with the added properties in FirebaseDbItem\r\n   *\r\n   * Used internally\r\n   *\r\n   * @param data the data to be added to the document, cannot contain types firestore won't allow\r\n   * @param collectionRef the CollectionReference where the document should be added\r\n   * @param isAddDates if true adds modifiedDate and createdDate to the data\r\n   * @param id if given the added document will be given this id, otherwise a random unique id will be used.\r\n   */\r\n  protected addSimple$<T>(data: T, collectionRef: CollectionReference<T>, isAddDates: boolean = true, id?: string):\r\n    Observable<FireItem<T>> {\r\n\r\n    // let dataToBeSaved: A = Object.assign({}, data);\r\n\r\n    let res$: Observable<any>;\r\n\r\n    if (isAddDates) {\r\n      const date = new Date();\r\n      data = addCreatedDate(data, false, date);\r\n      data = addModifiedDate(data, false, date);\r\n    }\r\n\r\n    if (id !== undefined) {\r\n      const docRef: DocumentReference = getDocRefWithId(collectionRef, id);\r\n      res$ = this.fs.set(docRef, data);\r\n    } else {\r\n      res$ = this.fs.add<T>(collectionRef, data);\r\n    }\r\n\r\n    // if (Array.isArray(data) && isAddDates) {\r\n    //   data = data.map(item => {\r\n    //     return {...item, modifiedDate: dataToBeSaved.modifiedDate, createdData: dataToBeSaved.createdData }\r\n    //   })\r\n    // }\r\n\r\n    res$ = res$.pipe(\r\n      // tap(() => this.snackBar.open('Success', 'Added', {duration: 1000})),\r\n      // tap(ref => console.log(ref)),\r\n      // tap(() => console.log(data)),\r\n      map((ref: DocumentReference<T> | undefined) => {\r\n        if (id === undefined && ref) {\r\n\r\n          const path = ref.path;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: ref.id,\r\n            path,\r\n            ref,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n\r\n        } else { // if id is defined it means we used docRef.set and ref is undefined\r\n          const path = collectionRef.path + '/' + id;\r\n          ref = getRefFromPath(path, this.fs.firestore) as DocumentReference<T>;\r\n\r\n          const firestoreMetadata: FirestoreMetadata<T> = {\r\n            id: id as string,\r\n            ref,\r\n            path,\r\n            isExists: true\r\n          };\r\n\r\n          return {...data, firestoreMetadata} as FireItem<T>;\r\n        }\r\n      }),\r\n    );\r\n\r\n    return res$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  /** Used internally for updates that doesn't affect child documents */\r\n  protected updateSimple$<A>(data: A, docRef: DocumentReference, isAddModifiedDate: boolean = true): Observable<void> {\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n    return this.fs.update(docRef, data);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, used by update deep\r\n   */\r\n  protected updateDeepToBatchHelper<A>(data: A,\r\n                                       docRef: DocumentReference,\r\n                                       subCollectionWriters: SubCollectionWriter[] = [],\r\n                                       isAddModifiedDate: boolean = true,\r\n                                       batch?: WriteBatch): WriteBatch {\r\n\r\n    if (batch === undefined) {\r\n      batch = writeBatch(this.fs.firestore);\r\n    }\r\n\r\n    if (isAddModifiedDate) {\r\n      data = addModifiedDate(data, false);\r\n    }\r\n\r\n    const split = this.splitDataIntoCurrentDocAndSubCollections(data, subCollectionWriters);\r\n    const currentDoc = split.currentDoc;\r\n    const subCollections = split.subCollections;\r\n\r\n    // console.log(currentDoc, subCollections);\r\n    batch.update(docRef, currentDoc);\r\n\r\n    for (const [subCollectionKey, subDocUpdateValue] of Object.entries(subCollections)) {\r\n\r\n      let subSubCollectionWriters: SubCollectionWriter[] | undefined; // undefined if no subCollectionWriters\r\n      let subDocId: string | undefined;\r\n\r\n      if (subCollectionWriters) {\r\n        subSubCollectionWriters = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.subCollections;\r\n        subDocId = subCollectionWriters.find(subColl => subColl.name === subCollectionKey)?.docId;\r\n      }\r\n\r\n      subDocId = subDocId !== undefined ? subDocId : this.defaultDocId; /* Set default if none given */\r\n\r\n      // const subDocFs = docRef.collection(subCollectionKey).doc(subDocId);\r\n      const subCollection = getSubCollection(docRef, subCollectionKey);\r\n      const subDocFs = getDocRefWithId(subCollection, subDocId);\r\n\r\n      batch = this.updateDeepToBatchHelper(subDocUpdateValue, subDocFs, subSubCollectionWriters, isAddModifiedDate, batch);\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Used mainly for drag and drop scenarios where we drag an item from one list to another and the the docs\r\n   * have an index value and a groupName.\r\n   *\r\n   * @param previousArray\r\n   * @param currentArray\r\n   * @param previousIndex\r\n   * @param currentIndex\r\n   * @param currentArrayName\r\n   * @param additionalDataUpdateOnMovedItem\r\n   * @param isUpdateModifiedDateOnMovedItem\r\n   * @param useCopy\r\n   * @protected\r\n   */\r\n  protected getBatchFromTransferItemInIndexedDocs<A extends { index: number, groupName: string }>(\r\n    previousArray: Array<FireItem<A>>,\r\n    currentArray: Array<FireItem<A>>,\r\n    previousIndex: number,\r\n    currentIndex: number,\r\n    currentArrayName: string,\r\n    additionalDataUpdateOnMovedItem?: { [key: string]: any },\r\n    isUpdateModifiedDateOnMovedItem = true,\r\n    useCopy = false): WriteBatch {\r\n\r\n    let usedPreviousArray: Array<FireItem<A>>;\r\n    let usedCurrentArray: Array<FireItem<A>>;\r\n    if (useCopy) {\r\n      usedPreviousArray = Object.assign([], previousArray);\r\n      usedCurrentArray = Object.assign([], currentArray);\r\n    } else {\r\n      usedPreviousArray = previousArray;\r\n      usedCurrentArray = currentArray;\r\n    }\r\n\r\n    transferArrayItem(usedPreviousArray, usedCurrentArray, previousIndex, currentIndex);\r\n\r\n    const batch: WriteBatch = writeBatch(this.fs.firestore);\r\n\r\n    if (additionalDataUpdateOnMovedItem !== undefined) {\r\n      const movedItem = usedCurrentArray[currentIndex];\r\n      const movedItemRef = movedItem.firestoreMetadata.ref;\r\n\r\n      const data = {...additionalDataUpdateOnMovedItem, groupName: currentArrayName};\r\n\r\n      if (!useCopy) {\r\n        addDataToItem(movedItem, data, true);\r\n      }\r\n\r\n      if (isUpdateModifiedDateOnMovedItem) {\r\n        const date = new Date();\r\n        addModifiedDate(data, true, date);\r\n\r\n        if (!useCopy) {\r\n          addModifiedDate(movedItem, true, date);\r\n        }\r\n      }\r\n      batch.update(movedItemRef, data);\r\n    }\r\n\r\n    const currentArraySliceToUpdate: Array<FireItem<A>> = usedCurrentArray.slice(currentIndex);\r\n    let i = currentIndex;\r\n    for (const item of currentArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    const prevArraySliceToUpdate: Array<FireItem<A>> = usedPreviousArray.slice(previousIndex);\r\n    i = previousIndex;\r\n    for (const item of prevArraySliceToUpdate) {\r\n      // @ts-ignore\r\n      batch.update(item.firestoreMetadata.ref, {index: i});\r\n\r\n      if (!useCopy) {\r\n        item.index = i;\r\n      }\r\n\r\n      i++;\r\n    }\r\n\r\n    return batch;\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete Documents\r\n   *\r\n   * @param docRefs - A list of DocumentReference that are to be deleted\r\n   */\r\n  protected deleteMultipleSimple$(docRefs: DocumentReference[]): Observable<void> {\r\n\r\n    const batch = this.getDeleteMultipleSimpleBatch(docRefs);\r\n\r\n    return this.batchCommit$(batch);\r\n  }\r\n\r\n  protected getDeleteMultipleSimpleBatch(docRefs: DocumentReference[], batch: WriteBatch = writeBatch(this.fs.firestore)): WriteBatch {\r\n\r\n    docRefs.forEach((docRef) => {\r\n      batch.delete(docRef);\r\n    });\r\n\r\n    return batch;\r\n  }\r\n\r\n  /**\r\n   * Recursive method to clean FirestoreBaseItem properties from the dbItem\r\n   *\r\n   * @param dbItem the data to be cleaned\r\n   * @param subCollectionWriters list of SubCollectionWriters to handle sub collections\r\n   * @param additionalFieldsToRemove\r\n   */\r\n  protected removeDataExtrasRecursiveHelper<T>(dbItem: T & DocumentData,\r\n                                               subCollectionWriters: SubCollectionWriter[] = [],\r\n                                               additionalFieldsToRemove: string[] = []): T {\r\n\r\n    // const extraPropertyNames: string[] = Object.getOwnPropertyNames(new DbItemExtras());\r\n    const extraPropertyNames: string[] = ['firestoreMetadata'].concat(additionalFieldsToRemove);\r\n\r\n    /* Current level delete */\r\n    for (const extraPropertyName of extraPropertyNames) {\r\n      delete dbItem[extraPropertyName];\r\n    }\r\n\r\n    subCollectionWriters.forEach(col => {\r\n      if (Array.isArray(dbItem[col.name])) { /* property is array so will contain multiple docs */\r\n\r\n        const docs: FireItem<T>[] = dbItem[col.name];\r\n        docs.forEach((d, i) => {\r\n\r\n          if (col.subCollections) {\r\n            this.removeDataExtrasRecursiveHelper(d, col.subCollections, additionalFieldsToRemove);\r\n          } else {\r\n            /*  */\r\n            for (const extraPropertyName of extraPropertyNames) {\r\n              delete dbItem[col.name][i][extraPropertyName];\r\n            }\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          this.removeDataExtrasRecursiveHelper(dbItem[col.name], col.subCollections, additionalFieldsToRemove);\r\n        } else {\r\n          for (const extraPropertyName of extraPropertyNames) {\r\n            delete dbItem[col.name][extraPropertyName];\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return dbItem;\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable containing a list of DocumentReference found under the given docRef using the SubCollectionQuery[]\r\n   * Mainly used to delete a docFs and its sub docs\r\n   * @param ref: DocumentReference | CollectionReference\r\n   * @param subCollectionQueries: SubCollectionQuery[]\r\n   */\r\n  protected getDocumentReferencesDeep$(ref: DocumentReference | CollectionReference,\r\n                                       subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    if (ref instanceof DocumentReference) {\r\n      return this.getDocumentReferencesFromDocRef$(ref, subCollectionQueries);\r\n    } else { // CollectionReference\r\n      return this.getDocumentReferencesFromCollectionRef$(ref, subCollectionQueries);\r\n    }\r\n  }\r\n\r\n  protected getDocumentReferencesFromDocRef$(docRef: DocumentReference,\r\n                                             subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForDoc$(docRef, subCollectionQueries).pipe(\r\n      take(1),\r\n      map(item => this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries)),\r\n      // tap(pathList => console.log(pathList)),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n      // tap(item => console.log(item)),\r\n    );\r\n  }\r\n\r\n  protected getDocumentReferencesFromCollectionRef$(collectionRef: CollectionReference,\r\n                                                    subCollectionQueries: SubCollectionQuery[] = []):\r\n    Observable<DocumentReference[]> {\r\n\r\n    return this.listenForCollectionSimple$(collectionRef).pipe(\r\n      // @ts-ignore\r\n      take(1),\r\n      mergeMap((items: FireItem<{}>[]) => {\r\n        let docListeners: Array<Observable<any>>;\r\n        docListeners = items.map(item => this.listenForDoc$(item.firestoreMetadata.ref, subCollectionQueries));\r\n        return combineLatest(docListeners);\r\n      }),\r\n      map((items: FireItem<{}>[]) => {\r\n\r\n        let paths: string[] = [];\r\n\r\n        items.forEach(item => {\r\n          paths = paths.concat(this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries));\r\n        });\r\n        return paths;\r\n      }),\r\n      map((pathList: string[]) => {\r\n        return pathList\r\n          .map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Used by deleteDeepByItem$ to get all the AngularFirestoreDocuments to be deleted\r\n   * including child documents using SubCollectionQueries\r\n   *\r\n   * Internal use\r\n   * @param item FirestoreItem from where we get the AngularFirestoreDocuments\r\n   * @param subCollectionQueries if the dbItem has child documents the subCollectionQueries are needed to locate them\r\n   */\r\n  protected getDocumentReferencesFromItem<T>(\r\n    item: FireItem<T>,\r\n    subCollectionQueries: SubCollectionQuery[] = []): DocumentReference[] {\r\n\r\n    const paths = this.getPathsFromItemDeepRecursiveHelper(item, subCollectionQueries);\r\n    return paths.map(path => getRefFromPath(path, this.fs.firestore) as DocumentReference);\r\n  }\r\n\r\n  /**\r\n   * DO NOT CALL THIS METHOD, its meant as a support method for getDocs$\r\n   */\r\n  protected getPathsFromItemDeepRecursiveHelper<T>(item: FireItem<T>,\r\n                                                   subCollectionQueries: SubCollectionQuery[] = []): string[] {\r\n\r\n    if (subCollectionQueries == null || subCollectionQueries.length === 0) {\r\n      return [item.firestoreMetadata.path];\r\n    }\r\n    let pathList: string[] = [];\r\n    pathList.push(item.firestoreMetadata.path);\r\n\r\n    subCollectionQueries.forEach(col => {\r\n      if (Array.isArray((item as DocumentData)[col.name]) && !col.docId) {\r\n        /* property is array and not using docId so will contain multiple docs */\r\n\r\n        const items: FireItem<{}>[] = (item as DocumentData)[col.name];\r\n        items.forEach(subItem => {\r\n\r\n          if (col.subCollections) {\r\n            pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(subItem, col.subCollections));\r\n          } else {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n        });\r\n\r\n      } else { /* not an array so a single doc*/\r\n\r\n        if (col.subCollections) {\r\n          pathList = pathList.concat(this.getPathsFromItemDeepRecursiveHelper(item, col.subCollections));\r\n        } else {\r\n          const subItem = ((item as DocumentData)[col.name] as FireItem<{}>);\r\n          if (subItem != null && 'path' in subItem.firestoreMetadata) {\r\n            pathList.push(subItem.firestoreMetadata.path);\r\n          }\r\n          // const path = (dbItem[col.name] as FirestoreItem).path;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    return pathList;\r\n  }\r\n\r\n  /**\r\n   * DO  NOT  CALL THIS METHOD, used in addDeep and updateDeep to split the data into currentDoc and subCollections\r\n   * Only goes one sub level deep;\r\n   */\r\n  protected splitDataIntoCurrentDocAndSubCollections<T>(\r\n    data: T,\r\n    subCollectionWriters: SubCollectionWriter[] = []): CurrentDocSubCollectionSplit {\r\n\r\n    /* Split data into current doc and sub collections */\r\n    let currentDoc: { [index: string]: any; } = {};\r\n    const subCollections: { [index: string]: any; } = {};\r\n\r\n    /* Check if the key is in subCollections, if it is place it in subCollections else place it in currentDoc */\r\n\r\n    // not array so object\r\n    for (const [key, value] of Object.entries(data)) {\r\n      // console.log(key, value);\r\n      if (subCollectionWriters && subCollectionWriters.length > 0) {\r\n        const subCollectionWriter: SubCollectionWriter | undefined = subCollectionWriters.find(subColl => subColl.name === key);\r\n\r\n        if (subCollectionWriter) {\r\n          subCollections[key] = value;\r\n        } else {\r\n          currentDoc[key] = value;\r\n        }\r\n      } else {\r\n        currentDoc = data;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      currentDoc,\r\n      subCollections\r\n    } as CurrentDocSubCollectionSplit;\r\n  }\r\n\r\n  /**\r\n   * Turn a batch into an Observable instead of Promise.\r\n   *\r\n   * For some reason angularfire returns a promise on batch.commit() instead of an observable like for\r\n   * everything else.\r\n   *\r\n   * This method turns it into an observable\r\n   */\r\n  protected batchCommit$(batch: WriteBatch): Observable<void> {\r\n    return from(batch.commit()).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Firebase version 9 changed the query syntax\r\n * The new syntax broken the ability to chain queries like this:\r\n *\r\n * collectionRef.where('foo', '==', 123).limit(10)..returns the collection ref\r\n *\r\n * now instead you must write it like this, query(collectionRef, where('foo', '==', 123), limit(10))...returns a Query\r\n *\r\n * which is ugly and make you loose the information that was present in the collectionRef since a Query is returned instead,\r\n * which holds less information than a CollectionReference.\r\n *\r\n * This Container is meant to allow you to chain queries, like before version 9 and also retain the information in\r\n * the original CollectionReference\r\n */\r\nexport class QueryContainer<T> {\r\n\r\n  public queryConstraints: QueryConstraint[] = [];\r\n\r\n  constructor(public ref: CollectionReference<T>) {\r\n  }\r\n\r\n  /** factory method to create container from path */\r\n  static fromPath<T>(firestore: Firestore, path: string): QueryContainer<T> {\r\n    const ref = collection(firestore, path) as CollectionReference<T>;\r\n    return new this(ref);\r\n  }\r\n\r\n  /** Returns the query with all the query constraints */\r\n  get query(): Query<T> {\r\n    return query(this.ref, ...this.queryConstraints);\r\n  }\r\n\r\n  /** Calls the firebase getDocs() method and listens for the documents in the query. */\r\n  getDocs$(): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs<T>(this.query));\r\n  }\r\n\r\n  where(fieldPath: string | FieldPath, opStr: WhereFilterOp, value: unknown): QueryContainer<T> {\r\n    this.queryConstraints.push(where(fieldPath, opStr, value));\r\n    return this;\r\n  }\r\n\r\n  orderBy(fieldPath: string | FieldPath, directionStr?: OrderByDirection): QueryContainer<T> {\r\n    this.queryConstraints.push(orderBy(fieldPath, directionStr));\r\n    return this;\r\n  }\r\n\r\n  limit(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limit(_limit));\r\n    return this;\r\n  }\r\n\r\n  limitToLast(_limit: number): QueryContainer<T> {\r\n    this.queryConstraints.push(limitToLast(_limit));\r\n    return this;\r\n  }\r\n\r\n  startAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  startAfter(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  startAfter(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(startAfter(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(startAfter(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endAt(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endAt(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endAt(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endAt(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endAt(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  endBefore(...fieldValues: unknown[]): QueryContainer<T>; // definition\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>): QueryContainer<T>; // definition\r\n\r\n  endBefore(snapshot?: DocumentSnapshot<unknown>, ...fieldValues: unknown[]): QueryContainer<T> { // implementation\r\n    if (snapshot) {\r\n      this.queryConstraints.push(endBefore(snapshot));\r\n    } else if (fieldValues) {\r\n      this.queryConstraints.push(endBefore(...fieldValues));\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./drag-utils":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\drag-utils.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1777,"body":[{"type":"ExportNamedDeclaration","start":71,"end":81,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","start":83,"end":1777}]},"code":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/* For Listening to a Doc and multiple sub collections in that doc */\r\nexport {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24tcXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxRUFBcUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGb3IgTGlzdGVuaW5nIHRvIGEgRG9jIGFuZCBtdWx0aXBsZSBzdWIgY29sbGVjdGlvbnMgaW4gdGhhdCBkb2MgKi9cclxuXHJcbmltcG9ydCB7UXVlcnlDb25zdHJhaW50fSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEZvciBMaXN0ZW5pbmcgdG8gYSBEb2N1bWVudCBhbmQgbXVsdGlwbGUgc3ViIENvbGxlY3Rpb25zIGluIHRoYXQgRG9jdW1lbnRcclxuICovXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25RdWVyeSB7XHJcblxyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSByZWFkLiAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIFNwZWNpZmllZCBEb2N1bWVudCBuYW1lIGlmIG11bHRpcGxlIGRvY3VtZW50cyBpbiBjb2xsZWN0aW9uIGlzIG5vdCB1c2VkICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBBbnkgU3ViQ29sbGVjdGlvbnMgdG8gYmUgcmVhZCBpbiB0aGUgQ29sbGVjdGlvbiAqL1xyXG4gIHN1YkNvbGxlY3Rpb25zPzogU3ViQ29sbGVjdGlvblF1ZXJ5W107XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogVGhlIENvbGxlY3Rpb24gUXVlcnlGbi5cclxuICAgKlxyXG4gICAqIEV4YW1wbGU6XHJcbiAgICogY29uc3QgcXVlcnkgPSByZWYud2hlcmUoJ3R5cGUnLCAnPT0nLCAnQm9vaycpXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ3ByaWNlJywgJz4nIDE4LjAwKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwcmljZScsICc8JyAxMDAuMDApXHJcbiAgICogICAgICAgICAgICAgICAgICAud2hlcmUoJ2NhdGVnb3J5JywgJz09JywgJ0ZpY3Rpb24nKVxyXG4gICAqICAgICAgICAgICAgICAgICAgLndoZXJlKCdwdWJsaXNoZXInLCAnPT0nLCAnQmlnUHVibGlzaGVyJylcclxuICAgKlxyXG4gICAqL1xyXG4gIC8vIHF1ZXJ5Rm4/OiBRdWVyeUZuO1xyXG4gIHF1ZXJ5Q29uc3RyYWludHM/OiBRdWVyeUNvbnN0cmFpbnRbXTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"sub-collection-query.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/sub-collection-query.ts"],"names":[],"mappings":[[[0,0,0,0],[69,0,0,69]]],"sourcesContent":["/* For Listening to a Doc and multiple sub collections in that doc */\r\n\r\nimport {QueryConstraint} from 'firebase/firestore';\r\n\r\n/**\r\n * For Listening to a Document and multiple sub Collections in that Document\r\n */\r\n\r\nexport interface SubCollectionQuery {\r\n\r\n  /** the name of the subCollection to be read. */\r\n  name: string;\r\n\r\n  /** Specified Document name if multiple documents in collection is not used */\r\n  docId?: string;\r\n\r\n  /** Any SubCollections to be read in the Collection */\r\n  subCollections?: SubCollectionQuery[];\r\n\r\n  /**\r\n   *\r\n   * The Collection QueryFn.\r\n   *\r\n   * Example:\r\n   * const query = ref.where('type', '==', 'Book')\r\n   *                  .where('price', '>' 18.00)\r\n   *                  .where('price', '<' 100.00)\r\n   *                  .where('category', '==', 'Fiction')\r\n   *                  .where('publisher', '==', 'BigPublisher')\r\n   *\r\n   */\r\n  // queryFn?: QueryFn;\r\n  queryConstraints?: QueryConstraint[];\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8006,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViQ29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXHJcbiAgICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YkNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","start":12,"end":8006}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViQ29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXHJcbiAgICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YkNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWNvbGxlY3Rpb24td3JpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvc3ViLWNvbGxlY3Rpb24td3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVGhlIGFiaWxpdHkgdG8gcGxhY2UgZG9jcyBhbmQgY29sbGVjdGlvbiBuIGRlZXAgYnV0IGFsc28gZmxhdHRlbiB0aGUgaXQgaW4gb3JkZXIgdG8gcmVkdWNlIHJlYWRzLlxyXG4gKiBJdCBiZWNvbWVzIGEgYmFsYW5jZSBiZXR3ZWVuIHNwZWVkIGFuZCBlY29ub215LiBTaW5jZSBtdWx0aXBsZSBkb2NzIGNhbiBiZSByZWFkIHNpbXVsdGFuZW91c2x5IGJ1dCB3aWxsIGNvc3QgbW9yZS5cclxuICogVGhlc2UgY2xhc3NlcyBhaW0gdG8gbWFrZSBpdCBlYXN5IHRvIGNvbnRyb2wgdGhhdC5cclxuICpcclxuICogQWxsb3dzIHlvdSB0byBoYXZlIGEgY29tcGxleCBkZWVwIG9iamVjdCBhbmQgd3JpdGUgaXQgdG8gZmlyZXN0b3JlIGJ5IHNwbGl0dGluZyBpdCB1cCBpbiB0byBjb2xsZWN0aW9ucyBhbmQgZG9jdW1lbnRzLlxyXG4gKlxyXG4gKiBFeGFtcGxlIHNlcnZpY2VzIG9iamVjdCB0aGF0IHdlIHdpc2ggdG8gc2F2ZSB0byBmaXJlc3RvcmUuXHJcbiAqXHJcbiAqICAgIGNvbnN0IHNlcnZpY2VzID0ge1xyXG4gKiAgICAgICBuYW1lOiAnZXhhbXBsZSBzZXJ2aWNlcycsXHJcbiAqICAgICAgIGFkZHJlc3M6IHtcclxuICogICAgICAgICAgemlwY29kZTogMTIzNDUsXHJcbiAqICAgICAgICAgIGNpdHk6ICdleGFtcGxlIGNpdHknLFxyXG4gKiAgICAgICAgICBsaW5lMTogJzEyIGV4YW1wbGUgcmQnXHJcbiAqICAgICAgIH0sXHJcbiAqICAgICAgIGRpc2hlczogW1xyXG4gKiAgICAgICAgIHtcclxuICogICAgICAgICAgIG5hbWU6ICdkaXNoMScsXHJcbiAqICAgICAgICAgICBpbWFnZXM6IFtcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZS5qcGd9LFxyXG4gKiAgICAgICAgICAgICB7dXJsOiBleGFtcGxlMi5qcGd9XHJcbiAqICAgICAgICAgICBdXHJcbiAqICAgICAgICAgfSxcclxuICogICAgICAgICB7XHJcbiAqICAgICAgICAgICBuYW1lOiAnZGlzaDInLFxyXG4gKiAgICAgICAgICAgaW1hZ2VzOiBbXHJcbiAqICAgICAgICAgICAgIHt1cmw6IGV4YW1wbGUuanBnfSxcclxuICogICAgICAgICAgICAge3VybDogZXhhbXBsZTIuanBnfVxyXG4gKiAgICAgICAgICAgXVxyXG4gKiAgICAgICAgIH1cclxuICogICAgICAgXVxyXG4gKiAgICAgICByZXZpZXdzOiBbXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA1XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2RlY2VudCBmb29kJ1xyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICAgICAge1xyXG4gKiAgICAgICAgICAgIHNjb3JlOiA4XHJcbiAqICAgICAgICAgICAgdGV4dDogJ2dvb2QgZm9vZCdcclxuICogICAgICAgICB9LFxyXG4gKiAgICAgICBdXHJcbiAqICAgIH1cclxuICpcclxuICogIFlvdSB3b3VsZCBiZSBhYmxlIHRvIHNhdmUgdGhpcyBkYXRhICdhcyBpcycgdG8gYSBzaW5nbGUgZmlyZXN0b3JlIGRvY3VtZW50IHVzaW5nIGFycmF5cyBhbmQgbWFwcy5cclxuICogIFRoZSBwcm9ibGVtIGNvbWVzIHdoZW4geW91IGxhdGVyIG9uIHdpc2ggdG8gYWRkL2RlbGV0ZSBvciBhbHRlciBhbiBpbWFnZSBvZiBkaXNoLlxyXG4gKlxyXG4gKiAgQW5vdGhlciBpc3N1ZSBpcyB0aGF0IHlvdSBtaWdodCBoYXZlIHRob3VzYW5kcyBvZiByZXZpZXdzIGFuZCBzaW5jZSB0aGV5IGFyZSBhbGwgc2F2ZWQgaW4gdGhlIHNhbWUgZG9jdW1lbnQuXHJcbiAqICBJZiBmb3IgZXhhbXBsZSB5b3Ugd2lzaCB0byBzaG93IGEgbGlzdCBvZiBhbGwgcmVzdGF1cmFudHMgYW5kIGFsbCB5b3Ugd2FudCB0byBzaG93IGlzIHRoZSBuYW1lIGJlZm9yZSBhIHVzZXIgY2xpY2tzXHJcbiAqICB0aGUgc2VydmljZXMgeW91IHdvdWxkIHN0aWxsIGhhdmUgdG8gZG93bmxvYWQgdGhlIGVudGlyZSBzZXJ2aWNlcyBvYmplY3QgY29udGFpbmluZyBhbGwgdGhvc2UgdGhvdXNhbmRzIG9mIHJldmlld3MuXHJcbiAqICBUaGlzIHdvdWxkIGJlIG9rIGluIHRlcm1zIG9mIGNvc3Qgb2YgcmVhZHMgYnV0IHZlcnkgZXhwZW5zaXZlIGluIHRlcm1zIG9mIHBlcmZvcm1hbmNlLlxyXG4gKiAgRWFjaCBzZXJ2aWNlcyBvYmplY3Qgd291bGQgYmUgaHVnZSwga2lsbGluZyB0aGUgdXNlcidzIGRhdGEgcGxhbiBhbmQgc2xvd2luZyBkb3duIHlvdXIgc2l0ZS5cclxuICpcclxuICogIEl0IHdvdWxkIGJlIG11Y2ggYmV0dGVyIHRvIG1ha2UgcmV2aWV3cyBhIGNvbGxlY3Rpb24gaW5zaWRlIHNlcnZpY2VzLiBUaGF0IHdheSB5b3UgY291bGQgc2hvdyB0aGUgc2VydmljZXMgbmFtZVxyXG4gKiAgd2l0aG91dCBkb3dubG9hZGluZyBhbGwgdGhlIHJldmlld3MuXHJcbiAqICBJZiB5b3Ugd2lzaCB0byBzaG93IGFuIGF2ZXJhZ2UgcmV2aWV3IHNjb3JlIHRoZSBtb3N0IGVmZmljaWVudCB3YXkgd291bGQgYmUgdG8gdG8gY2FsY3VsYXRlIHRoYXRcclxuICogIGVhY2ggdGltZSB5b3UgdXBkYXRlIHRoZSByZXZpZXcgY29sbGVjdGlvbiBhbmQgYWRkaW5nIHRoZSBhdmVyYWdlIHRvIHRoZSBzZXJ2aWNlcyBkb2N1bWVudC5cclxuICpcclxuICogIFdoYXQgdGhpcyB3cmFwcGVyIGludGVuZHMgdG8gZG8gaXMgdG8gc2ltcGxpZnkgc2F2aW5nIHNvbWUgZGF0YSBpbiBzdWIgY29sbGVjdGlvbnMgd2l0aG91dCBjaGFuZ2luZyB0aGUgd2F5IHlvdVxyXG4gKiAgd29yayB3aXRoIHRoZSBkYXRhLlxyXG4gKiAgU28geW91IGNvdWxkIGhhdmUgYSBzZXJ2aWNlcyBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgdGhlIGRhdGEgYW5kIHdoZW4geW91IGFkZCBpdCB0byBmaXJlc3RvcmUgdGhlIGRhdGEgaXMgYXV0b21hdGljYWxseVxyXG4gKiAgcGxhY2VkIGluIHlvdXIgc3ViIGNvbGxlY3Rpb25zIHdpdGhvdXQgeW91IGhhdmluZyB0byB3b3JyeSBhYm91dCBpdCBhZnRlciB5b3UgaW5pdGlhbGx5IHNldCBpdCB1cC5cclxuICpcclxuICogIEFub3RoZXIgaHVnZSBhZHZhbnRhZ2UgdG8gc2VwYXJhdGluZyB5b3VyIGRhdGEgaW4gdG8gc3ViIGNvbGxlY3Rpb25zIGlzIHRoYXQgaXQgYWxsb3dzIHlvdSB0byBjaG9vc2UgYmV0d2VlblxyXG4gKiAgcGVyZm9ybWFuY2UgYW5kIGNvc3QuXHJcbiAqICBTYXZpbmcgdGhlIGRhdGEgdG8gb25lIGxhcmdlIGRvY3VtZW50IHdvdWxkIHNhdmUgeW91ciBmaXJlc3RvcmUgcmVhZC93cml0ZXMgYW5kIGNvdWxkIHBvdGVudGlhbGx5IG1ha2UgYSBiaWcgZGlmZmVyZW5jZVxyXG4gKiAgaW4gdGVybXMgb2YgY29zdCBkZXBlbmRpbmcgb24geW91ciBhcHBsaWNhdGlvbi5cclxuICogIEJ1dCBpdCB3b3VsZCBhbHNvIHNsb3cgaXQgZG93biBhcyBleHBsYWluZWQgYWJvdmUuXHJcbiAqICBTcGxpdHRpbmcgeW91ciBkYXRhIHVwIGluIHRvIHN1YiBjb2xsZWN0aW9ucyBhbGxvd3MgeW91IHRvIGFzeW5jaHJvbm91c2x5IHJlYWQvd3JpdGUgdGhvc2UgY29sbGVjdGlvbnMgYXQgdGhlIHNhbWUgdGltZS5cclxuICpcclxuICogIFNvIGlmIHlvdSBjb21wYXJlIG9uZSBsYXJnZSBkb2N1bWVudCBhbmQgYSBzbWFsbCBkb2N1bWVudCB3aXRoIDQgc3ViQ29sbGVjdGlvbnMgb2YgYWJvdXQgZXF1YWwgc2l6ZS5cclxuICogIEl0IHdvdWxkIHJlcXVpcmUgNSBmaXJlc3RvcmUgcmVhZHMgaW5zdGVhZCBvZiAxIGlmIGVhY2ggc3ViIGNvbGxlY3Rpb24gY29udGFpbnMgMSBkb2N1bWVudC5cclxuICogIEJ1dCB0aGUgc3BlZWQgY291bGQgYWxzbyBwb3RlbnRpYWxseSBiZSA1WCBmYXN0ZXIgc2luY2UgYWxsIHRob3NlIHBhcnRzIGFyZSByZWFkIGF0IHRoZSBzYW1lIHRpbWUuXHJcbiAqXHJcbiAqICBVc2luZyBTdWJDb2xsZWN0aW9uV3JpdGVycyBhbmQgU3ViQ29sbGVjdGlvblF1ZXJpZXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgdGhlIHBlcmZlY3QgY29tcHJvbWlzZSBiZXR3ZWVuXHJcbiAqICBlYXNlIG9mIHdvcmtpbmcgd2l0aCB0aGUgZmlyZXN0b3JlIGRhdGFiYXNlLCBjb3N0IGFuZCBwZXJmb3JtYW5jZS5cclxuICpcclxuICogIC0gYWRkcmVzcyAoY29sbGVjdGlvbilcclxuICogIC0gcmV2aWV3cyAoY29sbGVjdGlvbilcclxuICogIC0gZGlzaGVzIChjb2xsZWN0aW9uKVxyXG4gKiAgICAtIGltYWdlcyAoY29sbGVjdGlvbilcclxuICpcclxuICogICAgQGV4YW1wbGVcclxuICogICAgY29uc3Qgc3ViQ29sbGVjdGlvbldyaXRlcnM6IFN1YkNvbGxlY3Rpb25Xcml0ZXJbXSA9IFtcclxuICogICAgICB7IG5hbWU6ICdkYXRhJyB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICdpbWFnZXMnLFxyXG4gKiAgICAgICAgZG9jSWQ6ICdkYXRhJywgIC8vIGltYWdlcyBpcyBhbiBhcnJheSBidXQgc2luY2UgYSBkb2NJZCBpcyBnaXZlbiBpdCBiZSBzYXZlZCBpbiBhIHNpbmdsZSBkb2NcclxuICogICAgICB9LFxyXG4gKiAgICAgIHtcclxuICogICAgICAgIG5hbWU6ICd2YXJpYW50cycsXHJcbiAqICAgICAgICBzdWJDb2xsZWN0aW9uV3JpdGVyczogWyAgLy8gc3ViIGNvbGxlY3Rpb24gaW5zaWRlIGEgc3ViIGNvbGxlY3Rpb25cclxuICogICAgICAgICAgeyBuYW1lOiAnb3RoZXJEYXRhJ31cclxuICogICAgICAgIF1cclxuICogICAgICB9XHJcbiAqICAgIF07XHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YkNvbGxlY3Rpb25Xcml0ZXIge1xyXG4gIC8qKiB0aGUgbmFtZSBvZiB0aGUgc3ViQ29sbGVjdGlvbiB0byBiZSBjcmVhdGVkLiBJZiBhIGtleSBpbiB0aGUgZGF0YSB0byBiZSB3cml0dGVuIGlzIHRoZSBzYW1lIGFzIHRoaXMgbmFtZSBpdCB3aWxsIGJlXHJcbiAgICogc2F2ZWQgc2VwYXJhdGVseSBpbiBhIHN1YiBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqIGlmIHRoZSBkYXRhIHRvIGJlIHdyaXR0ZW4gaXMgYW4gYXJyYXkgYW5kIGEgZG9jSWQgaXMgZ2l2ZW4gdGhlIGFycmF5IGlzIHNhdmVkIGFzIHNpbmdsZSBkb2N1bWVudCB1bmRlciB0aGF0IGRvY0lkLlxyXG4gICAqICBUaGUgYXJyYXkgd2lsbCBiZSB0dXJuZWQgaW4gdG8gYSBtYXAgd2l0aCB0aGUgaW5kZXggbnVtYmVyIGFzIHRoZSBrZXkuXHJcbiAgICogICAgICAgICAgICAgICAgICAgIGlmIG5vIGRvY0lkIGlzIGdpdmVuIHRoZSBhcnJheSB3aWxsIGJlIHNhdmVkIGFzIGluZGl2aWR1YWwgZG9jdW1lbnRzIHdpdGggcmFuZG9tIGlkcy5cclxuICAgKiAgICAgICAgICAgICAgICAgICAgaWYgbm8gZG9jSWQgaXMgZ2l2ZW4gYW5kIHRoZSBkYXRhIGlzIGFuIG9iamVjdCBhIHNpbmdsZSBkb2N1bWVudCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgYSBkZWZhdWx0IG5hbWVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgaS5lIHRoaXMuZGVmYXVsdERvY0lkXHJcbiAgICovXHJcbiAgZG9jSWQ/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBlYWNoIGNvbGxlY3Rpb24gY2FuIGNvbnRhaW4gb3RoZXIgc3ViIGNvbGxlY3Rpb25zLCB1bmxlc3MgYSBkb2NJZCBpcyBnaXZlbiBpbiB3aGljaCBjYXNlIHN1YkNvbGxlY3Rpb25Xcml0ZXJzXHJcbiAgICogY2Fubm90IGJlIHVzZWQgYW5kIGFuIGVycm9yIHdpbGwgYmUgdGhyb3duXHJcbiAgICovXHJcbiAgc3ViQ29sbGVjdGlvbnM/OiBTdWJDb2xsZWN0aW9uV3JpdGVyW107IC8vIHN1Yi9zdWIgY29sbGVjdGlvbnNcclxuXHJcbiAgLy8gLyoqIGlmIHRydWUgdGhlbiB0aGUgbmV4dCBsZXZlbCBzdWJDb2xsZWN0aW9uV3JpdGVycyB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgc2FtZSBsZXZlbCBhcyB0aGlzIHdpdGggYSByZWZlcmVuY2UgYmFja1xyXG4gIC8vICAqIHRvIHRoZSBsaW5rZWQgZGF0YSwgZ29vZCBmb3Igc2VjdXJlIHN1YkNvbHNcclxuICAvLyAgKi9cclxuICAvLyBpc0ZsYXQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2802,"body":[{"type":"ExportNamedDeclaration","start":0,"end":10,"declaration":null,"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","start":12,"end":2802}]},"code":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export {};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEEgY29udmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge1xyXG4gIENvbGxlY3Rpb25SZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnREYXRhLFxyXG4gIERvY3VtZW50UmVmZXJlbmNlLFxyXG4gIERvY3VtZW50U25hcHNob3QsXHJcbiAgRmlyZXN0b3JlLFxyXG4gIEZpcmVzdG9yZUVycm9yLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgU2V0T3B0aW9ucyxcclxuICBVcGRhdGVEYXRhXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbi8vIGV4cG9ydCB0eXBlIFF1ZXJ5PFQgPSBEb2N1bWVudERhdGE+ID0gRmlyZXN0b3JlUXVlcnk8VD47XHJcblxyXG4vLyBBIGNvbnZlbmllbmNlIHR5cGUgZm9yIG1ha2luZyBhIHF1ZXJ5LlxyXG4vLyBFeGFtcGxlOiBjb25zdCBxdWVyeSA9IChyZWYpID0+IHJlZi53aGVyZSgnbmFtZScsID09ICdkYXZpZCcpO1xyXG4vLyBleHBvcnQgdHlwZSBRdWVyeUZuPFQgPSBEb2N1bWVudERhdGE+ID0gKHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPikgPT4gUXVlcnk8VD47XHJcblxyXG4vLyBleHBvcnQgZGVjbGFyZSB0eXBlIEZpcmVzdG9yZUVycm9yQ29kZUV4dCA9ICdzZHNkc2QnICYgRmlyZXN0b3JlRXJyb3JDb2RlO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaXJlc3RvcmVFcnJvckV4dCBleHRlbmRzIEZpcmVzdG9yZUVycm9yLCBEb2N1bWVudERhdGEge1xyXG59XHJcblxyXG4vKiogVXNlZCBhcyBhIHdyYXBwZXIgZm9yIGFkZGluZyBhIGRvY3VtZW50LCBlaXRoZXIgZG9jIG9yIHBhdGggbXVzdCBiZSBzcGVjaWZpZWQsIGhlbHBzIHdoZW4gYWRkaW5nIG11bHRpcGxlICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkRG9jdW1lbnRXcmFwcGVyPEE+IHtcclxuICAvKiogVGhlIGRhdGEgdG8gYmUgYWRkZWQgKi9cclxuICBkYXRhOiBBO1xyXG5cclxuICAvKiogUmVmZXJlbmNlIHRvIHRoZSBEb2N1bWVudCAqL1xyXG4gIHJlZj86IERvY3VtZW50UmVmZXJlbmNlO1xyXG5cclxuICAvKiogVGhlIHBhdGggdG8gdGhlIERvY3VtZW50ICovXHJcbiAgcGF0aD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBCYXNlRmlyZXN0b3JlV3JhcHBlciB7XHJcbiAgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZTtcclxuXHJcbiAgZG9jPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPERvY3VtZW50U25hcHNob3Q8VD4+O1xyXG5cclxuICBzZXQ8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVCwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBhZGQ8VD4oY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZTxUPiwgZGF0YTogVCk6IE9ic2VydmFibGU8RG9jdW1lbnRSZWZlcmVuY2U8VD4+O1xyXG5cclxuICB1cGRhdGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPiwgZGF0YTogVXBkYXRlRGF0YTxQYXJ0aWFsPFQ+Piwgb3B0aW9ucz86IFNldE9wdGlvbnMpOiBPYnNlcnZhYmxlPHZvaWQ+O1xyXG5cclxuICBkZWxldGU8VD4oZG9jUmVmOiBEb2N1bWVudFJlZmVyZW5jZTxUPik6IE9ic2VydmFibGU8dm9pZD47XHJcblxyXG4gIGNvbGxlY3Rpb248VD4ocXVlcnk6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PjtcclxufVxyXG4iXX0=","originalSourcemap":{"mappings":[],"names":[],"sources":[],"version":3},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4401,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"},"local":{"type":"Identifier","start":9,"end":22,"name":"combineLatest"}},{"type":"ImportSpecifier","start":24,"end":28,"imported":{"type":"Identifier","start":24,"end":28,"name":"noop"},"local":{"type":"Identifier","start":24,"end":28,"name":"noop"}}],"source":{"type":"Literal","start":36,"end":42,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":45,"end":98,"specifiers":[{"type":"ImportSpecifier","start":54,"end":57,"imported":{"type":"Identifier","start":54,"end":57,"name":"map"},"local":{"type":"Identifier","start":54,"end":57,"name":"map"}},{"type":"ImportSpecifier","start":59,"end":68,"imported":{"type":"Identifier","start":59,"end":68,"name":"startWith"},"local":{"type":"Identifier","start":59,"end":68,"name":"startWith"}},{"type":"ImportSpecifier","start":70,"end":73,"imported":{"type":"Identifier","start":70,"end":73,"name":"tap"},"local":{"type":"Identifier","start":70,"end":73,"name":"tap"}}],"source":{"type":"Literal","start":81,"end":97,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":100,"end":128,"declarations":[{"type":"VariableDeclarator","start":106,"end":127,"id":{"type":"Identifier","start":106,"end":109,"name":"nop"},"init":{"type":"ArrowFunctionExpression","start":112,"end":127,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":118,"end":127,"callee":{"type":"Identifier","start":118,"end":121,"name":"tap"},"arguments":[{"type":"Identifier","start":122,"end":126,"name":"noop"}],"optional":false}}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":512,"end":893,"declaration":{"type":"VariableDeclaration","start":519,"end":893,"declarations":[{"type":"VariableDeclarator","start":525,"end":892,"id":{"type":"Identifier","start":525,"end":546,"name":"combineLatestToObject"},"init":{"type":"ArrowFunctionExpression","start":549,"end":892,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":550,"end":561,"name":"observables"}],"body":{"type":"BlockStatement","start":566,"end":892,"body":[{"type":"VariableDeclaration","start":573,"end":611,"declarations":[{"type":"VariableDeclarator","start":579,"end":610,"id":{"type":"Identifier","start":579,"end":583,"name":"keys"},"init":{"type":"CallExpression","start":586,"end":610,"callee":{"type":"MemberExpression","start":586,"end":597,"object":{"type":"Identifier","start":586,"end":592,"name":"Object"},"property":{"type":"Identifier","start":593,"end":597,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":598,"end":609,"name":"observables"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":617,"end":889,"argument":{"type":"CallExpression","start":624,"end":888,"callee":{"type":"MemberExpression","start":624,"end":817,"object":{"type":"CallExpression","start":624,"end":812,"callee":{"type":"Identifier","start":624,"end":637,"name":"combineLatest"},"arguments":[{"type":"CallExpression","start":638,"end":811,"callee":{"type":"MemberExpression","start":638,"end":646,"object":{"type":"Identifier","start":638,"end":642,"name":"keys"},"property":{"type":"Identifier","start":643,"end":646,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":647,"end":810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":647,"end":648,"name":"k"}],"body":{"type":"BlockStatement","start":652,"end":810,"body":[{"type":"VariableDeclaration","start":663,"end":690,"declarations":[{"type":"VariableDeclarator","start":669,"end":689,"id":{"type":"Identifier","start":669,"end":672,"name":"obs"},"init":{"type":"MemberExpression","start":675,"end":689,"object":{"type":"Identifier","start":675,"end":686,"name":"observables"},"property":{"type":"Identifier","start":687,"end":688,"name":"k"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":700,"end":803,"argument":{"type":"ConditionalExpression","start":707,"end":802,"test":{"type":"CallExpression","start":707,"end":725,"callee":{"type":"MemberExpression","start":707,"end":720,"object":{"type":"Identifier","start":707,"end":712,"name":"Array"},"property":{"type":"Identifier","start":713,"end":720,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":721,"end":724,"name":"obs"}],"optional":false},"consequent":{"type":"CallExpression","start":741,"end":771,"callee":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"MemberExpression","start":741,"end":747,"object":{"type":"Identifier","start":741,"end":744,"name":"obs"},"property":{"type":"Literal","start":745,"end":746,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":748,"end":752,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":753,"end":770,"callee":{"type":"Identifier","start":753,"end":762,"name":"startWith"},"arguments":[{"type":"MemberExpression","start":763,"end":769,"object":{"type":"Identifier","start":763,"end":766,"name":"obs"},"property":{"type":"Literal","start":767,"end":768,"value":1,"raw":"1"},"computed":true,"optional":false}],"optional":false}],"optional":false},"alternate":{"type":"CallExpression","start":787,"end":802,"callee":{"type":"MemberExpression","start":787,"end":795,"object":{"type":"Identifier","start":787,"end":790,"name":"obs"},"property":{"type":"Identifier","start":791,"end":795,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":796,"end":801,"callee":{"type":"Identifier","start":796,"end":799,"name":"nop"},"arguments":[],"optional":false}],"optional":false}}}]}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":813,"end":817,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":818,"end":887,"callee":{"type":"Identifier","start":818,"end":821,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":822,"end":886,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":822,"end":823,"name":"b"}],"body":{"type":"CallExpression","start":827,"end":886,"callee":{"type":"MemberExpression","start":827,"end":835,"object":{"type":"Identifier","start":827,"end":828,"name":"b"},"property":{"type":"Identifier","start":829,"end":835,"name":"reduce"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":836,"end":881,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":837,"end":840,"name":"acc"},{"type":"Identifier","start":842,"end":845,"name":"val"},{"type":"Identifier","start":847,"end":848,"name":"i"}],"body":{"type":"ObjectExpression","start":854,"end":880,"properties":[{"type":"SpreadElement","start":856,"end":862,"argument":{"type":"Identifier","start":859,"end":862,"name":"acc"}},{"type":"Property","start":864,"end":878,"method":false,"shorthand":false,"computed":true,"key":{"type":"MemberExpression","start":865,"end":872,"object":{"type":"Identifier","start":865,"end":869,"name":"keys"},"property":{"type":"Identifier","start":870,"end":871,"name":"i"},"computed":true,"optional":false},"value":{"type":"Identifier","start":875,"end":878,"name":"val"},"kind":"init"}]}},{"type":"ObjectExpression","start":883,"end":885,"properties":[]}],"optional":false}}],"optional":false}],"optional":false}}]}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","start":895,"end":4401}]},"code":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","customTransformCache":false,"dependencies":["rxjs","rxjs/operators"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { combineLatest, noop } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nconst nop = () => tap(noop);\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = (observables) => {\r\n    const keys = Object.keys(observables);\r\n    return combineLatest(keys.map(k => {\r\n        const obs = observables[k];\r\n        return Array.isArray(obs)\r\n            ? obs[0].pipe(startWith(obs[1]))\r\n            : obs.pipe(nop());\r\n    })).pipe(map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {})));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBWXBELE1BQU0sR0FBRyxHQUFHLEdBQU0sRUFBRSxDQUFDLEdBQUcsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSWpDLFdBQWdCLEVBQW9CLEVBQUU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUV0QyxPQUFPLGFBQWEsQ0FDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzQixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUNILENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgbm9vcCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge21hcCwgc3RhcnRXaXRoLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yRGljdDxYPiB7XHJcbiAgW2tleTogc3RyaW5nXTogT2JzZXJ2YWJsZTxYPiB8IFtPYnNlcnZhYmxlPFg+LCBYXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB0eXBlIGBUYCBvZiBhbiBgT2JzZXJ2YWJsZTxUPmBcclxuICovXHJcbmV4cG9ydCB0eXBlIEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxBPiA9IEEgZXh0ZW5kcyBPYnNlcnZhYmxlPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xyXG5cclxuXHJcbmNvbnN0IG5vcCA9IDxUPigpID0+IHRhcDxUPihub29wKTtcclxuXHJcbi8qKlxyXG4gKiBUYWtlcyBhIGtleS92YWx1ZSBvYmplY3Qgb2Ygb2JzZXJ2YWJsZXMgb3IgdHVwbGVzOlxyXG4gKlxyXG4gKiBgYGBcclxuICoge1xyXG4gKiAgb2JzMTogb2YoMTIzKSxcclxuICogIG9iczI6IFtvZihcInZhbHVlXCIpLnBpcGUoZGVsYXkoMTAwMCkpLCBcInN0YXJ0V2l0aCB2YWx1ZVwiXSxcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYW5kIGV2ZXJ5IHRpbWUgb25lIG9mIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZXMgZW1pdHMsIGVtaXRzIGFuIG9iamVjdFxyXG4gKiB3aXRoIHRoZSBsYXRlc3QgdmFsdWUgZnJvbSBhbGwgb2JzZXJ2YWJsZXM6XHJcbiAqXHJcbiAqIGBgYFxyXG4gKiB7XHJcbiAqICBvYnMxOiAxMjMsXHJcbiAqICBvYnMyOiBcInN0YXJ0V2l0aCB2YWx1ZVwiLFxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNvbWJpbmVMYXRlc3RUb09iamVjdCA9IDxcclxuICBUSW4gZXh0ZW5kcyBPcGVyYXRvckRpY3Q8YW55PiwgVE91dCBleHRlbmRzIHsgW0sgaW4ga2V5b2YgVEluXTogRXh0cmFjdE9ic2VydmFibGVUeXBlPFRJbltLXT4gfVxyXG4gIC8vIFRPdXQgZXh0ZW5kcyB7IFtLIGluIGtleW9mIFRJbl06IEV4dHJhY3RPYnNlcnZhYmxlVHlwZTxUSW5bS10gZXh0ZW5kcyBBcnJheTxhbnk+ID8gVEluW0tdWzBdIDogVEluW0tdPiB9XHJcblxyXG4gID4ob2JzZXJ2YWJsZXM6IFRJbik6IE9ic2VydmFibGU8VE91dD4gPT4ge1xyXG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYnNlcnZhYmxlcyk7XHJcblxyXG4gIHJldHVybiBjb21iaW5lTGF0ZXN0KFxyXG4gICAga2V5cy5tYXAoayA9PiB7XHJcbiAgICAgIGNvbnN0IG9icyA9IG9ic2VydmFibGVzW2tdO1xyXG5cclxuICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JzKVxyXG4gICAgICAgID8gb2JzWzBdLnBpcGUoc3RhcnRXaXRoKG9ic1sxXSkpXHJcbiAgICAgICAgOiBvYnMucGlwZSggbm9wKCkpO1xyXG4gICAgfSksXHJcbiAgKS5waXBlKFxyXG4gICAgbWFwKGIgPT4gYi5yZWR1Y2UoKGFjYywgdmFsLCBpKSA9PiAoeyAuLi5hY2MsIFtrZXlzW2ldXTogdmFsIH0pLCB7fSkpXHJcbiAgKTtcclxufTtcclxuIl19","originalSourcemap":{"version":3,"file":"combine-latest-to-object.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/rxjs-ops/combine-latest-to-object.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[22,0,0,22],[24,0,0,24],[28,0,0,28],[30,0,0,42],[36,0,0,48],[42,0,0,54],[43,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[12,0,1,11],[14,0,1,13],[23,0,1,22],[25,0,1,24],[28,0,1,27],[30,0,1,29],[36,0,1,35],[52,0,1,51],[53,0,1,52]],[[0,0,13,0],[6,0,13,6],[9,0,13,9],[12,0,13,12],[15,0,13,18],[17,0,13,20],[18,0,13,21],[21,0,13,24],[22,0,13,28],[26,0,13,32],[27,0,13,33],[28,0,13,34]],[[0,0,15,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[7,0,35,7],[13,0,35,13],[34,0,35,34],[37,0,35,37],[38,0,39,4],[49,0,39,20],[51,0,39,40],[53,0,39,42]],[[4,0,40,2],[10,0,40,8],[14,0,40,12],[17,0,40,15],[23,0,40,21],[24,0,40,22],[28,0,40,26],[29,0,40,27],[40,0,40,38],[41,0,40,39],[42,0,40,40]],[[4,0,42,2],[11,0,42,9],[24,0,42,22],[25,0,43,4],[29,0,43,8],[30,0,43,9],[33,0,43,12],[34,0,43,13],[35,0,43,14],[36,0,43,15],[38,0,43,17]],[[8,0,44,6],[14,0,44,12],[17,0,44,15],[20,0,44,18],[31,0,44,29],[32,0,44,30],[33,0,44,31],[34,0,44,32],[35,0,44,33]],[[8,0,46,6],[15,0,46,13],[20,0,46,18],[21,0,46,19],[28,0,46,26],[29,0,46,27],[32,0,46,30],[33,0,46,31]],[[12,0,47,8],[13,0,47,9],[14,0,47,10],[17,0,47,13],[18,0,47,14],[19,0,47,15],[20,0,47,16],[21,0,47,17],[25,0,47,21],[26,0,47,22],[35,0,47,31],[36,0,47,32],[39,0,47,35],[40,0,47,36],[41,0,47,37],[42,0,47,38],[43,0,47,39],[44,0,47,40]],[[12,0,48,8],[13,0,48,9],[14,0,48,10],[17,0,48,13],[18,0,48,14],[22,0,48,18],[23,0,48,20],[26,0,48,23],[28,0,48,25],[29,0,48,26],[30,0,48,27]],[[4,0,49,4],[5,0,49,5],[6,0,49,6],[7,0,50,3],[8,0,50,4],[12,0,50,8],[13,0,51,4],[16,0,51,7],[17,0,51,8],[18,0,51,9],[19,0,51,10],[21,0,51,12],[22,0,51,13],[23,0,51,14],[24,0,51,15],[30,0,51,21],[31,0,51,22],[32,0,51,23],[35,0,51,26],[37,0,51,28],[40,0,51,31],[42,0,51,33],[43,0,51,34],[45,0,51,36],[47,0,51,38],[48,0,51,39],[49,0,51,40],[51,0,51,42],[54,0,51,45],[57,0,51,48],[59,0,51,50],[60,0,51,51],[64,0,51,55],[65,0,51,56],[66,0,51,57],[67,0,51,58],[68,0,51,59],[70,0,51,61],[73,0,51,64],[75,0,51,66],[76,0,51,67],[78,0,51,69],[80,0,51,71],[81,0,51,72],[82,0,51,73],[83,0,52,3],[84,0,52,4]],[[0,0,53,0],[1,0,53,1],[2,0,53,2]]],"sourcesContent":["import { combineLatest, noop, Observable } from 'rxjs';\r\nimport {map, startWith, tap } from 'rxjs/operators';\r\n\r\nexport interface OperatorDict<X> {\r\n  [key: string]: Observable<X> | [Observable<X>, X];\r\n}\r\n\r\n/**\r\n * Extracts the type `T` of an `Observable<T>`\r\n */\r\nexport type ExtractObservableType<A> = A extends Observable<infer B> ? B : never;\r\n\r\n\r\nconst nop = <T>() => tap<T>(noop);\r\n\r\n/**\r\n * Takes a key/value object of observables or tuples:\r\n *\r\n * ```\r\n * {\r\n *  obs1: of(123),\r\n *  obs2: [of(\"value\").pipe(delay(1000)), \"startWith value\"],\r\n * }\r\n * ```\r\n *\r\n * and every time one of the source observables emits, emits an object\r\n * with the latest value from all observables:\r\n *\r\n * ```\r\n * {\r\n *  obs1: 123,\r\n *  obs2: \"startWith value\",\r\n * }\r\n * ```\r\n */\r\nexport const combineLatestToObject = <\r\n  TIn extends OperatorDict<any>, TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K]> }\r\n  // TOut extends { [K in keyof TIn]: ExtractObservableType<TIn[K] extends Array<any> ? TIn[K][0] : TIn[K]> }\r\n\r\n  >(observables: TIn): Observable<TOut> => {\r\n  const keys = Object.keys(observables);\r\n\r\n  return combineLatest(\r\n    keys.map(k => {\r\n      const obs = observables[k];\r\n\r\n      return Array.isArray(obs)\r\n        ? obs[0].pipe(startWith(obs[1]))\r\n        : obs.pipe( nop());\r\n    }),\r\n  ).pipe(\r\n    map(b => b.reduce((acc, val, i) => ({ ...acc, [keys[i]]: val }), {}))\r\n  );\r\n};\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5840,"body":[{"type":"ImportDeclaration","start":0,"end":28,"specifiers":[{"type":"ImportSpecifier","start":9,"end":13,"imported":{"type":"Identifier","start":9,"end":13,"name":"from"},"local":{"type":"Identifier","start":9,"end":13,"name":"from"}}],"source":{"type":"Literal","start":21,"end":27,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":30,"end":68,"specifiers":[{"type":"ImportSpecifier","start":39,"end":43,"imported":{"type":"Identifier","start":39,"end":43,"name":"take"},"local":{"type":"Identifier","start":39,"end":43,"name":"take"}}],"source":{"type":"Literal","start":51,"end":67,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":70,"end":176,"specifiers":[{"type":"ImportSpecifier","start":79,"end":85,"imported":{"type":"Identifier","start":79,"end":85,"name":"addDoc"},"local":{"type":"Identifier","start":79,"end":85,"name":"addDoc"}},{"type":"ImportSpecifier","start":87,"end":96,"imported":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"},"local":{"type":"Identifier","start":87,"end":96,"name":"deleteDoc"}},{"type":"ImportSpecifier","start":98,"end":104,"imported":{"type":"Identifier","start":98,"end":104,"name":"getDoc"},"local":{"type":"Identifier","start":98,"end":104,"name":"getDoc"}},{"type":"ImportSpecifier","start":106,"end":113,"imported":{"type":"Identifier","start":106,"end":113,"name":"getDocs"},"local":{"type":"Identifier","start":106,"end":113,"name":"getDocs"}},{"type":"ImportSpecifier","start":115,"end":127,"imported":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"},"local":{"type":"Identifier","start":115,"end":127,"name":"getFirestore"}},{"type":"ImportSpecifier","start":129,"end":135,"imported":{"type":"Identifier","start":129,"end":135,"name":"setDoc"},"local":{"type":"Identifier","start":129,"end":135,"name":"setDoc"}},{"type":"ImportSpecifier","start":137,"end":146,"imported":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"},"local":{"type":"Identifier","start":137,"end":146,"name":"updateDoc"}}],"source":{"type":"Literal","start":155,"end":175,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ExportNamedDeclaration","start":178,"end":1156,"declaration":{"type":"ClassDeclaration","start":185,"end":1156,"id":{"type":"Identifier","start":191,"end":207,"name":"FirestoreWrapper"},"superClass":null,"body":{"type":"ClassBody","start":208,"end":1156,"body":[{"type":"MethodDefinition","start":334,"end":408,"static":false,"computed":false,"key":{"type":"Identifier","start":334,"end":345,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":345,"end":408,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":346,"end":357,"name":"firebaseApp"}],"body":{"type":"BlockStatement","start":359,"end":408,"body":[{"type":"ExpressionStatement","start":370,"end":401,"expression":{"type":"AssignmentExpression","start":370,"end":400,"operator":"=","left":{"type":"MemberExpression","start":370,"end":386,"object":{"type":"ThisExpression","start":370,"end":374},"property":{"type":"Identifier","start":375,"end":386,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":389,"end":400,"name":"firebaseApp"}}}]}}},{"type":"MethodDefinition","start":414,"end":486,"static":false,"computed":false,"key":{"type":"Identifier","start":418,"end":427,"name":"firestore"},"kind":"get","value":{"type":"FunctionExpression","start":427,"end":486,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":430,"end":486,"body":[{"type":"ReturnStatement","start":441,"end":479,"argument":{"type":"CallExpression","start":448,"end":478,"callee":{"type":"Identifier","start":448,"end":460,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":461,"end":477,"object":{"type":"ThisExpression","start":461,"end":465},"property":{"type":"Identifier","start":466,"end":477,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":504,"end":562,"static":false,"computed":false,"key":{"type":"Identifier","start":504,"end":507,"name":"doc"},"kind":"method","value":{"type":"FunctionExpression","start":507,"end":562,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":508,"end":514,"name":"docRef"}],"body":{"type":"BlockStatement","start":516,"end":562,"body":[{"type":"ReturnStatement","start":527,"end":555,"argument":{"type":"CallExpression","start":534,"end":554,"callee":{"type":"Identifier","start":534,"end":538,"name":"from"},"arguments":[{"type":"CallExpression","start":539,"end":553,"callee":{"type":"Identifier","start":539,"end":545,"name":"getDoc"},"arguments":[{"type":"Identifier","start":546,"end":552,"name":"docRef"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":568,"end":666,"static":false,"computed":false,"key":{"type":"Identifier","start":568,"end":571,"name":"add"},"kind":"method","value":{"type":"FunctionExpression","start":571,"end":666,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":572,"end":585,"name":"collectionRef"},{"type":"Identifier","start":587,"end":591,"name":"data"}],"body":{"type":"BlockStatement","start":593,"end":666,"body":[{"type":"ReturnStatement","start":604,"end":659,"argument":{"type":"CallExpression","start":611,"end":658,"callee":{"type":"MemberExpression","start":611,"end":649,"object":{"type":"CallExpression","start":611,"end":644,"callee":{"type":"Identifier","start":611,"end":615,"name":"from"},"arguments":[{"type":"CallExpression","start":616,"end":643,"callee":{"type":"Identifier","start":616,"end":622,"name":"addDoc"},"arguments":[{"type":"Identifier","start":623,"end":636,"name":"collectionRef"},{"type":"Identifier","start":638,"end":642,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":645,"end":649,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":650,"end":657,"callee":{"type":"Identifier","start":650,"end":654,"name":"take"},"arguments":[{"type":"Literal","start":655,"end":656,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":672,"end":902,"static":false,"computed":false,"key":{"type":"Identifier","start":672,"end":675,"name":"set"},"kind":"method","value":{"type":"FunctionExpression","start":675,"end":902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":676,"end":682,"name":"docRef"},{"type":"Identifier","start":684,"end":688,"name":"data"},{"type":"Identifier","start":690,"end":697,"name":"options"}],"body":{"type":"BlockStatement","start":699,"end":902,"body":[{"type":"IfStatement","start":710,"end":895,"test":{"type":"Identifier","start":714,"end":721,"name":"options"},"consequent":{"type":"BlockStatement","start":723,"end":806,"body":[{"type":"ReturnStatement","start":738,"end":795,"argument":{"type":"CallExpression","start":745,"end":794,"callee":{"type":"MemberExpression","start":745,"end":785,"object":{"type":"CallExpression","start":745,"end":780,"callee":{"type":"Identifier","start":745,"end":749,"name":"from"},"arguments":[{"type":"CallExpression","start":750,"end":779,"callee":{"type":"Identifier","start":750,"end":756,"name":"setDoc"},"arguments":[{"type":"Identifier","start":757,"end":763,"name":"docRef"},{"type":"Identifier","start":765,"end":769,"name":"data"},{"type":"Identifier","start":771,"end":778,"name":"options"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":781,"end":785,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":786,"end":793,"callee":{"type":"Identifier","start":786,"end":790,"name":"take"},"arguments":[{"type":"Literal","start":791,"end":792,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":821,"end":895,"body":[{"type":"ReturnStatement","start":836,"end":884,"argument":{"type":"CallExpression","start":843,"end":883,"callee":{"type":"MemberExpression","start":843,"end":874,"object":{"type":"CallExpression","start":843,"end":869,"callee":{"type":"Identifier","start":843,"end":847,"name":"from"},"arguments":[{"type":"CallExpression","start":848,"end":868,"callee":{"type":"Identifier","start":848,"end":854,"name":"setDoc"},"arguments":[{"type":"Identifier","start":855,"end":861,"name":"docRef"},{"type":"Identifier","start":863,"end":867,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":870,"end":874,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":875,"end":882,"callee":{"type":"Identifier","start":875,"end":879,"name":"take"},"arguments":[{"type":"Literal","start":880,"end":881,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":908,"end":986,"static":false,"computed":false,"key":{"type":"Identifier","start":908,"end":914,"name":"delete"},"kind":"method","value":{"type":"FunctionExpression","start":914,"end":986,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":915,"end":921,"name":"docRef"}],"body":{"type":"BlockStatement","start":923,"end":986,"body":[{"type":"ReturnStatement","start":934,"end":979,"argument":{"type":"CallExpression","start":941,"end":978,"callee":{"type":"MemberExpression","start":941,"end":969,"object":{"type":"CallExpression","start":941,"end":964,"callee":{"type":"Identifier","start":941,"end":945,"name":"from"},"arguments":[{"type":"CallExpression","start":946,"end":963,"callee":{"type":"Identifier","start":946,"end":955,"name":"deleteDoc"},"arguments":[{"type":"Identifier","start":956,"end":962,"name":"docRef"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":965,"end":969,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":970,"end":977,"callee":{"type":"Identifier","start":970,"end":974,"name":"take"},"arguments":[{"type":"Literal","start":975,"end":976,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":992,"end":1091,"static":false,"computed":false,"key":{"type":"Identifier","start":992,"end":998,"name":"update"},"kind":"method","value":{"type":"FunctionExpression","start":998,"end":1091,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":999,"end":1005,"name":"docRef"},{"type":"Identifier","start":1007,"end":1011,"name":"data"},{"type":"Identifier","start":1013,"end":1020,"name":"options"}],"body":{"type":"BlockStatement","start":1022,"end":1091,"body":[{"type":"ReturnStatement","start":1033,"end":1084,"argument":{"type":"CallExpression","start":1040,"end":1083,"callee":{"type":"MemberExpression","start":1040,"end":1074,"object":{"type":"CallExpression","start":1040,"end":1069,"callee":{"type":"Identifier","start":1040,"end":1044,"name":"from"},"arguments":[{"type":"CallExpression","start":1045,"end":1068,"callee":{"type":"Identifier","start":1045,"end":1054,"name":"updateDoc"},"arguments":[{"type":"Identifier","start":1055,"end":1061,"name":"docRef"},{"type":"Identifier","start":1063,"end":1067,"name":"data"}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":1070,"end":1074,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1075,"end":1082,"callee":{"type":"Identifier","start":1075,"end":1079,"name":"take"},"arguments":[{"type":"Literal","start":1080,"end":1081,"value":1,"raw":"1"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1097,"end":1153,"static":false,"computed":false,"key":{"type":"Identifier","start":1097,"end":1107,"name":"collection"},"kind":"method","value":{"type":"FunctionExpression","start":1107,"end":1153,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1108,"end":1109,"name":"q"}],"body":{"type":"BlockStatement","start":1111,"end":1153,"body":[{"type":"ReturnStatement","start":1122,"end":1146,"argument":{"type":"CallExpression","start":1129,"end":1145,"callee":{"type":"Identifier","start":1129,"end":1133,"name":"from"},"arguments":[{"type":"CallExpression","start":1134,"end":1144,"callee":{"type":"Identifier","start":1134,"end":1141,"name":"getDocs"},"arguments":[{"type":"Identifier","start":1142,"end":1143,"name":"q"}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","start":1158,"end":5840}]},"code":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","customTransformCache":false,"dependencies":["rxjs","rxjs/operators","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { from } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { addDoc, deleteDoc, getDoc, getDocs, getFirestore, setDoc, updateDoc, } from 'firebase/firestore';\r\nexport class FirestoreWrapper {\r\n    /**\r\n     * Uses firebase/firestore directly\r\n     * Simply makes the returned Promises into Observables\r\n     */\r\n    constructor(firebaseApp) {\r\n        this.firebaseApp = firebaseApp;\r\n    }\r\n    get firestore() {\r\n        return getFirestore(this.firebaseApp);\r\n    }\r\n    // doc\r\n    doc(docRef) {\r\n        return from(getDoc(docRef));\r\n    }\r\n    add(collectionRef, data) {\r\n        return from(addDoc(collectionRef, data)).pipe(take(1));\r\n    }\r\n    set(docRef, data, options) {\r\n        if (options) {\r\n            return from(setDoc(docRef, data, options)).pipe(take(1));\r\n        }\r\n        else {\r\n            return from(setDoc(docRef, data)).pipe(take(1));\r\n        }\r\n    }\r\n    delete(docRef) {\r\n        return from(deleteDoc(docRef)).pipe(take(1));\r\n    }\r\n    update(docRef, data, options) {\r\n        return from(updateDoc(docRef, data)).pipe(take(1));\r\n    }\r\n    collection(q) {\r\n        return from(getDocs(q));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLXdyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9maXJlc3RvcmUtd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxPQUFPLEVBQ0wsTUFBTSxFQUVOLFNBQVMsRUFLVCxNQUFNLEVBQ04sT0FBTyxFQUNQLFlBQVksRUFHWixNQUFNLEVBR04sU0FBUyxHQUNWLE1BQU0sb0JBQW9CLENBQUM7QUFHNUIsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQjs7O09BR0c7SUFFSCxZQUFtQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUMzQyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNO0lBQ0MsR0FBRyxDQUFtQixNQUE0QjtRQUN2RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sR0FBRyxDQUFJLGFBQXFDLEVBQUUsSUFBTztRQUMxRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUMzQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFTSxHQUFHLENBQUksTUFBNEIsRUFBRSxJQUFPLEVBQUUsT0FBb0I7UUFFdkUsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEI7UUFDcEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNqQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ1IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUksTUFBNEIsRUFBRSxJQUE0QixFQUFFLE9BQW9CO1FBQ3hGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBYSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ25ELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUVNLFVBQVUsQ0FBSSxDQUFXO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7QmFzZUZpcmVzdG9yZVdyYXBwZXJ9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7dGFrZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xyXG5pbXBvcnQge1xyXG4gIGFkZERvYyxcclxuICBDb2xsZWN0aW9uUmVmZXJlbmNlLFxyXG4gIGRlbGV0ZURvYyxcclxuICBEb2N1bWVudERhdGEsXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXHJcbiAgRG9jdW1lbnRTbmFwc2hvdCxcclxuICBGaXJlc3RvcmUsXHJcbiAgZ2V0RG9jLFxyXG4gIGdldERvY3MsXHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIFF1ZXJ5LFxyXG4gIFF1ZXJ5U25hcHNob3QsXHJcbiAgc2V0RG9jLFxyXG4gIFNldE9wdGlvbnMsXHJcbiAgVXBkYXRlRGF0YSxcclxuICB1cGRhdGVEb2MsXHJcbn0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlV3JhcHBlciBpbXBsZW1lbnRzIEJhc2VGaXJlc3RvcmVXcmFwcGVyIHtcclxuICAvKipcclxuICAgKiBVc2VzIGZpcmViYXNlL2ZpcmVzdG9yZSBkaXJlY3RseVxyXG4gICAqIFNpbXBseSBtYWtlcyB0aGUgcmV0dXJuZWQgUHJvbWlzZXMgaW50byBPYnNlcnZhYmxlc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwKSB7XHJcbiAgfVxyXG5cclxuICBnZXQgZmlyZXN0b3JlKCk6IEZpcmVzdG9yZSB7XHJcbiAgICByZXR1cm4gZ2V0RmlyZXN0b3JlKHRoaXMuZmlyZWJhc2VBcHApO1xyXG4gIH1cclxuXHJcbiAgLy8gZG9jXHJcbiAgcHVibGljIGRvYzxUID0gRG9jdW1lbnREYXRhPihkb2NSZWY6IERvY3VtZW50UmVmZXJlbmNlPFQ+KTogT2JzZXJ2YWJsZTxEb2N1bWVudFNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2MoZG9jUmVmKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkPFQ+KGNvbGxlY3Rpb25SZWY6IENvbGxlY3Rpb25SZWZlcmVuY2U8VD4sIGRhdGE6IFQpOiBPYnNlcnZhYmxlPERvY3VtZW50UmVmZXJlbmNlPFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShhZGREb2MoY29sbGVjdGlvblJlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgIHRha2UoMSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0PEE+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8QT4sIGRhdGE6IEEsIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSwgb3B0aW9ucykpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZyb20oc2V0RG9jKGRvY1JlZiwgZGF0YSkpLnBpcGUoXHJcbiAgICAgICAgdGFrZSgxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4pOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiBmcm9tKGRlbGV0ZURvYyhkb2NSZWYpKS5waXBlKFxyXG4gICAgICB0YWtlKDEpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlPFQ+KGRvY1JlZjogRG9jdW1lbnRSZWZlcmVuY2U8VD4sIGRhdGE6IFVwZGF0ZURhdGE8UGFydGlhbDxUPj4sIG9wdGlvbnM/OiBTZXRPcHRpb25zKTogT2JzZXJ2YWJsZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gZnJvbSh1cGRhdGVEb2M8UGFydGlhbDxUPj4oZG9jUmVmLCBkYXRhKSkucGlwZShcclxuICAgICAgdGFrZSgxKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb2xsZWN0aW9uPFQ+KHE6IFF1ZXJ5PFQ+KTogT2JzZXJ2YWJsZTxRdWVyeVNuYXBzaG90PFQ+PiB7XHJcbiAgICByZXR1cm4gZnJvbShnZXREb2NzKHEpKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-wrapper.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-wrapper.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[13,0,0,12],[15,0,0,25],[21,0,0,31],[27,0,0,37],[28,0,0,38]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[13,0,2,12],[15,0,2,13],[21,0,2,19],[37,0,2,35],[38,0,2,36]],[[0,0,4,0],[7,0,4,7],[9,0,5,2],[15,0,5,8],[17,0,7,2],[26,0,7,11],[28,0,12,2],[34,0,12,8],[36,0,13,2],[43,0,13,9],[45,0,14,2],[57,0,14,14],[59,0,17,2],[65,0,17,8],[67,0,20,2],[76,0,20,11],[79,0,21,1],[85,0,21,7],[105,0,21,27],[106,0,21,28]],[[0,0,24,0],[6,0,24,6],[13,0,24,13],[29,0,24,29]],[[4,0,25,2]],[],[],[[7,0,28,5]],[[4,0,30,2],[16,0,30,21],[27,0,30,45]],[[8,0,30,21],[24,0,30,32],[27,0,30,21],[38,0,30,32],[39,0,30,45]],[[4,0,31,2],[5,0,31,3]],[[4,0,33,2],[8,0,33,6],[17,0,33,15]],[[8,0,34,4],[15,0,34,11],[27,0,34,23],[28,0,34,24],[32,0,34,28],[33,0,34,29],[44,0,34,40],[45,0,34,41],[46,0,34,42]],[[4,0,35,2],[5,0,35,3]],[[4,0,37,2],[10,0,37,8]],[[4,0,38,9],[7,0,38,12],[8,0,38,31],[14,0,38,59]],[[8,0,39,4],[15,0,39,11],[19,0,39,15],[20,0,39,16],[26,0,39,22],[27,0,39,23],[33,0,39,29],[34,0,39,30],[35,0,39,31],[36,0,39,32]],[[4,0,40,2],[5,0,40,3]],[[4,0,42,9],[7,0,42,12],[8,0,42,16],[21,0,42,53],[23,0,42,55],[27,0,42,62]],[[8,0,43,4],[15,0,43,11],[19,0,43,15],[20,0,43,16],[26,0,43,22],[27,0,43,23],[40,0,43,36],[42,0,43,38],[46,0,43,42],[47,0,43,43],[48,0,43,44],[49,0,43,45],[53,0,43,49],[54,0,44,6],[58,0,44,10],[59,0,44,11],[60,0,44,12],[61,0,44,13],[62,0,45,5],[63,0,45,6]],[[4,0,46,2],[5,0,46,3]],[[4,0,48,9],[7,0,48,12],[8,0,48,16],[14,0,48,44],[16,0,48,46],[20,0,48,53],[22,0,48,55],[29,0,48,75]],[[8,0,50,4],[12,0,50,8],[19,0,50,15],[21,0,50,17]],[[12,0,51,6],[19,0,51,13],[23,0,51,17],[24,0,51,18],[30,0,51,24],[31,0,51,25],[37,0,51,31],[39,0,51,33],[43,0,51,37],[45,0,51,39],[52,0,51,46],[53,0,51,47],[54,0,51,48],[55,0,51,49],[59,0,51,53],[60,0,52,8],[64,0,52,12],[65,0,52,13],[66,0,52,14],[67,0,52,15],[68,0,53,7],[69,0,53,8]],[[9,0,54,5]],[[13,0,54,11]],[[12,0,55,6],[19,0,55,13],[23,0,55,17],[24,0,55,18],[30,0,55,24],[31,0,55,25],[37,0,55,31],[39,0,55,33],[43,0,55,37],[44,0,55,38],[45,0,55,39],[46,0,55,40],[50,0,55,44],[51,0,56,8],[55,0,56,12],[56,0,56,13],[57,0,56,14],[58,0,56,15],[59,0,57,7],[60,0,57,8]],[[9,0,58,5]],[[4,0,59,2],[5,0,59,3]],[[4,0,61,2],[10,0,61,8],[11,0,61,12],[17,0,61,40]],[[8,0,62,4],[15,0,62,11],[19,0,62,15],[20,0,62,16],[29,0,62,25],[30,0,62,26],[36,0,62,32],[37,0,62,33],[38,0,62,34],[39,0,62,35],[43,0,62,39],[44,0,63,6],[48,0,63,10],[49,0,63,11],[50,0,63,12],[51,0,63,13],[52,0,64,5],[53,0,64,6]],[[4,0,65,2],[5,0,65,3]],[[4,0,67,2],[10,0,67,8],[11,0,67,12],[17,0,67,40],[19,0,67,42],[23,0,67,70],[25,0,67,72],[32,0,67,92]],[[8,0,68,4],[15,0,68,11],[19,0,68,15],[20,0,68,16],[29,0,68,25],[30,0,68,38],[36,0,68,44],[38,0,68,46],[42,0,68,50],[43,0,68,51],[44,0,68,52],[45,0,68,53],[49,0,68,57],[50,0,69,6],[54,0,69,10],[55,0,69,11],[56,0,69,12],[57,0,69,13],[58,0,70,5],[59,0,70,6]],[[4,0,71,2],[5,0,71,3]],[[4,0,73,9],[14,0,73,19],[15,0,73,23],[16,0,73,34]],[[8,0,74,4],[15,0,74,11],[19,0,74,15],[20,0,74,16],[27,0,74,23],[28,0,74,24],[29,0,74,25],[30,0,74,26],[31,0,74,27],[32,0,74,28]],[[4,0,75,2],[5,0,75,3]],[[1,0,77,1]]],"sourcesContent":["import {from, Observable} from 'rxjs';\r\nimport {BaseFirestoreWrapper} from './interfaces';\r\nimport {take} from 'rxjs/operators';\r\nimport {FirebaseApp} from 'firebase/app';\r\nimport {\r\n  addDoc,\r\n  CollectionReference,\r\n  deleteDoc,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  Firestore,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  Query,\r\n  QuerySnapshot,\r\n  setDoc,\r\n  SetOptions,\r\n  UpdateData,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\n\r\n\r\nexport class FirestoreWrapper implements BaseFirestoreWrapper {\r\n  /**\r\n   * Uses firebase/firestore directly\r\n   * Simply makes the returned Promises into Observables\r\n   */\r\n\r\n  constructor(public firebaseApp: FirebaseApp) {\r\n  }\r\n\r\n  get firestore(): Firestore {\r\n    return getFirestore(this.firebaseApp);\r\n  }\r\n\r\n  // doc\r\n  public doc<T = DocumentData>(docRef: DocumentReference<T>): Observable<DocumentSnapshot<T>> {\r\n    return from(getDoc(docRef));\r\n  }\r\n\r\n  public add<T>(collectionRef: CollectionReference<T>, data: T): Observable<DocumentReference<T>> {\r\n    return from(addDoc(collectionRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public set<A>(docRef: DocumentReference<A>, data: A, options?: SetOptions): Observable<void> {\r\n\r\n    if (options) {\r\n      return from(setDoc(docRef, data, options)).pipe(\r\n        take(1)\r\n      );\r\n    } else {\r\n      return from(setDoc(docRef, data)).pipe(\r\n        take(1)\r\n      );\r\n    }\r\n  }\r\n\r\n  delete<T>(docRef: DocumentReference<T>): Observable<void> {\r\n    return from(deleteDoc(docRef)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  update<T>(docRef: DocumentReference<T>, data: UpdateData<Partial<T>>, options?: SetOptions): Observable<void> {\r\n    return from(updateDoc<Partial<T>>(docRef, data)).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public collection<T>(q: Query<T>): Observable<QuerySnapshot<T>> {\r\n    return from(getDocs(q));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1853,"body":[{"type":"ImportDeclaration","start":0,"end":55,"specifiers":[{"type":"ImportSpecifier","start":9,"end":25,"imported":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"},"local":{"type":"Identifier","start":9,"end":25,"name":"FirestoreWrapper"}}],"source":{"type":"Literal","start":33,"end":54,"value":"./firestore-wrapper","raw":"'./firestore-wrapper'"}},{"type":"ImportDeclaration","start":57,"end":114,"specifiers":[{"type":"ImportSpecifier","start":66,"end":83,"imported":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"},"local":{"type":"Identifier","start":66,"end":83,"name":"FirestoreExtended"}}],"source":{"type":"Literal","start":91,"end":113,"value":"./firestore-extended","raw":"'./firestore-extended'"}},{"type":"ExportNamedDeclaration","start":286,"end":469,"declaration":{"type":"ClassDeclaration","start":293,"end":469,"id":{"type":"Identifier","start":299,"end":311,"name":"FirestoreExt"},"superClass":{"type":"Identifier","start":320,"end":337,"name":"FirestoreExtended"},"body":{"type":"ClassBody","start":338,"end":469,"body":[{"type":"MethodDefinition","start":345,"end":466,"static":false,"computed":false,"key":{"type":"Identifier","start":345,"end":356,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":356,"end":466,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":357,"end":368,"name":"firebaseApp"},{"type":"AssignmentPattern","start":370,"end":391,"left":{"type":"Identifier","start":370,"end":382,"name":"defaultDocId"},"right":{"type":"Literal","start":385,"end":391,"value":"data","raw":"'data'"}}],"body":{"type":"BlockStatement","start":393,"end":466,"body":[{"type":"ExpressionStatement","start":404,"end":459,"expression":{"type":"CallExpression","start":404,"end":458,"callee":{"type":"Super","start":404,"end":409},"arguments":[{"type":"NewExpression","start":410,"end":443,"callee":{"type":"Identifier","start":414,"end":430,"name":"FirestoreWrapper"},"arguments":[{"type":"Identifier","start":431,"end":442,"name":"firebaseApp"}]},{"type":"Identifier","start":445,"end":457,"name":"defaultDocId"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","start":471,"end":1853}]},"code":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FirestoreWrapper } from './firestore-wrapper';\r\nimport { FirestoreExtended } from './firestore-extended';\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n    constructor(firebaseApp, defaultDocId = 'data') {\r\n        super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvZmlyZXN0b3JlLWV4dGVuZGVkLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXZEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxZQUFhLFNBQVEsaUJBQWlCO0lBQ2pELFlBQVksV0FBd0IsRUFBRSxlQUF1QixNQUFNO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlyZWJhc2VBcHB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7RmlyZXN0b3JlV3JhcHBlcn0gZnJvbSAnLi9maXJlc3RvcmUtd3JhcHBlcic7XHJcbmltcG9ydCB7RmlyZXN0b3JlRXh0ZW5kZWR9IGZyb20gJy4vZmlyZXN0b3JlLWV4dGVuZGVkJztcclxuXHJcbi8qKlxyXG4gKiBGaXJlc3RvcmVFeHQgQ2xhc3MgdGhhdCB1c2VzIHRoZSBGaXJlc3RvcmVXcmFwcGVyXHJcbiAqIFNpbXBseSBleHRlbmQgdGhpcyBjbGFzcyBhbmQgZ2l2ZSBpdCBhbiBpbml0aWFsaXplZCBGaXJlYmFzZUFwcCB0byB1c2UgdGhlIEZpcmVTdG9yZUV4dGVuZGVkIG1ldGhvZHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRmlyZXN0b3JlRXh0IGV4dGVuZHMgRmlyZXN0b3JlRXh0ZW5kZWQge1xyXG4gIGNvbnN0cnVjdG9yKGZpcmViYXNlQXBwOiBGaXJlYmFzZUFwcCwgZGVmYXVsdERvY0lkOiBzdHJpbmcgPSAnZGF0YScpIHtcclxuICAgIHN1cGVyKG5ldyBGaXJlc3RvcmVXcmFwcGVyKGZpcmViYXNlQXBwKSwgZGVmYXVsdERvY0lkKTtcclxuICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"firestore-extended.class.js","sourceRoot":"","sources":["../../../../projects/firestore-extended/src/lib/firestore-extended.class.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,8],[25,0,1,24],[27,0,1,25],[33,0,1,31],[54,0,1,52],[55,0,1,53]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,26],[34,0,2,32],[56,0,2,54],[57,0,2,55]],[[0,0,4,0]],[],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[25,0,8,26],[34,0,8,34],[51,0,8,51]],[[4,0,9,2],[16,0,9,14],[27,0,9,38],[29,0,9,40],[44,0,9,63],[50,0,9,69]],[[8,0,10,4],[13,0,10,9],[14,0,10,10],[18,0,10,14],[34,0,10,30],[35,0,10,31],[46,0,10,42],[47,0,10,43],[49,0,10,45],[61,0,10,57],[62,0,10,58],[63,0,10,59]],[[4,0,11,2],[5,0,11,3]],[[1,0,12,1]]],"sourcesContent":["import {FirebaseApp} from 'firebase/app';\r\nimport {FirestoreWrapper} from './firestore-wrapper';\r\nimport {FirestoreExtended} from './firestore-extended';\r\n\r\n/**\r\n * FirestoreExt Class that uses the FirestoreWrapper\r\n * Simply extend this class and give it an initialized FirebaseApp to use the FireStoreExtended methods.\r\n */\r\nexport class FirestoreExt extends FirestoreExtended {\r\n  constructor(firebaseApp: FirebaseApp, defaultDocId: string = 'data') {\r\n    super(new FirestoreWrapper(firebaseApp), defaultDocId);\r\n  }\r\n}\r\n"]},"resolvedIds":{"./firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1954,"body":[{"type":"ExportNamedDeclaration","start":96,"end":128,"declaration":{"type":"ClassDeclaration","start":103,"end":128,"id":{"type":"Identifier","start":109,"end":123,"name":"FirebaseConfig"},"superClass":null,"body":{"type":"ClassBody","start":124,"end":128,"body":[]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":218,"end":330,"declaration":{"type":"VariableDeclaration","start":225,"end":330,"declarations":[{"type":"VariableDeclarator","start":231,"end":329,"id":{"type":"Identifier","start":231,"end":253,"name":"FIRESTORE_USE_EMULATOR"},"init":{"type":"ObjectExpression","start":256,"end":329,"properties":[{"type":"Property","start":291,"end":308,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":291,"end":295,"name":"host"},"value":{"type":"Literal","start":297,"end":308,"value":"localhost","raw":"'localhost'"},"kind":"init"},{"type":"Property","start":315,"end":325,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":315,"end":319,"name":"port"},"value":{"type":"Literal","start":321,"end":325,"value":8080,"raw":"8080"},"kind":"init"}]}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","start":464,"end":1954}]},"code":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"originalCode":"// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\nexport class FirebaseConfig {\r\n}\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\nexport const FIRESTORE_USE_EMULATOR = {\r\n    // useEmulator: false,\r\n    host: 'localhost',\r\n    port: 8080,\r\n};\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0Q7QUFDaEQsNENBQTRDO0FBRTVDLE1BQU0sT0FBTyxjQUFjO0NBRTFCO0FBUUQsc0ZBQXNGO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUE0QjtJQUM3RCxzQkFBc0I7SUFDdEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsSUFBSSxFQUFFLElBQUk7Q0FDWCxDQUFDO0FBR0YsMkNBQTJDO0FBQzNDLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsdUJBQXVCO0FBQ3ZCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHtGaXJlYmFzZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUNvbmZpZyB7XHJcbiAgW2tleTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnIHtcclxuICAvLyB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBleHBvcnQgY29uc3QgRklSRUJBU0VfQVBQID0gbmV3IEluamVjdGlvblRva2VuPEZpcmViYXNlQXBwPignZmlyZWJhc2VfYXBwLmNvbmZpZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJUkVTVE9SRV9VU0VfRU1VTEFUT1I6IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnID0ge1xyXG4gIC8vIHVzZUVtdWxhdG9yOiBmYWxzZSxcclxuICBob3N0OiAnbG9jYWxob3N0JyxcclxuICBwb3J0OiA4MDgwLFxyXG59O1xyXG5cclxuXHJcbi8vIGV4cG9ydCB0eXBlIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnICA9IHtcclxuLy8gICB1c2VFbXVsYXRvcjogYm9vbGVhbjtcclxuLy8gICBlbXVsYXRvckhvc3Q6IHN0cmluZztcclxuLy8gICBlbXVsYXRvclBvcnQ6IDQyMDBcclxuLy8gfVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/config.ts"],"names":[],"mappings":[[[0,0,0,0],[48,0,0,48]],[[0,0,1,0],[44,0,1,44]],[[0,0,3,0],[6,0,3,6],[13,0,3,13],[27,0,3,27]],[[1,0,5,1]],[[0,0,13,0],[86,0,13,86]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[35,0,15,35],[38,0,15,63]],[[4,0,16,2],[26,0,16,24]],[[4,0,17,2],[8,0,17,6],[10,0,17,8],[21,0,17,19]],[[4,0,18,2],[8,0,18,6],[10,0,18,8],[14,0,18,12]],[[1,0,19,1],[2,0,19,2]],[[0,0,22,0],[43,0,22,43]],[[0,0,23,0],[26,0,23,26]],[[0,0,24,0],[26,0,24,26]],[[0,0,25,0],[23,0,25,23]],[[0,0,26,0],[4,0,26,4]]],"sourcesContent":["// import {InjectionToken} from '@angular/core';\r\n// import {FirebaseApp} from 'firebase/app';\r\n\r\nexport class FirebaseConfig {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FirestoreEmulatorConfig {\r\n  // useEmulator: boolean;\r\n  host: string;\r\n  port: number;\r\n}\r\n\r\n// export const FIREBASE_APP = new InjectionToken<FirebaseApp>('firebase_app.config');\r\n\r\nexport const FIRESTORE_USE_EMULATOR: FirestoreEmulatorConfig = {\r\n  // useEmulator: false,\r\n  host: 'localhost',\r\n  port: 8080,\r\n};\r\n\r\n\r\n// export type FirestoreEmulatorConfig  = {\r\n//   useEmulator: boolean;\r\n//   emulatorHost: string;\r\n//   emulatorPort: 4200\r\n// }\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5093,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}},{"type":"ImportSpecifier","start":19,"end":27,"imported":{"type":"Identifier","start":19,"end":27,"name":"Optional"},"local":{"type":"Identifier","start":19,"end":27,"name":"Optional"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"},"local":{"type":"Identifier","start":29,"end":37,"name":"SkipSelf"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":110,"specifiers":[{"type":"ImportSpecifier","start":72,"end":84,"imported":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"},"local":{"type":"Identifier","start":72,"end":84,"name":"CommonModule"}}],"source":{"type":"Literal","start":92,"end":109,"value":"@angular/common","raw":"'@angular/common'"}},{"type":"ImportDeclaration","start":112,"end":154,"specifiers":[{"type":"ImportSpecifier","start":121,"end":135,"imported":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"},"local":{"type":"Identifier","start":121,"end":135,"name":"FirebaseConfig"}}],"source":{"type":"Literal","start":143,"end":153,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":156,"end":192,"specifiers":[{"type":"ImportNamespaceSpecifier","start":163,"end":170,"local":{"type":"Identifier","start":168,"end":170,"name":"i0"}}],"source":{"type":"Literal","start":176,"end":191,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":194,"end":1127,"declaration":{"type":"ClassDeclaration","start":201,"end":1127,"id":{"type":"Identifier","start":207,"end":224,"name":"NgxFirebaseModule"},"superClass":null,"body":{"type":"ClassBody","start":225,"end":1127,"body":[{"type":"MethodDefinition","start":726,"end":911,"static":false,"computed":false,"key":{"type":"Identifier","start":726,"end":737,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":737,"end":911,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":738,"end":750,"name":"parentModule"}],"body":{"type":"BlockStatement","start":752,"end":911,"body":[{"type":"IfStatement","start":763,"end":904,"test":{"type":"Identifier","start":767,"end":779,"name":"parentModule"},"consequent":{"type":"BlockStatement","start":781,"end":904,"body":[{"type":"ThrowStatement","start":796,"end":893,"argument":{"type":"NewExpression","start":802,"end":892,"callee":{"type":"Identifier","start":806,"end":811,"name":"Error"},"arguments":[{"type":"Literal","start":812,"end":891,"value":"NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only","raw":"'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":917,"end":1124,"static":true,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"forRoot"},"kind":"method","value":{"type":"FunctionExpression","start":931,"end":1124,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":932,"end":938,"name":"config"}],"body":{"type":"BlockStatement","start":940,"end":1124,"body":[{"type":"ReturnStatement","start":951,"end":1117,"argument":{"type":"ObjectExpression","start":958,"end":1116,"properties":[{"type":"Property","start":973,"end":1000,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":973,"end":981,"name":"ngModule"},"value":{"type":"Identifier","start":983,"end":1000,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1015,"end":1105,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1024,"name":"providers"},"value":{"type":"ArrayExpression","start":1026,"end":1105,"elements":[{"type":"ObjectExpression","start":1045,"end":1090,"properties":[{"type":"Property","start":1047,"end":1070,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1047,"end":1054,"name":"provide"},"value":{"type":"Identifier","start":1056,"end":1070,"name":"FirebaseConfig"},"kind":"init"},{"type":"Property","start":1072,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1072,"end":1080,"name":"useValue"},"value":{"type":"Identifier","start":1082,"end":1088,"name":"config"},"kind":"init"}]}]},"kind":"init"}]}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1129,"end":1367,"expression":{"type":"AssignmentExpression","start":1129,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1129,"end":1151,"object":{"type":"Identifier","start":1129,"end":1146,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1147,"end":1151,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1154,"end":1366,"callee":{"type":"MemberExpression","start":1154,"end":1175,"object":{"type":"Identifier","start":1154,"end":1156,"name":"i0"},"property":{"type":"Identifier","start":1157,"end":1175,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1176,"end":1365,"properties":[{"type":"Property","start":1178,"end":1198,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1178,"end":1188,"name":"minVersion"},"value":{"type":"Literal","start":1190,"end":1198,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1200,"end":1217,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1200,"end":1207,"name":"version"},"value":{"type":"Literal","start":1209,"end":1217,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1219,"end":1231,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1219,"end":1227,"name":"ngImport"},"value":{"type":"Identifier","start":1229,"end":1231,"name":"i0"},"kind":"init"},{"type":"Property","start":1233,"end":1256,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1233,"end":1237,"name":"type"},"value":{"type":"Identifier","start":1239,"end":1256,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1258,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1258,"end":1262,"name":"deps"},"value":{"type":"ArrayExpression","start":1264,"end":1326,"elements":[{"type":"ObjectExpression","start":1265,"end":1325,"properties":[{"type":"Property","start":1267,"end":1291,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1267,"end":1272,"name":"token"},"value":{"type":"Identifier","start":1274,"end":1291,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1293,"end":1307,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1301,"name":"optional"},"value":{"type":"Literal","start":1303,"end":1307,"value":true,"raw":"true"},"kind":"init"},{"type":"Property","start":1309,"end":1323,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1309,"end":1317,"name":"skipSelf"},"value":{"type":"Literal","start":1319,"end":1323,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1328,"end":1363,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1328,"end":1334,"name":"target"},"value":{"type":"MemberExpression","start":1336,"end":1363,"object":{"type":"MemberExpression","start":1336,"end":1354,"object":{"type":"Identifier","start":1336,"end":1338,"name":"i0"},"property":{"type":"Identifier","start":1339,"end":1354,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1355,"end":1363,"name":"NgModule"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1369,"end":1526,"expression":{"type":"AssignmentExpression","start":1369,"end":1525,"operator":"=","left":{"type":"MemberExpression","start":1369,"end":1391,"object":{"type":"Identifier","start":1369,"end":1386,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1387,"end":1391,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1416,"object":{"type":"Identifier","start":1394,"end":1396,"name":"i0"},"property":{"type":"Identifier","start":1397,"end":1416,"name":"ɵɵngDeclareNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1417,"end":1524,"properties":[{"type":"Property","start":1419,"end":1439,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1419,"end":1429,"name":"minVersion"},"value":{"type":"Literal","start":1431,"end":1439,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1441,"end":1458,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1441,"end":1448,"name":"version"},"value":{"type":"Literal","start":1450,"end":1458,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1460,"end":1472,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1460,"end":1468,"name":"ngImport"},"value":{"type":"Identifier","start":1470,"end":1472,"name":"i0"},"kind":"init"},{"type":"Property","start":1474,"end":1497,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1474,"end":1478,"name":"type"},"value":{"type":"Identifier","start":1480,"end":1497,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1499,"end":1522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1499,"end":1506,"name":"imports"},"value":{"type":"ArrayExpression","start":1508,"end":1522,"elements":[{"type":"Identifier","start":1509,"end":1521,"name":"CommonModule"}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1711,"expression":{"type":"AssignmentExpression","start":1528,"end":1710,"operator":"=","left":{"type":"MemberExpression","start":1528,"end":1550,"object":{"type":"Identifier","start":1528,"end":1545,"name":"NgxFirebaseModule"},"property":{"type":"Identifier","start":1546,"end":1550,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1553,"end":1710,"callee":{"type":"MemberExpression","start":1553,"end":1575,"object":{"type":"Identifier","start":1553,"end":1555,"name":"i0"},"property":{"type":"Identifier","start":1556,"end":1575,"name":"ɵɵngDeclareInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1576,"end":1709,"properties":[{"type":"Property","start":1578,"end":1598,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1578,"end":1588,"name":"minVersion"},"value":{"type":"Literal","start":1590,"end":1598,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1600,"end":1617,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1600,"end":1607,"name":"version"},"value":{"type":"Literal","start":1609,"end":1617,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1619,"end":1631,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1619,"end":1627,"name":"ngImport"},"value":{"type":"Identifier","start":1629,"end":1631,"name":"i0"},"kind":"init"},{"type":"Property","start":1633,"end":1656,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1633,"end":1637,"name":"type"},"value":{"type":"Identifier","start":1639,"end":1656,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1658,"end":1707,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1658,"end":1665,"name":"imports"},"value":{"type":"ArrayExpression","start":1667,"end":1707,"elements":[{"type":"ArrayExpression","start":1668,"end":1706,"elements":[{"type":"Identifier","start":1683,"end":1695,"name":"CommonModule"}]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1713,"end":2257,"expression":{"type":"CallExpression","start":1713,"end":2256,"callee":{"type":"MemberExpression","start":1713,"end":1740,"object":{"type":"Identifier","start":1713,"end":1715,"name":"i0"},"property":{"type":"Identifier","start":1716,"end":1740,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1741,"end":2255,"properties":[{"type":"Property","start":1743,"end":1763,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1743,"end":1753,"name":"minVersion"},"value":{"type":"Literal","start":1755,"end":1763,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1765,"end":1782,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1765,"end":1772,"name":"version"},"value":{"type":"Literal","start":1774,"end":1782,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1784,"end":1796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1792,"name":"ngImport"},"value":{"type":"Identifier","start":1794,"end":1796,"name":"i0"},"kind":"init"},{"type":"Property","start":1798,"end":1821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1798,"end":1802,"name":"type"},"value":{"type":"Identifier","start":1804,"end":1821,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":1823,"end":2052,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1833,"name":"decorators"},"value":{"type":"ArrayExpression","start":1835,"end":2052,"elements":[{"type":"ObjectExpression","start":1836,"end":2051,"properties":[{"type":"Property","start":1851,"end":1865,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1851,"end":1855,"name":"type"},"value":{"type":"Identifier","start":1857,"end":1865,"name":"NgModule"},"kind":"init"},{"type":"Property","start":1880,"end":2040,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1880,"end":1884,"name":"args"},"value":{"type":"ArrayExpression","start":1886,"end":2040,"elements":[{"type":"ObjectExpression","start":1887,"end":2039,"properties":[{"type":"Property","start":1910,"end":1926,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1910,"end":1922,"name":"declarations"},"value":{"type":"ArrayExpression","start":1924,"end":1926,"elements":[]},"kind":"init"},{"type":"Property","start":1949,"end":2020,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1949,"end":1956,"name":"imports"},"value":{"type":"ArrayExpression","start":1958,"end":2020,"elements":[{"type":"Identifier","start":1985,"end":1997,"name":"CommonModule"}]},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":2054,"end":2253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2054,"end":2068,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":2070,"end":2253,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2082,"end":2253,"body":[{"type":"ReturnStatement","start":2084,"end":2251,"argument":{"type":"ArrayExpression","start":2091,"end":2250,"elements":[{"type":"ObjectExpression","start":2092,"end":2249,"properties":[{"type":"Property","start":2094,"end":2117,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2094,"end":2098,"name":"type"},"value":{"type":"Identifier","start":2100,"end":2117,"name":"NgxFirebaseModule"},"kind":"init"},{"type":"Property","start":2119,"end":2247,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2119,"end":2129,"name":"decorators"},"value":{"type":"ArrayExpression","start":2131,"end":2247,"elements":[{"type":"ObjectExpression","start":2132,"end":2188,"properties":[{"type":"Property","start":2155,"end":2169,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2155,"end":2159,"name":"type"},"value":{"type":"Identifier","start":2161,"end":2169,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2190,"end":2246,"properties":[{"type":"Property","start":2213,"end":2227,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2213,"end":2217,"name":"type"},"value":{"type":"Identifier","start":2219,"end":2227,"name":"SkipSelf"},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","start":2259,"end":5093}]},"code":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","customTransformCache":false,"dependencies":["@angular/core","@angular/common","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FirebaseConfig } from './config';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxFirebaseModule {\r\n    /**\r\n     * To be used as an Angular Module to inject the FirebaseConfig\r\n     * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\r\n     * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\r\n     * additional connections.\r\n     * The purpose is simply to make sure that we only create a single Firebase App and a single connection\r\n     */\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxFirebaseModule,\r\n            providers: [\r\n                { provide: FirebaseConfig, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgxFirebaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, deps: [{ token: NgxFirebaseModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxFirebaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [CommonModule] });\r\nNgxFirebaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CommonModule\r\n                    ]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: NgxFirebaseModule, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvbGliL25neC9uZ3gtZmlyZWJhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxVQUFVLENBQUM7O0FBV3hDLE1BQU0sT0FBTyxpQkFBaUI7SUFDNUI7Ozs7OztPQU1HO0lBQ0gsWUFBb0MsWUFBZ0M7UUFDbEUsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYiwrRUFBK0UsQ0FBQyxDQUFDO1NBQ3BGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBdUI7UUFDcEMsT0FBTztZQUNMLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFDO2FBQzVDO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzhHQXRCVSxpQkFBaUIsa0JBUXVCLGlCQUFpQjsrR0FSekQsaUJBQWlCLFlBTDFCLFlBQVk7K0dBS0gsaUJBQWlCLFlBTm5CO1lBQ1AsWUFBWTtTQUNiOzJGQUlVLGlCQUFpQjtrQkFSN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7aUJBQ0Y7MERBV29ELGlCQUFpQjswQkFBdkQsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7RmlyZWJhc2VDb25maWd9IGZyb20gJy4vY29uZmlnJztcblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5cblxuZXhwb3J0IGNsYXNzIE5neEZpcmViYXNlTW9kdWxlIHtcbiAgLyoqXG4gICAqIFRvIGJlIHVzZWQgYXMgYW4gQW5ndWxhciBNb2R1bGUgdG8gaW5qZWN0IHRoZSBGaXJlYmFzZUNvbmZpZ1xuICAgKiBUaGUgRmlyZWJhc2VDb25maWcgaXMgdGhlbiB1c2VkIGJ5IE5neEZpcmViYXNlU2VydmljZSB0byBjcmVhdGUgYSBGaXJlYmFzZSBhcHAsIHRoaXMgY29udGFpbnMgdGhlIHdlYnNvY2tldCBjb25uZWN0aW9uIHRvIGZpcmViYXNlLlxuICAgKiBXZSBjYW4gdGhlbiBpbmplY3QgTmd4UnhGaXJlU2VydmljZSBpbiB0byBhbnkgc2VydmljZSB0aGF0IHdpc2hlcyB0byB1c2UgdGhlIEZpcmViYXNlIGFwcCBjb25uZWN0aW9uIHdpdGhvdXQgY3JlYXRpbmdcbiAgICogYWRkaXRpb25hbCBjb25uZWN0aW9ucy5cbiAgICogVGhlIHB1cnBvc2UgaXMgc2ltcGx5IHRvIG1ha2Ugc3VyZSB0aGF0IHdlIG9ubHkgY3JlYXRlIGEgc2luZ2xlIEZpcmViYXNlIEFwcCBhbmQgYSBzaW5nbGUgY29ubmVjdGlvblxuICAgKi9cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTmd4RmlyZWJhc2VNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdOZ3hGaXJlc3RvcmVFeHRlbmRlZE1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGl0IGluIHRoZSBBcHBNb2R1bGUgb25seScpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEZpcmViYXNlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hGaXJlYmFzZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RmlyZWJhc2VNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IEZpcmViYXNlQ29uZmlnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cblxufVxuIl19","originalSourcemap":{"version":3,"file":"ngx-firebase.module.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,29],[17,0,0,37],[19,0,0,39],[27,0,0,47],[29,0,0,49],[37,0,0,57],[39,0,0,58],[45,0,0,64],[60,0,0,79],[61,0,0,80]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[21,0,1,20],[23,0,1,21],[29,0,1,27],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[23,0,2,22],[25,0,2,23],[31,0,2,29],[41,0,2,39],[42,0,2,40]],[],[[0,0,13,0],[6,0,13,6],[13,0,13,13],[30,0,13,30]],[[4,0,14,2]],[],[],[],[],[],[[7,0,20,5]],[[4,0,21,2],[16,0,21,38],[28,0,21,70]],[[8,0,22,4],[12,0,22,8],[24,0,22,20],[26,0,22,22]],[[12,0,23,6],[18,0,23,12],[22,0,23,16],[27,0,23,21],[28,0,24,8],[107,0,24,87],[108,0,24,88],[109,0,24,89]],[[9,0,25,5]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2],[10,0,28,8],[11,0,28,9],[18,0,28,16],[19,0,28,17],[25,0,28,40]],[[8,0,29,4],[15,0,29,11]],[[12,0,30,6],[20,0,30,14],[22,0,30,16],[39,0,30,33]],[[12,0,31,6],[21,0,31,15],[23,0,31,17]],[[16,0,32,8],[18,0,32,9],[25,0,32,16],[27,0,32,18],[41,0,32,32],[43,0,32,34],[51,0,32,42],[53,0,32,44],[59,0,32,50],[61,0,32,51]],[[13,0,33,7]],[[9,0,34,5],[10,0,34,6]],[[4,0,35,2],[5,0,35,3]],[],[[110,0,13,13],[127,0,13,30],[145,0,21,53],[162,0,21,70]],[[111,0,13,13],[128,0,13,30],[140,0,8,4],[152,0,8,16]],[[111,0,13,13],[128,0,13,30],[140,0,7,11]],[[12,0,8,4],[24,0,8,16]],[[9,0,9,3]],[[91,0,13,13],[108,0,13,30]],[[18,0,5,1],[26,0,5,9]],[[19,0,5,10]],[[20,0,6,2],[32,0,6,14],[34,0,6,16],[36,0,6,18]],[[20,0,7,2],[27,0,7,9],[29,0,7,11]],[[24,0,8,4],[36,0,8,16]],[[21,0,9,3]],[[17,0,10,1]],[[58,0,21,53],[75,0,21,70]],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[34,0,21,35]]],"sourcesContent":["import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseConfig} from './config';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n\n\nexport class NgxFirebaseModule {\n  /**\n   * To be used as an Angular Module to inject the FirebaseConfig\n   * The FirebaseConfig is then used by NgxFirebaseService to create a Firebase app, this contains the websocket connection to firebase.\n   * We can then inject NgxRxFireService in to any service that wishes to use the Firebase app connection without creating\n   * additional connections.\n   * The purpose is simply to make sure that we only create a single Firebase App and a single connection\n   */\n  constructor(@Optional() @SkipSelf() parentModule?: NgxFirebaseModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxFirestoreExtendedModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config?: FirebaseConfig): ModuleWithProviders<NgxFirebaseModule> {\n    return {\n      ngModule: NgxFirebaseModule,\n      providers: [\n        {provide: FirebaseConfig, useValue: config}\n      ]\n    };\n  }\n\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@angular/common":{"external":true,"id":"@angular/common","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5555,"body":[{"type":"ImportDeclaration","start":0,"end":61,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"Inject"},"local":{"type":"Identifier","start":9,"end":15,"name":"Inject"}},{"type":"ImportSpecifier","start":17,"end":27,"imported":{"type":"Identifier","start":17,"end":27,"name":"Injectable"},"local":{"type":"Identifier","start":17,"end":27,"name":"Injectable"}},{"type":"ImportSpecifier","start":29,"end":37,"imported":{"type":"Identifier","start":29,"end":37,"name":"Optional"},"local":{"type":"Identifier","start":29,"end":37,"name":"Optional"}}],"source":{"type":"Literal","start":45,"end":60,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":63,"end":113,"specifiers":[{"type":"ImportSpecifier","start":72,"end":94,"imported":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"},"local":{"type":"Identifier","start":72,"end":94,"name":"FIRESTORE_USE_EMULATOR"}}],"source":{"type":"Literal","start":102,"end":112,"value":"./config","raw":"'./config'"}},{"type":"ImportDeclaration","start":115,"end":170,"specifiers":[{"type":"ImportDefaultSpecifier","start":122,"end":130,"local":{"type":"Identifier","start":122,"end":130,"name":"firebase"}},{"type":"ImportSpecifier","start":134,"end":147,"imported":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"},"local":{"type":"Identifier","start":134,"end":147,"name":"initializeApp"}}],"source":{"type":"Literal","start":155,"end":169,"value":"firebase/app","raw":"'firebase/app'"}},{"type":"ImportDeclaration","start":172,"end":248,"specifiers":[{"type":"ImportSpecifier","start":181,"end":205,"imported":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"},"local":{"type":"Identifier","start":181,"end":205,"name":"connectFirestoreEmulator"}},{"type":"ImportSpecifier","start":207,"end":219,"imported":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"},"local":{"type":"Identifier","start":207,"end":219,"name":"getFirestore"}}],"source":{"type":"Literal","start":227,"end":247,"value":"firebase/firestore","raw":"'firebase/firestore'"}},{"type":"ImportDeclaration","start":250,"end":286,"specifiers":[{"type":"ImportNamespaceSpecifier","start":257,"end":264,"local":{"type":"Identifier","start":262,"end":264,"name":"i0"}}],"source":{"type":"Literal","start":270,"end":285,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":288,"end":319,"specifiers":[{"type":"ImportNamespaceSpecifier","start":295,"end":302,"local":{"type":"Identifier","start":300,"end":302,"name":"i1"}}],"source":{"type":"Literal","start":308,"end":318,"value":"./config","raw":"\"./config\""}},{"type":"ExportNamedDeclaration","start":321,"end":1144,"declaration":{"type":"ClassDeclaration","start":328,"end":1144,"id":{"type":"Identifier","start":334,"end":352,"name":"NgxFirebaseService"},"superClass":null,"body":{"type":"ClassBody","start":353,"end":1144,"body":[{"type":"MethodDefinition","start":360,"end":1141,"static":false,"computed":false,"key":{"type":"Identifier","start":360,"end":371,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":371,"end":1141,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":372,"end":378,"name":"config"},{"type":"Identifier","start":380,"end":394,"name":"emulatorConfig"}],"body":{"type":"BlockStatement","start":396,"end":1141,"body":[{"type":"ExpressionStatement","start":407,"end":444,"expression":{"type":"AssignmentExpression","start":407,"end":443,"operator":"=","left":{"type":"MemberExpression","start":407,"end":426,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":426,"name":"emulatorConfig"},"computed":false,"optional":false},"right":{"type":"Identifier","start":429,"end":443,"name":"emulatorConfig"}}},{"type":"IfStatement","start":454,"end":865,"test":{"type":"UnaryExpression","start":458,"end":484,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":459,"end":484,"object":{"type":"CallExpression","start":459,"end":477,"callee":{"type":"MemberExpression","start":459,"end":475,"object":{"type":"Identifier","start":459,"end":467,"name":"firebase"},"property":{"type":"Identifier","start":468,"end":475,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":478,"end":484,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":486,"end":743,"body":[{"type":"IfStatement","start":501,"end":732,"test":{"type":"Identifier","start":505,"end":511,"name":"config"},"consequent":{"type":"BlockStatement","start":513,"end":588,"body":[{"type":"ExpressionStatement","start":532,"end":573,"expression":{"type":"AssignmentExpression","start":532,"end":572,"operator":"=","left":{"type":"MemberExpression","start":532,"end":548,"object":{"type":"ThisExpression","start":532,"end":536},"property":{"type":"Identifier","start":537,"end":548,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":551,"end":572,"callee":{"type":"Identifier","start":551,"end":564,"name":"initializeApp"},"arguments":[{"type":"Identifier","start":565,"end":571,"name":"config"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":607,"end":732,"body":[{"type":"ThrowStatement","start":626,"end":717,"argument":{"type":"NewExpression","start":632,"end":716,"callee":{"type":"Identifier","start":636,"end":641,"name":"Error"},"arguments":[{"type":"Literal","start":642,"end":715,"value":"No previous Firebase App initialized so please provide a FirebaseConfig","raw":"'No previous Firebase App initialized so please provide a FirebaseConfig'"}]}}]}}]},"alternate":{"type":"BlockStatement","start":758,"end":865,"body":[{"type":"ExpressionStatement","start":773,"end":814,"expression":{"type":"AssignmentExpression","start":773,"end":813,"operator":"=","left":{"type":"MemberExpression","start":773,"end":789,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":789,"name":"firebaseApp"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":792,"end":813,"object":{"type":"CallExpression","start":792,"end":810,"callee":{"type":"MemberExpression","start":792,"end":808,"object":{"type":"Identifier","start":792,"end":800,"name":"firebase"},"property":{"type":"Identifier","start":801,"end":808,"name":"getApps"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Literal","start":811,"end":812,"value":0,"raw":"0"},"computed":true,"optional":false}}}]}},{"type":"IfStatement","start":875,"end":1134,"test":{"type":"Identifier","start":879,"end":893,"name":"emulatorConfig"},"consequent":{"type":"BlockStatement","start":895,"end":1134,"body":[{"type":"ExpressionStatement","start":910,"end":1009,"expression":{"type":"CallExpression","start":910,"end":1008,"callee":{"type":"Identifier","start":910,"end":934,"name":"connectFirestoreEmulator"},"arguments":[{"type":"CallExpression","start":935,"end":965,"callee":{"type":"Identifier","start":935,"end":947,"name":"getFirestore"},"arguments":[{"type":"MemberExpression","start":948,"end":964,"object":{"type":"ThisExpression","start":948,"end":952},"property":{"type":"Identifier","start":953,"end":964,"name":"firebaseApp"},"computed":false,"optional":false}],"optional":false},{"type":"MemberExpression","start":967,"end":986,"object":{"type":"Identifier","start":967,"end":981,"name":"emulatorConfig"},"property":{"type":"Identifier","start":982,"end":986,"name":"host"},"computed":false,"optional":false},{"type":"MemberExpression","start":988,"end":1007,"object":{"type":"Identifier","start":988,"end":1002,"name":"emulatorConfig"},"property":{"type":"Identifier","start":1003,"end":1007,"name":"port"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1146,"end":1423,"expression":{"type":"AssignmentExpression","start":1146,"end":1422,"operator":"=","left":{"type":"MemberExpression","start":1146,"end":1169,"object":{"type":"Identifier","start":1146,"end":1164,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1165,"end":1169,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1172,"end":1422,"callee":{"type":"MemberExpression","start":1172,"end":1193,"object":{"type":"Identifier","start":1172,"end":1174,"name":"i0"},"property":{"type":"Identifier","start":1175,"end":1193,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1194,"end":1421,"properties":[{"type":"Property","start":1196,"end":1216,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1196,"end":1206,"name":"minVersion"},"value":{"type":"Literal","start":1208,"end":1216,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1218,"end":1235,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1218,"end":1225,"name":"version"},"value":{"type":"Literal","start":1227,"end":1235,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1237,"end":1249,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1237,"end":1245,"name":"ngImport"},"value":{"type":"Identifier","start":1247,"end":1249,"name":"i0"},"kind":"init"},{"type":"Property","start":1251,"end":1275,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1251,"end":1255,"name":"type"},"value":{"type":"Identifier","start":1257,"end":1275,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1277,"end":1380,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1277,"end":1281,"name":"deps"},"value":{"type":"ArrayExpression","start":1283,"end":1380,"elements":[{"type":"ObjectExpression","start":1284,"end":1328,"properties":[{"type":"Property","start":1286,"end":1310,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1286,"end":1291,"name":"token"},"value":{"type":"MemberExpression","start":1293,"end":1310,"object":{"type":"Identifier","start":1293,"end":1295,"name":"i1"},"property":{"type":"Identifier","start":1296,"end":1310,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1312,"end":1326,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1312,"end":1320,"name":"optional"},"value":{"type":"Literal","start":1322,"end":1326,"value":true,"raw":"true"},"kind":"init"}]},{"type":"ObjectExpression","start":1330,"end":1379,"properties":[{"type":"Property","start":1332,"end":1361,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1332,"end":1337,"name":"token"},"value":{"type":"Identifier","start":1339,"end":1361,"name":"FIRESTORE_USE_EMULATOR"},"kind":"init"},{"type":"Property","start":1363,"end":1377,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1363,"end":1371,"name":"optional"},"value":{"type":"Literal","start":1373,"end":1377,"value":true,"raw":"true"},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1382,"end":1419,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1382,"end":1388,"name":"target"},"value":{"type":"MemberExpression","start":1390,"end":1419,"object":{"type":"MemberExpression","start":1390,"end":1408,"object":{"type":"Identifier","start":1390,"end":1392,"name":"i0"},"property":{"type":"Identifier","start":1393,"end":1408,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1409,"end":1419,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1425,"end":1582,"expression":{"type":"AssignmentExpression","start":1425,"end":1581,"operator":"=","left":{"type":"MemberExpression","start":1425,"end":1449,"object":{"type":"Identifier","start":1425,"end":1443,"name":"NgxFirebaseService"},"property":{"type":"Identifier","start":1444,"end":1449,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1452,"end":1581,"callee":{"type":"MemberExpression","start":1452,"end":1476,"object":{"type":"Identifier","start":1452,"end":1454,"name":"i0"},"property":{"type":"Identifier","start":1455,"end":1476,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1477,"end":1580,"properties":[{"type":"Property","start":1479,"end":1499,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1479,"end":1489,"name":"minVersion"},"value":{"type":"Literal","start":1491,"end":1499,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1501,"end":1518,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1501,"end":1508,"name":"version"},"value":{"type":"Literal","start":1510,"end":1518,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1520,"end":1532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1520,"end":1528,"name":"ngImport"},"value":{"type":"Identifier","start":1530,"end":1532,"name":"i0"},"kind":"init"},{"type":"Property","start":1534,"end":1558,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1534,"end":1538,"name":"type"},"value":{"type":"Identifier","start":1540,"end":1558,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1560,"end":1578,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1560,"end":1570,"name":"providedIn"},"value":{"type":"Literal","start":1572,"end":1578,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":1584,"end":2183,"expression":{"type":"CallExpression","start":1584,"end":2182,"callee":{"type":"MemberExpression","start":1584,"end":1611,"object":{"type":"Identifier","start":1584,"end":1586,"name":"i0"},"property":{"type":"Identifier","start":1587,"end":1611,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1612,"end":2181,"properties":[{"type":"Property","start":1614,"end":1634,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1614,"end":1624,"name":"minVersion"},"value":{"type":"Literal","start":1626,"end":1634,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1636,"end":1653,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1636,"end":1643,"name":"version"},"value":{"type":"Literal","start":1645,"end":1653,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1655,"end":1667,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1655,"end":1663,"name":"ngImport"},"value":{"type":"Identifier","start":1665,"end":1667,"name":"i0"},"kind":"init"},{"type":"Property","start":1669,"end":1693,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1669,"end":1673,"name":"type"},"value":{"type":"Identifier","start":1675,"end":1693,"name":"NgxFirebaseService"},"kind":"init"},{"type":"Property","start":1695,"end":1834,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1695,"end":1705,"name":"decorators"},"value":{"type":"ArrayExpression","start":1707,"end":1834,"elements":[{"type":"ObjectExpression","start":1708,"end":1833,"properties":[{"type":"Property","start":1723,"end":1739,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1723,"end":1727,"name":"type"},"value":{"type":"Identifier","start":1729,"end":1739,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1754,"end":1822,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1754,"end":1758,"name":"args"},"value":{"type":"ArrayExpression","start":1760,"end":1822,"elements":[{"type":"ObjectExpression","start":1761,"end":1821,"properties":[{"type":"Property","start":1784,"end":1802,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1784,"end":1794,"name":"providedIn"},"value":{"type":"Literal","start":1796,"end":1802,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1836,"end":2179,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1836,"end":1850,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1852,"end":2179,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2179,"body":[{"type":"ReturnStatement","start":1866,"end":2177,"argument":{"type":"ArrayExpression","start":1873,"end":2176,"elements":[{"type":"ObjectExpression","start":1874,"end":1973,"properties":[{"type":"Property","start":1876,"end":1899,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1876,"end":1880,"name":"type"},"value":{"type":"MemberExpression","start":1882,"end":1899,"object":{"type":"Identifier","start":1882,"end":1884,"name":"i1"},"property":{"type":"Identifier","start":1885,"end":1899,"name":"FirebaseConfig"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":1901,"end":1971,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1901,"end":1911,"name":"decorators"},"value":{"type":"ArrayExpression","start":1913,"end":1971,"elements":[{"type":"ObjectExpression","start":1914,"end":1970,"properties":[{"type":"Property","start":1937,"end":1951,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1937,"end":1941,"name":"type"},"value":{"type":"Identifier","start":1943,"end":1951,"name":"Optional"},"kind":"init"}]}]},"kind":"init"}]},{"type":"ObjectExpression","start":1975,"end":2175,"properties":[{"type":"Property","start":1977,"end":1992,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1977,"end":1981,"name":"type"},"value":{"type":"Identifier","start":1983,"end":1992,"name":"undefined"},"kind":"init"},{"type":"Property","start":1994,"end":2173,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1994,"end":2004,"name":"decorators"},"value":{"type":"ArrayExpression","start":2006,"end":2173,"elements":[{"type":"ObjectExpression","start":2007,"end":2063,"properties":[{"type":"Property","start":2030,"end":2044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2030,"end":2034,"name":"type"},"value":{"type":"Identifier","start":2036,"end":2044,"name":"Optional"},"kind":"init"}]},{"type":"ObjectExpression","start":2065,"end":2172,"properties":[{"type":"Property","start":2088,"end":2100,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2088,"end":2092,"name":"type"},"value":{"type":"Identifier","start":2094,"end":2100,"name":"Inject"},"kind":"init"},{"type":"Property","start":2123,"end":2153,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2123,"end":2127,"name":"args"},"value":{"type":"ArrayExpression","start":2129,"end":2153,"elements":[{"type":"Identifier","start":2130,"end":2152,"name":"FIRESTORE_USE_EMULATOR"}]},"kind":"init"}]}]},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","start":2185,"end":5555}]},"code":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","firebase/app","firebase/firestore"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { FIRESTORE_USE_EMULATOR } from './config';\r\nimport firebase, { initializeApp } from 'firebase/app';\r\nimport { connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./config\";\r\nexport class NgxFirebaseService {\r\n    constructor(config, emulatorConfig) {\r\n        this.emulatorConfig = emulatorConfig;\r\n        if (!firebase.getApps().length) {\r\n            if (config) {\r\n                this.firebaseApp = initializeApp(config);\r\n            }\r\n            else {\r\n                throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig');\r\n            }\r\n        }\r\n        else {\r\n            this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\r\n        }\r\n        if (emulatorConfig) {\r\n            connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\r\n            // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\r\n        }\r\n    }\r\n}\r\nNgxFirebaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, deps: [{ token: i1.FirebaseConfig, optional: true }, { token: FIRESTORE_USE_EMULATOR, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirebaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirebaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.FirebaseConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [FIRESTORE_USE_EMULATOR]\r\n                }] }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmViYXNlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9maXJlc3RvcmUtZXh0ZW5kZWQvc3JjL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sRUFBaUIsc0JBQXNCLEVBQTBCLE1BQU0sVUFBVSxDQUFDO0FBQ3pGLE9BQU8sUUFBUSxFQUFFLEVBQWMsYUFBYSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyx3QkFBd0IsRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBTzNFLE1BQU0sT0FBTyxrQkFBa0I7SUFTN0IsWUFBd0IsTUFBdUIsRUFDZ0IsY0FBd0M7UUFBeEMsbUJBQWMsR0FBZCxjQUFjLENBQTBCO1FBRXJHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFO1lBQzlCLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzFDO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMseUVBQXlFLENBQUMsQ0FBQTthQUMzRjtTQUVGO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHVDQUF1QztTQUNsRjtRQUVELElBQUksY0FBYyxFQUFFO1lBQ2xCLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3pHLDhGQUE4RjtTQUMvRjtJQUNILENBQUM7OytHQTNCVSxrQkFBa0IsZ0VBVUcsc0JBQXNCO21IQVYzQyxrQkFBa0IsY0FIakIsTUFBTTsyRkFHUCxrQkFBa0I7a0JBSjlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFXYyxRQUFROzswQkFDUixRQUFROzswQkFBSSxNQUFNOzJCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7RmlyZWJhc2VDb25maWcsIEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IsIEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgZmlyZWJhc2UsIHtGaXJlYmFzZUFwcCwgaW5pdGlhbGl6ZUFwcH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7Y29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yLCBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuXG5leHBvcnQgY2xhc3MgTmd4RmlyZWJhc2VTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIFNlcnZpY2UgdGhhdCBob2xkcyB0aGUgRmlyZWJhc2UgQXBwXG4gICAqIEluamVjdCB0aGlzIHNlcnZpY2UgaW50byBhbnkgb3RoZXIgc2VydmljZSB0aGF0IHJlcXVpcmVzIHRoZSBGaXJlYmFzZSBBcHBcbiAgICpcbiAgICogRm9yIGV4YW1wbGUgTmd4RmlyZVN0b3JlRXh0ZW5kZWRTZXJ2aWNlIGluamVjdHMgdGhpcyBzZXJ2aWNlXG4gICAqL1xuICBwdWJsaWMgZmlyZWJhc2VBcHA6IEZpcmViYXNlQXBwO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IEZpcmViYXNlQ29uZmlnLFxuICAgICAgICAgICAgICBAT3B0aW9uYWwoKSBASW5qZWN0KEZJUkVTVE9SRV9VU0VfRU1VTEFUT1IpIHB1YmxpYyBlbXVsYXRvckNvbmZpZz86IEZpcmVzdG9yZUVtdWxhdG9yQ29uZmlnKSB7XG5cbiAgICBpZiAoIWZpcmViYXNlLmdldEFwcHMoKS5sZW5ndGgpIHtcbiAgICAgIGlmIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoY29uZmlnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcHJldmlvdXMgRmlyZWJhc2UgQXBwIGluaXRpYWxpemVkIHNvIHBsZWFzZSBwcm92aWRlIGEgRmlyZWJhc2VDb25maWcnKVxuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlyZWJhc2VBcHAgPSBmaXJlYmFzZS5nZXRBcHBzKClbMF07IC8vIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWQsIHVzZSB0aGF0IG9uZVxuICAgIH1cblxuICAgIGlmIChlbXVsYXRvckNvbmZpZykge1xuICAgICAgY29ubmVjdEZpcmVzdG9yZUVtdWxhdG9yKGdldEZpcmVzdG9yZSh0aGlzLmZpcmViYXNlQXBwKSwgZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY5XG4gICAgICAvLyBnZXRGaXJlc3RvcmUodGhpcy5maXJlYmFzZUFwcCkudXNlRW11bGF0b3IoZW11bGF0b3JDb25maWcuaG9zdCwgZW11bGF0b3JDb25maWcucG9ydCk7IC8vIHY4XG4gICAgfVxuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firebase.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firebase.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,16],[27,0,0,26],[29,0,0,28],[37,0,0,36],[39,0,0,37],[45,0,0,43],[60,0,0,58],[61,0,0,59]],[[0,0,2,0],[7,0,2,7],[9,0,2,24],[31,0,2,46],[33,0,2,72],[39,0,2,78],[49,0,2,88],[50,0,2,89]],[[0,0,3,0],[7,0,3,7],[15,0,3,15],[17,0,3,17],[19,0,3,31],[32,0,3,44],[34,0,3,45],[40,0,3,51],[54,0,3,65],[55,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[33,0,4,32],[35,0,4,34],[47,0,4,46],[49,0,4,48],[55,0,4,54],[75,0,4,74],[76,0,4,75]],[],[],[[0,0,11,0],[6,0,11,6],[13,0,11,13],[31,0,11,31]],[[4,0,20,2],[16,0,20,26],[22,0,20,49],[24,0,21,65],[38,0,21,105]],[[8,0,21,65],[27,0,21,79],[30,0,21,65],[44,0,21,79],[45,0,21,105]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[22,0,23,18],[29,0,23,25],[31,0,23,27],[32,0,23,28],[38,0,23,34],[40,0,23,36]],[[12,0,24,6],[16,0,24,10],[22,0,24,16],[24,0,24,18]],[[16,0,25,8],[20,0,25,12],[21,0,25,13],[32,0,25,24],[35,0,25,27],[48,0,25,40],[49,0,25,41],[55,0,25,47],[56,0,25,48],[57,0,25,49]],[[13,0,26,7]],[[17,0,26,13]],[[16,0,27,8],[22,0,27,14],[26,0,27,18],[31,0,27,23],[32,0,27,24],[105,0,27,97],[106,0,27,98],[107,0,27,98]],[[13,0,28,7]],[[9,0,30,5]],[[13,0,30,11]],[[12,0,31,6],[16,0,31,10],[17,0,31,11],[28,0,31,22],[31,0,31,25],[39,0,31,33],[40,0,31,34],[47,0,31,41],[49,0,31,43],[50,0,31,44],[51,0,31,45],[52,0,31,46],[53,0,31,47],[54,0,31,48],[93,0,31,87]],[[9,0,32,5]],[[8,0,34,4],[12,0,34,8],[26,0,34,22],[28,0,34,24]],[[12,0,35,6],[36,0,35,30],[37,0,35,31],[49,0,35,43],[50,0,35,44],[54,0,35,48],[55,0,35,49],[66,0,35,60],[67,0,35,61],[69,0,35,63],[83,0,35,77],[84,0,35,78],[88,0,35,82],[90,0,35,84],[104,0,35,98],[105,0,35,99],[109,0,35,103],[110,0,35,104],[111,0,35,105],[112,0,35,106],[117,0,35,111]],[[12,0,36,6],[106,0,36,100]],[[9,0,37,5]],[[4,0,38,2],[5,0,38,3]],[],[[111,0,11,13],[129,0,11,31],[193,0,21,34],[215,0,21,56]],[[115,0,11,13],[133,0,11,31],[147,0,8,14],[153,0,8,20]],[[91,0,11,13],[109,0,11,31]],[[18,0,7,1],[28,0,7,11]],[[19,0,7,12]],[[20,0,8,2],[30,0,8,12],[32,0,8,14],[38,0,8,20]],[[17,0,9,1]],[],[[26,0,20,15],[34,0,20,23]],[],[[26,0,21,15],[34,0,21,23]],[],[[26,0,21,27],[32,0,21,33]],[[27,0,21,34],[49,0,21,56]]],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\n\nimport {FirebaseConfig, FIRESTORE_USE_EMULATOR, FirestoreEmulatorConfig} from './config';\nimport firebase, {FirebaseApp, initializeApp} from 'firebase/app';\nimport {connectFirestoreEmulator, getFirestore } from 'firebase/firestore';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxFirebaseService {\n  /**\n   * Service that holds the Firebase App\n   * Inject this service into any other service that requires the Firebase App\n   *\n   * For example NgxFireStoreExtendedService injects this service\n   */\n  public firebaseApp: FirebaseApp;\n\n  constructor(@Optional() config?: FirebaseConfig,\n              @Optional() @Inject(FIRESTORE_USE_EMULATOR) public emulatorConfig?: FirestoreEmulatorConfig) {\n\n    if (!firebase.getApps().length) {\n      if (config) {\n        this.firebaseApp = initializeApp(config);\n      } else {\n        throw new Error('No previous Firebase App initialized so please provide a FirebaseConfig')\n      }\n\n    } else {\n      this.firebaseApp = firebase.getApps()[0]; // if already initialized, use that one\n    }\n\n    if (emulatorConfig) {\n      connectFirestoreEmulator(getFirestore(this.firebaseApp), emulatorConfig.host, emulatorConfig.port); // v9\n      // getFirestore(this.firebaseApp).useEmulator(emulatorConfig.host, emulatorConfig.port); // v8\n    }\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/app":{"external":true,"id":"firebase/app","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"firebase/firestore":{"external":true,"id":"firebase/firestore","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3116,"body":[{"type":"ImportDeclaration","start":0,"end":43,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"Injectable"},"local":{"type":"Identifier","start":9,"end":19,"name":"Injectable"}}],"source":{"type":"Literal","start":27,"end":42,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":45,"end":104,"specifiers":[{"type":"ImportSpecifier","start":54,"end":66,"imported":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"},"local":{"type":"Identifier","start":54,"end":66,"name":"FirestoreExt"}}],"source":{"type":"Literal","start":74,"end":103,"value":"../firestore-extended.class","raw":"'../firestore-extended.class'"}},{"type":"ImportDeclaration","start":106,"end":142,"specifiers":[{"type":"ImportNamespaceSpecifier","start":113,"end":120,"local":{"type":"Identifier","start":118,"end":120,"name":"i0"}}],"source":{"type":"Literal","start":126,"end":141,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ImportDeclaration","start":144,"end":189,"specifiers":[{"type":"ImportNamespaceSpecifier","start":151,"end":158,"local":{"type":"Identifier","start":156,"end":158,"name":"i1"}}],"source":{"type":"Literal","start":164,"end":188,"value":"./ngx-firebase.service","raw":"\"./ngx-firebase.service\""}},{"type":"ExportNamedDeclaration","start":191,"end":581,"declaration":{"type":"ClassDeclaration","start":198,"end":581,"id":{"type":"Identifier","start":204,"end":231,"name":"NgxFirestoreExtendedService"},"superClass":null,"body":{"type":"ClassBody","start":232,"end":581,"body":[{"type":"MethodDefinition","start":239,"end":458,"static":false,"computed":false,"key":{"type":"Identifier","start":239,"end":250,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":250,"end":458,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":251,"end":269,"name":"ngxFirebaseService"}],"body":{"type":"BlockStatement","start":271,"end":458,"body":[{"type":"ExpressionStatement","start":282,"end":327,"expression":{"type":"AssignmentExpression","start":282,"end":326,"operator":"=","left":{"type":"MemberExpression","start":282,"end":305,"object":{"type":"ThisExpression","start":282,"end":286},"property":{"type":"Identifier","start":287,"end":305,"name":"ngxFirebaseService"},"computed":false,"optional":false},"right":{"type":"Identifier","start":308,"end":326,"name":"ngxFirebaseService"}}},{"type":"ExpressionStatement","start":337,"end":401,"expression":{"type":"AssignmentExpression","start":337,"end":400,"operator":"=","left":{"type":"MemberExpression","start":337,"end":349,"object":{"type":"ThisExpression","start":337,"end":341},"property":{"type":"Identifier","start":342,"end":349,"name":"fireExt"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":352,"end":400,"callee":{"type":"Identifier","start":356,"end":368,"name":"FirestoreExt"},"arguments":[{"type":"MemberExpression","start":369,"end":399,"object":{"type":"Identifier","start":369,"end":387,"name":"ngxFirebaseService"},"property":{"type":"Identifier","start":388,"end":399,"name":"firebaseApp"},"computed":false,"optional":false}]}}}]}}},{"type":"MethodDefinition","start":464,"end":578,"static":false,"computed":false,"key":{"type":"Identifier","start":468,"end":479,"name":"firebaseApp"},"kind":"get","value":{"type":"FunctionExpression","start":479,"end":578,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":482,"end":578,"body":[{"type":"ReturnStatement","start":528,"end":571,"argument":{"type":"MemberExpression","start":535,"end":570,"object":{"type":"MemberExpression","start":535,"end":558,"object":{"type":"ThisExpression","start":535,"end":539},"property":{"type":"Identifier","start":540,"end":558,"name":"ngxFirebaseService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":559,"end":570,"name":"firebaseApp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":583,"end":815,"expression":{"type":"AssignmentExpression","start":583,"end":814,"operator":"=","left":{"type":"MemberExpression","start":583,"end":615,"object":{"type":"Identifier","start":583,"end":610,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":611,"end":615,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":618,"end":814,"callee":{"type":"MemberExpression","start":618,"end":639,"object":{"type":"Identifier","start":618,"end":620,"name":"i0"},"property":{"type":"Identifier","start":621,"end":639,"name":"ɵɵngDeclareFactory"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":640,"end":813,"properties":[{"type":"Property","start":642,"end":662,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":642,"end":652,"name":"minVersion"},"value":{"type":"Literal","start":654,"end":662,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":664,"end":681,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":664,"end":671,"name":"version"},"value":{"type":"Literal","start":673,"end":681,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":683,"end":695,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":683,"end":691,"name":"ngImport"},"value":{"type":"Identifier","start":693,"end":695,"name":"i0"},"kind":"init"},{"type":"Property","start":697,"end":730,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":697,"end":701,"name":"type"},"value":{"type":"Identifier","start":703,"end":730,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":732,"end":772,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":732,"end":736,"name":"deps"},"value":{"type":"ArrayExpression","start":738,"end":772,"elements":[{"type":"ObjectExpression","start":739,"end":771,"properties":[{"type":"Property","start":741,"end":769,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":741,"end":746,"name":"token"},"value":{"type":"MemberExpression","start":748,"end":769,"object":{"type":"Identifier","start":748,"end":750,"name":"i1"},"property":{"type":"Identifier","start":751,"end":769,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":774,"end":811,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":774,"end":780,"name":"target"},"value":{"type":"MemberExpression","start":782,"end":811,"object":{"type":"MemberExpression","start":782,"end":800,"object":{"type":"Identifier","start":782,"end":784,"name":"i0"},"property":{"type":"Identifier","start":785,"end":800,"name":"ɵɵFactoryTarget"},"computed":false,"optional":false},"property":{"type":"Identifier","start":801,"end":811,"name":"Injectable"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":817,"end":992,"expression":{"type":"AssignmentExpression","start":817,"end":991,"operator":"=","left":{"type":"MemberExpression","start":817,"end":850,"object":{"type":"Identifier","start":817,"end":844,"name":"NgxFirestoreExtendedService"},"property":{"type":"Identifier","start":845,"end":850,"name":"ɵprov"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":853,"end":991,"callee":{"type":"MemberExpression","start":853,"end":877,"object":{"type":"Identifier","start":853,"end":855,"name":"i0"},"property":{"type":"Identifier","start":856,"end":877,"name":"ɵɵngDeclareInjectable"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":878,"end":990,"properties":[{"type":"Property","start":880,"end":900,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":880,"end":890,"name":"minVersion"},"value":{"type":"Literal","start":892,"end":900,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":902,"end":919,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":902,"end":909,"name":"version"},"value":{"type":"Literal","start":911,"end":919,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":921,"end":933,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":921,"end":929,"name":"ngImport"},"value":{"type":"Identifier","start":931,"end":933,"name":"i0"},"kind":"init"},{"type":"Property","start":935,"end":968,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":935,"end":939,"name":"type"},"value":{"type":"Identifier","start":941,"end":968,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":970,"end":988,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":970,"end":980,"name":"providedIn"},"value":{"type":"Literal","start":982,"end":988,"value":"root","raw":"'root'"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":994,"end":1332,"expression":{"type":"CallExpression","start":994,"end":1331,"callee":{"type":"MemberExpression","start":994,"end":1021,"object":{"type":"Identifier","start":994,"end":996,"name":"i0"},"property":{"type":"Identifier","start":997,"end":1021,"name":"ɵɵngDeclareClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":1022,"end":1330,"properties":[{"type":"Property","start":1024,"end":1044,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1024,"end":1034,"name":"minVersion"},"value":{"type":"Literal","start":1036,"end":1044,"value":"12.0.0","raw":"\"12.0.0\""},"kind":"init"},{"type":"Property","start":1046,"end":1063,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1046,"end":1053,"name":"version"},"value":{"type":"Literal","start":1055,"end":1063,"value":"13.1.1","raw":"\"13.1.1\""},"kind":"init"},{"type":"Property","start":1065,"end":1077,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1065,"end":1073,"name":"ngImport"},"value":{"type":"Identifier","start":1075,"end":1077,"name":"i0"},"kind":"init"},{"type":"Property","start":1079,"end":1112,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1079,"end":1083,"name":"type"},"value":{"type":"Identifier","start":1085,"end":1112,"name":"NgxFirestoreExtendedService"},"kind":"init"},{"type":"Property","start":1114,"end":1253,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1114,"end":1124,"name":"decorators"},"value":{"type":"ArrayExpression","start":1126,"end":1253,"elements":[{"type":"ObjectExpression","start":1127,"end":1252,"properties":[{"type":"Property","start":1142,"end":1158,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1142,"end":1146,"name":"type"},"value":{"type":"Identifier","start":1148,"end":1158,"name":"Injectable"},"kind":"init"},{"type":"Property","start":1173,"end":1241,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1173,"end":1177,"name":"args"},"value":{"type":"ArrayExpression","start":1179,"end":1241,"elements":[{"type":"ObjectExpression","start":1180,"end":1240,"properties":[{"type":"Property","start":1203,"end":1221,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1203,"end":1213,"name":"providedIn"},"value":{"type":"Literal","start":1215,"end":1221,"value":"root","raw":"'root'"},"kind":"init"}]}]},"kind":"init"}]}]},"kind":"init"},{"type":"Property","start":1255,"end":1328,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1255,"end":1269,"name":"ctorParameters"},"value":{"type":"FunctionExpression","start":1271,"end":1328,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1283,"end":1328,"body":[{"type":"ReturnStatement","start":1285,"end":1326,"argument":{"type":"ArrayExpression","start":1292,"end":1325,"elements":[{"type":"ObjectExpression","start":1293,"end":1324,"properties":[{"type":"Property","start":1295,"end":1322,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1295,"end":1299,"name":"type"},"value":{"type":"MemberExpression","start":1301,"end":1322,"object":{"type":"Identifier","start":1301,"end":1303,"name":"i1"},"property":{"type":"Identifier","start":1304,"end":1322,"name":"NgxFirebaseService"},"computed":false,"optional":false},"kind":"init"}]}]}}]}},"kind":"init"}]}],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","start":1334,"end":3116}]},"code":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","customTransformCache":false,"dependencies":["@angular/core","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Injectable } from '@angular/core';\r\nimport { FirestoreExt } from '../firestore-extended.class';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./ngx-firebase.service\";\r\nexport class NgxFirestoreExtendedService {\r\n    constructor(ngxFirebaseService) {\r\n        this.ngxFirebaseService = ngxFirebaseService;\r\n        this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp); /* inject Firebase App from NgxFirebaseService */\r\n    }\r\n    get firebaseApp() {\r\n        /** Convenience getter */\r\n        return this.ngxFirebaseService.firebaseApp;\r\n    }\r\n}\r\nNgxFirestoreExtendedService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, deps: [{ token: i1.NgxFirebaseService }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxFirestoreExtendedService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxFirestoreExtendedService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.NgxFirebaseService }]; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZpcmVzdG9yZS1leHRlbmRlZC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXpDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7O0FBS3pELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFFLGlEQUFpRDtJQUNySCxDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDOzt3SEFYVSwyQkFBMkI7NEhBQTNCLDJCQUEyQixjQUYxQixNQUFNOzJGQUVQLDJCQUEyQjtrQkFIdkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05neEZpcmViYXNlU2VydmljZX0gZnJvbSAnLi9uZ3gtZmlyZWJhc2Uuc2VydmljZSc7XG5pbXBvcnQge0ZpcmViYXNlQXBwfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHtGaXJlc3RvcmVFeHR9IGZyb20gJy4uL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5neEZpcmVzdG9yZUV4dGVuZGVkU2VydmljZSB7XG5cbiAgcHVibGljIGZpcmVFeHQ6IEZpcmVzdG9yZUV4dDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5neEZpcmViYXNlU2VydmljZTogTmd4RmlyZWJhc2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5maXJlRXh0ID0gbmV3IEZpcmVzdG9yZUV4dChuZ3hGaXJlYmFzZVNlcnZpY2UuZmlyZWJhc2VBcHApOyAgLyogaW5qZWN0IEZpcmViYXNlIEFwcCBmcm9tIE5neEZpcmViYXNlU2VydmljZSAqL1xuICB9XG5cbiAgZ2V0IGZpcmViYXNlQXBwKCk6IEZpcmViYXNlQXBwIHtcbiAgICAvKiogQ29udmVuaWVuY2UgZ2V0dGVyICovXG4gICAgcmV0dXJuIHRoaXMubmd4RmlyZWJhc2VTZXJ2aWNlLmZpcmViYXNlQXBwO1xuICB9XG59XG4iXX0=","originalSourcemap":{"version":3,"file":"ngx-firestore-extended.service.js","sourceRoot":"","sources":["../../../../../projects/firestore-extended/src/lib/ngx/ngx-firestore-extended.service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[19,0,0,18],[21,0,0,19],[27,0,0,25],[42,0,0,40],[43,0,0,41]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[58,0,4,56],[59,0,4,57]],[],[],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[40,0,9,40]],[[4,0,13,2],[16,0,13,22],[34,0,13,60]],[[8,0,13,22],[31,0,13,40],[34,0,13,22],[52,0,13,40],[53,0,13,60]],[[8,0,14,4],[12,0,14,8],[13,0,14,9],[20,0,14,16],[23,0,14,19],[27,0,14,23],[39,0,14,35],[40,0,14,36],[58,0,14,54],[59,0,14,55],[70,0,14,66],[71,0,14,67],[72,0,14,68],[73,0,14,70],[122,0,14,119]],[[4,0,15,2],[5,0,15,3]],[[4,0,17,2],[8,0,17,6],[19,0,17,17]],[[8,0,18,4],[33,0,18,29]],[[8,0,19,4],[15,0,19,11],[19,0,19,15],[20,0,19,16],[38,0,19,34],[39,0,19,35],[50,0,19,46],[51,0,19,47]],[[4,0,20,2],[5,0,20,3]],[],[[120,0,9,13],[147,0,9,40]],[[124,0,9,13],[151,0,9,40],[165,0,7,14],[171,0,7,20]],[[91,0,9,13],[118,0,9,40]],[[18,0,6,1],[28,0,6,11]],[[19,0,6,12]],[[20,0,7,2],[30,0,7,12],[32,0,7,14],[38,0,7,20]],[[17,0,8,1]]],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {NgxFirebaseService} from './ngx-firebase.service';\nimport {FirebaseApp} from 'firebase/app';\nimport {FirestoreExt} from '../firestore-extended.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFirestoreExtendedService {\n\n  public fireExt: FirestoreExt;\n\n  constructor(private ngxFirebaseService: NgxFirebaseService) {\n    this.fireExt = new FirestoreExt(ngxFirebaseService.firebaseApp);  /* inject Firebase App from NgxFirebaseService */\n  }\n\n  get firebaseApp(): FirebaseApp {\n    /** Convenience getter */\n    return this.ngxFirebaseService.firebaseApp;\n  }\n}\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2524,"body":[{"type":"ExportAllDeclaration","start":81,"end":124,"exported":null,"source":{"type":"Literal","start":95,"end":123,"value":"./lib/models/firestoreItem","raw":"'./lib/models/firestoreItem'"}},{"type":"ExportAllDeclaration","start":126,"end":167,"exported":null,"source":{"type":"Literal","start":140,"end":166,"value":"./lib/firestore-extended","raw":"'./lib/firestore-extended'"}},{"type":"ExportAllDeclaration","start":169,"end":212,"exported":null,"source":{"type":"Literal","start":183,"end":211,"value":"./lib/sub-collection-query","raw":"'./lib/sub-collection-query'"}},{"type":"ExportAllDeclaration","start":214,"end":258,"exported":null,"source":{"type":"Literal","start":228,"end":257,"value":"./lib/sub-collection-writer","raw":"'./lib/sub-collection-writer'"}},{"type":"ExportAllDeclaration","start":260,"end":290,"exported":null,"source":{"type":"Literal","start":274,"end":289,"value":"./lib/helpers","raw":"'./lib/helpers'"}},{"type":"ExportAllDeclaration","start":292,"end":325,"exported":null,"source":{"type":"Literal","start":306,"end":324,"value":"./lib/interfaces","raw":"'./lib/interfaces'"}},{"type":"ExportAllDeclaration","start":351,"end":407,"exported":null,"source":{"type":"Literal","start":365,"end":406,"value":"./lib/rxjs-ops/combine-latest-to-object","raw":"'./lib/rxjs-ops/combine-latest-to-object'"}},{"type":"ExportAllDeclaration","start":449,"end":496,"exported":null,"source":{"type":"Literal","start":463,"end":495,"value":"./lib/firestore-extended.class","raw":"'./lib/firestore-extended.class'"}},{"type":"ExportAllDeclaration","start":498,"end":538,"exported":null,"source":{"type":"Literal","start":512,"end":537,"value":"./lib/firestore-wrapper","raw":"'./lib/firestore-wrapper'"}},{"type":"ExportAllDeclaration","start":563,"end":596,"exported":null,"source":{"type":"Literal","start":577,"end":595,"value":"./lib/ngx/config","raw":"'./lib/ngx/config'"}},{"type":"ExportAllDeclaration","start":598,"end":644,"exported":null,"source":{"type":"Literal","start":612,"end":643,"value":"./lib/ngx/ngx-firebase.module","raw":"'./lib/ngx/ngx-firebase.module'"}},{"type":"ExportAllDeclaration","start":646,"end":693,"exported":null,"source":{"type":"Literal","start":660,"end":692,"value":"./lib/ngx/ngx-firebase.service","raw":"'./lib/ngx/ngx-firebase.service'"}},{"type":"ExportAllDeclaration","start":695,"end":752,"exported":null,"source":{"type":"Literal","start":709,"end":751,"value":"./lib/ngx/ngx-firestore-extended.service","raw":"'./lib/ngx/ngx-firestore-extended.service'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","start":754,"end":2524}]},"code":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of firestore-extended.ts\r\n */\r\n/* Base Api exports */\r\nexport * from './lib/models/firestoreItem';\r\nexport * from './lib/firestore-extended';\r\nexport * from './lib/sub-collection-query';\r\nexport * from './lib/sub-collection-writer';\r\nexport * from './lib/helpers';\r\nexport * from './lib/interfaces';\r\n/* Helper functions */\r\nexport * from './lib/rxjs-ops/combine-latest-to-object';\r\n/* Wrappers and Convenience Classes */\r\nexport * from './lib/firestore-extended.class';\r\nexport * from './lib/firestore-wrapper';\r\n/* Angular Exports */\r\nexport * from './lib/ngx/config';\r\nexport * from './lib/ngx/ngx-firebase.module';\r\nexport * from './lib/ngx/ngx-firebase.service';\r\nexport * from './lib/ngx/ngx-firestore-extended.service';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL2ZpcmVzdG9yZS1leHRlbmRlZC9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILHNCQUFzQjtBQUN0QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFFakMsc0JBQXNCO0FBQ3RCLGNBQWMseUNBQXlDLENBQUM7QUFFeEQsc0NBQXNDO0FBQ3RDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxxQkFBcUI7QUFDckIsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgZmlyZXN0b3JlLWV4dGVuZGVkLnRzXG4gKi9cbi8qIEJhc2UgQXBpIGV4cG9ydHMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL21vZGVscy9maXJlc3RvcmVJdGVtJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi1xdWVyeSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9zdWItY29sbGVjdGlvbi13cml0ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvaGVscGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9pbnRlcmZhY2VzJztcblxuLyogSGVscGVyIGZ1bmN0aW9ucyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvcnhqcy1vcHMvY29tYmluZS1sYXRlc3QtdG8tb2JqZWN0JztcblxuLyogV3JhcHBlcnMgYW5kIENvbnZlbmllbmNlIENsYXNzZXMgKi9cbmV4cG9ydCAqIGZyb20gJy4vbGliL2ZpcmVzdG9yZS1leHRlbmRlZC5jbGFzcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9maXJlc3RvcmUtd3JhcHBlcic7XG5cbi8qIEFuZ3VsYXIgRXhwb3J0cyAqL1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L2NvbmZpZyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gvbmd4LWZpcmViYXNlLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvbmd4L25neC1maXJlc3RvcmUtZXh0ZW5kZWQuc2VydmljZSc7XG5cbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[22,0,3,22]],[[0,0,4,0],[14,0,4,14],[42,0,4,42],[43,0,4,43]],[[0,0,5,0],[14,0,5,14],[40,0,5,40],[41,0,5,41]],[[0,0,6,0],[14,0,6,14],[42,0,6,42],[43,0,6,43]],[[0,0,7,0],[14,0,7,14],[43,0,7,43],[44,0,7,44]],[[0,0,8,0],[14,0,8,14],[29,0,8,29],[30,0,8,30]],[[0,0,9,0],[14,0,9,14],[32,0,9,32],[33,0,9,33]],[[0,0,11,0],[22,0,11,22]],[[0,0,12,0],[14,0,12,14],[55,0,12,55],[56,0,12,56]],[[0,0,14,0],[38,0,14,38]],[[0,0,15,0],[14,0,15,14],[46,0,15,46],[47,0,15,47]],[[0,0,16,0],[14,0,16,14],[39,0,16,39],[40,0,16,40]],[[0,0,18,0],[21,0,18,21]],[[0,0,19,0],[14,0,19,14],[32,0,19,32],[33,0,19,33]],[[0,0,20,0],[14,0,20,14],[45,0,20,45],[46,0,20,46]],[[0,0,21,0],[14,0,21,14],[46,0,21,46],[47,0,21,47]],[[0,0,22,0],[14,0,22,14],[56,0,22,56],[57,0,22,57]]],"sourcesContent":["/*\n * Public API Surface of firestore-extended.ts\n */\n/* Base Api exports */\nexport * from './lib/models/firestoreItem';\nexport * from './lib/firestore-extended';\nexport * from './lib/sub-collection-query';\nexport * from './lib/sub-collection-writer';\nexport * from './lib/helpers';\nexport * from './lib/interfaces';\n\n/* Helper functions */\nexport * from './lib/rxjs-ops/combine-latest-to-object';\n\n/* Wrappers and Convenience Classes */\nexport * from './lib/firestore-extended.class';\nexport * from './lib/firestore-wrapper';\n\n/* Angular Exports */\nexport * from './lib/ngx/config';\nexport * from './lib/ngx/ngx-firebase.module';\nexport * from './lib/ngx/ngx-firebase.service';\nexport * from './lib/ngx/ngx-firestore-extended.service';\n\n"]},"resolvedIds":{"./lib/firestore-extended":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-query":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-query.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/sub-collection-writer":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\sub-collection-writer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/interfaces":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\interfaces.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/helpers":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\helpers.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-extended.class":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-extended.class.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/firestore-wrapper":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\firestore-wrapper.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/models/firestoreItem":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\models\\firestoreItem.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/rxjs-ops/combine-latest-to-object":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\rxjs-ops\\combine-latest-to-object.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/config":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\config.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.module":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firestore-extended.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firestore-extended.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./lib/ngx/ngx-firebase.service":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\lib\\ngx\\ngx-firebase.service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":532,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","start":82,"end":532}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs"],"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\firestore-extended.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public-api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLWV4dGVuZGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvZmlyZXN0b3JlLWV4dGVuZGVkL3NyYy9maXJlc3RvcmUtZXh0ZW5kZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"firestore-extended.js","sourceRoot":"","sources":["../../../projects/firestore-extended/src/firestore-extended.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"D:\\Programming\\web\\ng\\libraries\\firestore-extended\\dist\\firestore-extended\\esm2020\\public-api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{}}}