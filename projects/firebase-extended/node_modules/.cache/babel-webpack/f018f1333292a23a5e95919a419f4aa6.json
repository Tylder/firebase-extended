{"ast":null,"code":"import _asyncToGenerator from \"C:/Programming/web/ng/libraries/rxfire-extended/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { deepCollectionName, default as TEST_PROJECT, firestoreEmulatorPort, nonDeepCollectionName } from './config';\nimport { RxFirestoreExtended } from '../rxfirestore-extended';\nimport { mockSimpleItems } from './mock/mockItems';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { waitForAsync } from '@angular/core/testing';\n\nconst createId = () => Math.random().toString(36).substring(5);\n\ndescribe('RxFire Firestore Extended', () => {\n  let app;\n  let firestore;\n  let rxFireExt;\n  let nonDeepCollectionRef;\n  let deepCollectionRef;\n  /**\r\n   * Each test runs inside it's own app instance and the app\r\n   * is deleted after the test runs.\r\n   *\r\n   * Each test is responsible for seeding and removing data. Helper\r\n   * functions are useful if the process becomes brittle or tedious.\r\n   * Note that removing is less necessary since the tests are run\r\n   * against the emulator\r\n   */\n\n  beforeEach(() => {\n    console.log('beforeEach');\n    app = firebase.initializeApp(TEST_PROJECT, createId());\n    firestore = app.firestore();\n    firestore.useEmulator('localhost', firestoreEmulatorPort);\n    rxFireExt = new RxFirestoreExtended(app); //  initialize RxFireStoreExtended with firestore\n\n    nonDeepCollectionRef = firestore.collection(nonDeepCollectionName);\n    deepCollectionRef = firestore.collection(deepCollectionName);\n  });\n  afterEach(() => {\n    app.delete().catch();\n  });\n  it('addDeep$ non deep', waitForAsync( /*#__PURE__*/_asyncToGenerator(function* () {\n    // Testing add Deep with non deep data\n    console.log('addDeep$ non deep');\n    const data = mockSimpleItems[0];\n    const collectionRef = firestore.collection('test');\n    return rxFireExt.addDeep$(data, nonDeepCollectionRef).subscribe(data => {\n      console.log(data);\n      expect(data).toBeTruthy();\n    });\n  })));\n});","map":{"version":3,"sources":["C:\\Programming\\web\\ng\\libraries\\rxfire-extended\\projects\\rxfire-extended\\src\\lib\\tests\\rxfirestore-extended.spec.ts"],"names":[],"mappings":";AAAA,SAAQ,kBAAR,EAA4B,OAAO,IAAI,YAAvC,EAAqD,qBAArD,EAA4E,qBAA5E,QAAwG,UAAxG;AACA,SAAQ,mBAAR,QAAkC,yBAAlC;AACA,SAAQ,eAAR,QAA8B,kBAA9B;AAEA,OAAO,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,SAAe,YAAf,QAAkC,uBAAlC;;AAEA,MAAM,QAAQ,GAAG,MAAc,IAAI,CAAC,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,SAA3B,CAAqC,CAArC,CAA/B;;AAEA,QAAQ,CAAC,2BAAD,EAA8B,MAAK;AACzC,MAAI,GAAJ;AACA,MAAI,SAAJ;AACA,MAAI,SAAJ;AACA,MAAI,oBAAJ;AACA,MAAI,iBAAJ;AAEA;;;;;;;;AAQG;;AACH,EAAA,UAAU,CAAC,MAAK;AACd,IAAA,OAAO,CAAC,GAAR,CAAY,YAAZ;AACA,IAAA,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,YAAvB,EAAqC,QAAQ,EAA7C,CAAN;AACA,IAAA,SAAS,GAAG,GAAG,CAAC,SAAJ,EAAZ;AACA,IAAA,SAAS,CAAC,WAAV,CAAsB,WAAtB,EAAmC,qBAAnC;AACA,IAAA,SAAS,GAAG,IAAI,mBAAJ,CAAwB,GAAxB,CAAZ,CALc,CAK6B;;AAE3C,IAAA,oBAAoB,GAAG,SAAS,CAAC,UAAV,CAAqB,qBAArB,CAAvB;AACA,IAAA,iBAAiB,GAAG,SAAS,CAAC,UAAV,CAAqB,kBAArB,CAApB;AACD,GATS,CAAV;AAWA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,GAAG,CAAC,MAAJ,GAAa,KAAb;AACD,GAFQ,CAAT;AAIA,EAAA,EAAE,CAAC,mBAAD,EAAsB,YAAY,iCAAC,aAAU;AAC7C;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACA,UAAM,IAAI,GAAG,eAAe,CAAC,CAAD,CAA5B;AACA,UAAM,aAAa,GAAG,SAAS,CAAC,UAAV,CAAqB,MAArB,CAAtB;AACA,WAAO,SAAS,CAAC,QAAV,CAAmB,IAAnB,EAAyB,oBAAzB,EACJ,SADI,CACM,IAAI,IAAG;AAChB,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,MAAA,MAAM,CAAC,IAAD,CAAN,CAAa,UAAb;AACD,KAJI,CAAP;AAOD,GAZmC,EAAlC,CAAF;AAcD,CA7CO,CAAR","sourcesContent":["import {deepCollectionName, default as TEST_PROJECT, firestoreEmulatorPort, nonDeepCollectionName} from './config';\r\nimport {RxFirestoreExtended} from '../rxfirestore-extended';\r\nimport {mockSimpleItems} from './mock/mockItems';\r\nimport CollectionReference = firebase.firestore.CollectionReference;\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {async, waitForAsync} from '@angular/core/testing';\r\n\r\nconst createId = (): string => Math.random().toString(36).substring(5);\r\n\r\ndescribe('RxFire Firestore Extended', () => {\r\n  let app: firebase.app.App;\r\n  let firestore: firebase.firestore.Firestore;\r\n  let rxFireExt: RxFirestoreExtended;\r\n  let nonDeepCollectionRef: CollectionReference;\r\n  let deepCollectionRef: CollectionReference;\r\n\r\n  /**\r\n   * Each test runs inside it's own app instance and the app\r\n   * is deleted after the test runs.\r\n   *\r\n   * Each test is responsible for seeding and removing data. Helper\r\n   * functions are useful if the process becomes brittle or tedious.\r\n   * Note that removing is less necessary since the tests are run\r\n   * against the emulator\r\n   */\r\n  beforeEach(() => {\r\n    console.log('beforeEach');\r\n    app = firebase.initializeApp(TEST_PROJECT, createId());\r\n    firestore = app.firestore();\r\n    firestore.useEmulator('localhost', firestoreEmulatorPort);\r\n    rxFireExt = new RxFirestoreExtended(app);  //  initialize RxFireStoreExtended with firestore\r\n\r\n    nonDeepCollectionRef = firestore.collection(nonDeepCollectionName)\r\n    deepCollectionRef = firestore.collection(deepCollectionName)\r\n  });\r\n\r\n  afterEach(() => {\r\n    app.delete().catch();\r\n  });\r\n\r\n  it('addDeep$ non deep', waitForAsync(async() => {\r\n    // Testing add Deep with non deep data\r\n    console.log('addDeep$ non deep');\r\n    const data = mockSimpleItems[0];\r\n    const collectionRef = firestore.collection('test')\r\n    return rxFireExt.addDeep$(data, nonDeepCollectionRef)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        expect(data).toBeTruthy();\r\n      });\r\n\r\n\r\n  });\r\n\r\n});\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}